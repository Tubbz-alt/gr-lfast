GAS LISTING /tmp/ccvUPO8Q.s 			page 1


   1              		.file	"costas2_impl.cc"
   2              		.text
   3              	.Ltext0:
   4              		.section	.rodata
   7              	_ZStL19piecewise_construct:
   8 0000 00       		.zero	1
   9              		.section	.text._ZNSt9exceptionC2Ev,"axG",@progbits,_ZNSt9exceptionC5Ev,comdat
  10              		.align 2
  11              		.weak	_ZNSt9exceptionC2Ev
  13              	_ZNSt9exceptionC2Ev:
  14              	.LFB304:
  15              		.file 1 "/usr/include/c++/6/exception"
   1:/usr/include/c++/6/exception **** // Exception Handling support header for -*- C++ -*-
   2:/usr/include/c++/6/exception **** 
   3:/usr/include/c++/6/exception **** // Copyright (C) 1995-2016 Free Software Foundation, Inc.
   4:/usr/include/c++/6/exception **** //
   5:/usr/include/c++/6/exception **** // This file is part of GCC.
   6:/usr/include/c++/6/exception **** //
   7:/usr/include/c++/6/exception **** // GCC is free software; you can redistribute it and/or modify
   8:/usr/include/c++/6/exception **** // it under the terms of the GNU General Public License as published by
   9:/usr/include/c++/6/exception **** // the Free Software Foundation; either version 3, or (at your option)
  10:/usr/include/c++/6/exception **** // any later version.
  11:/usr/include/c++/6/exception **** //
  12:/usr/include/c++/6/exception **** // GCC is distributed in the hope that it will be useful,
  13:/usr/include/c++/6/exception **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  14:/usr/include/c++/6/exception **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  15:/usr/include/c++/6/exception **** // GNU General Public License for more details.
  16:/usr/include/c++/6/exception **** //
  17:/usr/include/c++/6/exception **** // Under Section 7 of GPL version 3, you are granted additional
  18:/usr/include/c++/6/exception **** // permissions described in the GCC Runtime Library Exception, version
  19:/usr/include/c++/6/exception **** // 3.1, as published by the Free Software Foundation.
  20:/usr/include/c++/6/exception **** 
  21:/usr/include/c++/6/exception **** // You should have received a copy of the GNU General Public License and
  22:/usr/include/c++/6/exception **** // a copy of the GCC Runtime Library Exception along with this program;
  23:/usr/include/c++/6/exception **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  24:/usr/include/c++/6/exception **** // <http://www.gnu.org/licenses/>.
  25:/usr/include/c++/6/exception **** 
  26:/usr/include/c++/6/exception **** /** @file exception
  27:/usr/include/c++/6/exception ****  *  This is a Standard C++ Library header.
  28:/usr/include/c++/6/exception ****  */
  29:/usr/include/c++/6/exception **** 
  30:/usr/include/c++/6/exception **** #ifndef __EXCEPTION__
  31:/usr/include/c++/6/exception **** #define __EXCEPTION__
  32:/usr/include/c++/6/exception **** 
  33:/usr/include/c++/6/exception **** #pragma GCC system_header
  34:/usr/include/c++/6/exception **** 
  35:/usr/include/c++/6/exception **** #pragma GCC visibility push(default)
  36:/usr/include/c++/6/exception **** 
  37:/usr/include/c++/6/exception **** #include <bits/c++config.h>
  38:/usr/include/c++/6/exception **** #if !(defined(__ARM_EABI__) && !defined(__ARM_PCS_VFP))
  39:/usr/include/c++/6/exception **** #include <bits/atomic_lockfree_defines.h>
  40:/usr/include/c++/6/exception **** #endif
  41:/usr/include/c++/6/exception **** 
  42:/usr/include/c++/6/exception **** extern "C++" {
  43:/usr/include/c++/6/exception **** 
  44:/usr/include/c++/6/exception **** namespace std
  45:/usr/include/c++/6/exception **** {
GAS LISTING /tmp/ccvUPO8Q.s 			page 2


  46:/usr/include/c++/6/exception ****   /**
  47:/usr/include/c++/6/exception ****    * @defgroup exceptions Exceptions
  48:/usr/include/c++/6/exception ****    * @ingroup diagnostics
  49:/usr/include/c++/6/exception ****    *
  50:/usr/include/c++/6/exception ****    * Classes and functions for reporting errors via exception classes.
  51:/usr/include/c++/6/exception ****    * @{
  52:/usr/include/c++/6/exception ****    */
  53:/usr/include/c++/6/exception **** 
  54:/usr/include/c++/6/exception ****   /**
  55:/usr/include/c++/6/exception ****    *  @brief Base class for all library exceptions.
  56:/usr/include/c++/6/exception ****    *
  57:/usr/include/c++/6/exception ****    *  This is the base class for all exceptions thrown by the standard
  58:/usr/include/c++/6/exception ****    *  library, and by certain language expressions.  You are free to derive
  59:/usr/include/c++/6/exception ****    *  your own %exception classes, or use a different hierarchy, or to
  60:/usr/include/c++/6/exception ****    *  throw non-class data (e.g., fundamental types).
  61:/usr/include/c++/6/exception ****    */
  62:/usr/include/c++/6/exception ****   class exception
  63:/usr/include/c++/6/exception ****   {
  64:/usr/include/c++/6/exception ****   public:
  65:/usr/include/c++/6/exception ****     exception() _GLIBCXX_USE_NOEXCEPT { }
  16              		.loc 1 65 0
  17              		.cfi_startproc
  18 0000 55       		pushq	%rbp
  19              		.cfi_def_cfa_offset 16
  20              		.cfi_offset 6, -16
  21 0001 4889E5   		movq	%rsp, %rbp
  22              		.cfi_def_cfa_register 6
  23 0004 48897DF8 		movq	%rdi, -8(%rbp)
  24              	.LBB2:
  25              		.loc 1 65 0
  26 0008 488D1500 		leaq	16+_ZTVSt9exception(%rip), %rdx
  26      000000
  27 000f 488B45F8 		movq	-8(%rbp), %rax
  28 0013 488910   		movq	%rdx, (%rax)
  29              	.LBE2:
  30 0016 90       		nop
  31 0017 5D       		popq	%rbp
  32              		.cfi_def_cfa 7, 8
  33 0018 C3       		ret
  34              		.cfi_endproc
  35              	.LFE304:
  37              		.weak	_ZNSt9exceptionC1Ev
  38              		.set	_ZNSt9exceptionC1Ev,_ZNSt9exceptionC2Ev
  39              		.section	.text._ZNSt13bad_exceptionC2Ev,"axG",@progbits,_ZNSt13bad_exceptionC5Ev,comdat
  40              		.align 2
  41              		.weak	_ZNSt13bad_exceptionC2Ev
  43              	_ZNSt13bad_exceptionC2Ev:
  44              	.LFB307:
  66:/usr/include/c++/6/exception ****     virtual ~exception() _GLIBCXX_TXN_SAFE_DYN _GLIBCXX_USE_NOEXCEPT;
  67:/usr/include/c++/6/exception **** 
  68:/usr/include/c++/6/exception ****     /** Returns a C-style character string describing the general cause
  69:/usr/include/c++/6/exception ****      *  of the current error.  */
  70:/usr/include/c++/6/exception ****     virtual const char*
  71:/usr/include/c++/6/exception ****     what() const _GLIBCXX_TXN_SAFE_DYN _GLIBCXX_USE_NOEXCEPT;
  72:/usr/include/c++/6/exception ****   };
  73:/usr/include/c++/6/exception **** 
  74:/usr/include/c++/6/exception ****   /** If an %exception is thrown which is not listed in a function's
GAS LISTING /tmp/ccvUPO8Q.s 			page 3


  75:/usr/include/c++/6/exception ****    *  %exception specification, one of these may be thrown.  */
  76:/usr/include/c++/6/exception ****   class bad_exception : public exception
  77:/usr/include/c++/6/exception ****   {
  78:/usr/include/c++/6/exception ****   public:
  79:/usr/include/c++/6/exception ****     bad_exception() _GLIBCXX_USE_NOEXCEPT { }
  45              		.loc 1 79 0
  46              		.cfi_startproc
  47 0000 55       		pushq	%rbp
  48              		.cfi_def_cfa_offset 16
  49              		.cfi_offset 6, -16
  50 0001 4889E5   		movq	%rsp, %rbp
  51              		.cfi_def_cfa_register 6
  52 0004 4883EC10 		subq	$16, %rsp
  53 0008 48897DF8 		movq	%rdi, -8(%rbp)
  54              	.LBB3:
  55              		.loc 1 79 0
  56 000c 488B45F8 		movq	-8(%rbp), %rax
  57 0010 4889C7   		movq	%rax, %rdi
  58 0013 E8000000 		call	_ZNSt9exceptionC2Ev
  58      00
  59 0018 488D1500 		leaq	16+_ZTVSt13bad_exception(%rip), %rdx
  59      000000
  60 001f 488B45F8 		movq	-8(%rbp), %rax
  61 0023 488910   		movq	%rdx, (%rax)
  62              	.LBE3:
  63 0026 90       		nop
  64 0027 C9       		leave
  65              		.cfi_def_cfa 7, 8
  66 0028 C3       		ret
  67              		.cfi_endproc
  68              	.LFE307:
  70              		.weak	_ZNSt13bad_exceptionC1Ev
  71              		.set	_ZNSt13bad_exceptionC1Ev,_ZNSt13bad_exceptionC2Ev
  72              		.section	.text._ZNSt9bad_allocC2Ev,"axG",@progbits,_ZNSt9bad_allocC5Ev,comdat
  73              		.align 2
  74              		.weak	_ZNSt9bad_allocC2Ev
  76              	_ZNSt9bad_allocC2Ev:
  77              	.LFB334:
  78              		.file 2 "/usr/include/c++/6/new"
   1:/usr/include/c++/6/new **** // The -*- C++ -*- dynamic memory management header.
   2:/usr/include/c++/6/new **** 
   3:/usr/include/c++/6/new **** // Copyright (C) 1994-2016 Free Software Foundation, Inc.
   4:/usr/include/c++/6/new **** 
   5:/usr/include/c++/6/new **** // This file is part of GCC.
   6:/usr/include/c++/6/new **** //
   7:/usr/include/c++/6/new **** // GCC is free software; you can redistribute it and/or modify
   8:/usr/include/c++/6/new **** // it under the terms of the GNU General Public License as published by
   9:/usr/include/c++/6/new **** // the Free Software Foundation; either version 3, or (at your option)
  10:/usr/include/c++/6/new **** // any later version.
  11:/usr/include/c++/6/new **** // 
  12:/usr/include/c++/6/new **** // GCC is distributed in the hope that it will be useful,
  13:/usr/include/c++/6/new **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  14:/usr/include/c++/6/new **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  15:/usr/include/c++/6/new **** // GNU General Public License for more details.
  16:/usr/include/c++/6/new **** // 
  17:/usr/include/c++/6/new **** // Under Section 7 of GPL version 3, you are granted additional
  18:/usr/include/c++/6/new **** // permissions described in the GCC Runtime Library Exception, version
GAS LISTING /tmp/ccvUPO8Q.s 			page 4


  19:/usr/include/c++/6/new **** // 3.1, as published by the Free Software Foundation.
  20:/usr/include/c++/6/new **** 
  21:/usr/include/c++/6/new **** // You should have received a copy of the GNU General Public License and
  22:/usr/include/c++/6/new **** // a copy of the GCC Runtime Library Exception along with this program;
  23:/usr/include/c++/6/new **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  24:/usr/include/c++/6/new **** // <http://www.gnu.org/licenses/>.
  25:/usr/include/c++/6/new **** 
  26:/usr/include/c++/6/new **** /** @file new
  27:/usr/include/c++/6/new ****  *  This is a Standard C++ Library header.
  28:/usr/include/c++/6/new ****  *
  29:/usr/include/c++/6/new ****  *  The header @c new defines several functions to manage dynamic memory and
  30:/usr/include/c++/6/new ****  *  handling memory allocation errors; see
  31:/usr/include/c++/6/new ****  *  http://gcc.gnu.org/onlinedocs/libstdc++/18_support/howto.html#4 for more.
  32:/usr/include/c++/6/new ****  */
  33:/usr/include/c++/6/new **** 
  34:/usr/include/c++/6/new **** #ifndef _NEW
  35:/usr/include/c++/6/new **** #define _NEW
  36:/usr/include/c++/6/new **** 
  37:/usr/include/c++/6/new **** #pragma GCC system_header
  38:/usr/include/c++/6/new **** 
  39:/usr/include/c++/6/new **** #include <bits/c++config.h>
  40:/usr/include/c++/6/new **** #include <exception>
  41:/usr/include/c++/6/new **** 
  42:/usr/include/c++/6/new **** #pragma GCC visibility push(default)
  43:/usr/include/c++/6/new **** 
  44:/usr/include/c++/6/new **** extern "C++" {
  45:/usr/include/c++/6/new **** 
  46:/usr/include/c++/6/new **** namespace std 
  47:/usr/include/c++/6/new **** {
  48:/usr/include/c++/6/new ****   /**
  49:/usr/include/c++/6/new ****    *  @brief  Exception possibly thrown by @c new.
  50:/usr/include/c++/6/new ****    *  @ingroup exceptions
  51:/usr/include/c++/6/new ****    *
  52:/usr/include/c++/6/new ****    *  @c bad_alloc (or classes derived from it) is used to report allocation
  53:/usr/include/c++/6/new ****    *  errors from the throwing forms of @c new.  */
  54:/usr/include/c++/6/new ****   class bad_alloc : public exception 
  55:/usr/include/c++/6/new ****   {
  56:/usr/include/c++/6/new ****   public:
  57:/usr/include/c++/6/new ****     bad_alloc() throw() { }
  79              		.loc 2 57 0
  80              		.cfi_startproc
  81 0000 55       		pushq	%rbp
  82              		.cfi_def_cfa_offset 16
  83              		.cfi_offset 6, -16
  84 0001 4889E5   		movq	%rsp, %rbp
  85              		.cfi_def_cfa_register 6
  86 0004 4883EC10 		subq	$16, %rsp
  87 0008 48897DF8 		movq	%rdi, -8(%rbp)
  88              	.LBB4:
  89              		.loc 2 57 0
  90 000c 488B45F8 		movq	-8(%rbp), %rax
  91 0010 4889C7   		movq	%rax, %rdi
  92 0013 E8000000 		call	_ZNSt9exceptionC2Ev
  92      00
  93 0018 488D1500 		leaq	16+_ZTVSt9bad_alloc(%rip), %rdx
  93      000000
  94 001f 488B45F8 		movq	-8(%rbp), %rax
GAS LISTING /tmp/ccvUPO8Q.s 			page 5


  95 0023 488910   		movq	%rdx, (%rax)
  96              	.LBE4:
  97 0026 90       		nop
  98 0027 C9       		leave
  99              		.cfi_def_cfa 7, 8
 100 0028 C3       		ret
 101              		.cfi_endproc
 102              	.LFE334:
 104              		.weak	_ZNSt9bad_allocC1Ev
 105              		.set	_ZNSt9bad_allocC1Ev,_ZNSt9bad_allocC2Ev
 106              		.section	.text._ZnwmPv,"axG",@progbits,_ZnwmPv,comdat
 107              		.weak	_ZnwmPv
 109              	_ZnwmPv:
 110              	.LFB339:
  58:/usr/include/c++/6/new **** 
  59:/usr/include/c++/6/new ****     // This declaration is not useless:
  60:/usr/include/c++/6/new ****     // http://gcc.gnu.org/onlinedocs/gcc-3.0.2/gcc_6.html#SEC118
  61:/usr/include/c++/6/new ****     virtual ~bad_alloc() throw();
  62:/usr/include/c++/6/new **** 
  63:/usr/include/c++/6/new ****     // See comment in eh_exception.cc.
  64:/usr/include/c++/6/new ****     virtual const char* what() const throw();
  65:/usr/include/c++/6/new ****   };
  66:/usr/include/c++/6/new **** 
  67:/usr/include/c++/6/new **** #if __cplusplus >= 201103L
  68:/usr/include/c++/6/new ****   class bad_array_new_length : public bad_alloc
  69:/usr/include/c++/6/new ****   {
  70:/usr/include/c++/6/new ****   public:
  71:/usr/include/c++/6/new ****     bad_array_new_length() throw() { };
  72:/usr/include/c++/6/new **** 
  73:/usr/include/c++/6/new ****     // This declaration is not useless:
  74:/usr/include/c++/6/new ****     // http://gcc.gnu.org/onlinedocs/gcc-3.0.2/gcc_6.html#SEC118
  75:/usr/include/c++/6/new ****     virtual ~bad_array_new_length() throw();
  76:/usr/include/c++/6/new **** 
  77:/usr/include/c++/6/new ****     // See comment in eh_exception.cc.
  78:/usr/include/c++/6/new ****     virtual const char* what() const throw();
  79:/usr/include/c++/6/new ****   };
  80:/usr/include/c++/6/new **** #endif
  81:/usr/include/c++/6/new **** 
  82:/usr/include/c++/6/new ****   struct nothrow_t
  83:/usr/include/c++/6/new ****   {
  84:/usr/include/c++/6/new **** #if __cplusplus >= 201103L
  85:/usr/include/c++/6/new ****     explicit nothrow_t() = default;
  86:/usr/include/c++/6/new **** #endif
  87:/usr/include/c++/6/new ****   };
  88:/usr/include/c++/6/new **** 
  89:/usr/include/c++/6/new ****   extern const nothrow_t nothrow;
  90:/usr/include/c++/6/new **** 
  91:/usr/include/c++/6/new ****   /** If you write your own error handler to be called by @c new, it must
  92:/usr/include/c++/6/new ****    *  be of this type.  */
  93:/usr/include/c++/6/new ****   typedef void (*new_handler)();
  94:/usr/include/c++/6/new **** 
  95:/usr/include/c++/6/new ****   /// Takes a replacement handler as the argument, returns the
  96:/usr/include/c++/6/new ****   /// previous handler.
  97:/usr/include/c++/6/new ****   new_handler set_new_handler(new_handler) throw();
  98:/usr/include/c++/6/new **** 
  99:/usr/include/c++/6/new **** #if __cplusplus >= 201103L
 100:/usr/include/c++/6/new ****   /// Return the current new handler.
GAS LISTING /tmp/ccvUPO8Q.s 			page 6


 101:/usr/include/c++/6/new ****   new_handler get_new_handler() noexcept;
 102:/usr/include/c++/6/new **** #endif
 103:/usr/include/c++/6/new **** } // namespace std
 104:/usr/include/c++/6/new **** 
 105:/usr/include/c++/6/new **** //@{
 106:/usr/include/c++/6/new **** /** These are replaceable signatures:
 107:/usr/include/c++/6/new ****  *  - normal single new and delete (no arguments, throw @c bad_alloc on error)
 108:/usr/include/c++/6/new ****  *  - normal array new and delete (same)
 109:/usr/include/c++/6/new ****  *  - @c nothrow single new and delete (take a @c nothrow argument, return
 110:/usr/include/c++/6/new ****  *    @c NULL on error)
 111:/usr/include/c++/6/new ****  *  - @c nothrow array new and delete (same)
 112:/usr/include/c++/6/new ****  *
 113:/usr/include/c++/6/new ****  *  Placement new and delete signatures (take a memory address argument,
 114:/usr/include/c++/6/new ****  *  does nothing) may not be replaced by a user's program.
 115:/usr/include/c++/6/new **** */
 116:/usr/include/c++/6/new **** void* operator new(std::size_t) _GLIBCXX_THROW (std::bad_alloc)
 117:/usr/include/c++/6/new ****   __attribute__((__externally_visible__));
 118:/usr/include/c++/6/new **** void* operator new[](std::size_t) _GLIBCXX_THROW (std::bad_alloc)
 119:/usr/include/c++/6/new ****   __attribute__((__externally_visible__));
 120:/usr/include/c++/6/new **** void operator delete(void*) _GLIBCXX_USE_NOEXCEPT
 121:/usr/include/c++/6/new ****   __attribute__((__externally_visible__));
 122:/usr/include/c++/6/new **** void operator delete[](void*) _GLIBCXX_USE_NOEXCEPT
 123:/usr/include/c++/6/new ****   __attribute__((__externally_visible__));
 124:/usr/include/c++/6/new **** #if __cpp_sized_deallocation
 125:/usr/include/c++/6/new **** void operator delete(void*, std::size_t) _GLIBCXX_USE_NOEXCEPT
 126:/usr/include/c++/6/new ****   __attribute__((__externally_visible__));
 127:/usr/include/c++/6/new **** void operator delete[](void*, std::size_t) _GLIBCXX_USE_NOEXCEPT
 128:/usr/include/c++/6/new ****   __attribute__((__externally_visible__));
 129:/usr/include/c++/6/new **** #endif
 130:/usr/include/c++/6/new **** void* operator new(std::size_t, const std::nothrow_t&) _GLIBCXX_USE_NOEXCEPT
 131:/usr/include/c++/6/new ****   __attribute__((__externally_visible__));
 132:/usr/include/c++/6/new **** void* operator new[](std::size_t, const std::nothrow_t&) _GLIBCXX_USE_NOEXCEPT
 133:/usr/include/c++/6/new ****   __attribute__((__externally_visible__));
 134:/usr/include/c++/6/new **** void operator delete(void*, const std::nothrow_t&) _GLIBCXX_USE_NOEXCEPT
 135:/usr/include/c++/6/new ****   __attribute__((__externally_visible__));
 136:/usr/include/c++/6/new **** void operator delete[](void*, const std::nothrow_t&) _GLIBCXX_USE_NOEXCEPT
 137:/usr/include/c++/6/new ****   __attribute__((__externally_visible__));
 138:/usr/include/c++/6/new **** #if __cpp_sized_deallocation
 139:/usr/include/c++/6/new **** void operator delete(void*, std::size_t, const std::nothrow_t&) _GLIBCXX_USE_NOEXCEPT
 140:/usr/include/c++/6/new ****   __attribute__((__externally_visible__));
 141:/usr/include/c++/6/new **** void operator delete[](void*, std::size_t, const std::nothrow_t&) _GLIBCXX_USE_NOEXCEPT
 142:/usr/include/c++/6/new ****   __attribute__((__externally_visible__));
 143:/usr/include/c++/6/new **** #endif
 144:/usr/include/c++/6/new **** 
 145:/usr/include/c++/6/new **** // Default placement versions of operator new.
 146:/usr/include/c++/6/new **** inline void* operator new(std::size_t, void* __p) _GLIBCXX_USE_NOEXCEPT
 147:/usr/include/c++/6/new **** { return __p; }
 111              		.loc 2 147 0
 112              		.cfi_startproc
 113 0000 55       		pushq	%rbp
 114              		.cfi_def_cfa_offset 16
 115              		.cfi_offset 6, -16
 116 0001 4889E5   		movq	%rsp, %rbp
 117              		.cfi_def_cfa_register 6
 118 0004 48897DF8 		movq	%rdi, -8(%rbp)
 119 0008 488975F0 		movq	%rsi, -16(%rbp)
 120              		.loc 2 147 0
GAS LISTING /tmp/ccvUPO8Q.s 			page 7


 121 000c 488B45F0 		movq	-16(%rbp), %rax
 122 0010 5D       		popq	%rbp
 123              		.cfi_def_cfa 7, 8
 124 0011 C3       		ret
 125              		.cfi_endproc
 126              	.LFE339:
 128              		.section	.text._ZdlPvS_,"axG",@progbits,_ZdlPvS_,comdat
 129              		.weak	_ZdlPvS_
 131              	_ZdlPvS_:
 132              	.LFB341:
 148:/usr/include/c++/6/new **** inline void* operator new[](std::size_t, void* __p) _GLIBCXX_USE_NOEXCEPT
 149:/usr/include/c++/6/new **** { return __p; }
 150:/usr/include/c++/6/new **** 
 151:/usr/include/c++/6/new **** // Default placement versions of operator delete.
 152:/usr/include/c++/6/new **** inline void operator delete  (void*, void*) _GLIBCXX_USE_NOEXCEPT { }
 133              		.loc 2 152 0
 134              		.cfi_startproc
 135 0000 55       		pushq	%rbp
 136              		.cfi_def_cfa_offset 16
 137              		.cfi_offset 6, -16
 138 0001 4889E5   		movq	%rsp, %rbp
 139              		.cfi_def_cfa_register 6
 140 0004 48897DF8 		movq	%rdi, -8(%rbp)
 141 0008 488975F0 		movq	%rsi, -16(%rbp)
 142              		.loc 2 152 0
 143 000c 90       		nop
 144 000d 5D       		popq	%rbp
 145              		.cfi_def_cfa 7, 8
 146 000e C3       		ret
 147              		.cfi_endproc
 148              	.LFE341:
 150              		.section	.rodata
 151 0001 000000   		.align 4
 154              	_ZN9__gnu_cxxL21__default_lock_policyE:
 155 0004 02000000 		.long	2
 156              		.section	.text._ZNSt9exceptionC2ERKS_,"axG",@progbits,_ZNSt9exceptionC5ERKS_,comdat
 157              		.align 2
 158              		.weak	_ZNSt9exceptionC2ERKS_
 160              	_ZNSt9exceptionC2ERKS_:
 161              	.LFB554:
  62:/usr/include/c++/6/exception ****   {
 162              		.loc 1 62 0
 163              		.cfi_startproc
 164 0000 55       		pushq	%rbp
 165              		.cfi_def_cfa_offset 16
 166              		.cfi_offset 6, -16
 167 0001 4889E5   		movq	%rsp, %rbp
 168              		.cfi_def_cfa_register 6
 169 0004 48897DF8 		movq	%rdi, -8(%rbp)
 170 0008 488975F0 		movq	%rsi, -16(%rbp)
 171              	.LBB5:
  62:/usr/include/c++/6/exception ****   {
 172              		.loc 1 62 0
 173 000c 488D1500 		leaq	16+_ZTVSt9exception(%rip), %rdx
 173      000000
 174 0013 488B45F8 		movq	-8(%rbp), %rax
 175 0017 488910   		movq	%rdx, (%rax)
GAS LISTING /tmp/ccvUPO8Q.s 			page 8


 176              	.LBE5:
 177 001a 90       		nop
 178 001b 5D       		popq	%rbp
 179              		.cfi_def_cfa 7, 8
 180 001c C3       		ret
 181              		.cfi_endproc
 182              	.LFE554:
 184              		.weak	_ZNSt9exceptionC1ERKS_
 185              		.set	_ZNSt9exceptionC1ERKS_,_ZNSt9exceptionC2ERKS_
 186              		.section	.rodata
 189              	_ZStL13allocator_arg:
 190 0008 00       		.zero	1
 193              	_ZStL6ignore:
 194 0009 00       		.zero	1
 195              		.section	.text._ZN5boost10error_infoINS_15throw_function_EPKcEC2ES3_,"axG",@progbits,_ZN5boost10er
 196              		.align 2
 197              		.weak	_ZN5boost10error_infoINS_15throw_function_EPKcEC2ES3_
 199              	_ZN5boost10error_infoINS_15throw_function_EPKcEC2ES3_:
 200              	.LFB1923:
 201              		.file 3 "/usr/include/boost/exception/exception.hpp"
   1:/usr/include/boost/exception/exception.hpp **** //Copyright (c) 2006-2009 Emil Dotchevski and Reverge Studios, Inc.
   2:/usr/include/boost/exception/exception.hpp **** 
   3:/usr/include/boost/exception/exception.hpp **** //Distributed under the Boost Software License, Version 1.0. (See accompanying
   4:/usr/include/boost/exception/exception.hpp **** //file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
   5:/usr/include/boost/exception/exception.hpp **** 
   6:/usr/include/boost/exception/exception.hpp **** #ifndef UUID_274DA366004E11DCB1DDFE2E56D89593
   7:/usr/include/boost/exception/exception.hpp **** #define UUID_274DA366004E11DCB1DDFE2E56D89593
   8:/usr/include/boost/exception/exception.hpp **** #if (__GNUC__*100+__GNUC_MINOR__>301) && !defined(BOOST_EXCEPTION_ENABLE_WARNINGS)
   9:/usr/include/boost/exception/exception.hpp **** #pragma GCC system_header
  10:/usr/include/boost/exception/exception.hpp **** #endif
  11:/usr/include/boost/exception/exception.hpp **** #if defined(_MSC_VER) && !defined(BOOST_EXCEPTION_ENABLE_WARNINGS)
  12:/usr/include/boost/exception/exception.hpp **** #pragma warning(push,1)
  13:/usr/include/boost/exception/exception.hpp **** #endif
  14:/usr/include/boost/exception/exception.hpp **** 
  15:/usr/include/boost/exception/exception.hpp **** namespace
  16:/usr/include/boost/exception/exception.hpp **** boost
  17:/usr/include/boost/exception/exception.hpp ****     {
  18:/usr/include/boost/exception/exception.hpp ****     namespace
  19:/usr/include/boost/exception/exception.hpp ****     exception_detail
  20:/usr/include/boost/exception/exception.hpp ****         {
  21:/usr/include/boost/exception/exception.hpp ****         template <class T>
  22:/usr/include/boost/exception/exception.hpp ****         class
  23:/usr/include/boost/exception/exception.hpp ****         refcount_ptr
  24:/usr/include/boost/exception/exception.hpp ****             {
  25:/usr/include/boost/exception/exception.hpp ****             public:
  26:/usr/include/boost/exception/exception.hpp **** 
  27:/usr/include/boost/exception/exception.hpp ****             refcount_ptr():
  28:/usr/include/boost/exception/exception.hpp ****                 px_(0)
  29:/usr/include/boost/exception/exception.hpp ****                 {
  30:/usr/include/boost/exception/exception.hpp ****                 }
  31:/usr/include/boost/exception/exception.hpp **** 
  32:/usr/include/boost/exception/exception.hpp ****             ~refcount_ptr()
  33:/usr/include/boost/exception/exception.hpp ****                 {
  34:/usr/include/boost/exception/exception.hpp ****                 release();
  35:/usr/include/boost/exception/exception.hpp ****                 }
  36:/usr/include/boost/exception/exception.hpp **** 
  37:/usr/include/boost/exception/exception.hpp ****             refcount_ptr( refcount_ptr const & x ):
GAS LISTING /tmp/ccvUPO8Q.s 			page 9


  38:/usr/include/boost/exception/exception.hpp ****                 px_(x.px_)
  39:/usr/include/boost/exception/exception.hpp ****                 {
  40:/usr/include/boost/exception/exception.hpp ****                 add_ref();
  41:/usr/include/boost/exception/exception.hpp ****                 }
  42:/usr/include/boost/exception/exception.hpp **** 
  43:/usr/include/boost/exception/exception.hpp ****             refcount_ptr &
  44:/usr/include/boost/exception/exception.hpp ****             operator=( refcount_ptr const & x )
  45:/usr/include/boost/exception/exception.hpp ****                 {
  46:/usr/include/boost/exception/exception.hpp ****                 adopt(x.px_);
  47:/usr/include/boost/exception/exception.hpp ****                 return *this;
  48:/usr/include/boost/exception/exception.hpp ****                 }
  49:/usr/include/boost/exception/exception.hpp **** 
  50:/usr/include/boost/exception/exception.hpp ****             void
  51:/usr/include/boost/exception/exception.hpp ****             adopt( T * px )
  52:/usr/include/boost/exception/exception.hpp ****                 {
  53:/usr/include/boost/exception/exception.hpp ****                 release();
  54:/usr/include/boost/exception/exception.hpp ****                 px_=px;
  55:/usr/include/boost/exception/exception.hpp ****                 add_ref();
  56:/usr/include/boost/exception/exception.hpp ****                 }
  57:/usr/include/boost/exception/exception.hpp **** 
  58:/usr/include/boost/exception/exception.hpp ****             T *
  59:/usr/include/boost/exception/exception.hpp ****             get() const
  60:/usr/include/boost/exception/exception.hpp ****                 {
  61:/usr/include/boost/exception/exception.hpp ****                 return px_;
  62:/usr/include/boost/exception/exception.hpp ****                 }
  63:/usr/include/boost/exception/exception.hpp **** 
  64:/usr/include/boost/exception/exception.hpp ****             private:
  65:/usr/include/boost/exception/exception.hpp **** 
  66:/usr/include/boost/exception/exception.hpp ****             T * px_;
  67:/usr/include/boost/exception/exception.hpp **** 
  68:/usr/include/boost/exception/exception.hpp ****             void
  69:/usr/include/boost/exception/exception.hpp ****             add_ref()
  70:/usr/include/boost/exception/exception.hpp ****                 {
  71:/usr/include/boost/exception/exception.hpp ****                 if( px_ )
  72:/usr/include/boost/exception/exception.hpp ****                     px_->add_ref();
  73:/usr/include/boost/exception/exception.hpp ****                 }
  74:/usr/include/boost/exception/exception.hpp **** 
  75:/usr/include/boost/exception/exception.hpp ****             void
  76:/usr/include/boost/exception/exception.hpp ****             release()
  77:/usr/include/boost/exception/exception.hpp ****                 {
  78:/usr/include/boost/exception/exception.hpp ****                 if( px_ && px_->release() )
  79:/usr/include/boost/exception/exception.hpp ****                     px_=0;
  80:/usr/include/boost/exception/exception.hpp ****                 }
  81:/usr/include/boost/exception/exception.hpp ****             };
  82:/usr/include/boost/exception/exception.hpp ****         }
  83:/usr/include/boost/exception/exception.hpp **** 
  84:/usr/include/boost/exception/exception.hpp ****     ////////////////////////////////////////////////////////////////////////
  85:/usr/include/boost/exception/exception.hpp **** 
  86:/usr/include/boost/exception/exception.hpp ****     template <class Tag,class T>
  87:/usr/include/boost/exception/exception.hpp ****     class error_info;
  88:/usr/include/boost/exception/exception.hpp **** 
  89:/usr/include/boost/exception/exception.hpp ****     typedef error_info<struct throw_function_,char const *> throw_function;
  90:/usr/include/boost/exception/exception.hpp ****     typedef error_info<struct throw_file_,char const *> throw_file;
  91:/usr/include/boost/exception/exception.hpp ****     typedef error_info<struct throw_line_,int> throw_line;
  92:/usr/include/boost/exception/exception.hpp **** 
  93:/usr/include/boost/exception/exception.hpp ****     template <>
  94:/usr/include/boost/exception/exception.hpp ****     class
GAS LISTING /tmp/ccvUPO8Q.s 			page 10


  95:/usr/include/boost/exception/exception.hpp ****     error_info<throw_function_,char const *>
  96:/usr/include/boost/exception/exception.hpp ****         {
  97:/usr/include/boost/exception/exception.hpp ****         public:
  98:/usr/include/boost/exception/exception.hpp ****         typedef char const * value_type;
  99:/usr/include/boost/exception/exception.hpp ****         value_type v_;
 100:/usr/include/boost/exception/exception.hpp ****         explicit
 101:/usr/include/boost/exception/exception.hpp ****         error_info( value_type v ):
 202              		.loc 3 101 0
 203              		.cfi_startproc
 204 0000 55       		pushq	%rbp
 205              		.cfi_def_cfa_offset 16
 206              		.cfi_offset 6, -16
 207 0001 4889E5   		movq	%rsp, %rbp
 208              		.cfi_def_cfa_register 6
 209 0004 48897DF8 		movq	%rdi, -8(%rbp)
 210 0008 488975F0 		movq	%rsi, -16(%rbp)
 211              	.LBB6:
 102:/usr/include/boost/exception/exception.hpp ****             v_(v)
 212              		.loc 3 102 0
 213 000c 488B45F8 		movq	-8(%rbp), %rax
 214 0010 488B55F0 		movq	-16(%rbp), %rdx
 215 0014 488910   		movq	%rdx, (%rax)
 216              	.LBE6:
 103:/usr/include/boost/exception/exception.hpp ****             {
 104:/usr/include/boost/exception/exception.hpp ****             }
 217              		.loc 3 104 0
 218 0017 90       		nop
 219 0018 5D       		popq	%rbp
 220              		.cfi_def_cfa 7, 8
 221 0019 C3       		ret
 222              		.cfi_endproc
 223              	.LFE1923:
 225              		.weak	_ZN5boost10error_infoINS_15throw_function_EPKcEC1ES3_
 226              		.set	_ZN5boost10error_infoINS_15throw_function_EPKcEC1ES3_,_ZN5boost10error_infoINS_15throw_functi
 227              		.section	.text._ZN5boost10error_infoINS_11throw_file_EPKcEC2ES3_,"axG",@progbits,_ZN5boost10error_
 228              		.align 2
 229              		.weak	_ZN5boost10error_infoINS_11throw_file_EPKcEC2ES3_
 231              	_ZN5boost10error_infoINS_11throw_file_EPKcEC2ES3_:
 232              	.LFB1926:
 105:/usr/include/boost/exception/exception.hpp ****         };
 106:/usr/include/boost/exception/exception.hpp **** 
 107:/usr/include/boost/exception/exception.hpp ****     template <>
 108:/usr/include/boost/exception/exception.hpp ****     class
 109:/usr/include/boost/exception/exception.hpp ****     error_info<throw_file_,char const *>
 110:/usr/include/boost/exception/exception.hpp ****         {
 111:/usr/include/boost/exception/exception.hpp ****         public:
 112:/usr/include/boost/exception/exception.hpp ****         typedef char const * value_type;
 113:/usr/include/boost/exception/exception.hpp ****         value_type v_;
 114:/usr/include/boost/exception/exception.hpp ****         explicit
 115:/usr/include/boost/exception/exception.hpp ****         error_info( value_type v ):
 233              		.loc 3 115 0
 234              		.cfi_startproc
 235 0000 55       		pushq	%rbp
 236              		.cfi_def_cfa_offset 16
 237              		.cfi_offset 6, -16
 238 0001 4889E5   		movq	%rsp, %rbp
 239              		.cfi_def_cfa_register 6
GAS LISTING /tmp/ccvUPO8Q.s 			page 11


 240 0004 48897DF8 		movq	%rdi, -8(%rbp)
 241 0008 488975F0 		movq	%rsi, -16(%rbp)
 242              	.LBB7:
 116:/usr/include/boost/exception/exception.hpp ****             v_(v)
 243              		.loc 3 116 0
 244 000c 488B45F8 		movq	-8(%rbp), %rax
 245 0010 488B55F0 		movq	-16(%rbp), %rdx
 246 0014 488910   		movq	%rdx, (%rax)
 247              	.LBE7:
 117:/usr/include/boost/exception/exception.hpp ****             {
 118:/usr/include/boost/exception/exception.hpp ****             }
 248              		.loc 3 118 0
 249 0017 90       		nop
 250 0018 5D       		popq	%rbp
 251              		.cfi_def_cfa 7, 8
 252 0019 C3       		ret
 253              		.cfi_endproc
 254              	.LFE1926:
 256              		.weak	_ZN5boost10error_infoINS_11throw_file_EPKcEC1ES3_
 257              		.set	_ZN5boost10error_infoINS_11throw_file_EPKcEC1ES3_,_ZN5boost10error_infoINS_11throw_file_EPKcE
 258              		.section	.text._ZN5boost10error_infoINS_11throw_line_EiEC2Ei,"axG",@progbits,_ZN5boost10error_info
 259              		.align 2
 260              		.weak	_ZN5boost10error_infoINS_11throw_line_EiEC2Ei
 262              	_ZN5boost10error_infoINS_11throw_line_EiEC2Ei:
 263              	.LFB1929:
 119:/usr/include/boost/exception/exception.hpp ****         };
 120:/usr/include/boost/exception/exception.hpp **** 
 121:/usr/include/boost/exception/exception.hpp ****     template <>
 122:/usr/include/boost/exception/exception.hpp ****     class
 123:/usr/include/boost/exception/exception.hpp ****     error_info<throw_line_,int>
 124:/usr/include/boost/exception/exception.hpp ****         {
 125:/usr/include/boost/exception/exception.hpp ****         public:
 126:/usr/include/boost/exception/exception.hpp ****         typedef int value_type;
 127:/usr/include/boost/exception/exception.hpp ****         value_type v_;
 128:/usr/include/boost/exception/exception.hpp ****         explicit
 129:/usr/include/boost/exception/exception.hpp ****         error_info( value_type v ):
 264              		.loc 3 129 0
 265              		.cfi_startproc
 266 0000 55       		pushq	%rbp
 267              		.cfi_def_cfa_offset 16
 268              		.cfi_offset 6, -16
 269 0001 4889E5   		movq	%rsp, %rbp
 270              		.cfi_def_cfa_register 6
 271 0004 48897DF8 		movq	%rdi, -8(%rbp)
 272 0008 8975F4   		movl	%esi, -12(%rbp)
 273              	.LBB8:
 130:/usr/include/boost/exception/exception.hpp ****             v_(v)
 274              		.loc 3 130 0
 275 000b 488B45F8 		movq	-8(%rbp), %rax
 276 000f 8B55F4   		movl	-12(%rbp), %edx
 277 0012 8910     		movl	%edx, (%rax)
 278              	.LBE8:
 131:/usr/include/boost/exception/exception.hpp ****             {
 132:/usr/include/boost/exception/exception.hpp ****             }
 279              		.loc 3 132 0
 280 0014 90       		nop
 281 0015 5D       		popq	%rbp
GAS LISTING /tmp/ccvUPO8Q.s 			page 12


 282              		.cfi_def_cfa 7, 8
 283 0016 C3       		ret
 284              		.cfi_endproc
 285              	.LFE1929:
 287              		.weak	_ZN5boost10error_infoINS_11throw_line_EiEC1Ei
 288              		.set	_ZN5boost10error_infoINS_11throw_line_EiEC1Ei,_ZN5boost10error_infoINS_11throw_line_EiEC2Ei
 289              		.section	.text._ZN5boost9exceptionC2Ev,"axG",@progbits,_ZN5boost9exceptionC5Ev,comdat
 290              		.align 2
 291              		.weak	_ZN5boost9exceptionC2Ev
 293              	_ZN5boost9exceptionC2Ev:
 294              	.LFB1935:
 133:/usr/include/boost/exception/exception.hpp ****         };
 134:/usr/include/boost/exception/exception.hpp **** 
 135:/usr/include/boost/exception/exception.hpp **** #if defined(__GNUC__)
 136:/usr/include/boost/exception/exception.hpp **** # if (__GNUC__ == 4 && __GNUC_MINOR__ >= 1) || (__GNUC__ > 4)
 137:/usr/include/boost/exception/exception.hpp **** #  pragma GCC visibility push (default)
 138:/usr/include/boost/exception/exception.hpp **** # endif
 139:/usr/include/boost/exception/exception.hpp **** #endif
 140:/usr/include/boost/exception/exception.hpp ****     class exception;
 141:/usr/include/boost/exception/exception.hpp **** #if defined(__GNUC__)
 142:/usr/include/boost/exception/exception.hpp **** # if (__GNUC__ == 4 && __GNUC_MINOR__ >= 1) || (__GNUC__ > 4)
 143:/usr/include/boost/exception/exception.hpp **** #  pragma GCC visibility pop
 144:/usr/include/boost/exception/exception.hpp **** # endif
 145:/usr/include/boost/exception/exception.hpp **** #endif
 146:/usr/include/boost/exception/exception.hpp **** 
 147:/usr/include/boost/exception/exception.hpp ****     template <class T>
 148:/usr/include/boost/exception/exception.hpp ****     class shared_ptr;
 149:/usr/include/boost/exception/exception.hpp **** 
 150:/usr/include/boost/exception/exception.hpp ****     namespace
 151:/usr/include/boost/exception/exception.hpp ****     exception_detail
 152:/usr/include/boost/exception/exception.hpp ****         {
 153:/usr/include/boost/exception/exception.hpp ****         class error_info_base;
 154:/usr/include/boost/exception/exception.hpp ****         struct type_info_;
 155:/usr/include/boost/exception/exception.hpp **** 
 156:/usr/include/boost/exception/exception.hpp ****         struct
 157:/usr/include/boost/exception/exception.hpp ****         error_info_container
 158:/usr/include/boost/exception/exception.hpp ****             {
 159:/usr/include/boost/exception/exception.hpp ****             virtual char const * diagnostic_information( char const * ) const = 0;
 160:/usr/include/boost/exception/exception.hpp ****             virtual shared_ptr<error_info_base> get( type_info_ const & ) const = 0;
 161:/usr/include/boost/exception/exception.hpp ****             virtual void set( shared_ptr<error_info_base> const &, type_info_ const & ) = 0;
 162:/usr/include/boost/exception/exception.hpp ****             virtual void add_ref() const = 0;
 163:/usr/include/boost/exception/exception.hpp ****             virtual bool release() const = 0;
 164:/usr/include/boost/exception/exception.hpp ****             virtual refcount_ptr<exception_detail::error_info_container> clone() const = 0;
 165:/usr/include/boost/exception/exception.hpp **** 
 166:/usr/include/boost/exception/exception.hpp ****             protected:
 167:/usr/include/boost/exception/exception.hpp **** 
 168:/usr/include/boost/exception/exception.hpp ****             ~error_info_container() throw()
 169:/usr/include/boost/exception/exception.hpp ****                 {
 170:/usr/include/boost/exception/exception.hpp ****                 }
 171:/usr/include/boost/exception/exception.hpp ****             };
 172:/usr/include/boost/exception/exception.hpp **** 
 173:/usr/include/boost/exception/exception.hpp ****         template <class>
 174:/usr/include/boost/exception/exception.hpp ****         struct get_info;
 175:/usr/include/boost/exception/exception.hpp **** 
 176:/usr/include/boost/exception/exception.hpp ****         template <>
 177:/usr/include/boost/exception/exception.hpp ****         struct get_info<throw_function>;
 178:/usr/include/boost/exception/exception.hpp **** 
GAS LISTING /tmp/ccvUPO8Q.s 			page 13


 179:/usr/include/boost/exception/exception.hpp ****         template <>
 180:/usr/include/boost/exception/exception.hpp ****         struct get_info<throw_file>;
 181:/usr/include/boost/exception/exception.hpp **** 
 182:/usr/include/boost/exception/exception.hpp ****         template <>
 183:/usr/include/boost/exception/exception.hpp ****         struct get_info<throw_line>;
 184:/usr/include/boost/exception/exception.hpp **** 
 185:/usr/include/boost/exception/exception.hpp ****         template <class>
 186:/usr/include/boost/exception/exception.hpp ****         struct set_info_rv;
 187:/usr/include/boost/exception/exception.hpp **** 
 188:/usr/include/boost/exception/exception.hpp ****         template <>
 189:/usr/include/boost/exception/exception.hpp ****         struct set_info_rv<throw_function>;
 190:/usr/include/boost/exception/exception.hpp **** 
 191:/usr/include/boost/exception/exception.hpp ****         template <>
 192:/usr/include/boost/exception/exception.hpp ****         struct set_info_rv<throw_file>;
 193:/usr/include/boost/exception/exception.hpp **** 
 194:/usr/include/boost/exception/exception.hpp ****         template <>
 195:/usr/include/boost/exception/exception.hpp ****         struct set_info_rv<throw_line>;
 196:/usr/include/boost/exception/exception.hpp **** 
 197:/usr/include/boost/exception/exception.hpp ****         char const * get_diagnostic_information( exception const &, char const * );
 198:/usr/include/boost/exception/exception.hpp **** 
 199:/usr/include/boost/exception/exception.hpp ****         void copy_boost_exception( exception *, exception const * );
 200:/usr/include/boost/exception/exception.hpp **** 
 201:/usr/include/boost/exception/exception.hpp ****         template <class E,class Tag,class T>
 202:/usr/include/boost/exception/exception.hpp ****         E const & set_info( E const &, error_info<Tag,T> const & );
 203:/usr/include/boost/exception/exception.hpp **** 
 204:/usr/include/boost/exception/exception.hpp ****         template <class E>
 205:/usr/include/boost/exception/exception.hpp ****         E const & set_info( E const &, throw_function const & );
 206:/usr/include/boost/exception/exception.hpp **** 
 207:/usr/include/boost/exception/exception.hpp ****         template <class E>
 208:/usr/include/boost/exception/exception.hpp ****         E const & set_info( E const &, throw_file const & );
 209:/usr/include/boost/exception/exception.hpp **** 
 210:/usr/include/boost/exception/exception.hpp ****         template <class E>
 211:/usr/include/boost/exception/exception.hpp ****         E const & set_info( E const &, throw_line const & );
 212:/usr/include/boost/exception/exception.hpp ****         }
 213:/usr/include/boost/exception/exception.hpp **** 
 214:/usr/include/boost/exception/exception.hpp **** #if defined(__GNUC__)
 215:/usr/include/boost/exception/exception.hpp **** # if (__GNUC__ == 4 && __GNUC_MINOR__ >= 1) || (__GNUC__ > 4)
 216:/usr/include/boost/exception/exception.hpp **** #  pragma GCC visibility push (default)
 217:/usr/include/boost/exception/exception.hpp **** # endif
 218:/usr/include/boost/exception/exception.hpp **** #endif
 219:/usr/include/boost/exception/exception.hpp ****     class
 220:/usr/include/boost/exception/exception.hpp ****     exception
 221:/usr/include/boost/exception/exception.hpp ****         {
 222:/usr/include/boost/exception/exception.hpp ****         //<N3757>
 223:/usr/include/boost/exception/exception.hpp ****         public:
 224:/usr/include/boost/exception/exception.hpp ****         template <class Tag> void set( typename Tag::type const & );
 225:/usr/include/boost/exception/exception.hpp ****         template <class Tag> typename Tag::type const * get() const;
 226:/usr/include/boost/exception/exception.hpp ****         //</N3757>
 227:/usr/include/boost/exception/exception.hpp **** 
 228:/usr/include/boost/exception/exception.hpp ****         protected:
 229:/usr/include/boost/exception/exception.hpp **** 
 230:/usr/include/boost/exception/exception.hpp ****         exception():
 295              		.loc 3 230 0
 296              		.cfi_startproc
 297 0000 55       		pushq	%rbp
 298              		.cfi_def_cfa_offset 16
 299              		.cfi_offset 6, -16
GAS LISTING /tmp/ccvUPO8Q.s 			page 14


 300 0001 4889E5   		movq	%rsp, %rbp
 301              		.cfi_def_cfa_register 6
 302 0004 4883EC10 		subq	$16, %rsp
 303 0008 48897DF8 		movq	%rdi, -8(%rbp)
 304              	.LBB9:
 231:/usr/include/boost/exception/exception.hpp ****             throw_function_(0),
 232:/usr/include/boost/exception/exception.hpp ****             throw_file_(0),
 233:/usr/include/boost/exception/exception.hpp ****             throw_line_(-1)
 305              		.loc 3 233 0
 306 000c 488D1500 		leaq	16+_ZTVN5boost9exceptionE(%rip), %rdx
 306      000000
 307 0013 488B45F8 		movq	-8(%rbp), %rax
 308 0017 488910   		movq	%rdx, (%rax)
 309 001a 488B45F8 		movq	-8(%rbp), %rax
 310 001e 4883C008 		addq	$8, %rax
 311 0022 4889C7   		movq	%rax, %rdi
 312 0025 E8000000 		call	_ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEEC1Ev
 312      00
 313 002a 488B45F8 		movq	-8(%rbp), %rax
 314 002e 48C74010 		movq	$0, 16(%rax)
 314      00000000 
 315 0036 488B45F8 		movq	-8(%rbp), %rax
 316 003a 48C74018 		movq	$0, 24(%rax)
 316      00000000 
 317 0042 488B45F8 		movq	-8(%rbp), %rax
 318 0046 C74020FF 		movl	$-1, 32(%rax)
 318      FFFFFF
 319              	.LBE9:
 234:/usr/include/boost/exception/exception.hpp ****             {
 235:/usr/include/boost/exception/exception.hpp ****             }
 320              		.loc 3 235 0
 321 004d 90       		nop
 322 004e C9       		leave
 323              		.cfi_def_cfa 7, 8
 324 004f C3       		ret
 325              		.cfi_endproc
 326              	.LFE1935:
 328              		.weak	_ZN5boost9exceptionC1Ev
 329              		.set	_ZN5boost9exceptionC1Ev,_ZN5boost9exceptionC2Ev
 330              		.section	.text._ZN5boost9exceptionD2Ev,"axG",@progbits,_ZN5boost9exceptionD5Ev,comdat
 331              		.align 2
 332              		.weak	_ZN5boost9exceptionD2Ev
 334              	_ZN5boost9exceptionD2Ev:
 335              	.LFB1938:
 236:/usr/include/boost/exception/exception.hpp **** 
 237:/usr/include/boost/exception/exception.hpp **** #ifdef __HP_aCC
 238:/usr/include/boost/exception/exception.hpp ****         //On HP aCC, this protected copy constructor prevents throwing boost::exception.
 239:/usr/include/boost/exception/exception.hpp ****         //On all other platforms, the same effect is achieved by the pure virtual destructor.
 240:/usr/include/boost/exception/exception.hpp ****         exception( exception const & x ) throw():
 241:/usr/include/boost/exception/exception.hpp ****             data_(x.data_),
 242:/usr/include/boost/exception/exception.hpp ****             throw_function_(x.throw_function_),
 243:/usr/include/boost/exception/exception.hpp ****             throw_file_(x.throw_file_),
 244:/usr/include/boost/exception/exception.hpp ****             throw_line_(x.throw_line_)
 245:/usr/include/boost/exception/exception.hpp ****             {
 246:/usr/include/boost/exception/exception.hpp ****             }
 247:/usr/include/boost/exception/exception.hpp **** #endif
 248:/usr/include/boost/exception/exception.hpp **** 
GAS LISTING /tmp/ccvUPO8Q.s 			page 15


 249:/usr/include/boost/exception/exception.hpp ****         virtual ~exception() throw()
 250:/usr/include/boost/exception/exception.hpp **** #ifndef __HP_aCC
 251:/usr/include/boost/exception/exception.hpp ****             = 0 //Workaround for HP aCC, =0 incorrectly leads to link errors.
 252:/usr/include/boost/exception/exception.hpp **** #endif
 253:/usr/include/boost/exception/exception.hpp ****             ;
 254:/usr/include/boost/exception/exception.hpp **** 
 255:/usr/include/boost/exception/exception.hpp **** #if (defined(__MWERKS__) && __MWERKS__<=0x3207) || (defined(_MSC_VER) && _MSC_VER<=1310)
 256:/usr/include/boost/exception/exception.hpp ****         public:
 257:/usr/include/boost/exception/exception.hpp **** #else
 258:/usr/include/boost/exception/exception.hpp ****         private:
 259:/usr/include/boost/exception/exception.hpp **** 
 260:/usr/include/boost/exception/exception.hpp ****         template <class E>
 261:/usr/include/boost/exception/exception.hpp ****         friend E const & exception_detail::set_info( E const &, throw_function const & );
 262:/usr/include/boost/exception/exception.hpp **** 
 263:/usr/include/boost/exception/exception.hpp ****         template <class E>
 264:/usr/include/boost/exception/exception.hpp ****         friend E const & exception_detail::set_info( E const &, throw_file const & );
 265:/usr/include/boost/exception/exception.hpp **** 
 266:/usr/include/boost/exception/exception.hpp ****         template <class E>
 267:/usr/include/boost/exception/exception.hpp ****         friend E const & exception_detail::set_info( E const &, throw_line const & );
 268:/usr/include/boost/exception/exception.hpp **** 
 269:/usr/include/boost/exception/exception.hpp ****         template <class E,class Tag,class T>
 270:/usr/include/boost/exception/exception.hpp ****         friend E const & exception_detail::set_info( E const &, error_info<Tag,T> const & );
 271:/usr/include/boost/exception/exception.hpp **** 
 272:/usr/include/boost/exception/exception.hpp ****         friend char const * exception_detail::get_diagnostic_information( exception const &, char c
 273:/usr/include/boost/exception/exception.hpp **** 
 274:/usr/include/boost/exception/exception.hpp ****         template <class>
 275:/usr/include/boost/exception/exception.hpp ****         friend struct exception_detail::get_info;
 276:/usr/include/boost/exception/exception.hpp ****         friend struct exception_detail::get_info<throw_function>;
 277:/usr/include/boost/exception/exception.hpp ****         friend struct exception_detail::get_info<throw_file>;
 278:/usr/include/boost/exception/exception.hpp ****         friend struct exception_detail::get_info<throw_line>;
 279:/usr/include/boost/exception/exception.hpp ****         template <class>
 280:/usr/include/boost/exception/exception.hpp ****         friend struct exception_detail::set_info_rv;
 281:/usr/include/boost/exception/exception.hpp ****         friend struct exception_detail::set_info_rv<throw_function>;
 282:/usr/include/boost/exception/exception.hpp ****         friend struct exception_detail::set_info_rv<throw_file>;
 283:/usr/include/boost/exception/exception.hpp ****         friend struct exception_detail::set_info_rv<throw_line>;
 284:/usr/include/boost/exception/exception.hpp ****         friend void exception_detail::copy_boost_exception( exception *, exception const * );
 285:/usr/include/boost/exception/exception.hpp **** #endif
 286:/usr/include/boost/exception/exception.hpp ****         mutable exception_detail::refcount_ptr<exception_detail::error_info_container> data_;
 287:/usr/include/boost/exception/exception.hpp ****         mutable char const * throw_function_;
 288:/usr/include/boost/exception/exception.hpp ****         mutable char const * throw_file_;
 289:/usr/include/boost/exception/exception.hpp ****         mutable int throw_line_;
 290:/usr/include/boost/exception/exception.hpp ****         };
 291:/usr/include/boost/exception/exception.hpp **** #if defined(__GNUC__)
 292:/usr/include/boost/exception/exception.hpp **** # if (__GNUC__ == 4 && __GNUC_MINOR__ >= 1) || (__GNUC__ > 4)
 293:/usr/include/boost/exception/exception.hpp **** #  pragma GCC visibility pop
 294:/usr/include/boost/exception/exception.hpp **** # endif
 295:/usr/include/boost/exception/exception.hpp **** #endif
 296:/usr/include/boost/exception/exception.hpp **** 
 297:/usr/include/boost/exception/exception.hpp ****     inline
 298:/usr/include/boost/exception/exception.hpp ****     exception::
 336              		.loc 3 298 0
 337              		.cfi_startproc
 338 0000 55       		pushq	%rbp
 339              		.cfi_def_cfa_offset 16
 340              		.cfi_offset 6, -16
 341 0001 4889E5   		movq	%rsp, %rbp
 342              		.cfi_def_cfa_register 6
GAS LISTING /tmp/ccvUPO8Q.s 			page 16


 343 0004 4883EC10 		subq	$16, %rsp
 344 0008 48897DF8 		movq	%rdi, -8(%rbp)
 345              	.LBB10:
 299:/usr/include/boost/exception/exception.hpp ****     ~exception() throw()
 346              		.loc 3 299 0
 347 000c 488D1500 		leaq	16+_ZTVN5boost9exceptionE(%rip), %rdx
 347      000000
 348 0013 488B45F8 		movq	-8(%rbp), %rax
 349 0017 488910   		movq	%rdx, (%rax)
 350 001a 488B45F8 		movq	-8(%rbp), %rax
 351 001e 4883C008 		addq	$8, %rax
 352 0022 4889C7   		movq	%rax, %rdi
 353 0025 E8000000 		call	_ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEED1Ev
 353      00
 354              	.LBE10:
 300:/usr/include/boost/exception/exception.hpp ****         {
 301:/usr/include/boost/exception/exception.hpp ****         }
 355              		.loc 3 301 0
 356 002a 90       		nop
 357 002b C9       		leave
 358              		.cfi_def_cfa 7, 8
 359 002c C3       		ret
 360              		.cfi_endproc
 361              	.LFE1938:
 363              		.weak	_ZN5boost9exceptionD1Ev
 364              		.set	_ZN5boost9exceptionD1Ev,_ZN5boost9exceptionD2Ev
 365              		.section	.text._ZN5boost9exceptionD0Ev,"axG",@progbits,_ZN5boost9exceptionD5Ev,comdat
 366              		.align 2
 367              		.weak	_ZN5boost9exceptionD0Ev
 369              	_ZN5boost9exceptionD0Ev:
 370              	.LFB1940:
 298:/usr/include/boost/exception/exception.hpp ****     ~exception() throw()
 371              		.loc 3 298 0
 372              		.cfi_startproc
 373 0000 55       		pushq	%rbp
 374              		.cfi_def_cfa_offset 16
 375              		.cfi_offset 6, -16
 376 0001 4889E5   		movq	%rsp, %rbp
 377              		.cfi_def_cfa_register 6
 378 0004 4883EC10 		subq	$16, %rsp
 379 0008 48897DF8 		movq	%rdi, -8(%rbp)
 380              		.loc 3 301 0
 381 000c 488B45F8 		movq	-8(%rbp), %rax
 382 0010 4889C7   		movq	%rax, %rdi
 383 0013 E8000000 		call	_ZN5boost9exceptionD1Ev
 383      00
 384 0018 488B45F8 		movq	-8(%rbp), %rax
 385 001c BE280000 		movl	$40, %esi
 385      00
 386 0021 4889C7   		movq	%rax, %rdi
 387 0024 E8000000 		call	_ZdlPvm@PLT
 387      00
 388 0029 C9       		leave
 389              		.cfi_def_cfa 7, 8
 390 002a C3       		ret
 391              		.cfi_endproc
 392              	.LFE1940:
GAS LISTING /tmp/ccvUPO8Q.s 			page 17


 394              		.section	.text._ZN5boost16exception_detail10clone_baseD2Ev,"axG",@progbits,_ZN5boost16exception_de
 395              		.align 2
 396              		.weak	_ZN5boost16exception_detail10clone_baseD2Ev
 398              	_ZN5boost16exception_detail10clone_baseD2Ev:
 399              	.LFB1948:
 302:/usr/include/boost/exception/exception.hpp **** 
 303:/usr/include/boost/exception/exception.hpp ****     namespace
 304:/usr/include/boost/exception/exception.hpp ****     exception_detail
 305:/usr/include/boost/exception/exception.hpp ****         {
 306:/usr/include/boost/exception/exception.hpp ****         template <class E>
 307:/usr/include/boost/exception/exception.hpp ****         E const &
 308:/usr/include/boost/exception/exception.hpp ****         set_info( E const & x, throw_function const & y )
 309:/usr/include/boost/exception/exception.hpp ****             {
 310:/usr/include/boost/exception/exception.hpp ****             x.throw_function_=y.v_;
 311:/usr/include/boost/exception/exception.hpp ****             return x;
 312:/usr/include/boost/exception/exception.hpp ****             }
 313:/usr/include/boost/exception/exception.hpp **** 
 314:/usr/include/boost/exception/exception.hpp ****         template <class E>
 315:/usr/include/boost/exception/exception.hpp ****         E const &
 316:/usr/include/boost/exception/exception.hpp ****         set_info( E const & x, throw_file const & y )
 317:/usr/include/boost/exception/exception.hpp ****             {
 318:/usr/include/boost/exception/exception.hpp ****             x.throw_file_=y.v_;
 319:/usr/include/boost/exception/exception.hpp ****             return x;
 320:/usr/include/boost/exception/exception.hpp ****             }
 321:/usr/include/boost/exception/exception.hpp **** 
 322:/usr/include/boost/exception/exception.hpp ****         template <class E>
 323:/usr/include/boost/exception/exception.hpp ****         E const &
 324:/usr/include/boost/exception/exception.hpp ****         set_info( E const & x, throw_line const & y )
 325:/usr/include/boost/exception/exception.hpp ****             {
 326:/usr/include/boost/exception/exception.hpp ****             x.throw_line_=y.v_;
 327:/usr/include/boost/exception/exception.hpp ****             return x;
 328:/usr/include/boost/exception/exception.hpp ****             }
 329:/usr/include/boost/exception/exception.hpp ****         }
 330:/usr/include/boost/exception/exception.hpp **** 
 331:/usr/include/boost/exception/exception.hpp ****     ////////////////////////////////////////////////////////////////////////
 332:/usr/include/boost/exception/exception.hpp **** 
 333:/usr/include/boost/exception/exception.hpp ****     namespace
 334:/usr/include/boost/exception/exception.hpp ****     exception_detail
 335:/usr/include/boost/exception/exception.hpp ****         {
 336:/usr/include/boost/exception/exception.hpp **** #if defined(__GNUC__)
 337:/usr/include/boost/exception/exception.hpp **** # if (__GNUC__ == 4 && __GNUC_MINOR__ >= 1) || (__GNUC__ > 4)
 338:/usr/include/boost/exception/exception.hpp **** #  pragma GCC visibility push (default)
 339:/usr/include/boost/exception/exception.hpp **** # endif
 340:/usr/include/boost/exception/exception.hpp **** #endif
 341:/usr/include/boost/exception/exception.hpp ****         template <class T>
 342:/usr/include/boost/exception/exception.hpp ****         struct
 343:/usr/include/boost/exception/exception.hpp ****         error_info_injector:
 344:/usr/include/boost/exception/exception.hpp ****             public T,
 345:/usr/include/boost/exception/exception.hpp ****             public exception
 346:/usr/include/boost/exception/exception.hpp ****             {
 347:/usr/include/boost/exception/exception.hpp ****             explicit
 348:/usr/include/boost/exception/exception.hpp ****             error_info_injector( T const & x ):
 349:/usr/include/boost/exception/exception.hpp ****                 T(x)
 350:/usr/include/boost/exception/exception.hpp ****                 {
 351:/usr/include/boost/exception/exception.hpp ****                 }
 352:/usr/include/boost/exception/exception.hpp **** 
 353:/usr/include/boost/exception/exception.hpp ****             ~error_info_injector() throw()
GAS LISTING /tmp/ccvUPO8Q.s 			page 18


 354:/usr/include/boost/exception/exception.hpp ****                 {
 355:/usr/include/boost/exception/exception.hpp ****                 }
 356:/usr/include/boost/exception/exception.hpp ****             };
 357:/usr/include/boost/exception/exception.hpp **** #if defined(__GNUC__)
 358:/usr/include/boost/exception/exception.hpp **** # if (__GNUC__ == 4 && __GNUC_MINOR__ >= 1) || (__GNUC__ > 4)
 359:/usr/include/boost/exception/exception.hpp **** #  pragma GCC visibility pop
 360:/usr/include/boost/exception/exception.hpp **** # endif
 361:/usr/include/boost/exception/exception.hpp **** #endif
 362:/usr/include/boost/exception/exception.hpp **** 
 363:/usr/include/boost/exception/exception.hpp ****         struct large_size { char c[256]; };
 364:/usr/include/boost/exception/exception.hpp ****         large_size dispatch_boost_exception( exception const * );
 365:/usr/include/boost/exception/exception.hpp **** 
 366:/usr/include/boost/exception/exception.hpp ****         struct small_size { };
 367:/usr/include/boost/exception/exception.hpp ****         small_size dispatch_boost_exception( void const * );
 368:/usr/include/boost/exception/exception.hpp **** 
 369:/usr/include/boost/exception/exception.hpp ****         template <class,int>
 370:/usr/include/boost/exception/exception.hpp ****         struct enable_error_info_helper;
 371:/usr/include/boost/exception/exception.hpp **** 
 372:/usr/include/boost/exception/exception.hpp ****         template <class T>
 373:/usr/include/boost/exception/exception.hpp ****         struct
 374:/usr/include/boost/exception/exception.hpp ****         enable_error_info_helper<T,sizeof(large_size)>
 375:/usr/include/boost/exception/exception.hpp ****             {
 376:/usr/include/boost/exception/exception.hpp ****             typedef T type;
 377:/usr/include/boost/exception/exception.hpp ****             };
 378:/usr/include/boost/exception/exception.hpp **** 
 379:/usr/include/boost/exception/exception.hpp ****         template <class T>
 380:/usr/include/boost/exception/exception.hpp ****         struct
 381:/usr/include/boost/exception/exception.hpp ****         enable_error_info_helper<T,sizeof(small_size)>
 382:/usr/include/boost/exception/exception.hpp ****             {
 383:/usr/include/boost/exception/exception.hpp ****             typedef error_info_injector<T> type;
 384:/usr/include/boost/exception/exception.hpp ****             };
 385:/usr/include/boost/exception/exception.hpp **** 
 386:/usr/include/boost/exception/exception.hpp ****         template <class T>
 387:/usr/include/boost/exception/exception.hpp ****         struct
 388:/usr/include/boost/exception/exception.hpp ****         enable_error_info_return_type
 389:/usr/include/boost/exception/exception.hpp ****             {
 390:/usr/include/boost/exception/exception.hpp ****             typedef typename enable_error_info_helper<T,sizeof(exception_detail::dispatch_boost_exc
 391:/usr/include/boost/exception/exception.hpp ****             };
 392:/usr/include/boost/exception/exception.hpp ****         }
 393:/usr/include/boost/exception/exception.hpp **** 
 394:/usr/include/boost/exception/exception.hpp ****     template <class T>
 395:/usr/include/boost/exception/exception.hpp ****     inline
 396:/usr/include/boost/exception/exception.hpp ****     typename
 397:/usr/include/boost/exception/exception.hpp ****     exception_detail::enable_error_info_return_type<T>::type
 398:/usr/include/boost/exception/exception.hpp ****     enable_error_info( T const & x )
 399:/usr/include/boost/exception/exception.hpp ****         {
 400:/usr/include/boost/exception/exception.hpp ****         typedef typename exception_detail::enable_error_info_return_type<T>::type rt;
 401:/usr/include/boost/exception/exception.hpp ****         return rt(x);
 402:/usr/include/boost/exception/exception.hpp ****         }
 403:/usr/include/boost/exception/exception.hpp **** 
 404:/usr/include/boost/exception/exception.hpp ****     ////////////////////////////////////////////////////////////////////////
 405:/usr/include/boost/exception/exception.hpp **** 
 406:/usr/include/boost/exception/exception.hpp ****     namespace
 407:/usr/include/boost/exception/exception.hpp ****     exception_detail
 408:/usr/include/boost/exception/exception.hpp ****         {
 409:/usr/include/boost/exception/exception.hpp **** #if defined(__GNUC__)
 410:/usr/include/boost/exception/exception.hpp **** # if (__GNUC__ == 4 && __GNUC_MINOR__ >= 1) || (__GNUC__ > 4)
GAS LISTING /tmp/ccvUPO8Q.s 			page 19


 411:/usr/include/boost/exception/exception.hpp **** #  pragma GCC visibility push (default)
 412:/usr/include/boost/exception/exception.hpp **** # endif
 413:/usr/include/boost/exception/exception.hpp **** #endif
 414:/usr/include/boost/exception/exception.hpp ****         class
 415:/usr/include/boost/exception/exception.hpp ****         clone_base
 416:/usr/include/boost/exception/exception.hpp ****             {
 417:/usr/include/boost/exception/exception.hpp ****             public:
 418:/usr/include/boost/exception/exception.hpp **** 
 419:/usr/include/boost/exception/exception.hpp ****             virtual clone_base const * clone() const = 0;
 420:/usr/include/boost/exception/exception.hpp ****             virtual void rethrow() const = 0;
 421:/usr/include/boost/exception/exception.hpp **** 
 422:/usr/include/boost/exception/exception.hpp ****             virtual
 423:/usr/include/boost/exception/exception.hpp ****             ~clone_base() throw()
 400              		.loc 3 423 0
 401              		.cfi_startproc
 402 0000 55       		pushq	%rbp
 403              		.cfi_def_cfa_offset 16
 404              		.cfi_offset 6, -16
 405 0001 4889E5   		movq	%rsp, %rbp
 406              		.cfi_def_cfa_register 6
 407 0004 48897DF8 		movq	%rdi, -8(%rbp)
 408              	.LBB11:
 424:/usr/include/boost/exception/exception.hpp ****                 {
 409              		.loc 3 424 0
 410 0008 488D1500 		leaq	16+_ZTVN5boost16exception_detail10clone_baseE(%rip), %rdx
 410      000000
 411 000f 488B45F8 		movq	-8(%rbp), %rax
 412 0013 488910   		movq	%rdx, (%rax)
 413              	.LBE11:
 425:/usr/include/boost/exception/exception.hpp ****                 }
 414              		.loc 3 425 0
 415 0016 90       		nop
 416 0017 5D       		popq	%rbp
 417              		.cfi_def_cfa 7, 8
 418 0018 C3       		ret
 419              		.cfi_endproc
 420              	.LFE1948:
 422              		.weak	_ZN5boost16exception_detail10clone_baseD1Ev
 423              		.set	_ZN5boost16exception_detail10clone_baseD1Ev,_ZN5boost16exception_detail10clone_baseD2Ev
 424              		.section	.text._ZN5boost16exception_detail10clone_baseD0Ev,"axG",@progbits,_ZN5boost16exception_de
 425              		.align 2
 426              		.weak	_ZN5boost16exception_detail10clone_baseD0Ev
 428              	_ZN5boost16exception_detail10clone_baseD0Ev:
 429              	.LFB1950:
 423:/usr/include/boost/exception/exception.hpp ****                 {
 430              		.loc 3 423 0
 431              		.cfi_startproc
 432 0000 55       		pushq	%rbp
 433              		.cfi_def_cfa_offset 16
 434              		.cfi_offset 6, -16
 435 0001 4889E5   		movq	%rsp, %rbp
 436              		.cfi_def_cfa_register 6
 437 0004 4883EC10 		subq	$16, %rsp
 438 0008 48897DF8 		movq	%rdi, -8(%rbp)
 439              		.loc 3 425 0
 440 000c 488B45F8 		movq	-8(%rbp), %rax
 441 0010 4889C7   		movq	%rax, %rdi
GAS LISTING /tmp/ccvUPO8Q.s 			page 20


 442 0013 E8000000 		call	_ZN5boost16exception_detail10clone_baseD1Ev
 442      00
 443 0018 488B45F8 		movq	-8(%rbp), %rax
 444 001c BE080000 		movl	$8, %esi
 444      00
 445 0021 4889C7   		movq	%rax, %rdi
 446 0024 E8000000 		call	_ZdlPvm@PLT
 446      00
 447 0029 C9       		leave
 448              		.cfi_def_cfa 7, 8
 449 002a C3       		ret
 450              		.cfi_endproc
 451              	.LFE1950:
 453              		.section	.text._ZN5boost16exception_detail20copy_boost_exceptionEPNS_9exceptionEPKS1_,"axG",@progb
 454              		.weak	_ZN5boost16exception_detail20copy_boost_exceptionEPNS_9exceptionEPKS1_
 456              	_ZN5boost16exception_detail20copy_boost_exceptionEPNS_9exceptionEPKS1_:
 457              	.LFB1951:
 426:/usr/include/boost/exception/exception.hpp ****             };
 427:/usr/include/boost/exception/exception.hpp **** #if defined(__GNUC__)
 428:/usr/include/boost/exception/exception.hpp **** # if (__GNUC__ == 4 && __GNUC_MINOR__ >= 1) || (__GNUC__ > 4)
 429:/usr/include/boost/exception/exception.hpp **** #  pragma GCC visibility pop
 430:/usr/include/boost/exception/exception.hpp **** # endif
 431:/usr/include/boost/exception/exception.hpp **** #endif
 432:/usr/include/boost/exception/exception.hpp **** 
 433:/usr/include/boost/exception/exception.hpp ****         inline
 434:/usr/include/boost/exception/exception.hpp ****         void
 435:/usr/include/boost/exception/exception.hpp ****         copy_boost_exception( exception * a, exception const * b )
 436:/usr/include/boost/exception/exception.hpp ****             {
 458              		.loc 3 436 0
 459              		.cfi_startproc
 460              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 461              		.cfi_lsda 0x1b,.LLSDA1951
 462 0000 55       		pushq	%rbp
 463              		.cfi_def_cfa_offset 16
 464              		.cfi_offset 6, -16
 465 0001 4889E5   		movq	%rsp, %rbp
 466              		.cfi_def_cfa_register 6
 467 0004 53       		pushq	%rbx
 468 0005 4883EC38 		subq	$56, %rsp
 469              		.cfi_offset 3, -24
 470 0009 48897DC8 		movq	%rdi, -56(%rbp)
 471 000d 488975C0 		movq	%rsi, -64(%rbp)
 437:/usr/include/boost/exception/exception.hpp ****             refcount_ptr<error_info_container> data;
 472              		.loc 3 437 0
 473 0011 488D45D8 		leaq	-40(%rbp), %rax
 474 0015 4889C7   		movq	%rax, %rdi
 475 0018 E8000000 		call	_ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEEC1Ev
 475      00
 476              	.LBB12:
 438:/usr/include/boost/exception/exception.hpp ****             if( error_info_container * d=b->data_.get() )
 477              		.loc 3 438 0
 478 001d 488B45C0 		movq	-64(%rbp), %rax
 479 0021 4883C008 		addq	$8, %rax
 480 0025 4889C7   		movq	%rax, %rdi
 481 0028 E8000000 		call	_ZNK5boost16exception_detail12refcount_ptrINS0_20error_info_containerEE3getEv
 481      00
 482 002d 488945E8 		movq	%rax, -24(%rbp)
GAS LISTING /tmp/ccvUPO8Q.s 			page 21


 483 0031 48837DE8 		cmpq	$0, -24(%rbp)
 483      00
 484 0036 743D     		je	.L17
 439:/usr/include/boost/exception/exception.hpp ****                 data = d->clone();
 485              		.loc 3 439 0
 486 0038 488B45E8 		movq	-24(%rbp), %rax
 487 003c 488B00   		movq	(%rax), %rax
 488 003f 4883C028 		addq	$40, %rax
 489 0043 488B00   		movq	(%rax), %rax
 490 0046 488D55E0 		leaq	-32(%rbp), %rdx
 491 004a 488B4DE8 		movq	-24(%rbp), %rcx
 492 004e 4889CE   		movq	%rcx, %rsi
 493 0051 4889D7   		movq	%rdx, %rdi
 494              	.LEHB0:
 495 0054 FFD0     		call	*%rax
 496              	.LVL0:
 497              	.LEHE0:
 498              		.loc 3 439 0 is_stmt 0 discriminator 1
 499 0056 488D55E0 		leaq	-32(%rbp), %rdx
 500 005a 488D45D8 		leaq	-40(%rbp), %rax
 501 005e 4889D6   		movq	%rdx, %rsi
 502 0061 4889C7   		movq	%rax, %rdi
 503              	.LEHB1:
 504 0064 E8000000 		call	_ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEEaSERKS3_
 504      00
 505              	.LEHE1:
 506              		.loc 3 439 0 discriminator 3
 507 0069 488D45E0 		leaq	-32(%rbp), %rax
 508 006d 4889C7   		movq	%rax, %rdi
 509 0070 E8000000 		call	_ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEED1Ev
 509      00
 510              	.L17:
 511              	.LBE12:
 440:/usr/include/boost/exception/exception.hpp ****             a->throw_file_ = b->throw_file_;
 512              		.loc 3 440 0 is_stmt 1
 513 0075 488B45C0 		movq	-64(%rbp), %rax
 514 0079 488B5018 		movq	24(%rax), %rdx
 515 007d 488B45C8 		movq	-56(%rbp), %rax
 516 0081 48895018 		movq	%rdx, 24(%rax)
 441:/usr/include/boost/exception/exception.hpp ****             a->throw_line_ = b->throw_line_;
 517              		.loc 3 441 0
 518 0085 488B45C0 		movq	-64(%rbp), %rax
 519 0089 8B5020   		movl	32(%rax), %edx
 520 008c 488B45C8 		movq	-56(%rbp), %rax
 521 0090 895020   		movl	%edx, 32(%rax)
 442:/usr/include/boost/exception/exception.hpp ****             a->throw_function_ = b->throw_function_;
 522              		.loc 3 442 0
 523 0093 488B45C0 		movq	-64(%rbp), %rax
 524 0097 488B5010 		movq	16(%rax), %rdx
 525 009b 488B45C8 		movq	-56(%rbp), %rax
 526 009f 48895010 		movq	%rdx, 16(%rax)
 443:/usr/include/boost/exception/exception.hpp ****             a->data_ = data;
 527              		.loc 3 443 0
 528 00a3 488B45C8 		movq	-56(%rbp), %rax
 529 00a7 488D5008 		leaq	8(%rax), %rdx
 530 00ab 488D45D8 		leaq	-40(%rbp), %rax
 531 00af 4889C6   		movq	%rax, %rsi
GAS LISTING /tmp/ccvUPO8Q.s 			page 22


 532 00b2 4889D7   		movq	%rdx, %rdi
 533              	.LEHB2:
 534 00b5 E8000000 		call	_ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEEaSERKS3_
 534      00
 535              	.LEHE2:
 437:/usr/include/boost/exception/exception.hpp ****             if( error_info_container * d=b->data_.get() )
 536              		.loc 3 437 0
 537 00ba 488D45D8 		leaq	-40(%rbp), %rax
 538 00be 4889C7   		movq	%rax, %rdi
 539 00c1 E8000000 		call	_ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEED1Ev
 539      00
 444:/usr/include/boost/exception/exception.hpp ****             }
 540              		.loc 3 444 0
 541 00c6 EB2B     		jmp	.L22
 542              	.L21:
 543 00c8 4889C3   		movq	%rax, %rbx
 544              	.LBB13:
 439:/usr/include/boost/exception/exception.hpp ****             a->throw_file_ = b->throw_file_;
 545              		.loc 3 439 0
 546 00cb 488D45E0 		leaq	-32(%rbp), %rax
 547 00cf 4889C7   		movq	%rax, %rdi
 548 00d2 E8000000 		call	_ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEED1Ev
 548      00
 549 00d7 EB03     		jmp	.L19
 550              	.L20:
 551 00d9 4889C3   		movq	%rax, %rbx
 552              	.L19:
 553              	.LBE13:
 437:/usr/include/boost/exception/exception.hpp ****             if( error_info_container * d=b->data_.get() )
 554              		.loc 3 437 0
 555 00dc 488D45D8 		leaq	-40(%rbp), %rax
 556 00e0 4889C7   		movq	%rax, %rdi
 557 00e3 E8000000 		call	_ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEED1Ev
 557      00
 558 00e8 4889D8   		movq	%rbx, %rax
 559 00eb 4889C7   		movq	%rax, %rdi
 560              	.LEHB3:
 561 00ee E8000000 		call	_Unwind_Resume@PLT
 561      00
 562              	.LEHE3:
 563              	.L22:
 564              		.loc 3 444 0
 565 00f3 4883C438 		addq	$56, %rsp
 566 00f7 5B       		popq	%rbx
 567 00f8 5D       		popq	%rbp
 568              		.cfi_def_cfa 7, 8
 569 00f9 C3       		ret
 570              		.cfi_endproc
 571              	.LFE1951:
 572              		.globl	__gxx_personality_v0
 573              		.section	.gcc_except_table._ZN5boost16exception_detail20copy_boost_exceptionEPNS_9exceptionEPKS1_,
 574              	.LLSDA1951:
 575 0000 FF       		.byte	0xff
 576 0001 FF       		.byte	0xff
 577 0002 01       		.byte	0x1
 578 0003 15       		.uleb128 .LLSDACSE1951-.LLSDACSB1951
 579              	.LLSDACSB1951:
GAS LISTING /tmp/ccvUPO8Q.s 			page 23


 580 0004 54       		.uleb128 .LEHB0-.LFB1951
 581 0005 02       		.uleb128 .LEHE0-.LEHB0
 582 0006 D901     		.uleb128 .L20-.LFB1951
 583 0008 00       		.uleb128 0
 584 0009 64       		.uleb128 .LEHB1-.LFB1951
 585 000a 05       		.uleb128 .LEHE1-.LEHB1
 586 000b C801     		.uleb128 .L21-.LFB1951
 587 000d 00       		.uleb128 0
 588 000e B501     		.uleb128 .LEHB2-.LFB1951
 589 0010 05       		.uleb128 .LEHE2-.LEHB2
 590 0011 D901     		.uleb128 .L20-.LFB1951
 591 0013 00       		.uleb128 0
 592 0014 EE01     		.uleb128 .LEHB3-.LFB1951
 593 0016 05       		.uleb128 .LEHE3-.LEHB3
 594 0017 00       		.uleb128 0
 595 0018 00       		.uleb128 0
 596              	.LLSDACSE1951:
 597              		.section	.text._ZN5boost16exception_detail20copy_boost_exceptionEPNS_9exceptionEPKS1_,"axG",@progb
 599              		.section	.text._ZN5boost36throw_exception_assert_compatibilityERKSt9exception,"axG",@progbits,_ZN5
 600              		.weak	_ZN5boost36throw_exception_assert_compatibilityERKSt9exception
 602              	_ZN5boost36throw_exception_assert_compatibilityERKSt9exception:
 603              	.LFB1960:
 604              		.file 4 "/usr/include/boost/throw_exception.hpp"
   1:/usr/include/boost/throw_exception.hpp **** #ifndef UUID_AA15E74A856F11E08B8D93F24824019B
   2:/usr/include/boost/throw_exception.hpp **** #define UUID_AA15E74A856F11E08B8D93F24824019B
   3:/usr/include/boost/throw_exception.hpp **** #if (__GNUC__*100+__GNUC_MINOR__>301) && !defined(BOOST_EXCEPTION_ENABLE_WARNINGS)
   4:/usr/include/boost/throw_exception.hpp **** #pragma GCC system_header
   5:/usr/include/boost/throw_exception.hpp **** #endif
   6:/usr/include/boost/throw_exception.hpp **** #if defined(_MSC_VER) && !defined(BOOST_EXCEPTION_ENABLE_WARNINGS)
   7:/usr/include/boost/throw_exception.hpp **** #pragma warning(push,1)
   8:/usr/include/boost/throw_exception.hpp **** #endif
   9:/usr/include/boost/throw_exception.hpp **** 
  10:/usr/include/boost/throw_exception.hpp **** // MS compatible compilers support #pragma once
  11:/usr/include/boost/throw_exception.hpp **** 
  12:/usr/include/boost/throw_exception.hpp **** #if defined(_MSC_VER) && (_MSC_VER >= 1020)
  13:/usr/include/boost/throw_exception.hpp **** # pragma once
  14:/usr/include/boost/throw_exception.hpp **** #endif
  15:/usr/include/boost/throw_exception.hpp **** 
  16:/usr/include/boost/throw_exception.hpp **** //
  17:/usr/include/boost/throw_exception.hpp **** //  boost/throw_exception.hpp
  18:/usr/include/boost/throw_exception.hpp **** //
  19:/usr/include/boost/throw_exception.hpp **** //  Copyright (c) 2002 Peter Dimov and Multi Media Ltd.
  20:/usr/include/boost/throw_exception.hpp **** //  Copyright (c) 2008-2009 Emil Dotchevski and Reverge Studios, Inc.
  21:/usr/include/boost/throw_exception.hpp **** //
  22:/usr/include/boost/throw_exception.hpp **** //  Distributed under the Boost Software License, Version 1.0. (See
  23:/usr/include/boost/throw_exception.hpp **** //  accompanying file LICENSE_1_0.txt or copy at
  24:/usr/include/boost/throw_exception.hpp **** //  http://www.boost.org/LICENSE_1_0.txt)
  25:/usr/include/boost/throw_exception.hpp **** //
  26:/usr/include/boost/throw_exception.hpp **** //  http://www.boost.org/libs/utility/throw_exception.html
  27:/usr/include/boost/throw_exception.hpp **** //
  28:/usr/include/boost/throw_exception.hpp **** 
  29:/usr/include/boost/throw_exception.hpp **** #include <boost/detail/workaround.hpp>
  30:/usr/include/boost/throw_exception.hpp **** #include <boost/config.hpp>
  31:/usr/include/boost/throw_exception.hpp **** #include <exception>
  32:/usr/include/boost/throw_exception.hpp **** 
  33:/usr/include/boost/throw_exception.hpp **** #if !defined( BOOST_EXCEPTION_DISABLE ) && defined( __BORLANDC__ ) && BOOST_WORKAROUND( __BORLANDC_
  34:/usr/include/boost/throw_exception.hpp **** # define BOOST_EXCEPTION_DISABLE
GAS LISTING /tmp/ccvUPO8Q.s 			page 24


  35:/usr/include/boost/throw_exception.hpp **** #endif
  36:/usr/include/boost/throw_exception.hpp **** 
  37:/usr/include/boost/throw_exception.hpp **** #if !defined( BOOST_EXCEPTION_DISABLE ) && defined( BOOST_MSVC ) && BOOST_WORKAROUND( BOOST_MSVC, <
  38:/usr/include/boost/throw_exception.hpp **** # define BOOST_EXCEPTION_DISABLE
  39:/usr/include/boost/throw_exception.hpp **** #endif
  40:/usr/include/boost/throw_exception.hpp **** 
  41:/usr/include/boost/throw_exception.hpp **** #if !defined( BOOST_EXCEPTION_DISABLE )
  42:/usr/include/boost/throw_exception.hpp **** # include <boost/exception/exception.hpp>
  43:/usr/include/boost/throw_exception.hpp **** #if !defined(BOOST_THROW_EXCEPTION_CURRENT_FUNCTION)
  44:/usr/include/boost/throw_exception.hpp **** # include <boost/current_function.hpp>
  45:/usr/include/boost/throw_exception.hpp **** # define BOOST_THROW_EXCEPTION_CURRENT_FUNCTION BOOST_CURRENT_FUNCTION
  46:/usr/include/boost/throw_exception.hpp **** #endif
  47:/usr/include/boost/throw_exception.hpp **** # define BOOST_THROW_EXCEPTION(x) ::boost::exception_detail::throw_exception_(x,BOOST_THROW_EXCEPTI
  48:/usr/include/boost/throw_exception.hpp **** #else
  49:/usr/include/boost/throw_exception.hpp **** # define BOOST_THROW_EXCEPTION(x) ::boost::throw_exception(x)
  50:/usr/include/boost/throw_exception.hpp **** #endif
  51:/usr/include/boost/throw_exception.hpp **** 
  52:/usr/include/boost/throw_exception.hpp **** namespace boost
  53:/usr/include/boost/throw_exception.hpp **** {
  54:/usr/include/boost/throw_exception.hpp **** #ifdef BOOST_NO_EXCEPTIONS
  55:/usr/include/boost/throw_exception.hpp **** 
  56:/usr/include/boost/throw_exception.hpp **** void throw_exception( std::exception const & e ); // user defined
  57:/usr/include/boost/throw_exception.hpp **** 
  58:/usr/include/boost/throw_exception.hpp **** #else
  59:/usr/include/boost/throw_exception.hpp **** 
  60:/usr/include/boost/throw_exception.hpp **** inline void throw_exception_assert_compatibility( std::exception const & ) { }
 605              		.loc 4 60 0
 606              		.cfi_startproc
 607 0000 55       		pushq	%rbp
 608              		.cfi_def_cfa_offset 16
 609              		.cfi_offset 6, -16
 610 0001 4889E5   		movq	%rsp, %rbp
 611              		.cfi_def_cfa_register 6
 612 0004 48897DF8 		movq	%rdi, -8(%rbp)
 613              		.loc 4 60 0
 614 0008 90       		nop
 615 0009 5D       		popq	%rbp
 616              		.cfi_def_cfa 7, 8
 617 000a C3       		ret
 618              		.cfi_endproc
 619              	.LFE1960:
 621              		.section	.text._ZN5boost6detail23atomic_exchange_and_addEPii,"axG",@progbits,_ZN5boost6detail23ato
 622              		.weak	_ZN5boost6detail23atomic_exchange_and_addEPii
 624              	_ZN5boost6detail23atomic_exchange_and_addEPii:
 625              	.LFB2012:
 626              		.file 5 "/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp"
   1:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp **** #ifndef BOOST_SMART_PTR_DETAIL_SP_COUNTED_BASE_GCC_X86_HPP_INCLUDED
   2:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp **** #define BOOST_SMART_PTR_DETAIL_SP_COUNTED_BASE_GCC_X86_HPP_INCLUDED
   3:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp **** 
   4:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp **** // MS compatible compilers support #pragma once
   5:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp **** 
   6:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp **** #if defined(_MSC_VER) && (_MSC_VER >= 1020)
   7:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp **** # pragma once
   8:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp **** #endif
   9:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp **** 
  10:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp **** //
  11:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp **** //  detail/sp_counted_base_gcc_x86.hpp - g++ on 486+ or AMD64
GAS LISTING /tmp/ccvUPO8Q.s 			page 25


  12:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp **** //
  13:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp **** //  Copyright (c) 2001, 2002, 2003 Peter Dimov and Multi Media Ltd.
  14:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp **** //  Copyright 2004-2005 Peter Dimov
  15:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp **** //
  16:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp **** //  Distributed under the Boost Software License, Version 1.0. (See
  17:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp **** //  accompanying file LICENSE_1_0.txt or copy at
  18:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp **** //  http://www.boost.org/LICENSE_1_0.txt)
  19:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp **** //
  20:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp **** //
  21:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp **** //  Lock-free algorithm by Alexander Terekhov
  22:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp **** //
  23:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp **** //  Thanks to Ben Hitchings for the #weak + (#shared != 0)
  24:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp **** //  formulation
  25:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp **** //
  26:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp **** 
  27:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp **** #include <boost/detail/sp_typeinfo.hpp>
  28:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp **** 
  29:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp **** namespace boost
  30:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp **** {
  31:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp **** 
  32:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp **** namespace detail
  33:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp **** {
  34:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp **** 
  35:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp **** inline int atomic_exchange_and_add( int * pw, int dv )
  36:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp **** {
 627              		.loc 5 36 0
 628              		.cfi_startproc
 629 0000 55       		pushq	%rbp
 630              		.cfi_def_cfa_offset 16
 631              		.cfi_offset 6, -16
 632 0001 4889E5   		movq	%rsp, %rbp
 633              		.cfi_def_cfa_register 6
 634 0004 48897DE8 		movq	%rdi, -24(%rbp)
 635 0008 8975E4   		movl	%esi, -28(%rbp)
  37:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp ****     // int r = *pw;
  38:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp ****     // *pw += dv;
  39:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp ****     // return r;
  40:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp **** 
  41:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp ****     int r;
  42:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp **** 
  43:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp ****     __asm__ __volatile__
  44:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp ****     (
  45:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp ****         "lock\n\t"
  46:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp ****         "xadd %1, %0":
  47:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp ****         "=m"( *pw ), "=r"( r ): // outputs (%0, %1)
  48:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp ****         "m"( *pw ), "1"( dv ): // inputs (%2, %3 == %1)
  49:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp ****         "memory", "cc" // clobbers
  50:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp ****     );
 636              		.loc 5 50 0
 637 000b 488B55E8 		movq	-24(%rbp), %rdx
 638 000f 488B4DE8 		movq	-24(%rbp), %rcx
 639 0013 8B45E4   		movl	-28(%rbp), %eax
 640              	#APP
 641              	# 50 "/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp" 1
  51 0017 0FC102   	
  52              	    return r;
 642              		lock
GAS LISTING /tmp/ccvUPO8Q.s 			page 26


 643              		xadd %eax, (%rdx)
 644              	# 0 "" 2
 645              	#NO_APP
 646 001a 8945FC   		movl	%eax, -4(%rbp)
 647              		.loc 5 52 0
 648 001d 8B45FC   		movl	-4(%rbp), %eax
  53:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp **** }
 649              		.loc 5 53 0
 650 0020 5D       		popq	%rbp
 651              		.cfi_def_cfa 7, 8
 652 0021 C3       		ret
 653              		.cfi_endproc
 654              	.LFE2012:
 656              		.section	.text._ZN5boost6detail16atomic_incrementEPi,"axG",@progbits,_ZN5boost6detail16atomic_incr
 657              		.weak	_ZN5boost6detail16atomic_incrementEPi
 659              	_ZN5boost6detail16atomic_incrementEPi:
 660              	.LFB2013:
  54:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp **** 
  55:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp **** inline void atomic_increment( int * pw )
  56:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp **** {
 661              		.loc 5 56 0
 662              		.cfi_startproc
 663 0000 55       		pushq	%rbp
 664              		.cfi_def_cfa_offset 16
 665              		.cfi_offset 6, -16
 666 0001 4889E5   		movq	%rsp, %rbp
 667              		.cfi_def_cfa_register 6
 668 0004 48897DF8 		movq	%rdi, -8(%rbp)
  57:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp ****     //atomic_exchange_and_add( pw, 1 );
  58:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp **** 
  59:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp ****     __asm__
  60:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp ****     (
  61:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp ****         "lock\n\t"
  62:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp ****         "incl %0":
  63:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp ****         "=m"( *pw ): // output (%0)
  64:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp ****         "m"( *pw ): // input (%1)
  65:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp ****         "cc" // clobbers
  66:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp ****     );
 669              		.loc 5 66 0
 670 0008 488B45F8 		movq	-8(%rbp), %rax
 671 000c 488B55F8 		movq	-8(%rbp), %rdx
 672              	#APP
 673              	# 66 "/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp" 1
  67 0011 FF00     	}
  68              	
  67:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp **** 
 674              		lock
 675              		incl (%rax)
 676              	# 0 "" 2
 677              		.loc 5 67 0
 678              	#NO_APP
 679 0013 90       		nop
 680 0014 5D       		popq	%rbp
 681              		.cfi_def_cfa 7, 8
 682 0015 C3       		ret
 683              		.cfi_endproc
 684              	.LFE2013:
GAS LISTING /tmp/ccvUPO8Q.s 			page 27


 686              		.section	.text._ZN5boost6detail15sp_counted_baseC2Ev,"axG",@progbits,_ZN5boost6detail15sp_counted_
 687              		.align 2
 688              		.weak	_ZN5boost6detail15sp_counted_baseC2Ev
 690              	_ZN5boost6detail15sp_counted_baseC2Ev:
 691              	.LFB2016:
  69:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp **** inline int atomic_conditional_increment( int * pw )
  70:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp **** {
  71:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp ****     // int rv = *pw;
  72:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp ****     // if( rv != 0 ) ++*pw;
  73:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp ****     // return rv;
  74:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp **** 
  75:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp ****     int rv, tmp;
  76:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp **** 
  77:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp ****     __asm__
  78:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp ****     (
  79:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp ****         "movl %0, %%eax\n\t"
  80:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp ****         "0:\n\t"
  81:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp ****         "test %%eax, %%eax\n\t"
  82:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp ****         "je 1f\n\t"
  83:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp ****         "movl %%eax, %2\n\t"
  84:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp ****         "incl %2\n\t"
  85:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp ****         "lock\n\t"
  86:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp ****         "cmpxchgl %2, %0\n\t"
  87:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp ****         "jne 0b\n\t"
  88:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp ****         "1:":
  89:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp ****         "=m"( *pw ), "=&a"( rv ), "=&r"( tmp ): // outputs (%0, %1, %2)
  90:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp ****         "m"( *pw ): // input (%3)
  91:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp ****         "cc" // clobbers
  92:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp ****     );
  93:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp **** 
  94:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp ****     return rv;
  95:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp **** }
  96:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp **** 
  97:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp **** class sp_counted_base
  98:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp **** {
  99:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp **** private:
 100:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp **** 
 101:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp ****     sp_counted_base( sp_counted_base const & );
 102:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp ****     sp_counted_base & operator= ( sp_counted_base const & );
 103:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp **** 
 104:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp ****     int use_count_;        // #shared
 105:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp ****     int weak_count_;       // #weak + (#shared != 0)
 106:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp **** 
 107:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp **** public:
 108:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp **** 
 109:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp ****     sp_counted_base(): use_count_( 1 ), weak_count_( 1 )
 692              		.loc 5 109 0
 693              		.cfi_startproc
 694 0000 55       		pushq	%rbp
 695              		.cfi_def_cfa_offset 16
 696              		.cfi_offset 6, -16
 697 0001 4889E5   		movq	%rsp, %rbp
 698              		.cfi_def_cfa_register 6
 699 0004 48897DF8 		movq	%rdi, -8(%rbp)
 700              	.LBB14:
 701              		.loc 5 109 0
 702 0008 488D1500 		leaq	16+_ZTVN5boost6detail15sp_counted_baseE(%rip), %rdx
GAS LISTING /tmp/ccvUPO8Q.s 			page 28


 702      000000
 703 000f 488B45F8 		movq	-8(%rbp), %rax
 704 0013 488910   		movq	%rdx, (%rax)
 705 0016 488B45F8 		movq	-8(%rbp), %rax
 706 001a C7400801 		movl	$1, 8(%rax)
 706      000000
 707 0021 488B45F8 		movq	-8(%rbp), %rax
 708 0025 C7400C01 		movl	$1, 12(%rax)
 708      000000
 709              	.LBE14:
 110:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp ****     {
 111:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp ****     }
 710              		.loc 5 111 0
 711 002c 90       		nop
 712 002d 5D       		popq	%rbp
 713              		.cfi_def_cfa 7, 8
 714 002e C3       		ret
 715              		.cfi_endproc
 716              	.LFE2016:
 718              		.weak	_ZN5boost6detail15sp_counted_baseC1Ev
 719              		.set	_ZN5boost6detail15sp_counted_baseC1Ev,_ZN5boost6detail15sp_counted_baseC2Ev
 720              		.section	.text._ZN5boost6detail15sp_counted_baseD2Ev,"axG",@progbits,_ZN5boost6detail15sp_counted_
 721              		.align 2
 722              		.weak	_ZN5boost6detail15sp_counted_baseD2Ev
 724              	_ZN5boost6detail15sp_counted_baseD2Ev:
 725              	.LFB2019:
 112:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp **** 
 113:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp ****     virtual ~sp_counted_base() // nothrow
 726              		.loc 5 113 0
 727              		.cfi_startproc
 728 0000 55       		pushq	%rbp
 729              		.cfi_def_cfa_offset 16
 730              		.cfi_offset 6, -16
 731 0001 4889E5   		movq	%rsp, %rbp
 732              		.cfi_def_cfa_register 6
 733 0004 48897DF8 		movq	%rdi, -8(%rbp)
 734              	.LBB15:
 114:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp ****     {
 735              		.loc 5 114 0
 736 0008 488D1500 		leaq	16+_ZTVN5boost6detail15sp_counted_baseE(%rip), %rdx
 736      000000
 737 000f 488B45F8 		movq	-8(%rbp), %rax
 738 0013 488910   		movq	%rdx, (%rax)
 739              	.LBE15:
 115:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp ****     }
 740              		.loc 5 115 0
 741 0016 90       		nop
 742 0017 5D       		popq	%rbp
 743              		.cfi_def_cfa 7, 8
 744 0018 C3       		ret
 745              		.cfi_endproc
 746              	.LFE2019:
 748              		.weak	_ZN5boost6detail15sp_counted_baseD1Ev
 749              		.set	_ZN5boost6detail15sp_counted_baseD1Ev,_ZN5boost6detail15sp_counted_baseD2Ev
 750              		.section	.text._ZN5boost6detail15sp_counted_baseD0Ev,"axG",@progbits,_ZN5boost6detail15sp_counted_
 751              		.align 2
 752              		.weak	_ZN5boost6detail15sp_counted_baseD0Ev
GAS LISTING /tmp/ccvUPO8Q.s 			page 29


 754              	_ZN5boost6detail15sp_counted_baseD0Ev:
 755              	.LFB2021:
 113:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp ****     {
 756              		.loc 5 113 0
 757              		.cfi_startproc
 758 0000 55       		pushq	%rbp
 759              		.cfi_def_cfa_offset 16
 760              		.cfi_offset 6, -16
 761 0001 4889E5   		movq	%rsp, %rbp
 762              		.cfi_def_cfa_register 6
 763 0004 4883EC10 		subq	$16, %rsp
 764 0008 48897DF8 		movq	%rdi, -8(%rbp)
 765              		.loc 5 115 0
 766 000c 488B45F8 		movq	-8(%rbp), %rax
 767 0010 4889C7   		movq	%rax, %rdi
 768 0013 E8000000 		call	_ZN5boost6detail15sp_counted_baseD1Ev
 768      00
 769 0018 488B45F8 		movq	-8(%rbp), %rax
 770 001c BE100000 		movl	$16, %esi
 770      00
 771 0021 4889C7   		movq	%rax, %rdi
 772 0024 E8000000 		call	_ZdlPvm@PLT
 772      00
 773 0029 C9       		leave
 774              		.cfi_def_cfa 7, 8
 775 002a C3       		ret
 776              		.cfi_endproc
 777              	.LFE2021:
 779              		.section	.text._ZN5boost6detail15sp_counted_base7destroyEv,"axG",@progbits,_ZN5boost6detail15sp_co
 780              		.align 2
 781              		.weak	_ZN5boost6detail15sp_counted_base7destroyEv
 783              	_ZN5boost6detail15sp_counted_base7destroyEv:
 784              	.LFB2022:
 116:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp **** 
 117:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp ****     // dispose() is called when use_count_ drops to zero, to release
 118:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp ****     // the resources managed by *this.
 119:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp **** 
 120:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp ****     virtual void dispose() = 0; // nothrow
 121:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp **** 
 122:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp ****     // destroy() is called when weak_count_ drops to zero.
 123:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp **** 
 124:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp ****     virtual void destroy() // nothrow
 785              		.loc 5 124 0
 786              		.cfi_startproc
 787 0000 55       		pushq	%rbp
 788              		.cfi_def_cfa_offset 16
 789              		.cfi_offset 6, -16
 790 0001 4889E5   		movq	%rsp, %rbp
 791              		.cfi_def_cfa_register 6
 792 0004 4883EC10 		subq	$16, %rsp
 793 0008 48897DF8 		movq	%rdi, -8(%rbp)
 125:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp ****     {
 126:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp ****         delete this;
 794              		.loc 5 126 0
 795 000c 48837DF8 		cmpq	$0, -8(%rbp)
 795      00
 796 0011 7417     		je	.L32
GAS LISTING /tmp/ccvUPO8Q.s 			page 30


 797              		.loc 5 126 0 is_stmt 0 discriminator 1
 798 0013 488B45F8 		movq	-8(%rbp), %rax
 799 0017 488B00   		movq	(%rax), %rax
 800 001a 4883C008 		addq	$8, %rax
 801 001e 488B00   		movq	(%rax), %rax
 802 0021 488B55F8 		movq	-8(%rbp), %rdx
 803 0025 4889D7   		movq	%rdx, %rdi
 804 0028 FFD0     		call	*%rax
 805              	.LVL1:
 806              	.L32:
 127:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp ****     }
 807              		.loc 5 127 0 is_stmt 1
 808 002a 90       		nop
 809 002b C9       		leave
 810              		.cfi_def_cfa 7, 8
 811 002c C3       		ret
 812              		.cfi_endproc
 813              	.LFE2022:
 815              		.section	.text._ZN5boost6detail15sp_counted_base12add_ref_copyEv,"axG",@progbits,_ZN5boost6detail1
 816              		.align 2
 817              		.weak	_ZN5boost6detail15sp_counted_base12add_ref_copyEv
 819              	_ZN5boost6detail15sp_counted_base12add_ref_copyEv:
 820              	.LFB2023:
 128:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp **** 
 129:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp ****     virtual void * get_deleter( sp_typeinfo const & ti ) = 0;
 130:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp ****     virtual void * get_untyped_deleter() = 0;
 131:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp **** 
 132:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp ****     void add_ref_copy()
 821              		.loc 5 132 0
 822              		.cfi_startproc
 823 0000 55       		pushq	%rbp
 824              		.cfi_def_cfa_offset 16
 825              		.cfi_offset 6, -16
 826 0001 4889E5   		movq	%rsp, %rbp
 827              		.cfi_def_cfa_register 6
 828 0004 4883EC10 		subq	$16, %rsp
 829 0008 48897DF8 		movq	%rdi, -8(%rbp)
 133:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp ****     {
 134:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp ****         atomic_increment( &use_count_ );
 830              		.loc 5 134 0
 831 000c 488B45F8 		movq	-8(%rbp), %rax
 832 0010 4883C008 		addq	$8, %rax
 833 0014 4889C7   		movq	%rax, %rdi
 834 0017 E8000000 		call	_ZN5boost6detail16atomic_incrementEPi
 834      00
 135:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp ****     }
 835              		.loc 5 135 0
 836 001c 90       		nop
 837 001d C9       		leave
 838              		.cfi_def_cfa 7, 8
 839 001e C3       		ret
 840              		.cfi_endproc
 841              	.LFE2023:
 843              		.section	.text._ZN5boost6detail15sp_counted_base7releaseEv,"axG",@progbits,_ZN5boost6detail15sp_co
 844              		.align 2
 845              		.weak	_ZN5boost6detail15sp_counted_base7releaseEv
 847              	_ZN5boost6detail15sp_counted_base7releaseEv:
GAS LISTING /tmp/ccvUPO8Q.s 			page 31


 848              	.LFB2025:
 136:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp **** 
 137:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp ****     bool add_ref_lock() // true on success
 138:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp ****     {
 139:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp ****         return atomic_conditional_increment( &use_count_ ) != 0;
 140:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp ****     }
 141:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp **** 
 142:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp ****     void release() // nothrow
 849              		.loc 5 142 0
 850              		.cfi_startproc
 851 0000 55       		pushq	%rbp
 852              		.cfi_def_cfa_offset 16
 853              		.cfi_offset 6, -16
 854 0001 4889E5   		movq	%rsp, %rbp
 855              		.cfi_def_cfa_register 6
 856 0004 4883EC10 		subq	$16, %rsp
 857 0008 48897DF8 		movq	%rdi, -8(%rbp)
 143:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp ****     {
 144:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp ****         if( atomic_exchange_and_add( &use_count_, -1 ) == 1 )
 858              		.loc 5 144 0
 859 000c 488B45F8 		movq	-8(%rbp), %rax
 860 0010 4883C008 		addq	$8, %rax
 861 0014 BEFFFFFF 		movl	$-1, %esi
 861      FF
 862 0019 4889C7   		movq	%rax, %rdi
 863 001c E8000000 		call	_ZN5boost6detail23atomic_exchange_and_addEPii
 863      00
 864 0021 83F801   		cmpl	$1, %eax
 865 0024 0F94C0   		sete	%al
 866 0027 84C0     		testb	%al, %al
 867 0029 7423     		je	.L36
 145:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp ****         {
 146:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp ****             dispose();
 868              		.loc 5 146 0
 869 002b 488B45F8 		movq	-8(%rbp), %rax
 870 002f 488B00   		movq	(%rax), %rax
 871 0032 4883C010 		addq	$16, %rax
 872 0036 488B00   		movq	(%rax), %rax
 873 0039 488B55F8 		movq	-8(%rbp), %rdx
 874 003d 4889D7   		movq	%rdx, %rdi
 875 0040 FFD0     		call	*%rax
 876              	.LVL2:
 147:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp ****             weak_release();
 877              		.loc 5 147 0
 878 0042 488B45F8 		movq	-8(%rbp), %rax
 879 0046 4889C7   		movq	%rax, %rdi
 880 0049 E8000000 		call	_ZN5boost6detail15sp_counted_base12weak_releaseEv
 880      00
 881              	.L36:
 148:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp ****         }
 149:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp ****     }
 882              		.loc 5 149 0
 883 004e 90       		nop
 884 004f C9       		leave
 885              		.cfi_def_cfa 7, 8
 886 0050 C3       		ret
 887              		.cfi_endproc
GAS LISTING /tmp/ccvUPO8Q.s 			page 32


 888              	.LFE2025:
 890              		.section	.text._ZN5boost6detail15sp_counted_base12weak_releaseEv,"axG",@progbits,_ZN5boost6detail1
 891              		.align 2
 892              		.weak	_ZN5boost6detail15sp_counted_base12weak_releaseEv
 894              	_ZN5boost6detail15sp_counted_base12weak_releaseEv:
 895              	.LFB2027:
 150:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp **** 
 151:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp ****     void weak_add_ref() // nothrow
 152:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp ****     {
 153:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp ****         atomic_increment( &weak_count_ );
 154:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp ****     }
 155:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp **** 
 156:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp ****     void weak_release() // nothrow
 896              		.loc 5 156 0
 897              		.cfi_startproc
 898 0000 55       		pushq	%rbp
 899              		.cfi_def_cfa_offset 16
 900              		.cfi_offset 6, -16
 901 0001 4889E5   		movq	%rsp, %rbp
 902              		.cfi_def_cfa_register 6
 903 0004 4883EC10 		subq	$16, %rsp
 904 0008 48897DF8 		movq	%rdi, -8(%rbp)
 157:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp ****     {
 158:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp ****         if( atomic_exchange_and_add( &weak_count_, -1 ) == 1 )
 905              		.loc 5 158 0
 906 000c 488B45F8 		movq	-8(%rbp), %rax
 907 0010 4883C00C 		addq	$12, %rax
 908 0014 BEFFFFFF 		movl	$-1, %esi
 908      FF
 909 0019 4889C7   		movq	%rax, %rdi
 910 001c E8000000 		call	_ZN5boost6detail23atomic_exchange_and_addEPii
 910      00
 911 0021 83F801   		cmpl	$1, %eax
 912 0024 0F94C0   		sete	%al
 913 0027 84C0     		testb	%al, %al
 914 0029 7417     		je	.L39
 159:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp ****         {
 160:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp ****             destroy();
 915              		.loc 5 160 0
 916 002b 488B45F8 		movq	-8(%rbp), %rax
 917 002f 488B00   		movq	(%rax), %rax
 918 0032 4883C018 		addq	$24, %rax
 919 0036 488B00   		movq	(%rax), %rax
 920 0039 488B55F8 		movq	-8(%rbp), %rdx
 921 003d 4889D7   		movq	%rdx, %rdi
 922 0040 FFD0     		call	*%rax
 923              	.LVL3:
 924              	.L39:
 161:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp ****         }
 162:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp ****     }
 925              		.loc 5 162 0
 926 0042 90       		nop
 927 0043 C9       		leave
 928              		.cfi_def_cfa 7, 8
 929 0044 C3       		ret
 930              		.cfi_endproc
 931              	.LFE2027:
GAS LISTING /tmp/ccvUPO8Q.s 			page 33


 933              		.section	.text._ZN5boost6detail12shared_countC2Ev,"axG",@progbits,_ZN5boost6detail12shared_countC5
 934              		.align 2
 935              		.weak	_ZN5boost6detail12shared_countC2Ev
 937              	_ZN5boost6detail12shared_countC2Ev:
 938              	.LFB2056:
 939              		.file 6 "/usr/include/boost/smart_ptr/detail/shared_count.hpp"
   1:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #ifndef BOOST_SMART_PTR_DETAIL_SHARED_COUNT_HPP_INCLUDED
   2:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #define BOOST_SMART_PTR_DETAIL_SHARED_COUNT_HPP_INCLUDED
   3:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
   4:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** // MS compatible compilers support #pragma once
   5:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
   6:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #if defined(_MSC_VER) && (_MSC_VER >= 1020)
   7:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** # pragma once
   8:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #endif
   9:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
  10:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** //
  11:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** //  detail/shared_count.hpp
  12:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** //
  13:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** //  Copyright (c) 2001, 2002, 2003 Peter Dimov and Multi Media Ltd.
  14:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** //  Copyright 2004-2005 Peter Dimov
  15:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** //
  16:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** // Distributed under the Boost Software License, Version 1.0. (See
  17:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** // accompanying file LICENSE_1_0.txt or copy at
  18:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** // http://www.boost.org/LICENSE_1_0.txt)
  19:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** //
  20:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
  21:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #ifdef __BORLANDC__
  22:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** # pragma warn -8027     // Functions containing try are not expanded inline
  23:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #endif
  24:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
  25:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #include <boost/config.hpp>
  26:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #include <boost/checked_delete.hpp>
  27:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #include <boost/throw_exception.hpp>
  28:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #include <boost/smart_ptr/bad_weak_ptr.hpp>
  29:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #include <boost/smart_ptr/detail/sp_counted_base.hpp>
  30:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #include <boost/smart_ptr/detail/sp_counted_impl.hpp>
  31:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #include <boost/smart_ptr/detail/sp_disable_deprecated.hpp>
  32:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #include <boost/detail/workaround.hpp>
  33:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** // In order to avoid circular dependencies with Boost.TR1
  34:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** // we make sure that our include of <memory> doesn't try to
  35:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** // pull in the TR1 headers: that's why we use this header 
  36:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** // rather than including <memory> directly:
  37:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #include <boost/config/no_tr1/memory.hpp>  // std::auto_ptr
  38:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #include <functional>       // std::less
  39:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
  40:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #ifdef BOOST_NO_EXCEPTIONS
  41:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** # include <new>              // std::bad_alloc
  42:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #endif
  43:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
  44:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #include <boost/core/addressof.hpp>
  45:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
  46:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #if defined( BOOST_SP_DISABLE_DEPRECATED )
  47:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #pragma GCC diagnostic push
  48:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #pragma GCC diagnostic ignored "-Wdeprecated-declarations"
  49:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #endif
  50:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
  51:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** namespace boost
GAS LISTING /tmp/ccvUPO8Q.s 			page 34


  52:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** {
  53:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
  54:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** namespace movelib
  55:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** {
  56:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
  57:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****     template< class T, class D > class unique_ptr;
  58:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
  59:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** } // namespace movelib
  60:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
  61:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** namespace detail
  62:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** {
  63:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
  64:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #if defined(BOOST_SP_ENABLE_DEBUG_HOOKS)
  65:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
  66:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** int const shared_count_id = 0x2C35F101;
  67:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** int const   weak_count_id = 0x298C38A4;
  68:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
  69:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #endif
  70:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
  71:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** struct sp_nothrow_tag {};
  72:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
  73:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** template< class D > struct sp_inplace_tag
  74:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** {
  75:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** };
  76:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
  77:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** template< class T > class sp_reference_wrapper
  78:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** { 
  79:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** public:
  80:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
  81:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****     explicit sp_reference_wrapper( T & t): t_( boost::addressof( t ) )
  82:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****     {
  83:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****     }
  84:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
  85:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****     template< class Y > void operator()( Y * p ) const
  86:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****     {
  87:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         (*t_)( p );
  88:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****     }
  89:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
  90:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** private:
  91:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
  92:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****     T * t_;
  93:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** };
  94:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
  95:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** template< class D > struct sp_convert_reference
  96:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** {
  97:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****     typedef D type;
  98:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** };
  99:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 100:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** template< class D > struct sp_convert_reference< D& >
 101:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** {
 102:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****     typedef sp_reference_wrapper< D > type;
 103:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** };
 104:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 105:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** class weak_count;
 106:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 107:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** class shared_count
 108:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** {
GAS LISTING /tmp/ccvUPO8Q.s 			page 35


 109:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** private:
 110:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 111:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****     sp_counted_base * pi_;
 112:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 113:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #if defined(BOOST_SP_ENABLE_DEBUG_HOOKS)
 114:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****     int id_;
 115:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #endif
 116:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 117:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****     friend class weak_count;
 118:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 119:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** public:
 120:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 121:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****     shared_count(): pi_(0) // nothrow
 940              		.loc 6 121 0
 941              		.cfi_startproc
 942 0000 55       		pushq	%rbp
 943              		.cfi_def_cfa_offset 16
 944              		.cfi_offset 6, -16
 945 0001 4889E5   		movq	%rsp, %rbp
 946              		.cfi_def_cfa_register 6
 947 0004 48897DF8 		movq	%rdi, -8(%rbp)
 948              	.LBB16:
 949              		.loc 6 121 0
 950 0008 488B45F8 		movq	-8(%rbp), %rax
 951 000c 48C70000 		movq	$0, (%rax)
 951      000000
 952              	.LBE16:
 122:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #if defined(BOOST_SP_ENABLE_DEBUG_HOOKS)
 123:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         , id_(shared_count_id)
 124:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #endif
 125:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****     {
 126:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****     }
 953              		.loc 6 126 0
 954 0013 90       		nop
 955 0014 5D       		popq	%rbp
 956              		.cfi_def_cfa 7, 8
 957 0015 C3       		ret
 958              		.cfi_endproc
 959              	.LFE2056:
 961              		.weak	_ZN5boost6detail12shared_countC1Ev
 962              		.set	_ZN5boost6detail12shared_countC1Ev,_ZN5boost6detail12shared_countC2Ev
 963              		.section	.text._ZN5boost6detail12shared_countD2Ev,"axG",@progbits,_ZN5boost6detail12shared_countD5
 964              		.align 2
 965              		.weak	_ZN5boost6detail12shared_countD2Ev
 967              	_ZN5boost6detail12shared_countD2Ev:
 968              	.LFB2067:
 127:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 128:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****     template<class Y> explicit shared_count( Y * p ): pi_( 0 )
 129:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #if defined(BOOST_SP_ENABLE_DEBUG_HOOKS)
 130:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         , id_(shared_count_id)
 131:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #endif
 132:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****     {
 133:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #ifndef BOOST_NO_EXCEPTIONS
 134:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 135:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         try
 136:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         {
 137:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****             pi_ = new sp_counted_impl_p<Y>( p );
GAS LISTING /tmp/ccvUPO8Q.s 			page 36


 138:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         }
 139:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         catch(...)
 140:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         {
 141:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****             boost::checked_delete( p );
 142:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****             throw;
 143:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         }
 144:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 145:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #else
 146:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 147:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         pi_ = new sp_counted_impl_p<Y>( p );
 148:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 149:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         if( pi_ == 0 )
 150:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         {
 151:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****             boost::checked_delete( p );
 152:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****             boost::throw_exception( std::bad_alloc() );
 153:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         }
 154:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 155:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #endif
 156:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****     }
 157:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 158:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #if defined( BOOST_MSVC ) && BOOST_WORKAROUND( BOOST_MSVC, <= 1200 )
 159:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****     template<class Y, class D> shared_count( Y * p, D d ): pi_(0)
 160:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #else
 161:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****     template<class P, class D> shared_count( P p, D d ): pi_(0)
 162:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #endif
 163:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #if defined(BOOST_SP_ENABLE_DEBUG_HOOKS)
 164:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         , id_(shared_count_id)
 165:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #endif
 166:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****     {
 167:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #if defined( BOOST_MSVC ) && BOOST_WORKAROUND( BOOST_MSVC, <= 1200 )
 168:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         typedef Y* P;
 169:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #endif
 170:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #ifndef BOOST_NO_EXCEPTIONS
 171:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 172:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         try
 173:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         {
 174:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****             pi_ = new sp_counted_impl_pd<P, D>(p, d);
 175:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         }
 176:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         catch(...)
 177:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         {
 178:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****             d(p); // delete p
 179:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****             throw;
 180:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         }
 181:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 182:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #else
 183:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 184:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         pi_ = new sp_counted_impl_pd<P, D>(p, d);
 185:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 186:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         if(pi_ == 0)
 187:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         {
 188:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****             d(p); // delete p
 189:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****             boost::throw_exception(std::bad_alloc());
 190:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         }
 191:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 192:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #endif
 193:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****     }
 194:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
GAS LISTING /tmp/ccvUPO8Q.s 			page 37


 195:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #if !defined( BOOST_NO_FUNCTION_TEMPLATE_ORDERING )
 196:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 197:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****     template< class P, class D > shared_count( P p, sp_inplace_tag<D> ): pi_( 0 )
 198:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #if defined(BOOST_SP_ENABLE_DEBUG_HOOKS)
 199:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         , id_(shared_count_id)
 200:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #endif
 201:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****     {
 202:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #ifndef BOOST_NO_EXCEPTIONS
 203:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 204:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         try
 205:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         {
 206:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****             pi_ = new sp_counted_impl_pd< P, D >( p );
 207:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         }
 208:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         catch( ... )
 209:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         {
 210:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****             D::operator_fn( p ); // delete p
 211:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****             throw;
 212:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         }
 213:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 214:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #else
 215:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 216:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         pi_ = new sp_counted_impl_pd< P, D >( p );
 217:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 218:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         if( pi_ == 0 )
 219:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         {
 220:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****             D::operator_fn( p ); // delete p
 221:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****             boost::throw_exception( std::bad_alloc() );
 222:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         }
 223:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 224:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #endif // #ifndef BOOST_NO_EXCEPTIONS
 225:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****     }
 226:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 227:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #endif // !defined( BOOST_NO_FUNCTION_TEMPLATE_ORDERING )
 228:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 229:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****     template<class P, class D, class A> shared_count( P p, D d, A a ): pi_( 0 )
 230:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #if defined(BOOST_SP_ENABLE_DEBUG_HOOKS)
 231:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         , id_(shared_count_id)
 232:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #endif
 233:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****     {
 234:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         typedef sp_counted_impl_pda<P, D, A> impl_type;
 235:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 236:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #if !defined( BOOST_NO_CXX11_ALLOCATOR )
 237:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 238:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         typedef typename std::allocator_traits<A>::template rebind_alloc< impl_type > A2;
 239:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 240:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #else
 241:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 242:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         typedef typename A::template rebind< impl_type >::other A2;
 243:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 244:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #endif
 245:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 246:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         A2 a2( a );
 247:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 248:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #ifndef BOOST_NO_EXCEPTIONS
 249:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 250:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         try
 251:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         {
GAS LISTING /tmp/ccvUPO8Q.s 			page 38


 252:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #if !defined( BOOST_NO_CXX11_ALLOCATOR )
 253:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 254:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****             impl_type * pi = std::allocator_traits<A2>::allocate( a2, 1 );
 255:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****             pi_ = pi;
 256:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****             std::allocator_traits<A2>::construct( a2, pi, p, d, a );
 257:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 258:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #else
 259:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 260:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****             pi_ = a2.allocate( 1, static_cast< impl_type* >( 0 ) );
 261:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****             ::new( static_cast< void* >( pi_ ) ) impl_type( p, d, a );
 262:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 263:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #endif
 264:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         }
 265:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         catch(...)
 266:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         {
 267:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****             d( p );
 268:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 269:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****             if( pi_ != 0 )
 270:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****             {
 271:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****                 a2.deallocate( static_cast< impl_type* >( pi_ ), 1 );
 272:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****             }
 273:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 274:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****             throw;
 275:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         }
 276:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 277:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #else
 278:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 279:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #if !defined( BOOST_NO_CXX11_ALLOCATOR )
 280:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 281:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         impl_type * pi = std::allocator_traits<A2>::allocate( a2, 1 );
 282:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         pi_ = pi;
 283:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 284:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #else
 285:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 286:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         pi_ = a2.allocate( 1, static_cast< impl_type* >( 0 ) );
 287:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 288:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #endif
 289:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 290:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         if( pi_ != 0 )
 291:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         {
 292:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #if !defined( BOOST_NO_CXX11_ALLOCATOR )
 293:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 294:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****             std::allocator_traits<A2>::construct( a2, pi, p, d, a );
 295:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 296:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #else
 297:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 298:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****             ::new( static_cast< void* >( pi_ ) ) impl_type( p, d, a );
 299:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 300:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #endif
 301:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         }
 302:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         else
 303:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         {
 304:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****             d( p );
 305:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****             boost::throw_exception( std::bad_alloc() );
 306:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         }
 307:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 308:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #endif
GAS LISTING /tmp/ccvUPO8Q.s 			page 39


 309:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****     }
 310:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 311:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #if !defined( BOOST_NO_FUNCTION_TEMPLATE_ORDERING )
 312:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 313:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****     template< class P, class D, class A > shared_count( P p, sp_inplace_tag< D >, A a ): pi_( 0 )
 314:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #if defined(BOOST_SP_ENABLE_DEBUG_HOOKS)
 315:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         , id_(shared_count_id)
 316:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #endif
 317:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****     {
 318:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         typedef sp_counted_impl_pda< P, D, A > impl_type;
 319:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 320:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #if !defined( BOOST_NO_CXX11_ALLOCATOR )
 321:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 322:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         typedef typename std::allocator_traits<A>::template rebind_alloc< impl_type > A2;
 323:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 324:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #else
 325:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 326:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         typedef typename A::template rebind< impl_type >::other A2;
 327:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 328:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #endif
 329:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 330:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         A2 a2( a );
 331:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 332:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #ifndef BOOST_NO_EXCEPTIONS
 333:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 334:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         try
 335:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         {
 336:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #if !defined( BOOST_NO_CXX11_ALLOCATOR )
 337:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 338:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****             impl_type * pi = std::allocator_traits<A2>::allocate( a2, 1 );
 339:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****             pi_ = pi;
 340:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****             std::allocator_traits<A2>::construct( a2, pi, p, a );
 341:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 342:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #else
 343:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 344:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****             pi_ = a2.allocate( 1, static_cast< impl_type* >( 0 ) );
 345:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****             ::new( static_cast< void* >( pi_ ) ) impl_type( p, a );
 346:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 347:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #endif
 348:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         }
 349:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         catch(...)
 350:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         {
 351:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****             D::operator_fn( p );
 352:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 353:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****             if( pi_ != 0 )
 354:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****             {
 355:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****                 a2.deallocate( static_cast< impl_type* >( pi_ ), 1 );
 356:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****             }
 357:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 358:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****             throw;
 359:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         }
 360:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 361:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #else
 362:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 363:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #if !defined( BOOST_NO_CXX11_ALLOCATOR )
 364:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 365:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         impl_type * pi = std::allocator_traits<A2>::allocate( a2, 1 );
GAS LISTING /tmp/ccvUPO8Q.s 			page 40


 366:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         pi_ = pi;
 367:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 368:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #else
 369:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 370:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         pi_ = a2.allocate( 1, static_cast< impl_type* >( 0 ) );
 371:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 372:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #endif
 373:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 374:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         if( pi_ != 0 )
 375:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         {
 376:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #if !defined( BOOST_NO_CXX11_ALLOCATOR )
 377:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 378:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****             std::allocator_traits<A2>::construct( a2, pi, p, a );
 379:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 380:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #else
 381:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 382:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****             ::new( static_cast< void* >( pi_ ) ) impl_type( p, a );
 383:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 384:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #endif
 385:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         }
 386:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         else
 387:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         {
 388:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****             D::operator_fn( p );
 389:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****             boost::throw_exception( std::bad_alloc() );
 390:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         }
 391:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 392:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #endif // #ifndef BOOST_NO_EXCEPTIONS
 393:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****     }
 394:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 395:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #endif // !defined( BOOST_NO_FUNCTION_TEMPLATE_ORDERING )
 396:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 397:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #ifndef BOOST_NO_AUTO_PTR
 398:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 399:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****     // auto_ptr<Y> is special cased to provide the strong guarantee
 400:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 401:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****     template<class Y>
 402:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****     explicit shared_count( std::auto_ptr<Y> & r ): pi_( new sp_counted_impl_p<Y>( r.get() ) )
 403:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #if defined(BOOST_SP_ENABLE_DEBUG_HOOKS)
 404:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         , id_(shared_count_id)
 405:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #endif
 406:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****     {
 407:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #ifdef BOOST_NO_EXCEPTIONS
 408:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 409:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         if( pi_ == 0 )
 410:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         {
 411:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****             boost::throw_exception(std::bad_alloc());
 412:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         }
 413:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 414:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #endif
 415:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 416:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         r.release();
 417:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****     }
 418:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 419:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #endif 
 420:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 421:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #if !defined( BOOST_NO_CXX11_SMART_PTR )
 422:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
GAS LISTING /tmp/ccvUPO8Q.s 			page 41


 423:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****     template<class Y, class D>
 424:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****     explicit shared_count( std::unique_ptr<Y, D> & r ): pi_( 0 )
 425:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #if defined(BOOST_SP_ENABLE_DEBUG_HOOKS)
 426:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         , id_(shared_count_id)
 427:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #endif
 428:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****     {
 429:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         typedef typename sp_convert_reference<D>::type D2;
 430:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 431:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         D2 d2( r.get_deleter() );
 432:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         pi_ = new sp_counted_impl_pd< typename std::unique_ptr<Y, D>::pointer, D2 >( r.get(), d2 );
 433:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 434:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #ifdef BOOST_NO_EXCEPTIONS
 435:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 436:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         if( pi_ == 0 )
 437:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         {
 438:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****             boost::throw_exception( std::bad_alloc() );
 439:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         }
 440:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 441:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #endif
 442:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 443:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         r.release();
 444:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****     }
 445:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 446:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #endif
 447:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 448:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****     template<class Y, class D>
 449:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****     explicit shared_count( boost::movelib::unique_ptr<Y, D> & r ): pi_( 0 )
 450:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #if defined(BOOST_SP_ENABLE_DEBUG_HOOKS)
 451:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         , id_(shared_count_id)
 452:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #endif
 453:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****     {
 454:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         typedef typename sp_convert_reference<D>::type D2;
 455:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 456:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         D2 d2( r.get_deleter() );
 457:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         pi_ = new sp_counted_impl_pd< typename boost::movelib::unique_ptr<Y, D>::pointer, D2 >( r.g
 458:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 459:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #ifdef BOOST_NO_EXCEPTIONS
 460:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 461:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         if( pi_ == 0 )
 462:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         {
 463:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****             boost::throw_exception( std::bad_alloc() );
 464:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         }
 465:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 466:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #endif
 467:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 468:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         r.release();
 469:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****     }
 470:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 471:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****     ~shared_count() // nothrow
 969              		.loc 6 471 0
 970              		.cfi_startproc
 971              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 972              		.cfi_lsda 0x1b,.LLSDA2067
 973 0000 55       		pushq	%rbp
 974              		.cfi_def_cfa_offset 16
 975              		.cfi_offset 6, -16
 976 0001 4889E5   		movq	%rsp, %rbp
GAS LISTING /tmp/ccvUPO8Q.s 			page 42


 977              		.cfi_def_cfa_register 6
 978 0004 4883EC10 		subq	$16, %rsp
 979 0008 48897DF8 		movq	%rdi, -8(%rbp)
 980              	.LBB17:
 472:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****     {
 473:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         if( pi_ != 0 ) pi_->release();
 981              		.loc 6 473 0
 982 000c 488B45F8 		movq	-8(%rbp), %rax
 983 0010 488B00   		movq	(%rax), %rax
 984 0013 4885C0   		testq	%rax, %rax
 985 0016 740F     		je	.L43
 986              		.loc 6 473 0 is_stmt 0 discriminator 1
 987 0018 488B45F8 		movq	-8(%rbp), %rax
 988 001c 488B00   		movq	(%rax), %rax
 989 001f 4889C7   		movq	%rax, %rdi
 990 0022 E8000000 		call	_ZN5boost6detail15sp_counted_base7releaseEv
 990      00
 991              	.L43:
 992              	.LBE17:
 474:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #if defined(BOOST_SP_ENABLE_DEBUG_HOOKS)
 475:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         id_ = 0;
 476:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #endif
 477:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****     }
 993              		.loc 6 477 0 is_stmt 1
 994 0027 90       		nop
 995 0028 C9       		leave
 996              		.cfi_def_cfa 7, 8
 997 0029 C3       		ret
 998              		.cfi_endproc
 999              	.LFE2067:
 1000              		.section	.gcc_except_table._ZN5boost6detail12shared_countD2Ev,"aG",@progbits,_ZN5boost6detail12sha
 1001              	.LLSDA2067:
 1002 0000 FF       		.byte	0xff
 1003 0001 FF       		.byte	0xff
 1004 0002 01       		.byte	0x1
 1005 0003 00       		.uleb128 .LLSDACSE2067-.LLSDACSB2067
 1006              	.LLSDACSB2067:
 1007              	.LLSDACSE2067:
 1008              		.section	.text._ZN5boost6detail12shared_countD2Ev,"axG",@progbits,_ZN5boost6detail12shared_countD5
 1010              		.weak	_ZN5boost6detail12shared_countD1Ev
 1011              		.set	_ZN5boost6detail12shared_countD1Ev,_ZN5boost6detail12shared_countD2Ev
 1012              		.section	.text._ZN5boost6detail12shared_countC2ERKS1_,"axG",@progbits,_ZN5boost6detail12shared_cou
 1013              		.align 2
 1014              		.weak	_ZN5boost6detail12shared_countC2ERKS1_
 1016              	_ZN5boost6detail12shared_countC2ERKS1_:
 1017              	.LFB2070:
 478:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 479:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****     shared_count(shared_count const & r): pi_(r.pi_) // nothrow
 1018              		.loc 6 479 0
 1019              		.cfi_startproc
 1020 0000 55       		pushq	%rbp
 1021              		.cfi_def_cfa_offset 16
 1022              		.cfi_offset 6, -16
 1023 0001 4889E5   		movq	%rsp, %rbp
 1024              		.cfi_def_cfa_register 6
 1025 0004 4883EC10 		subq	$16, %rsp
 1026 0008 48897DF8 		movq	%rdi, -8(%rbp)
GAS LISTING /tmp/ccvUPO8Q.s 			page 43


 1027 000c 488975F0 		movq	%rsi, -16(%rbp)
 1028              	.LBB18:
 1029              		.loc 6 479 0
 1030 0010 488B45F0 		movq	-16(%rbp), %rax
 1031 0014 488B10   		movq	(%rax), %rdx
 1032 0017 488B45F8 		movq	-8(%rbp), %rax
 1033 001b 488910   		movq	%rdx, (%rax)
 480:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #if defined(BOOST_SP_ENABLE_DEBUG_HOOKS)
 481:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         , id_(shared_count_id)
 482:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #endif
 483:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****     {
 484:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         if( pi_ != 0 ) pi_->add_ref_copy();
 1034              		.loc 6 484 0
 1035 001e 488B45F8 		movq	-8(%rbp), %rax
 1036 0022 488B00   		movq	(%rax), %rax
 1037 0025 4885C0   		testq	%rax, %rax
 1038 0028 740F     		je	.L46
 1039              		.loc 6 484 0 is_stmt 0 discriminator 1
 1040 002a 488B45F8 		movq	-8(%rbp), %rax
 1041 002e 488B00   		movq	(%rax), %rax
 1042 0031 4889C7   		movq	%rax, %rdi
 1043 0034 E8000000 		call	_ZN5boost6detail15sp_counted_base12add_ref_copyEv
 1043      00
 1044              	.L46:
 1045              	.LBE18:
 485:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****     }
 1046              		.loc 6 485 0 is_stmt 1
 1047 0039 90       		nop
 1048 003a C9       		leave
 1049              		.cfi_def_cfa 7, 8
 1050 003b C3       		ret
 1051              		.cfi_endproc
 1052              	.LFE2070:
 1054              		.weak	_ZN5boost6detail12shared_countC1ERKS1_
 1055              		.set	_ZN5boost6detail12shared_countC1ERKS1_,_ZN5boost6detail12shared_countC2ERKS1_
 1056              		.section	.text._ZN5boost6detail12shared_count4swapERS1_,"axG",@progbits,_ZN5boost6detail12shared_c
 1057              		.align 2
 1058              		.weak	_ZN5boost6detail12shared_count4swapERS1_
 1060              	_ZN5boost6detail12shared_count4swapERS1_:
 1061              	.LFB2076:
 486:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 487:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #if !defined( BOOST_NO_CXX11_RVALUE_REFERENCES )
 488:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 489:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****     shared_count(shared_count && r): pi_(r.pi_) // nothrow
 490:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #if defined(BOOST_SP_ENABLE_DEBUG_HOOKS)
 491:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         , id_(shared_count_id)
 492:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #endif
 493:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****     {
 494:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         r.pi_ = 0;
 495:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****     }
 496:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 497:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #endif
 498:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 499:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****     explicit shared_count(weak_count const & r); // throws bad_weak_ptr when r.use_count() == 0
 500:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****     shared_count( weak_count const & r, sp_nothrow_tag ); // constructs an empty *this when r.use_c
 501:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 502:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****     shared_count & operator= (shared_count const & r) // nothrow
GAS LISTING /tmp/ccvUPO8Q.s 			page 44


 503:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****     {
 504:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         sp_counted_base * tmp = r.pi_;
 505:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 506:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         if( tmp != pi_ )
 507:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         {
 508:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****             if( tmp != 0 ) tmp->add_ref_copy();
 509:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****             if( pi_ != 0 ) pi_->release();
 510:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****             pi_ = tmp;
 511:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         }
 512:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 513:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         return *this;
 514:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****     }
 515:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 516:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****     void swap(shared_count & r) // nothrow
 1062              		.loc 6 516 0
 1063              		.cfi_startproc
 1064 0000 55       		pushq	%rbp
 1065              		.cfi_def_cfa_offset 16
 1066              		.cfi_offset 6, -16
 1067 0001 4889E5   		movq	%rsp, %rbp
 1068              		.cfi_def_cfa_register 6
 1069 0004 48897DE8 		movq	%rdi, -24(%rbp)
 1070 0008 488975E0 		movq	%rsi, -32(%rbp)
 517:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****     {
 518:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         sp_counted_base * tmp = r.pi_;
 1071              		.loc 6 518 0
 1072 000c 488B45E0 		movq	-32(%rbp), %rax
 1073 0010 488B00   		movq	(%rax), %rax
 1074 0013 488945F8 		movq	%rax, -8(%rbp)
 519:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         r.pi_ = pi_;
 1075              		.loc 6 519 0
 1076 0017 488B45E8 		movq	-24(%rbp), %rax
 1077 001b 488B10   		movq	(%rax), %rdx
 1078 001e 488B45E0 		movq	-32(%rbp), %rax
 1079 0022 488910   		movq	%rdx, (%rax)
 520:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         pi_ = tmp;
 1080              		.loc 6 520 0
 1081 0025 488B45E8 		movq	-24(%rbp), %rax
 1082 0029 488B55F8 		movq	-8(%rbp), %rdx
 1083 002d 488910   		movq	%rdx, (%rax)
 521:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****     }
 1084              		.loc 6 521 0
 1085 0030 90       		nop
 1086 0031 5D       		popq	%rbp
 1087              		.cfi_def_cfa 7, 8
 1088 0032 C3       		ret
 1089              		.cfi_endproc
 1090              	.LFE2076:
 1092              		.section	.text._ZN5boost6detail26sp_enable_shared_from_thisEz,"axG",@progbits,_ZN5boost6detail26sp
 1093              		.weak	_ZN5boost6detail26sp_enable_shared_from_thisEz
 1095              	_ZN5boost6detail26sp_enable_shared_from_thisEz:
 1096              	.LFB2542:
 1097              		.file 7 "/usr/include/boost/smart_ptr/shared_ptr.hpp"
   1:/usr/include/boost/smart_ptr/shared_ptr.hpp **** #ifndef BOOST_SMART_PTR_SHARED_PTR_HPP_INCLUDED
   2:/usr/include/boost/smart_ptr/shared_ptr.hpp **** #define BOOST_SMART_PTR_SHARED_PTR_HPP_INCLUDED
   3:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
   4:/usr/include/boost/smart_ptr/shared_ptr.hpp **** //
GAS LISTING /tmp/ccvUPO8Q.s 			page 45


   5:/usr/include/boost/smart_ptr/shared_ptr.hpp **** //  shared_ptr.hpp
   6:/usr/include/boost/smart_ptr/shared_ptr.hpp **** //
   7:/usr/include/boost/smart_ptr/shared_ptr.hpp **** //  (C) Copyright Greg Colvin and Beman Dawes 1998, 1999.
   8:/usr/include/boost/smart_ptr/shared_ptr.hpp **** //  Copyright (c) 2001-2008 Peter Dimov
   9:/usr/include/boost/smart_ptr/shared_ptr.hpp **** //
  10:/usr/include/boost/smart_ptr/shared_ptr.hpp **** //  Distributed under the Boost Software License, Version 1.0. (See
  11:/usr/include/boost/smart_ptr/shared_ptr.hpp **** //  accompanying file LICENSE_1_0.txt or copy at
  12:/usr/include/boost/smart_ptr/shared_ptr.hpp **** //  http://www.boost.org/LICENSE_1_0.txt)
  13:/usr/include/boost/smart_ptr/shared_ptr.hpp **** //
  14:/usr/include/boost/smart_ptr/shared_ptr.hpp **** //  See http://www.boost.org/libs/smart_ptr/shared_ptr.htm for documentation.
  15:/usr/include/boost/smart_ptr/shared_ptr.hpp **** //
  16:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
  17:/usr/include/boost/smart_ptr/shared_ptr.hpp **** #include <boost/config.hpp>   // for broken compiler workarounds
  18:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
  19:/usr/include/boost/smart_ptr/shared_ptr.hpp **** // In order to avoid circular dependencies with Boost.TR1
  20:/usr/include/boost/smart_ptr/shared_ptr.hpp **** // we make sure that our include of <memory> doesn't try to
  21:/usr/include/boost/smart_ptr/shared_ptr.hpp **** // pull in the TR1 headers: that's why we use this header 
  22:/usr/include/boost/smart_ptr/shared_ptr.hpp **** // rather than including <memory> directly:
  23:/usr/include/boost/smart_ptr/shared_ptr.hpp **** #include <boost/config/no_tr1/memory.hpp>  // std::auto_ptr
  24:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
  25:/usr/include/boost/smart_ptr/shared_ptr.hpp **** #include <boost/assert.hpp>
  26:/usr/include/boost/smart_ptr/shared_ptr.hpp **** #include <boost/checked_delete.hpp>
  27:/usr/include/boost/smart_ptr/shared_ptr.hpp **** #include <boost/throw_exception.hpp>
  28:/usr/include/boost/smart_ptr/shared_ptr.hpp **** #include <boost/smart_ptr/detail/shared_count.hpp>
  29:/usr/include/boost/smart_ptr/shared_ptr.hpp **** #include <boost/detail/workaround.hpp>
  30:/usr/include/boost/smart_ptr/shared_ptr.hpp **** #include <boost/smart_ptr/detail/sp_convertible.hpp>
  31:/usr/include/boost/smart_ptr/shared_ptr.hpp **** #include <boost/smart_ptr/detail/sp_nullptr_t.hpp>
  32:/usr/include/boost/smart_ptr/shared_ptr.hpp **** #include <boost/smart_ptr/detail/sp_disable_deprecated.hpp>
  33:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
  34:/usr/include/boost/smart_ptr/shared_ptr.hpp **** #if !defined(BOOST_SP_NO_ATOMIC_ACCESS)
  35:/usr/include/boost/smart_ptr/shared_ptr.hpp **** #include <boost/smart_ptr/detail/spinlock_pool.hpp>
  36:/usr/include/boost/smart_ptr/shared_ptr.hpp **** #endif
  37:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
  38:/usr/include/boost/smart_ptr/shared_ptr.hpp **** #include <algorithm>            // for std::swap
  39:/usr/include/boost/smart_ptr/shared_ptr.hpp **** #include <functional>           // for std::less
  40:/usr/include/boost/smart_ptr/shared_ptr.hpp **** #include <typeinfo>             // for std::bad_cast
  41:/usr/include/boost/smart_ptr/shared_ptr.hpp **** #include <cstddef>              // for std::size_t
  42:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
  43:/usr/include/boost/smart_ptr/shared_ptr.hpp **** #if !defined(BOOST_NO_IOSTREAM)
  44:/usr/include/boost/smart_ptr/shared_ptr.hpp **** #if !defined(BOOST_NO_IOSFWD)
  45:/usr/include/boost/smart_ptr/shared_ptr.hpp **** #include <iosfwd>               // for std::basic_ostream
  46:/usr/include/boost/smart_ptr/shared_ptr.hpp **** #else
  47:/usr/include/boost/smart_ptr/shared_ptr.hpp **** #include <ostream>
  48:/usr/include/boost/smart_ptr/shared_ptr.hpp **** #endif
  49:/usr/include/boost/smart_ptr/shared_ptr.hpp **** #endif
  50:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
  51:/usr/include/boost/smart_ptr/shared_ptr.hpp **** #if defined( BOOST_SP_DISABLE_DEPRECATED )
  52:/usr/include/boost/smart_ptr/shared_ptr.hpp **** #pragma GCC diagnostic push
  53:/usr/include/boost/smart_ptr/shared_ptr.hpp **** #pragma GCC diagnostic ignored "-Wdeprecated-declarations"
  54:/usr/include/boost/smart_ptr/shared_ptr.hpp **** #endif
  55:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
  56:/usr/include/boost/smart_ptr/shared_ptr.hpp **** namespace boost
  57:/usr/include/boost/smart_ptr/shared_ptr.hpp **** {
  58:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
  59:/usr/include/boost/smart_ptr/shared_ptr.hpp **** template<class T> class shared_ptr;
  60:/usr/include/boost/smart_ptr/shared_ptr.hpp **** template<class T> class weak_ptr;
  61:/usr/include/boost/smart_ptr/shared_ptr.hpp **** template<class T> class enable_shared_from_this;
GAS LISTING /tmp/ccvUPO8Q.s 			page 46


  62:/usr/include/boost/smart_ptr/shared_ptr.hpp **** class enable_shared_from_raw;
  63:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
  64:/usr/include/boost/smart_ptr/shared_ptr.hpp **** namespace movelib
  65:/usr/include/boost/smart_ptr/shared_ptr.hpp **** {
  66:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
  67:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     template< class T, class D > class unique_ptr;
  68:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
  69:/usr/include/boost/smart_ptr/shared_ptr.hpp **** } // namespace movelib
  70:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
  71:/usr/include/boost/smart_ptr/shared_ptr.hpp **** namespace detail
  72:/usr/include/boost/smart_ptr/shared_ptr.hpp **** {
  73:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
  74:/usr/include/boost/smart_ptr/shared_ptr.hpp **** // sp_element, element_type
  75:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
  76:/usr/include/boost/smart_ptr/shared_ptr.hpp **** template< class T > struct sp_element
  77:/usr/include/boost/smart_ptr/shared_ptr.hpp **** {
  78:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     typedef T type;
  79:/usr/include/boost/smart_ptr/shared_ptr.hpp **** };
  80:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
  81:/usr/include/boost/smart_ptr/shared_ptr.hpp **** #if !defined( BOOST_NO_TEMPLATE_PARTIAL_SPECIALIZATION )
  82:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
  83:/usr/include/boost/smart_ptr/shared_ptr.hpp **** template< class T > struct sp_element< T[] >
  84:/usr/include/boost/smart_ptr/shared_ptr.hpp **** {
  85:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     typedef T type;
  86:/usr/include/boost/smart_ptr/shared_ptr.hpp **** };
  87:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
  88:/usr/include/boost/smart_ptr/shared_ptr.hpp **** #if !defined( __BORLANDC__ ) || !BOOST_WORKAROUND( __BORLANDC__, < 0x600 )
  89:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
  90:/usr/include/boost/smart_ptr/shared_ptr.hpp **** template< class T, std::size_t N > struct sp_element< T[N] >
  91:/usr/include/boost/smart_ptr/shared_ptr.hpp **** {
  92:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     typedef T type;
  93:/usr/include/boost/smart_ptr/shared_ptr.hpp **** };
  94:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
  95:/usr/include/boost/smart_ptr/shared_ptr.hpp **** #endif
  96:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
  97:/usr/include/boost/smart_ptr/shared_ptr.hpp **** #endif // !defined( BOOST_NO_TEMPLATE_PARTIAL_SPECIALIZATION )
  98:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
  99:/usr/include/boost/smart_ptr/shared_ptr.hpp **** // sp_dereference, return type of operator*
 100:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 101:/usr/include/boost/smart_ptr/shared_ptr.hpp **** template< class T > struct sp_dereference
 102:/usr/include/boost/smart_ptr/shared_ptr.hpp **** {
 103:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     typedef T & type;
 104:/usr/include/boost/smart_ptr/shared_ptr.hpp **** };
 105:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 106:/usr/include/boost/smart_ptr/shared_ptr.hpp **** template<> struct sp_dereference< void >
 107:/usr/include/boost/smart_ptr/shared_ptr.hpp **** {
 108:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     typedef void type;
 109:/usr/include/boost/smart_ptr/shared_ptr.hpp **** };
 110:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 111:/usr/include/boost/smart_ptr/shared_ptr.hpp **** #if !defined(BOOST_NO_CV_VOID_SPECIALIZATIONS)
 112:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 113:/usr/include/boost/smart_ptr/shared_ptr.hpp **** template<> struct sp_dereference< void const >
 114:/usr/include/boost/smart_ptr/shared_ptr.hpp **** {
 115:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     typedef void type;
 116:/usr/include/boost/smart_ptr/shared_ptr.hpp **** };
 117:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 118:/usr/include/boost/smart_ptr/shared_ptr.hpp **** template<> struct sp_dereference< void volatile >
GAS LISTING /tmp/ccvUPO8Q.s 			page 47


 119:/usr/include/boost/smart_ptr/shared_ptr.hpp **** {
 120:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     typedef void type;
 121:/usr/include/boost/smart_ptr/shared_ptr.hpp **** };
 122:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 123:/usr/include/boost/smart_ptr/shared_ptr.hpp **** template<> struct sp_dereference< void const volatile >
 124:/usr/include/boost/smart_ptr/shared_ptr.hpp **** {
 125:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     typedef void type;
 126:/usr/include/boost/smart_ptr/shared_ptr.hpp **** };
 127:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 128:/usr/include/boost/smart_ptr/shared_ptr.hpp **** #endif // !defined(BOOST_NO_CV_VOID_SPECIALIZATIONS)
 129:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 130:/usr/include/boost/smart_ptr/shared_ptr.hpp **** #if !defined( BOOST_NO_TEMPLATE_PARTIAL_SPECIALIZATION )
 131:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 132:/usr/include/boost/smart_ptr/shared_ptr.hpp **** template< class T > struct sp_dereference< T[] >
 133:/usr/include/boost/smart_ptr/shared_ptr.hpp **** {
 134:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     typedef void type;
 135:/usr/include/boost/smart_ptr/shared_ptr.hpp **** };
 136:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 137:/usr/include/boost/smart_ptr/shared_ptr.hpp **** #if !defined( __BORLANDC__ ) || !BOOST_WORKAROUND( __BORLANDC__, < 0x600 )
 138:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 139:/usr/include/boost/smart_ptr/shared_ptr.hpp **** template< class T, std::size_t N > struct sp_dereference< T[N] >
 140:/usr/include/boost/smart_ptr/shared_ptr.hpp **** {
 141:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     typedef void type;
 142:/usr/include/boost/smart_ptr/shared_ptr.hpp **** };
 143:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 144:/usr/include/boost/smart_ptr/shared_ptr.hpp **** #endif
 145:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 146:/usr/include/boost/smart_ptr/shared_ptr.hpp **** #endif // !defined( BOOST_NO_TEMPLATE_PARTIAL_SPECIALIZATION )
 147:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 148:/usr/include/boost/smart_ptr/shared_ptr.hpp **** // sp_member_access, return type of operator->
 149:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 150:/usr/include/boost/smart_ptr/shared_ptr.hpp **** template< class T > struct sp_member_access
 151:/usr/include/boost/smart_ptr/shared_ptr.hpp **** {
 152:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     typedef T * type;
 153:/usr/include/boost/smart_ptr/shared_ptr.hpp **** };
 154:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 155:/usr/include/boost/smart_ptr/shared_ptr.hpp **** #if !defined( BOOST_NO_TEMPLATE_PARTIAL_SPECIALIZATION )
 156:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 157:/usr/include/boost/smart_ptr/shared_ptr.hpp **** template< class T > struct sp_member_access< T[] >
 158:/usr/include/boost/smart_ptr/shared_ptr.hpp **** {
 159:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     typedef void type;
 160:/usr/include/boost/smart_ptr/shared_ptr.hpp **** };
 161:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 162:/usr/include/boost/smart_ptr/shared_ptr.hpp **** #if !defined( __BORLANDC__ ) || !BOOST_WORKAROUND( __BORLANDC__, < 0x600 )
 163:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 164:/usr/include/boost/smart_ptr/shared_ptr.hpp **** template< class T, std::size_t N > struct sp_member_access< T[N] >
 165:/usr/include/boost/smart_ptr/shared_ptr.hpp **** {
 166:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     typedef void type;
 167:/usr/include/boost/smart_ptr/shared_ptr.hpp **** };
 168:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 169:/usr/include/boost/smart_ptr/shared_ptr.hpp **** #endif
 170:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 171:/usr/include/boost/smart_ptr/shared_ptr.hpp **** #endif // !defined( BOOST_NO_TEMPLATE_PARTIAL_SPECIALIZATION )
 172:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 173:/usr/include/boost/smart_ptr/shared_ptr.hpp **** // sp_array_access, return type of operator[]
 174:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 175:/usr/include/boost/smart_ptr/shared_ptr.hpp **** template< class T > struct sp_array_access
GAS LISTING /tmp/ccvUPO8Q.s 			page 48


 176:/usr/include/boost/smart_ptr/shared_ptr.hpp **** {
 177:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     typedef void type;
 178:/usr/include/boost/smart_ptr/shared_ptr.hpp **** };
 179:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 180:/usr/include/boost/smart_ptr/shared_ptr.hpp **** #if !defined( BOOST_NO_TEMPLATE_PARTIAL_SPECIALIZATION )
 181:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 182:/usr/include/boost/smart_ptr/shared_ptr.hpp **** template< class T > struct sp_array_access< T[] >
 183:/usr/include/boost/smart_ptr/shared_ptr.hpp **** {
 184:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     typedef T & type;
 185:/usr/include/boost/smart_ptr/shared_ptr.hpp **** };
 186:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 187:/usr/include/boost/smart_ptr/shared_ptr.hpp **** #if !defined( __BORLANDC__ ) || !BOOST_WORKAROUND( __BORLANDC__, < 0x600 )
 188:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 189:/usr/include/boost/smart_ptr/shared_ptr.hpp **** template< class T, std::size_t N > struct sp_array_access< T[N] >
 190:/usr/include/boost/smart_ptr/shared_ptr.hpp **** {
 191:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     typedef T & type;
 192:/usr/include/boost/smart_ptr/shared_ptr.hpp **** };
 193:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 194:/usr/include/boost/smart_ptr/shared_ptr.hpp **** #endif
 195:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 196:/usr/include/boost/smart_ptr/shared_ptr.hpp **** #endif // !defined( BOOST_NO_TEMPLATE_PARTIAL_SPECIALIZATION )
 197:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 198:/usr/include/boost/smart_ptr/shared_ptr.hpp **** // sp_extent, for operator[] index check
 199:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 200:/usr/include/boost/smart_ptr/shared_ptr.hpp **** template< class T > struct sp_extent
 201:/usr/include/boost/smart_ptr/shared_ptr.hpp **** {
 202:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     enum _vt { value = 0 };
 203:/usr/include/boost/smart_ptr/shared_ptr.hpp **** };
 204:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 205:/usr/include/boost/smart_ptr/shared_ptr.hpp **** #if !defined( BOOST_NO_TEMPLATE_PARTIAL_SPECIALIZATION )
 206:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 207:/usr/include/boost/smart_ptr/shared_ptr.hpp **** template< class T, std::size_t N > struct sp_extent< T[N] >
 208:/usr/include/boost/smart_ptr/shared_ptr.hpp **** {
 209:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     enum _vt { value = N };
 210:/usr/include/boost/smart_ptr/shared_ptr.hpp **** };
 211:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 212:/usr/include/boost/smart_ptr/shared_ptr.hpp **** #endif // !defined( BOOST_NO_TEMPLATE_PARTIAL_SPECIALIZATION )
 213:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 214:/usr/include/boost/smart_ptr/shared_ptr.hpp **** // enable_shared_from_this support
 215:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 216:/usr/include/boost/smart_ptr/shared_ptr.hpp **** template< class X, class Y, class T > inline void sp_enable_shared_from_this( boost::shared_ptr<X> 
 217:/usr/include/boost/smart_ptr/shared_ptr.hpp **** {
 218:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     if( pe != 0 )
 219:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     {
 220:/usr/include/boost/smart_ptr/shared_ptr.hpp ****         pe->_internal_accept_owner( ppx, const_cast< Y* >( py ) );
 221:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     }
 222:/usr/include/boost/smart_ptr/shared_ptr.hpp **** }
 223:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 224:/usr/include/boost/smart_ptr/shared_ptr.hpp **** template< class X, class Y > inline void sp_enable_shared_from_this( boost::shared_ptr<X> * ppx, Y 
 225:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 226:/usr/include/boost/smart_ptr/shared_ptr.hpp **** #ifdef _MANAGED
 227:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 228:/usr/include/boost/smart_ptr/shared_ptr.hpp **** // Avoid C4793, ... causes native code generation
 229:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 230:/usr/include/boost/smart_ptr/shared_ptr.hpp **** struct sp_any_pointer
 231:/usr/include/boost/smart_ptr/shared_ptr.hpp **** {
 232:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     template<class T> sp_any_pointer( T* ) {}
GAS LISTING /tmp/ccvUPO8Q.s 			page 49


 233:/usr/include/boost/smart_ptr/shared_ptr.hpp **** };
 234:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 235:/usr/include/boost/smart_ptr/shared_ptr.hpp **** inline void sp_enable_shared_from_this( sp_any_pointer, sp_any_pointer, sp_any_pointer )
 236:/usr/include/boost/smart_ptr/shared_ptr.hpp **** {
 237:/usr/include/boost/smart_ptr/shared_ptr.hpp **** }
 238:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 239:/usr/include/boost/smart_ptr/shared_ptr.hpp **** #else // _MANAGED
 240:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 241:/usr/include/boost/smart_ptr/shared_ptr.hpp **** inline void sp_enable_shared_from_this( ... )
 242:/usr/include/boost/smart_ptr/shared_ptr.hpp **** {
 1098              		.loc 7 242 0
 1099              		.cfi_startproc
 1100 0000 55       		pushq	%rbp
 1101              		.cfi_def_cfa_offset 16
 1102              		.cfi_offset 6, -16
 1103 0001 4889E5   		movq	%rsp, %rbp
 1104              		.cfi_def_cfa_register 6
 243:/usr/include/boost/smart_ptr/shared_ptr.hpp **** }
 1105              		.loc 7 243 0
 1106 0004 90       		nop
 1107 0005 5D       		popq	%rbp
 1108              		.cfi_def_cfa 7, 8
 1109 0006 C3       		ret
 1110              		.cfi_endproc
 1111              	.LFE2542:
 1113              		.section	.text._ZSt3absf,"axG",@progbits,_ZSt3absf,comdat
 1114              		.weak	_ZSt3absf
 1116              	_ZSt3absf:
 1117              	.LFB2921:
 1118              		.file 8 "/usr/include/c++/6/cmath"
   1:/usr/include/c++/6/cmath **** // -*- C++ -*- C forwarding header.
   2:/usr/include/c++/6/cmath **** 
   3:/usr/include/c++/6/cmath **** // Copyright (C) 1997-2016 Free Software Foundation, Inc.
   4:/usr/include/c++/6/cmath **** //
   5:/usr/include/c++/6/cmath **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/6/cmath **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/6/cmath **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/6/cmath **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/6/cmath **** // any later version.
  10:/usr/include/c++/6/cmath **** 
  11:/usr/include/c++/6/cmath **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/6/cmath **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/6/cmath **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/6/cmath **** // GNU General Public License for more details.
  15:/usr/include/c++/6/cmath **** 
  16:/usr/include/c++/6/cmath **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/6/cmath **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/6/cmath **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/6/cmath **** 
  20:/usr/include/c++/6/cmath **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/6/cmath **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/6/cmath **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/6/cmath **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/6/cmath **** 
  25:/usr/include/c++/6/cmath **** /** @file include/cmath
  26:/usr/include/c++/6/cmath ****  *  This is a Standard C++ Library file.  You should @c \#include this file
  27:/usr/include/c++/6/cmath ****  *  in your programs, rather than any of the @a *.h implementation files.
GAS LISTING /tmp/ccvUPO8Q.s 			page 50


  28:/usr/include/c++/6/cmath ****  *
  29:/usr/include/c++/6/cmath ****  *  This is the C++ version of the Standard C Library header @c math.h,
  30:/usr/include/c++/6/cmath ****  *  and its contents are (mostly) the same as that header, but are all
  31:/usr/include/c++/6/cmath ****  *  contained in the namespace @c std (except for names which are defined
  32:/usr/include/c++/6/cmath ****  *  as macros in C).
  33:/usr/include/c++/6/cmath ****  */
  34:/usr/include/c++/6/cmath **** 
  35:/usr/include/c++/6/cmath **** //
  36:/usr/include/c++/6/cmath **** // ISO C++ 14882: 26.5  C library
  37:/usr/include/c++/6/cmath **** //
  38:/usr/include/c++/6/cmath **** 
  39:/usr/include/c++/6/cmath **** #pragma GCC system_header
  40:/usr/include/c++/6/cmath **** 
  41:/usr/include/c++/6/cmath **** #include <bits/c++config.h>
  42:/usr/include/c++/6/cmath **** #include <bits/cpp_type_traits.h>
  43:/usr/include/c++/6/cmath **** #include <ext/type_traits.h>
  44:/usr/include/c++/6/cmath **** #define _GLIBCXX_INCLUDE_NEXT_C_HEADERS
  45:/usr/include/c++/6/cmath **** #include_next <math.h>
  46:/usr/include/c++/6/cmath **** #undef _GLIBCXX_INCLUDE_NEXT_C_HEADERS
  47:/usr/include/c++/6/cmath **** 
  48:/usr/include/c++/6/cmath **** #ifndef _GLIBCXX_CMATH
  49:/usr/include/c++/6/cmath **** #define _GLIBCXX_CMATH 1
  50:/usr/include/c++/6/cmath **** 
  51:/usr/include/c++/6/cmath **** // Get rid of those macros defined in <math.h> in lieu of real functions.
  52:/usr/include/c++/6/cmath **** #undef abs
  53:/usr/include/c++/6/cmath **** #undef div
  54:/usr/include/c++/6/cmath **** #undef acos
  55:/usr/include/c++/6/cmath **** #undef asin
  56:/usr/include/c++/6/cmath **** #undef atan
  57:/usr/include/c++/6/cmath **** #undef atan2
  58:/usr/include/c++/6/cmath **** #undef ceil
  59:/usr/include/c++/6/cmath **** #undef cos
  60:/usr/include/c++/6/cmath **** #undef cosh
  61:/usr/include/c++/6/cmath **** #undef exp
  62:/usr/include/c++/6/cmath **** #undef fabs
  63:/usr/include/c++/6/cmath **** #undef floor
  64:/usr/include/c++/6/cmath **** #undef fmod
  65:/usr/include/c++/6/cmath **** #undef frexp
  66:/usr/include/c++/6/cmath **** #undef ldexp
  67:/usr/include/c++/6/cmath **** #undef log
  68:/usr/include/c++/6/cmath **** #undef log10
  69:/usr/include/c++/6/cmath **** #undef modf
  70:/usr/include/c++/6/cmath **** #undef pow
  71:/usr/include/c++/6/cmath **** #undef sin
  72:/usr/include/c++/6/cmath **** #undef sinh
  73:/usr/include/c++/6/cmath **** #undef sqrt
  74:/usr/include/c++/6/cmath **** #undef tan
  75:/usr/include/c++/6/cmath **** #undef tanh
  76:/usr/include/c++/6/cmath **** 
  77:/usr/include/c++/6/cmath **** extern "C++"
  78:/usr/include/c++/6/cmath **** {
  79:/usr/include/c++/6/cmath **** namespace std _GLIBCXX_VISIBILITY(default)
  80:/usr/include/c++/6/cmath **** {
  81:/usr/include/c++/6/cmath **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  82:/usr/include/c++/6/cmath **** 
  83:/usr/include/c++/6/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
  84:/usr/include/c++/6/cmath ****   inline _GLIBCXX_CONSTEXPR double
GAS LISTING /tmp/ccvUPO8Q.s 			page 51


  85:/usr/include/c++/6/cmath ****   abs(double __x)
  86:/usr/include/c++/6/cmath ****   { return __builtin_fabs(__x); }
  87:/usr/include/c++/6/cmath **** #endif
  88:/usr/include/c++/6/cmath **** 
  89:/usr/include/c++/6/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
  90:/usr/include/c++/6/cmath ****   inline _GLIBCXX_CONSTEXPR float
  91:/usr/include/c++/6/cmath ****   abs(float __x)
  92:/usr/include/c++/6/cmath ****   { return __builtin_fabsf(__x); }
 1119              		.loc 8 92 0
 1120              		.cfi_startproc
 1121 0000 55       		pushq	%rbp
 1122              		.cfi_def_cfa_offset 16
 1123              		.cfi_offset 6, -16
 1124 0001 4889E5   		movq	%rsp, %rbp
 1125              		.cfi_def_cfa_register 6
 1126 0004 C5FA1145 		vmovss	%xmm0, -4(%rbp)
 1126      FC
 1127              		.loc 8 92 0
 1128 0009 C5FA104D 		vmovss	-4(%rbp), %xmm1
 1128      FC
 1129 000e C5FA1005 		vmovss	.LC0(%rip), %xmm0
 1129      00000000 
 1130 0016 C5F854C1 		vandps	%xmm1, %xmm0, %xmm0
 1131 001a 5D       		popq	%rbp
 1132              		.cfi_def_cfa 7, 8
 1133 001b C3       		ret
 1134              		.cfi_endproc
 1135              	.LFE2921:
 1137              		.section	.text._ZNSt7complexIfEC2Eff,"axG",@progbits,_ZNSt7complexIfEC5Eff,comdat
 1138              		.align 2
 1139              		.weak	_ZNSt7complexIfEC2Eff
 1141              	_ZNSt7complexIfEC2Eff:
 1142              	.LFB3816:
 1143              		.file 9 "/usr/include/c++/6/complex"
   1:/usr/include/c++/6/complex **** // The template and inlines for the -*- C++ -*- complex number classes.
   2:/usr/include/c++/6/complex **** 
   3:/usr/include/c++/6/complex **** // Copyright (C) 1997-2016 Free Software Foundation, Inc.
   4:/usr/include/c++/6/complex **** //
   5:/usr/include/c++/6/complex **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/6/complex **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/6/complex **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/6/complex **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/6/complex **** // any later version.
  10:/usr/include/c++/6/complex **** 
  11:/usr/include/c++/6/complex **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/6/complex **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/6/complex **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/6/complex **** // GNU General Public License for more details.
  15:/usr/include/c++/6/complex **** 
  16:/usr/include/c++/6/complex **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/6/complex **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/6/complex **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/6/complex **** 
  20:/usr/include/c++/6/complex **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/6/complex **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/6/complex **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/6/complex **** // <http://www.gnu.org/licenses/>.
GAS LISTING /tmp/ccvUPO8Q.s 			page 52


  24:/usr/include/c++/6/complex **** 
  25:/usr/include/c++/6/complex **** /** @file include/complex
  26:/usr/include/c++/6/complex ****  *  This is a Standard C++ Library header.
  27:/usr/include/c++/6/complex ****  */
  28:/usr/include/c++/6/complex **** 
  29:/usr/include/c++/6/complex **** //
  30:/usr/include/c++/6/complex **** // ISO C++ 14882: 26.2  Complex Numbers
  31:/usr/include/c++/6/complex **** // Note: this is not a conforming implementation.
  32:/usr/include/c++/6/complex **** // Initially implemented by Ulrich Drepper <drepper@cygnus.com>
  33:/usr/include/c++/6/complex **** // Improved by Gabriel Dos Reis <dosreis@cmla.ens-cachan.fr>
  34:/usr/include/c++/6/complex **** //
  35:/usr/include/c++/6/complex **** 
  36:/usr/include/c++/6/complex **** #ifndef _GLIBCXX_COMPLEX
  37:/usr/include/c++/6/complex **** #define _GLIBCXX_COMPLEX 1
  38:/usr/include/c++/6/complex **** 
  39:/usr/include/c++/6/complex **** #pragma GCC system_header
  40:/usr/include/c++/6/complex **** 
  41:/usr/include/c++/6/complex **** #include <bits/c++config.h>
  42:/usr/include/c++/6/complex **** #include <bits/cpp_type_traits.h>
  43:/usr/include/c++/6/complex **** #include <ext/type_traits.h>
  44:/usr/include/c++/6/complex **** #include <cmath>
  45:/usr/include/c++/6/complex **** #include <sstream>
  46:/usr/include/c++/6/complex **** 
  47:/usr/include/c++/6/complex **** // Get rid of a macro possibly defined in <complex.h>
  48:/usr/include/c++/6/complex **** #undef complex
  49:/usr/include/c++/6/complex **** 
  50:/usr/include/c++/6/complex **** namespace std _GLIBCXX_VISIBILITY(default)
  51:/usr/include/c++/6/complex **** {
  52:/usr/include/c++/6/complex **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  53:/usr/include/c++/6/complex **** 
  54:/usr/include/c++/6/complex ****   /**
  55:/usr/include/c++/6/complex ****    * @defgroup complex_numbers Complex Numbers
  56:/usr/include/c++/6/complex ****    * @ingroup numerics
  57:/usr/include/c++/6/complex ****    *
  58:/usr/include/c++/6/complex ****    * Classes and functions for complex numbers.
  59:/usr/include/c++/6/complex ****    * @{
  60:/usr/include/c++/6/complex ****    */
  61:/usr/include/c++/6/complex **** 
  62:/usr/include/c++/6/complex ****   // Forward declarations.
  63:/usr/include/c++/6/complex ****   template<typename _Tp> class complex;
  64:/usr/include/c++/6/complex ****   template<> class complex<float>;
  65:/usr/include/c++/6/complex ****   template<> class complex<double>;
  66:/usr/include/c++/6/complex ****   template<> class complex<long double>;
  67:/usr/include/c++/6/complex **** 
  68:/usr/include/c++/6/complex ****   ///  Return magnitude of @a z.
  69:/usr/include/c++/6/complex ****   template<typename _Tp> _Tp abs(const complex<_Tp>&);
  70:/usr/include/c++/6/complex ****   ///  Return phase angle of @a z.
  71:/usr/include/c++/6/complex ****   template<typename _Tp> _Tp arg(const complex<_Tp>&);
  72:/usr/include/c++/6/complex ****   ///  Return @a z magnitude squared.
  73:/usr/include/c++/6/complex ****   template<typename _Tp> _Tp norm(const complex<_Tp>&);
  74:/usr/include/c++/6/complex **** 
  75:/usr/include/c++/6/complex ****   ///  Return complex conjugate of @a z.
  76:/usr/include/c++/6/complex ****   template<typename _Tp> complex<_Tp> conj(const complex<_Tp>&);
  77:/usr/include/c++/6/complex ****   ///  Return complex with magnitude @a rho and angle @a theta.
  78:/usr/include/c++/6/complex ****   template<typename _Tp> complex<_Tp> polar(const _Tp&, const _Tp& = 0);
  79:/usr/include/c++/6/complex **** 
  80:/usr/include/c++/6/complex ****   // Transcendentals:
GAS LISTING /tmp/ccvUPO8Q.s 			page 53


  81:/usr/include/c++/6/complex ****   /// Return complex cosine of @a z.
  82:/usr/include/c++/6/complex ****   template<typename _Tp> complex<_Tp> cos(const complex<_Tp>&);
  83:/usr/include/c++/6/complex ****   /// Return complex hyperbolic cosine of @a z.
  84:/usr/include/c++/6/complex ****   template<typename _Tp> complex<_Tp> cosh(const complex<_Tp>&);
  85:/usr/include/c++/6/complex ****   /// Return complex base e exponential of @a z.
  86:/usr/include/c++/6/complex ****   template<typename _Tp> complex<_Tp> exp(const complex<_Tp>&);
  87:/usr/include/c++/6/complex ****   /// Return complex natural logarithm of @a z.
  88:/usr/include/c++/6/complex ****   template<typename _Tp> complex<_Tp> log(const complex<_Tp>&);
  89:/usr/include/c++/6/complex ****   /// Return complex base 10 logarithm of @a z.
  90:/usr/include/c++/6/complex ****   template<typename _Tp> complex<_Tp> log10(const complex<_Tp>&);
  91:/usr/include/c++/6/complex ****   /// Return @a x to the @a y'th power.
  92:/usr/include/c++/6/complex ****   template<typename _Tp> complex<_Tp> pow(const complex<_Tp>&, int);
  93:/usr/include/c++/6/complex ****   /// Return @a x to the @a y'th power.
  94:/usr/include/c++/6/complex ****   template<typename _Tp> complex<_Tp> pow(const complex<_Tp>&, const _Tp&);
  95:/usr/include/c++/6/complex ****   /// Return @a x to the @a y'th power.
  96:/usr/include/c++/6/complex ****   template<typename _Tp> complex<_Tp> pow(const complex<_Tp>&, 
  97:/usr/include/c++/6/complex ****                                           const complex<_Tp>&);
  98:/usr/include/c++/6/complex ****   /// Return @a x to the @a y'th power.
  99:/usr/include/c++/6/complex ****   template<typename _Tp> complex<_Tp> pow(const _Tp&, const complex<_Tp>&);
 100:/usr/include/c++/6/complex ****   /// Return complex sine of @a z.
 101:/usr/include/c++/6/complex ****   template<typename _Tp> complex<_Tp> sin(const complex<_Tp>&);
 102:/usr/include/c++/6/complex ****   /// Return complex hyperbolic sine of @a z.
 103:/usr/include/c++/6/complex ****   template<typename _Tp> complex<_Tp> sinh(const complex<_Tp>&);
 104:/usr/include/c++/6/complex ****   /// Return complex square root of @a z.
 105:/usr/include/c++/6/complex ****   template<typename _Tp> complex<_Tp> sqrt(const complex<_Tp>&);
 106:/usr/include/c++/6/complex ****   /// Return complex tangent of @a z.
 107:/usr/include/c++/6/complex ****   template<typename _Tp> complex<_Tp> tan(const complex<_Tp>&);
 108:/usr/include/c++/6/complex ****   /// Return complex hyperbolic tangent of @a z.
 109:/usr/include/c++/6/complex ****   template<typename _Tp> complex<_Tp> tanh(const complex<_Tp>&);
 110:/usr/include/c++/6/complex ****     
 111:/usr/include/c++/6/complex ****     
 112:/usr/include/c++/6/complex ****   // 26.2.2  Primary template class complex
 113:/usr/include/c++/6/complex ****   /**
 114:/usr/include/c++/6/complex ****    *  Template to represent complex numbers.
 115:/usr/include/c++/6/complex ****    *
 116:/usr/include/c++/6/complex ****    *  Specializations for float, double, and long double are part of the
 117:/usr/include/c++/6/complex ****    *  library.  Results with any other type are not guaranteed.
 118:/usr/include/c++/6/complex ****    *
 119:/usr/include/c++/6/complex ****    *  @param  Tp  Type of real and imaginary values.
 120:/usr/include/c++/6/complex ****   */
 121:/usr/include/c++/6/complex ****   template<typename _Tp>
 122:/usr/include/c++/6/complex ****     struct complex
 123:/usr/include/c++/6/complex ****     {
 124:/usr/include/c++/6/complex ****       /// Value typedef.
 125:/usr/include/c++/6/complex ****       typedef _Tp value_type;
 126:/usr/include/c++/6/complex ****       
 127:/usr/include/c++/6/complex ****       ///  Default constructor.  First parameter is x, second parameter is y.
 128:/usr/include/c++/6/complex ****       ///  Unspecified parameters default to 0.
 129:/usr/include/c++/6/complex ****       _GLIBCXX_CONSTEXPR complex(const _Tp& __r = _Tp(), const _Tp& __i = _Tp())
 130:/usr/include/c++/6/complex ****       : _M_real(__r), _M_imag(__i) { }
 131:/usr/include/c++/6/complex **** 
 132:/usr/include/c++/6/complex ****       // Let the compiler synthesize the copy constructor
 133:/usr/include/c++/6/complex **** #if __cplusplus >= 201103L
 134:/usr/include/c++/6/complex ****       constexpr complex(const complex&) = default;
 135:/usr/include/c++/6/complex **** #endif
 136:/usr/include/c++/6/complex **** 
 137:/usr/include/c++/6/complex ****       ///  Converting constructor.
GAS LISTING /tmp/ccvUPO8Q.s 			page 54


 138:/usr/include/c++/6/complex ****       template<typename _Up>
 139:/usr/include/c++/6/complex ****         _GLIBCXX_CONSTEXPR complex(const complex<_Up>& __z)
 140:/usr/include/c++/6/complex **** 	: _M_real(__z.real()), _M_imag(__z.imag()) { }
 141:/usr/include/c++/6/complex **** 
 142:/usr/include/c++/6/complex **** #if __cplusplus >= 201103L
 143:/usr/include/c++/6/complex ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 144:/usr/include/c++/6/complex ****       // DR 387. std::complex over-encapsulated.
 145:/usr/include/c++/6/complex ****       _GLIBCXX_ABI_TAG_CXX11
 146:/usr/include/c++/6/complex ****       constexpr _Tp 
 147:/usr/include/c++/6/complex ****       real() const { return _M_real; }
 148:/usr/include/c++/6/complex **** 
 149:/usr/include/c++/6/complex ****       _GLIBCXX_ABI_TAG_CXX11
 150:/usr/include/c++/6/complex ****       constexpr _Tp 
 151:/usr/include/c++/6/complex ****       imag() const { return _M_imag; }
 152:/usr/include/c++/6/complex **** #else
 153:/usr/include/c++/6/complex ****       ///  Return real part of complex number.
 154:/usr/include/c++/6/complex ****       _Tp& 
 155:/usr/include/c++/6/complex ****       real() { return _M_real; }
 156:/usr/include/c++/6/complex **** 
 157:/usr/include/c++/6/complex ****       ///  Return real part of complex number.
 158:/usr/include/c++/6/complex ****       const _Tp& 
 159:/usr/include/c++/6/complex ****       real() const { return _M_real; }
 160:/usr/include/c++/6/complex **** 
 161:/usr/include/c++/6/complex ****       ///  Return imaginary part of complex number.
 162:/usr/include/c++/6/complex ****       _Tp& 
 163:/usr/include/c++/6/complex ****       imag() { return _M_imag; }
 164:/usr/include/c++/6/complex **** 
 165:/usr/include/c++/6/complex ****       ///  Return imaginary part of complex number.
 166:/usr/include/c++/6/complex ****       const _Tp& 
 167:/usr/include/c++/6/complex ****       imag() const { return _M_imag; }
 168:/usr/include/c++/6/complex **** #endif
 169:/usr/include/c++/6/complex **** 
 170:/usr/include/c++/6/complex ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 171:/usr/include/c++/6/complex ****       // DR 387. std::complex over-encapsulated.
 172:/usr/include/c++/6/complex ****       void 
 173:/usr/include/c++/6/complex ****       real(_Tp __val) { _M_real = __val; }
 174:/usr/include/c++/6/complex **** 
 175:/usr/include/c++/6/complex ****       void 
 176:/usr/include/c++/6/complex ****       imag(_Tp __val) { _M_imag = __val; }
 177:/usr/include/c++/6/complex **** 
 178:/usr/include/c++/6/complex ****       /// Assign a scalar to this complex number.
 179:/usr/include/c++/6/complex ****       complex<_Tp>& operator=(const _Tp&);
 180:/usr/include/c++/6/complex ****       
 181:/usr/include/c++/6/complex ****       /// Add a scalar to this complex number.
 182:/usr/include/c++/6/complex ****       // 26.2.5/1
 183:/usr/include/c++/6/complex ****       complex<_Tp>&
 184:/usr/include/c++/6/complex ****       operator+=(const _Tp& __t)
 185:/usr/include/c++/6/complex ****       {
 186:/usr/include/c++/6/complex **** 	_M_real += __t;
 187:/usr/include/c++/6/complex **** 	return *this;
 188:/usr/include/c++/6/complex ****       }
 189:/usr/include/c++/6/complex **** 
 190:/usr/include/c++/6/complex ****       /// Subtract a scalar from this complex number.
 191:/usr/include/c++/6/complex ****       // 26.2.5/3
 192:/usr/include/c++/6/complex ****       complex<_Tp>&
 193:/usr/include/c++/6/complex ****       operator-=(const _Tp& __t)
 194:/usr/include/c++/6/complex ****       {
GAS LISTING /tmp/ccvUPO8Q.s 			page 55


 195:/usr/include/c++/6/complex **** 	_M_real -= __t;
 196:/usr/include/c++/6/complex **** 	return *this;
 197:/usr/include/c++/6/complex ****       }
 198:/usr/include/c++/6/complex **** 
 199:/usr/include/c++/6/complex ****       /// Multiply this complex number by a scalar.
 200:/usr/include/c++/6/complex ****       complex<_Tp>& operator*=(const _Tp&);
 201:/usr/include/c++/6/complex ****       /// Divide this complex number by a scalar.
 202:/usr/include/c++/6/complex ****       complex<_Tp>& operator/=(const _Tp&);
 203:/usr/include/c++/6/complex **** 
 204:/usr/include/c++/6/complex ****       // Let the compiler synthesize the copy assignment operator
 205:/usr/include/c++/6/complex **** #if __cplusplus >= 201103L
 206:/usr/include/c++/6/complex ****       complex& operator=(const complex&) = default;
 207:/usr/include/c++/6/complex **** #endif
 208:/usr/include/c++/6/complex **** 
 209:/usr/include/c++/6/complex ****       /// Assign another complex number to this one.
 210:/usr/include/c++/6/complex ****       template<typename _Up>
 211:/usr/include/c++/6/complex ****         complex<_Tp>& operator=(const complex<_Up>&);
 212:/usr/include/c++/6/complex ****       /// Add another complex number to this one.
 213:/usr/include/c++/6/complex ****       template<typename _Up>
 214:/usr/include/c++/6/complex ****         complex<_Tp>& operator+=(const complex<_Up>&);
 215:/usr/include/c++/6/complex ****       /// Subtract another complex number from this one.
 216:/usr/include/c++/6/complex ****       template<typename _Up>
 217:/usr/include/c++/6/complex ****         complex<_Tp>& operator-=(const complex<_Up>&);
 218:/usr/include/c++/6/complex ****       /// Multiply this complex number by another.
 219:/usr/include/c++/6/complex ****       template<typename _Up>
 220:/usr/include/c++/6/complex ****         complex<_Tp>& operator*=(const complex<_Up>&);
 221:/usr/include/c++/6/complex ****       /// Divide this complex number by another.
 222:/usr/include/c++/6/complex ****       template<typename _Up>
 223:/usr/include/c++/6/complex ****         complex<_Tp>& operator/=(const complex<_Up>&);
 224:/usr/include/c++/6/complex **** 
 225:/usr/include/c++/6/complex ****       _GLIBCXX_CONSTEXPR complex __rep() const
 226:/usr/include/c++/6/complex ****       { return *this; }
 227:/usr/include/c++/6/complex **** 
 228:/usr/include/c++/6/complex ****     private:
 229:/usr/include/c++/6/complex ****       _Tp _M_real;
 230:/usr/include/c++/6/complex ****       _Tp _M_imag;
 231:/usr/include/c++/6/complex ****     };
 232:/usr/include/c++/6/complex **** 
 233:/usr/include/c++/6/complex ****   template<typename _Tp>
 234:/usr/include/c++/6/complex ****     complex<_Tp>&
 235:/usr/include/c++/6/complex ****     complex<_Tp>::operator=(const _Tp& __t)
 236:/usr/include/c++/6/complex ****     {
 237:/usr/include/c++/6/complex ****      _M_real = __t;
 238:/usr/include/c++/6/complex ****      _M_imag = _Tp();
 239:/usr/include/c++/6/complex ****      return *this;
 240:/usr/include/c++/6/complex ****     } 
 241:/usr/include/c++/6/complex **** 
 242:/usr/include/c++/6/complex ****   // 26.2.5/5
 243:/usr/include/c++/6/complex ****   template<typename _Tp>
 244:/usr/include/c++/6/complex ****     complex<_Tp>&
 245:/usr/include/c++/6/complex ****     complex<_Tp>::operator*=(const _Tp& __t)
 246:/usr/include/c++/6/complex ****     {
 247:/usr/include/c++/6/complex ****       _M_real *= __t;
 248:/usr/include/c++/6/complex ****       _M_imag *= __t;
 249:/usr/include/c++/6/complex ****       return *this;
 250:/usr/include/c++/6/complex ****     }
 251:/usr/include/c++/6/complex **** 
GAS LISTING /tmp/ccvUPO8Q.s 			page 56


 252:/usr/include/c++/6/complex ****   // 26.2.5/7
 253:/usr/include/c++/6/complex ****   template<typename _Tp>
 254:/usr/include/c++/6/complex ****     complex<_Tp>&
 255:/usr/include/c++/6/complex ****     complex<_Tp>::operator/=(const _Tp& __t)
 256:/usr/include/c++/6/complex ****     {
 257:/usr/include/c++/6/complex ****       _M_real /= __t;
 258:/usr/include/c++/6/complex ****       _M_imag /= __t;
 259:/usr/include/c++/6/complex ****       return *this;
 260:/usr/include/c++/6/complex ****     }
 261:/usr/include/c++/6/complex **** 
 262:/usr/include/c++/6/complex ****   template<typename _Tp>
 263:/usr/include/c++/6/complex ****     template<typename _Up>
 264:/usr/include/c++/6/complex ****     complex<_Tp>&
 265:/usr/include/c++/6/complex ****     complex<_Tp>::operator=(const complex<_Up>& __z)
 266:/usr/include/c++/6/complex ****     {
 267:/usr/include/c++/6/complex ****       _M_real = __z.real();
 268:/usr/include/c++/6/complex ****       _M_imag = __z.imag();
 269:/usr/include/c++/6/complex ****       return *this;
 270:/usr/include/c++/6/complex ****     }
 271:/usr/include/c++/6/complex **** 
 272:/usr/include/c++/6/complex ****   // 26.2.5/9
 273:/usr/include/c++/6/complex ****   template<typename _Tp>
 274:/usr/include/c++/6/complex ****     template<typename _Up>
 275:/usr/include/c++/6/complex ****     complex<_Tp>&
 276:/usr/include/c++/6/complex ****     complex<_Tp>::operator+=(const complex<_Up>& __z)
 277:/usr/include/c++/6/complex ****     {
 278:/usr/include/c++/6/complex ****       _M_real += __z.real();
 279:/usr/include/c++/6/complex ****       _M_imag += __z.imag();
 280:/usr/include/c++/6/complex ****       return *this;
 281:/usr/include/c++/6/complex ****     }
 282:/usr/include/c++/6/complex **** 
 283:/usr/include/c++/6/complex ****   // 26.2.5/11
 284:/usr/include/c++/6/complex ****   template<typename _Tp>
 285:/usr/include/c++/6/complex ****     template<typename _Up>
 286:/usr/include/c++/6/complex ****     complex<_Tp>&
 287:/usr/include/c++/6/complex ****     complex<_Tp>::operator-=(const complex<_Up>& __z)
 288:/usr/include/c++/6/complex ****     {
 289:/usr/include/c++/6/complex ****       _M_real -= __z.real();
 290:/usr/include/c++/6/complex ****       _M_imag -= __z.imag();
 291:/usr/include/c++/6/complex ****       return *this;
 292:/usr/include/c++/6/complex ****     }
 293:/usr/include/c++/6/complex **** 
 294:/usr/include/c++/6/complex ****   // 26.2.5/13
 295:/usr/include/c++/6/complex ****   // XXX: This is a grammar school implementation.
 296:/usr/include/c++/6/complex ****   template<typename _Tp>
 297:/usr/include/c++/6/complex ****     template<typename _Up>
 298:/usr/include/c++/6/complex ****     complex<_Tp>&
 299:/usr/include/c++/6/complex ****     complex<_Tp>::operator*=(const complex<_Up>& __z)
 300:/usr/include/c++/6/complex ****     {
 301:/usr/include/c++/6/complex ****       const _Tp __r = _M_real * __z.real() - _M_imag * __z.imag();
 302:/usr/include/c++/6/complex ****       _M_imag = _M_real * __z.imag() + _M_imag * __z.real();
 303:/usr/include/c++/6/complex ****       _M_real = __r;
 304:/usr/include/c++/6/complex ****       return *this;
 305:/usr/include/c++/6/complex ****     }
 306:/usr/include/c++/6/complex **** 
 307:/usr/include/c++/6/complex ****   // 26.2.5/15
 308:/usr/include/c++/6/complex ****   // XXX: This is a grammar school implementation.
GAS LISTING /tmp/ccvUPO8Q.s 			page 57


 309:/usr/include/c++/6/complex ****   template<typename _Tp>
 310:/usr/include/c++/6/complex ****     template<typename _Up>
 311:/usr/include/c++/6/complex ****     complex<_Tp>&
 312:/usr/include/c++/6/complex ****     complex<_Tp>::operator/=(const complex<_Up>& __z)
 313:/usr/include/c++/6/complex ****     {
 314:/usr/include/c++/6/complex ****       const _Tp __r =  _M_real * __z.real() + _M_imag * __z.imag();
 315:/usr/include/c++/6/complex ****       const _Tp __n = std::norm(__z);
 316:/usr/include/c++/6/complex ****       _M_imag = (_M_imag * __z.real() - _M_real * __z.imag()) / __n;
 317:/usr/include/c++/6/complex ****       _M_real = __r / __n;
 318:/usr/include/c++/6/complex ****       return *this;
 319:/usr/include/c++/6/complex ****     }
 320:/usr/include/c++/6/complex ****     
 321:/usr/include/c++/6/complex ****   // Operators:
 322:/usr/include/c++/6/complex ****   //@{
 323:/usr/include/c++/6/complex ****   ///  Return new complex value @a x plus @a y.
 324:/usr/include/c++/6/complex ****   template<typename _Tp>
 325:/usr/include/c++/6/complex ****     inline complex<_Tp>
 326:/usr/include/c++/6/complex ****     operator+(const complex<_Tp>& __x, const complex<_Tp>& __y)
 327:/usr/include/c++/6/complex ****     {
 328:/usr/include/c++/6/complex ****       complex<_Tp> __r = __x;
 329:/usr/include/c++/6/complex ****       __r += __y;
 330:/usr/include/c++/6/complex ****       return __r;
 331:/usr/include/c++/6/complex ****     }
 332:/usr/include/c++/6/complex **** 
 333:/usr/include/c++/6/complex ****   template<typename _Tp>
 334:/usr/include/c++/6/complex ****     inline complex<_Tp>
 335:/usr/include/c++/6/complex ****     operator+(const complex<_Tp>& __x, const _Tp& __y)
 336:/usr/include/c++/6/complex ****     {
 337:/usr/include/c++/6/complex ****       complex<_Tp> __r = __x;
 338:/usr/include/c++/6/complex ****       __r += __y;
 339:/usr/include/c++/6/complex ****       return __r;
 340:/usr/include/c++/6/complex ****     }
 341:/usr/include/c++/6/complex **** 
 342:/usr/include/c++/6/complex ****   template<typename _Tp>
 343:/usr/include/c++/6/complex ****     inline complex<_Tp>
 344:/usr/include/c++/6/complex ****     operator+(const _Tp& __x, const complex<_Tp>& __y)
 345:/usr/include/c++/6/complex ****     {
 346:/usr/include/c++/6/complex ****       complex<_Tp> __r = __y;
 347:/usr/include/c++/6/complex ****       __r += __x;
 348:/usr/include/c++/6/complex ****       return __r;
 349:/usr/include/c++/6/complex ****     }
 350:/usr/include/c++/6/complex ****   //@}
 351:/usr/include/c++/6/complex **** 
 352:/usr/include/c++/6/complex ****   //@{
 353:/usr/include/c++/6/complex ****   ///  Return new complex value @a x minus @a y.
 354:/usr/include/c++/6/complex ****   template<typename _Tp>
 355:/usr/include/c++/6/complex ****     inline complex<_Tp>
 356:/usr/include/c++/6/complex ****     operator-(const complex<_Tp>& __x, const complex<_Tp>& __y)
 357:/usr/include/c++/6/complex ****     {
 358:/usr/include/c++/6/complex ****       complex<_Tp> __r = __x;
 359:/usr/include/c++/6/complex ****       __r -= __y;
 360:/usr/include/c++/6/complex ****       return __r;
 361:/usr/include/c++/6/complex ****     }
 362:/usr/include/c++/6/complex ****     
 363:/usr/include/c++/6/complex ****   template<typename _Tp>
 364:/usr/include/c++/6/complex ****     inline complex<_Tp>
 365:/usr/include/c++/6/complex ****     operator-(const complex<_Tp>& __x, const _Tp& __y)
GAS LISTING /tmp/ccvUPO8Q.s 			page 58


 366:/usr/include/c++/6/complex ****     {
 367:/usr/include/c++/6/complex ****       complex<_Tp> __r = __x;
 368:/usr/include/c++/6/complex ****       __r -= __y;
 369:/usr/include/c++/6/complex ****       return __r;
 370:/usr/include/c++/6/complex ****     }
 371:/usr/include/c++/6/complex **** 
 372:/usr/include/c++/6/complex ****   template<typename _Tp>
 373:/usr/include/c++/6/complex ****     inline complex<_Tp>
 374:/usr/include/c++/6/complex ****     operator-(const _Tp& __x, const complex<_Tp>& __y)
 375:/usr/include/c++/6/complex ****     {
 376:/usr/include/c++/6/complex ****       complex<_Tp> __r(__x, -__y.imag());
 377:/usr/include/c++/6/complex ****       __r -= __y.real();
 378:/usr/include/c++/6/complex ****       return __r;
 379:/usr/include/c++/6/complex ****     }
 380:/usr/include/c++/6/complex ****   //@}
 381:/usr/include/c++/6/complex **** 
 382:/usr/include/c++/6/complex ****   //@{
 383:/usr/include/c++/6/complex ****   ///  Return new complex value @a x times @a y.
 384:/usr/include/c++/6/complex ****   template<typename _Tp>
 385:/usr/include/c++/6/complex ****     inline complex<_Tp>
 386:/usr/include/c++/6/complex ****     operator*(const complex<_Tp>& __x, const complex<_Tp>& __y)
 387:/usr/include/c++/6/complex ****     {
 388:/usr/include/c++/6/complex ****       complex<_Tp> __r = __x;
 389:/usr/include/c++/6/complex ****       __r *= __y;
 390:/usr/include/c++/6/complex ****       return __r;
 391:/usr/include/c++/6/complex ****     }
 392:/usr/include/c++/6/complex **** 
 393:/usr/include/c++/6/complex ****   template<typename _Tp>
 394:/usr/include/c++/6/complex ****     inline complex<_Tp>
 395:/usr/include/c++/6/complex ****     operator*(const complex<_Tp>& __x, const _Tp& __y)
 396:/usr/include/c++/6/complex ****     {
 397:/usr/include/c++/6/complex ****       complex<_Tp> __r = __x;
 398:/usr/include/c++/6/complex ****       __r *= __y;
 399:/usr/include/c++/6/complex ****       return __r;
 400:/usr/include/c++/6/complex ****     }
 401:/usr/include/c++/6/complex **** 
 402:/usr/include/c++/6/complex ****   template<typename _Tp>
 403:/usr/include/c++/6/complex ****     inline complex<_Tp>
 404:/usr/include/c++/6/complex ****     operator*(const _Tp& __x, const complex<_Tp>& __y)
 405:/usr/include/c++/6/complex ****     {
 406:/usr/include/c++/6/complex ****       complex<_Tp> __r = __y;
 407:/usr/include/c++/6/complex ****       __r *= __x;
 408:/usr/include/c++/6/complex ****       return __r;
 409:/usr/include/c++/6/complex ****     }
 410:/usr/include/c++/6/complex ****   //@}
 411:/usr/include/c++/6/complex **** 
 412:/usr/include/c++/6/complex ****   //@{
 413:/usr/include/c++/6/complex ****   ///  Return new complex value @a x divided by @a y.
 414:/usr/include/c++/6/complex ****   template<typename _Tp>
 415:/usr/include/c++/6/complex ****     inline complex<_Tp>
 416:/usr/include/c++/6/complex ****     operator/(const complex<_Tp>& __x, const complex<_Tp>& __y)
 417:/usr/include/c++/6/complex ****     {
 418:/usr/include/c++/6/complex ****       complex<_Tp> __r = __x;
 419:/usr/include/c++/6/complex ****       __r /= __y;
 420:/usr/include/c++/6/complex ****       return __r;
 421:/usr/include/c++/6/complex ****     }
 422:/usr/include/c++/6/complex ****     
GAS LISTING /tmp/ccvUPO8Q.s 			page 59


 423:/usr/include/c++/6/complex ****   template<typename _Tp>
 424:/usr/include/c++/6/complex ****     inline complex<_Tp>
 425:/usr/include/c++/6/complex ****     operator/(const complex<_Tp>& __x, const _Tp& __y)
 426:/usr/include/c++/6/complex ****     {
 427:/usr/include/c++/6/complex ****       complex<_Tp> __r = __x;
 428:/usr/include/c++/6/complex ****       __r /= __y;
 429:/usr/include/c++/6/complex ****       return __r;
 430:/usr/include/c++/6/complex ****     }
 431:/usr/include/c++/6/complex **** 
 432:/usr/include/c++/6/complex ****   template<typename _Tp>
 433:/usr/include/c++/6/complex ****     inline complex<_Tp>
 434:/usr/include/c++/6/complex ****     operator/(const _Tp& __x, const complex<_Tp>& __y)
 435:/usr/include/c++/6/complex ****     {
 436:/usr/include/c++/6/complex ****       complex<_Tp> __r = __x;
 437:/usr/include/c++/6/complex ****       __r /= __y;
 438:/usr/include/c++/6/complex ****       return __r;
 439:/usr/include/c++/6/complex ****     }
 440:/usr/include/c++/6/complex ****   //@}
 441:/usr/include/c++/6/complex **** 
 442:/usr/include/c++/6/complex ****   ///  Return @a x.
 443:/usr/include/c++/6/complex ****   template<typename _Tp>
 444:/usr/include/c++/6/complex ****     inline complex<_Tp>
 445:/usr/include/c++/6/complex ****     operator+(const complex<_Tp>& __x)
 446:/usr/include/c++/6/complex ****     { return __x; }
 447:/usr/include/c++/6/complex **** 
 448:/usr/include/c++/6/complex ****   ///  Return complex negation of @a x.
 449:/usr/include/c++/6/complex ****   template<typename _Tp>
 450:/usr/include/c++/6/complex ****     inline complex<_Tp>
 451:/usr/include/c++/6/complex ****     operator-(const complex<_Tp>& __x)
 452:/usr/include/c++/6/complex ****     {  return complex<_Tp>(-__x.real(), -__x.imag()); }
 453:/usr/include/c++/6/complex **** 
 454:/usr/include/c++/6/complex ****   //@{
 455:/usr/include/c++/6/complex ****   ///  Return true if @a x is equal to @a y.
 456:/usr/include/c++/6/complex ****   template<typename _Tp>
 457:/usr/include/c++/6/complex ****     inline _GLIBCXX_CONSTEXPR bool
 458:/usr/include/c++/6/complex ****     operator==(const complex<_Tp>& __x, const complex<_Tp>& __y)
 459:/usr/include/c++/6/complex ****     { return __x.real() == __y.real() && __x.imag() == __y.imag(); }
 460:/usr/include/c++/6/complex **** 
 461:/usr/include/c++/6/complex ****   template<typename _Tp>
 462:/usr/include/c++/6/complex ****     inline _GLIBCXX_CONSTEXPR bool
 463:/usr/include/c++/6/complex ****     operator==(const complex<_Tp>& __x, const _Tp& __y)
 464:/usr/include/c++/6/complex ****     { return __x.real() == __y && __x.imag() == _Tp(); }
 465:/usr/include/c++/6/complex **** 
 466:/usr/include/c++/6/complex ****   template<typename _Tp>
 467:/usr/include/c++/6/complex ****     inline _GLIBCXX_CONSTEXPR bool
 468:/usr/include/c++/6/complex ****     operator==(const _Tp& __x, const complex<_Tp>& __y)
 469:/usr/include/c++/6/complex ****     { return __x == __y.real() && _Tp() == __y.imag(); }
 470:/usr/include/c++/6/complex ****   //@}
 471:/usr/include/c++/6/complex **** 
 472:/usr/include/c++/6/complex ****   //@{
 473:/usr/include/c++/6/complex ****   ///  Return false if @a x is equal to @a y.
 474:/usr/include/c++/6/complex ****   template<typename _Tp>
 475:/usr/include/c++/6/complex ****     inline _GLIBCXX_CONSTEXPR bool
 476:/usr/include/c++/6/complex ****     operator!=(const complex<_Tp>& __x, const complex<_Tp>& __y)
 477:/usr/include/c++/6/complex ****     { return __x.real() != __y.real() || __x.imag() != __y.imag(); }
 478:/usr/include/c++/6/complex **** 
 479:/usr/include/c++/6/complex ****   template<typename _Tp>
GAS LISTING /tmp/ccvUPO8Q.s 			page 60


 480:/usr/include/c++/6/complex ****     inline _GLIBCXX_CONSTEXPR bool
 481:/usr/include/c++/6/complex ****     operator!=(const complex<_Tp>& __x, const _Tp& __y)
 482:/usr/include/c++/6/complex ****     { return __x.real() != __y || __x.imag() != _Tp(); }
 483:/usr/include/c++/6/complex **** 
 484:/usr/include/c++/6/complex ****   template<typename _Tp>
 485:/usr/include/c++/6/complex ****     inline _GLIBCXX_CONSTEXPR bool
 486:/usr/include/c++/6/complex ****     operator!=(const _Tp& __x, const complex<_Tp>& __y)
 487:/usr/include/c++/6/complex ****     { return __x != __y.real() || _Tp() != __y.imag(); }
 488:/usr/include/c++/6/complex ****   //@}
 489:/usr/include/c++/6/complex **** 
 490:/usr/include/c++/6/complex ****   ///  Extraction operator for complex values.
 491:/usr/include/c++/6/complex ****   template<typename _Tp, typename _CharT, class _Traits>
 492:/usr/include/c++/6/complex ****     basic_istream<_CharT, _Traits>&
 493:/usr/include/c++/6/complex ****     operator>>(basic_istream<_CharT, _Traits>& __is, complex<_Tp>& __x)
 494:/usr/include/c++/6/complex ****     {
 495:/usr/include/c++/6/complex ****       _Tp __re_x, __im_x;
 496:/usr/include/c++/6/complex ****       _CharT __ch;
 497:/usr/include/c++/6/complex ****       __is >> __ch;
 498:/usr/include/c++/6/complex ****       if (__ch == '(') 
 499:/usr/include/c++/6/complex **** 	{
 500:/usr/include/c++/6/complex **** 	  __is >> __re_x >> __ch;
 501:/usr/include/c++/6/complex **** 	  if (__ch == ',') 
 502:/usr/include/c++/6/complex **** 	    {
 503:/usr/include/c++/6/complex **** 	      __is >> __im_x >> __ch;
 504:/usr/include/c++/6/complex **** 	      if (__ch == ')') 
 505:/usr/include/c++/6/complex **** 		__x = complex<_Tp>(__re_x, __im_x);
 506:/usr/include/c++/6/complex **** 	      else
 507:/usr/include/c++/6/complex **** 		__is.setstate(ios_base::failbit);
 508:/usr/include/c++/6/complex **** 	    }
 509:/usr/include/c++/6/complex **** 	  else if (__ch == ')') 
 510:/usr/include/c++/6/complex **** 	    __x = __re_x;
 511:/usr/include/c++/6/complex **** 	  else
 512:/usr/include/c++/6/complex **** 	    __is.setstate(ios_base::failbit);
 513:/usr/include/c++/6/complex **** 	}
 514:/usr/include/c++/6/complex ****       else 
 515:/usr/include/c++/6/complex **** 	{
 516:/usr/include/c++/6/complex **** 	  __is.putback(__ch);
 517:/usr/include/c++/6/complex **** 	  __is >> __re_x;
 518:/usr/include/c++/6/complex **** 	  __x = __re_x;
 519:/usr/include/c++/6/complex **** 	}
 520:/usr/include/c++/6/complex ****       return __is;
 521:/usr/include/c++/6/complex ****     }
 522:/usr/include/c++/6/complex **** 
 523:/usr/include/c++/6/complex ****   ///  Insertion operator for complex values.
 524:/usr/include/c++/6/complex ****   template<typename _Tp, typename _CharT, class _Traits>
 525:/usr/include/c++/6/complex ****     basic_ostream<_CharT, _Traits>&
 526:/usr/include/c++/6/complex ****     operator<<(basic_ostream<_CharT, _Traits>& __os, const complex<_Tp>& __x)
 527:/usr/include/c++/6/complex ****     {
 528:/usr/include/c++/6/complex ****       basic_ostringstream<_CharT, _Traits> __s;
 529:/usr/include/c++/6/complex ****       __s.flags(__os.flags());
 530:/usr/include/c++/6/complex ****       __s.imbue(__os.getloc());
 531:/usr/include/c++/6/complex ****       __s.precision(__os.precision());
 532:/usr/include/c++/6/complex ****       __s << '(' << __x.real() << ',' << __x.imag() << ')';
 533:/usr/include/c++/6/complex ****       return __os << __s.str();
 534:/usr/include/c++/6/complex ****     }
 535:/usr/include/c++/6/complex **** 
 536:/usr/include/c++/6/complex ****   // Values
GAS LISTING /tmp/ccvUPO8Q.s 			page 61


 537:/usr/include/c++/6/complex **** #if __cplusplus >= 201103L
 538:/usr/include/c++/6/complex ****   template<typename _Tp>
 539:/usr/include/c++/6/complex ****     constexpr _Tp
 540:/usr/include/c++/6/complex ****     real(const complex<_Tp>& __z)
 541:/usr/include/c++/6/complex ****     { return __z.real(); }
 542:/usr/include/c++/6/complex **** 
 543:/usr/include/c++/6/complex ****   template<typename _Tp>
 544:/usr/include/c++/6/complex ****     constexpr _Tp
 545:/usr/include/c++/6/complex ****     imag(const complex<_Tp>& __z)
 546:/usr/include/c++/6/complex ****     { return __z.imag(); }
 547:/usr/include/c++/6/complex **** #else
 548:/usr/include/c++/6/complex ****   template<typename _Tp>
 549:/usr/include/c++/6/complex ****     inline _Tp&
 550:/usr/include/c++/6/complex ****     real(complex<_Tp>& __z)
 551:/usr/include/c++/6/complex ****     { return __z.real(); }
 552:/usr/include/c++/6/complex ****     
 553:/usr/include/c++/6/complex ****   template<typename _Tp>
 554:/usr/include/c++/6/complex ****     inline const _Tp&
 555:/usr/include/c++/6/complex ****     real(const complex<_Tp>& __z)
 556:/usr/include/c++/6/complex ****     { return __z.real(); }
 557:/usr/include/c++/6/complex ****     
 558:/usr/include/c++/6/complex ****   template<typename _Tp>
 559:/usr/include/c++/6/complex ****     inline _Tp&
 560:/usr/include/c++/6/complex ****     imag(complex<_Tp>& __z)
 561:/usr/include/c++/6/complex ****     { return __z.imag(); }
 562:/usr/include/c++/6/complex ****     
 563:/usr/include/c++/6/complex ****   template<typename _Tp>
 564:/usr/include/c++/6/complex ****     inline const _Tp&
 565:/usr/include/c++/6/complex ****     imag(const complex<_Tp>& __z)
 566:/usr/include/c++/6/complex ****     { return __z.imag(); }
 567:/usr/include/c++/6/complex **** #endif
 568:/usr/include/c++/6/complex **** 
 569:/usr/include/c++/6/complex ****   // 26.2.7/3 abs(__z):  Returns the magnitude of __z.
 570:/usr/include/c++/6/complex ****   template<typename _Tp>
 571:/usr/include/c++/6/complex ****     inline _Tp
 572:/usr/include/c++/6/complex ****     __complex_abs(const complex<_Tp>& __z)
 573:/usr/include/c++/6/complex ****     {
 574:/usr/include/c++/6/complex ****       _Tp __x = __z.real();
 575:/usr/include/c++/6/complex ****       _Tp __y = __z.imag();
 576:/usr/include/c++/6/complex ****       const _Tp __s = std::max(abs(__x), abs(__y));
 577:/usr/include/c++/6/complex ****       if (__s == _Tp())  // well ...
 578:/usr/include/c++/6/complex ****         return __s;
 579:/usr/include/c++/6/complex ****       __x /= __s; 
 580:/usr/include/c++/6/complex ****       __y /= __s;
 581:/usr/include/c++/6/complex ****       return __s * sqrt(__x * __x + __y * __y);
 582:/usr/include/c++/6/complex ****     }
 583:/usr/include/c++/6/complex **** 
 584:/usr/include/c++/6/complex **** #if _GLIBCXX_USE_C99_COMPLEX
 585:/usr/include/c++/6/complex ****   inline float
 586:/usr/include/c++/6/complex ****   __complex_abs(__complex__ float __z) { return __builtin_cabsf(__z); }
 587:/usr/include/c++/6/complex **** 
 588:/usr/include/c++/6/complex ****   inline double
 589:/usr/include/c++/6/complex ****   __complex_abs(__complex__ double __z) { return __builtin_cabs(__z); }
 590:/usr/include/c++/6/complex **** 
 591:/usr/include/c++/6/complex ****   inline long double
 592:/usr/include/c++/6/complex ****   __complex_abs(const __complex__ long double& __z)
 593:/usr/include/c++/6/complex ****   { return __builtin_cabsl(__z); }
GAS LISTING /tmp/ccvUPO8Q.s 			page 62


 594:/usr/include/c++/6/complex **** 
 595:/usr/include/c++/6/complex ****   template<typename _Tp>
 596:/usr/include/c++/6/complex ****     inline _Tp
 597:/usr/include/c++/6/complex ****     abs(const complex<_Tp>& __z) { return __complex_abs(__z.__rep()); }
 598:/usr/include/c++/6/complex **** #else
 599:/usr/include/c++/6/complex ****   template<typename _Tp>
 600:/usr/include/c++/6/complex ****     inline _Tp
 601:/usr/include/c++/6/complex ****     abs(const complex<_Tp>& __z) { return __complex_abs(__z); }
 602:/usr/include/c++/6/complex **** #endif  
 603:/usr/include/c++/6/complex **** 
 604:/usr/include/c++/6/complex **** 
 605:/usr/include/c++/6/complex ****   // 26.2.7/4: arg(__z): Returns the phase angle of __z.
 606:/usr/include/c++/6/complex ****   template<typename _Tp>
 607:/usr/include/c++/6/complex ****     inline _Tp
 608:/usr/include/c++/6/complex ****     __complex_arg(const complex<_Tp>& __z)
 609:/usr/include/c++/6/complex ****     { return  atan2(__z.imag(), __z.real()); }
 610:/usr/include/c++/6/complex **** 
 611:/usr/include/c++/6/complex **** #if _GLIBCXX_USE_C99_COMPLEX
 612:/usr/include/c++/6/complex ****   inline float
 613:/usr/include/c++/6/complex ****   __complex_arg(__complex__ float __z) { return __builtin_cargf(__z); }
 614:/usr/include/c++/6/complex **** 
 615:/usr/include/c++/6/complex ****   inline double
 616:/usr/include/c++/6/complex ****   __complex_arg(__complex__ double __z) { return __builtin_carg(__z); }
 617:/usr/include/c++/6/complex **** 
 618:/usr/include/c++/6/complex ****   inline long double
 619:/usr/include/c++/6/complex ****   __complex_arg(const __complex__ long double& __z)
 620:/usr/include/c++/6/complex ****   { return __builtin_cargl(__z); }
 621:/usr/include/c++/6/complex **** 
 622:/usr/include/c++/6/complex ****   template<typename _Tp>
 623:/usr/include/c++/6/complex ****     inline _Tp
 624:/usr/include/c++/6/complex ****     arg(const complex<_Tp>& __z) { return __complex_arg(__z.__rep()); }
 625:/usr/include/c++/6/complex **** #else
 626:/usr/include/c++/6/complex ****   template<typename _Tp>
 627:/usr/include/c++/6/complex ****     inline _Tp
 628:/usr/include/c++/6/complex ****     arg(const complex<_Tp>& __z) { return __complex_arg(__z); }
 629:/usr/include/c++/6/complex **** #endif
 630:/usr/include/c++/6/complex **** 
 631:/usr/include/c++/6/complex ****   // 26.2.7/5: norm(__z) returns the squared magnitude of __z.
 632:/usr/include/c++/6/complex ****   //     As defined, norm() is -not- a norm is the common mathematical
 633:/usr/include/c++/6/complex ****   //     sense used in numerics.  The helper class _Norm_helper<> tries to
 634:/usr/include/c++/6/complex ****   //     distinguish between builtin floating point and the rest, so as
 635:/usr/include/c++/6/complex ****   //     to deliver an answer as close as possible to the real value.
 636:/usr/include/c++/6/complex ****   template<bool>
 637:/usr/include/c++/6/complex ****     struct _Norm_helper
 638:/usr/include/c++/6/complex ****     {
 639:/usr/include/c++/6/complex ****       template<typename _Tp>
 640:/usr/include/c++/6/complex ****         static inline _Tp _S_do_it(const complex<_Tp>& __z)
 641:/usr/include/c++/6/complex ****         {
 642:/usr/include/c++/6/complex ****           const _Tp __x = __z.real();
 643:/usr/include/c++/6/complex ****           const _Tp __y = __z.imag();
 644:/usr/include/c++/6/complex ****           return __x * __x + __y * __y;
 645:/usr/include/c++/6/complex ****         }
 646:/usr/include/c++/6/complex ****     };
 647:/usr/include/c++/6/complex **** 
 648:/usr/include/c++/6/complex ****   template<>
 649:/usr/include/c++/6/complex ****     struct _Norm_helper<true>
 650:/usr/include/c++/6/complex ****     {
GAS LISTING /tmp/ccvUPO8Q.s 			page 63


 651:/usr/include/c++/6/complex ****       template<typename _Tp>
 652:/usr/include/c++/6/complex ****         static inline _Tp _S_do_it(const complex<_Tp>& __z)
 653:/usr/include/c++/6/complex ****         {
 654:/usr/include/c++/6/complex ****           _Tp __res = std::abs(__z);
 655:/usr/include/c++/6/complex ****           return __res * __res;
 656:/usr/include/c++/6/complex ****         }
 657:/usr/include/c++/6/complex ****     };
 658:/usr/include/c++/6/complex ****   
 659:/usr/include/c++/6/complex ****   template<typename _Tp>
 660:/usr/include/c++/6/complex ****     inline _Tp
 661:/usr/include/c++/6/complex ****     norm(const complex<_Tp>& __z)
 662:/usr/include/c++/6/complex ****     {
 663:/usr/include/c++/6/complex ****       return _Norm_helper<__is_floating<_Tp>::__value 
 664:/usr/include/c++/6/complex **** 	&& !_GLIBCXX_FAST_MATH>::_S_do_it(__z);
 665:/usr/include/c++/6/complex ****     }
 666:/usr/include/c++/6/complex **** 
 667:/usr/include/c++/6/complex ****   template<typename _Tp>
 668:/usr/include/c++/6/complex ****     inline complex<_Tp>
 669:/usr/include/c++/6/complex ****     polar(const _Tp& __rho, const _Tp& __theta)
 670:/usr/include/c++/6/complex ****     {
 671:/usr/include/c++/6/complex ****       __glibcxx_assert( __rho >= 0 );
 672:/usr/include/c++/6/complex ****       return complex<_Tp>(__rho * cos(__theta), __rho * sin(__theta));
 673:/usr/include/c++/6/complex ****     }
 674:/usr/include/c++/6/complex **** 
 675:/usr/include/c++/6/complex ****   template<typename _Tp>
 676:/usr/include/c++/6/complex ****     inline complex<_Tp>
 677:/usr/include/c++/6/complex ****     conj(const complex<_Tp>& __z)
 678:/usr/include/c++/6/complex ****     { return complex<_Tp>(__z.real(), -__z.imag()); }
 679:/usr/include/c++/6/complex ****   
 680:/usr/include/c++/6/complex ****   // Transcendentals
 681:/usr/include/c++/6/complex **** 
 682:/usr/include/c++/6/complex ****   // 26.2.8/1 cos(__z):  Returns the cosine of __z.
 683:/usr/include/c++/6/complex ****   template<typename _Tp>
 684:/usr/include/c++/6/complex ****     inline complex<_Tp>
 685:/usr/include/c++/6/complex ****     __complex_cos(const complex<_Tp>& __z)
 686:/usr/include/c++/6/complex ****     {
 687:/usr/include/c++/6/complex ****       const _Tp __x = __z.real();
 688:/usr/include/c++/6/complex ****       const _Tp __y = __z.imag();
 689:/usr/include/c++/6/complex ****       return complex<_Tp>(cos(__x) * cosh(__y), -sin(__x) * sinh(__y));
 690:/usr/include/c++/6/complex ****     }
 691:/usr/include/c++/6/complex **** 
 692:/usr/include/c++/6/complex **** #if _GLIBCXX_USE_C99_COMPLEX
 693:/usr/include/c++/6/complex ****   inline __complex__ float
 694:/usr/include/c++/6/complex ****   __complex_cos(__complex__ float __z) { return __builtin_ccosf(__z); }
 695:/usr/include/c++/6/complex **** 
 696:/usr/include/c++/6/complex ****   inline __complex__ double
 697:/usr/include/c++/6/complex ****   __complex_cos(__complex__ double __z) { return __builtin_ccos(__z); }
 698:/usr/include/c++/6/complex **** 
 699:/usr/include/c++/6/complex ****   inline __complex__ long double
 700:/usr/include/c++/6/complex ****   __complex_cos(const __complex__ long double& __z)
 701:/usr/include/c++/6/complex ****   { return __builtin_ccosl(__z); }
 702:/usr/include/c++/6/complex **** 
 703:/usr/include/c++/6/complex ****   template<typename _Tp>
 704:/usr/include/c++/6/complex ****     inline complex<_Tp>
 705:/usr/include/c++/6/complex ****     cos(const complex<_Tp>& __z) { return __complex_cos(__z.__rep()); }
 706:/usr/include/c++/6/complex **** #else
 707:/usr/include/c++/6/complex ****   template<typename _Tp>
GAS LISTING /tmp/ccvUPO8Q.s 			page 64


 708:/usr/include/c++/6/complex ****     inline complex<_Tp>
 709:/usr/include/c++/6/complex ****     cos(const complex<_Tp>& __z) { return __complex_cos(__z); }
 710:/usr/include/c++/6/complex **** #endif
 711:/usr/include/c++/6/complex **** 
 712:/usr/include/c++/6/complex ****   // 26.2.8/2 cosh(__z): Returns the hyperbolic cosine of __z.
 713:/usr/include/c++/6/complex ****   template<typename _Tp>
 714:/usr/include/c++/6/complex ****     inline complex<_Tp>
 715:/usr/include/c++/6/complex ****     __complex_cosh(const complex<_Tp>& __z)
 716:/usr/include/c++/6/complex ****     {
 717:/usr/include/c++/6/complex ****       const _Tp __x = __z.real();
 718:/usr/include/c++/6/complex ****       const _Tp __y = __z.imag();
 719:/usr/include/c++/6/complex ****       return complex<_Tp>(cosh(__x) * cos(__y), sinh(__x) * sin(__y));
 720:/usr/include/c++/6/complex ****     }
 721:/usr/include/c++/6/complex **** 
 722:/usr/include/c++/6/complex **** #if _GLIBCXX_USE_C99_COMPLEX
 723:/usr/include/c++/6/complex ****   inline __complex__ float
 724:/usr/include/c++/6/complex ****   __complex_cosh(__complex__ float __z) { return __builtin_ccoshf(__z); }
 725:/usr/include/c++/6/complex **** 
 726:/usr/include/c++/6/complex ****   inline __complex__ double
 727:/usr/include/c++/6/complex ****   __complex_cosh(__complex__ double __z) { return __builtin_ccosh(__z); }
 728:/usr/include/c++/6/complex **** 
 729:/usr/include/c++/6/complex ****   inline __complex__ long double
 730:/usr/include/c++/6/complex ****   __complex_cosh(const __complex__ long double& __z)
 731:/usr/include/c++/6/complex ****   { return __builtin_ccoshl(__z); }
 732:/usr/include/c++/6/complex **** 
 733:/usr/include/c++/6/complex ****   template<typename _Tp>
 734:/usr/include/c++/6/complex ****     inline complex<_Tp>
 735:/usr/include/c++/6/complex ****     cosh(const complex<_Tp>& __z) { return __complex_cosh(__z.__rep()); }
 736:/usr/include/c++/6/complex **** #else
 737:/usr/include/c++/6/complex ****   template<typename _Tp>
 738:/usr/include/c++/6/complex ****     inline complex<_Tp>
 739:/usr/include/c++/6/complex ****     cosh(const complex<_Tp>& __z) { return __complex_cosh(__z); }
 740:/usr/include/c++/6/complex **** #endif
 741:/usr/include/c++/6/complex **** 
 742:/usr/include/c++/6/complex ****   // 26.2.8/3 exp(__z): Returns the complex base e exponential of x
 743:/usr/include/c++/6/complex ****   template<typename _Tp>
 744:/usr/include/c++/6/complex ****     inline complex<_Tp>
 745:/usr/include/c++/6/complex ****     __complex_exp(const complex<_Tp>& __z)
 746:/usr/include/c++/6/complex ****     { return std::polar<_Tp>(exp(__z.real()), __z.imag()); }
 747:/usr/include/c++/6/complex **** 
 748:/usr/include/c++/6/complex **** #if _GLIBCXX_USE_C99_COMPLEX
 749:/usr/include/c++/6/complex ****   inline __complex__ float
 750:/usr/include/c++/6/complex ****   __complex_exp(__complex__ float __z) { return __builtin_cexpf(__z); }
 751:/usr/include/c++/6/complex **** 
 752:/usr/include/c++/6/complex ****   inline __complex__ double
 753:/usr/include/c++/6/complex ****   __complex_exp(__complex__ double __z) { return __builtin_cexp(__z); }
 754:/usr/include/c++/6/complex **** 
 755:/usr/include/c++/6/complex ****   inline __complex__ long double
 756:/usr/include/c++/6/complex ****   __complex_exp(const __complex__ long double& __z)
 757:/usr/include/c++/6/complex ****   { return __builtin_cexpl(__z); }
 758:/usr/include/c++/6/complex **** 
 759:/usr/include/c++/6/complex ****   template<typename _Tp>
 760:/usr/include/c++/6/complex ****     inline complex<_Tp>
 761:/usr/include/c++/6/complex ****     exp(const complex<_Tp>& __z) { return __complex_exp(__z.__rep()); }
 762:/usr/include/c++/6/complex **** #else
 763:/usr/include/c++/6/complex ****   template<typename _Tp>
 764:/usr/include/c++/6/complex ****     inline complex<_Tp>
GAS LISTING /tmp/ccvUPO8Q.s 			page 65


 765:/usr/include/c++/6/complex ****     exp(const complex<_Tp>& __z) { return __complex_exp(__z); }
 766:/usr/include/c++/6/complex **** #endif
 767:/usr/include/c++/6/complex **** 
 768:/usr/include/c++/6/complex ****   // 26.2.8/5 log(__z): Returns the natural complex logarithm of __z.
 769:/usr/include/c++/6/complex ****   //                    The branch cut is along the negative axis.
 770:/usr/include/c++/6/complex ****   template<typename _Tp>
 771:/usr/include/c++/6/complex ****     inline complex<_Tp>
 772:/usr/include/c++/6/complex ****     __complex_log(const complex<_Tp>& __z)
 773:/usr/include/c++/6/complex ****     { return complex<_Tp>(log(std::abs(__z)), std::arg(__z)); }
 774:/usr/include/c++/6/complex **** 
 775:/usr/include/c++/6/complex **** #if _GLIBCXX_USE_C99_COMPLEX
 776:/usr/include/c++/6/complex ****   inline __complex__ float
 777:/usr/include/c++/6/complex ****   __complex_log(__complex__ float __z) { return __builtin_clogf(__z); }
 778:/usr/include/c++/6/complex **** 
 779:/usr/include/c++/6/complex ****   inline __complex__ double
 780:/usr/include/c++/6/complex ****   __complex_log(__complex__ double __z) { return __builtin_clog(__z); }
 781:/usr/include/c++/6/complex **** 
 782:/usr/include/c++/6/complex ****   inline __complex__ long double
 783:/usr/include/c++/6/complex ****   __complex_log(const __complex__ long double& __z)
 784:/usr/include/c++/6/complex ****   { return __builtin_clogl(__z); }
 785:/usr/include/c++/6/complex **** 
 786:/usr/include/c++/6/complex ****   template<typename _Tp>
 787:/usr/include/c++/6/complex ****     inline complex<_Tp>
 788:/usr/include/c++/6/complex ****     log(const complex<_Tp>& __z) { return __complex_log(__z.__rep()); }
 789:/usr/include/c++/6/complex **** #else
 790:/usr/include/c++/6/complex ****   template<typename _Tp>
 791:/usr/include/c++/6/complex ****     inline complex<_Tp>
 792:/usr/include/c++/6/complex ****     log(const complex<_Tp>& __z) { return __complex_log(__z); }
 793:/usr/include/c++/6/complex **** #endif
 794:/usr/include/c++/6/complex **** 
 795:/usr/include/c++/6/complex ****   template<typename _Tp>
 796:/usr/include/c++/6/complex ****     inline complex<_Tp>
 797:/usr/include/c++/6/complex ****     log10(const complex<_Tp>& __z)
 798:/usr/include/c++/6/complex ****     { return std::log(__z) / log(_Tp(10.0)); }
 799:/usr/include/c++/6/complex **** 
 800:/usr/include/c++/6/complex ****   // 26.2.8/10 sin(__z): Returns the sine of __z.
 801:/usr/include/c++/6/complex ****   template<typename _Tp>
 802:/usr/include/c++/6/complex ****     inline complex<_Tp>
 803:/usr/include/c++/6/complex ****     __complex_sin(const complex<_Tp>& __z)
 804:/usr/include/c++/6/complex ****     {
 805:/usr/include/c++/6/complex ****       const _Tp __x = __z.real();
 806:/usr/include/c++/6/complex ****       const _Tp __y = __z.imag();
 807:/usr/include/c++/6/complex ****       return complex<_Tp>(sin(__x) * cosh(__y), cos(__x) * sinh(__y)); 
 808:/usr/include/c++/6/complex ****     }
 809:/usr/include/c++/6/complex **** 
 810:/usr/include/c++/6/complex **** #if _GLIBCXX_USE_C99_COMPLEX
 811:/usr/include/c++/6/complex ****   inline __complex__ float
 812:/usr/include/c++/6/complex ****   __complex_sin(__complex__ float __z) { return __builtin_csinf(__z); }
 813:/usr/include/c++/6/complex **** 
 814:/usr/include/c++/6/complex ****   inline __complex__ double
 815:/usr/include/c++/6/complex ****   __complex_sin(__complex__ double __z) { return __builtin_csin(__z); }
 816:/usr/include/c++/6/complex **** 
 817:/usr/include/c++/6/complex ****   inline __complex__ long double
 818:/usr/include/c++/6/complex ****   __complex_sin(const __complex__ long double& __z)
 819:/usr/include/c++/6/complex ****   { return __builtin_csinl(__z); }
 820:/usr/include/c++/6/complex **** 
 821:/usr/include/c++/6/complex ****   template<typename _Tp>
GAS LISTING /tmp/ccvUPO8Q.s 			page 66


 822:/usr/include/c++/6/complex ****     inline complex<_Tp>
 823:/usr/include/c++/6/complex ****     sin(const complex<_Tp>& __z) { return __complex_sin(__z.__rep()); }
 824:/usr/include/c++/6/complex **** #else
 825:/usr/include/c++/6/complex ****   template<typename _Tp>
 826:/usr/include/c++/6/complex ****     inline complex<_Tp>
 827:/usr/include/c++/6/complex ****     sin(const complex<_Tp>& __z) { return __complex_sin(__z); }
 828:/usr/include/c++/6/complex **** #endif
 829:/usr/include/c++/6/complex **** 
 830:/usr/include/c++/6/complex ****   // 26.2.8/11 sinh(__z): Returns the hyperbolic sine of __z.
 831:/usr/include/c++/6/complex ****   template<typename _Tp>
 832:/usr/include/c++/6/complex ****     inline complex<_Tp>
 833:/usr/include/c++/6/complex ****     __complex_sinh(const complex<_Tp>& __z)
 834:/usr/include/c++/6/complex ****     {
 835:/usr/include/c++/6/complex ****       const _Tp __x = __z.real();
 836:/usr/include/c++/6/complex ****       const _Tp  __y = __z.imag();
 837:/usr/include/c++/6/complex ****       return complex<_Tp>(sinh(__x) * cos(__y), cosh(__x) * sin(__y));
 838:/usr/include/c++/6/complex ****     }
 839:/usr/include/c++/6/complex **** 
 840:/usr/include/c++/6/complex **** #if _GLIBCXX_USE_C99_COMPLEX
 841:/usr/include/c++/6/complex ****   inline __complex__ float
 842:/usr/include/c++/6/complex ****   __complex_sinh(__complex__ float __z) { return __builtin_csinhf(__z); }      
 843:/usr/include/c++/6/complex **** 
 844:/usr/include/c++/6/complex ****   inline __complex__ double
 845:/usr/include/c++/6/complex ****   __complex_sinh(__complex__ double __z) { return __builtin_csinh(__z); }      
 846:/usr/include/c++/6/complex **** 
 847:/usr/include/c++/6/complex ****   inline __complex__ long double
 848:/usr/include/c++/6/complex ****   __complex_sinh(const __complex__ long double& __z)
 849:/usr/include/c++/6/complex ****   { return __builtin_csinhl(__z); }      
 850:/usr/include/c++/6/complex **** 
 851:/usr/include/c++/6/complex ****   template<typename _Tp>
 852:/usr/include/c++/6/complex ****     inline complex<_Tp>
 853:/usr/include/c++/6/complex ****     sinh(const complex<_Tp>& __z) { return __complex_sinh(__z.__rep()); }
 854:/usr/include/c++/6/complex **** #else
 855:/usr/include/c++/6/complex ****   template<typename _Tp>
 856:/usr/include/c++/6/complex ****     inline complex<_Tp>
 857:/usr/include/c++/6/complex ****     sinh(const complex<_Tp>& __z) { return __complex_sinh(__z); }
 858:/usr/include/c++/6/complex **** #endif
 859:/usr/include/c++/6/complex **** 
 860:/usr/include/c++/6/complex ****   // 26.2.8/13 sqrt(__z): Returns the complex square root of __z.
 861:/usr/include/c++/6/complex ****   //                     The branch cut is on the negative axis.
 862:/usr/include/c++/6/complex ****   template<typename _Tp>
 863:/usr/include/c++/6/complex ****     complex<_Tp>
 864:/usr/include/c++/6/complex ****     __complex_sqrt(const complex<_Tp>& __z)
 865:/usr/include/c++/6/complex ****     {
 866:/usr/include/c++/6/complex ****       _Tp __x = __z.real();
 867:/usr/include/c++/6/complex ****       _Tp __y = __z.imag();
 868:/usr/include/c++/6/complex **** 
 869:/usr/include/c++/6/complex ****       if (__x == _Tp())
 870:/usr/include/c++/6/complex ****         {
 871:/usr/include/c++/6/complex ****           _Tp __t = sqrt(abs(__y) / 2);
 872:/usr/include/c++/6/complex ****           return complex<_Tp>(__t, __y < _Tp() ? -__t : __t);
 873:/usr/include/c++/6/complex ****         }
 874:/usr/include/c++/6/complex ****       else
 875:/usr/include/c++/6/complex ****         {
 876:/usr/include/c++/6/complex ****           _Tp __t = sqrt(2 * (std::abs(__z) + abs(__x)));
 877:/usr/include/c++/6/complex ****           _Tp __u = __t / 2;
 878:/usr/include/c++/6/complex ****           return __x > _Tp()
GAS LISTING /tmp/ccvUPO8Q.s 			page 67


 879:/usr/include/c++/6/complex ****             ? complex<_Tp>(__u, __y / __t)
 880:/usr/include/c++/6/complex ****             : complex<_Tp>(abs(__y) / __t, __y < _Tp() ? -__u : __u);
 881:/usr/include/c++/6/complex ****         }
 882:/usr/include/c++/6/complex ****     }
 883:/usr/include/c++/6/complex **** 
 884:/usr/include/c++/6/complex **** #if _GLIBCXX_USE_C99_COMPLEX
 885:/usr/include/c++/6/complex ****   inline __complex__ float
 886:/usr/include/c++/6/complex ****   __complex_sqrt(__complex__ float __z) { return __builtin_csqrtf(__z); }
 887:/usr/include/c++/6/complex **** 
 888:/usr/include/c++/6/complex ****   inline __complex__ double
 889:/usr/include/c++/6/complex ****   __complex_sqrt(__complex__ double __z) { return __builtin_csqrt(__z); }
 890:/usr/include/c++/6/complex **** 
 891:/usr/include/c++/6/complex ****   inline __complex__ long double
 892:/usr/include/c++/6/complex ****   __complex_sqrt(const __complex__ long double& __z)
 893:/usr/include/c++/6/complex ****   { return __builtin_csqrtl(__z); }
 894:/usr/include/c++/6/complex **** 
 895:/usr/include/c++/6/complex ****   template<typename _Tp>
 896:/usr/include/c++/6/complex ****     inline complex<_Tp>
 897:/usr/include/c++/6/complex ****     sqrt(const complex<_Tp>& __z) { return __complex_sqrt(__z.__rep()); }
 898:/usr/include/c++/6/complex **** #else
 899:/usr/include/c++/6/complex ****   template<typename _Tp>
 900:/usr/include/c++/6/complex ****     inline complex<_Tp>
 901:/usr/include/c++/6/complex ****     sqrt(const complex<_Tp>& __z) { return __complex_sqrt(__z); }
 902:/usr/include/c++/6/complex **** #endif
 903:/usr/include/c++/6/complex **** 
 904:/usr/include/c++/6/complex ****   // 26.2.8/14 tan(__z):  Return the complex tangent of __z.
 905:/usr/include/c++/6/complex ****   
 906:/usr/include/c++/6/complex ****   template<typename _Tp>
 907:/usr/include/c++/6/complex ****     inline complex<_Tp>
 908:/usr/include/c++/6/complex ****     __complex_tan(const complex<_Tp>& __z)
 909:/usr/include/c++/6/complex ****     { return std::sin(__z) / std::cos(__z); }
 910:/usr/include/c++/6/complex **** 
 911:/usr/include/c++/6/complex **** #if _GLIBCXX_USE_C99_COMPLEX
 912:/usr/include/c++/6/complex ****   inline __complex__ float
 913:/usr/include/c++/6/complex ****   __complex_tan(__complex__ float __z) { return __builtin_ctanf(__z); }
 914:/usr/include/c++/6/complex **** 
 915:/usr/include/c++/6/complex ****   inline __complex__ double
 916:/usr/include/c++/6/complex ****   __complex_tan(__complex__ double __z) { return __builtin_ctan(__z); }
 917:/usr/include/c++/6/complex **** 
 918:/usr/include/c++/6/complex ****   inline __complex__ long double
 919:/usr/include/c++/6/complex ****   __complex_tan(const __complex__ long double& __z)
 920:/usr/include/c++/6/complex ****   { return __builtin_ctanl(__z); }
 921:/usr/include/c++/6/complex **** 
 922:/usr/include/c++/6/complex ****   template<typename _Tp>
 923:/usr/include/c++/6/complex ****     inline complex<_Tp>
 924:/usr/include/c++/6/complex ****     tan(const complex<_Tp>& __z) { return __complex_tan(__z.__rep()); }
 925:/usr/include/c++/6/complex **** #else
 926:/usr/include/c++/6/complex ****   template<typename _Tp>
 927:/usr/include/c++/6/complex ****     inline complex<_Tp>
 928:/usr/include/c++/6/complex ****     tan(const complex<_Tp>& __z) { return __complex_tan(__z); }
 929:/usr/include/c++/6/complex **** #endif
 930:/usr/include/c++/6/complex **** 
 931:/usr/include/c++/6/complex **** 
 932:/usr/include/c++/6/complex ****   // 26.2.8/15 tanh(__z):  Returns the hyperbolic tangent of __z.
 933:/usr/include/c++/6/complex ****   
 934:/usr/include/c++/6/complex ****   template<typename _Tp>
 935:/usr/include/c++/6/complex ****     inline complex<_Tp>
GAS LISTING /tmp/ccvUPO8Q.s 			page 68


 936:/usr/include/c++/6/complex ****     __complex_tanh(const complex<_Tp>& __z)
 937:/usr/include/c++/6/complex ****     { return std::sinh(__z) / std::cosh(__z); }
 938:/usr/include/c++/6/complex **** 
 939:/usr/include/c++/6/complex **** #if _GLIBCXX_USE_C99_COMPLEX
 940:/usr/include/c++/6/complex ****   inline __complex__ float
 941:/usr/include/c++/6/complex ****   __complex_tanh(__complex__ float __z) { return __builtin_ctanhf(__z); }
 942:/usr/include/c++/6/complex **** 
 943:/usr/include/c++/6/complex ****   inline __complex__ double
 944:/usr/include/c++/6/complex ****   __complex_tanh(__complex__ double __z) { return __builtin_ctanh(__z); }
 945:/usr/include/c++/6/complex **** 
 946:/usr/include/c++/6/complex ****   inline __complex__ long double
 947:/usr/include/c++/6/complex ****   __complex_tanh(const __complex__ long double& __z)
 948:/usr/include/c++/6/complex ****   { return __builtin_ctanhl(__z); }
 949:/usr/include/c++/6/complex **** 
 950:/usr/include/c++/6/complex ****   template<typename _Tp>
 951:/usr/include/c++/6/complex ****     inline complex<_Tp>
 952:/usr/include/c++/6/complex ****     tanh(const complex<_Tp>& __z) { return __complex_tanh(__z.__rep()); }
 953:/usr/include/c++/6/complex **** #else
 954:/usr/include/c++/6/complex ****   template<typename _Tp>
 955:/usr/include/c++/6/complex ****     inline complex<_Tp>
 956:/usr/include/c++/6/complex ****     tanh(const complex<_Tp>& __z) { return __complex_tanh(__z); }
 957:/usr/include/c++/6/complex **** #endif
 958:/usr/include/c++/6/complex **** 
 959:/usr/include/c++/6/complex **** 
 960:/usr/include/c++/6/complex ****   // 26.2.8/9  pow(__x, __y): Returns the complex power base of __x
 961:/usr/include/c++/6/complex ****   //                          raised to the __y-th power.  The branch
 962:/usr/include/c++/6/complex ****   //                          cut is on the negative axis.
 963:/usr/include/c++/6/complex ****   template<typename _Tp>
 964:/usr/include/c++/6/complex ****     complex<_Tp>
 965:/usr/include/c++/6/complex ****     __complex_pow_unsigned(complex<_Tp> __x, unsigned __n)
 966:/usr/include/c++/6/complex ****     {
 967:/usr/include/c++/6/complex ****       complex<_Tp> __y = __n % 2 ? __x : complex<_Tp>(1);
 968:/usr/include/c++/6/complex **** 
 969:/usr/include/c++/6/complex ****       while (__n >>= 1)
 970:/usr/include/c++/6/complex ****         {
 971:/usr/include/c++/6/complex ****           __x *= __x;
 972:/usr/include/c++/6/complex ****           if (__n % 2)
 973:/usr/include/c++/6/complex ****             __y *= __x;
 974:/usr/include/c++/6/complex ****         }
 975:/usr/include/c++/6/complex **** 
 976:/usr/include/c++/6/complex ****       return __y;
 977:/usr/include/c++/6/complex ****     }
 978:/usr/include/c++/6/complex **** 
 979:/usr/include/c++/6/complex ****   // In C++11 mode we used to implement the resolution of
 980:/usr/include/c++/6/complex ****   // DR 844. complex pow return type is ambiguous.
 981:/usr/include/c++/6/complex ****   // thus the following overload was disabled in that mode.  However, doing
 982:/usr/include/c++/6/complex ****   // that causes all sorts of issues, see, for example:
 983:/usr/include/c++/6/complex ****   //   http://gcc.gnu.org/ml/libstdc++/2013-01/msg00058.html
 984:/usr/include/c++/6/complex ****   // and also PR57974.
 985:/usr/include/c++/6/complex ****   template<typename _Tp>
 986:/usr/include/c++/6/complex ****     inline complex<_Tp>
 987:/usr/include/c++/6/complex ****     pow(const complex<_Tp>& __z, int __n)
 988:/usr/include/c++/6/complex ****     {
 989:/usr/include/c++/6/complex ****       return __n < 0
 990:/usr/include/c++/6/complex **** 	? complex<_Tp>(1) / std::__complex_pow_unsigned(__z, -(unsigned)__n)
 991:/usr/include/c++/6/complex ****         : std::__complex_pow_unsigned(__z, __n);
 992:/usr/include/c++/6/complex ****     }
GAS LISTING /tmp/ccvUPO8Q.s 			page 69


 993:/usr/include/c++/6/complex **** 
 994:/usr/include/c++/6/complex ****   template<typename _Tp>
 995:/usr/include/c++/6/complex ****     complex<_Tp>
 996:/usr/include/c++/6/complex ****     pow(const complex<_Tp>& __x, const _Tp& __y)
 997:/usr/include/c++/6/complex ****     {
 998:/usr/include/c++/6/complex **** #if ! _GLIBCXX_USE_C99_COMPLEX
 999:/usr/include/c++/6/complex ****       if (__x == _Tp())
1000:/usr/include/c++/6/complex **** 	return _Tp();
1001:/usr/include/c++/6/complex **** #endif
1002:/usr/include/c++/6/complex ****       if (__x.imag() == _Tp() && __x.real() > _Tp())
1003:/usr/include/c++/6/complex ****         return pow(__x.real(), __y);
1004:/usr/include/c++/6/complex **** 
1005:/usr/include/c++/6/complex ****       complex<_Tp> __t = std::log(__x);
1006:/usr/include/c++/6/complex ****       return std::polar<_Tp>(exp(__y * __t.real()), __y * __t.imag());
1007:/usr/include/c++/6/complex ****     }
1008:/usr/include/c++/6/complex **** 
1009:/usr/include/c++/6/complex ****   template<typename _Tp>
1010:/usr/include/c++/6/complex ****     inline complex<_Tp>
1011:/usr/include/c++/6/complex ****     __complex_pow(const complex<_Tp>& __x, const complex<_Tp>& __y)
1012:/usr/include/c++/6/complex ****     { return __x == _Tp() ? _Tp() : std::exp(__y * std::log(__x)); }
1013:/usr/include/c++/6/complex **** 
1014:/usr/include/c++/6/complex **** #if _GLIBCXX_USE_C99_COMPLEX
1015:/usr/include/c++/6/complex ****   inline __complex__ float
1016:/usr/include/c++/6/complex ****   __complex_pow(__complex__ float __x, __complex__ float __y)
1017:/usr/include/c++/6/complex ****   { return __builtin_cpowf(__x, __y); }
1018:/usr/include/c++/6/complex **** 
1019:/usr/include/c++/6/complex ****   inline __complex__ double
1020:/usr/include/c++/6/complex ****   __complex_pow(__complex__ double __x, __complex__ double __y)
1021:/usr/include/c++/6/complex ****   { return __builtin_cpow(__x, __y); }
1022:/usr/include/c++/6/complex **** 
1023:/usr/include/c++/6/complex ****   inline __complex__ long double
1024:/usr/include/c++/6/complex ****   __complex_pow(const __complex__ long double& __x,
1025:/usr/include/c++/6/complex **** 		const __complex__ long double& __y)
1026:/usr/include/c++/6/complex ****   { return __builtin_cpowl(__x, __y); }
1027:/usr/include/c++/6/complex **** 
1028:/usr/include/c++/6/complex ****   template<typename _Tp>
1029:/usr/include/c++/6/complex ****     inline complex<_Tp>
1030:/usr/include/c++/6/complex ****     pow(const complex<_Tp>& __x, const complex<_Tp>& __y)
1031:/usr/include/c++/6/complex ****     { return __complex_pow(__x.__rep(), __y.__rep()); }
1032:/usr/include/c++/6/complex **** #else
1033:/usr/include/c++/6/complex ****   template<typename _Tp>
1034:/usr/include/c++/6/complex ****     inline complex<_Tp>
1035:/usr/include/c++/6/complex ****     pow(const complex<_Tp>& __x, const complex<_Tp>& __y)
1036:/usr/include/c++/6/complex ****     { return __complex_pow(__x, __y); }
1037:/usr/include/c++/6/complex **** #endif
1038:/usr/include/c++/6/complex **** 
1039:/usr/include/c++/6/complex ****   template<typename _Tp>
1040:/usr/include/c++/6/complex ****     inline complex<_Tp>
1041:/usr/include/c++/6/complex ****     pow(const _Tp& __x, const complex<_Tp>& __y)
1042:/usr/include/c++/6/complex ****     {
1043:/usr/include/c++/6/complex ****       return __x > _Tp() ? std::polar<_Tp>(pow(__x, __y.real()),
1044:/usr/include/c++/6/complex **** 					   __y.imag() * log(__x))
1045:/usr/include/c++/6/complex **** 	                 : std::pow(complex<_Tp>(__x), __y);
1046:/usr/include/c++/6/complex ****     }
1047:/usr/include/c++/6/complex **** 
1048:/usr/include/c++/6/complex ****   /// 26.2.3  complex specializations
1049:/usr/include/c++/6/complex ****   /// complex<float> specialization
GAS LISTING /tmp/ccvUPO8Q.s 			page 70


1050:/usr/include/c++/6/complex ****   template<>
1051:/usr/include/c++/6/complex ****     struct complex<float>
1052:/usr/include/c++/6/complex ****     {
1053:/usr/include/c++/6/complex ****       typedef float value_type;
1054:/usr/include/c++/6/complex ****       typedef __complex__ float _ComplexT;
1055:/usr/include/c++/6/complex **** 
1056:/usr/include/c++/6/complex ****       _GLIBCXX_CONSTEXPR complex(_ComplexT __z) : _M_value(__z) { }
1057:/usr/include/c++/6/complex **** 
1058:/usr/include/c++/6/complex ****       _GLIBCXX_CONSTEXPR complex(float __r = 0.0f, float __i = 0.0f)
 1144              		.loc 9 1058 0
 1145              		.cfi_startproc
 1146 0000 55       		pushq	%rbp
 1147              		.cfi_def_cfa_offset 16
 1148              		.cfi_offset 6, -16
 1149 0001 4889E5   		movq	%rsp, %rbp
 1150              		.cfi_def_cfa_register 6
 1151 0004 48897DF8 		movq	%rdi, -8(%rbp)
 1152 0008 C5FA1145 		vmovss	%xmm0, -12(%rbp)
 1152      F4
 1153 000d C5FA114D 		vmovss	%xmm1, -16(%rbp)
 1153      F0
 1154              	.LBB19:
1059:/usr/include/c++/6/complex **** #if __cplusplus >= 201103L
1060:/usr/include/c++/6/complex ****       : _M_value{ __r, __i } { }
 1155              		.loc 9 1060 0
 1156 0012 C5FA104D 		vmovss	-12(%rbp), %xmm1
 1156      F4
 1157 0017 C5FA1045 		vmovss	-16(%rbp), %xmm0
 1157      F0
 1158 001c 488B45F8 		movq	-8(%rbp), %rax
 1159 0020 C5FA1108 		vmovss	%xmm1, (%rax)
 1160 0024 C5FA1140 		vmovss	%xmm0, 4(%rax)
 1160      04
 1161              	.LBE19:
 1162 0029 90       		nop
 1163 002a 5D       		popq	%rbp
 1164              		.cfi_def_cfa 7, 8
 1165 002b C3       		ret
 1166              		.cfi_endproc
 1167              	.LFE3816:
 1169              		.weak	_ZNSt7complexIfEC1Eff
 1170              		.set	_ZNSt7complexIfEC1Eff,_ZNSt7complexIfEC2Eff
 1171              		.section	.text._ZNKSt7complexIfE4realB5cxx11Ev,"axG",@progbits,_ZNKSt7complexIfE4realB5cxx11Ev,com
 1172              		.align 2
 1173              		.weak	_ZNKSt7complexIfE4realB5cxx11Ev
 1175              	_ZNKSt7complexIfE4realB5cxx11Ev:
 1176              	.LFB3818:
1061:/usr/include/c++/6/complex **** #else
1062:/usr/include/c++/6/complex ****       {
1063:/usr/include/c++/6/complex **** 	__real__ _M_value = __r;
1064:/usr/include/c++/6/complex **** 	__imag__ _M_value = __i;
1065:/usr/include/c++/6/complex ****       }
1066:/usr/include/c++/6/complex **** #endif
1067:/usr/include/c++/6/complex **** 
1068:/usr/include/c++/6/complex ****       explicit _GLIBCXX_CONSTEXPR complex(const complex<double>&);
1069:/usr/include/c++/6/complex ****       explicit _GLIBCXX_CONSTEXPR complex(const complex<long double>&);	
1070:/usr/include/c++/6/complex **** 
GAS LISTING /tmp/ccvUPO8Q.s 			page 71


1071:/usr/include/c++/6/complex **** #if __cplusplus >= 201103L
1072:/usr/include/c++/6/complex ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
1073:/usr/include/c++/6/complex ****       // DR 387. std::complex over-encapsulated.
1074:/usr/include/c++/6/complex ****       __attribute ((__abi_tag__ ("cxx11")))
1075:/usr/include/c++/6/complex ****       constexpr float 
1076:/usr/include/c++/6/complex ****       real() const { return __real__ _M_value; }
 1177              		.loc 9 1076 0
 1178              		.cfi_startproc
 1179 0000 55       		pushq	%rbp
 1180              		.cfi_def_cfa_offset 16
 1181              		.cfi_offset 6, -16
 1182 0001 4889E5   		movq	%rsp, %rbp
 1183              		.cfi_def_cfa_register 6
 1184 0004 48897DF8 		movq	%rdi, -8(%rbp)
 1185              		.loc 9 1076 0
 1186 0008 488B45F8 		movq	-8(%rbp), %rax
 1187 000c C5FA1000 		vmovss	(%rax), %xmm0
 1188 0010 5D       		popq	%rbp
 1189              		.cfi_def_cfa 7, 8
 1190 0011 C3       		ret
 1191              		.cfi_endproc
 1192              	.LFE3818:
 1194              		.section	.text._ZNKSt7complexIfE4imagB5cxx11Ev,"axG",@progbits,_ZNKSt7complexIfE4imagB5cxx11Ev,com
 1195              		.align 2
 1196              		.weak	_ZNKSt7complexIfE4imagB5cxx11Ev
 1198              	_ZNKSt7complexIfE4imagB5cxx11Ev:
 1199              	.LFB3819:
1077:/usr/include/c++/6/complex **** 
1078:/usr/include/c++/6/complex ****       __attribute ((__abi_tag__ ("cxx11")))
1079:/usr/include/c++/6/complex ****       constexpr float 
1080:/usr/include/c++/6/complex ****       imag() const { return __imag__ _M_value; }
 1200              		.loc 9 1080 0
 1201              		.cfi_startproc
 1202 0000 55       		pushq	%rbp
 1203              		.cfi_def_cfa_offset 16
 1204              		.cfi_offset 6, -16
 1205 0001 4889E5   		movq	%rsp, %rbp
 1206              		.cfi_def_cfa_register 6
 1207 0004 48897DF8 		movq	%rdi, -8(%rbp)
 1208              		.loc 9 1080 0
 1209 0008 488B45F8 		movq	-8(%rbp), %rax
 1210 000c C5FA1040 		vmovss	4(%rax), %xmm0
 1210      04
 1211 0011 5D       		popq	%rbp
 1212              		.cfi_def_cfa 7, 8
 1213 0012 C3       		ret
 1214              		.cfi_endproc
 1215              	.LFE3819:
 1217              		.section	.text._ZNK3pmt10comparatorclERKN5boost13intrusive_ptrINS_8pmt_baseEEES6_,"axG",@progbits,
 1218              		.align 2
 1219              		.weak	_ZNK3pmt10comparatorclERKN5boost13intrusive_ptrINS_8pmt_baseEEES6_
 1221              	_ZNK3pmt10comparatorclERKN5boost13intrusive_ptrINS_8pmt_baseEEES6_:
 1222              	.LFB4089:
 1223              		.file 10 "/home/mpiscopo/gnuradio/include/pmt/pmt.h"
   1:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** /* -*- c++ -*- */
   2:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** /*
   3:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * Copyright 2006,2009,2010,2013 Free Software Foundation, Inc.
GAS LISTING /tmp/ccvUPO8Q.s 			page 72


   4:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  *
   5:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * This file is part of GNU Radio
   6:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  *
   7:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * GNU Radio is free software; you can redistribute it and/or modify
   8:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * it under the terms of the GNU General Public License as published by
   9:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * the Free Software Foundation; either version 3, or (at your option)
  10:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * any later version.
  11:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  *
  12:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * GNU Radio is distributed in the hope that it will be useful,
  13:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  14:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  15:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * GNU General Public License for more details.
  16:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  *
  17:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * You should have received a copy of the GNU General Public License
  18:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * along with GNU Radio; see the file COPYING.  If not, write to
  19:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * the Free Software Foundation, Inc., 51 Franklin Street,
  20:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * Boston, MA 02110-1301, USA.
  21:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  */
  22:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
  23:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** #ifndef INCLUDED_PMT_H
  24:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** #define INCLUDED_PMT_H
  25:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
  26:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** #include <pmt/api.h>
  27:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** #include <boost/intrusive_ptr.hpp>
  28:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** #include <boost/shared_ptr.hpp>
  29:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** #include <boost/any.hpp>
  30:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** #include <complex>
  31:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** #include <string>
  32:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** #include <stdint.h>
  33:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** #include <iosfwd>
  34:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** #include <stdexcept>
  35:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** #include <vector>
  36:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
  37:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** namespace gr {
  38:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****   namespace messages {
  39:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****     class msg_accepter;
  40:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****   }
  41:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** }
  42:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
  43:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** /*!
  44:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * This file defines a polymorphic type and the operations on it.
  45:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  *
  46:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * It draws heavily on the idea of scheme and lisp data types.
  47:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * The interface parallels that in Guile 1.8, with the notable
  48:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * exception that these objects are transparently reference counted.
  49:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  */
  50:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
  51:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** namespace pmt {
  52:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
  53:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** /*!
  54:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * \brief base class of all pmt types
  55:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  */
  56:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** class pmt_base;
  57:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
  58:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** /*!
  59:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * \brief typedef for shared pointer (transparent reference counting).
  60:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * See http://www.boost.org/libs/smart_ptr/smart_ptr.htm
GAS LISTING /tmp/ccvUPO8Q.s 			page 73


  61:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  */
  62:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** typedef boost::intrusive_ptr<pmt_base> pmt_t;
  63:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
  64:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** extern PMT_API void intrusive_ptr_add_ref(pmt_base*);
  65:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** extern PMT_API void intrusive_ptr_release(pmt_base*);
  66:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
  67:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** class PMT_API exception : public std::logic_error
  68:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** {
  69:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** public:
  70:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****   exception(const std::string &msg, pmt_t obj);
  71:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** };
  72:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
  73:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** class PMT_API wrong_type : public exception
  74:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** {
  75:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** public:
  76:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****   wrong_type(const std::string &msg, pmt_t obj);
  77:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** };
  78:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
  79:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** class PMT_API out_of_range : public exception
  80:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** {
  81:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** public:
  82:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****   out_of_range(const std::string &msg, pmt_t obj);
  83:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** };
  84:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
  85:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** class PMT_API notimplemented : public exception
  86:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** {
  87:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** public:
  88:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****   notimplemented(const std::string &msg, pmt_t obj);
  89:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** };
  90:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
  91:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
  92:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** /*
  93:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * ------------------------------------------------------------------------
  94:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * Constants
  95:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * ------------------------------------------------------------------------
  96:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  */
  97:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
  98:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API pmt_t get_PMT_NIL();
  99:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API pmt_t get_PMT_T();
 100:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API pmt_t get_PMT_F();
 101:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API pmt_t get_PMT_EOF();
 102:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 103:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** #define PMT_NIL get_PMT_NIL()
 104:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** #define PMT_T get_PMT_T()
 105:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** #define PMT_F get_PMT_F()
 106:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** #define PMT_EOF get_PMT_EOF()
 107:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 108:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 109:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 110:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** /*
 111:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * ------------------------------------------------------------------------
 112:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * Booleans.  Two constants, #t and #f.
 113:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  *
 114:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * In predicates, anything that is not #f is considered true.
 115:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * I.e., there is a single false value, #f.
 116:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * ------------------------------------------------------------------------
 117:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  */
GAS LISTING /tmp/ccvUPO8Q.s 			page 74


 118:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 119:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** //! Return true if obj is \#t or \#f, else return false.
 120:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API bool is_bool(pmt_t obj);
 121:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 122:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** //! Return false if obj is \#f, else return true.
 123:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API bool is_true(pmt_t obj);
 124:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 125:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** //! Return true if obj is \#f, else return true.
 126:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API bool is_false(pmt_t obj);
 127:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 128:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** //! Return \#f is val is false, else return \#t.
 129:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API pmt_t from_bool(bool val);
 130:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 131:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** //! Return true if val is pmt::True, return false when val is pmt::PMT_F,
 132:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** // else raise wrong_type exception.
 133:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API bool to_bool(pmt_t val);
 134:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 135:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** /*
 136:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * ------------------------------------------------------------------------
 137:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  *			       Symbols
 138:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * ------------------------------------------------------------------------
 139:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  */
 140:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 141:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** //! Return true if obj is a symbol, else false.
 142:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API bool is_symbol(const pmt_t& obj);
 143:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 144:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** //! Return the symbol whose name is \p s.
 145:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API pmt_t string_to_symbol(const std::string &s);
 146:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 147:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** //! Alias for pmt_string_to_symbol
 148:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API pmt_t intern(const std::string &s);
 149:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 150:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 151:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** /*!
 152:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * If \p is a symbol, return the name of the symbol as a string.
 153:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * Otherwise, raise the wrong_type exception.
 154:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  */
 155:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API const std::string symbol_to_string(const pmt_t& sym);
 156:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 157:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** /*
 158:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * ------------------------------------------------------------------------
 159:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  *           Numbers: we support integer, real and complex
 160:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * ------------------------------------------------------------------------
 161:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  */
 162:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 163:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** //! Return true if obj is any kind of number, else false.
 164:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API bool is_number(pmt_t obj);
 165:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 166:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** /*
 167:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * ------------------------------------------------------------------------
 168:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  *			       Integers
 169:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * ------------------------------------------------------------------------
 170:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  */
 171:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 172:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** //! Return true if \p x is an integer number, else false
 173:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API bool is_integer(pmt_t x);
 174:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
GAS LISTING /tmp/ccvUPO8Q.s 			page 75


 175:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** //! Return the pmt value that represents the integer \p x.
 176:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API pmt_t from_long(long x);
 177:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 178:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** /*!
 179:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * \brief Convert pmt to long if possible.
 180:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  *
 181:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * When \p x represents an exact integer that fits in a long,
 182:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * return that integer.  Else raise an exception, either wrong_type
 183:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * when x is not an exact integer, or out_of_range when it doesn't fit.
 184:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  */
 185:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API long to_long(pmt_t x);
 186:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 187:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** /*
 188:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * ------------------------------------------------------------------------
 189:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  *			       uint64_t
 190:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * ------------------------------------------------------------------------
 191:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  */
 192:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 193:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** //! Return true if \p x is an uint64 number, else false
 194:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API bool is_uint64(pmt_t x);
 195:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 196:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** //! Return the pmt value that represents the uint64 \p x.
 197:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API pmt_t from_uint64(uint64_t x);
 198:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 199:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** /*!
 200:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * \brief Convert pmt to uint64 if possible.
 201:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  *
 202:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * When \p x represents an exact integer that fits in a uint64,
 203:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * return that uint64.  Else raise an exception, either wrong_type
 204:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * when x is not an exact uint64, or out_of_range when it doesn't fit.
 205:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  */
 206:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API uint64_t to_uint64(pmt_t x);
 207:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 208:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** /*
 209:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * ------------------------------------------------------------------------
 210:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  *				Reals
 211:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * ------------------------------------------------------------------------
 212:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  */
 213:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 214:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** /*
 215:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * \brief Return true if \p obj is a real number, else false.
 216:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  */
 217:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API bool is_real(pmt_t obj);
 218:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 219:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** //! Return the pmt value that represents double \p x.
 220:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API pmt_t from_double(double x);
 221:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API pmt_t from_float(float x);
 222:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 223:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** /*!
 224:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * \brief Convert pmt to double if possible.
 225:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  *
 226:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * Returns the number closest to \p val that is representable
 227:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * as a double.  The argument \p val must be a real or integer, otherwise
 228:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * a wrong_type exception is raised.
 229:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  */
 230:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API double to_double(pmt_t x);
 231:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
GAS LISTING /tmp/ccvUPO8Q.s 			page 76


 232:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** /*!
 233:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * \brief Convert pmt to float if possible.
 234:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  *
 235:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * This basically is to_double() with a type-cast; the PMT stores
 236:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * the value as a double in any case. Use this when strict typing
 237:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * is required.
 238:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  */
 239:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API float to_float(pmt_t x);
 240:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 241:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** /*
 242:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * ------------------------------------------------------------------------
 243:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  *			       Complex
 244:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * ------------------------------------------------------------------------
 245:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  */
 246:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 247:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** /*!
 248:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * \brief return true if \p obj is a complex number, false otherwise.
 249:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  */
 250:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API bool is_complex(pmt_t obj);
 251:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 252:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** //! Return a complex number constructed of the given real and imaginary parts.
 253:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API pmt_t make_rectangular(double re, double im);
 254:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 255:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** //! Return a complex number constructed of the given real and imaginary parts.
 256:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API pmt_t from_complex(double re, double im);
 257:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 258:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** //! Return a complex number constructed of the given a complex number.
 259:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API pmt_t from_complex(const std::complex<double> &z);
 260:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 261:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** //! Return a complex number constructed of the given real and imaginary parts.
 262:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API pmt_t pmt_from_complex(double re, double im);
 263:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 264:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** //! Return a complex number constructed of the given a complex number.
 265:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API pmt_t pmt_from_complex(const std::complex<double> &z);
 266:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 267:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** /*!
 268:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * If \p z is complex, real or integer, return the closest complex<double>.
 269:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * Otherwise, raise the wrong_type exception.
 270:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  */
 271:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API std::complex<double> to_complex(pmt_t z);
 272:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 273:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** /*
 274:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * ------------------------------------------------------------------------
 275:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  *				Pairs
 276:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * ------------------------------------------------------------------------
 277:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  */
 278:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 279:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** //! Return true if \p x is the empty list, otherwise return false.
 280:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API bool is_null(const pmt_t& x);
 281:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 282:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** //! Return true if \p obj is a pair, else false (warning: also returns true for a dict)
 283:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API bool is_pair(const pmt_t& obj);
 284:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 285:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** //! Return a newly allocated pair whose car is \p x and whose cdr is \p y.
 286:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API pmt_t cons(const pmt_t& x, const pmt_t& y);
 287:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 288:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** //! If \p pair is a pair, return the car of the \p pair, otherwise raise wrong_type.
GAS LISTING /tmp/ccvUPO8Q.s 			page 77


 289:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API pmt_t car(const pmt_t& pair);
 290:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 291:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** //! If \p pair is a pair, return the cdr of the \p pair, otherwise raise wrong_type.
 292:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API pmt_t cdr(const pmt_t& pair);
 293:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 294:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** //! Stores \p value in the car field of \p pair.
 295:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API void set_car(pmt_t pair, pmt_t value);
 296:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 297:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** //! Stores \p value in the cdr field of \p pair.
 298:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API void set_cdr(pmt_t pair, pmt_t value);
 299:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 300:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API pmt_t caar(pmt_t pair);
 301:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API pmt_t cadr(pmt_t pair);
 302:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API pmt_t cdar(pmt_t pair);
 303:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API pmt_t cddr(pmt_t pair);
 304:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API pmt_t caddr(pmt_t pair);
 305:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API pmt_t cadddr(pmt_t pair);
 306:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 307:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** /*
 308:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * ------------------------------------------------------------------------
 309:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  *			          Tuples
 310:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  *
 311:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * Store a fixed number of objects.  Tuples are not modifiable, and thus
 312:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * are excellent for use as messages.  Indexing is zero based.
 313:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * Access time to an element is O(1).
 314:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * ------------------------------------------------------------------------
 315:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  */
 316:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 317:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** //! Return true if \p x is a tuple, othewise false.
 318:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API bool is_tuple(pmt_t x);
 319:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 320:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API pmt_t make_tuple();
 321:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API pmt_t make_tuple(const pmt_t &e0);
 322:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API pmt_t make_tuple(const pmt_t &e0, const pmt_t &e1);
 323:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API pmt_t make_tuple(const pmt_t &e0, const pmt_t &e1, const pmt_t &e2);
 324:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API pmt_t make_tuple(const pmt_t &e0, const pmt_t &e1, const pmt_t &e2, const pmt_t &e3);
 325:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API pmt_t make_tuple(const pmt_t &e0, const pmt_t &e1, const pmt_t &e2, const pmt_t &e3, const 
 326:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API pmt_t make_tuple(const pmt_t &e0, const pmt_t &e1, const pmt_t &e2, const pmt_t &e3, const 
 327:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API pmt_t make_tuple(const pmt_t &e0, const pmt_t &e1, const pmt_t &e2, const pmt_t &e3, const 
 328:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API pmt_t make_tuple(const pmt_t &e0, const pmt_t &e1, const pmt_t &e2, const pmt_t &e3, const 
 329:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API pmt_t make_tuple(const pmt_t &e0, const pmt_t &e1, const pmt_t &e2, const pmt_t &e3, const 
 330:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API pmt_t make_tuple(const pmt_t &e0, const pmt_t &e1, const pmt_t &e2, const pmt_t &e3, const 
 331:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 332:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** /*!
 333:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * If \p x is a vector or proper list, return a tuple containing the elements of x
 334:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  */
 335:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API pmt_t to_tuple(const pmt_t &x);
 336:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 337:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** /*!
 338:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * Return the contents of position \p k of \p tuple.
 339:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * \p k must be a valid index of \p tuple.
 340:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  */
 341:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API pmt_t tuple_ref(const pmt_t &tuple, size_t k);
 342:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 343:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** /*
 344:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * ------------------------------------------------------------------------
 345:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  *			       Vectors
GAS LISTING /tmp/ccvUPO8Q.s 			page 78


 346:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  *
 347:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * These vectors can hold any kind of objects.  Indexing is zero based.
 348:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * ------------------------------------------------------------------------
 349:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  */
 350:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 351:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** //! Return true if \p x is a vector, othewise false.
 352:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API bool is_vector(pmt_t x);
 353:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 354:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** //! Make a vector of length \p k, with initial values set to \p fill
 355:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API pmt_t make_vector(size_t k, pmt_t fill);
 356:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 357:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** /*!
 358:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * Return the contents of position \p k of \p vector.
 359:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * \p k must be a valid index of \p vector.
 360:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  */
 361:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API pmt_t vector_ref(pmt_t vector, size_t k);
 362:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 363:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** //! Store \p obj in position \p k.
 364:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API void vector_set(pmt_t vector, size_t k, pmt_t obj);
 365:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 366:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** //! Store \p fill in every position of \p vector
 367:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API void vector_fill(pmt_t vector, pmt_t fill);
 368:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 369:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** /*
 370:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * ------------------------------------------------------------------------
 371:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  *		      Binary Large Objects (BLOBs)
 372:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  *
 373:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * Handy for passing around uninterpreted chunks of memory.
 374:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * ------------------------------------------------------------------------
 375:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  */
 376:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 377:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** //! Return true if \p x is a blob, othewise false.
 378:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API bool is_blob(pmt_t x);
 379:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 380:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** /*!
 381:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * \brief Make a blob given a pointer and length in bytes
 382:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  *
 383:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * \param buf is the pointer to data to use to create blob
 384:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * \param len is the size of the data in bytes.
 385:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  *
 386:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * The data is copied into the blob.
 387:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  */
 388:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API pmt_t make_blob(const void *buf, size_t len);
 389:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 390:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** //! Return a pointer to the blob's data
 391:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API const void *blob_data(pmt_t blob);
 392:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 393:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** //! Return the blob's length in bytes
 394:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API size_t blob_length(pmt_t blob);
 395:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 396:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** /*!
 397:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * <pre>
 398:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  *		       Uniform Numeric Vectors
 399:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  *
 400:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * A uniform numeric vector is a vector whose elements are all of single
 401:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * numeric type.  pmt offers uniform numeric vectors for signed and
 402:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * unsigned 8-bit, 16-bit, 32-bit, and 64-bit integers, two sizes of
GAS LISTING /tmp/ccvUPO8Q.s 			page 79


 403:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * floating point values, and complex floating-point numbers of these
 404:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * two sizes.  Indexing is zero based.
 405:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  *
 406:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * The names of the functions include these tags in their names:
 407:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  *
 408:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  *    u8  unsigned 8-bit integers
 409:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  *    s8  signed 8-bit integers
 410:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  *   u16  unsigned 16-bit integers
 411:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  *   s16  signed 16-bit integers
 412:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  *   u32  unsigned 32-bit integers
 413:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  *   s32  signed 32-bit integers
 414:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  *   u64  unsigned 64-bit integers
 415:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  *   s64  signed 64-bit integers
 416:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  *   f32  the C++ type float
 417:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  *   f64  the C++ type double
 418:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  *   c32  the C++ type complex<float>
 419:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  *   c64  the C++ type complex<double>
 420:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * </pre>
 421:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  */
 422:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 423:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** //! true if \p x is any kind of uniform numeric vector
 424:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API bool is_uniform_vector(pmt_t x);
 425:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 426:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API bool is_u8vector(pmt_t x);
 427:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API bool is_s8vector(pmt_t x);
 428:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API bool is_u16vector(pmt_t x);
 429:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API bool is_s16vector(pmt_t x);
 430:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API bool is_u32vector(pmt_t x);
 431:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API bool is_s32vector(pmt_t x);
 432:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API bool is_u64vector(pmt_t x);
 433:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API bool is_s64vector(pmt_t x);
 434:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API bool is_f32vector(pmt_t x);
 435:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API bool is_f64vector(pmt_t x);
 436:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API bool is_c32vector(pmt_t x);
 437:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API bool is_c64vector(pmt_t x);
 438:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 439:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** //! item size in bytes if \p x is any kind of uniform numeric vector
 440:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API size_t uniform_vector_itemsize(pmt_t x);
 441:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 442:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API pmt_t make_u8vector(size_t k, uint8_t fill);
 443:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API pmt_t make_s8vector(size_t k, int8_t fill);
 444:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API pmt_t make_u16vector(size_t k, uint16_t fill);
 445:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API pmt_t make_s16vector(size_t k, int16_t fill);
 446:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API pmt_t make_u32vector(size_t k, uint32_t fill);
 447:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API pmt_t make_s32vector(size_t k, int32_t fill);
 448:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API pmt_t make_u64vector(size_t k, uint64_t fill);
 449:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API pmt_t make_s64vector(size_t k, int64_t fill);
 450:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API pmt_t make_f32vector(size_t k, float fill);
 451:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API pmt_t make_f64vector(size_t k, double fill);
 452:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API pmt_t make_c32vector(size_t k, std::complex<float> fill);
 453:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API pmt_t make_c64vector(size_t k, std::complex<double> fill);
 454:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 455:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API pmt_t init_u8vector(size_t k, const uint8_t *data);
 456:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API pmt_t init_u8vector(size_t k, const std::vector<uint8_t> &data);
 457:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API pmt_t init_s8vector(size_t k, const int8_t *data);
 458:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API pmt_t init_s8vector(size_t k, const std::vector<int8_t> &data);
 459:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API pmt_t init_u16vector(size_t k, const uint16_t *data);
GAS LISTING /tmp/ccvUPO8Q.s 			page 80


 460:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API pmt_t init_u16vector(size_t k, const std::vector<uint16_t> &data);
 461:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API pmt_t init_s16vector(size_t k, const int16_t *data);
 462:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API pmt_t init_s16vector(size_t k, const std::vector<int16_t> &data);
 463:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API pmt_t init_u32vector(size_t k, const uint32_t *data);
 464:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API pmt_t init_u32vector(size_t k, const std::vector<uint32_t> &data);
 465:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API pmt_t init_s32vector(size_t k, const int32_t *data);
 466:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API pmt_t init_s32vector(size_t k, const std::vector<int32_t> &data);
 467:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API pmt_t init_u64vector(size_t k, const uint64_t *data);
 468:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API pmt_t init_u64vector(size_t k, const std::vector<uint64_t> &data);
 469:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API pmt_t init_s64vector(size_t k, const int64_t *data);
 470:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API pmt_t init_s64vector(size_t k, const std::vector<int64_t> &data);
 471:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API pmt_t init_f32vector(size_t k, const float *data);
 472:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API pmt_t init_f32vector(size_t k, const std::vector<float> &data);
 473:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API pmt_t init_f64vector(size_t k, const double *data);
 474:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API pmt_t init_f64vector(size_t k, const std::vector<double> &data);
 475:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API pmt_t init_c32vector(size_t k, const std::complex<float> *data);
 476:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API pmt_t init_c32vector(size_t k, const std::vector<std::complex<float> > &data);
 477:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API pmt_t init_c64vector(size_t k, const std::complex<double> *data);
 478:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API pmt_t init_c64vector(size_t k, const std::vector<std::complex<double> > &data);
 479:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 480:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API uint8_t  u8vector_ref(pmt_t v, size_t k);
 481:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API int8_t   s8vector_ref(pmt_t v, size_t k);
 482:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API uint16_t u16vector_ref(pmt_t v, size_t k);
 483:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API int16_t  s16vector_ref(pmt_t v, size_t k);
 484:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API uint32_t u32vector_ref(pmt_t v, size_t k);
 485:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API int32_t  s32vector_ref(pmt_t v, size_t k);
 486:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API uint64_t u64vector_ref(pmt_t v, size_t k);
 487:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API int64_t  s64vector_ref(pmt_t v, size_t k);
 488:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API float    f32vector_ref(pmt_t v, size_t k);
 489:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API double   f64vector_ref(pmt_t v, size_t k);
 490:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API std::complex<float>  c32vector_ref(pmt_t v, size_t k);
 491:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API std::complex<double> c64vector_ref(pmt_t v, size_t k);
 492:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 493:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API void u8vector_set(pmt_t v, size_t k, uint8_t x);  //< v[k] = x
 494:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API void s8vector_set(pmt_t v, size_t k, int8_t x);
 495:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API void u16vector_set(pmt_t v, size_t k, uint16_t x);
 496:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API void s16vector_set(pmt_t v, size_t k, int16_t x);
 497:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API void u32vector_set(pmt_t v, size_t k, uint32_t x);
 498:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API void s32vector_set(pmt_t v, size_t k, int32_t x);
 499:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API void u64vector_set(pmt_t v, size_t k, uint64_t x);
 500:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API void s64vector_set(pmt_t v, size_t k, int64_t x);
 501:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API void f32vector_set(pmt_t v, size_t k, float x);
 502:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API void f64vector_set(pmt_t v, size_t k, double x);
 503:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API void c32vector_set(pmt_t v, size_t k, std::complex<float> x);
 504:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API void c64vector_set(pmt_t v, size_t k, std::complex<double> x);
 505:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 506:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** // Return const pointers to the elements
 507:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 508:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API const void *uniform_vector_elements(pmt_t v, size_t &len);  //< works with any; len is in b
 509:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 510:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API const uint8_t  *u8vector_elements(pmt_t v, size_t &len);  //< len is in elements
 511:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API const int8_t   *s8vector_elements(pmt_t v, size_t &len);  //< len is in elements
 512:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API const uint16_t *u16vector_elements(pmt_t v, size_t &len); //< len is in elements
 513:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API const int16_t  *s16vector_elements(pmt_t v, size_t &len); //< len is in elements
 514:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API const uint32_t *u32vector_elements(pmt_t v, size_t &len); //< len is in elements
 515:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API const int32_t  *s32vector_elements(pmt_t v, size_t &len); //< len is in elements
 516:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API const uint64_t *u64vector_elements(pmt_t v, size_t &len); //< len is in elements
GAS LISTING /tmp/ccvUPO8Q.s 			page 81


 517:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API const int64_t  *s64vector_elements(pmt_t v, size_t &len); //< len is in elements
 518:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API const float    *f32vector_elements(pmt_t v, size_t &len); //< len is in elements
 519:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API const double   *f64vector_elements(pmt_t v, size_t &len); //< len is in elements
 520:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API const std::complex<float>  *c32vector_elements(pmt_t v, size_t &len); //< len is in element
 521:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API const std::complex<double> *c64vector_elements(pmt_t v, size_t &len); //< len is in element
 522:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 523:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** // len is in elements
 524:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API const std::vector<uint8_t>  u8vector_elements(pmt_t v);
 525:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API const std::vector<int8_t>   s8vector_elements(pmt_t v);
 526:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API const std::vector<uint16_t> u16vector_elements(pmt_t v);
 527:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API const std::vector<int16_t>  s16vector_elements(pmt_t v);
 528:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API const std::vector<uint32_t> u32vector_elements(pmt_t v);
 529:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API const std::vector<int32_t>  s32vector_elements(pmt_t v);
 530:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API const std::vector<uint64_t> u64vector_elements(pmt_t v);
 531:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API const std::vector<int64_t>  s64vector_elements(pmt_t v);
 532:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API const std::vector<float>    f32vector_elements(pmt_t v);
 533:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API const std::vector<double>   f64vector_elements(pmt_t v);
 534:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API const std::vector<std::complex<float> > c32vector_elements(pmt_t v);
 535:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API const std::vector<std::complex<double> > c64vector_elements(pmt_t v);
 536:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 537:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** // len is in elements
 538:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API const std::vector<uint8_t>  pmt_u8vector_elements(pmt_t v);
 539:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API const std::vector<int8_t>   pmt_s8vector_elements(pmt_t v);
 540:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API const std::vector<uint16_t> pmt_u16vector_elements(pmt_t v);
 541:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API const std::vector<int16_t>  pmt_s16vector_elements(pmt_t v);
 542:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API const std::vector<uint32_t> pmt_u32vector_elements(pmt_t v);
 543:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API const std::vector<int32_t>  pmt_s32vector_elements(pmt_t v);
 544:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API const std::vector<uint64_t> pmt_u64vector_elements(pmt_t v);
 545:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API const std::vector<int64_t>  pmt_s64vector_elements(pmt_t v);
 546:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API const std::vector<float>    pmt_f32vector_elements(pmt_t v);
 547:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API const std::vector<double>   pmt_f64vector_elements(pmt_t v);
 548:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API const std::vector<std::complex<float> > pmt_c32vector_elements(pmt_t v);
 549:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API const std::vector<std::complex<double> > pmt_c64vector_elements(pmt_t v);
 550:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 551:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** // Return non-const pointers to the elements
 552:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 553:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API void *uniform_vector_writable_elements(pmt_t v, size_t &len);  //< works with any; len is i
 554:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 555:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API uint8_t  *u8vector_writable_elements(pmt_t v, size_t &len);  //< len is in elements
 556:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API int8_t   *s8vector_writable_elements(pmt_t v, size_t &len);  //< len is in elements
 557:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API uint16_t *u16vector_writable_elements(pmt_t v, size_t &len); //< len is in elements
 558:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API int16_t  *s16vector_writable_elements(pmt_t v, size_t &len); //< len is in elements
 559:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API uint32_t *u32vector_writable_elements(pmt_t v, size_t &len); //< len is in elements
 560:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API int32_t  *s32vector_writable_elements(pmt_t v, size_t &len); //< len is in elements
 561:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API uint64_t *u64vector_writable_elements(pmt_t v, size_t &len); //< len is in elements
 562:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API int64_t  *s64vector_writable_elements(pmt_t v, size_t &len); //< len is in elements
 563:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API float    *f32vector_writable_elements(pmt_t v, size_t &len); //< len is in elements
 564:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API double   *f64vector_writable_elements(pmt_t v, size_t &len); //< len is in elements
 565:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API std::complex<float>  *c32vector_writable_elements(pmt_t v, size_t &len); //< len is in elem
 566:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API std::complex<double> *c64vector_writable_elements(pmt_t v, size_t &len); //< len is in elem
 567:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 568:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** /*
 569:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * ------------------------------------------------------------------------
 570:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  *	   Dictionary (a.k.a associative array, hash, map)
 571:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  *
 572:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * This is a functional data structure that is persistent.  Updating a
 573:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * functional data structure does not destroy the existing version, but
GAS LISTING /tmp/ccvUPO8Q.s 			page 82


 574:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * rather creates a new version that coexists with the old.
 575:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * ------------------------------------------------------------------------
 576:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  */
 577:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 578:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** //! Return true if \p obj is a dictionary (warning: also returns true for a pair)
 579:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API bool is_dict(const pmt_t &obj);
 580:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 581:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** //! Make an empty dictionary
 582:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API pmt_t make_dict();
 583:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 584:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** //! Return a new dictionary with \p key associated with \p value.
 585:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API pmt_t dict_add(const pmt_t &dict, const pmt_t &key, const pmt_t &value);
 586:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 587:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** //! Return a new dictionary with \p key removed.
 588:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API pmt_t dict_delete(const pmt_t &dict, const pmt_t &key);
 589:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 590:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** //! Return true if \p key exists in \p dict
 591:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API bool  dict_has_key(const pmt_t &dict, const pmt_t &key);
 592:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 593:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** //! If \p key exists in \p dict, return associated value; otherwise return \p not_found.
 594:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API pmt_t dict_ref(const pmt_t &dict, const pmt_t &key, const pmt_t &not_found);
 595:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 596:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** //! Return list of (key . value) pairs
 597:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API pmt_t dict_items(pmt_t dict);
 598:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 599:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** //! Return list of keys
 600:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API pmt_t dict_keys(pmt_t dict);
 601:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 602:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** //! Return a new dictionary \p dict1 with k=>v pairs from \p dict2 added.
 603:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API pmt_t dict_update(const pmt_t &dict1, const pmt_t &dict2);
 604:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 605:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** //! Return list of values
 606:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API pmt_t dict_values(pmt_t dict);
 607:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 608:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** /*
 609:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * ------------------------------------------------------------------------
 610:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  *   Any (wraps boost::any -- can be used to wrap pretty much anything)
 611:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  *
 612:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * Cannot be serialized or used across process boundaries.
 613:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * See http://www.boost.org/doc/html/any.html
 614:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * ------------------------------------------------------------------------
 615:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  */
 616:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 617:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** //! Return true if \p obj is an any
 618:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API bool is_any(pmt_t obj);
 619:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 620:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** //! make an any
 621:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API pmt_t make_any(const boost::any &any);
 622:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 623:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** //! Return underlying boost::any
 624:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API boost::any any_ref(pmt_t obj);
 625:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 626:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** //! Store \p any in \p obj
 627:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API void any_set(pmt_t obj, const boost::any &any);
 628:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 629:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 630:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** /*
GAS LISTING /tmp/ccvUPO8Q.s 			page 83


 631:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * ------------------------------------------------------------------------
 632:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  *    msg_accepter -- pmt representation of pmt::msg_accepter
 633:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * ------------------------------------------------------------------------
 634:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  */
 635:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** //! Return true if \p obj is a msg_accepter
 636:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API bool is_msg_accepter(const pmt_t &obj);
 637:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 638:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** //! make a msg_accepter
 639:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API pmt_t make_msg_accepter(boost::shared_ptr<gr::messages::msg_accepter> ma);
 640:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 641:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** //! Return underlying msg_accepter
 642:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API boost::shared_ptr<gr::messages::msg_accepter> msg_accepter_ref(const pmt_t &obj);
 643:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 644:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** /*
 645:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * ------------------------------------------------------------------------
 646:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  *			  General functions
 647:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * ------------------------------------------------------------------------
 648:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  */
 649:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 650:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** //! Return true if x and y are the same object; otherwise return false.
 651:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API bool eq(const pmt_t& x, const pmt_t& y);
 652:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 653:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** /*!
 654:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * \brief Return true if x and y should normally be regarded as the same object, else false.
 655:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  *
 656:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * <pre>
 657:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * eqv returns true if:
 658:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  *   x and y are the same object.
 659:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  *   x and y are both \#t or both \#f.
 660:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  *   x and y are both symbols and their names are the same.
 661:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  *   x and y are both numbers, and are numerically equal.
 662:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  *   x and y are both the empty list (nil).
 663:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  *   x and y are pairs or vectors that denote same location in store.
 664:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * </pre>
 665:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  */
 666:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API bool eqv(const pmt_t& x, const pmt_t& y);
 667:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 668:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** /*!
 669:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * pmt::equal recursively compares the contents of pairs and vectors,
 670:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * applying pmt::eqv on other objects such as numbers and symbols.
 671:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * pmt::equal may fail to terminate if its arguments are circular data
 672:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * structures.
 673:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  */
 674:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API bool equal(const pmt_t& x, const pmt_t& y);
 675:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 676:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 677:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** //! Return the number of elements in v
 678:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API size_t length(const pmt_t& v);
 679:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 680:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** /*!
 681:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * \brief Find the first pair in \p alist whose car field is \p obj
 682:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  *  and return that pair.
 683:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  *
 684:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * \p alist (for "association list") must be a list of pairs.  If no pair
 685:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * in \p alist has \p obj as its car then \#f is returned.
 686:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * Uses pmt::eq to compare \p obj with car fields of the pairs in \p alist.
 687:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  */
GAS LISTING /tmp/ccvUPO8Q.s 			page 84


 688:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API pmt_t assq(pmt_t obj, pmt_t alist);
 689:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 690:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** /*!
 691:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * \brief Find the first pair in \p alist whose car field is \p obj
 692:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  *  and return that pair.
 693:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  *
 694:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * \p alist (for "association list") must be a list of pairs.  If no pair
 695:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * in \p alist has \p obj as its car then \#f is returned.
 696:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * Uses pmt::eqv to compare \p obj with car fields of the pairs in \p alist.
 697:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  */
 698:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API pmt_t assv(pmt_t obj, pmt_t alist);
 699:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 700:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** /*!
 701:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * \brief Find the first pair in \p alist whose car field is \p obj
 702:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  *  and return that pair.
 703:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  *
 704:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * \p alist (for "association list") must be a list of pairs.  If no pair
 705:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * in \p alist has \p obj as its car then \#f is returned.
 706:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * Uses pmt::equal to compare \p obj with car fields of the pairs in \p alist.
 707:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  */
 708:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API pmt_t assoc(pmt_t obj, pmt_t alist);
 709:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 710:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** /*!
 711:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * \brief Apply \p proc element-wise to the elements of list and returns
 712:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * a list of the results, in order.
 713:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  *
 714:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * \p list must be a list.  The dynamic order in which \p proc is
 715:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * applied to the elements of \p list is unspecified.
 716:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  */
 717:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API pmt_t map(pmt_t proc(const pmt_t&), pmt_t list);
 718:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 719:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** /*!
 720:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * \brief reverse \p list.
 721:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  *
 722:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * \p list must be a proper list.
 723:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  */
 724:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API pmt_t reverse(pmt_t list);
 725:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 726:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** /*!
 727:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * \brief destructively reverse \p list.
 728:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  *
 729:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * \p list must be a proper list.
 730:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  */
 731:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API pmt_t reverse_x(pmt_t list);
 732:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 733:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** /*!
 734:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * \brief (acons x y a) == (cons (cons x y) a)
 735:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  */
 736:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** inline static pmt_t
 737:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** acons(pmt_t x, pmt_t y, pmt_t a)
 738:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** {
 739:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****   return cons(cons(x, y), a);
 740:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** }
 741:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 742:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** /*!
 743:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * \brief locates \p nth element of \n list where the car is the 'zeroth' element.
 744:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  */
GAS LISTING /tmp/ccvUPO8Q.s 			page 85


 745:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API pmt_t nth(size_t n, pmt_t list);
 746:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 747:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** /*!
 748:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * \brief returns the tail of \p list that would be obtained by calling
 749:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * cdr \p n times in succession.
 750:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  */
 751:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API pmt_t nthcdr(size_t n, pmt_t list);
 752:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 753:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** /*!
 754:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * \brief Return the first sublist of \p list whose car is \p obj.
 755:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * If \p obj does not occur in \p list, then \#f is returned.
 756:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * pmt::memq use pmt::eq to compare \p obj with the elements of \p list.
 757:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  */
 758:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API pmt_t memq(pmt_t obj, pmt_t list);
 759:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 760:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** /*!
 761:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * \brief Return the first sublist of \p list whose car is \p obj.
 762:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * If \p obj does not occur in \p list, then \#f is returned.
 763:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * pmt::memv use pmt::eqv to compare \p obj with the elements of \p list.
 764:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  */
 765:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API pmt_t memv(pmt_t obj, pmt_t list);
 766:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 767:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** /*!
 768:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * \brief Return the first sublist of \p list whose car is \p obj.
 769:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * If \p obj does not occur in \p list, then \#f is returned.
 770:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * pmt::member use pmt::equal to compare \p obj with the elements of \p list.
 771:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  */
 772:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API pmt_t member(pmt_t obj, pmt_t list);
 773:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 774:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** /*!
 775:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * \brief Return true if every element of \p list1 appears in \p list2, and false otherwise.
 776:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * Comparisons are done with pmt::eqv.
 777:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  */
 778:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API bool subsetp(pmt_t list1, pmt_t list2);
 779:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 780:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** /*!
 781:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * \brief Return a list of length 1 containing \p x1
 782:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  */
 783:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API pmt_t list1(const pmt_t& x1);
 784:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 785:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** /*!
 786:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * \brief Return a list of length 2 containing \p x1, \p x2
 787:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  */
 788:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API pmt_t list2(const pmt_t& x1, const pmt_t& x2);
 789:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 790:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** /*!
 791:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * \brief Return a list of length 3 containing \p x1, \p x2, \p x3
 792:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  */
 793:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API pmt_t list3(const pmt_t& x1, const pmt_t& x2, const pmt_t& x3);
 794:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 795:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** /*!
 796:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * \brief Return a list of length 4 containing \p x1, \p x2, \p x3, \p x4
 797:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  */
 798:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API pmt_t list4(const pmt_t& x1, const pmt_t& x2, const pmt_t& x3, const pmt_t& x4);
 799:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 800:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** /*!
 801:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * \brief Return a list of length 5 containing \p x1, \p x2, \p x3, \p x4, \p x5
GAS LISTING /tmp/ccvUPO8Q.s 			page 86


 802:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  */
 803:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API pmt_t list5(const pmt_t& x1, const pmt_t& x2, const pmt_t& x3, const pmt_t& x4, const pmt_t
 804:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 805:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** /*!
 806:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * \brief Return a list of length 6 containing \p x1, \p x2, \p x3, \p x4, \p
 807:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * x5, \p x6
 808:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  */
 809:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API pmt_t list6(const pmt_t& x1, const pmt_t& x2, const pmt_t& x3, const pmt_t& x4, const pmt_t
 810:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 811:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** /*!
 812:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * \brief Return \p list with \p item added to it.
 813:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  */
 814:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API pmt_t list_add(pmt_t list, const pmt_t& item);
 815:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 816:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** /*!
 817:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * \brief Return \p list with \p item removed from it.
 818:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  */
 819:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API pmt_t list_rm(pmt_t list, const pmt_t& item);
 820:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 821:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** /*!
 822:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * \brief Return bool of \p list contains \p item
 823:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  */
 824:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API bool list_has(pmt_t list, const pmt_t& item);
 825:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 826:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 827:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** /*
 828:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * ------------------------------------------------------------------------
 829:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  *			     read / write
 830:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * ------------------------------------------------------------------------
 831:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  */
 832:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 833:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** //! return true if obj is the EOF object, otherwise return false.
 834:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API bool is_eof_object(pmt_t obj);
 835:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 836:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** /*!
 837:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * read converts external representations of pmt objects into the
 838:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * objects themselves.  Read returns the next object parsable from
 839:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * the given input port, updating port to point to the first
 840:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * character past the end of the external representation of the
 841:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * object.
 842:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  *
 843:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * If an end of file is encountered in the input before any
 844:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * characters are found that can begin an object, then an end of file
 845:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * object is returned.   The port remains open, and further attempts
 846:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * to read will also return an end of file object.  If an end of file
 847:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * is encountered after the beginning of an object's external
 848:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * representation, but the external representation is incomplete and
 849:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * therefore not parsable, an error is signaled.
 850:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  */
 851:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API pmt_t read(std::istream &port);
 852:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 853:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** /*!
 854:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * Write a written representation of \p obj to the given \p port.
 855:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  */
 856:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API void write(pmt_t obj, std::ostream &port);
 857:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 858:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** /*!
GAS LISTING /tmp/ccvUPO8Q.s 			page 87


 859:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * Return a string representation of \p obj.
 860:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * This is the same output as would be generated by pmt::write.
 861:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  */
 862:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API std::string write_string(pmt_t obj);
 863:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 864:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 865:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API std::ostream& operator<<(std::ostream &os, pmt_t obj);
 866:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 867:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** /*!
 868:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * \brief Write pmt string representation to stdout.
 869:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  */
 870:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API void print(pmt_t v);
 871:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 872:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 873:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** /*
 874:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * ------------------------------------------------------------------------
 875:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  *		      portable byte stream representation
 876:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * ------------------------------------------------------------------------
 877:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  */
 878:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** /*!
 879:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * \brief Write portable byte-serial representation of \p obj to \p sink
 880:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  */
 881:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API bool serialize(pmt_t obj, std::streambuf &sink);
 882:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 883:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** /*!
 884:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * \brief Create obj from portable byte-serial representation
 885:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  */
 886:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API pmt_t deserialize(std::streambuf &source);
 887:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 888:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 889:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API void dump_sizeof();	// debugging
 890:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 891:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** /*!
 892:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * \brief Provide a simple string generating interface to pmt's serialize function
 893:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  */
 894:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API std::string serialize_str(pmt_t obj);
 895:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 896:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** /*!
 897:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * \brief Provide a simple string generating interface to pmt's deserialize function
 898:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  */
 899:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API pmt_t deserialize_str(std::string str);
 900:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 901:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** /*!
 902:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * \brief Provide a comparator function object to allow pmt use in stl types
 903:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  */
 904:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** class comparator {
 905:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****     public:
 906:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****         bool operator()(pmt::pmt_t const& p1, pmt::pmt_t const& p2) const
 1224              		.loc 10 906 0
 1225              		.cfi_startproc
 1226 0000 55       		pushq	%rbp
 1227              		.cfi_def_cfa_offset 16
 1228              		.cfi_offset 6, -16
 1229 0001 4889E5   		movq	%rsp, %rbp
 1230              		.cfi_def_cfa_register 6
 1231 0004 53       		pushq	%rbx
 1232 0005 4883EC28 		subq	$40, %rsp
GAS LISTING /tmp/ccvUPO8Q.s 			page 88


 1233              		.cfi_offset 3, -24
 1234 0009 48897DE8 		movq	%rdi, -24(%rbp)
 1235 000d 488975E0 		movq	%rsi, -32(%rbp)
 1236 0011 488955D8 		movq	%rdx, -40(%rbp)
 907:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****             { return pmt::eqv(p1,p2)?false:p1.get()>p2.get(); }
 1237              		.loc 10 907 0
 1238 0015 488B55D8 		movq	-40(%rbp), %rdx
 1239 0019 488B45E0 		movq	-32(%rbp), %rax
 1240 001d 4889D6   		movq	%rdx, %rsi
 1241 0020 4889C7   		movq	%rax, %rdi
 1242 0023 E8000000 		call	_ZN3pmt3eqvERKN5boost13intrusive_ptrINS_8pmt_baseEEES5_@PLT
 1242      00
 1243 0028 84C0     		testb	%al, %al
 1244 002a 7407     		je	.L57
 1245              		.loc 10 907 0 is_stmt 0 discriminator 1
 1246 002c B8000000 		movl	$0, %eax
 1246      00
 1247 0031 EB21     		jmp	.L59
 1248              	.L57:
 1249              		.loc 10 907 0 discriminator 2
 1250 0033 488B45E0 		movq	-32(%rbp), %rax
 1251 0037 4889C7   		movq	%rax, %rdi
 1252 003a E8000000 		call	_ZNK5boost13intrusive_ptrIN3pmt8pmt_baseEE3getEv
 1252      00
 1253 003f 4889C3   		movq	%rax, %rbx
 1254 0042 488B45D8 		movq	-40(%rbp), %rax
 1255 0046 4889C7   		movq	%rax, %rdi
 1256 0049 E8000000 		call	_ZNK5boost13intrusive_ptrIN3pmt8pmt_baseEE3getEv
 1256      00
 1257 004e 4839C3   		cmpq	%rax, %rbx
 1258 0051 0F97C0   		seta	%al
 1259              	.L59:
 1260              		.loc 10 907 0 discriminator 5
 1261 0054 4883C428 		addq	$40, %rsp
 1262 0058 5B       		popq	%rbx
 1263 0059 5D       		popq	%rbp
 1264              		.cfi_def_cfa 7, 8
 1265 005a C3       		ret
 1266              		.cfi_endproc
 1267              	.LFE4089:
 1269              		.local	_ZN5boost6systemL14posix_categoryE
 1270              		.comm	_ZN5boost6systemL14posix_categoryE,8,8
 1271              		.local	_ZN5boost6systemL10errno_ecatE
 1272              		.comm	_ZN5boost6systemL10errno_ecatE,8,8
 1273              		.local	_ZN5boost6systemL11native_ecatE
 1274              		.comm	_ZN5boost6systemL11native_ecatE,8,8
 1275              		.section	.text._ZNK5boost6system10error_code5valueEv,"axG",@progbits,_ZNK5boost6system10error_code
 1276              		.align 2
 1277              		.weak	_ZNK5boost6system10error_code5valueEv
 1279              	_ZNK5boost6system10error_code5valueEv:
 1280              	.LFB4157:
 1281              		.file 11 "/usr/include/boost/system/error_code.hpp"
   1:/usr/include/boost/system/error_code.hpp **** //  boost/system/error_code.hpp  ---------------------------------------------//
   2:/usr/include/boost/system/error_code.hpp **** 
   3:/usr/include/boost/system/error_code.hpp **** //  Copyright Beman Dawes 2006, 2007
   4:/usr/include/boost/system/error_code.hpp **** //  Copyright Christoper Kohlhoff 2007
   5:/usr/include/boost/system/error_code.hpp **** 
GAS LISTING /tmp/ccvUPO8Q.s 			page 89


   6:/usr/include/boost/system/error_code.hpp **** //  Distributed under the Boost Software License, Version 1.0. (See accompanying
   7:/usr/include/boost/system/error_code.hpp **** //  file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
   8:/usr/include/boost/system/error_code.hpp **** 
   9:/usr/include/boost/system/error_code.hpp **** //  See library home page at http://www.boost.org/libs/system
  10:/usr/include/boost/system/error_code.hpp **** 
  11:/usr/include/boost/system/error_code.hpp **** #ifndef BOOST_ERROR_CODE_HPP
  12:/usr/include/boost/system/error_code.hpp **** #define BOOST_ERROR_CODE_HPP
  13:/usr/include/boost/system/error_code.hpp **** 
  14:/usr/include/boost/system/error_code.hpp **** #include <boost/system/config.hpp>
  15:/usr/include/boost/system/error_code.hpp **** #include <boost/cstdint.hpp>
  16:/usr/include/boost/system/error_code.hpp **** #include <boost/assert.hpp>
  17:/usr/include/boost/system/error_code.hpp **** #include <boost/noncopyable.hpp>
  18:/usr/include/boost/system/error_code.hpp **** #include <boost/utility/enable_if.hpp>
  19:/usr/include/boost/system/error_code.hpp **** #include <ostream>
  20:/usr/include/boost/system/error_code.hpp **** #include <string>
  21:/usr/include/boost/system/error_code.hpp **** #include <stdexcept>
  22:/usr/include/boost/system/error_code.hpp **** #include <functional>
  23:/usr/include/boost/system/error_code.hpp **** 
  24:/usr/include/boost/system/error_code.hpp **** // TODO: undef these macros if not already defined
  25:/usr/include/boost/system/error_code.hpp **** #include <boost/cerrno.hpp>
  26:/usr/include/boost/system/error_code.hpp **** 
  27:/usr/include/boost/system/error_code.hpp **** #if !defined(BOOST_POSIX_API) && !defined(BOOST_WINDOWS_API)
  28:/usr/include/boost/system/error_code.hpp **** #  error BOOST_POSIX_API or BOOST_WINDOWS_API must be defined
  29:/usr/include/boost/system/error_code.hpp **** #endif
  30:/usr/include/boost/system/error_code.hpp **** 
  31:/usr/include/boost/system/error_code.hpp **** #include <boost/config/abi_prefix.hpp> // must be the last #include
  32:/usr/include/boost/system/error_code.hpp **** 
  33:/usr/include/boost/system/error_code.hpp **** #ifndef BOOST_SYSTEM_NOEXCEPT
  34:/usr/include/boost/system/error_code.hpp **** #define BOOST_SYSTEM_NOEXCEPT BOOST_NOEXCEPT
  35:/usr/include/boost/system/error_code.hpp **** #endif
  36:/usr/include/boost/system/error_code.hpp **** 
  37:/usr/include/boost/system/error_code.hpp **** namespace boost
  38:/usr/include/boost/system/error_code.hpp **** {
  39:/usr/include/boost/system/error_code.hpp ****   namespace system
  40:/usr/include/boost/system/error_code.hpp ****   {
  41:/usr/include/boost/system/error_code.hpp **** 
  42:/usr/include/boost/system/error_code.hpp ****     class error_code;
  43:/usr/include/boost/system/error_code.hpp ****     class error_condition;
  44:/usr/include/boost/system/error_code.hpp **** 
  45:/usr/include/boost/system/error_code.hpp ****     //  "Concept" helpers  ---------------------------------------------------//
  46:/usr/include/boost/system/error_code.hpp **** 
  47:/usr/include/boost/system/error_code.hpp ****     template< class T >
  48:/usr/include/boost/system/error_code.hpp ****     struct is_error_code_enum { static const bool value = false; };
  49:/usr/include/boost/system/error_code.hpp **** 
  50:/usr/include/boost/system/error_code.hpp ****     template< class T >
  51:/usr/include/boost/system/error_code.hpp ****     struct is_error_condition_enum { static const bool value = false; };
  52:/usr/include/boost/system/error_code.hpp **** 
  53:/usr/include/boost/system/error_code.hpp ****     //  generic error_conditions  --------------------------------------------//
  54:/usr/include/boost/system/error_code.hpp **** 
  55:/usr/include/boost/system/error_code.hpp ****     namespace errc
  56:/usr/include/boost/system/error_code.hpp ****     {
  57:/usr/include/boost/system/error_code.hpp ****       enum errc_t
  58:/usr/include/boost/system/error_code.hpp ****       {
  59:/usr/include/boost/system/error_code.hpp ****         success = 0,
  60:/usr/include/boost/system/error_code.hpp ****         address_family_not_supported = EAFNOSUPPORT,
  61:/usr/include/boost/system/error_code.hpp ****         address_in_use = EADDRINUSE,
  62:/usr/include/boost/system/error_code.hpp ****         address_not_available = EADDRNOTAVAIL,
GAS LISTING /tmp/ccvUPO8Q.s 			page 90


  63:/usr/include/boost/system/error_code.hpp ****         already_connected = EISCONN,
  64:/usr/include/boost/system/error_code.hpp ****         argument_list_too_long = E2BIG,
  65:/usr/include/boost/system/error_code.hpp ****         argument_out_of_domain = EDOM,
  66:/usr/include/boost/system/error_code.hpp ****         bad_address = EFAULT,
  67:/usr/include/boost/system/error_code.hpp ****         bad_file_descriptor = EBADF,
  68:/usr/include/boost/system/error_code.hpp ****         bad_message = EBADMSG,
  69:/usr/include/boost/system/error_code.hpp ****         broken_pipe = EPIPE,
  70:/usr/include/boost/system/error_code.hpp ****         connection_aborted = ECONNABORTED,
  71:/usr/include/boost/system/error_code.hpp ****         connection_already_in_progress = EALREADY,
  72:/usr/include/boost/system/error_code.hpp ****         connection_refused = ECONNREFUSED,
  73:/usr/include/boost/system/error_code.hpp ****         connection_reset = ECONNRESET,
  74:/usr/include/boost/system/error_code.hpp ****         cross_device_link = EXDEV,
  75:/usr/include/boost/system/error_code.hpp ****         destination_address_required = EDESTADDRREQ,
  76:/usr/include/boost/system/error_code.hpp ****         device_or_resource_busy = EBUSY,
  77:/usr/include/boost/system/error_code.hpp ****         directory_not_empty = ENOTEMPTY,
  78:/usr/include/boost/system/error_code.hpp ****         executable_format_error = ENOEXEC,
  79:/usr/include/boost/system/error_code.hpp ****         file_exists = EEXIST,
  80:/usr/include/boost/system/error_code.hpp ****         file_too_large = EFBIG,
  81:/usr/include/boost/system/error_code.hpp ****         filename_too_long = ENAMETOOLONG,
  82:/usr/include/boost/system/error_code.hpp ****         function_not_supported = ENOSYS,
  83:/usr/include/boost/system/error_code.hpp ****         host_unreachable = EHOSTUNREACH,
  84:/usr/include/boost/system/error_code.hpp ****         identifier_removed = EIDRM,
  85:/usr/include/boost/system/error_code.hpp ****         illegal_byte_sequence = EILSEQ,
  86:/usr/include/boost/system/error_code.hpp ****         inappropriate_io_control_operation = ENOTTY,
  87:/usr/include/boost/system/error_code.hpp ****         interrupted = EINTR,
  88:/usr/include/boost/system/error_code.hpp ****         invalid_argument = EINVAL,
  89:/usr/include/boost/system/error_code.hpp ****         invalid_seek = ESPIPE,
  90:/usr/include/boost/system/error_code.hpp ****         io_error = EIO,
  91:/usr/include/boost/system/error_code.hpp ****         is_a_directory = EISDIR,
  92:/usr/include/boost/system/error_code.hpp ****         message_size = EMSGSIZE,
  93:/usr/include/boost/system/error_code.hpp ****         network_down = ENETDOWN,
  94:/usr/include/boost/system/error_code.hpp ****         network_reset = ENETRESET,
  95:/usr/include/boost/system/error_code.hpp ****         network_unreachable = ENETUNREACH,
  96:/usr/include/boost/system/error_code.hpp ****         no_buffer_space = ENOBUFS,
  97:/usr/include/boost/system/error_code.hpp ****         no_child_process = ECHILD,
  98:/usr/include/boost/system/error_code.hpp ****         no_link = ENOLINK,
  99:/usr/include/boost/system/error_code.hpp ****         no_lock_available = ENOLCK,
 100:/usr/include/boost/system/error_code.hpp ****         no_message_available = ENODATA,
 101:/usr/include/boost/system/error_code.hpp ****         no_message = ENOMSG,
 102:/usr/include/boost/system/error_code.hpp ****         no_protocol_option = ENOPROTOOPT,
 103:/usr/include/boost/system/error_code.hpp ****         no_space_on_device = ENOSPC,
 104:/usr/include/boost/system/error_code.hpp ****         no_stream_resources = ENOSR,
 105:/usr/include/boost/system/error_code.hpp ****         no_such_device_or_address = ENXIO,
 106:/usr/include/boost/system/error_code.hpp ****         no_such_device = ENODEV,
 107:/usr/include/boost/system/error_code.hpp ****         no_such_file_or_directory = ENOENT,
 108:/usr/include/boost/system/error_code.hpp ****         no_such_process = ESRCH,
 109:/usr/include/boost/system/error_code.hpp ****         not_a_directory = ENOTDIR,
 110:/usr/include/boost/system/error_code.hpp ****         not_a_socket = ENOTSOCK,
 111:/usr/include/boost/system/error_code.hpp ****         not_a_stream = ENOSTR,
 112:/usr/include/boost/system/error_code.hpp ****         not_connected = ENOTCONN,
 113:/usr/include/boost/system/error_code.hpp ****         not_enough_memory = ENOMEM,
 114:/usr/include/boost/system/error_code.hpp ****         not_supported = ENOTSUP,
 115:/usr/include/boost/system/error_code.hpp ****         operation_canceled = ECANCELED,
 116:/usr/include/boost/system/error_code.hpp ****         operation_in_progress = EINPROGRESS,
 117:/usr/include/boost/system/error_code.hpp ****         operation_not_permitted = EPERM,
 118:/usr/include/boost/system/error_code.hpp ****         operation_not_supported = EOPNOTSUPP,
 119:/usr/include/boost/system/error_code.hpp ****         operation_would_block = EWOULDBLOCK,
GAS LISTING /tmp/ccvUPO8Q.s 			page 91


 120:/usr/include/boost/system/error_code.hpp ****         owner_dead = EOWNERDEAD,
 121:/usr/include/boost/system/error_code.hpp ****         permission_denied = EACCES,
 122:/usr/include/boost/system/error_code.hpp ****         protocol_error = EPROTO,
 123:/usr/include/boost/system/error_code.hpp ****         protocol_not_supported = EPROTONOSUPPORT,
 124:/usr/include/boost/system/error_code.hpp ****         read_only_file_system = EROFS,
 125:/usr/include/boost/system/error_code.hpp ****         resource_deadlock_would_occur = EDEADLK,
 126:/usr/include/boost/system/error_code.hpp ****         resource_unavailable_try_again = EAGAIN,
 127:/usr/include/boost/system/error_code.hpp ****         result_out_of_range = ERANGE,
 128:/usr/include/boost/system/error_code.hpp ****         state_not_recoverable = ENOTRECOVERABLE,
 129:/usr/include/boost/system/error_code.hpp ****         stream_timeout = ETIME,
 130:/usr/include/boost/system/error_code.hpp ****         text_file_busy = ETXTBSY,
 131:/usr/include/boost/system/error_code.hpp ****         timed_out = ETIMEDOUT,
 132:/usr/include/boost/system/error_code.hpp ****         too_many_files_open_in_system = ENFILE,
 133:/usr/include/boost/system/error_code.hpp ****         too_many_files_open = EMFILE,
 134:/usr/include/boost/system/error_code.hpp ****         too_many_links = EMLINK,
 135:/usr/include/boost/system/error_code.hpp ****         too_many_symbolic_link_levels = ELOOP,
 136:/usr/include/boost/system/error_code.hpp ****         value_too_large = EOVERFLOW,
 137:/usr/include/boost/system/error_code.hpp ****         wrong_protocol_type = EPROTOTYPE
 138:/usr/include/boost/system/error_code.hpp ****       };
 139:/usr/include/boost/system/error_code.hpp **** 
 140:/usr/include/boost/system/error_code.hpp ****     } // namespace errc
 141:/usr/include/boost/system/error_code.hpp **** 
 142:/usr/include/boost/system/error_code.hpp **** # ifndef BOOST_SYSTEM_NO_DEPRECATED
 143:/usr/include/boost/system/error_code.hpp ****     namespace posix = errc;
 144:/usr/include/boost/system/error_code.hpp ****     namespace posix_error = errc;
 145:/usr/include/boost/system/error_code.hpp **** # endif
 146:/usr/include/boost/system/error_code.hpp **** 
 147:/usr/include/boost/system/error_code.hpp ****     template<> struct is_error_condition_enum<errc::errc_t>
 148:/usr/include/boost/system/error_code.hpp ****       { static const bool value = true; };
 149:/usr/include/boost/system/error_code.hpp **** 
 150:/usr/include/boost/system/error_code.hpp **** 
 151:/usr/include/boost/system/error_code.hpp ****     //  ----------------------------------------------------------------------//
 152:/usr/include/boost/system/error_code.hpp **** 
 153:/usr/include/boost/system/error_code.hpp ****     //  Operating system specific interfaces  --------------------------------//
 154:/usr/include/boost/system/error_code.hpp **** 
 155:/usr/include/boost/system/error_code.hpp **** 
 156:/usr/include/boost/system/error_code.hpp ****     //  The interface is divided into general and system-specific portions to
 157:/usr/include/boost/system/error_code.hpp ****     //  meet these requirements:
 158:/usr/include/boost/system/error_code.hpp ****     //
 159:/usr/include/boost/system/error_code.hpp ****     //  * Code calling an operating system API can create an error_code with
 160:/usr/include/boost/system/error_code.hpp ****     //    a single category (system_category), even for POSIX-like operating
 161:/usr/include/boost/system/error_code.hpp ****     //    systems that return some POSIX errno values and some native errno
 162:/usr/include/boost/system/error_code.hpp ****     //    values. This code should not have to pay the cost of distinguishing
 163:/usr/include/boost/system/error_code.hpp ****     //    between categories, since it is not yet known if that is needed.
 164:/usr/include/boost/system/error_code.hpp ****     //
 165:/usr/include/boost/system/error_code.hpp ****     //  * Users wishing to write system-specific code should be given enums for
 166:/usr/include/boost/system/error_code.hpp ****     //    at least the common error cases.
 167:/usr/include/boost/system/error_code.hpp ****     //
 168:/usr/include/boost/system/error_code.hpp ****     //  * System specific code should fail at compile time if moved to another
 169:/usr/include/boost/system/error_code.hpp ****     //    operating system.
 170:/usr/include/boost/system/error_code.hpp **** 
 171:/usr/include/boost/system/error_code.hpp ****     //  The system specific portions of the interface are located in headers
 172:/usr/include/boost/system/error_code.hpp ****     //  with names reflecting the operating system. For example,
 173:/usr/include/boost/system/error_code.hpp ****     //
 174:/usr/include/boost/system/error_code.hpp ****     //       <boost/system/cygwin_error.hpp>
 175:/usr/include/boost/system/error_code.hpp ****     //       <boost/system/linux_error.hpp>
 176:/usr/include/boost/system/error_code.hpp ****     //       <boost/system/windows_error.hpp>
GAS LISTING /tmp/ccvUPO8Q.s 			page 92


 177:/usr/include/boost/system/error_code.hpp ****     //
 178:/usr/include/boost/system/error_code.hpp ****     //  These headers are effectively empty for compiles on operating systems
 179:/usr/include/boost/system/error_code.hpp ****     //  where they are not applicable.
 180:/usr/include/boost/system/error_code.hpp **** 
 181:/usr/include/boost/system/error_code.hpp ****     //  ----------------------------------------------------------------------//
 182:/usr/include/boost/system/error_code.hpp **** 
 183:/usr/include/boost/system/error_code.hpp ****     //  class error_category  ------------------------------------------------//
 184:/usr/include/boost/system/error_code.hpp **** 
 185:/usr/include/boost/system/error_code.hpp ****     class error_category : public noncopyable
 186:/usr/include/boost/system/error_code.hpp ****     {
 187:/usr/include/boost/system/error_code.hpp ****     public:
 188:/usr/include/boost/system/error_code.hpp ****       virtual ~error_category(){}
 189:/usr/include/boost/system/error_code.hpp **** 
 190:/usr/include/boost/system/error_code.hpp ****       virtual const char *     name() const BOOST_SYSTEM_NOEXCEPT = 0;
 191:/usr/include/boost/system/error_code.hpp ****       virtual std::string      message( int ev ) const = 0;
 192:/usr/include/boost/system/error_code.hpp ****       inline virtual error_condition  default_error_condition( int ev ) const  BOOST_SYSTEM_NOEXCEP
 193:/usr/include/boost/system/error_code.hpp ****       inline virtual bool             equivalent( int code,
 194:/usr/include/boost/system/error_code.hpp ****                                            const error_condition & condition ) const  BOOST_SYSTEM_
 195:/usr/include/boost/system/error_code.hpp ****       inline virtual bool             equivalent( const error_code & code,
 196:/usr/include/boost/system/error_code.hpp ****                                            int condition ) const  BOOST_SYSTEM_NOEXCEPT;
 197:/usr/include/boost/system/error_code.hpp **** 
 198:/usr/include/boost/system/error_code.hpp ****       bool operator==(const error_category & rhs) const BOOST_SYSTEM_NOEXCEPT { return this == &rhs
 199:/usr/include/boost/system/error_code.hpp ****       bool operator!=(const error_category & rhs) const BOOST_SYSTEM_NOEXCEPT { return this != &rhs
 200:/usr/include/boost/system/error_code.hpp ****       bool operator<( const error_category & rhs ) const BOOST_SYSTEM_NOEXCEPT
 201:/usr/include/boost/system/error_code.hpp ****       {
 202:/usr/include/boost/system/error_code.hpp ****         return std::less<const error_category*>()( this, &rhs );
 203:/usr/include/boost/system/error_code.hpp ****       }
 204:/usr/include/boost/system/error_code.hpp ****     };
 205:/usr/include/boost/system/error_code.hpp **** 
 206:/usr/include/boost/system/error_code.hpp ****     //  predefined error categories  -----------------------------------------//
 207:/usr/include/boost/system/error_code.hpp **** 
 208:/usr/include/boost/system/error_code.hpp **** # ifdef BOOST_ERROR_CODE_HEADER_ONLY
 209:/usr/include/boost/system/error_code.hpp ****     inline const error_category &  system_category() BOOST_SYSTEM_NOEXCEPT;
 210:/usr/include/boost/system/error_code.hpp ****     inline const error_category &  generic_category() BOOST_SYSTEM_NOEXCEPT;
 211:/usr/include/boost/system/error_code.hpp **** #else
 212:/usr/include/boost/system/error_code.hpp ****     BOOST_SYSTEM_DECL const error_category &  system_category() BOOST_SYSTEM_NOEXCEPT;
 213:/usr/include/boost/system/error_code.hpp ****     BOOST_SYSTEM_DECL const error_category &  generic_category() BOOST_SYSTEM_NOEXCEPT;
 214:/usr/include/boost/system/error_code.hpp **** #endif
 215:/usr/include/boost/system/error_code.hpp ****     //  deprecated synonyms --------------------------------------------------//
 216:/usr/include/boost/system/error_code.hpp **** 
 217:/usr/include/boost/system/error_code.hpp **** # ifndef BOOST_SYSTEM_NO_DEPRECATED
 218:/usr/include/boost/system/error_code.hpp ****     inline const error_category &  get_system_category() { return system_category(); }
 219:/usr/include/boost/system/error_code.hpp ****     inline const error_category &  get_generic_category() { return generic_category(); }
 220:/usr/include/boost/system/error_code.hpp ****     inline const error_category &  get_posix_category() { return generic_category(); }
 221:/usr/include/boost/system/error_code.hpp ****     static const error_category &  posix_category = generic_category();
 222:/usr/include/boost/system/error_code.hpp ****     static const error_category &  errno_ecat     = generic_category();
 223:/usr/include/boost/system/error_code.hpp ****     static const error_category &  native_ecat    = system_category();
 224:/usr/include/boost/system/error_code.hpp **** # endif
 225:/usr/include/boost/system/error_code.hpp **** 
 226:/usr/include/boost/system/error_code.hpp ****     //  class error_condition  -----------------------------------------------//
 227:/usr/include/boost/system/error_code.hpp **** 
 228:/usr/include/boost/system/error_code.hpp ****     //  error_conditions are portable, error_codes are system or library specific
 229:/usr/include/boost/system/error_code.hpp **** 
 230:/usr/include/boost/system/error_code.hpp ****     class error_condition
 231:/usr/include/boost/system/error_code.hpp ****     {
 232:/usr/include/boost/system/error_code.hpp ****     public:
 233:/usr/include/boost/system/error_code.hpp **** 
GAS LISTING /tmp/ccvUPO8Q.s 			page 93


 234:/usr/include/boost/system/error_code.hpp ****       // constructors:
 235:/usr/include/boost/system/error_code.hpp ****       error_condition() BOOST_SYSTEM_NOEXCEPT : m_val(0), m_cat(&generic_category()) {}
 236:/usr/include/boost/system/error_code.hpp ****       error_condition( int val, const error_category & cat ) BOOST_SYSTEM_NOEXCEPT : m_val(val), m_
 237:/usr/include/boost/system/error_code.hpp **** 
 238:/usr/include/boost/system/error_code.hpp ****       template <class ErrorConditionEnum>
 239:/usr/include/boost/system/error_code.hpp ****         error_condition(ErrorConditionEnum e,
 240:/usr/include/boost/system/error_code.hpp ****           typename boost::enable_if<is_error_condition_enum<ErrorConditionEnum> >::type* = 0) BOOST
 241:/usr/include/boost/system/error_code.hpp ****       {
 242:/usr/include/boost/system/error_code.hpp ****         *this = make_error_condition(e);
 243:/usr/include/boost/system/error_code.hpp ****       }
 244:/usr/include/boost/system/error_code.hpp **** 
 245:/usr/include/boost/system/error_code.hpp ****       // modifiers:
 246:/usr/include/boost/system/error_code.hpp **** 
 247:/usr/include/boost/system/error_code.hpp ****       void assign( int val, const error_category & cat ) BOOST_SYSTEM_NOEXCEPT
 248:/usr/include/boost/system/error_code.hpp ****       {
 249:/usr/include/boost/system/error_code.hpp ****         m_val = val;
 250:/usr/include/boost/system/error_code.hpp ****         m_cat = &cat;
 251:/usr/include/boost/system/error_code.hpp ****       }
 252:/usr/include/boost/system/error_code.hpp **** 
 253:/usr/include/boost/system/error_code.hpp ****       template<typename ErrorConditionEnum>
 254:/usr/include/boost/system/error_code.hpp ****         typename boost::enable_if<is_error_condition_enum<ErrorConditionEnum>, error_condition>::ty
 255:/usr/include/boost/system/error_code.hpp ****           operator=( ErrorConditionEnum val ) BOOST_SYSTEM_NOEXCEPT
 256:/usr/include/boost/system/error_code.hpp ****       {
 257:/usr/include/boost/system/error_code.hpp ****         *this = make_error_condition(val);
 258:/usr/include/boost/system/error_code.hpp ****         return *this;
 259:/usr/include/boost/system/error_code.hpp ****       }
 260:/usr/include/boost/system/error_code.hpp **** 
 261:/usr/include/boost/system/error_code.hpp ****       void clear() BOOST_SYSTEM_NOEXCEPT
 262:/usr/include/boost/system/error_code.hpp ****       {
 263:/usr/include/boost/system/error_code.hpp ****         m_val = 0;
 264:/usr/include/boost/system/error_code.hpp ****         m_cat = &generic_category();
 265:/usr/include/boost/system/error_code.hpp ****       }
 266:/usr/include/boost/system/error_code.hpp **** 
 267:/usr/include/boost/system/error_code.hpp ****       // observers:
 268:/usr/include/boost/system/error_code.hpp ****       int                     value() const BOOST_SYSTEM_NOEXCEPT    { return m_val; }
 269:/usr/include/boost/system/error_code.hpp ****       const error_category &  category() const BOOST_SYSTEM_NOEXCEPT { return *m_cat; }
 270:/usr/include/boost/system/error_code.hpp ****       std::string             message() const  { return m_cat->message(value()); }
 271:/usr/include/boost/system/error_code.hpp **** 
 272:/usr/include/boost/system/error_code.hpp ****       typedef void (*unspecified_bool_type)();
 273:/usr/include/boost/system/error_code.hpp ****       static void unspecified_bool_true() {}
 274:/usr/include/boost/system/error_code.hpp **** 
 275:/usr/include/boost/system/error_code.hpp ****       operator unspecified_bool_type() const BOOST_SYSTEM_NOEXCEPT  // true if error
 276:/usr/include/boost/system/error_code.hpp ****       {
 277:/usr/include/boost/system/error_code.hpp ****         return m_val == 0 ? 0 : unspecified_bool_true;
 278:/usr/include/boost/system/error_code.hpp ****       }
 279:/usr/include/boost/system/error_code.hpp **** 
 280:/usr/include/boost/system/error_code.hpp ****       bool operator!() const BOOST_SYSTEM_NOEXCEPT  // true if no error
 281:/usr/include/boost/system/error_code.hpp ****       {
 282:/usr/include/boost/system/error_code.hpp ****         return m_val == 0;
 283:/usr/include/boost/system/error_code.hpp ****       }
 284:/usr/include/boost/system/error_code.hpp **** 
 285:/usr/include/boost/system/error_code.hpp ****       // relationals:
 286:/usr/include/boost/system/error_code.hpp ****       //  the more symmetrical non-member syntax allows enum
 287:/usr/include/boost/system/error_code.hpp ****       //  conversions work for both rhs and lhs.
 288:/usr/include/boost/system/error_code.hpp ****       inline friend bool operator==( const error_condition & lhs,
 289:/usr/include/boost/system/error_code.hpp ****                                      const error_condition & rhs ) BOOST_SYSTEM_NOEXCEPT
 290:/usr/include/boost/system/error_code.hpp ****       {
GAS LISTING /tmp/ccvUPO8Q.s 			page 94


 291:/usr/include/boost/system/error_code.hpp ****         return lhs.m_cat == rhs.m_cat && lhs.m_val == rhs.m_val;
 292:/usr/include/boost/system/error_code.hpp ****       }
 293:/usr/include/boost/system/error_code.hpp **** 
 294:/usr/include/boost/system/error_code.hpp ****       inline friend bool operator<( const error_condition & lhs,
 295:/usr/include/boost/system/error_code.hpp ****                                     const error_condition & rhs ) BOOST_SYSTEM_NOEXCEPT
 296:/usr/include/boost/system/error_code.hpp ****         //  the more symmetrical non-member syntax allows enum
 297:/usr/include/boost/system/error_code.hpp ****         //  conversions work for both rhs and lhs.
 298:/usr/include/boost/system/error_code.hpp ****       {
 299:/usr/include/boost/system/error_code.hpp ****         return lhs.m_cat < rhs.m_cat
 300:/usr/include/boost/system/error_code.hpp ****           || (lhs.m_cat == rhs.m_cat && lhs.m_val < rhs.m_val);
 301:/usr/include/boost/system/error_code.hpp ****       }
 302:/usr/include/boost/system/error_code.hpp **** 
 303:/usr/include/boost/system/error_code.hpp ****     private:
 304:/usr/include/boost/system/error_code.hpp ****       int                     m_val;
 305:/usr/include/boost/system/error_code.hpp ****       const error_category *  m_cat;
 306:/usr/include/boost/system/error_code.hpp **** 
 307:/usr/include/boost/system/error_code.hpp ****     };
 308:/usr/include/boost/system/error_code.hpp **** 
 309:/usr/include/boost/system/error_code.hpp ****     //  class error_code  ----------------------------------------------------//
 310:/usr/include/boost/system/error_code.hpp **** 
 311:/usr/include/boost/system/error_code.hpp ****     //  We want error_code to be a value type that can be copied without slicing
 312:/usr/include/boost/system/error_code.hpp ****     //  and without requiring heap allocation, but we also want it to have
 313:/usr/include/boost/system/error_code.hpp ****     //  polymorphic behavior based on the error category. This is achieved by
 314:/usr/include/boost/system/error_code.hpp ****     //  abstract base class error_category supplying the polymorphic behavior,
 315:/usr/include/boost/system/error_code.hpp ****     //  and error_code containing a pointer to an object of a type derived
 316:/usr/include/boost/system/error_code.hpp ****     //  from error_category.
 317:/usr/include/boost/system/error_code.hpp ****     class error_code
 318:/usr/include/boost/system/error_code.hpp ****     {
 319:/usr/include/boost/system/error_code.hpp ****     public:
 320:/usr/include/boost/system/error_code.hpp **** 
 321:/usr/include/boost/system/error_code.hpp ****       // constructors:
 322:/usr/include/boost/system/error_code.hpp ****       error_code() BOOST_SYSTEM_NOEXCEPT : m_val(0), m_cat(&system_category()) {}
 323:/usr/include/boost/system/error_code.hpp ****       error_code( int val, const error_category & cat ) BOOST_SYSTEM_NOEXCEPT : m_val(val), m_cat(&
 324:/usr/include/boost/system/error_code.hpp **** 
 325:/usr/include/boost/system/error_code.hpp ****       template <class ErrorCodeEnum>
 326:/usr/include/boost/system/error_code.hpp ****         error_code(ErrorCodeEnum e,
 327:/usr/include/boost/system/error_code.hpp ****           typename boost::enable_if<is_error_code_enum<ErrorCodeEnum> >::type* = 0) BOOST_SYSTEM_NO
 328:/usr/include/boost/system/error_code.hpp ****       {
 329:/usr/include/boost/system/error_code.hpp ****         *this = make_error_code(e);
 330:/usr/include/boost/system/error_code.hpp ****       }
 331:/usr/include/boost/system/error_code.hpp **** 
 332:/usr/include/boost/system/error_code.hpp ****       // modifiers:
 333:/usr/include/boost/system/error_code.hpp ****       void assign( int val, const error_category & cat ) BOOST_SYSTEM_NOEXCEPT
 334:/usr/include/boost/system/error_code.hpp ****       {
 335:/usr/include/boost/system/error_code.hpp ****         m_val = val;
 336:/usr/include/boost/system/error_code.hpp ****         m_cat = &cat;
 337:/usr/include/boost/system/error_code.hpp ****       }
 338:/usr/include/boost/system/error_code.hpp **** 
 339:/usr/include/boost/system/error_code.hpp ****       template<typename ErrorCodeEnum>
 340:/usr/include/boost/system/error_code.hpp ****         typename boost::enable_if<is_error_code_enum<ErrorCodeEnum>, error_code>::type &
 341:/usr/include/boost/system/error_code.hpp ****           operator=( ErrorCodeEnum val ) BOOST_SYSTEM_NOEXCEPT
 342:/usr/include/boost/system/error_code.hpp ****       {
 343:/usr/include/boost/system/error_code.hpp ****         *this = make_error_code(val);
 344:/usr/include/boost/system/error_code.hpp ****         return *this;
 345:/usr/include/boost/system/error_code.hpp ****       }
 346:/usr/include/boost/system/error_code.hpp **** 
 347:/usr/include/boost/system/error_code.hpp ****       void clear() BOOST_SYSTEM_NOEXCEPT
GAS LISTING /tmp/ccvUPO8Q.s 			page 95


 348:/usr/include/boost/system/error_code.hpp ****       {
 349:/usr/include/boost/system/error_code.hpp ****         m_val = 0;
 350:/usr/include/boost/system/error_code.hpp ****         m_cat = &system_category();
 351:/usr/include/boost/system/error_code.hpp ****       }
 352:/usr/include/boost/system/error_code.hpp **** 
 353:/usr/include/boost/system/error_code.hpp ****       // observers:
 354:/usr/include/boost/system/error_code.hpp ****       int                     value() const  BOOST_SYSTEM_NOEXCEPT   { return m_val; }
 1282              		.loc 11 354 0 is_stmt 1
 1283              		.cfi_startproc
 1284 0000 55       		pushq	%rbp
 1285              		.cfi_def_cfa_offset 16
 1286              		.cfi_offset 6, -16
 1287 0001 4889E5   		movq	%rsp, %rbp
 1288              		.cfi_def_cfa_register 6
 1289 0004 48897DF8 		movq	%rdi, -8(%rbp)
 1290              		.loc 11 354 0
 1291 0008 488B45F8 		movq	-8(%rbp), %rax
 1292 000c 8B00     		movl	(%rax), %eax
 1293 000e 5D       		popq	%rbp
 1294              		.cfi_def_cfa 7, 8
 1295 000f C3       		ret
 1296              		.cfi_endproc
 1297              	.LFE4157:
 1299              		.section	.text._ZNK5boost6system10error_code7messageB5cxx11Ev,"axG",@progbits,_ZNK5boost6system10e
 1300              		.align 2
 1301              		.weak	_ZNK5boost6system10error_code7messageB5cxx11Ev
 1303              	_ZNK5boost6system10error_code7messageB5cxx11Ev:
 1304              	.LFB4160:
 355:/usr/include/boost/system/error_code.hpp ****       const error_category &  category() const BOOST_SYSTEM_NOEXCEPT { return *m_cat; }
 356:/usr/include/boost/system/error_code.hpp ****       error_condition         default_error_condition() const BOOST_SYSTEM_NOEXCEPT  { return m_cat
 357:/usr/include/boost/system/error_code.hpp ****       std::string             message() const  { return m_cat->message(value()); }
 1305              		.loc 11 357 0
 1306              		.cfi_startproc
 1307 0000 55       		pushq	%rbp
 1308              		.cfi_def_cfa_offset 16
 1309              		.cfi_offset 6, -16
 1310 0001 4889E5   		movq	%rsp, %rbp
 1311              		.cfi_def_cfa_register 6
 1312 0004 53       		pushq	%rbx
 1313 0005 4883EC18 		subq	$24, %rsp
 1314              		.cfi_offset 3, -24
 1315 0009 48897DE8 		movq	%rdi, -24(%rbp)
 1316 000d 488975E0 		movq	%rsi, -32(%rbp)
 1317              		.loc 11 357 0
 1318 0011 488B45E0 		movq	-32(%rbp), %rax
 1319 0015 488B4008 		movq	8(%rax), %rax
 1320 0019 488B00   		movq	(%rax), %rax
 1321 001c 4883C018 		addq	$24, %rax
 1322 0020 488B18   		movq	(%rax), %rbx
 1323 0023 488B45E0 		movq	-32(%rbp), %rax
 1324 0027 4889C7   		movq	%rax, %rdi
 1325 002a E8000000 		call	_ZNK5boost6system10error_code5valueEv
 1325      00
 1326 002f 89C2     		movl	%eax, %edx
 1327 0031 488B45E0 		movq	-32(%rbp), %rax
 1328 0035 488B4808 		movq	8(%rax), %rcx
 1329 0039 488B45E8 		movq	-24(%rbp), %rax
GAS LISTING /tmp/ccvUPO8Q.s 			page 96


 1330 003d 4889CE   		movq	%rcx, %rsi
 1331 0040 4889C7   		movq	%rax, %rdi
 1332 0043 FFD3     		call	*%rbx
 1333              	.LVL4:
 1334 0045 488B45E8 		movq	-24(%rbp), %rax
 1335 0049 4883C418 		addq	$24, %rsp
 1336 004d 5B       		popq	%rbx
 1337 004e 5D       		popq	%rbp
 1338              		.cfi_def_cfa 7, 8
 1339 004f C3       		ret
 1340              		.cfi_endproc
 1341              	.LFE4160:
 1343              		.section	.text._ZN5boost6system12system_errorD2Ev,"axG",@progbits,_ZN5boost6system12system_errorD5
 1344              		.align 2
 1345              		.weak	_ZN5boost6system12system_errorD2Ev
 1347              	_ZN5boost6system12system_errorD2Ev:
 1348              	.LFB4200:
 1349              		.file 12 "/usr/include/boost/system/system_error.hpp"
   1:/usr/include/boost/system/system_error.hpp **** //  Boost system_error.hpp  --------------------------------------------------//
   2:/usr/include/boost/system/system_error.hpp **** 
   3:/usr/include/boost/system/system_error.hpp **** //  Copyright Beman Dawes 2006
   4:/usr/include/boost/system/system_error.hpp **** 
   5:/usr/include/boost/system/system_error.hpp **** //  Distributed under the Boost Software License, Version 1.0. (See accompanying
   6:/usr/include/boost/system/system_error.hpp **** //  file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
   7:/usr/include/boost/system/system_error.hpp **** 
   8:/usr/include/boost/system/system_error.hpp **** #ifndef BOOST_SYSTEM_ERROR_HPP
   9:/usr/include/boost/system/system_error.hpp **** #define BOOST_SYSTEM_ERROR_HPP
  10:/usr/include/boost/system/system_error.hpp **** 
  11:/usr/include/boost/system/system_error.hpp **** #include <string>
  12:/usr/include/boost/system/system_error.hpp **** #include <stdexcept>
  13:/usr/include/boost/system/system_error.hpp **** #include <cassert>
  14:/usr/include/boost/system/system_error.hpp **** #include <boost/system/error_code.hpp>
  15:/usr/include/boost/system/system_error.hpp **** 
  16:/usr/include/boost/system/system_error.hpp **** namespace boost
  17:/usr/include/boost/system/system_error.hpp **** {
  18:/usr/include/boost/system/system_error.hpp ****   namespace system
  19:/usr/include/boost/system/system_error.hpp ****   {
  20:/usr/include/boost/system/system_error.hpp ****     //  class system_error  ------------------------------------------------------------//
  21:/usr/include/boost/system/system_error.hpp **** 
  22:/usr/include/boost/system/system_error.hpp ****     class BOOST_SYMBOL_VISIBLE system_error : public std::runtime_error
  23:/usr/include/boost/system/system_error.hpp ****     // BOOST_SYMBOL_VISIBLE is needed by GCC to ensure system_error thrown from a shared
  24:/usr/include/boost/system/system_error.hpp ****     // library can be caught. See svn.boost.org/trac/boost/ticket/3697
  25:/usr/include/boost/system/system_error.hpp ****     {
  26:/usr/include/boost/system/system_error.hpp ****     public:
  27:/usr/include/boost/system/system_error.hpp ****       system_error( error_code ec )
  28:/usr/include/boost/system/system_error.hpp ****           : std::runtime_error(""), m_error_code(ec) {}
  29:/usr/include/boost/system/system_error.hpp **** 
  30:/usr/include/boost/system/system_error.hpp ****       system_error( error_code ec, const std::string & what_arg )
  31:/usr/include/boost/system/system_error.hpp ****           : std::runtime_error(what_arg), m_error_code(ec) {}
  32:/usr/include/boost/system/system_error.hpp **** 
  33:/usr/include/boost/system/system_error.hpp ****       system_error( error_code ec, const char* what_arg )
  34:/usr/include/boost/system/system_error.hpp ****           : std::runtime_error(what_arg), m_error_code(ec) {}
  35:/usr/include/boost/system/system_error.hpp **** 
  36:/usr/include/boost/system/system_error.hpp ****       system_error( int ev, const error_category & ecat )
  37:/usr/include/boost/system/system_error.hpp ****           : std::runtime_error(""), m_error_code(ev,ecat) {}
  38:/usr/include/boost/system/system_error.hpp **** 
  39:/usr/include/boost/system/system_error.hpp ****       system_error( int ev, const error_category & ecat,
GAS LISTING /tmp/ccvUPO8Q.s 			page 97


  40:/usr/include/boost/system/system_error.hpp ****         const std::string & what_arg )
  41:/usr/include/boost/system/system_error.hpp ****           : std::runtime_error(what_arg), m_error_code(ev,ecat) {}
  42:/usr/include/boost/system/system_error.hpp **** 
  43:/usr/include/boost/system/system_error.hpp ****       system_error( int ev, const error_category & ecat,
  44:/usr/include/boost/system/system_error.hpp ****         const char * what_arg )
  45:/usr/include/boost/system/system_error.hpp ****           : std::runtime_error(what_arg), m_error_code(ev,ecat) {}
  46:/usr/include/boost/system/system_error.hpp **** 
  47:/usr/include/boost/system/system_error.hpp ****       virtual ~system_error() throw() {}
 1350              		.loc 12 47 0
 1351              		.cfi_startproc
 1352 0000 55       		pushq	%rbp
 1353              		.cfi_def_cfa_offset 16
 1354              		.cfi_offset 6, -16
 1355 0001 4889E5   		movq	%rsp, %rbp
 1356              		.cfi_def_cfa_register 6
 1357 0004 4883EC10 		subq	$16, %rsp
 1358 0008 48897DF8 		movq	%rdi, -8(%rbp)
 1359              	.LBB20:
 1360              		.loc 12 47 0
 1361 000c 488D1500 		leaq	16+_ZTVN5boost6system12system_errorE(%rip), %rdx
 1361      000000
 1362 0013 488B45F8 		movq	-8(%rbp), %rax
 1363 0017 488910   		movq	%rdx, (%rax)
 1364 001a 488B45F8 		movq	-8(%rbp), %rax
 1365 001e 4883C020 		addq	$32, %rax
 1366 0022 4889C7   		movq	%rax, %rdi
 1367 0025 E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@PLT
 1367      00
 1368 002a 488B45F8 		movq	-8(%rbp), %rax
 1369 002e 4889C7   		movq	%rax, %rdi
 1370 0031 E8000000 		call	_ZNSt13runtime_errorD2Ev@PLT
 1370      00
 1371              	.LBE20:
 1372 0036 90       		nop
 1373 0037 C9       		leave
 1374              		.cfi_def_cfa 7, 8
 1375 0038 C3       		ret
 1376              		.cfi_endproc
 1377              	.LFE4200:
 1379              		.weak	_ZN5boost6system12system_errorD1Ev
 1380              		.set	_ZN5boost6system12system_errorD1Ev,_ZN5boost6system12system_errorD2Ev
 1381              		.section	.text._ZN5boost6system12system_errorD0Ev,"axG",@progbits,_ZN5boost6system12system_errorD5
 1382              		.align 2
 1383              		.weak	_ZN5boost6system12system_errorD0Ev
 1385              	_ZN5boost6system12system_errorD0Ev:
 1386              	.LFB4202:
 1387              		.loc 12 47 0
 1388              		.cfi_startproc
 1389 0000 55       		pushq	%rbp
 1390              		.cfi_def_cfa_offset 16
 1391              		.cfi_offset 6, -16
 1392 0001 4889E5   		movq	%rsp, %rbp
 1393              		.cfi_def_cfa_register 6
 1394 0004 4883EC10 		subq	$16, %rsp
 1395 0008 48897DF8 		movq	%rdi, -8(%rbp)
 1396              		.loc 12 47 0
 1397 000c 488B45F8 		movq	-8(%rbp), %rax
GAS LISTING /tmp/ccvUPO8Q.s 			page 98


 1398 0010 4889C7   		movq	%rax, %rdi
 1399 0013 E8000000 		call	_ZN5boost6system12system_errorD1Ev
 1399      00
 1400 0018 488B45F8 		movq	-8(%rbp), %rax
 1401 001c BE400000 		movl	$64, %esi
 1401      00
 1402 0021 4889C7   		movq	%rax, %rdi
 1403 0024 E8000000 		call	_ZdlPvm@PLT
 1403      00
 1404 0029 C9       		leave
 1405              		.cfi_def_cfa 7, 8
 1406 002a C3       		ret
 1407              		.cfi_endproc
 1408              	.LFE4202:
 1410              		.section	.rodata
 1411              	.LC1:
 1412 000a 3A2000   		.string	": "
 1413              		.section	.text._ZNK5boost6system12system_error4whatEv,"axG",@progbits,_ZNK5boost6system12system_er
 1414              		.align 2
 1415              		.weak	_ZNK5boost6system12system_error4whatEv
 1417              	_ZNK5boost6system12system_error4whatEv:
 1418              	.LFB4204:
  48:/usr/include/boost/system/system_error.hpp **** 
  49:/usr/include/boost/system/system_error.hpp ****       const error_code &  code() const throw() { return m_error_code; }
  50:/usr/include/boost/system/system_error.hpp ****       const char *        what() const throw();
  51:/usr/include/boost/system/system_error.hpp **** 
  52:/usr/include/boost/system/system_error.hpp ****     private:
  53:/usr/include/boost/system/system_error.hpp ****       error_code           m_error_code;
  54:/usr/include/boost/system/system_error.hpp ****       mutable std::string  m_what;
  55:/usr/include/boost/system/system_error.hpp ****     };
  56:/usr/include/boost/system/system_error.hpp **** 
  57:/usr/include/boost/system/system_error.hpp ****     //  implementation  ------------------------------------------------------//
  58:/usr/include/boost/system/system_error.hpp **** 
  59:/usr/include/boost/system/system_error.hpp ****     inline const char * system_error::what() const throw()
  60:/usr/include/boost/system/system_error.hpp ****     // see http://www.boost.org/more/error_handling.html for lazy build rationale
  61:/usr/include/boost/system/system_error.hpp ****     {
 1419              		.loc 12 61 0
 1420              		.cfi_startproc
 1421              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 1422              		.cfi_lsda 0x1b,.LLSDA4204
 1423 0000 55       		pushq	%rbp
 1424              		.cfi_def_cfa_offset 16
 1425              		.cfi_offset 6, -16
 1426 0001 4889E5   		movq	%rsp, %rbp
 1427              		.cfi_def_cfa_register 6
 1428 0004 53       		pushq	%rbx
 1429 0005 4883EC38 		subq	$56, %rsp
 1430              		.cfi_offset 3, -24
 1431 0009 48897DC8 		movq	%rdi, -56(%rbp)
  62:/usr/include/boost/system/system_error.hpp ****       if ( m_what.empty() )
 1432              		.loc 12 62 0
 1433 000d 488B45C8 		movq	-56(%rbp), %rax
 1434 0011 4883C020 		addq	$32, %rax
 1435 0015 4889C7   		movq	%rax, %rdi
 1436 0018 E8000000 		call	_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5emptyEv@PLT
 1436      00
 1437 001d 84C0     		testb	%al, %al
GAS LISTING /tmp/ccvUPO8Q.s 			page 99


 1438 001f 0F848A00 		je	.L67
 1438      0000
  63:/usr/include/boost/system/system_error.hpp ****       {
  64:/usr/include/boost/system/system_error.hpp **** #ifndef BOOST_NO_EXCEPTIONS
  65:/usr/include/boost/system/system_error.hpp ****         try
  66:/usr/include/boost/system/system_error.hpp **** #endif
  67:/usr/include/boost/system/system_error.hpp ****         {
  68:/usr/include/boost/system/system_error.hpp ****           m_what = this->std::runtime_error::what();
 1439              		.loc 12 68 0
 1440 0025 488B45C8 		movq	-56(%rbp), %rax
 1441 0029 4889C7   		movq	%rax, %rdi
 1442 002c E8000000 		call	_ZNKSt13runtime_error4whatEv@PLT
 1442      00
 1443 0031 4889C2   		movq	%rax, %rdx
 1444 0034 488B45C8 		movq	-56(%rbp), %rax
 1445 0038 4883C020 		addq	$32, %rax
 1446 003c 4889D6   		movq	%rdx, %rsi
 1447 003f 4889C7   		movq	%rax, %rdi
 1448              	.LEHB4:
 1449 0042 E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEPKc@PLT
 1449      00
  69:/usr/include/boost/system/system_error.hpp ****           if ( !m_what.empty() ) m_what += ": ";
 1450              		.loc 12 69 0
 1451 0047 488B45C8 		movq	-56(%rbp), %rax
 1452 004b 4883C020 		addq	$32, %rax
 1453 004f 4889C7   		movq	%rax, %rdi
 1454 0052 E8000000 		call	_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5emptyEv@PLT
 1454      00
 1455 0057 83F001   		xorl	$1, %eax
 1456 005a 84C0     		testb	%al, %al
 1457 005c 7417     		je	.L68
 1458              		.loc 12 69 0 is_stmt 0 discriminator 1
 1459 005e 488B45C8 		movq	-56(%rbp), %rax
 1460 0062 4883C020 		addq	$32, %rax
 1461 0066 488D3500 		leaq	.LC1(%rip), %rsi
 1461      000000
 1462 006d 4889C7   		movq	%rax, %rdi
 1463 0070 E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLEPKc@PLT
 1463      00
 1464              	.L68:
  70:/usr/include/boost/system/system_error.hpp ****           m_what += m_error_code.message();
 1465              		.loc 12 70 0 is_stmt 1
 1466 0075 488B45C8 		movq	-56(%rbp), %rax
 1467 0079 488D5010 		leaq	16(%rax), %rdx
 1468 007d 488D45D0 		leaq	-48(%rbp), %rax
 1469 0081 4889D6   		movq	%rdx, %rsi
 1470 0084 4889C7   		movq	%rax, %rdi
 1471 0087 E8000000 		call	_ZNK5boost6system10error_code7messageB5cxx11Ev
 1471      00
 1472              	.LEHE4:
 1473              		.loc 12 70 0 is_stmt 0 discriminator 1
 1474 008c 488B45C8 		movq	-56(%rbp), %rax
 1475 0090 488D5020 		leaq	32(%rax), %rdx
 1476 0094 488D45D0 		leaq	-48(%rbp), %rax
 1477 0098 4889C6   		movq	%rax, %rsi
 1478 009b 4889D7   		movq	%rdx, %rdi
 1479              	.LEHB5:
GAS LISTING /tmp/ccvUPO8Q.s 			page 100


 1480 009e E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLERKS4_@PLT
 1480      00
 1481              	.LEHE5:
 1482              		.loc 12 70 0 discriminator 3
 1483 00a3 488D45D0 		leaq	-48(%rbp), %rax
 1484 00a7 4889C7   		movq	%rax, %rdi
 1485 00aa E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@PLT
 1485      00
 1486              	.L67:
  71:/usr/include/boost/system/system_error.hpp ****         }
  72:/usr/include/boost/system/system_error.hpp **** #ifndef BOOST_NO_EXCEPTIONS
  73:/usr/include/boost/system/system_error.hpp ****         catch (...) { return std::runtime_error::what(); }
  74:/usr/include/boost/system/system_error.hpp **** #endif
  75:/usr/include/boost/system/system_error.hpp ****       }
  76:/usr/include/boost/system/system_error.hpp ****       return m_what.c_str();
 1487              		.loc 12 76 0 is_stmt 1
 1488 00af 488B45C8 		movq	-56(%rbp), %rax
 1489 00b3 4883C020 		addq	$32, %rax
 1490 00b7 4889C7   		movq	%rax, %rdi
 1491 00ba E8000000 		call	_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv@PLT
 1491      00
 1492 00bf 4889C3   		movq	%rax, %rbx
 1493              	.L69:
 1494 00c2 4889D8   		movq	%rbx, %rax
 1495 00c5 EB48     		jmp	.L77
 1496              	.L75:
 1497 00c7 4889C3   		movq	%rax, %rbx
  70:/usr/include/boost/system/system_error.hpp ****           m_what += m_error_code.message();
 1498              		.loc 12 70 0
 1499 00ca 488D45D0 		leaq	-48(%rbp), %rax
 1500 00ce 4889C7   		movq	%rax, %rdi
 1501 00d1 E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@PLT
 1501      00
 1502 00d6 4889D8   		movq	%rbx, %rax
 1503 00d9 EB00     		jmp	.L71
 1504              	.L74:
 1505              	.L71:
  73:/usr/include/boost/system/system_error.hpp **** #endif
 1506              		.loc 12 73 0
 1507 00db 4889C7   		movq	%rax, %rdi
 1508 00de E8000000 		call	__cxa_begin_catch@PLT
 1508      00
 1509 00e3 488B45C8 		movq	-56(%rbp), %rax
 1510 00e7 4889C7   		movq	%rax, %rdi
 1511 00ea E8000000 		call	_ZNKSt13runtime_error4whatEv@PLT
 1511      00
 1512 00ef 4889C3   		movq	%rax, %rbx
 1513              	.LEHB6:
 1514 00f2 E8000000 		call	__cxa_end_catch@PLT
 1514      00
 1515              	.LEHE6:
 1516 00f7 EBC9     		jmp	.L69
 1517              	.L76:
 1518 00f9 4883FAFF 		cmpq	$-1, %rdx
 1519 00fd 7408     		je	.L73
 1520 00ff 4889C7   		movq	%rax, %rdi
 1521              	.LEHB7:
GAS LISTING /tmp/ccvUPO8Q.s 			page 101


 1522 0102 E8000000 		call	_Unwind_Resume@PLT
 1522      00
 1523              	.L73:
  59:/usr/include/boost/system/system_error.hpp ****     // see http://www.boost.org/more/error_handling.html for lazy build rationale
 1524              		.loc 12 59 0
 1525 0107 4889C7   		movq	%rax, %rdi
 1526 010a E8000000 		call	__cxa_call_unexpected@PLT
 1526      00
 1527              	.LEHE7:
 1528              	.L77:
  77:/usr/include/boost/system/system_error.hpp ****     }
 1529              		.loc 12 77 0
 1530 010f 4883C438 		addq	$56, %rsp
 1531 0113 5B       		popq	%rbx
 1532 0114 5D       		popq	%rbp
 1533              		.cfi_def_cfa 7, 8
 1534 0115 C3       		ret
 1535              		.cfi_endproc
 1536              	.LFE4204:
 1537              		.section	.gcc_except_table._ZNK5boost6system12system_error4whatEv,"aG",@progbits,_ZNK5boost6system
 1538              		.align 4
 1539              	.LLSDA4204:
 1540 0000 FF       		.byte	0xff
 1541 0001 9B       		.byte	0x9b
 1542 0002 25       		.uleb128 .LLSDATT4204-.LLSDATTD4204
 1543              	.LLSDATTD4204:
 1544 0003 01       		.byte	0x1
 1545 0004 16       		.uleb128 .LLSDACSE4204-.LLSDACSB4204
 1546              	.LLSDACSB4204:
 1547 0005 42       		.uleb128 .LEHB4-.LFB4204
 1548 0006 4A       		.uleb128 .LEHE4-.LEHB4
 1549 0007 DB01     		.uleb128 .L74-.LFB4204
 1550 0009 01       		.uleb128 0x1
 1551 000a 9E01     		.uleb128 .LEHB5-.LFB4204
 1552 000c 05       		.uleb128 .LEHE5-.LEHB5
 1553 000d C701     		.uleb128 .L75-.LFB4204
 1554 000f 03       		.uleb128 0x3
 1555 0010 F201     		.uleb128 .LEHB6-.LFB4204
 1556 0012 05       		.uleb128 .LEHE6-.LEHB6
 1557 0013 F901     		.uleb128 .L76-.LFB4204
 1558 0015 05       		.uleb128 0x5
 1559 0016 8202     		.uleb128 .LEHB7-.LFB4204
 1560 0018 0D       		.uleb128 .LEHE7-.LEHB7
 1561 0019 00       		.uleb128 0
 1562 001a 00       		.uleb128 0
 1563              	.LLSDACSE4204:
 1564 001b 01       		.byte	0x1
 1565 001c 00       		.byte	0
 1566 001d 00       		.byte	0
 1567 001e 7D       		.byte	0x7d
 1568 001f 7F       		.byte	0x7f
 1569 0020 00       		.byte	0
 1570 0021 000000   		.align 4
 1571 0024 00000000 		.long	0
 1572              	
 1573              	.LLSDATT4204:
 1574 0028 00       		.byte	0
GAS LISTING /tmp/ccvUPO8Q.s 			page 102


 1575              		.section	.text._ZNK5boost6system12system_error4whatEv,"axG",@progbits,_ZNK5boost6system12system_er
 1577              		.section	.rodata
 1580              	_ZN5boostL10defer_lockE:
 1581 000d 00       		.zero	1
 1584              	_ZN5boostL11try_to_lockE:
 1585 000e 00       		.zero	1
 1588              	_ZN5boostL10adopt_lockE:
 1589 000f 00       		.zero	1
 1590              		.local	_ZStL8__ioinit
 1591              		.comm	_ZStL8__ioinit,1,1
 1594              	_ZN5boost12placeholdersL2_1E:
 1595 0010 00       		.zero	1
 1598              	_ZN5boost12placeholdersL2_2E:
 1599 0011 00       		.zero	1
 1602              	_ZN5boost12placeholdersL2_3E:
 1603 0012 00       		.zero	1
 1606              	_ZN5boost12placeholdersL2_4E:
 1607 0013 00       		.zero	1
 1610              	_ZN5boost12placeholdersL2_5E:
 1611 0014 00       		.zero	1
 1614              	_ZN5boost12placeholdersL2_6E:
 1615 0015 00       		.zero	1
 1618              	_ZN5boost12placeholdersL2_7E:
 1619 0016 00       		.zero	1
 1622              	_ZN5boost12placeholdersL2_8E:
 1623 0017 00       		.zero	1
 1626              	_ZN5boost12placeholdersL2_9E:
 1627 0018 00       		.zero	1
 1628 0019 000000   		.align 4
 1631              	_ZN5boost6detail16static_log2_implL6n_zeroE:
 1632 001c 10000000 		.long	16
 1633              		.align 4
 1636              	_ZN5boost6detail16static_log2_implL9initial_nE:
 1637 0020 20000000 		.long	32
 1638              		.section	.text._ZN5boost13function_baseC2Ev,"axG",@progbits,_ZN5boost13function_baseC5Ev,comdat
 1639              		.align 2
 1640              		.weak	_ZN5boost13function_baseC2Ev
 1642              	_ZN5boost13function_baseC2Ev:
 1643              	.LFB7759:
 1644              		.file 13 "/usr/include/boost/function/function_base.hpp"
   1:/usr/include/boost/function/function_base.hpp **** // Boost.Function library
   2:/usr/include/boost/function/function_base.hpp **** 
   3:/usr/include/boost/function/function_base.hpp **** //  Copyright Douglas Gregor 2001-2006
   4:/usr/include/boost/function/function_base.hpp **** //  Copyright Emil Dotchevski 2007
   5:/usr/include/boost/function/function_base.hpp **** //  Use, modification and distribution is subject to the Boost Software License, Version 1.0.
   6:/usr/include/boost/function/function_base.hpp **** //  (See accompanying file LICENSE_1_0.txt or copy at
   7:/usr/include/boost/function/function_base.hpp **** //  http://www.boost.org/LICENSE_1_0.txt)
   8:/usr/include/boost/function/function_base.hpp **** 
   9:/usr/include/boost/function/function_base.hpp **** // For more information, see http://www.boost.org
  10:/usr/include/boost/function/function_base.hpp **** 
  11:/usr/include/boost/function/function_base.hpp **** #ifndef BOOST_FUNCTION_BASE_HEADER
  12:/usr/include/boost/function/function_base.hpp **** #define BOOST_FUNCTION_BASE_HEADER
  13:/usr/include/boost/function/function_base.hpp **** 
  14:/usr/include/boost/function/function_base.hpp **** #include <stdexcept>
  15:/usr/include/boost/function/function_base.hpp **** #include <string>
  16:/usr/include/boost/function/function_base.hpp **** #include <memory>
  17:/usr/include/boost/function/function_base.hpp **** #include <new>
GAS LISTING /tmp/ccvUPO8Q.s 			page 103


  18:/usr/include/boost/function/function_base.hpp **** #include <boost/config.hpp>
  19:/usr/include/boost/function/function_base.hpp **** #include <boost/assert.hpp>
  20:/usr/include/boost/function/function_base.hpp **** #include <boost/integer.hpp>
  21:/usr/include/boost/function/function_base.hpp **** #include <boost/type_index.hpp>
  22:/usr/include/boost/function/function_base.hpp **** #include <boost/type_traits/has_trivial_copy.hpp>
  23:/usr/include/boost/function/function_base.hpp **** #include <boost/type_traits/has_trivial_destructor.hpp>
  24:/usr/include/boost/function/function_base.hpp **** #include <boost/type_traits/is_const.hpp>
  25:/usr/include/boost/function/function_base.hpp **** #include <boost/type_traits/is_integral.hpp>
  26:/usr/include/boost/function/function_base.hpp **** #include <boost/type_traits/is_volatile.hpp>
  27:/usr/include/boost/function/function_base.hpp **** #include <boost/type_traits/composite_traits.hpp>
  28:/usr/include/boost/function/function_base.hpp **** #include <boost/ref.hpp>
  29:/usr/include/boost/function/function_base.hpp **** #include <boost/mpl/if.hpp>
  30:/usr/include/boost/function/function_base.hpp **** #include <boost/detail/workaround.hpp>
  31:/usr/include/boost/function/function_base.hpp **** #include <boost/type_traits/alignment_of.hpp>
  32:/usr/include/boost/function/function_base.hpp **** #ifndef BOOST_NO_SFINAE
  33:/usr/include/boost/function/function_base.hpp **** #  include "boost/utility/enable_if.hpp"
  34:/usr/include/boost/function/function_base.hpp **** #else
  35:/usr/include/boost/function/function_base.hpp **** #  include "boost/mpl/bool.hpp"
  36:/usr/include/boost/function/function_base.hpp **** #endif
  37:/usr/include/boost/function/function_base.hpp **** #include <boost/function_equal.hpp>
  38:/usr/include/boost/function/function_base.hpp **** #include <boost/function/function_fwd.hpp>
  39:/usr/include/boost/function/function_base.hpp **** 
  40:/usr/include/boost/function/function_base.hpp **** #if defined(BOOST_MSVC)
  41:/usr/include/boost/function/function_base.hpp **** #   pragma warning( push )
  42:/usr/include/boost/function/function_base.hpp **** #   pragma warning( disable : 4793 ) // complaint about native code generation
  43:/usr/include/boost/function/function_base.hpp **** #   pragma warning( disable : 4127 ) // "conditional expression is constant"
  44:/usr/include/boost/function/function_base.hpp **** #endif
  45:/usr/include/boost/function/function_base.hpp **** 
  46:/usr/include/boost/function/function_base.hpp **** #if defined(__ICL) && __ICL <= 600 || defined(__MWERKS__) && __MWERKS__ < 0x2406 && !defined(BOOST_
  47:/usr/include/boost/function/function_base.hpp **** #  define BOOST_FUNCTION_TARGET_FIX(x) x
  48:/usr/include/boost/function/function_base.hpp **** #else
  49:/usr/include/boost/function/function_base.hpp **** #  define BOOST_FUNCTION_TARGET_FIX(x)
  50:/usr/include/boost/function/function_base.hpp **** #endif // __ICL etc
  51:/usr/include/boost/function/function_base.hpp **** 
  52:/usr/include/boost/function/function_base.hpp **** #  define BOOST_FUNCTION_ENABLE_IF_NOT_INTEGRAL(Functor,Type)              \
  53:/usr/include/boost/function/function_base.hpp ****       typename ::boost::enable_if_c<          \
  54:/usr/include/boost/function/function_base.hpp ****                            !(::boost::is_integral<Functor>::value), \
  55:/usr/include/boost/function/function_base.hpp ****                            Type>::type
  56:/usr/include/boost/function/function_base.hpp **** 
  57:/usr/include/boost/function/function_base.hpp **** namespace boost {
  58:/usr/include/boost/function/function_base.hpp ****   namespace detail {
  59:/usr/include/boost/function/function_base.hpp ****     namespace function {
  60:/usr/include/boost/function/function_base.hpp ****       class X;
  61:/usr/include/boost/function/function_base.hpp **** 
  62:/usr/include/boost/function/function_base.hpp ****       /**
  63:/usr/include/boost/function/function_base.hpp ****        * A buffer used to store small function objects in
  64:/usr/include/boost/function/function_base.hpp ****        * boost::function. It is a union containing function pointers,
  65:/usr/include/boost/function/function_base.hpp ****        * object pointers, and a structure that resembles a bound
  66:/usr/include/boost/function/function_base.hpp ****        * member function pointer.
  67:/usr/include/boost/function/function_base.hpp ****        */
  68:/usr/include/boost/function/function_base.hpp ****       union function_buffer_members
  69:/usr/include/boost/function/function_base.hpp ****       {
  70:/usr/include/boost/function/function_base.hpp ****         // For pointers to function objects
  71:/usr/include/boost/function/function_base.hpp ****         typedef void* obj_ptr_t;
  72:/usr/include/boost/function/function_base.hpp ****         mutable obj_ptr_t obj_ptr;
  73:/usr/include/boost/function/function_base.hpp **** 
  74:/usr/include/boost/function/function_base.hpp ****         // For pointers to std::type_info objects
GAS LISTING /tmp/ccvUPO8Q.s 			page 104


  75:/usr/include/boost/function/function_base.hpp ****         struct type_t {
  76:/usr/include/boost/function/function_base.hpp ****           // (get_functor_type_tag, check_functor_type_tag).
  77:/usr/include/boost/function/function_base.hpp ****           const boost::typeindex::type_info* type;
  78:/usr/include/boost/function/function_base.hpp **** 
  79:/usr/include/boost/function/function_base.hpp ****           // Whether the type is const-qualified.
  80:/usr/include/boost/function/function_base.hpp ****           bool const_qualified;
  81:/usr/include/boost/function/function_base.hpp ****           // Whether the type is volatile-qualified.
  82:/usr/include/boost/function/function_base.hpp ****           bool volatile_qualified;
  83:/usr/include/boost/function/function_base.hpp ****         } type;
  84:/usr/include/boost/function/function_base.hpp **** 
  85:/usr/include/boost/function/function_base.hpp ****         // For function pointers of all kinds
  86:/usr/include/boost/function/function_base.hpp ****         typedef void (*func_ptr_t)();
  87:/usr/include/boost/function/function_base.hpp ****         mutable func_ptr_t func_ptr;
  88:/usr/include/boost/function/function_base.hpp **** 
  89:/usr/include/boost/function/function_base.hpp ****         // For bound member pointers
  90:/usr/include/boost/function/function_base.hpp ****         struct bound_memfunc_ptr_t {
  91:/usr/include/boost/function/function_base.hpp ****           void (X::*memfunc_ptr)(int);
  92:/usr/include/boost/function/function_base.hpp ****           void* obj_ptr;
  93:/usr/include/boost/function/function_base.hpp ****         } bound_memfunc_ptr;
  94:/usr/include/boost/function/function_base.hpp **** 
  95:/usr/include/boost/function/function_base.hpp ****         // For references to function objects. We explicitly keep
  96:/usr/include/boost/function/function_base.hpp ****         // track of the cv-qualifiers on the object referenced.
  97:/usr/include/boost/function/function_base.hpp ****         struct obj_ref_t {
  98:/usr/include/boost/function/function_base.hpp ****           mutable void* obj_ptr;
  99:/usr/include/boost/function/function_base.hpp ****           bool is_const_qualified;
 100:/usr/include/boost/function/function_base.hpp ****           bool is_volatile_qualified;
 101:/usr/include/boost/function/function_base.hpp ****         } obj_ref;
 102:/usr/include/boost/function/function_base.hpp ****       };
 103:/usr/include/boost/function/function_base.hpp **** 
 104:/usr/include/boost/function/function_base.hpp ****       union function_buffer
 105:/usr/include/boost/function/function_base.hpp ****       {
 106:/usr/include/boost/function/function_base.hpp ****         // Type-specific union members
 107:/usr/include/boost/function/function_base.hpp ****         mutable function_buffer_members members;
 108:/usr/include/boost/function/function_base.hpp **** 
 109:/usr/include/boost/function/function_base.hpp ****         // To relax aliasing constraints
 110:/usr/include/boost/function/function_base.hpp ****         mutable char data[sizeof(function_buffer_members)];
 111:/usr/include/boost/function/function_base.hpp ****       };
 112:/usr/include/boost/function/function_base.hpp **** 
 113:/usr/include/boost/function/function_base.hpp ****       /**
 114:/usr/include/boost/function/function_base.hpp ****        * The unusable class is a placeholder for unused function arguments
 115:/usr/include/boost/function/function_base.hpp ****        * It is also completely unusable except that it constructable from
 116:/usr/include/boost/function/function_base.hpp ****        * anything. This helps compilers without partial specialization to
 117:/usr/include/boost/function/function_base.hpp ****        * handle Boost.Function objects returning void.
 118:/usr/include/boost/function/function_base.hpp ****        */
 119:/usr/include/boost/function/function_base.hpp ****       struct unusable
 120:/usr/include/boost/function/function_base.hpp ****       {
 121:/usr/include/boost/function/function_base.hpp ****         unusable() {}
 122:/usr/include/boost/function/function_base.hpp ****         template<typename T> unusable(const T&) {}
 123:/usr/include/boost/function/function_base.hpp ****       };
 124:/usr/include/boost/function/function_base.hpp **** 
 125:/usr/include/boost/function/function_base.hpp ****       /* Determine the return type. This supports compilers that do not support
 126:/usr/include/boost/function/function_base.hpp ****        * void returns or partial specialization by silently changing the return
 127:/usr/include/boost/function/function_base.hpp ****        * type to "unusable".
 128:/usr/include/boost/function/function_base.hpp ****        */
 129:/usr/include/boost/function/function_base.hpp ****       template<typename T> struct function_return_type { typedef T type; };
 130:/usr/include/boost/function/function_base.hpp **** 
 131:/usr/include/boost/function/function_base.hpp ****       template<>
GAS LISTING /tmp/ccvUPO8Q.s 			page 105


 132:/usr/include/boost/function/function_base.hpp ****       struct function_return_type<void>
 133:/usr/include/boost/function/function_base.hpp ****       {
 134:/usr/include/boost/function/function_base.hpp ****         typedef unusable type;
 135:/usr/include/boost/function/function_base.hpp ****       };
 136:/usr/include/boost/function/function_base.hpp **** 
 137:/usr/include/boost/function/function_base.hpp ****       // The operation type to perform on the given functor/function pointer
 138:/usr/include/boost/function/function_base.hpp ****       enum functor_manager_operation_type {
 139:/usr/include/boost/function/function_base.hpp ****         clone_functor_tag,
 140:/usr/include/boost/function/function_base.hpp ****         move_functor_tag,
 141:/usr/include/boost/function/function_base.hpp ****         destroy_functor_tag,
 142:/usr/include/boost/function/function_base.hpp ****         check_functor_type_tag,
 143:/usr/include/boost/function/function_base.hpp ****         get_functor_type_tag
 144:/usr/include/boost/function/function_base.hpp ****       };
 145:/usr/include/boost/function/function_base.hpp **** 
 146:/usr/include/boost/function/function_base.hpp ****       // Tags used to decide between different types of functions
 147:/usr/include/boost/function/function_base.hpp ****       struct function_ptr_tag {};
 148:/usr/include/boost/function/function_base.hpp ****       struct function_obj_tag {};
 149:/usr/include/boost/function/function_base.hpp ****       struct member_ptr_tag {};
 150:/usr/include/boost/function/function_base.hpp ****       struct function_obj_ref_tag {};
 151:/usr/include/boost/function/function_base.hpp **** 
 152:/usr/include/boost/function/function_base.hpp ****       template<typename F>
 153:/usr/include/boost/function/function_base.hpp ****       class get_function_tag
 154:/usr/include/boost/function/function_base.hpp ****       {
 155:/usr/include/boost/function/function_base.hpp ****         typedef typename mpl::if_c<(is_pointer<F>::value),
 156:/usr/include/boost/function/function_base.hpp ****                                    function_ptr_tag,
 157:/usr/include/boost/function/function_base.hpp ****                                    function_obj_tag>::type ptr_or_obj_tag;
 158:/usr/include/boost/function/function_base.hpp **** 
 159:/usr/include/boost/function/function_base.hpp ****         typedef typename mpl::if_c<(is_member_pointer<F>::value),
 160:/usr/include/boost/function/function_base.hpp ****                                    member_ptr_tag,
 161:/usr/include/boost/function/function_base.hpp ****                                    ptr_or_obj_tag>::type ptr_or_obj_or_mem_tag;
 162:/usr/include/boost/function/function_base.hpp **** 
 163:/usr/include/boost/function/function_base.hpp ****         typedef typename mpl::if_c<(is_reference_wrapper<F>::value),
 164:/usr/include/boost/function/function_base.hpp ****                                    function_obj_ref_tag,
 165:/usr/include/boost/function/function_base.hpp ****                                    ptr_or_obj_or_mem_tag>::type or_ref_tag;
 166:/usr/include/boost/function/function_base.hpp **** 
 167:/usr/include/boost/function/function_base.hpp ****       public:
 168:/usr/include/boost/function/function_base.hpp ****         typedef or_ref_tag type;
 169:/usr/include/boost/function/function_base.hpp ****       };
 170:/usr/include/boost/function/function_base.hpp **** 
 171:/usr/include/boost/function/function_base.hpp ****       // The trivial manager does nothing but return the same pointer (if we
 172:/usr/include/boost/function/function_base.hpp ****       // are cloning) or return the null pointer (if we are deleting).
 173:/usr/include/boost/function/function_base.hpp ****       template<typename F>
 174:/usr/include/boost/function/function_base.hpp ****       struct reference_manager
 175:/usr/include/boost/function/function_base.hpp ****       {
 176:/usr/include/boost/function/function_base.hpp ****         static inline void
 177:/usr/include/boost/function/function_base.hpp ****         manage(const function_buffer& in_buffer, function_buffer& out_buffer,
 178:/usr/include/boost/function/function_base.hpp ****                functor_manager_operation_type op)
 179:/usr/include/boost/function/function_base.hpp ****         {
 180:/usr/include/boost/function/function_base.hpp ****           switch (op) {
 181:/usr/include/boost/function/function_base.hpp ****           case clone_functor_tag:
 182:/usr/include/boost/function/function_base.hpp ****             out_buffer.members.obj_ref = in_buffer.members.obj_ref;
 183:/usr/include/boost/function/function_base.hpp ****             return;
 184:/usr/include/boost/function/function_base.hpp **** 
 185:/usr/include/boost/function/function_base.hpp ****           case move_functor_tag:
 186:/usr/include/boost/function/function_base.hpp ****             out_buffer.members.obj_ref = in_buffer.members.obj_ref;
 187:/usr/include/boost/function/function_base.hpp ****             in_buffer.members.obj_ref.obj_ptr = 0;
 188:/usr/include/boost/function/function_base.hpp ****             return;
GAS LISTING /tmp/ccvUPO8Q.s 			page 106


 189:/usr/include/boost/function/function_base.hpp **** 
 190:/usr/include/boost/function/function_base.hpp ****           case destroy_functor_tag:
 191:/usr/include/boost/function/function_base.hpp ****             out_buffer.members.obj_ref.obj_ptr = 0;
 192:/usr/include/boost/function/function_base.hpp ****             return;
 193:/usr/include/boost/function/function_base.hpp **** 
 194:/usr/include/boost/function/function_base.hpp ****           case check_functor_type_tag:
 195:/usr/include/boost/function/function_base.hpp ****             {
 196:/usr/include/boost/function/function_base.hpp ****               // Check whether we have the same type. We can add
 197:/usr/include/boost/function/function_base.hpp ****               // cv-qualifiers, but we can't take them away.
 198:/usr/include/boost/function/function_base.hpp ****               if (*out_buffer.members.type.type == boost::typeindex::type_id<F>()
 199:/usr/include/boost/function/function_base.hpp ****                   && (!in_buffer.members.obj_ref.is_const_qualified
 200:/usr/include/boost/function/function_base.hpp ****                       || out_buffer.members.type.const_qualified)
 201:/usr/include/boost/function/function_base.hpp ****                   && (!in_buffer.members.obj_ref.is_volatile_qualified
 202:/usr/include/boost/function/function_base.hpp ****                       || out_buffer.members.type.volatile_qualified))
 203:/usr/include/boost/function/function_base.hpp ****                 out_buffer.members.obj_ptr = in_buffer.members.obj_ref.obj_ptr;
 204:/usr/include/boost/function/function_base.hpp ****               else
 205:/usr/include/boost/function/function_base.hpp ****                 out_buffer.members.obj_ptr = 0;
 206:/usr/include/boost/function/function_base.hpp ****             }
 207:/usr/include/boost/function/function_base.hpp ****             return;
 208:/usr/include/boost/function/function_base.hpp **** 
 209:/usr/include/boost/function/function_base.hpp ****           case get_functor_type_tag:
 210:/usr/include/boost/function/function_base.hpp ****             out_buffer.members.type.type = &boost::typeindex::type_id<F>().type_info();
 211:/usr/include/boost/function/function_base.hpp ****             out_buffer.members.type.const_qualified = in_buffer.members.obj_ref.is_const_qualified;
 212:/usr/include/boost/function/function_base.hpp ****             out_buffer.members.type.volatile_qualified = in_buffer.members.obj_ref.is_volatile_qual
 213:/usr/include/boost/function/function_base.hpp ****             return;
 214:/usr/include/boost/function/function_base.hpp ****           }
 215:/usr/include/boost/function/function_base.hpp ****         }
 216:/usr/include/boost/function/function_base.hpp ****       };
 217:/usr/include/boost/function/function_base.hpp **** 
 218:/usr/include/boost/function/function_base.hpp ****       /**
 219:/usr/include/boost/function/function_base.hpp ****        * Determine if boost::function can use the small-object
 220:/usr/include/boost/function/function_base.hpp ****        * optimization with the function object type F.
 221:/usr/include/boost/function/function_base.hpp ****        */
 222:/usr/include/boost/function/function_base.hpp ****       template<typename F>
 223:/usr/include/boost/function/function_base.hpp ****       struct function_allows_small_object_optimization
 224:/usr/include/boost/function/function_base.hpp ****       {
 225:/usr/include/boost/function/function_base.hpp ****         BOOST_STATIC_CONSTANT
 226:/usr/include/boost/function/function_base.hpp ****           (bool,
 227:/usr/include/boost/function/function_base.hpp ****            value = ((sizeof(F) <= sizeof(function_buffer) &&
 228:/usr/include/boost/function/function_base.hpp ****                      (alignment_of<function_buffer>::value
 229:/usr/include/boost/function/function_base.hpp ****                       % alignment_of<F>::value == 0))));
 230:/usr/include/boost/function/function_base.hpp ****       };
 231:/usr/include/boost/function/function_base.hpp **** 
 232:/usr/include/boost/function/function_base.hpp ****       template <typename F,typename A>
 233:/usr/include/boost/function/function_base.hpp ****       struct functor_wrapper: public F, public A
 234:/usr/include/boost/function/function_base.hpp ****       {
 235:/usr/include/boost/function/function_base.hpp ****         functor_wrapper( F f, A a ):
 236:/usr/include/boost/function/function_base.hpp ****           F(f),
 237:/usr/include/boost/function/function_base.hpp ****           A(a)
 238:/usr/include/boost/function/function_base.hpp ****         {
 239:/usr/include/boost/function/function_base.hpp ****         }
 240:/usr/include/boost/function/function_base.hpp **** 
 241:/usr/include/boost/function/function_base.hpp ****         functor_wrapper(const functor_wrapper& f) :
 242:/usr/include/boost/function/function_base.hpp ****           F(static_cast<const F&>(f)),
 243:/usr/include/boost/function/function_base.hpp ****           A(static_cast<const A&>(f))
 244:/usr/include/boost/function/function_base.hpp ****         {
 245:/usr/include/boost/function/function_base.hpp ****         }
GAS LISTING /tmp/ccvUPO8Q.s 			page 107


 246:/usr/include/boost/function/function_base.hpp ****       };
 247:/usr/include/boost/function/function_base.hpp **** 
 248:/usr/include/boost/function/function_base.hpp ****       /**
 249:/usr/include/boost/function/function_base.hpp ****        * The functor_manager class contains a static function "manage" which
 250:/usr/include/boost/function/function_base.hpp ****        * can clone or destroy the given function/function object pointer.
 251:/usr/include/boost/function/function_base.hpp ****        */
 252:/usr/include/boost/function/function_base.hpp ****       template<typename Functor>
 253:/usr/include/boost/function/function_base.hpp ****       struct functor_manager_common
 254:/usr/include/boost/function/function_base.hpp ****       {
 255:/usr/include/boost/function/function_base.hpp ****         typedef Functor functor_type;
 256:/usr/include/boost/function/function_base.hpp **** 
 257:/usr/include/boost/function/function_base.hpp ****         // Function pointers
 258:/usr/include/boost/function/function_base.hpp ****         static inline void
 259:/usr/include/boost/function/function_base.hpp ****         manage_ptr(const function_buffer& in_buffer, function_buffer& out_buffer,
 260:/usr/include/boost/function/function_base.hpp ****                 functor_manager_operation_type op)
 261:/usr/include/boost/function/function_base.hpp ****         {
 262:/usr/include/boost/function/function_base.hpp ****           if (op == clone_functor_tag)
 263:/usr/include/boost/function/function_base.hpp ****             out_buffer.members.func_ptr = in_buffer.members.func_ptr;
 264:/usr/include/boost/function/function_base.hpp ****           else if (op == move_functor_tag) {
 265:/usr/include/boost/function/function_base.hpp ****             out_buffer.members.func_ptr = in_buffer.members.func_ptr;
 266:/usr/include/boost/function/function_base.hpp ****             in_buffer.members.func_ptr = 0;
 267:/usr/include/boost/function/function_base.hpp ****           } else if (op == destroy_functor_tag)
 268:/usr/include/boost/function/function_base.hpp ****             out_buffer.members.func_ptr = 0;
 269:/usr/include/boost/function/function_base.hpp ****           else if (op == check_functor_type_tag) {
 270:/usr/include/boost/function/function_base.hpp ****             if (*out_buffer.members.type.type == boost::typeindex::type_id<Functor>())
 271:/usr/include/boost/function/function_base.hpp ****               out_buffer.members.obj_ptr = &in_buffer.members.func_ptr;
 272:/usr/include/boost/function/function_base.hpp ****             else
 273:/usr/include/boost/function/function_base.hpp ****               out_buffer.members.obj_ptr = 0;
 274:/usr/include/boost/function/function_base.hpp ****           } else /* op == get_functor_type_tag */ {
 275:/usr/include/boost/function/function_base.hpp ****             out_buffer.members.type.type = &boost::typeindex::type_id<Functor>().type_info();
 276:/usr/include/boost/function/function_base.hpp ****             out_buffer.members.type.const_qualified = false;
 277:/usr/include/boost/function/function_base.hpp ****             out_buffer.members.type.volatile_qualified = false;
 278:/usr/include/boost/function/function_base.hpp ****           }
 279:/usr/include/boost/function/function_base.hpp ****         }
 280:/usr/include/boost/function/function_base.hpp **** 
 281:/usr/include/boost/function/function_base.hpp ****         // Function objects that fit in the small-object buffer.
 282:/usr/include/boost/function/function_base.hpp ****         static inline void
 283:/usr/include/boost/function/function_base.hpp ****         manage_small(const function_buffer& in_buffer, function_buffer& out_buffer,
 284:/usr/include/boost/function/function_base.hpp ****                 functor_manager_operation_type op)
 285:/usr/include/boost/function/function_base.hpp ****         {
 286:/usr/include/boost/function/function_base.hpp ****           if (op == clone_functor_tag || op == move_functor_tag) {
 287:/usr/include/boost/function/function_base.hpp ****             const functor_type* in_functor =
 288:/usr/include/boost/function/function_base.hpp ****               reinterpret_cast<const functor_type*>(in_buffer.data);
 289:/usr/include/boost/function/function_base.hpp ****             new (reinterpret_cast<void*>(out_buffer.data)) functor_type(*in_functor);
 290:/usr/include/boost/function/function_base.hpp **** 
 291:/usr/include/boost/function/function_base.hpp ****             if (op == move_functor_tag) {
 292:/usr/include/boost/function/function_base.hpp ****               functor_type* f = reinterpret_cast<functor_type*>(in_buffer.data);
 293:/usr/include/boost/function/function_base.hpp ****               (void)f; // suppress warning about the value of f not being used (MSVC)
 294:/usr/include/boost/function/function_base.hpp ****               f->~Functor();
 295:/usr/include/boost/function/function_base.hpp ****             }
 296:/usr/include/boost/function/function_base.hpp ****           } else if (op == destroy_functor_tag) {
 297:/usr/include/boost/function/function_base.hpp ****             // Some compilers (Borland, vc6, ...) are unhappy with ~functor_type.
 298:/usr/include/boost/function/function_base.hpp ****              functor_type* f = reinterpret_cast<functor_type*>(out_buffer.data);
 299:/usr/include/boost/function/function_base.hpp ****              (void)f; // suppress warning about the value of f not being used (MSVC)
 300:/usr/include/boost/function/function_base.hpp ****              f->~Functor();
 301:/usr/include/boost/function/function_base.hpp ****           } else if (op == check_functor_type_tag) {
 302:/usr/include/boost/function/function_base.hpp ****              if (*out_buffer.members.type.type == boost::typeindex::type_id<Functor>())
GAS LISTING /tmp/ccvUPO8Q.s 			page 108


 303:/usr/include/boost/function/function_base.hpp ****               out_buffer.members.obj_ptr = in_buffer.data;
 304:/usr/include/boost/function/function_base.hpp ****             else
 305:/usr/include/boost/function/function_base.hpp ****               out_buffer.members.obj_ptr = 0;
 306:/usr/include/boost/function/function_base.hpp ****           } else /* op == get_functor_type_tag */ {
 307:/usr/include/boost/function/function_base.hpp ****             out_buffer.members.type.type = &boost::typeindex::type_id<Functor>().type_info();
 308:/usr/include/boost/function/function_base.hpp ****             out_buffer.members.type.const_qualified = false;
 309:/usr/include/boost/function/function_base.hpp ****             out_buffer.members.type.volatile_qualified = false;
 310:/usr/include/boost/function/function_base.hpp ****           }
 311:/usr/include/boost/function/function_base.hpp ****         }
 312:/usr/include/boost/function/function_base.hpp ****       };
 313:/usr/include/boost/function/function_base.hpp **** 
 314:/usr/include/boost/function/function_base.hpp ****       template<typename Functor>
 315:/usr/include/boost/function/function_base.hpp ****       struct functor_manager
 316:/usr/include/boost/function/function_base.hpp ****       {
 317:/usr/include/boost/function/function_base.hpp ****       private:
 318:/usr/include/boost/function/function_base.hpp ****         typedef Functor functor_type;
 319:/usr/include/boost/function/function_base.hpp **** 
 320:/usr/include/boost/function/function_base.hpp ****         // Function pointers
 321:/usr/include/boost/function/function_base.hpp ****         static inline void
 322:/usr/include/boost/function/function_base.hpp ****         manager(const function_buffer& in_buffer, function_buffer& out_buffer,
 323:/usr/include/boost/function/function_base.hpp ****                 functor_manager_operation_type op, function_ptr_tag)
 324:/usr/include/boost/function/function_base.hpp ****         {
 325:/usr/include/boost/function/function_base.hpp ****           functor_manager_common<Functor>::manage_ptr(in_buffer,out_buffer,op);
 326:/usr/include/boost/function/function_base.hpp ****         }
 327:/usr/include/boost/function/function_base.hpp **** 
 328:/usr/include/boost/function/function_base.hpp ****         // Function objects that fit in the small-object buffer.
 329:/usr/include/boost/function/function_base.hpp ****         static inline void
 330:/usr/include/boost/function/function_base.hpp ****         manager(const function_buffer& in_buffer, function_buffer& out_buffer,
 331:/usr/include/boost/function/function_base.hpp ****                 functor_manager_operation_type op, mpl::true_)
 332:/usr/include/boost/function/function_base.hpp ****         {
 333:/usr/include/boost/function/function_base.hpp ****           functor_manager_common<Functor>::manage_small(in_buffer,out_buffer,op);
 334:/usr/include/boost/function/function_base.hpp ****         }
 335:/usr/include/boost/function/function_base.hpp **** 
 336:/usr/include/boost/function/function_base.hpp ****         // Function objects that require heap allocation
 337:/usr/include/boost/function/function_base.hpp ****         static inline void
 338:/usr/include/boost/function/function_base.hpp ****         manager(const function_buffer& in_buffer, function_buffer& out_buffer,
 339:/usr/include/boost/function/function_base.hpp ****                 functor_manager_operation_type op, mpl::false_)
 340:/usr/include/boost/function/function_base.hpp ****         {
 341:/usr/include/boost/function/function_base.hpp ****           if (op == clone_functor_tag) {
 342:/usr/include/boost/function/function_base.hpp ****             // Clone the functor
 343:/usr/include/boost/function/function_base.hpp ****             // GCC 2.95.3 gets the CV qualifiers wrong here, so we
 344:/usr/include/boost/function/function_base.hpp ****             // can't do the static_cast that we should do.
 345:/usr/include/boost/function/function_base.hpp ****             // jewillco: Changing this to static_cast because GCC 2.95.3 is
 346:/usr/include/boost/function/function_base.hpp ****             // obsolete.
 347:/usr/include/boost/function/function_base.hpp ****             const functor_type* f =
 348:/usr/include/boost/function/function_base.hpp ****               static_cast<const functor_type*>(in_buffer.members.obj_ptr);
 349:/usr/include/boost/function/function_base.hpp ****             functor_type* new_f = new functor_type(*f);
 350:/usr/include/boost/function/function_base.hpp ****             out_buffer.members.obj_ptr = new_f;
 351:/usr/include/boost/function/function_base.hpp ****           } else if (op == move_functor_tag) {
 352:/usr/include/boost/function/function_base.hpp ****             out_buffer.members.obj_ptr = in_buffer.members.obj_ptr;
 353:/usr/include/boost/function/function_base.hpp ****             in_buffer.members.obj_ptr = 0;
 354:/usr/include/boost/function/function_base.hpp ****           } else if (op == destroy_functor_tag) {
 355:/usr/include/boost/function/function_base.hpp ****             /* Cast from the void pointer to the functor pointer type */
 356:/usr/include/boost/function/function_base.hpp ****             functor_type* f =
 357:/usr/include/boost/function/function_base.hpp ****               static_cast<functor_type*>(out_buffer.members.obj_ptr);
 358:/usr/include/boost/function/function_base.hpp ****             delete f;
 359:/usr/include/boost/function/function_base.hpp ****             out_buffer.members.obj_ptr = 0;
GAS LISTING /tmp/ccvUPO8Q.s 			page 109


 360:/usr/include/boost/function/function_base.hpp ****           } else if (op == check_functor_type_tag) {
 361:/usr/include/boost/function/function_base.hpp ****             if (*out_buffer.members.type.type == boost::typeindex::type_id<Functor>())
 362:/usr/include/boost/function/function_base.hpp ****               out_buffer.members.obj_ptr = in_buffer.members.obj_ptr;
 363:/usr/include/boost/function/function_base.hpp ****             else
 364:/usr/include/boost/function/function_base.hpp ****               out_buffer.members.obj_ptr = 0;
 365:/usr/include/boost/function/function_base.hpp ****           } else /* op == get_functor_type_tag */ {
 366:/usr/include/boost/function/function_base.hpp ****             out_buffer.members.type.type = &boost::typeindex::type_id<Functor>().type_info();
 367:/usr/include/boost/function/function_base.hpp ****             out_buffer.members.type.const_qualified = false;
 368:/usr/include/boost/function/function_base.hpp ****             out_buffer.members.type.volatile_qualified = false;
 369:/usr/include/boost/function/function_base.hpp ****           }
 370:/usr/include/boost/function/function_base.hpp ****         }
 371:/usr/include/boost/function/function_base.hpp **** 
 372:/usr/include/boost/function/function_base.hpp ****         // For function objects, we determine whether the function
 373:/usr/include/boost/function/function_base.hpp ****         // object can use the small-object optimization buffer or
 374:/usr/include/boost/function/function_base.hpp ****         // whether we need to allocate it on the heap.
 375:/usr/include/boost/function/function_base.hpp ****         static inline void
 376:/usr/include/boost/function/function_base.hpp ****         manager(const function_buffer& in_buffer, function_buffer& out_buffer,
 377:/usr/include/boost/function/function_base.hpp ****                 functor_manager_operation_type op, function_obj_tag)
 378:/usr/include/boost/function/function_base.hpp ****         {
 379:/usr/include/boost/function/function_base.hpp ****           manager(in_buffer, out_buffer, op,
 380:/usr/include/boost/function/function_base.hpp ****                   mpl::bool_<(function_allows_small_object_optimization<functor_type>::value)>());
 381:/usr/include/boost/function/function_base.hpp ****         }
 382:/usr/include/boost/function/function_base.hpp **** 
 383:/usr/include/boost/function/function_base.hpp ****         // For member pointers, we use the small-object optimization buffer.
 384:/usr/include/boost/function/function_base.hpp ****         static inline void
 385:/usr/include/boost/function/function_base.hpp ****         manager(const function_buffer& in_buffer, function_buffer& out_buffer,
 386:/usr/include/boost/function/function_base.hpp ****                 functor_manager_operation_type op, member_ptr_tag)
 387:/usr/include/boost/function/function_base.hpp ****         {
 388:/usr/include/boost/function/function_base.hpp ****           manager(in_buffer, out_buffer, op, mpl::true_());
 389:/usr/include/boost/function/function_base.hpp ****         }
 390:/usr/include/boost/function/function_base.hpp **** 
 391:/usr/include/boost/function/function_base.hpp ****       public:
 392:/usr/include/boost/function/function_base.hpp ****         /* Dispatch to an appropriate manager based on whether we have a
 393:/usr/include/boost/function/function_base.hpp ****            function pointer or a function object pointer. */
 394:/usr/include/boost/function/function_base.hpp ****         static inline void
 395:/usr/include/boost/function/function_base.hpp ****         manage(const function_buffer& in_buffer, function_buffer& out_buffer,
 396:/usr/include/boost/function/function_base.hpp ****                functor_manager_operation_type op)
 397:/usr/include/boost/function/function_base.hpp ****         {
 398:/usr/include/boost/function/function_base.hpp ****           typedef typename get_function_tag<functor_type>::type tag_type;
 399:/usr/include/boost/function/function_base.hpp ****           switch (op) {
 400:/usr/include/boost/function/function_base.hpp ****           case get_functor_type_tag:
 401:/usr/include/boost/function/function_base.hpp ****             out_buffer.members.type.type = &boost::typeindex::type_id<functor_type>().type_info();
 402:/usr/include/boost/function/function_base.hpp ****             out_buffer.members.type.const_qualified = false;
 403:/usr/include/boost/function/function_base.hpp ****             out_buffer.members.type.volatile_qualified = false;
 404:/usr/include/boost/function/function_base.hpp ****             return;
 405:/usr/include/boost/function/function_base.hpp **** 
 406:/usr/include/boost/function/function_base.hpp ****           default:
 407:/usr/include/boost/function/function_base.hpp ****             manager(in_buffer, out_buffer, op, tag_type());
 408:/usr/include/boost/function/function_base.hpp ****             return;
 409:/usr/include/boost/function/function_base.hpp ****           }
 410:/usr/include/boost/function/function_base.hpp ****         }
 411:/usr/include/boost/function/function_base.hpp ****       };
 412:/usr/include/boost/function/function_base.hpp **** 
 413:/usr/include/boost/function/function_base.hpp ****       template<typename Functor, typename Allocator>
 414:/usr/include/boost/function/function_base.hpp ****       struct functor_manager_a
 415:/usr/include/boost/function/function_base.hpp ****       {
 416:/usr/include/boost/function/function_base.hpp ****       private:
GAS LISTING /tmp/ccvUPO8Q.s 			page 110


 417:/usr/include/boost/function/function_base.hpp ****         typedef Functor functor_type;
 418:/usr/include/boost/function/function_base.hpp **** 
 419:/usr/include/boost/function/function_base.hpp ****         // Function pointers
 420:/usr/include/boost/function/function_base.hpp ****         static inline void
 421:/usr/include/boost/function/function_base.hpp ****         manager(const function_buffer& in_buffer, function_buffer& out_buffer,
 422:/usr/include/boost/function/function_base.hpp ****                 functor_manager_operation_type op, function_ptr_tag)
 423:/usr/include/boost/function/function_base.hpp ****         {
 424:/usr/include/boost/function/function_base.hpp ****           functor_manager_common<Functor>::manage_ptr(in_buffer,out_buffer,op);
 425:/usr/include/boost/function/function_base.hpp ****         }
 426:/usr/include/boost/function/function_base.hpp **** 
 427:/usr/include/boost/function/function_base.hpp ****         // Function objects that fit in the small-object buffer.
 428:/usr/include/boost/function/function_base.hpp ****         static inline void
 429:/usr/include/boost/function/function_base.hpp ****         manager(const function_buffer& in_buffer, function_buffer& out_buffer,
 430:/usr/include/boost/function/function_base.hpp ****                 functor_manager_operation_type op, mpl::true_)
 431:/usr/include/boost/function/function_base.hpp ****         {
 432:/usr/include/boost/function/function_base.hpp ****           functor_manager_common<Functor>::manage_small(in_buffer,out_buffer,op);
 433:/usr/include/boost/function/function_base.hpp ****         }
 434:/usr/include/boost/function/function_base.hpp **** 
 435:/usr/include/boost/function/function_base.hpp ****         // Function objects that require heap allocation
 436:/usr/include/boost/function/function_base.hpp ****         static inline void
 437:/usr/include/boost/function/function_base.hpp ****         manager(const function_buffer& in_buffer, function_buffer& out_buffer,
 438:/usr/include/boost/function/function_base.hpp ****                 functor_manager_operation_type op, mpl::false_)
 439:/usr/include/boost/function/function_base.hpp ****         {
 440:/usr/include/boost/function/function_base.hpp ****           typedef functor_wrapper<Functor,Allocator> functor_wrapper_type;
 441:/usr/include/boost/function/function_base.hpp ****           typedef typename Allocator::template rebind<functor_wrapper_type>::other
 442:/usr/include/boost/function/function_base.hpp ****             wrapper_allocator_type;
 443:/usr/include/boost/function/function_base.hpp ****           typedef typename wrapper_allocator_type::pointer wrapper_allocator_pointer_type;
 444:/usr/include/boost/function/function_base.hpp **** 
 445:/usr/include/boost/function/function_base.hpp ****           if (op == clone_functor_tag) {
 446:/usr/include/boost/function/function_base.hpp ****             // Clone the functor
 447:/usr/include/boost/function/function_base.hpp ****             // GCC 2.95.3 gets the CV qualifiers wrong here, so we
 448:/usr/include/boost/function/function_base.hpp ****             // can't do the static_cast that we should do.
 449:/usr/include/boost/function/function_base.hpp ****             const functor_wrapper_type* f =
 450:/usr/include/boost/function/function_base.hpp ****               static_cast<const functor_wrapper_type*>(in_buffer.members.obj_ptr);
 451:/usr/include/boost/function/function_base.hpp ****             wrapper_allocator_type wrapper_allocator(static_cast<Allocator const &>(*f));
 452:/usr/include/boost/function/function_base.hpp ****             wrapper_allocator_pointer_type copy = wrapper_allocator.allocate(1);
 453:/usr/include/boost/function/function_base.hpp ****             wrapper_allocator.construct(copy, *f);
 454:/usr/include/boost/function/function_base.hpp **** 
 455:/usr/include/boost/function/function_base.hpp ****             // Get back to the original pointer type
 456:/usr/include/boost/function/function_base.hpp ****             functor_wrapper_type* new_f = static_cast<functor_wrapper_type*>(copy);
 457:/usr/include/boost/function/function_base.hpp ****             out_buffer.members.obj_ptr = new_f;
 458:/usr/include/boost/function/function_base.hpp ****           } else if (op == move_functor_tag) {
 459:/usr/include/boost/function/function_base.hpp ****             out_buffer.members.obj_ptr = in_buffer.members.obj_ptr;
 460:/usr/include/boost/function/function_base.hpp ****             in_buffer.members.obj_ptr = 0;
 461:/usr/include/boost/function/function_base.hpp ****           } else if (op == destroy_functor_tag) {
 462:/usr/include/boost/function/function_base.hpp ****             /* Cast from the void pointer to the functor_wrapper_type */
 463:/usr/include/boost/function/function_base.hpp ****             functor_wrapper_type* victim =
 464:/usr/include/boost/function/function_base.hpp ****               static_cast<functor_wrapper_type*>(in_buffer.members.obj_ptr);
 465:/usr/include/boost/function/function_base.hpp ****             wrapper_allocator_type wrapper_allocator(static_cast<Allocator const &>(*victim));
 466:/usr/include/boost/function/function_base.hpp ****             wrapper_allocator.destroy(victim);
 467:/usr/include/boost/function/function_base.hpp ****             wrapper_allocator.deallocate(victim,1);
 468:/usr/include/boost/function/function_base.hpp ****             out_buffer.members.obj_ptr = 0;
 469:/usr/include/boost/function/function_base.hpp ****           } else if (op == check_functor_type_tag) {
 470:/usr/include/boost/function/function_base.hpp ****             if (*out_buffer.members.type.type == boost::typeindex::type_id<Functor>())
 471:/usr/include/boost/function/function_base.hpp ****               out_buffer.members.obj_ptr = in_buffer.members.obj_ptr;
 472:/usr/include/boost/function/function_base.hpp ****             else
 473:/usr/include/boost/function/function_base.hpp ****               out_buffer.members.obj_ptr = 0;
GAS LISTING /tmp/ccvUPO8Q.s 			page 111


 474:/usr/include/boost/function/function_base.hpp ****           } else /* op == get_functor_type_tag */ {
 475:/usr/include/boost/function/function_base.hpp ****             out_buffer.members.type.type = &boost::typeindex::type_id<Functor>().type_info();
 476:/usr/include/boost/function/function_base.hpp ****             out_buffer.members.type.const_qualified = false;
 477:/usr/include/boost/function/function_base.hpp ****             out_buffer.members.type.volatile_qualified = false;
 478:/usr/include/boost/function/function_base.hpp ****           }
 479:/usr/include/boost/function/function_base.hpp ****         }
 480:/usr/include/boost/function/function_base.hpp **** 
 481:/usr/include/boost/function/function_base.hpp ****         // For function objects, we determine whether the function
 482:/usr/include/boost/function/function_base.hpp ****         // object can use the small-object optimization buffer or
 483:/usr/include/boost/function/function_base.hpp ****         // whether we need to allocate it on the heap.
 484:/usr/include/boost/function/function_base.hpp ****         static inline void
 485:/usr/include/boost/function/function_base.hpp ****         manager(const function_buffer& in_buffer, function_buffer& out_buffer,
 486:/usr/include/boost/function/function_base.hpp ****                 functor_manager_operation_type op, function_obj_tag)
 487:/usr/include/boost/function/function_base.hpp ****         {
 488:/usr/include/boost/function/function_base.hpp ****           manager(in_buffer, out_buffer, op,
 489:/usr/include/boost/function/function_base.hpp ****                   mpl::bool_<(function_allows_small_object_optimization<functor_type>::value)>());
 490:/usr/include/boost/function/function_base.hpp ****         }
 491:/usr/include/boost/function/function_base.hpp **** 
 492:/usr/include/boost/function/function_base.hpp ****       public:
 493:/usr/include/boost/function/function_base.hpp ****         /* Dispatch to an appropriate manager based on whether we have a
 494:/usr/include/boost/function/function_base.hpp ****            function pointer or a function object pointer. */
 495:/usr/include/boost/function/function_base.hpp ****         static inline void
 496:/usr/include/boost/function/function_base.hpp ****         manage(const function_buffer& in_buffer, function_buffer& out_buffer,
 497:/usr/include/boost/function/function_base.hpp ****                functor_manager_operation_type op)
 498:/usr/include/boost/function/function_base.hpp ****         {
 499:/usr/include/boost/function/function_base.hpp ****           typedef typename get_function_tag<functor_type>::type tag_type;
 500:/usr/include/boost/function/function_base.hpp ****           switch (op) {
 501:/usr/include/boost/function/function_base.hpp ****           case get_functor_type_tag:
 502:/usr/include/boost/function/function_base.hpp ****             out_buffer.members.type.type = &boost::typeindex::type_id<functor_type>().type_info();
 503:/usr/include/boost/function/function_base.hpp ****             out_buffer.members.type.const_qualified = false;
 504:/usr/include/boost/function/function_base.hpp ****             out_buffer.members.type.volatile_qualified = false;
 505:/usr/include/boost/function/function_base.hpp ****             return;
 506:/usr/include/boost/function/function_base.hpp **** 
 507:/usr/include/boost/function/function_base.hpp ****           default:
 508:/usr/include/boost/function/function_base.hpp ****             manager(in_buffer, out_buffer, op, tag_type());
 509:/usr/include/boost/function/function_base.hpp ****             return;
 510:/usr/include/boost/function/function_base.hpp ****           }
 511:/usr/include/boost/function/function_base.hpp ****         }
 512:/usr/include/boost/function/function_base.hpp ****       };
 513:/usr/include/boost/function/function_base.hpp **** 
 514:/usr/include/boost/function/function_base.hpp ****       // A type that is only used for comparisons against zero
 515:/usr/include/boost/function/function_base.hpp ****       struct useless_clear_type {};
 516:/usr/include/boost/function/function_base.hpp **** 
 517:/usr/include/boost/function/function_base.hpp **** #ifdef BOOST_NO_SFINAE
 518:/usr/include/boost/function/function_base.hpp ****       // These routines perform comparisons between a Boost.Function
 519:/usr/include/boost/function/function_base.hpp ****       // object and an arbitrary function object (when the last
 520:/usr/include/boost/function/function_base.hpp ****       // parameter is mpl::bool_<false>) or against zero (when the
 521:/usr/include/boost/function/function_base.hpp ****       // last parameter is mpl::bool_<true>). They are only necessary
 522:/usr/include/boost/function/function_base.hpp ****       // for compilers that don't support SFINAE.
 523:/usr/include/boost/function/function_base.hpp ****       template<typename Function, typename Functor>
 524:/usr/include/boost/function/function_base.hpp ****         bool
 525:/usr/include/boost/function/function_base.hpp ****         compare_equal(const Function& f, const Functor&, int, mpl::bool_<true>)
 526:/usr/include/boost/function/function_base.hpp ****         { return f.empty(); }
 527:/usr/include/boost/function/function_base.hpp **** 
 528:/usr/include/boost/function/function_base.hpp ****       template<typename Function, typename Functor>
 529:/usr/include/boost/function/function_base.hpp ****         bool
 530:/usr/include/boost/function/function_base.hpp ****         compare_not_equal(const Function& f, const Functor&, int,
GAS LISTING /tmp/ccvUPO8Q.s 			page 112


 531:/usr/include/boost/function/function_base.hpp ****                           mpl::bool_<true>)
 532:/usr/include/boost/function/function_base.hpp ****         { return !f.empty(); }
 533:/usr/include/boost/function/function_base.hpp **** 
 534:/usr/include/boost/function/function_base.hpp ****       template<typename Function, typename Functor>
 535:/usr/include/boost/function/function_base.hpp ****         bool
 536:/usr/include/boost/function/function_base.hpp ****         compare_equal(const Function& f, const Functor& g, long,
 537:/usr/include/boost/function/function_base.hpp ****                       mpl::bool_<false>)
 538:/usr/include/boost/function/function_base.hpp ****         {
 539:/usr/include/boost/function/function_base.hpp ****           if (const Functor* fp = f.template target<Functor>())
 540:/usr/include/boost/function/function_base.hpp ****             return function_equal(*fp, g);
 541:/usr/include/boost/function/function_base.hpp ****           else return false;
 542:/usr/include/boost/function/function_base.hpp ****         }
 543:/usr/include/boost/function/function_base.hpp **** 
 544:/usr/include/boost/function/function_base.hpp ****       template<typename Function, typename Functor>
 545:/usr/include/boost/function/function_base.hpp ****         bool
 546:/usr/include/boost/function/function_base.hpp ****         compare_equal(const Function& f, const reference_wrapper<Functor>& g,
 547:/usr/include/boost/function/function_base.hpp ****                       int, mpl::bool_<false>)
 548:/usr/include/boost/function/function_base.hpp ****         {
 549:/usr/include/boost/function/function_base.hpp ****           if (const Functor* fp = f.template target<Functor>())
 550:/usr/include/boost/function/function_base.hpp ****             return fp == g.get_pointer();
 551:/usr/include/boost/function/function_base.hpp ****           else return false;
 552:/usr/include/boost/function/function_base.hpp ****         }
 553:/usr/include/boost/function/function_base.hpp **** 
 554:/usr/include/boost/function/function_base.hpp ****       template<typename Function, typename Functor>
 555:/usr/include/boost/function/function_base.hpp ****         bool
 556:/usr/include/boost/function/function_base.hpp ****         compare_not_equal(const Function& f, const Functor& g, long,
 557:/usr/include/boost/function/function_base.hpp ****                           mpl::bool_<false>)
 558:/usr/include/boost/function/function_base.hpp ****         {
 559:/usr/include/boost/function/function_base.hpp ****           if (const Functor* fp = f.template target<Functor>())
 560:/usr/include/boost/function/function_base.hpp ****             return !function_equal(*fp, g);
 561:/usr/include/boost/function/function_base.hpp ****           else return true;
 562:/usr/include/boost/function/function_base.hpp ****         }
 563:/usr/include/boost/function/function_base.hpp **** 
 564:/usr/include/boost/function/function_base.hpp ****       template<typename Function, typename Functor>
 565:/usr/include/boost/function/function_base.hpp ****         bool
 566:/usr/include/boost/function/function_base.hpp ****         compare_not_equal(const Function& f,
 567:/usr/include/boost/function/function_base.hpp ****                           const reference_wrapper<Functor>& g, int,
 568:/usr/include/boost/function/function_base.hpp ****                           mpl::bool_<false>)
 569:/usr/include/boost/function/function_base.hpp ****         {
 570:/usr/include/boost/function/function_base.hpp ****           if (const Functor* fp = f.template target<Functor>())
 571:/usr/include/boost/function/function_base.hpp ****             return fp != g.get_pointer();
 572:/usr/include/boost/function/function_base.hpp ****           else return true;
 573:/usr/include/boost/function/function_base.hpp ****         }
 574:/usr/include/boost/function/function_base.hpp **** #endif // BOOST_NO_SFINAE
 575:/usr/include/boost/function/function_base.hpp **** 
 576:/usr/include/boost/function/function_base.hpp ****       /**
 577:/usr/include/boost/function/function_base.hpp ****        * Stores the "manager" portion of the vtable for a
 578:/usr/include/boost/function/function_base.hpp ****        * boost::function object.
 579:/usr/include/boost/function/function_base.hpp ****        */
 580:/usr/include/boost/function/function_base.hpp ****       struct vtable_base
 581:/usr/include/boost/function/function_base.hpp ****       {
 582:/usr/include/boost/function/function_base.hpp ****         void (*manager)(const function_buffer& in_buffer,
 583:/usr/include/boost/function/function_base.hpp ****                         function_buffer& out_buffer,
 584:/usr/include/boost/function/function_base.hpp ****                         functor_manager_operation_type op);
 585:/usr/include/boost/function/function_base.hpp ****       };
 586:/usr/include/boost/function/function_base.hpp ****     } // end namespace function
 587:/usr/include/boost/function/function_base.hpp ****   } // end namespace detail
GAS LISTING /tmp/ccvUPO8Q.s 			page 113


 588:/usr/include/boost/function/function_base.hpp **** 
 589:/usr/include/boost/function/function_base.hpp **** /**
 590:/usr/include/boost/function/function_base.hpp ****  * The function_base class contains the basic elements needed for the
 591:/usr/include/boost/function/function_base.hpp ****  * function1, function2, function3, etc. classes. It is common to all
 592:/usr/include/boost/function/function_base.hpp ****  * functions (and as such can be used to tell if we have one of the
 593:/usr/include/boost/function/function_base.hpp ****  * functionN objects).
 594:/usr/include/boost/function/function_base.hpp ****  */
 595:/usr/include/boost/function/function_base.hpp **** class function_base
 596:/usr/include/boost/function/function_base.hpp **** {
 597:/usr/include/boost/function/function_base.hpp **** public:
 598:/usr/include/boost/function/function_base.hpp ****   function_base() : vtable(0) { }
 1645              		.loc 13 598 0
 1646              		.cfi_startproc
 1647 0000 55       		pushq	%rbp
 1648              		.cfi_def_cfa_offset 16
 1649              		.cfi_offset 6, -16
 1650 0001 4889E5   		movq	%rsp, %rbp
 1651              		.cfi_def_cfa_register 6
 1652 0004 48897DF8 		movq	%rdi, -8(%rbp)
 1653              	.LBB21:
 1654              		.loc 13 598 0
 1655 0008 488B45F8 		movq	-8(%rbp), %rax
 1656 000c 48C70000 		movq	$0, (%rax)
 1656      000000
 1657              	.LBE21:
 1658 0013 90       		nop
 1659 0014 5D       		popq	%rbp
 1660              		.cfi_def_cfa 7, 8
 1661 0015 C3       		ret
 1662              		.cfi_endproc
 1663              	.LFE7759:
 1665              		.weak	_ZN5boost13function_baseC1Ev
 1666              		.set	_ZN5boost13function_baseC1Ev,_ZN5boost13function_baseC2Ev
 1667              		.section	.text._ZNK5boost13function_base5emptyEv,"axG",@progbits,_ZNK5boost13function_base5emptyEv
 1668              		.align 2
 1669              		.weak	_ZNK5boost13function_base5emptyEv
 1671              	_ZNK5boost13function_base5emptyEv:
 1672              	.LFB7761:
 599:/usr/include/boost/function/function_base.hpp **** 
 600:/usr/include/boost/function/function_base.hpp ****   /** Determine if the function is empty (i.e., has no target). */
 601:/usr/include/boost/function/function_base.hpp ****   bool empty() const { return !vtable; }
 1673              		.loc 13 601 0
 1674              		.cfi_startproc
 1675 0000 55       		pushq	%rbp
 1676              		.cfi_def_cfa_offset 16
 1677              		.cfi_offset 6, -16
 1678 0001 4889E5   		movq	%rsp, %rbp
 1679              		.cfi_def_cfa_register 6
 1680 0004 48897DF8 		movq	%rdi, -8(%rbp)
 1681              		.loc 13 601 0
 1682 0008 488B45F8 		movq	-8(%rbp), %rax
 1683 000c 488B00   		movq	(%rax), %rax
 1684 000f 4885C0   		testq	%rax, %rax
 1685 0012 0F94C0   		sete	%al
 1686 0015 5D       		popq	%rbp
 1687              		.cfi_def_cfa 7, 8
 1688 0016 C3       		ret
GAS LISTING /tmp/ccvUPO8Q.s 			page 114


 1689              		.cfi_endproc
 1690              	.LFE7761:
 1692              		.section	.text._ZNK5boost13function_base28has_trivial_copy_and_destroyEv,"axG",@progbits,_ZNK5boos
 1693              		.align 2
 1694              		.weak	_ZNK5boost13function_base28has_trivial_copy_and_destroyEv
 1696              	_ZNK5boost13function_base28has_trivial_copy_and_destroyEv:
 1697              	.LFB7767:
 602:/usr/include/boost/function/function_base.hpp **** 
 603:/usr/include/boost/function/function_base.hpp ****   /** Retrieve the type of the stored function object, or type_id<void>()
 604:/usr/include/boost/function/function_base.hpp ****       if this is empty. */
 605:/usr/include/boost/function/function_base.hpp ****   const boost::typeindex::type_info& target_type() const
 606:/usr/include/boost/function/function_base.hpp ****   {
 607:/usr/include/boost/function/function_base.hpp ****     if (!vtable) return boost::typeindex::type_id<void>().type_info();
 608:/usr/include/boost/function/function_base.hpp **** 
 609:/usr/include/boost/function/function_base.hpp ****     detail::function::function_buffer type;
 610:/usr/include/boost/function/function_base.hpp ****     get_vtable()->manager(functor, type, detail::function::get_functor_type_tag);
 611:/usr/include/boost/function/function_base.hpp ****     return *type.members.type.type;
 612:/usr/include/boost/function/function_base.hpp ****   }
 613:/usr/include/boost/function/function_base.hpp **** 
 614:/usr/include/boost/function/function_base.hpp ****   template<typename Functor>
 615:/usr/include/boost/function/function_base.hpp ****     Functor* target()
 616:/usr/include/boost/function/function_base.hpp ****     {
 617:/usr/include/boost/function/function_base.hpp ****       if (!vtable) return 0;
 618:/usr/include/boost/function/function_base.hpp **** 
 619:/usr/include/boost/function/function_base.hpp ****       detail::function::function_buffer type_result;
 620:/usr/include/boost/function/function_base.hpp ****       type_result.members.type.type = &boost::typeindex::type_id<Functor>().type_info();
 621:/usr/include/boost/function/function_base.hpp ****       type_result.members.type.const_qualified = is_const<Functor>::value;
 622:/usr/include/boost/function/function_base.hpp ****       type_result.members.type.volatile_qualified = is_volatile<Functor>::value;
 623:/usr/include/boost/function/function_base.hpp ****       get_vtable()->manager(functor, type_result,
 624:/usr/include/boost/function/function_base.hpp ****                       detail::function::check_functor_type_tag);
 625:/usr/include/boost/function/function_base.hpp ****       return static_cast<Functor*>(type_result.members.obj_ptr);
 626:/usr/include/boost/function/function_base.hpp ****     }
 627:/usr/include/boost/function/function_base.hpp **** 
 628:/usr/include/boost/function/function_base.hpp ****   template<typename Functor>
 629:/usr/include/boost/function/function_base.hpp ****     const Functor* target() const
 630:/usr/include/boost/function/function_base.hpp ****     {
 631:/usr/include/boost/function/function_base.hpp ****       if (!vtable) return 0;
 632:/usr/include/boost/function/function_base.hpp **** 
 633:/usr/include/boost/function/function_base.hpp ****       detail::function::function_buffer type_result;
 634:/usr/include/boost/function/function_base.hpp ****       type_result.members.type.type = &boost::typeindex::type_id<Functor>().type_info();
 635:/usr/include/boost/function/function_base.hpp ****       type_result.members.type.const_qualified = true;
 636:/usr/include/boost/function/function_base.hpp ****       type_result.members.type.volatile_qualified = is_volatile<Functor>::value;
 637:/usr/include/boost/function/function_base.hpp ****       get_vtable()->manager(functor, type_result,
 638:/usr/include/boost/function/function_base.hpp ****                       detail::function::check_functor_type_tag);
 639:/usr/include/boost/function/function_base.hpp ****       // GCC 2.95.3 gets the CV qualifiers wrong here, so we
 640:/usr/include/boost/function/function_base.hpp ****       // can't do the static_cast that we should do.
 641:/usr/include/boost/function/function_base.hpp ****       return static_cast<const Functor*>(type_result.members.obj_ptr);
 642:/usr/include/boost/function/function_base.hpp ****     }
 643:/usr/include/boost/function/function_base.hpp **** 
 644:/usr/include/boost/function/function_base.hpp ****   template<typename F>
 645:/usr/include/boost/function/function_base.hpp ****     bool contains(const F& f) const
 646:/usr/include/boost/function/function_base.hpp ****     {
 647:/usr/include/boost/function/function_base.hpp ****       if (const F* fp = this->template target<F>())
 648:/usr/include/boost/function/function_base.hpp ****       {
 649:/usr/include/boost/function/function_base.hpp ****         return function_equal(*fp, f);
 650:/usr/include/boost/function/function_base.hpp ****       } else {
 651:/usr/include/boost/function/function_base.hpp ****         return false;
GAS LISTING /tmp/ccvUPO8Q.s 			page 115


 652:/usr/include/boost/function/function_base.hpp ****       }
 653:/usr/include/boost/function/function_base.hpp ****     }
 654:/usr/include/boost/function/function_base.hpp **** 
 655:/usr/include/boost/function/function_base.hpp **** #if defined(__GNUC__) && __GNUC__ == 3 && __GNUC_MINOR__ <= 3
 656:/usr/include/boost/function/function_base.hpp ****   // GCC 3.3 and newer cannot copy with the global operator==, due to
 657:/usr/include/boost/function/function_base.hpp ****   // problems with instantiation of function return types before it
 658:/usr/include/boost/function/function_base.hpp ****   // has been verified that the argument types match up.
 659:/usr/include/boost/function/function_base.hpp ****   template<typename Functor>
 660:/usr/include/boost/function/function_base.hpp ****     BOOST_FUNCTION_ENABLE_IF_NOT_INTEGRAL(Functor, bool)
 661:/usr/include/boost/function/function_base.hpp ****     operator==(Functor g) const
 662:/usr/include/boost/function/function_base.hpp ****     {
 663:/usr/include/boost/function/function_base.hpp ****       if (const Functor* fp = target<Functor>())
 664:/usr/include/boost/function/function_base.hpp ****         return function_equal(*fp, g);
 665:/usr/include/boost/function/function_base.hpp ****       else return false;
 666:/usr/include/boost/function/function_base.hpp ****     }
 667:/usr/include/boost/function/function_base.hpp **** 
 668:/usr/include/boost/function/function_base.hpp ****   template<typename Functor>
 669:/usr/include/boost/function/function_base.hpp ****     BOOST_FUNCTION_ENABLE_IF_NOT_INTEGRAL(Functor, bool)
 670:/usr/include/boost/function/function_base.hpp ****     operator!=(Functor g) const
 671:/usr/include/boost/function/function_base.hpp ****     {
 672:/usr/include/boost/function/function_base.hpp ****       if (const Functor* fp = target<Functor>())
 673:/usr/include/boost/function/function_base.hpp ****         return !function_equal(*fp, g);
 674:/usr/include/boost/function/function_base.hpp ****       else return true;
 675:/usr/include/boost/function/function_base.hpp ****     }
 676:/usr/include/boost/function/function_base.hpp **** #endif
 677:/usr/include/boost/function/function_base.hpp **** 
 678:/usr/include/boost/function/function_base.hpp **** public: // should be protected, but GCC 2.95.3 will fail to allow access
 679:/usr/include/boost/function/function_base.hpp ****   detail::function::vtable_base* get_vtable() const {
 680:/usr/include/boost/function/function_base.hpp ****     return reinterpret_cast<detail::function::vtable_base*>(
 681:/usr/include/boost/function/function_base.hpp ****              reinterpret_cast<std::size_t>(vtable) & ~static_cast<std::size_t>(0x01));
 682:/usr/include/boost/function/function_base.hpp ****   }
 683:/usr/include/boost/function/function_base.hpp **** 
 684:/usr/include/boost/function/function_base.hpp ****   bool has_trivial_copy_and_destroy() const {
 1698              		.loc 13 684 0
 1699              		.cfi_startproc
 1700 0000 55       		pushq	%rbp
 1701              		.cfi_def_cfa_offset 16
 1702              		.cfi_offset 6, -16
 1703 0001 4889E5   		movq	%rsp, %rbp
 1704              		.cfi_def_cfa_register 6
 1705 0004 48897DF8 		movq	%rdi, -8(%rbp)
 685:/usr/include/boost/function/function_base.hpp ****     return reinterpret_cast<std::size_t>(vtable) & 0x01;
 1706              		.loc 13 685 0
 1707 0008 488B45F8 		movq	-8(%rbp), %rax
 1708 000c 488B00   		movq	(%rax), %rax
 1709 000f 83E001   		andl	$1, %eax
 1710 0012 4885C0   		testq	%rax, %rax
 1711 0015 0F95C0   		setne	%al
 686:/usr/include/boost/function/function_base.hpp ****   }
 1712              		.loc 13 686 0
 1713 0018 5D       		popq	%rbp
 1714              		.cfi_def_cfa 7, 8
 1715 0019 C3       		ret
 1716              		.cfi_endproc
 1717              	.LFE7767:
 1719              		.section	.rodata
 1720              	.LC2:
GAS LISTING /tmp/ccvUPO8Q.s 			page 116


 1721 0024 63616C6C 		.string	"call to empty boost::function"
 1721      20746F20 
 1721      656D7074 
 1721      7920626F 
 1721      6F73743A 
 1722              		.section	.text._ZN5boost17bad_function_callC2Ev,"axG",@progbits,_ZN5boost17bad_function_callC5Ev,c
 1723              		.align 2
 1724              		.weak	_ZN5boost17bad_function_callC2Ev
 1726              	_ZN5boost17bad_function_callC2Ev:
 1727              	.LFB7769:
 687:/usr/include/boost/function/function_base.hpp **** 
 688:/usr/include/boost/function/function_base.hpp ****   detail::function::vtable_base* vtable;
 689:/usr/include/boost/function/function_base.hpp ****   mutable detail::function::function_buffer functor;
 690:/usr/include/boost/function/function_base.hpp **** };
 691:/usr/include/boost/function/function_base.hpp **** 
 692:/usr/include/boost/function/function_base.hpp **** /**
 693:/usr/include/boost/function/function_base.hpp ****  * The bad_function_call exception class is thrown when a boost::function
 694:/usr/include/boost/function/function_base.hpp ****  * object is invoked
 695:/usr/include/boost/function/function_base.hpp ****  */
 696:/usr/include/boost/function/function_base.hpp **** class bad_function_call : public std::runtime_error
 697:/usr/include/boost/function/function_base.hpp **** {
 698:/usr/include/boost/function/function_base.hpp **** public:
 699:/usr/include/boost/function/function_base.hpp ****   bad_function_call() : std::runtime_error("call to empty boost::function") {}
 1728              		.loc 13 699 0
 1729              		.cfi_startproc
 1730 0000 55       		pushq	%rbp
 1731              		.cfi_def_cfa_offset 16
 1732              		.cfi_offset 6, -16
 1733 0001 4889E5   		movq	%rsp, %rbp
 1734              		.cfi_def_cfa_register 6
 1735 0004 4883EC10 		subq	$16, %rsp
 1736 0008 48897DF8 		movq	%rdi, -8(%rbp)
 1737              	.LBB22:
 1738              		.loc 13 699 0
 1739 000c 488B45F8 		movq	-8(%rbp), %rax
 1740 0010 488D3500 		leaq	.LC2(%rip), %rsi
 1740      000000
 1741 0017 4889C7   		movq	%rax, %rdi
 1742 001a E8000000 		call	_ZNSt13runtime_errorC2EPKc@PLT
 1742      00
 1743 001f 488D1500 		leaq	16+_ZTVN5boost17bad_function_callE(%rip), %rdx
 1743      000000
 1744 0026 488B45F8 		movq	-8(%rbp), %rax
 1745 002a 488910   		movq	%rdx, (%rax)
 1746              	.LBE22:
 1747 002d 90       		nop
 1748 002e C9       		leave
 1749              		.cfi_def_cfa 7, 8
 1750 002f C3       		ret
 1751              		.cfi_endproc
 1752              	.LFE7769:
 1754              		.weak	_ZN5boost17bad_function_callC1Ev
 1755              		.set	_ZN5boost17bad_function_callC1Ev,_ZN5boost17bad_function_callC2Ev
 1756              		.section	.text._ZN5boost10shared_ptrIN2gr12io_signatureEED2Ev,"axG",@progbits,_ZN5boost10shared_pt
 1757              		.align 2
 1758              		.weak	_ZN5boost10shared_ptrIN2gr12io_signatureEED2Ev
 1760              	_ZN5boost10shared_ptrIN2gr12io_signatureEED2Ev:
GAS LISTING /tmp/ccvUPO8Q.s 			page 117


 1761              	.LFB8623:
 244:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 245:/usr/include/boost/smart_ptr/shared_ptr.hpp **** #endif // _MANAGED
 246:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 247:/usr/include/boost/smart_ptr/shared_ptr.hpp **** #if !defined( BOOST_NO_SFINAE ) && !defined( BOOST_NO_TEMPLATE_PARTIAL_SPECIALIZATION ) && !defined
 248:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 249:/usr/include/boost/smart_ptr/shared_ptr.hpp **** // rvalue auto_ptr support based on a technique by Dave Abrahams
 250:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 251:/usr/include/boost/smart_ptr/shared_ptr.hpp **** template< class T, class R > struct sp_enable_if_auto_ptr
 252:/usr/include/boost/smart_ptr/shared_ptr.hpp **** {
 253:/usr/include/boost/smart_ptr/shared_ptr.hpp **** };
 254:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 255:/usr/include/boost/smart_ptr/shared_ptr.hpp **** template< class T, class R > struct sp_enable_if_auto_ptr< std::auto_ptr< T >, R >
 256:/usr/include/boost/smart_ptr/shared_ptr.hpp **** {
 257:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     typedef R type;
 258:/usr/include/boost/smart_ptr/shared_ptr.hpp **** }; 
 259:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 260:/usr/include/boost/smart_ptr/shared_ptr.hpp **** #endif
 261:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 262:/usr/include/boost/smart_ptr/shared_ptr.hpp **** // sp_assert_convertible
 263:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 264:/usr/include/boost/smart_ptr/shared_ptr.hpp **** template< class Y, class T > inline void sp_assert_convertible()
 265:/usr/include/boost/smart_ptr/shared_ptr.hpp **** {
 266:/usr/include/boost/smart_ptr/shared_ptr.hpp **** #if !defined( BOOST_SP_NO_SP_CONVERTIBLE )
 267:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 268:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     // static_assert( sp_convertible< Y, T >::value );
 269:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     typedef char tmp[ sp_convertible< Y, T >::value? 1: -1 ];
 270:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     (void)sizeof( tmp );
 271:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 272:/usr/include/boost/smart_ptr/shared_ptr.hpp **** #else
 273:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 274:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     T* p = static_cast< Y* >( 0 );
 275:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     (void)p;
 276:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 277:/usr/include/boost/smart_ptr/shared_ptr.hpp **** #endif
 278:/usr/include/boost/smart_ptr/shared_ptr.hpp **** }
 279:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 280:/usr/include/boost/smart_ptr/shared_ptr.hpp **** // pointer constructor helper
 281:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 282:/usr/include/boost/smart_ptr/shared_ptr.hpp **** template< class T, class Y > inline void sp_pointer_construct( boost::shared_ptr< T > * ppx, Y * p,
 283:/usr/include/boost/smart_ptr/shared_ptr.hpp **** {
 284:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     boost::detail::shared_count( p ).swap( pn );
 285:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     boost::detail::sp_enable_shared_from_this( ppx, p, p );
 286:/usr/include/boost/smart_ptr/shared_ptr.hpp **** }
 287:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 288:/usr/include/boost/smart_ptr/shared_ptr.hpp **** #if !defined( BOOST_NO_TEMPLATE_PARTIAL_SPECIALIZATION )
 289:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 290:/usr/include/boost/smart_ptr/shared_ptr.hpp **** template< class T, class Y > inline void sp_pointer_construct( boost::shared_ptr< T[] > * /*ppx*/, 
 291:/usr/include/boost/smart_ptr/shared_ptr.hpp **** {
 292:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     sp_assert_convertible< Y[], T[] >();
 293:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     boost::detail::shared_count( p, boost::checked_array_deleter< T >() ).swap( pn );
 294:/usr/include/boost/smart_ptr/shared_ptr.hpp **** }
 295:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 296:/usr/include/boost/smart_ptr/shared_ptr.hpp **** template< class T, std::size_t N, class Y > inline void sp_pointer_construct( boost::shared_ptr< T[
 297:/usr/include/boost/smart_ptr/shared_ptr.hpp **** {
 298:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     sp_assert_convertible< Y[N], T[N] >();
 299:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     boost::detail::shared_count( p, boost::checked_array_deleter< T >() ).swap( pn );
GAS LISTING /tmp/ccvUPO8Q.s 			page 118


 300:/usr/include/boost/smart_ptr/shared_ptr.hpp **** }
 301:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 302:/usr/include/boost/smart_ptr/shared_ptr.hpp **** #endif // !defined( BOOST_NO_TEMPLATE_PARTIAL_SPECIALIZATION )
 303:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 304:/usr/include/boost/smart_ptr/shared_ptr.hpp **** // deleter constructor helper
 305:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 306:/usr/include/boost/smart_ptr/shared_ptr.hpp **** template< class T, class Y > inline void sp_deleter_construct( boost::shared_ptr< T > * ppx, Y * p 
 307:/usr/include/boost/smart_ptr/shared_ptr.hpp **** {
 308:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     boost::detail::sp_enable_shared_from_this( ppx, p, p );
 309:/usr/include/boost/smart_ptr/shared_ptr.hpp **** }
 310:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 311:/usr/include/boost/smart_ptr/shared_ptr.hpp **** #if !defined( BOOST_NO_TEMPLATE_PARTIAL_SPECIALIZATION )
 312:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 313:/usr/include/boost/smart_ptr/shared_ptr.hpp **** template< class T, class Y > inline void sp_deleter_construct( boost::shared_ptr< T[] > * /*ppx*/, 
 314:/usr/include/boost/smart_ptr/shared_ptr.hpp **** {
 315:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     sp_assert_convertible< Y[], T[] >();
 316:/usr/include/boost/smart_ptr/shared_ptr.hpp **** }
 317:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 318:/usr/include/boost/smart_ptr/shared_ptr.hpp **** template< class T, std::size_t N, class Y > inline void sp_deleter_construct( boost::shared_ptr< T[
 319:/usr/include/boost/smart_ptr/shared_ptr.hpp **** {
 320:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     sp_assert_convertible< Y[N], T[N] >();
 321:/usr/include/boost/smart_ptr/shared_ptr.hpp **** }
 322:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 323:/usr/include/boost/smart_ptr/shared_ptr.hpp **** #endif // !defined( BOOST_NO_TEMPLATE_PARTIAL_SPECIALIZATION )
 324:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 325:/usr/include/boost/smart_ptr/shared_ptr.hpp **** } // namespace detail
 326:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 327:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 328:/usr/include/boost/smart_ptr/shared_ptr.hpp **** //
 329:/usr/include/boost/smart_ptr/shared_ptr.hpp **** //  shared_ptr
 330:/usr/include/boost/smart_ptr/shared_ptr.hpp **** //
 331:/usr/include/boost/smart_ptr/shared_ptr.hpp **** //  An enhanced relative of scoped_ptr with reference counted copy semantics.
 332:/usr/include/boost/smart_ptr/shared_ptr.hpp **** //  The object pointed to is deleted when the last shared_ptr pointing to it
 333:/usr/include/boost/smart_ptr/shared_ptr.hpp **** //  is destroyed or reset.
 334:/usr/include/boost/smart_ptr/shared_ptr.hpp **** //
 335:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 336:/usr/include/boost/smart_ptr/shared_ptr.hpp **** template<class T> class shared_ptr
 1762              		.loc 7 336 0
 1763              		.cfi_startproc
 1764 0000 55       		pushq	%rbp
 1765              		.cfi_def_cfa_offset 16
 1766              		.cfi_offset 6, -16
 1767 0001 4889E5   		movq	%rsp, %rbp
 1768              		.cfi_def_cfa_register 6
 1769 0004 4883EC10 		subq	$16, %rsp
 1770 0008 48897DF8 		movq	%rdi, -8(%rbp)
 1771              	.LBB23:
 1772              		.loc 7 336 0
 1773 000c 488B45F8 		movq	-8(%rbp), %rax
 1774 0010 4883C008 		addq	$8, %rax
 1775 0014 4889C7   		movq	%rax, %rdi
 1776 0017 E8000000 		call	_ZN5boost6detail12shared_countD1Ev
 1776      00
 1777              	.LBE23:
 1778 001c 90       		nop
 1779 001d C9       		leave
 1780              		.cfi_def_cfa 7, 8
GAS LISTING /tmp/ccvUPO8Q.s 			page 119


 1781 001e C3       		ret
 1782              		.cfi_endproc
 1783              	.LFE8623:
 1785              		.weak	_ZN5boost10shared_ptrIN2gr12io_signatureEED1Ev
 1786              		.set	_ZN5boost10shared_ptrIN2gr12io_signatureEED1Ev,_ZN5boost10shared_ptrIN2gr12io_signatureEED2Ev
 1787              		.section	.text._ZN2gr11basic_block15has_msg_handlerEN5boost13intrusive_ptrIN3pmt8pmt_baseEEE,"axG"
 1788              		.align 2
 1789              		.weak	_ZN2gr11basic_block15has_msg_handlerEN5boost13intrusive_ptrIN3pmt8pmt_baseEEE
 1791              	_ZN2gr11basic_block15has_msg_handlerEN5boost13intrusive_ptrIN3pmt8pmt_baseEEE:
 1792              	.LFB8637:
 1793              		.file 14 "/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h"
   1:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h **** /* -*- c++ -*- */
   2:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h **** /*
   3:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****  * Copyright 2006,2008,2009,2011,2013 Free Software Foundation, Inc.
   4:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****  *
   5:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****  * This file is part of GNU Radio
   6:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****  *
   7:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****  * GNU Radio is free software; you can redistribute it and/or modify
   8:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****  * it under the terms of the GNU General Public License as published by
   9:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****  * the Free Software Foundation; either version 3, or (at your option)
  10:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****  * any later version.
  11:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****  *
  12:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****  * GNU Radio is distributed in the hope that it will be useful,
  13:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  14:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  15:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****  * GNU General Public License for more details.
  16:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****  *
  17:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****  * You should have received a copy of the GNU General Public License
  18:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****  * along with GNU Radio; see the file COPYING.  If not, write to
  19:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****  * the Free Software Foundation, Inc., 51 Franklin Street,
  20:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****  * Boston, MA 02110-1301, USA.
  21:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****  */
  22:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h **** 
  23:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h **** #ifndef INCLUDED_GR_BASIC_BLOCK_H
  24:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h **** #define INCLUDED_GR_BASIC_BLOCK_H
  25:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h **** 
  26:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h **** #include <gnuradio/api.h>
  27:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h **** #include <gnuradio/sptr_magic.h>
  28:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h **** #include <gnuradio/msg_accepter.h>
  29:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h **** #include <gnuradio/runtime_types.h>
  30:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h **** #include <gnuradio/io_signature.h>
  31:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h **** #include <gnuradio/thread/thread.h>
  32:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h **** #include <boost/enable_shared_from_this.hpp>
  33:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h **** #include <boost/function.hpp>
  34:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h **** #include <boost/foreach.hpp>
  35:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h **** #include <boost/thread/condition_variable.hpp>
  36:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h **** #include <iostream>
  37:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h **** #include <string>
  38:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h **** #include <deque>
  39:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h **** #include <map>
  40:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h **** 
  41:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h **** #ifdef GR_CTRLPORT
  42:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h **** #include <gnuradio/rpcregisterhelpers.h>
  43:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h **** #endif
  44:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h **** 
  45:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h **** namespace gr {
  46:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h **** 
GAS LISTING /tmp/ccvUPO8Q.s 			page 120


  47:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****   /*!
  48:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****    * \brief The abstract base class for all signal processing blocks.
  49:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****    * \ingroup internal
  50:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****    *
  51:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****    * Basic blocks are the bare abstraction of an entity that has a
  52:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****    * name, a set of inputs and outputs, and a message queue.  These
  53:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****    * are never instantiated directly; rather, this is the abstract
  54:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****    * parent class of both gr_hier_block, which is a recursive
  55:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****    * container, and block, which implements actual signal
  56:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****    * processing functions.
  57:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****    */
  58:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****   class GR_RUNTIME_API basic_block : public msg_accepter,
  59:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****                                      public boost::enable_shared_from_this<basic_block>
  60:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****   {
  61:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     typedef boost::function<void(pmt::pmt_t)> msg_handler_t;
  62:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h **** 
  63:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****   private:
  64:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     typedef std::map<pmt::pmt_t , msg_handler_t, pmt::comparator> d_msg_handlers_t;
  65:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     d_msg_handlers_t d_msg_handlers;
  66:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h **** 
  67:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     typedef std::deque<pmt::pmt_t> msg_queue_t;
  68:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     typedef std::map<pmt::pmt_t, msg_queue_t, pmt::comparator> msg_queue_map_t;
  69:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     typedef std::map<pmt::pmt_t, msg_queue_t, pmt::comparator>::iterator msg_queue_map_itr;
  70:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     std::map<pmt::pmt_t, boost::shared_ptr<boost::condition_variable>, pmt::comparator> msg_queue_r
  71:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h **** 
  72:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     gr::thread::mutex mutex;          //< protects all vars
  73:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h **** 
  74:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****   protected:
  75:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     friend class flowgraph;
  76:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     friend class flat_flowgraph; // TODO: will be redundant
  77:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     friend class tpb_thread_body;
  78:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h **** 
  79:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     enum vcolor { WHITE, GREY, BLACK };
  80:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h **** 
  81:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     std::string       d_name;
  82:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     gr::io_signature::sptr d_input_signature;
  83:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     gr::io_signature::sptr d_output_signature;
  84:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     long              d_unique_id;
  85:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     long              d_symbolic_id;
  86:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     std::string       d_symbol_name;
  87:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     std::string       d_symbol_alias;
  88:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     vcolor            d_color;
  89:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     bool              d_rpc_set;
  90:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h **** 
  91:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     msg_queue_map_t msg_queue;
  92:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     std::vector<boost::any> d_rpc_vars; // container for all RPC variables
  93:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h **** 
  94:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     basic_block(void) {} // allows pure virtual interface sub-classes
  95:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h **** 
  96:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     //! Protected constructor prevents instantiation by non-derived classes
  97:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     basic_block(const std::string &name,
  98:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****                 gr::io_signature::sptr input_signature,
  99:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****                 gr::io_signature::sptr output_signature);
 100:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h **** 
 101:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     //! may only be called during constructor
 102:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     void set_input_signature(gr::io_signature::sptr iosig) {
 103:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****       d_input_signature = iosig;
GAS LISTING /tmp/ccvUPO8Q.s 			page 121


 104:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     }
 105:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h **** 
 106:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     //! may only be called during constructor
 107:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     void set_output_signature(gr::io_signature::sptr iosig) {
 108:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****       d_output_signature = iosig;
 109:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     }
 110:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h **** 
 111:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     /*!
 112:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****      * \brief Allow the flowgraph to set for sorting and partitioning
 113:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****      */
 114:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     void set_color(vcolor color) { d_color = color; }
 115:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     vcolor color() const { return d_color; }
 116:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h **** 
 117:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     /*!
 118:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****      * \brief Tests if there is a handler attached to port \p which_port
 119:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****      */
 120:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     virtual bool has_msg_handler(pmt::pmt_t which_port) {
 1794              		.loc 14 120 0
 1795              		.cfi_startproc
 1796 0000 55       		pushq	%rbp
 1797              		.cfi_def_cfa_offset 16
 1798              		.cfi_offset 6, -16
 1799 0001 4889E5   		movq	%rsp, %rbp
 1800              		.cfi_def_cfa_register 6
 1801 0004 4883EC20 		subq	$32, %rsp
 1802 0008 48897DE8 		movq	%rdi, -24(%rbp)
 1803 000c 488975E0 		movq	%rsi, -32(%rbp)
 121:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****       return (d_msg_handlers.find(which_port) != d_msg_handlers.end());
 1804              		.loc 14 121 0
 1805 0010 488B45E8 		movq	-24(%rbp), %rax
 1806 0014 4883C018 		addq	$24, %rax
 1807 0018 4889C7   		movq	%rax, %rdi
 1808 001b E8000000 		call	_ZNSt3mapIN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS0_8functionIFvS4_EEENS2_10comparatorESaIS
 1808      00
 1809 0020 488945F0 		movq	%rax, -16(%rbp)
 1810 0024 488B45E8 		movq	-24(%rbp), %rax
 1811 0028 488D5018 		leaq	24(%rax), %rdx
 1812 002c 488B45E0 		movq	-32(%rbp), %rax
 1813 0030 4889C6   		movq	%rax, %rsi
 1814 0033 4889D7   		movq	%rdx, %rdi
 1815 0036 E8000000 		call	_ZNSt3mapIN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS0_8functionIFvS4_EEENS2_10comparatorESaIS
 1815      00
 1816 003b 488945F8 		movq	%rax, -8(%rbp)
 1817 003f 488D55F0 		leaq	-16(%rbp), %rdx
 1818 0043 488D45F8 		leaq	-8(%rbp), %rax
 1819 0047 4889D6   		movq	%rdx, %rsi
 1820 004a 4889C7   		movq	%rax, %rdi
 1821 004d E8000000 		call	_ZNKSt17_Rb_tree_iteratorISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS1_8functionIFvS5
 1821      00
 122:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     }
 1822              		.loc 14 122 0
 1823 0052 C9       		leave
 1824              		.cfi_def_cfa 7, 8
 1825 0053 C3       		ret
 1826              		.cfi_endproc
 1827              	.LFE8637:
 1829              		.section	.text._ZN2gr11basic_block12dispatch_msgEN5boost13intrusive_ptrIN3pmt8pmt_baseEEES5_,"axG"
GAS LISTING /tmp/ccvUPO8Q.s 			page 122


 1830              		.align 2
 1831              		.weak	_ZN2gr11basic_block12dispatch_msgEN5boost13intrusive_ptrIN3pmt8pmt_baseEEES5_
 1833              	_ZN2gr11basic_block12dispatch_msgEN5boost13intrusive_ptrIN3pmt8pmt_baseEEES5_:
 1834              	.LFB8638:
 123:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h **** 
 124:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     /*
 125:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****      * This function is called by the runtime system to dispatch messages.
 126:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****      *
 127:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****      * The thread-safety guarantees mentioned in set_msg_handler are
 128:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****      * implemented by the callers of this method.
 129:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****      */
 130:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     virtual void dispatch_msg(pmt::pmt_t which_port, pmt::pmt_t msg)
 1835              		.loc 14 130 0
 1836              		.cfi_startproc
 1837              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 1838              		.cfi_lsda 0x1b,.LLSDA8638
 1839 0000 55       		pushq	%rbp
 1840              		.cfi_def_cfa_offset 16
 1841              		.cfi_offset 6, -16
 1842 0001 4889E5   		movq	%rsp, %rbp
 1843              		.cfi_def_cfa_register 6
 1844 0004 53       		pushq	%rbx
 1845 0005 4883EC38 		subq	$56, %rsp
 1846              		.cfi_offset 3, -24
 1847 0009 48897DD8 		movq	%rdi, -40(%rbp)
 1848 000d 488975D0 		movq	%rsi, -48(%rbp)
 1849 0011 488955C8 		movq	%rdx, -56(%rbp)
 131:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     {
 132:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****       // AA Update this
 133:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****       if(has_msg_handler(which_port)) {  // Is there a handler?
 1850              		.loc 14 133 0
 1851 0015 488B45D8 		movq	-40(%rbp), %rax
 1852 0019 488B00   		movq	(%rax), %rax
 1853 001c 4883C018 		addq	$24, %rax
 1854 0020 488B18   		movq	(%rax), %rbx
 1855 0023 488B55D0 		movq	-48(%rbp), %rdx
 1856 0027 488D45E0 		leaq	-32(%rbp), %rax
 1857 002b 4889D6   		movq	%rdx, %rsi
 1858 002e 4889C7   		movq	%rax, %rdi
 1859              	.LEHB8:
 1860 0031 E8000000 		call	_ZN5boost13intrusive_ptrIN3pmt8pmt_baseEEC1ERKS3_
 1860      00
 1861              	.LEHE8:
 1862 0036 488D55E0 		leaq	-32(%rbp), %rdx
 1863 003a 488B45D8 		movq	-40(%rbp), %rax
 1864 003e 4889D6   		movq	%rdx, %rsi
 1865 0041 4889C7   		movq	%rax, %rdi
 1866              	.LEHB9:
 1867 0044 FFD3     		call	*%rbx
 1868              	.LVL5:
 1869              	.LEHE9:
 1870 0046 89C3     		movl	%eax, %ebx
 1871 0048 488D45E0 		leaq	-32(%rbp), %rax
 1872 004c 4889C7   		movq	%rax, %rdi
 1873 004f E8000000 		call	_ZN5boost13intrusive_ptrIN3pmt8pmt_baseEED1Ev
 1873      00
 1874 0054 84DB     		testb	%bl, %bl
GAS LISTING /tmp/ccvUPO8Q.s 			page 123


 1875 0056 747E     		je	.L93
 134:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****         d_msg_handlers[which_port](msg); // Yes, invoke it.
 1876              		.loc 14 134 0
 1877 0058 488B55C8 		movq	-56(%rbp), %rdx
 1878 005c 488D45E8 		leaq	-24(%rbp), %rax
 1879 0060 4889D6   		movq	%rdx, %rsi
 1880 0063 4889C7   		movq	%rax, %rdi
 1881              	.LEHB10:
 1882 0066 E8000000 		call	_ZN5boost13intrusive_ptrIN3pmt8pmt_baseEEC1ERKS3_
 1882      00
 1883              	.LEHE10:
 1884 006b 488B45D8 		movq	-40(%rbp), %rax
 1885 006f 488D5018 		leaq	24(%rax), %rdx
 1886 0073 488B45D0 		movq	-48(%rbp), %rax
 1887 0077 4889C6   		movq	%rax, %rsi
 1888 007a 4889D7   		movq	%rdx, %rdi
 1889              	.LEHB11:
 1890 007d E8000000 		call	_ZNSt3mapIN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS0_8functionIFvS4_EEENS2_10comparatorESaIS
 1890      00
 1891 0082 4889C2   		movq	%rax, %rdx
 1892 0085 488D45E8 		leaq	-24(%rbp), %rax
 1893 0089 4889C6   		movq	%rax, %rsi
 1894 008c 4889D7   		movq	%rdx, %rdi
 1895 008f E8000000 		call	_ZNK5boost9function1IvNS_13intrusive_ptrIN3pmt8pmt_baseEEEEclES4_
 1895      00
 1896              	.LEHE11:
 1897              		.loc 14 134 0 is_stmt 0 discriminator 4
 1898 0094 488D45E8 		leaq	-24(%rbp), %rax
 1899 0098 4889C7   		movq	%rax, %rdi
 1900 009b E8000000 		call	_ZN5boost13intrusive_ptrIN3pmt8pmt_baseEED1Ev
 1900      00
 135:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****       }
 136:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     }
 1901              		.loc 14 136 0 is_stmt 1 discriminator 4
 1902 00a0 EB34     		jmp	.L93
 1903              	.L91:
 1904 00a2 4889C3   		movq	%rax, %rbx
 133:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****         d_msg_handlers[which_port](msg); // Yes, invoke it.
 1905              		.loc 14 133 0
 1906 00a5 488D45E0 		leaq	-32(%rbp), %rax
 1907 00a9 4889C7   		movq	%rax, %rdi
 1908 00ac E8000000 		call	_ZN5boost13intrusive_ptrIN3pmt8pmt_baseEED1Ev
 1908      00
 1909 00b1 4889D8   		movq	%rbx, %rax
 1910 00b4 4889C7   		movq	%rax, %rdi
 1911              	.LEHB12:
 1912 00b7 E8000000 		call	_Unwind_Resume@PLT
 1912      00
 1913              	.L92:
 1914 00bc 4889C3   		movq	%rax, %rbx
 134:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****         d_msg_handlers[which_port](msg); // Yes, invoke it.
 1915              		.loc 14 134 0
 1916 00bf 488D45E8 		leaq	-24(%rbp), %rax
 1917 00c3 4889C7   		movq	%rax, %rdi
 1918 00c6 E8000000 		call	_ZN5boost13intrusive_ptrIN3pmt8pmt_baseEED1Ev
 1918      00
 1919 00cb 4889D8   		movq	%rbx, %rax
GAS LISTING /tmp/ccvUPO8Q.s 			page 124


 1920 00ce 4889C7   		movq	%rax, %rdi
 1921 00d1 E8000000 		call	_Unwind_Resume@PLT
 1921      00
 1922              	.LEHE12:
 1923              	.L93:
 1924              		.loc 14 136 0
 1925 00d6 90       		nop
 1926 00d7 4883C438 		addq	$56, %rsp
 1927 00db 5B       		popq	%rbx
 1928 00dc 5D       		popq	%rbp
 1929              		.cfi_def_cfa 7, 8
 1930 00dd C3       		ret
 1931              		.cfi_endproc
 1932              	.LFE8638:
 1933              		.section	.gcc_except_table._ZN2gr11basic_block12dispatch_msgEN5boost13intrusive_ptrIN3pmt8pmt_base
 1934              	.LLSDA8638:
 1935 0000 FF       		.byte	0xff
 1936 0001 FF       		.byte	0xff
 1937 0002 01       		.byte	0x1
 1938 0003 17       		.uleb128 .LLSDACSE8638-.LLSDACSB8638
 1939              	.LLSDACSB8638:
 1940 0004 31       		.uleb128 .LEHB8-.LFB8638
 1941 0005 05       		.uleb128 .LEHE8-.LEHB8
 1942 0006 00       		.uleb128 0
 1943 0007 00       		.uleb128 0
 1944 0008 44       		.uleb128 .LEHB9-.LFB8638
 1945 0009 02       		.uleb128 .LEHE9-.LEHB9
 1946 000a A201     		.uleb128 .L91-.LFB8638
 1947 000c 00       		.uleb128 0
 1948 000d 66       		.uleb128 .LEHB10-.LFB8638
 1949 000e 05       		.uleb128 .LEHE10-.LEHB10
 1950 000f 00       		.uleb128 0
 1951 0010 00       		.uleb128 0
 1952 0011 7D       		.uleb128 .LEHB11-.LFB8638
 1953 0012 17       		.uleb128 .LEHE11-.LEHB11
 1954 0013 BC01     		.uleb128 .L92-.LFB8638
 1955 0015 00       		.uleb128 0
 1956 0016 B701     		.uleb128 .LEHB12-.LFB8638
 1957 0018 1F       		.uleb128 .LEHE12-.LEHB12
 1958 0019 00       		.uleb128 0
 1959 001a 00       		.uleb128 0
 1960              	.LLSDACSE8638:
 1961              		.section	.text._ZN2gr11basic_block12dispatch_msgEN5boost13intrusive_ptrIN3pmt8pmt_baseEEES5_,"axG"
 1963              		.section	.text._ZN2gr11basic_block20message_port_is_hierEN5boost13intrusive_ptrIN3pmt8pmt_baseEEE,
 1964              		.align 2
 1965              		.weak	_ZN2gr11basic_block20message_port_is_hierEN5boost13intrusive_ptrIN3pmt8pmt_baseEEE
 1967              	_ZN2gr11basic_block20message_port_is_hierEN5boost13intrusive_ptrIN3pmt8pmt_baseEEE:
 1968              	.LFB8648:
 137:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h **** 
 138:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     // Message passing interface
 139:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     pmt::pmt_t d_message_subscribers;
 140:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h **** 
 141:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****   public:
 142:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     pmt::pmt_t message_subscribers(pmt::pmt_t port);
 143:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     virtual ~basic_block();
 144:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     long unique_id() const { return d_unique_id; }
 145:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     long symbolic_id() const { return d_symbolic_id; }
GAS LISTING /tmp/ccvUPO8Q.s 			page 125


 146:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h **** 
 147:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     /*! The name of the block */
 148:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     std::string name() const { return d_name; }
 149:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h **** 
 150:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     /*!
 151:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****      * The sybolic name of the block, which is used in the
 152:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****      * block_registry. The name is assigned by the block's constructor
 153:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****      * and never changes during the life of the block.
 154:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****      */
 155:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     std::string symbol_name() const { return d_symbol_name; }
 156:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h **** 
 157:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     gr::io_signature::sptr input_signature() const  { return d_input_signature; }
 158:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     gr::io_signature::sptr output_signature() const { return d_output_signature; }
 159:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     basic_block_sptr to_basic_block(); // Needed for Python type coercion
 160:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h **** 
 161:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     /*!
 162:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****      * True if the block has an alias (see set_block_alias).
 163:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****      */
 164:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     bool alias_set() { return !d_symbol_alias.empty(); }
 165:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h **** 
 166:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     /*!
 167:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****      * Returns the block's alias as a string.
 168:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****      */
 169:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     std::string alias(){ return alias_set()?d_symbol_alias:symbol_name(); }
 170:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h **** 
 171:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     /*!
 172:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****      * Returns the block's alias as PMT.
 173:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****      */
 174:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     pmt::pmt_t alias_pmt(){ return pmt::intern(alias()); }
 175:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h **** 
 176:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     /*!
 177:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****      * Set's a new alias for the block; also adds an entry into the
 178:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****      * block_registry to get the block using either the alias or the
 179:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****      * original symbol name.
 180:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****      */
 181:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     void set_block_alias(std::string name);
 182:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h **** 
 183:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     // ** Message passing interface **
 184:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     void message_port_register_in(pmt::pmt_t port_id);
 185:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     void message_port_register_out(pmt::pmt_t port_id);
 186:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     void message_port_pub(pmt::pmt_t port_id, pmt::pmt_t msg);
 187:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     void message_port_sub(pmt::pmt_t port_id, pmt::pmt_t target);
 188:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     void message_port_unsub(pmt::pmt_t port_id, pmt::pmt_t target);
 189:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h **** 
 190:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     virtual bool message_port_is_hier(pmt::pmt_t port_id) { (void) port_id; return false; }
 1969              		.loc 14 190 0
 1970              		.cfi_startproc
 1971 0000 55       		pushq	%rbp
 1972              		.cfi_def_cfa_offset 16
 1973              		.cfi_offset 6, -16
 1974 0001 4889E5   		movq	%rsp, %rbp
 1975              		.cfi_def_cfa_register 6
 1976 0004 48897DF8 		movq	%rdi, -8(%rbp)
 1977 0008 488975F0 		movq	%rsi, -16(%rbp)
 1978              		.loc 14 190 0
 1979 000c B8000000 		movl	$0, %eax
 1979      00
GAS LISTING /tmp/ccvUPO8Q.s 			page 126


 1980 0011 5D       		popq	%rbp
 1981              		.cfi_def_cfa 7, 8
 1982 0012 C3       		ret
 1983              		.cfi_endproc
 1984              	.LFE8648:
 1986              		.section	.text._ZN2gr11basic_block23message_port_is_hier_inEN5boost13intrusive_ptrIN3pmt8pmt_baseE
 1987              		.align 2
 1988              		.weak	_ZN2gr11basic_block23message_port_is_hier_inEN5boost13intrusive_ptrIN3pmt8pmt_baseEEE
 1990              	_ZN2gr11basic_block23message_port_is_hier_inEN5boost13intrusive_ptrIN3pmt8pmt_baseEEE:
 1991              	.LFB8649:
 191:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     virtual bool message_port_is_hier_in(pmt::pmt_t port_id) { (void) port_id; return false; }
 1992              		.loc 14 191 0
 1993              		.cfi_startproc
 1994 0000 55       		pushq	%rbp
 1995              		.cfi_def_cfa_offset 16
 1996              		.cfi_offset 6, -16
 1997 0001 4889E5   		movq	%rsp, %rbp
 1998              		.cfi_def_cfa_register 6
 1999 0004 48897DF8 		movq	%rdi, -8(%rbp)
 2000 0008 488975F0 		movq	%rsi, -16(%rbp)
 2001              		.loc 14 191 0
 2002 000c B8000000 		movl	$0, %eax
 2002      00
 2003 0011 5D       		popq	%rbp
 2004              		.cfi_def_cfa 7, 8
 2005 0012 C3       		ret
 2006              		.cfi_endproc
 2007              	.LFE8649:
 2009              		.section	.text._ZN2gr11basic_block24message_port_is_hier_outEN5boost13intrusive_ptrIN3pmt8pmt_base
 2010              		.align 2
 2011              		.weak	_ZN2gr11basic_block24message_port_is_hier_outEN5boost13intrusive_ptrIN3pmt8pmt_baseEEE
 2013              	_ZN2gr11basic_block24message_port_is_hier_outEN5boost13intrusive_ptrIN3pmt8pmt_baseEEE:
 2014              	.LFB8650:
 192:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     virtual bool message_port_is_hier_out(pmt::pmt_t port_id) { (void) port_id; return false; }
 2015              		.loc 14 192 0
 2016              		.cfi_startproc
 2017 0000 55       		pushq	%rbp
 2018              		.cfi_def_cfa_offset 16
 2019              		.cfi_offset 6, -16
 2020 0001 4889E5   		movq	%rsp, %rbp
 2021              		.cfi_def_cfa_register 6
 2022 0004 48897DF8 		movq	%rdi, -8(%rbp)
 2023 0008 488975F0 		movq	%rsi, -16(%rbp)
 2024              		.loc 14 192 0
 2025 000c B8000000 		movl	$0, %eax
 2025      00
 2026 0011 5D       		popq	%rbp
 2027              		.cfi_def_cfa 7, 8
 2028 0012 C3       		ret
 2029              		.cfi_endproc
 2030              	.LFE8650:
 2032              		.section	.text._ZN2gr11basic_block12has_msg_portEN5boost13intrusive_ptrIN3pmt8pmt_baseEEE,"axG",@p
 2033              		.align 2
 2034              		.weak	_ZN2gr11basic_block12has_msg_portEN5boost13intrusive_ptrIN3pmt8pmt_baseEEE
 2036              	_ZN2gr11basic_block12has_msg_portEN5boost13intrusive_ptrIN3pmt8pmt_baseEEE:
 2037              	.LFB8658:
 193:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h **** 
GAS LISTING /tmp/ccvUPO8Q.s 			page 127


 194:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     /*!
 195:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****      * \brief Get input message port names.
 196:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****      *
 197:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****      * Returns the available input message ports for a block. The
 198:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****      * return object is a PMT vector that is filled with PMT symbols.
 199:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****      */
 200:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     pmt::pmt_t message_ports_in();
 201:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h **** 
 202:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     /*!
 203:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****      * \brief Get output message port names.
 204:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****      *
 205:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****      * Returns the available output message ports for a block. The
 206:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****      * return object is a PMT vector that is filled with PMT symbols.
 207:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****      */
 208:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     pmt::pmt_t message_ports_out();
 209:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h **** 
 210:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     /*!
 211:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****      * Accept msg, place in queue, arrange for thread to be awakened if it's not already.
 212:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****      */
 213:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     void _post(pmt::pmt_t which_port, pmt::pmt_t msg);
 214:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h **** 
 215:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     //! is the queue empty?
 216:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     bool empty_p(pmt::pmt_t which_port) {
 217:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****       if(msg_queue.find(which_port) == msg_queue.end())
 218:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****         throw std::runtime_error("port does not exist!");
 219:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****       return msg_queue[which_port].empty();
 220:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     }
 221:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     bool empty_p() {
 222:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****       bool rv = true;
 223:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****       BOOST_FOREACH(msg_queue_map_t::value_type &i, msg_queue) {
 224:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****         rv &= msg_queue[i.first].empty();
 225:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****       }
 226:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****       return rv;
 227:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     }
 228:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h **** 
 229:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     //! are all msg ports with handlers empty?
 230:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     bool empty_handled_p(pmt::pmt_t which_port){
 231:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****         return (empty_p(which_port) || !has_msg_handler(which_port));
 232:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     }
 233:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     bool empty_handled_p() {
 234:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****       bool rv = true;
 235:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****       BOOST_FOREACH(msg_queue_map_t::value_type &i, msg_queue) {
 236:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****         rv &= empty_handled_p(i.first);
 237:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****       }
 238:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****       return rv;
 239:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     }
 240:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h **** 
 241:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     //! How many messages in the queue?
 242:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     size_t nmsgs(pmt::pmt_t which_port) {
 243:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****       if(msg_queue.find(which_port) == msg_queue.end())
 244:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****         throw std::runtime_error("port does not exist!");
 245:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****       return msg_queue[which_port].size();
 246:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     }
 247:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h **** 
 248:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     //| Acquires and release the mutex
 249:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     void insert_tail( pmt::pmt_t which_port, pmt::pmt_t msg);
 250:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     /*!
GAS LISTING /tmp/ccvUPO8Q.s 			page 128


 251:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****      * \returns returns pmt at head of queue or pmt::pmt_t() if empty.
 252:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****      */
 253:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     pmt::pmt_t delete_head_nowait( pmt::pmt_t which_port);
 254:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h **** 
 255:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     /*!
 256:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****      * \param[in] which_port The message port from which to get the message.
 257:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****      * \param[in] millisec Optional timeout value (0=no timeout).
 258:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****      * \returns returns pmt at head of queue or pmt::pmt_t() if empty.
 259:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****      */
 260:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     pmt::pmt_t delete_head_blocking(pmt::pmt_t which_port, unsigned int millisec = 0);
 261:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h **** 
 262:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     msg_queue_t::iterator get_iterator(pmt::pmt_t which_port) {
 263:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****       return msg_queue[which_port].begin();
 264:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     }
 265:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h **** 
 266:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     void erase_msg(pmt::pmt_t which_port, msg_queue_t::iterator it) {
 267:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****       msg_queue[which_port].erase(it);
 268:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     }
 269:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h **** 
 270:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     virtual bool has_msg_port(pmt::pmt_t which_port) {
 2038              		.loc 14 270 0
 2039              		.cfi_startproc
 2040 0000 55       		pushq	%rbp
 2041              		.cfi_def_cfa_offset 16
 2042              		.cfi_offset 6, -16
 2043 0001 4889E5   		movq	%rsp, %rbp
 2044              		.cfi_def_cfa_register 6
 2045 0004 4883EC20 		subq	$32, %rsp
 2046 0008 48897DE8 		movq	%rdi, -24(%rbp)
 2047 000c 488975E0 		movq	%rsi, -32(%rbp)
 271:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****       if(msg_queue.find(which_port) != msg_queue.end()) {
 2048              		.loc 14 271 0
 2049 0010 488B45E8 		movq	-24(%rbp), %rax
 2050 0014 48053801 		addq	$312, %rax
 2050      0000
 2051 001a 4889C7   		movq	%rax, %rdi
 2052 001d E8000000 		call	_ZNSt3mapIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt5dequeIS4_SaIS4_EENS2_10comparatorESaISt4
 2052      00
 2053 0022 488945F0 		movq	%rax, -16(%rbp)
 2054 0026 488B45E8 		movq	-24(%rbp), %rax
 2055 002a 488D9038 		leaq	312(%rax), %rdx
 2055      010000
 2056 0031 488B45E0 		movq	-32(%rbp), %rax
 2057 0035 4889C6   		movq	%rax, %rsi
 2058 0038 4889D7   		movq	%rdx, %rdi
 2059 003b E8000000 		call	_ZNSt3mapIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt5dequeIS4_SaIS4_EENS2_10comparatorESaISt4
 2059      00
 2060 0040 488945F8 		movq	%rax, -8(%rbp)
 2061 0044 488D55F0 		leaq	-16(%rbp), %rdx
 2062 0048 488D45F8 		leaq	-8(%rbp), %rax
 2063 004c 4889D6   		movq	%rdx, %rsi
 2064 004f 4889C7   		movq	%rax, %rdi
 2065 0052 E8000000 		call	_ZNKSt17_Rb_tree_iteratorISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt5dequeIS5_SaIS5_
 2065      00
 2066 0057 84C0     		testb	%al, %al
 2067 0059 7407     		je	.L101
 272:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****         return true;
GAS LISTING /tmp/ccvUPO8Q.s 			page 129


 2068              		.loc 14 272 0
 2069 005b B8010000 		movl	$1, %eax
 2069      00
 2070 0060 EB2A     		jmp	.L102
 2071              	.L101:
 273:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****       }
 274:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****       if(pmt::dict_has_key(d_message_subscribers, which_port)) {
 2072              		.loc 14 274 0
 2073 0062 488B45E8 		movq	-24(%rbp), %rax
 2074 0066 488D9080 		leaq	384(%rax), %rdx
 2074      010000
 2075 006d 488B45E0 		movq	-32(%rbp), %rax
 2076 0071 4889C6   		movq	%rax, %rsi
 2077 0074 4889D7   		movq	%rdx, %rdi
 2078 0077 E8000000 		call	_ZN3pmt12dict_has_keyERKN5boost13intrusive_ptrINS_8pmt_baseEEES5_@PLT
 2078      00
 2079 007c 84C0     		testb	%al, %al
 2080 007e 7407     		je	.L103
 275:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****         return true;
 2081              		.loc 14 275 0
 2082 0080 B8010000 		movl	$1, %eax
 2082      00
 2083 0085 EB05     		jmp	.L102
 2084              	.L103:
 276:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****       }
 277:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****       return false;
 2085              		.loc 14 277 0
 2086 0087 B8000000 		movl	$0, %eax
 2086      00
 2087              	.L102:
 278:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     }
 2088              		.loc 14 278 0
 2089 008c C9       		leave
 2090              		.cfi_def_cfa 7, 8
 2091 008d C3       		ret
 2092              		.cfi_endproc
 2093              	.LFE8658:
 2095              		.section	.text._ZN2gr11basic_block9setup_rpcEv,"axG",@progbits,_ZN2gr11basic_block9setup_rpcEv,com
 2096              		.align 2
 2097              		.weak	_ZN2gr11basic_block9setup_rpcEv
 2099              	_ZN2gr11basic_block9setup_rpcEv:
 2100              	.LFB8660:
 279:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h **** 
 280:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     const msg_queue_map_t& get_msg_map(void) const {
 281:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****       return msg_queue;
 282:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     }
 283:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h **** 
 284:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h **** #ifdef GR_CTRLPORT
 285:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     /*!
 286:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****      * \brief Add an RPC variable (get or set).
 287:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****      *
 288:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****      * Using controlport, we create new getters/setters and need to
 289:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****      * store them. Each block has a vector to do this, and these never
 290:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****      * need to be accessed again once they are registered with the RPC
 291:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****      * backend. This function takes a
 292:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****      * boost::shared_sptr<rpcbasic_base> so that when the block is
 293:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****      * deleted, all RPC registered variables are cleaned up.
GAS LISTING /tmp/ccvUPO8Q.s 			page 130


 294:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****      *
 295:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****      * \param s an rpcbasic_sptr of the new RPC variable register to store.
 296:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****      */
 297:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     void add_rpc_variable(rpcbasic_sptr s)
 298:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     {
 299:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****       d_rpc_vars.push_back(s);
 300:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     }
 301:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h **** #endif /* GR_CTRLPORT */
 302:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h **** 
 303:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     /*!
 304:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****      * \brief Set up the RPC registered variables.
 305:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****      *
 306:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****      * This must be overloaded by a block that wants to use
 307:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****      * controlport. This is where rpcbasic_register_{get,set} pointers
 308:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****      * are created, which then get wrapped as shared pointers
 309:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****      * (rpcbasic_sptr(...)) and stored using add_rpc_variable.
 310:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****      */
 311:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     virtual void setup_rpc() {};
 2101              		.loc 14 311 0
 2102              		.cfi_startproc
 2103 0000 55       		pushq	%rbp
 2104              		.cfi_def_cfa_offset 16
 2105              		.cfi_offset 6, -16
 2106 0001 4889E5   		movq	%rsp, %rbp
 2107              		.cfi_def_cfa_register 6
 2108 0004 48897DF8 		movq	%rdi, -8(%rbp)
 2109              		.loc 14 311 0
 2110 0008 90       		nop
 2111 0009 5D       		popq	%rbp
 2112              		.cfi_def_cfa 7, 8
 2113 000a C3       		ret
 2114              		.cfi_endproc
 2115              	.LFE8660:
 2117              		.section	.text._ZN2gr11basic_block14check_topologyEii,"axG",@progbits,_ZN2gr11basic_block14check_t
 2118              		.align 2
 2119              		.weak	_ZN2gr11basic_block14check_topologyEii
 2121              	_ZN2gr11basic_block14check_topologyEii:
 2122              	.LFB8663:
 312:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h **** 
 313:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     /*!
 314:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****      * \brief Ask if this block has been registered to the RPC.
 315:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****      *
 316:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****      * We can only register a block once, so we use this to protect us
 317:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****      * from calling it multiple times.
 318:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****      */
 319:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     bool is_rpc_set() { return d_rpc_set; }
 320:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h **** 
 321:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     /*!
 322:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****      * \brief When the block is registered with the RPC, set this.
 323:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****      */
 324:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     void rpc_set() { d_rpc_set = true; }
 325:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h **** 
 326:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     /*!
 327:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****      * \brief Confirm that ninputs and noutputs is an acceptable combination.
 328:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****      *
 329:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****      * \param ninputs	number of input streams connected
 330:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****      * \param noutputs	number of output streams connected
GAS LISTING /tmp/ccvUPO8Q.s 			page 131


 331:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****      *
 332:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****      * \returns true if this is a valid configuration for this block.
 333:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****      *
 334:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****      * This function is called by the runtime system whenever the
 335:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****      * topology changes. Most classes do not need to override this.
 336:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****      * This check is in addition to the constraints specified by the
 337:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****      * input and output gr::io_signatures.
 338:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****      */
 339:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     virtual bool check_topology(int ninputs, int noutputs) {
 2123              		.loc 14 339 0
 2124              		.cfi_startproc
 2125 0000 55       		pushq	%rbp
 2126              		.cfi_def_cfa_offset 16
 2127              		.cfi_offset 6, -16
 2128 0001 4889E5   		movq	%rsp, %rbp
 2129              		.cfi_def_cfa_register 6
 2130 0004 48897DF8 		movq	%rdi, -8(%rbp)
 2131 0008 8975F4   		movl	%esi, -12(%rbp)
 2132 000b 8955F0   		movl	%edx, -16(%rbp)
 340:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****       (void)ninputs;
 341:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****       (void)noutputs;
 342:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****       return true;
 2133              		.loc 14 342 0
 2134 000e B8010000 		movl	$1, %eax
 2134      00
 343:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     }
 2135              		.loc 14 343 0
 2136 0013 5D       		popq	%rbp
 2137              		.cfi_def_cfa 7, 8
 2138 0014 C3       		ret
 2139              		.cfi_endproc
 2140              	.LFE8663:
 2142              		.section	.text._ZN2gr5tag_taSERKS0_,"axG",@progbits,_ZN2gr5tag_taSERKS0_,comdat
 2143              		.align 2
 2144              		.weak	_ZN2gr5tag_taSERKS0_
 2146              	_ZN2gr5tag_taSERKS0_:
 2147              	.LFB8678:
 2148              		.file 15 "/home/mpiscopo/gnuradio/include/gnuradio/tags.h"
   1:/home/mpiscopo/gnuradio/include/gnuradio/tags.h **** /* -*- c++ -*- */
   2:/home/mpiscopo/gnuradio/include/gnuradio/tags.h **** /*
   3:/home/mpiscopo/gnuradio/include/gnuradio/tags.h ****  * Copyright 2011,2013 Free Software Foundation, Inc.
   4:/home/mpiscopo/gnuradio/include/gnuradio/tags.h ****  *
   5:/home/mpiscopo/gnuradio/include/gnuradio/tags.h ****  * This file is part of GNU Radio
   6:/home/mpiscopo/gnuradio/include/gnuradio/tags.h ****  *
   7:/home/mpiscopo/gnuradio/include/gnuradio/tags.h ****  * GNU Radio is free software; you can redistribute it and/or modify
   8:/home/mpiscopo/gnuradio/include/gnuradio/tags.h ****  * it under the terms of the GNU General Public License as published by
   9:/home/mpiscopo/gnuradio/include/gnuradio/tags.h ****  * the Free Software Foundation; either version 3, or (at your option)
  10:/home/mpiscopo/gnuradio/include/gnuradio/tags.h ****  * any later version.
  11:/home/mpiscopo/gnuradio/include/gnuradio/tags.h ****  *
  12:/home/mpiscopo/gnuradio/include/gnuradio/tags.h ****  * GNU Radio is distributed in the hope that it will be useful,
  13:/home/mpiscopo/gnuradio/include/gnuradio/tags.h ****  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  14:/home/mpiscopo/gnuradio/include/gnuradio/tags.h ****  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  15:/home/mpiscopo/gnuradio/include/gnuradio/tags.h ****  * GNU General Public License for more details.
  16:/home/mpiscopo/gnuradio/include/gnuradio/tags.h ****  *
  17:/home/mpiscopo/gnuradio/include/gnuradio/tags.h ****  * You should have received a copy of the GNU General Public License
  18:/home/mpiscopo/gnuradio/include/gnuradio/tags.h ****  * along with GNU Radio; see the file COPYING.  If not, write to
  19:/home/mpiscopo/gnuradio/include/gnuradio/tags.h ****  * the Free Software Foundation, Inc., 51 Franklin Street,
GAS LISTING /tmp/ccvUPO8Q.s 			page 132


  20:/home/mpiscopo/gnuradio/include/gnuradio/tags.h ****  * Boston, MA 02110-1301, USA.
  21:/home/mpiscopo/gnuradio/include/gnuradio/tags.h ****  */
  22:/home/mpiscopo/gnuradio/include/gnuradio/tags.h **** 
  23:/home/mpiscopo/gnuradio/include/gnuradio/tags.h **** #ifndef INCLUDED_GR_TAGS_H
  24:/home/mpiscopo/gnuradio/include/gnuradio/tags.h **** #define INCLUDED_GR_TAGS_H
  25:/home/mpiscopo/gnuradio/include/gnuradio/tags.h **** 
  26:/home/mpiscopo/gnuradio/include/gnuradio/tags.h **** #include <gnuradio/api.h>
  27:/home/mpiscopo/gnuradio/include/gnuradio/tags.h **** #include <pmt/pmt.h>
  28:/home/mpiscopo/gnuradio/include/gnuradio/tags.h **** 
  29:/home/mpiscopo/gnuradio/include/gnuradio/tags.h **** namespace gr {
  30:/home/mpiscopo/gnuradio/include/gnuradio/tags.h **** 
  31:/home/mpiscopo/gnuradio/include/gnuradio/tags.h ****   struct GR_RUNTIME_API tag_t
  32:/home/mpiscopo/gnuradio/include/gnuradio/tags.h ****   {
  33:/home/mpiscopo/gnuradio/include/gnuradio/tags.h ****     //! the item \p tag occurred at (as a uint64_t)
  34:/home/mpiscopo/gnuradio/include/gnuradio/tags.h ****     uint64_t offset;
  35:/home/mpiscopo/gnuradio/include/gnuradio/tags.h **** 
  36:/home/mpiscopo/gnuradio/include/gnuradio/tags.h ****     //! the key of \p tag (as a PMT symbol)
  37:/home/mpiscopo/gnuradio/include/gnuradio/tags.h ****     pmt::pmt_t key;
  38:/home/mpiscopo/gnuradio/include/gnuradio/tags.h **** 
  39:/home/mpiscopo/gnuradio/include/gnuradio/tags.h ****     //! the value of \p tag (as a PMT)
  40:/home/mpiscopo/gnuradio/include/gnuradio/tags.h ****     pmt::pmt_t value;
  41:/home/mpiscopo/gnuradio/include/gnuradio/tags.h **** 
  42:/home/mpiscopo/gnuradio/include/gnuradio/tags.h ****     //! the source ID of \p tag (as a PMT)
  43:/home/mpiscopo/gnuradio/include/gnuradio/tags.h ****     pmt::pmt_t srcid;
  44:/home/mpiscopo/gnuradio/include/gnuradio/tags.h **** 
  45:/home/mpiscopo/gnuradio/include/gnuradio/tags.h ****     //! Used by gr_buffer to mark a tagged as deleted by a specific block. You can usually ignore t
  46:/home/mpiscopo/gnuradio/include/gnuradio/tags.h ****     std::vector<long> marked_deleted;
  47:/home/mpiscopo/gnuradio/include/gnuradio/tags.h **** 
  48:/home/mpiscopo/gnuradio/include/gnuradio/tags.h ****     /*!
  49:/home/mpiscopo/gnuradio/include/gnuradio/tags.h ****      * Comparison function to test which tag, \p x or \p y, came
  50:/home/mpiscopo/gnuradio/include/gnuradio/tags.h ****      * first in time
  51:/home/mpiscopo/gnuradio/include/gnuradio/tags.h ****      */
  52:/home/mpiscopo/gnuradio/include/gnuradio/tags.h ****     static inline bool offset_compare(const tag_t &x,
  53:/home/mpiscopo/gnuradio/include/gnuradio/tags.h ****                                       const tag_t &y)
  54:/home/mpiscopo/gnuradio/include/gnuradio/tags.h ****     {
  55:/home/mpiscopo/gnuradio/include/gnuradio/tags.h ****       return x.offset < y.offset;
  56:/home/mpiscopo/gnuradio/include/gnuradio/tags.h ****     }
  57:/home/mpiscopo/gnuradio/include/gnuradio/tags.h **** 
  58:/home/mpiscopo/gnuradio/include/gnuradio/tags.h ****     inline bool operator == (const tag_t &t) const
  59:/home/mpiscopo/gnuradio/include/gnuradio/tags.h ****     {
  60:/home/mpiscopo/gnuradio/include/gnuradio/tags.h ****       return (t.key == key) && (t.value == value) && \
  61:/home/mpiscopo/gnuradio/include/gnuradio/tags.h ****       (t.srcid == srcid) && (t.offset == offset);
  62:/home/mpiscopo/gnuradio/include/gnuradio/tags.h ****     }
  63:/home/mpiscopo/gnuradio/include/gnuradio/tags.h **** 
  64:/home/mpiscopo/gnuradio/include/gnuradio/tags.h ****     tag_t()
  65:/home/mpiscopo/gnuradio/include/gnuradio/tags.h ****       : offset(0),
  66:/home/mpiscopo/gnuradio/include/gnuradio/tags.h ****         key(pmt::PMT_NIL),
  67:/home/mpiscopo/gnuradio/include/gnuradio/tags.h ****         value(pmt::PMT_NIL),
  68:/home/mpiscopo/gnuradio/include/gnuradio/tags.h ****         srcid(pmt::PMT_F)    // consistent with default srcid value in block::add_item_tag
  69:/home/mpiscopo/gnuradio/include/gnuradio/tags.h ****     {
  70:/home/mpiscopo/gnuradio/include/gnuradio/tags.h ****     }
  71:/home/mpiscopo/gnuradio/include/gnuradio/tags.h **** 
  72:/home/mpiscopo/gnuradio/include/gnuradio/tags.h ****     tag_t(const tag_t &rhs)
  73:/home/mpiscopo/gnuradio/include/gnuradio/tags.h ****       : offset(rhs.offset),
  74:/home/mpiscopo/gnuradio/include/gnuradio/tags.h ****         key(rhs.key),
  75:/home/mpiscopo/gnuradio/include/gnuradio/tags.h ****         value(rhs.value),
  76:/home/mpiscopo/gnuradio/include/gnuradio/tags.h ****         srcid(rhs.srcid)
GAS LISTING /tmp/ccvUPO8Q.s 			page 133


  77:/home/mpiscopo/gnuradio/include/gnuradio/tags.h ****     {
  78:/home/mpiscopo/gnuradio/include/gnuradio/tags.h ****     }
  79:/home/mpiscopo/gnuradio/include/gnuradio/tags.h ****     tag_t& operator=(const tag_t &rhs)
 2149              		.loc 15 79 0
 2150              		.cfi_startproc
 2151 0000 55       		pushq	%rbp
 2152              		.cfi_def_cfa_offset 16
 2153              		.cfi_offset 6, -16
 2154 0001 4889E5   		movq	%rsp, %rbp
 2155              		.cfi_def_cfa_register 6
 2156 0004 4883EC10 		subq	$16, %rsp
 2157 0008 48897DF8 		movq	%rdi, -8(%rbp)
 2158 000c 488975F0 		movq	%rsi, -16(%rbp)
  80:/home/mpiscopo/gnuradio/include/gnuradio/tags.h ****     {
  81:/home/mpiscopo/gnuradio/include/gnuradio/tags.h ****       if (this != &rhs) {
 2159              		.loc 15 81 0
 2160 0010 488B45F8 		movq	-8(%rbp), %rax
 2161 0014 483B45F0 		cmpq	-16(%rbp), %rax
 2162 0018 745F     		je	.L108
  82:/home/mpiscopo/gnuradio/include/gnuradio/tags.h ****         offset = rhs.offset;
 2163              		.loc 15 82 0
 2164 001a 488B45F0 		movq	-16(%rbp), %rax
 2165 001e 488B10   		movq	(%rax), %rdx
 2166 0021 488B45F8 		movq	-8(%rbp), %rax
 2167 0025 488910   		movq	%rdx, (%rax)
  83:/home/mpiscopo/gnuradio/include/gnuradio/tags.h ****         key = rhs.key;
 2168              		.loc 15 83 0
 2169 0028 488B45F0 		movq	-16(%rbp), %rax
 2170 002c 488D5008 		leaq	8(%rax), %rdx
 2171 0030 488B45F8 		movq	-8(%rbp), %rax
 2172 0034 4883C008 		addq	$8, %rax
 2173 0038 4889D6   		movq	%rdx, %rsi
 2174 003b 4889C7   		movq	%rax, %rdi
 2175 003e E8000000 		call	_ZN5boost13intrusive_ptrIN3pmt8pmt_baseEEaSERKS3_
 2175      00
  84:/home/mpiscopo/gnuradio/include/gnuradio/tags.h ****         value = rhs.value;
 2176              		.loc 15 84 0
 2177 0043 488B45F0 		movq	-16(%rbp), %rax
 2178 0047 488D5010 		leaq	16(%rax), %rdx
 2179 004b 488B45F8 		movq	-8(%rbp), %rax
 2180 004f 4883C010 		addq	$16, %rax
 2181 0053 4889D6   		movq	%rdx, %rsi
 2182 0056 4889C7   		movq	%rax, %rdi
 2183 0059 E8000000 		call	_ZN5boost13intrusive_ptrIN3pmt8pmt_baseEEaSERKS3_
 2183      00
  85:/home/mpiscopo/gnuradio/include/gnuradio/tags.h ****         srcid = rhs.srcid;
 2184              		.loc 15 85 0
 2185 005e 488B45F0 		movq	-16(%rbp), %rax
 2186 0062 488D5018 		leaq	24(%rax), %rdx
 2187 0066 488B45F8 		movq	-8(%rbp), %rax
 2188 006a 4883C018 		addq	$24, %rax
 2189 006e 4889D6   		movq	%rdx, %rsi
 2190 0071 4889C7   		movq	%rax, %rdi
 2191 0074 E8000000 		call	_ZN5boost13intrusive_ptrIN3pmt8pmt_baseEEaSERKS3_
 2191      00
 2192              	.L108:
  86:/home/mpiscopo/gnuradio/include/gnuradio/tags.h ****       }
GAS LISTING /tmp/ccvUPO8Q.s 			page 134


  87:/home/mpiscopo/gnuradio/include/gnuradio/tags.h ****       return (*this);
 2193              		.loc 15 87 0
 2194 0079 488B45F8 		movq	-8(%rbp), %rax
  88:/home/mpiscopo/gnuradio/include/gnuradio/tags.h ****     }
 2195              		.loc 15 88 0
 2196 007d C9       		leave
 2197              		.cfi_def_cfa 7, 8
 2198 007e C3       		ret
 2199              		.cfi_endproc
 2200              	.LFE8678:
 2202              		.section	.text._ZN2gr5tag_tD2Ev,"axG",@progbits,_ZN2gr5tag_tD5Ev,comdat
 2203              		.align 2
 2204              		.weak	_ZN2gr5tag_tD2Ev
 2206              	_ZN2gr5tag_tD2Ev:
 2207              	.LFB8680:
  89:/home/mpiscopo/gnuradio/include/gnuradio/tags.h **** 
  90:/home/mpiscopo/gnuradio/include/gnuradio/tags.h ****     ~tag_t()
 2208              		.loc 15 90 0
 2209              		.cfi_startproc
 2210 0000 55       		pushq	%rbp
 2211              		.cfi_def_cfa_offset 16
 2212              		.cfi_offset 6, -16
 2213 0001 4889E5   		movq	%rsp, %rbp
 2214              		.cfi_def_cfa_register 6
 2215 0004 4883EC10 		subq	$16, %rsp
 2216 0008 48897DF8 		movq	%rdi, -8(%rbp)
 2217              	.LBB24:
  91:/home/mpiscopo/gnuradio/include/gnuradio/tags.h ****     {
 2218              		.loc 15 91 0
 2219 000c 488B45F8 		movq	-8(%rbp), %rax
 2220 0010 4883C020 		addq	$32, %rax
 2221 0014 4889C7   		movq	%rax, %rdi
 2222 0017 E8000000 		call	_ZNSt6vectorIlSaIlEED1Ev
 2222      00
 2223 001c 488B45F8 		movq	-8(%rbp), %rax
 2224 0020 4883C018 		addq	$24, %rax
 2225 0024 4889C7   		movq	%rax, %rdi
 2226 0027 E8000000 		call	_ZN5boost13intrusive_ptrIN3pmt8pmt_baseEED1Ev
 2226      00
 2227 002c 488B45F8 		movq	-8(%rbp), %rax
 2228 0030 4883C010 		addq	$16, %rax
 2229 0034 4889C7   		movq	%rax, %rdi
 2230 0037 E8000000 		call	_ZN5boost13intrusive_ptrIN3pmt8pmt_baseEED1Ev
 2230      00
 2231 003c 488B45F8 		movq	-8(%rbp), %rax
 2232 0040 4883C008 		addq	$8, %rax
 2233 0044 4889C7   		movq	%rax, %rdi
 2234 0047 E8000000 		call	_ZN5boost13intrusive_ptrIN3pmt8pmt_baseEED1Ev
 2234      00
 2235              	.LBE24:
  92:/home/mpiscopo/gnuradio/include/gnuradio/tags.h ****     }
 2236              		.loc 15 92 0
 2237 004c 90       		nop
 2238 004d C9       		leave
 2239              		.cfi_def_cfa 7, 8
 2240 004e C3       		ret
 2241              		.cfi_endproc
GAS LISTING /tmp/ccvUPO8Q.s 			page 135


 2242              	.LFE8680:
 2244              		.weak	_ZN2gr5tag_tD1Ev
 2245              		.set	_ZN2gr5tag_tD1Ev,_ZN2gr5tag_tD2Ev
 2246              		.section	.rodata
 2247 0042 0000     		.align 4
 2250              	_ZN5boost16exception_detail30clone_current_exception_resultL7successE:
 2251 0044 00000000 		.zero	4
 2252              		.align 4
 2255              	_ZN5boost16exception_detail30clone_current_exception_resultL9bad_allocE:
 2256 0048 01000000 		.long	1
 2257              		.align 4
 2260              	_ZN5boost16exception_detail30clone_current_exception_resultL13bad_exceptionE:
 2261 004c 02000000 		.long	2
 2262              		.align 4
 2265              	_ZN5boost16exception_detail30clone_current_exception_resultL13not_supportedE:
 2266 0050 03000000 		.long	3
 2267              		.section	.text._ZN5boost10shared_ptrIKNS_16exception_detail10clone_baseEED2Ev,"axG",@progbits,_ZN5
 2268              		.align 2
 2269              		.weak	_ZN5boost10shared_ptrIKNS_16exception_detail10clone_baseEED2Ev
 2271              	_ZN5boost10shared_ptrIKNS_16exception_detail10clone_baseEED2Ev:
 2272              	.LFB9839:
 2273              		.loc 7 336 0
 2274              		.cfi_startproc
 2275 0000 55       		pushq	%rbp
 2276              		.cfi_def_cfa_offset 16
 2277              		.cfi_offset 6, -16
 2278 0001 4889E5   		movq	%rsp, %rbp
 2279              		.cfi_def_cfa_register 6
 2280 0004 4883EC10 		subq	$16, %rsp
 2281 0008 48897DF8 		movq	%rdi, -8(%rbp)
 2282              	.LBB25:
 2283              		.loc 7 336 0
 2284 000c 488B45F8 		movq	-8(%rbp), %rax
 2285 0010 4883C008 		addq	$8, %rax
 2286 0014 4889C7   		movq	%rax, %rdi
 2287 0017 E8000000 		call	_ZN5boost6detail12shared_countD1Ev
 2287      00
 2288              	.LBE25:
 2289 001c 90       		nop
 2290 001d C9       		leave
 2291              		.cfi_def_cfa 7, 8
 2292 001e C3       		ret
 2293              		.cfi_endproc
 2294              	.LFE9839:
 2296              		.weak	_ZN5boost10shared_ptrIKNS_16exception_detail10clone_baseEED1Ev
 2297              		.set	_ZN5boost10shared_ptrIKNS_16exception_detail10clone_baseEED1Ev,_ZN5boost10shared_ptrIKNS_16ex
 2298              		.section	.text._ZN5boost13exception_ptrC2ERKNS_10shared_ptrIKNS_16exception_detail10clone_baseEEE,
 2299              		.align 2
 2300              		.weak	_ZN5boost13exception_ptrC2ERKNS_10shared_ptrIKNS_16exception_detail10clone_baseEEE
 2302              	_ZN5boost13exception_ptrC2ERKNS_10shared_ptrIKNS_16exception_detail10clone_baseEEE:
 2303              	.LFB9844:
 2304              		.file 16 "/usr/include/boost/exception/detail/exception_ptr.hpp"
   1:/usr/include/boost/exception/detail/exception_ptr.hpp **** //Copyright (c) 2006-2009 Emil Dotchevski and Reverge Studios, Inc.
   2:/usr/include/boost/exception/detail/exception_ptr.hpp **** 
   3:/usr/include/boost/exception/detail/exception_ptr.hpp **** //Distributed under the Boost Software License, Version 1.0. (See accompanying
   4:/usr/include/boost/exception/detail/exception_ptr.hpp **** //file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
   5:/usr/include/boost/exception/detail/exception_ptr.hpp **** 
GAS LISTING /tmp/ccvUPO8Q.s 			page 136


   6:/usr/include/boost/exception/detail/exception_ptr.hpp **** #ifndef UUID_618474C2DE1511DEB74A388C56D89593
   7:/usr/include/boost/exception/detail/exception_ptr.hpp **** #define UUID_618474C2DE1511DEB74A388C56D89593
   8:/usr/include/boost/exception/detail/exception_ptr.hpp **** #if (__GNUC__*100+__GNUC_MINOR__>301) && !defined(BOOST_EXCEPTION_ENABLE_WARNINGS)
   9:/usr/include/boost/exception/detail/exception_ptr.hpp **** #pragma GCC system_header
  10:/usr/include/boost/exception/detail/exception_ptr.hpp **** #endif
  11:/usr/include/boost/exception/detail/exception_ptr.hpp **** #if defined(_MSC_VER) && !defined(BOOST_EXCEPTION_ENABLE_WARNINGS)
  12:/usr/include/boost/exception/detail/exception_ptr.hpp **** #pragma warning(push,1)
  13:/usr/include/boost/exception/detail/exception_ptr.hpp **** #endif
  14:/usr/include/boost/exception/detail/exception_ptr.hpp **** 
  15:/usr/include/boost/exception/detail/exception_ptr.hpp **** #include <boost/config.hpp>
  16:/usr/include/boost/exception/detail/exception_ptr.hpp **** #ifdef BOOST_NO_EXCEPTIONS
  17:/usr/include/boost/exception/detail/exception_ptr.hpp **** #error This header requires exception handling to be enabled.
  18:/usr/include/boost/exception/detail/exception_ptr.hpp **** #endif
  19:/usr/include/boost/exception/detail/exception_ptr.hpp **** #include <boost/exception/exception.hpp>
  20:/usr/include/boost/exception/detail/exception_ptr.hpp **** #include <boost/exception/info.hpp>
  21:/usr/include/boost/exception/detail/exception_ptr.hpp **** #include <boost/exception/diagnostic_information.hpp>
  22:/usr/include/boost/exception/detail/exception_ptr.hpp **** #include <boost/exception/detail/type_info.hpp>
  23:/usr/include/boost/exception/detail/exception_ptr.hpp **** #include <boost/exception/detail/clone_current_exception.hpp>
  24:/usr/include/boost/exception/detail/exception_ptr.hpp **** #ifndef BOOST_NO_RTTI
  25:/usr/include/boost/exception/detail/exception_ptr.hpp **** #include <boost/core/demangle.hpp>
  26:/usr/include/boost/exception/detail/exception_ptr.hpp **** #endif
  27:/usr/include/boost/exception/detail/exception_ptr.hpp **** #include <boost/shared_ptr.hpp>
  28:/usr/include/boost/exception/detail/exception_ptr.hpp **** #include <stdexcept>
  29:/usr/include/boost/exception/detail/exception_ptr.hpp **** #include <new>
  30:/usr/include/boost/exception/detail/exception_ptr.hpp **** #include <ios>
  31:/usr/include/boost/exception/detail/exception_ptr.hpp **** #include <stdlib.h>
  32:/usr/include/boost/exception/detail/exception_ptr.hpp **** 
  33:/usr/include/boost/exception/detail/exception_ptr.hpp **** namespace
  34:/usr/include/boost/exception/detail/exception_ptr.hpp **** boost
  35:/usr/include/boost/exception/detail/exception_ptr.hpp ****     {
  36:/usr/include/boost/exception/detail/exception_ptr.hpp ****     class exception_ptr;
  37:/usr/include/boost/exception/detail/exception_ptr.hpp ****     BOOST_NORETURN void rethrow_exception( exception_ptr const & );
  38:/usr/include/boost/exception/detail/exception_ptr.hpp ****     exception_ptr current_exception();
  39:/usr/include/boost/exception/detail/exception_ptr.hpp **** 
  40:/usr/include/boost/exception/detail/exception_ptr.hpp ****     class
  41:/usr/include/boost/exception/detail/exception_ptr.hpp ****     exception_ptr
  42:/usr/include/boost/exception/detail/exception_ptr.hpp ****         {
  43:/usr/include/boost/exception/detail/exception_ptr.hpp ****         typedef boost::shared_ptr<exception_detail::clone_base const> impl;
  44:/usr/include/boost/exception/detail/exception_ptr.hpp ****         impl ptr_;
  45:/usr/include/boost/exception/detail/exception_ptr.hpp ****         friend void rethrow_exception( exception_ptr const & );
  46:/usr/include/boost/exception/detail/exception_ptr.hpp ****         typedef exception_detail::clone_base const * (impl::*unspecified_bool_type)() const;
  47:/usr/include/boost/exception/detail/exception_ptr.hpp ****         public:
  48:/usr/include/boost/exception/detail/exception_ptr.hpp ****         exception_ptr()
  49:/usr/include/boost/exception/detail/exception_ptr.hpp ****             {
  50:/usr/include/boost/exception/detail/exception_ptr.hpp ****             }
  51:/usr/include/boost/exception/detail/exception_ptr.hpp ****         explicit
  52:/usr/include/boost/exception/detail/exception_ptr.hpp ****         exception_ptr( impl const & ptr ):
 2305              		.loc 16 52 0
 2306              		.cfi_startproc
 2307 0000 55       		pushq	%rbp
 2308              		.cfi_def_cfa_offset 16
 2309              		.cfi_offset 6, -16
 2310 0001 4889E5   		movq	%rsp, %rbp
 2311              		.cfi_def_cfa_register 6
 2312 0004 4883EC10 		subq	$16, %rsp
 2313 0008 48897DF8 		movq	%rdi, -8(%rbp)
 2314 000c 488975F0 		movq	%rsi, -16(%rbp)
GAS LISTING /tmp/ccvUPO8Q.s 			page 137


 2315              	.LBB26:
  53:/usr/include/boost/exception/detail/exception_ptr.hpp ****             ptr_(ptr)
 2316              		.loc 16 53 0
 2317 0010 488B45F8 		movq	-8(%rbp), %rax
 2318 0014 488B55F0 		movq	-16(%rbp), %rdx
 2319 0018 4889D6   		movq	%rdx, %rsi
 2320 001b 4889C7   		movq	%rax, %rdi
 2321 001e E8000000 		call	_ZN5boost10shared_ptrIKNS_16exception_detail10clone_baseEEC1ERKS4_
 2321      00
 2322              	.LBE26:
  54:/usr/include/boost/exception/detail/exception_ptr.hpp ****             {
  55:/usr/include/boost/exception/detail/exception_ptr.hpp ****             }
 2323              		.loc 16 55 0
 2324 0023 90       		nop
 2325 0024 C9       		leave
 2326              		.cfi_def_cfa 7, 8
 2327 0025 C3       		ret
 2328              		.cfi_endproc
 2329              	.LFE9844:
 2331              		.weak	_ZN5boost13exception_ptrC1ERKNS_10shared_ptrIKNS_16exception_detail10clone_baseEEE
 2332              		.set	_ZN5boost13exception_ptrC1ERKNS_10shared_ptrIKNS_16exception_detail10clone_baseEEE,_ZN5boost1
 2333              		.section	.text._ZN5boost16exception_detail10bad_alloc_D2Ev,"axG",@progbits,_ZN5boost16exception_de
 2334              		.align 2
 2335              		.weak	_ZN5boost16exception_detail10bad_alloc_D2Ev
 2337              	_ZN5boost16exception_detail10bad_alloc_D2Ev:
 2338              	.LFB9852:
  56:/usr/include/boost/exception/detail/exception_ptr.hpp ****         bool
  57:/usr/include/boost/exception/detail/exception_ptr.hpp ****         operator==( exception_ptr const & other ) const
  58:/usr/include/boost/exception/detail/exception_ptr.hpp ****             {
  59:/usr/include/boost/exception/detail/exception_ptr.hpp ****             return ptr_==other.ptr_;
  60:/usr/include/boost/exception/detail/exception_ptr.hpp ****             }
  61:/usr/include/boost/exception/detail/exception_ptr.hpp ****         bool
  62:/usr/include/boost/exception/detail/exception_ptr.hpp ****         operator!=( exception_ptr const & other ) const
  63:/usr/include/boost/exception/detail/exception_ptr.hpp ****             {
  64:/usr/include/boost/exception/detail/exception_ptr.hpp ****             return ptr_!=other.ptr_;
  65:/usr/include/boost/exception/detail/exception_ptr.hpp ****             }
  66:/usr/include/boost/exception/detail/exception_ptr.hpp ****         operator unspecified_bool_type() const
  67:/usr/include/boost/exception/detail/exception_ptr.hpp ****             {
  68:/usr/include/boost/exception/detail/exception_ptr.hpp ****             return ptr_?&impl::get:0;
  69:/usr/include/boost/exception/detail/exception_ptr.hpp ****             }
  70:/usr/include/boost/exception/detail/exception_ptr.hpp ****         };
  71:/usr/include/boost/exception/detail/exception_ptr.hpp **** 
  72:/usr/include/boost/exception/detail/exception_ptr.hpp ****     template <class T>
  73:/usr/include/boost/exception/detail/exception_ptr.hpp ****     inline
  74:/usr/include/boost/exception/detail/exception_ptr.hpp ****     exception_ptr
  75:/usr/include/boost/exception/detail/exception_ptr.hpp ****     copy_exception( T const & e )
  76:/usr/include/boost/exception/detail/exception_ptr.hpp ****         {
  77:/usr/include/boost/exception/detail/exception_ptr.hpp ****         try
  78:/usr/include/boost/exception/detail/exception_ptr.hpp ****             {
  79:/usr/include/boost/exception/detail/exception_ptr.hpp ****             throw enable_current_exception(e);
  80:/usr/include/boost/exception/detail/exception_ptr.hpp ****             }
  81:/usr/include/boost/exception/detail/exception_ptr.hpp ****         catch(
  82:/usr/include/boost/exception/detail/exception_ptr.hpp ****         ... )
  83:/usr/include/boost/exception/detail/exception_ptr.hpp ****             {
  84:/usr/include/boost/exception/detail/exception_ptr.hpp ****             return current_exception();
  85:/usr/include/boost/exception/detail/exception_ptr.hpp ****             }
  86:/usr/include/boost/exception/detail/exception_ptr.hpp ****         }
GAS LISTING /tmp/ccvUPO8Q.s 			page 138


  87:/usr/include/boost/exception/detail/exception_ptr.hpp **** 
  88:/usr/include/boost/exception/detail/exception_ptr.hpp **** #ifndef BOOST_NO_RTTI
  89:/usr/include/boost/exception/detail/exception_ptr.hpp ****     typedef error_info<struct tag_original_exception_type,std::type_info const *> original_exceptio
  90:/usr/include/boost/exception/detail/exception_ptr.hpp **** 
  91:/usr/include/boost/exception/detail/exception_ptr.hpp ****     inline
  92:/usr/include/boost/exception/detail/exception_ptr.hpp ****     std::string
  93:/usr/include/boost/exception/detail/exception_ptr.hpp ****     to_string( original_exception_type const & x )
  94:/usr/include/boost/exception/detail/exception_ptr.hpp ****         {
  95:/usr/include/boost/exception/detail/exception_ptr.hpp ****         return core::demangle(x.value()->name());
  96:/usr/include/boost/exception/detail/exception_ptr.hpp ****         }
  97:/usr/include/boost/exception/detail/exception_ptr.hpp **** #endif
  98:/usr/include/boost/exception/detail/exception_ptr.hpp **** 
  99:/usr/include/boost/exception/detail/exception_ptr.hpp ****     namespace
 100:/usr/include/boost/exception/detail/exception_ptr.hpp ****     exception_detail
 101:/usr/include/boost/exception/detail/exception_ptr.hpp ****         {
 102:/usr/include/boost/exception/detail/exception_ptr.hpp ****         struct
 103:/usr/include/boost/exception/detail/exception_ptr.hpp ****         bad_alloc_:
 104:/usr/include/boost/exception/detail/exception_ptr.hpp ****             boost::exception,
 105:/usr/include/boost/exception/detail/exception_ptr.hpp ****             std::bad_alloc
 106:/usr/include/boost/exception/detail/exception_ptr.hpp ****                 {
 107:/usr/include/boost/exception/detail/exception_ptr.hpp ****                 ~bad_alloc_() throw() { }
 2339              		.loc 16 107 0
 2340              		.cfi_startproc
 2341 0000 55       		pushq	%rbp
 2342              		.cfi_def_cfa_offset 16
 2343              		.cfi_offset 6, -16
 2344 0001 4889E5   		movq	%rsp, %rbp
 2345              		.cfi_def_cfa_register 6
 2346 0004 4883EC10 		subq	$16, %rsp
 2347 0008 48897DF8 		movq	%rdi, -8(%rbp)
 2348              	.LBB27:
 2349              		.loc 16 107 0
 2350 000c 488D1500 		leaq	16+_ZTVN5boost16exception_detail10bad_alloc_E(%rip), %rdx
 2350      000000
 2351 0013 488B45F8 		movq	-8(%rbp), %rax
 2352 0017 488910   		movq	%rdx, (%rax)
 2353 001a 488D1500 		leaq	48+_ZTVN5boost16exception_detail10bad_alloc_E(%rip), %rdx
 2353      000000
 2354 0021 488B45F8 		movq	-8(%rbp), %rax
 2355 0025 48895028 		movq	%rdx, 40(%rax)
 2356 0029 488B45F8 		movq	-8(%rbp), %rax
 2357 002d 4883C028 		addq	$40, %rax
 2358 0031 4889C7   		movq	%rax, %rdi
 2359 0034 E8000000 		call	_ZNSt9bad_allocD2Ev@PLT
 2359      00
 2360 0039 488B45F8 		movq	-8(%rbp), %rax
 2361 003d 4889C7   		movq	%rax, %rdi
 2362 0040 E8000000 		call	_ZN5boost9exceptionD2Ev
 2362      00
 2363              	.LBE27:
 2364 0045 90       		nop
 2365 0046 C9       		leave
 2366              		.cfi_def_cfa 7, 8
 2367 0047 C3       		ret
 2368              		.cfi_endproc
 2369              	.LFE9852:
 2371              		.set	.LTHUNK0,_ZN5boost16exception_detail10bad_alloc_D2Ev
GAS LISTING /tmp/ccvUPO8Q.s 			page 139


 2372              		.weak	_ZThn40_N5boost16exception_detail10bad_alloc_D1Ev
 2374              	_ZThn40_N5boost16exception_detail10bad_alloc_D1Ev:
 2375              	.LFB15689:
 2376              		.loc 16 107 0
 2377              		.cfi_startproc
 2378 0048 4883EF28 		subq	$40, %rdi
 2379 004c EBB2     		jmp	.LTHUNK0
 2380              		.cfi_endproc
 2381              	.LFE15689:
 2383              		.weak	_ZN5boost16exception_detail10bad_alloc_D1Ev
 2384              		.set	_ZN5boost16exception_detail10bad_alloc_D1Ev,_ZN5boost16exception_detail10bad_alloc_D2Ev
 2385              		.section	.text._ZN5boost16exception_detail10bad_alloc_D0Ev,"axG",@progbits,_ZN5boost16exception_de
 2386              		.align 2
 2387              		.weak	_ZN5boost16exception_detail10bad_alloc_D0Ev
 2389              	_ZN5boost16exception_detail10bad_alloc_D0Ev:
 2390              	.LFB9854:
 2391              		.loc 16 107 0
 2392              		.cfi_startproc
 2393 0000 55       		pushq	%rbp
 2394              		.cfi_def_cfa_offset 16
 2395              		.cfi_offset 6, -16
 2396 0001 4889E5   		movq	%rsp, %rbp
 2397              		.cfi_def_cfa_register 6
 2398 0004 4883EC10 		subq	$16, %rsp
 2399 0008 48897DF8 		movq	%rdi, -8(%rbp)
 2400              		.loc 16 107 0
 2401 000c 488B45F8 		movq	-8(%rbp), %rax
 2402 0010 4889C7   		movq	%rax, %rdi
 2403 0013 E8000000 		call	_ZN5boost16exception_detail10bad_alloc_D1Ev
 2403      00
 2404 0018 488B45F8 		movq	-8(%rbp), %rax
 2405 001c BE300000 		movl	$48, %esi
 2405      00
 2406 0021 4889C7   		movq	%rax, %rdi
 2407 0024 E8000000 		call	_ZdlPvm@PLT
 2407      00
 2408 0029 C9       		leave
 2409              		.cfi_def_cfa 7, 8
 2410 002a C3       		ret
 2411              		.cfi_endproc
 2412              	.LFE9854:
 2414              		.set	.LTHUNK1,_ZN5boost16exception_detail10bad_alloc_D0Ev
 2415              		.weak	_ZThn40_N5boost16exception_detail10bad_alloc_D0Ev
 2417              	_ZThn40_N5boost16exception_detail10bad_alloc_D0Ev:
 2418              	.LFB15690:
 2419              		.loc 16 107 0
 2420              		.cfi_startproc
 2421 002b 4883EF28 		subq	$40, %rdi
 2422 002f EBCF     		jmp	.LTHUNK1
 2423              		.cfi_endproc
 2424              	.LFE15690:
 2426              		.section	.text._ZN5boost16exception_detail14bad_exception_D2Ev,"axG",@progbits,_ZN5boost16exceptio
 2427              		.align 2
 2428              		.weak	_ZN5boost16exception_detail14bad_exception_D2Ev
 2430              	_ZN5boost16exception_detail14bad_exception_D2Ev:
 2431              	.LFB9856:
 108:/usr/include/boost/exception/detail/exception_ptr.hpp ****                 };
GAS LISTING /tmp/ccvUPO8Q.s 			page 140


 109:/usr/include/boost/exception/detail/exception_ptr.hpp **** 
 110:/usr/include/boost/exception/detail/exception_ptr.hpp ****         struct
 111:/usr/include/boost/exception/detail/exception_ptr.hpp ****         bad_exception_:
 112:/usr/include/boost/exception/detail/exception_ptr.hpp ****             boost::exception,
 113:/usr/include/boost/exception/detail/exception_ptr.hpp ****             std::bad_exception
 114:/usr/include/boost/exception/detail/exception_ptr.hpp ****                 {
 115:/usr/include/boost/exception/detail/exception_ptr.hpp ****                 ~bad_exception_() throw() { }
 2432              		.loc 16 115 0
 2433              		.cfi_startproc
 2434 0000 55       		pushq	%rbp
 2435              		.cfi_def_cfa_offset 16
 2436              		.cfi_offset 6, -16
 2437 0001 4889E5   		movq	%rsp, %rbp
 2438              		.cfi_def_cfa_register 6
 2439 0004 4883EC10 		subq	$16, %rsp
 2440 0008 48897DF8 		movq	%rdi, -8(%rbp)
 2441              	.LBB28:
 2442              		.loc 16 115 0
 2443 000c 488D1500 		leaq	16+_ZTVN5boost16exception_detail14bad_exception_E(%rip), %rdx
 2443      000000
 2444 0013 488B45F8 		movq	-8(%rbp), %rax
 2445 0017 488910   		movq	%rdx, (%rax)
 2446 001a 488D1500 		leaq	48+_ZTVN5boost16exception_detail14bad_exception_E(%rip), %rdx
 2446      000000
 2447 0021 488B45F8 		movq	-8(%rbp), %rax
 2448 0025 48895028 		movq	%rdx, 40(%rax)
 2449 0029 488B45F8 		movq	-8(%rbp), %rax
 2450 002d 4883C028 		addq	$40, %rax
 2451 0031 4889C7   		movq	%rax, %rdi
 2452 0034 E8000000 		call	_ZNSt13bad_exceptionD2Ev@PLT
 2452      00
 2453 0039 488B45F8 		movq	-8(%rbp), %rax
 2454 003d 4889C7   		movq	%rax, %rdi
 2455 0040 E8000000 		call	_ZN5boost9exceptionD2Ev
 2455      00
 2456              	.LBE28:
 2457 0045 90       		nop
 2458 0046 C9       		leave
 2459              		.cfi_def_cfa 7, 8
 2460 0047 C3       		ret
 2461              		.cfi_endproc
 2462              	.LFE9856:
 2464              		.set	.LTHUNK2,_ZN5boost16exception_detail14bad_exception_D2Ev
 2465              		.weak	_ZThn40_N5boost16exception_detail14bad_exception_D1Ev
 2467              	_ZThn40_N5boost16exception_detail14bad_exception_D1Ev:
 2468              	.LFB15691:
 2469              		.loc 16 115 0
 2470              		.cfi_startproc
 2471 0048 4883EF28 		subq	$40, %rdi
 2472 004c EBB2     		jmp	.LTHUNK2
 2473              		.cfi_endproc
 2474              	.LFE15691:
 2476              		.weak	_ZN5boost16exception_detail14bad_exception_D1Ev
 2477              		.set	_ZN5boost16exception_detail14bad_exception_D1Ev,_ZN5boost16exception_detail14bad_exception_D2
 2478              		.section	.text._ZN5boost16exception_detail14bad_exception_D0Ev,"axG",@progbits,_ZN5boost16exceptio
 2479              		.align 2
 2480              		.weak	_ZN5boost16exception_detail14bad_exception_D0Ev
GAS LISTING /tmp/ccvUPO8Q.s 			page 141


 2482              	_ZN5boost16exception_detail14bad_exception_D0Ev:
 2483              	.LFB9858:
 2484              		.loc 16 115 0
 2485              		.cfi_startproc
 2486 0000 55       		pushq	%rbp
 2487              		.cfi_def_cfa_offset 16
 2488              		.cfi_offset 6, -16
 2489 0001 4889E5   		movq	%rsp, %rbp
 2490              		.cfi_def_cfa_register 6
 2491 0004 4883EC10 		subq	$16, %rsp
 2492 0008 48897DF8 		movq	%rdi, -8(%rbp)
 2493              		.loc 16 115 0
 2494 000c 488B45F8 		movq	-8(%rbp), %rax
 2495 0010 4889C7   		movq	%rax, %rdi
 2496 0013 E8000000 		call	_ZN5boost16exception_detail14bad_exception_D1Ev
 2496      00
 2497 0018 488B45F8 		movq	-8(%rbp), %rax
 2498 001c BE300000 		movl	$48, %esi
 2498      00
 2499 0021 4889C7   		movq	%rax, %rdi
 2500 0024 E8000000 		call	_ZdlPvm@PLT
 2500      00
 2501 0029 C9       		leave
 2502              		.cfi_def_cfa 7, 8
 2503 002a C3       		ret
 2504              		.cfi_endproc
 2505              	.LFE9858:
 2507              		.set	.LTHUNK3,_ZN5boost16exception_detail14bad_exception_D0Ev
 2508              		.weak	_ZThn40_N5boost16exception_detail14bad_exception_D0Ev
 2510              	_ZThn40_N5boost16exception_detail14bad_exception_D0Ev:
 2511              	.LFB15692:
 2512              		.loc 16 115 0
 2513              		.cfi_startproc
 2514 002b 4883EF28 		subq	$40, %rdi
 2515 002f EBCF     		jmp	.LTHUNK3
 2516              		.cfi_endproc
 2517              	.LFE15692:
 2519              		.section	.text._ZN5boost9exceptionC2ERKS0_,"axG",@progbits,_ZN5boost9exceptionC5ERKS0_,comdat
 2520              		.align 2
 2521              		.weak	_ZN5boost9exceptionC2ERKS0_
 2523              	_ZN5boost9exceptionC2ERKS0_:
 2524              	.LFB9868:
 220:/usr/include/boost/exception/exception.hpp ****         {
 2525              		.loc 3 220 0
 2526              		.cfi_startproc
 2527 0000 55       		pushq	%rbp
 2528              		.cfi_def_cfa_offset 16
 2529              		.cfi_offset 6, -16
 2530 0001 4889E5   		movq	%rsp, %rbp
 2531              		.cfi_def_cfa_register 6
 2532 0004 4883EC10 		subq	$16, %rsp
 2533 0008 48897DF8 		movq	%rdi, -8(%rbp)
 2534 000c 488975F0 		movq	%rsi, -16(%rbp)
 2535              	.LBB29:
 220:/usr/include/boost/exception/exception.hpp ****         {
 2536              		.loc 3 220 0
 2537 0010 488D1500 		leaq	16+_ZTVN5boost9exceptionE(%rip), %rdx
GAS LISTING /tmp/ccvUPO8Q.s 			page 142


 2537      000000
 2538 0017 488B45F8 		movq	-8(%rbp), %rax
 2539 001b 488910   		movq	%rdx, (%rax)
 2540 001e 488B45F0 		movq	-16(%rbp), %rax
 2541 0022 488D5008 		leaq	8(%rax), %rdx
 2542 0026 488B45F8 		movq	-8(%rbp), %rax
 2543 002a 4883C008 		addq	$8, %rax
 2544 002e 4889D6   		movq	%rdx, %rsi
 2545 0031 4889C7   		movq	%rax, %rdi
 2546 0034 E8000000 		call	_ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEEC1ERKS3_
 2546      00
 2547 0039 488B45F0 		movq	-16(%rbp), %rax
 2548 003d 488B5010 		movq	16(%rax), %rdx
 2549 0041 488B45F8 		movq	-8(%rbp), %rax
 2550 0045 48895010 		movq	%rdx, 16(%rax)
 2551 0049 488B45F0 		movq	-16(%rbp), %rax
 2552 004d 488B5018 		movq	24(%rax), %rdx
 2553 0051 488B45F8 		movq	-8(%rbp), %rax
 2554 0055 48895018 		movq	%rdx, 24(%rax)
 2555 0059 488B45F0 		movq	-16(%rbp), %rax
 2556 005d 8B5020   		movl	32(%rax), %edx
 2557 0060 488B45F8 		movq	-8(%rbp), %rax
 2558 0064 895020   		movl	%edx, 32(%rax)
 2559              	.LBE29:
 2560 0067 90       		nop
 2561 0068 C9       		leave
 2562              		.cfi_def_cfa 7, 8
 2563 0069 C3       		ret
 2564              		.cfi_endproc
 2565              	.LFE9868:
 2567              		.weak	_ZN5boost9exceptionC1ERKS0_
 2568              		.set	_ZN5boost9exceptionC1ERKS0_,_ZN5boost9exceptionC2ERKS0_
 2569              		.section	.text._ZN5boost13exception_ptrD2Ev,"axG",@progbits,_ZN5boost13exception_ptrD5Ev,comdat
 2570              		.align 2
 2571              		.weak	_ZN5boost13exception_ptrD2Ev
 2573              	_ZN5boost13exception_ptrD2Ev:
 2574              	.LFB9885:
  41:/usr/include/boost/exception/detail/exception_ptr.hpp ****         {
 2575              		.loc 16 41 0
 2576              		.cfi_startproc
 2577 0000 55       		pushq	%rbp
 2578              		.cfi_def_cfa_offset 16
 2579              		.cfi_offset 6, -16
 2580 0001 4889E5   		movq	%rsp, %rbp
 2581              		.cfi_def_cfa_register 6
 2582 0004 4883EC10 		subq	$16, %rsp
 2583 0008 48897DF8 		movq	%rdi, -8(%rbp)
 2584              	.LBB30:
  41:/usr/include/boost/exception/detail/exception_ptr.hpp ****         {
 2585              		.loc 16 41 0
 2586 000c 488B45F8 		movq	-8(%rbp), %rax
 2587 0010 4889C7   		movq	%rax, %rdi
 2588 0013 E8000000 		call	_ZN5boost10shared_ptrIKNS_16exception_detail10clone_baseEED1Ev
 2588      00
 2589              	.LBE30:
 2590 0018 90       		nop
 2591 0019 C9       		leave
GAS LISTING /tmp/ccvUPO8Q.s 			page 143


 2592              		.cfi_def_cfa 7, 8
 2593 001a C3       		ret
 2594              		.cfi_endproc
 2595              	.LFE9885:
 2597              		.weak	_ZN5boost13exception_ptrD1Ev
 2598              		.set	_ZN5boost13exception_ptrD1Ev,_ZN5boost13exception_ptrD2Ev
 2599              		.section	.text._ZN5boost13exception_ptrC2ERKS0_,"axG",@progbits,_ZN5boost13exception_ptrC5ERKS0_,c
 2600              		.align 2
 2601              		.weak	_ZN5boost13exception_ptrC2ERKS0_
 2603              	_ZN5boost13exception_ptrC2ERKS0_:
 2604              	.LFB9894:
  41:/usr/include/boost/exception/detail/exception_ptr.hpp ****         {
 2605              		.loc 16 41 0
 2606              		.cfi_startproc
 2607 0000 55       		pushq	%rbp
 2608              		.cfi_def_cfa_offset 16
 2609              		.cfi_offset 6, -16
 2610 0001 4889E5   		movq	%rsp, %rbp
 2611              		.cfi_def_cfa_register 6
 2612 0004 4883EC10 		subq	$16, %rsp
 2613 0008 48897DF8 		movq	%rdi, -8(%rbp)
 2614 000c 488975F0 		movq	%rsi, -16(%rbp)
 2615              	.LBB31:
  41:/usr/include/boost/exception/detail/exception_ptr.hpp ****         {
 2616              		.loc 16 41 0
 2617 0010 488B55F0 		movq	-16(%rbp), %rdx
 2618 0014 488B45F8 		movq	-8(%rbp), %rax
 2619 0018 4889D6   		movq	%rdx, %rsi
 2620 001b 4889C7   		movq	%rax, %rdi
 2621 001e E8000000 		call	_ZN5boost10shared_ptrIKNS_16exception_detail10clone_baseEEC1ERKS4_
 2621      00
 2622              	.LBE31:
 2623 0023 90       		nop
 2624 0024 C9       		leave
 2625              		.cfi_def_cfa 7, 8
 2626 0025 C3       		ret
 2627              		.cfi_endproc
 2628              	.LFE9894:
 2630              		.weak	_ZN5boost13exception_ptrC1ERKS0_
 2631              		.set	_ZN5boost13exception_ptrC1ERKS0_,_ZN5boost13exception_ptrC2ERKS0_
 2632              		.section	.text._ZN5boost6none_tC2ENS0_8init_tagE,"axG",@progbits,_ZN5boost6none_tC5ENS0_8init_tagE
 2633              		.align 2
 2634              		.weak	_ZN5boost6none_tC2ENS0_8init_tagE
 2636              	_ZN5boost6none_tC2ENS0_8init_tagE:
 2637              	.LFB10011:
 2638              		.file 17 "/usr/include/boost/none_t.hpp"
   1:/usr/include/boost/none_t.hpp **** // Copyright (C) 2003, Fernando Luis Cacciola Carballal.
   2:/usr/include/boost/none_t.hpp **** // Copyright (C) 2014, 2015 Andrzej Krzemienski.
   3:/usr/include/boost/none_t.hpp **** //
   4:/usr/include/boost/none_t.hpp **** // Use, modification, and distribution is subject to the Boost Software
   5:/usr/include/boost/none_t.hpp **** // License, Version 1.0. (See accompanying file LICENSE_1_0.txt or copy at
   6:/usr/include/boost/none_t.hpp **** // http://www.boost.org/LICENSE_1_0.txt)
   7:/usr/include/boost/none_t.hpp **** //
   8:/usr/include/boost/none_t.hpp **** // See http://www.boost.org/libs/optional for documentation.
   9:/usr/include/boost/none_t.hpp **** //
  10:/usr/include/boost/none_t.hpp **** // You are welcome to contact the author at:
  11:/usr/include/boost/none_t.hpp **** //  fernando_cacciola@hotmail.com
GAS LISTING /tmp/ccvUPO8Q.s 			page 144


  12:/usr/include/boost/none_t.hpp **** //
  13:/usr/include/boost/none_t.hpp **** #ifndef BOOST_NONE_T_17SEP2003_HPP
  14:/usr/include/boost/none_t.hpp **** #define BOOST_NONE_T_17SEP2003_HPP
  15:/usr/include/boost/none_t.hpp **** 
  16:/usr/include/boost/none_t.hpp **** namespace boost {
  17:/usr/include/boost/none_t.hpp **** 
  18:/usr/include/boost/none_t.hpp **** #ifdef BOOST_OPTIONAL_USE_OLD_DEFINITION_OF_NONE
  19:/usr/include/boost/none_t.hpp **** 
  20:/usr/include/boost/none_t.hpp **** namespace detail { struct none_helper{}; }
  21:/usr/include/boost/none_t.hpp **** typedef int detail::none_helper::*none_t ;
  22:/usr/include/boost/none_t.hpp **** 
  23:/usr/include/boost/none_t.hpp **** #elif defined BOOST_OPTIONAL_USE_SINGLETON_DEFINITION_OF_NONE
  24:/usr/include/boost/none_t.hpp **** 
  25:/usr/include/boost/none_t.hpp **** class none_t {};
  26:/usr/include/boost/none_t.hpp **** 
  27:/usr/include/boost/none_t.hpp **** #else
  28:/usr/include/boost/none_t.hpp **** 
  29:/usr/include/boost/none_t.hpp **** struct none_t
  30:/usr/include/boost/none_t.hpp **** {
  31:/usr/include/boost/none_t.hpp ****   struct init_tag{};
  32:/usr/include/boost/none_t.hpp ****   explicit none_t(init_tag){} // to disable default constructor
 2639              		.loc 17 32 0
 2640              		.cfi_startproc
 2641 0000 55       		pushq	%rbp
 2642              		.cfi_def_cfa_offset 16
 2643              		.cfi_offset 6, -16
 2644 0001 4889E5   		movq	%rsp, %rbp
 2645              		.cfi_def_cfa_register 6
 2646 0004 48897DF8 		movq	%rdi, -8(%rbp)
 2647              		.loc 17 32 0
 2648 0008 90       		nop
 2649 0009 5D       		popq	%rbp
 2650              		.cfi_def_cfa 7, 8
 2651 000a C3       		ret
 2652              		.cfi_endproc
 2653              	.LFE10011:
 2655              		.weak	_ZN5boost6none_tC1ENS0_8init_tagE
 2656              		.set	_ZN5boost6none_tC1ENS0_8init_tagE,_ZN5boost6none_tC2ENS0_8init_tagE
 2657              		.local	_ZN5boostL4noneE
 2658              		.comm	_ZN5boostL4noneE,1,1
 2659              		.section	.text._ZN2gr5block18processor_affinityEv,"axG",@progbits,_ZN2gr5block18processor_affinity
 2660              		.align 2
 2661              		.weak	_ZN2gr5block18processor_affinityEv
 2663              	_ZN2gr5block18processor_affinityEv:
 2664              	.LFB10906:
 2665              		.file 18 "/home/mpiscopo/gnuradio/include/gnuradio/block.h"
   1:/home/mpiscopo/gnuradio/include/gnuradio/block.h **** /* -*- c++ -*- */
   2:/home/mpiscopo/gnuradio/include/gnuradio/block.h **** /*
   3:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****  * Copyright 2004,2007,2009,2010,2013 Free Software Foundation, Inc.
   4:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****  *
   5:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****  * This file is part of GNU Radio
   6:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****  *
   7:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****  * GNU Radio is free software; you can redistribute it and/or modify
   8:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****  * it under the terms of the GNU General Public License as published by
   9:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****  * the Free Software Foundation; either version 3, or (at your option)
  10:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****  * any later version.
  11:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****  *
GAS LISTING /tmp/ccvUPO8Q.s 			page 145


  12:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****  * GNU Radio is distributed in the hope that it will be useful,
  13:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  14:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  15:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****  * GNU General Public License for more details.
  16:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****  *
  17:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****  * You should have received a copy of the GNU General Public License
  18:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****  * along with GNU Radio; see the file COPYING.  If not, write to
  19:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****  * the Free Software Foundation, Inc., 51 Franklin Street,
  20:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****  * Boston, MA 02110-1301, USA.
  21:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****  */
  22:/home/mpiscopo/gnuradio/include/gnuradio/block.h **** 
  23:/home/mpiscopo/gnuradio/include/gnuradio/block.h **** #ifndef INCLUDED_GR_RUNTIME_BLOCK_H
  24:/home/mpiscopo/gnuradio/include/gnuradio/block.h **** #define INCLUDED_GR_RUNTIME_BLOCK_H
  25:/home/mpiscopo/gnuradio/include/gnuradio/block.h **** 
  26:/home/mpiscopo/gnuradio/include/gnuradio/block.h **** #include <gnuradio/api.h>
  27:/home/mpiscopo/gnuradio/include/gnuradio/block.h **** #include <gnuradio/basic_block.h>
  28:/home/mpiscopo/gnuradio/include/gnuradio/block.h **** #include <gnuradio/tags.h>
  29:/home/mpiscopo/gnuradio/include/gnuradio/block.h **** #include <gnuradio/logger.h>
  30:/home/mpiscopo/gnuradio/include/gnuradio/block.h **** 
  31:/home/mpiscopo/gnuradio/include/gnuradio/block.h **** namespace gr {
  32:/home/mpiscopo/gnuradio/include/gnuradio/block.h **** 
  33:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****   /*!
  34:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****    * \brief The abstract base class for all 'terminal' processing blocks.
  35:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****    * \ingroup base_blk
  36:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****    *
  37:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****    * A signal processing flow is constructed by creating a tree of
  38:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****    * hierarchical blocks, which at any level may also contain terminal
  39:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****    * nodes that actually implement signal processing functions. This
  40:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****    * is the base class for all such leaf nodes.
  41:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****    *
  42:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****    * Blocks have a set of input streams and output streams.  The
  43:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****    * input_signature and output_signature define the number of input
  44:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****    * streams and output streams respectively, and the type of the data
  45:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****    * items in each stream.
  46:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****    *
  47:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****    * Although blocks may consume data on each input stream at a
  48:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****    * different rate, all outputs streams must produce data at the same
  49:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****    * rate.  That rate may be different from any of the input rates.
  50:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****    *
  51:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****    * User derived blocks override two methods, forecast and
  52:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****    * general_work, to implement their signal processing
  53:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****    * behavior. forecast is called by the system scheduler to determine
  54:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****    * how many items are required on each input stream in order to
  55:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****    * produce a given number of output items.
  56:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****    *
  57:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****    * general_work is called to perform the signal processing in the
  58:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****    * block.  It reads the input items and writes the output items.
  59:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****    */
  60:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****   class GR_RUNTIME_API block : public basic_block
  61:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****   {
  62:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****   public:
  63:/home/mpiscopo/gnuradio/include/gnuradio/block.h **** 
  64:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     //! Magic return values from general_work
  65:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     enum {
  66:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****       WORK_CALLED_PRODUCE = -2,
  67:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****       WORK_DONE = -1
  68:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     };
GAS LISTING /tmp/ccvUPO8Q.s 			page 146


  69:/home/mpiscopo/gnuradio/include/gnuradio/block.h **** 
  70:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     enum tag_propagation_policy_t {
  71:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****       TPP_DONT = 0,
  72:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****       TPP_ALL_TO_ALL = 1,
  73:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****       TPP_ONE_TO_ONE = 2
  74:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     };
  75:/home/mpiscopo/gnuradio/include/gnuradio/block.h **** 
  76:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     virtual ~block();
  77:/home/mpiscopo/gnuradio/include/gnuradio/block.h **** 
  78:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     /*!
  79:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * Assume block computes y_i = f(x_i, x_i-1, x_i-2, x_i-3...)
  80:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * History is the number of x_i's that are examined to produce one y_i.
  81:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * This comes in handy for FIR filters, where we use history to
  82:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * ensure that our input contains the appropriate "history" for the
  83:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * filter. History should be equal to the number of filter taps. First
  84:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * history samples (when there are no previous samples) are
  85:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * initialized with zeroes.
  86:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      */
  87:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     unsigned history() const;
  88:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     void  set_history(unsigned history);
  89:/home/mpiscopo/gnuradio/include/gnuradio/block.h **** 
  90:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     /*!
  91:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * Declares the block's delay in samples. Since the delay of
  92:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * blocks like filters is derived from the taps and not the block
  93:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * itself, we cannot automatically calculate this value and so
  94:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * leave it as a user-defined property. It defaults to 0 is not
  95:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * set.
  96:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      *
  97:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * This does not actively set the delay; it just tells the
  98:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * scheduler what the delay is.
  99:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      *
 100:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * This delay is mostly used to adjust the placement of the tags
 101:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * and is not currently used for any signal processing. When a tag
 102:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * is passed through a block with internal delay, its location
 103:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * should be moved based on the delay of the block. This interface
 104:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * allows us to tell the scheduler this value.
 105:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      *
 106:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * \param which The buffer on which to set the delay.
 107:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * \param delay The sample delay of the data stream.
 108:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      */
 109:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     void declare_sample_delay(int which, unsigned delay);
 110:/home/mpiscopo/gnuradio/include/gnuradio/block.h **** 
 111:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     /*!
 112:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * Convenience wrapper to gr::block::declare_delay(int which, unsigned delay)
 113:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * to set all ports to the same delay.
 114:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      */
 115:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     void declare_sample_delay(unsigned delay);
 116:/home/mpiscopo/gnuradio/include/gnuradio/block.h **** 
 117:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     /*!
 118:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * Gets the delay of the block. Since the delay of blocks like
 119:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * filters is derived from the taps and not the block itself, we
 120:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * cannot automatically calculate this value and so leave it as a
 121:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * user-defined property. It defaults to 0 is not set.
 122:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      *
 123:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * \param which Which port from which to get the sample delay.
 124:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      */
 125:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     unsigned sample_delay(int which) const;
GAS LISTING /tmp/ccvUPO8Q.s 			page 147


 126:/home/mpiscopo/gnuradio/include/gnuradio/block.h **** 
 127:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     /*!
 128:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * \brief Return true if this block has a fixed input to output rate.
 129:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      *
 130:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * If true, then fixed_rate_in_to_out and fixed_rate_out_to_in may be called.
 131:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      */
 132:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     bool fixed_rate() const { return d_fixed_rate; }
 133:/home/mpiscopo/gnuradio/include/gnuradio/block.h **** 
 134:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     // ----------------------------------------------------------------
 135:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     //		override these to define your behavior
 136:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     // ----------------------------------------------------------------
 137:/home/mpiscopo/gnuradio/include/gnuradio/block.h **** 
 138:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     /*!
 139:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * \brief  Estimate input requirements given output request
 140:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      *
 141:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * \param noutput_items           number of output items to produce
 142:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * \param ninput_items_required   number of input items required on each input stream
 143:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      *
 144:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * Given a request to product \p noutput_items, estimate the
 145:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * number of data items required on each input stream.  The
 146:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * estimate doesn't have to be exact, but should be close.
 147:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      */
 148:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     virtual void forecast(int noutput_items,
 149:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****                           gr_vector_int &ninput_items_required);
 150:/home/mpiscopo/gnuradio/include/gnuradio/block.h **** 
 151:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     /*!
 152:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * \brief compute output items from input items
 153:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      *
 154:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * \param noutput_items	number of output items to write on each output stream
 155:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * \param ninput_items	number of input items available on each input stream
 156:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * \param input_items	vector of pointers to the input items, one entry per input stream
 157:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * \param output_items	vector of pointers to the output items, one entry per output stream
 158:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      *
 159:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * \returns number of items actually written to each output stream, or -1 on EOF.
 160:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * It is OK to return a value less than noutput_items.  -1 <= return value <= noutput_items
 161:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      *
 162:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * general_work must call consume or consume_each to indicate how
 163:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * many items were consumed on each input stream.
 164:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      */
 165:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     virtual int general_work(int noutput_items,
 166:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****                              gr_vector_int &ninput_items,
 167:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****                              gr_vector_const_void_star &input_items,
 168:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****                              gr_vector_void_star &output_items);
 169:/home/mpiscopo/gnuradio/include/gnuradio/block.h **** 
 170:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     /*!
 171:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * \brief Called to enable drivers, etc for i/o devices.
 172:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      *
 173:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * This allows a block to enable an associated driver to begin
 174:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * transferring data just before we start to execute the scheduler.
 175:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * The end result is that this reduces latency in the pipeline
 176:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * when dealing with audio devices, usrps, etc.
 177:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      */
 178:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     virtual bool start();
 179:/home/mpiscopo/gnuradio/include/gnuradio/block.h **** 
 180:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     /*!
 181:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * \brief Called to disable drivers, etc for i/o devices.
 182:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      */
GAS LISTING /tmp/ccvUPO8Q.s 			page 148


 183:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     virtual bool stop();
 184:/home/mpiscopo/gnuradio/include/gnuradio/block.h **** 
 185:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     // ----------------------------------------------------------------
 186:/home/mpiscopo/gnuradio/include/gnuradio/block.h **** 
 187:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     /*!
 188:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * \brief Constrain the noutput_items argument passed to forecast and general_work
 189:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      *
 190:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * set_output_multiple causes the scheduler to ensure that the
 191:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * noutput_items argument passed to forecast and general_work will
 192:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * be an integer multiple of \param multiple The default value of
 193:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * output multiple is 1.
 194:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      */
 195:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     void set_output_multiple(int multiple);
 196:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     int  output_multiple() const { return d_output_multiple; }
 197:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     bool output_multiple_set() const { return d_output_multiple_set; }
 198:/home/mpiscopo/gnuradio/include/gnuradio/block.h **** 
 199:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     /*!
 200:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * \brief Constrains buffers to work on a set item alignment (for SIMD)
 201:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      *
 202:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * set_alignment_multiple causes the scheduler to ensure that the
 203:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * noutput_items argument passed to forecast and general_work will
 204:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * be an integer multiple of \param multiple The default value is
 205:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * 1.
 206:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      *
 207:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * This control is similar to the output_multiple setting, except
 208:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * that if the number of items passed to the block is less than
 209:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * the output_multiple, this value is ignored and the block can
 210:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * produce like normal. The d_unaligned value is set to the number
 211:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * of items the block is off by. In the next call to general_work,
 212:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * the noutput_items is set to d_unaligned or less until
 213:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * d_unaligned==0. The buffers are now aligned again and the
 214:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * aligned calls can be performed again.
 215:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      */
 216:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     void set_alignment(int multiple);
 217:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     int  alignment() const { return d_output_multiple; }
 218:/home/mpiscopo/gnuradio/include/gnuradio/block.h **** 
 219:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     void set_unaligned(int na);
 220:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     int  unaligned() const { return d_unaligned; }
 221:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     void set_is_unaligned(bool u);
 222:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     bool is_unaligned() const { return d_is_unaligned; }
 223:/home/mpiscopo/gnuradio/include/gnuradio/block.h **** 
 224:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     /*!
 225:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * \brief Tell the scheduler \p how_many_items of input stream \p
 226:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * which_input were consumed.
 227:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * This function should be called at the end of work() or general_work(), after all processing 
 228:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      */
 229:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     void consume(int which_input, int how_many_items);
 230:/home/mpiscopo/gnuradio/include/gnuradio/block.h **** 
 231:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     /*!
 232:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * \brief Tell the scheduler \p how_many_items were consumed on
 233:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * each input stream.
 234:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      */
 235:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     void consume_each(int how_many_items);
 236:/home/mpiscopo/gnuradio/include/gnuradio/block.h **** 
 237:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     /*!
 238:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * \brief Tell the scheduler \p how_many_items were produced on
 239:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * output stream \p which_output.
GAS LISTING /tmp/ccvUPO8Q.s 			page 149


 240:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      *
 241:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * If the block's general_work method calls produce, \p
 242:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * general_work must return WORK_CALLED_PRODUCE.
 243:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      */
 244:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     void produce(int which_output, int how_many_items);
 245:/home/mpiscopo/gnuradio/include/gnuradio/block.h **** 
 246:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     /*!
 247:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * \brief Set the approximate output rate / input rate
 248:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      *
 249:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * Provide a hint to the buffer allocator and scheduler.
 250:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * The default relative_rate is 1.0
 251:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      *
 252:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * decimators have relative_rates < 1.0
 253:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * interpolators have relative_rates > 1.0
 254:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      */
 255:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     void set_relative_rate(double relative_rate);
 256:/home/mpiscopo/gnuradio/include/gnuradio/block.h **** 
 257:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     /*!
 258:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * \brief return the approximate output rate / input rate
 259:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      */
 260:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     double relative_rate() const { return d_relative_rate; }
 261:/home/mpiscopo/gnuradio/include/gnuradio/block.h **** 
 262:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     /*
 263:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * The following two methods provide special case info to the
 264:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * scheduler in the event that a block has a fixed input to output
 265:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * ratio.  sync_block, sync_decimator and
 266:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * sync_interpolator override these.  If you're fixed rate,
 267:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * subclass one of those.
 268:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      */
 269:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     /*!
 270:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * \brief Given ninput samples, return number of output samples that will be produced.
 271:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * N.B. this is only defined if fixed_rate returns true.
 272:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * Generally speaking, you don't need to override this.
 273:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      */
 274:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     virtual int fixed_rate_ninput_to_noutput(int ninput);
 275:/home/mpiscopo/gnuradio/include/gnuradio/block.h **** 
 276:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     /*!
 277:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * \brief Given noutput samples, return number of input samples required to produce noutput.
 278:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * N.B. this is only defined if fixed_rate returns true.
 279:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * Generally speaking, you don't need to override this.
 280:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      */
 281:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     virtual int fixed_rate_noutput_to_ninput(int noutput);
 282:/home/mpiscopo/gnuradio/include/gnuradio/block.h **** 
 283:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     /*!
 284:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * \brief Return the number of items read on input stream which_input
 285:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      */
 286:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     uint64_t nitems_read(unsigned int which_input);
 287:/home/mpiscopo/gnuradio/include/gnuradio/block.h **** 
 288:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     /*!
 289:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * \brief  Return the number of items written on output stream which_output
 290:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      */
 291:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     uint64_t nitems_written(unsigned int which_output);
 292:/home/mpiscopo/gnuradio/include/gnuradio/block.h **** 
 293:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     /*!
 294:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * \brief Asks for the policy used by the scheduler to moved tags downstream.
 295:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      */
 296:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     tag_propagation_policy_t tag_propagation_policy();
GAS LISTING /tmp/ccvUPO8Q.s 			page 150


 297:/home/mpiscopo/gnuradio/include/gnuradio/block.h **** 
 298:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     /*!
 299:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * \brief Set the policy by the scheduler to determine how tags are moved downstream.
 300:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      */
 301:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     void set_tag_propagation_policy(tag_propagation_policy_t p);
 302:/home/mpiscopo/gnuradio/include/gnuradio/block.h **** 
 303:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     /*!
 304:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * \brief Return the minimum number of output items this block can
 305:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * produce during a call to work.
 306:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      *
 307:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * Should be 0 for most blocks.  Useful if we're dealing with
 308:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * packets and the block produces one packet per call to work.
 309:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      */
 310:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     int min_noutput_items() const { return d_min_noutput_items; }
 311:/home/mpiscopo/gnuradio/include/gnuradio/block.h **** 
 312:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     /*!
 313:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * \brief Set the minimum number of output items this block can
 314:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * produce during a call to work.
 315:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      *
 316:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * \param m the minimum noutput_items this block can produce.
 317:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      */
 318:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     void set_min_noutput_items(int m) { d_min_noutput_items = m; }
 319:/home/mpiscopo/gnuradio/include/gnuradio/block.h **** 
 320:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     /*!
 321:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * \brief Return the maximum number of output items this block will
 322:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * handle during a call to work.
 323:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      */
 324:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     int max_noutput_items();
 325:/home/mpiscopo/gnuradio/include/gnuradio/block.h **** 
 326:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     /*!
 327:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * \brief Set the maximum number of output items this block will
 328:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * handle during a call to work.
 329:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      *
 330:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * \param m the maximum noutput_items this block will handle.
 331:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      */
 332:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     void set_max_noutput_items(int m);
 333:/home/mpiscopo/gnuradio/include/gnuradio/block.h **** 
 334:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     /*!
 335:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * \brief Clear the switch for using the max_noutput_items value of this block.
 336:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      *
 337:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * When is_set_max_noutput_items() returns 'true', the scheduler
 338:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * will use the value returned by max_noutput_items() to limit the
 339:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * size of the number of items possible for this block's work
 340:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * function. If is_set_max_notput_items() returns 'false', then
 341:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * the scheduler ignores the internal value and uses the value set
 342:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * globally in the top_block.
 343:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      *
 344:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * Use this value to clear the 'is_set' flag so the scheduler will
 345:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * ignore this. Use the set_max_noutput_items(m) call to both set
 346:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * a new value for max_noutput_items and to re-enable its use in
 347:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * the scheduler.
 348:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      */
 349:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     void unset_max_noutput_items();
 350:/home/mpiscopo/gnuradio/include/gnuradio/block.h **** 
 351:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     /*!
 352:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * \brief Ask the block if the flag is or is not set to use the
 353:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * internal value of max_noutput_items during a call to work.
GAS LISTING /tmp/ccvUPO8Q.s 			page 151


 354:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      */
 355:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     bool is_set_max_noutput_items();
 356:/home/mpiscopo/gnuradio/include/gnuradio/block.h **** 
 357:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     /*
 358:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * Used to expand the vectors that hold the min/max buffer sizes.
 359:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      *
 360:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * Specifically, when -1 is used, the vectors are just initialized
 361:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * with 1 value; this is used by the flat_flowgraph to expand when
 362:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * required to add a new value for new ports on these blocks.
 363:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      */
 364:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     void expand_minmax_buffer(int port);
 365:/home/mpiscopo/gnuradio/include/gnuradio/block.h **** 
 366:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     /*!
 367:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * \brief Returns max buffer size on output port \p i.
 368:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      */
 369:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     long max_output_buffer(size_t i);
 370:/home/mpiscopo/gnuradio/include/gnuradio/block.h **** 
 371:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     /*!
 372:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * \brief Request limit on max buffer size on all output ports.
 373:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      *
 374:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * \details
 375:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * This is an advanced feature. Calling this can affect some
 376:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * fundamental assumptions about the system behavior and
 377:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * performance.
 378:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      *
 379:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * The actual buffer size is determined by a number of other
 380:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * factors from the block and system. This function only provides
 381:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * a requested maximum. The buffers will always be a multiple of
 382:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * the system page size, which may be larger than the value asked
 383:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * for here.
 384:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      *
 385:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * \param max_output_buffer the requested maximum output size in items.
 386:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      */
 387:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     void set_max_output_buffer(long max_output_buffer);
 388:/home/mpiscopo/gnuradio/include/gnuradio/block.h **** 
 389:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     /*!
 390:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * \brief Request limit on max buffer size on output port \p port.
 391:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      *
 392:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * \details
 393:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * This is an advanced feature. Calling this can affect some
 394:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * fundamental assumptions about the system behavior and
 395:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * performance.
 396:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      *
 397:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * The actual buffer size is determined by a number of other
 398:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * factors from the block and system. This function only provides
 399:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * a requested maximum. The buffers will always be a multiple of
 400:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * the system page size, which may be larger than the value asked
 401:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * for here.
 402:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      *
 403:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * \param port the output port the request applies to.
 404:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * \param max_output_buffer the requested maximum output size in items.
 405:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      */
 406:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     void set_max_output_buffer(int port, long max_output_buffer);
 407:/home/mpiscopo/gnuradio/include/gnuradio/block.h **** 
 408:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     /*!
 409:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * \brief Returns min buffer size on output port \p i.
 410:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      */
GAS LISTING /tmp/ccvUPO8Q.s 			page 152


 411:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     long min_output_buffer(size_t i);
 412:/home/mpiscopo/gnuradio/include/gnuradio/block.h **** 
 413:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     /*!
 414:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * \brief Request limit on the minimum buffer size on all output
 415:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * ports.
 416:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      *
 417:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * \details
 418:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * This is an advanced feature. Calling this can affect some
 419:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * fundamental assumptions about the system behavior and
 420:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * performance.
 421:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      *
 422:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * The actual buffer size is determined by a number of other
 423:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * factors from the block and system. This function only provides
 424:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * a requested minimum. The buffers will always be a multiple of
 425:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * the system page size, which may be larger than the value asked
 426:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * for here.
 427:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      *
 428:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * \param min_output_buffer the requested minimum output size in items.
 429:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      */
 430:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     void set_min_output_buffer(long min_output_buffer);
 431:/home/mpiscopo/gnuradio/include/gnuradio/block.h **** 
 432:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     /*!
 433:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * \brief Request limit on min buffer size on output port \p port.
 434:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      *
 435:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * \details
 436:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * This is an advanced feature. Calling this can affect some
 437:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * fundamental assumptions about the system behavior and
 438:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * performance.
 439:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      *
 440:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * The actual buffer size is determined by a number of other
 441:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * factors from the block and system. This function only provides
 442:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * a requested minimum. The buffers will always be a multiple of
 443:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * the system page size, which may be larger than the value asked
 444:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * for here.
 445:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      *
 446:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * \param port the output port the request applies to.
 447:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * \param min_output_buffer the requested minimum output size in items.
 448:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      */
 449:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     void set_min_output_buffer(int port, long min_output_buffer);
 450:/home/mpiscopo/gnuradio/include/gnuradio/block.h **** 
 451:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     // --------------- Performance counter functions -------------
 452:/home/mpiscopo/gnuradio/include/gnuradio/block.h **** 
 453:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     /*!
 454:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * \brief Gets instantaneous noutput_items performance counter.
 455:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      */
 456:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     float pc_noutput_items();
 457:/home/mpiscopo/gnuradio/include/gnuradio/block.h **** 
 458:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     /*!
 459:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * \brief Gets average noutput_items performance counter.
 460:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      */
 461:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     float pc_noutput_items_avg();
 462:/home/mpiscopo/gnuradio/include/gnuradio/block.h **** 
 463:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     /*!
 464:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * \brief Gets variance of noutput_items performance counter.
 465:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      */
 466:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     float pc_noutput_items_var();
 467:/home/mpiscopo/gnuradio/include/gnuradio/block.h **** 
GAS LISTING /tmp/ccvUPO8Q.s 			page 153


 468:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     /*!
 469:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * \brief Gets instantaneous num items produced performance counter.
 470:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      */
 471:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     float pc_nproduced();
 472:/home/mpiscopo/gnuradio/include/gnuradio/block.h **** 
 473:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     /*!
 474:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * \brief Gets average num items produced performance counter.
 475:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      */
 476:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     float pc_nproduced_avg();
 477:/home/mpiscopo/gnuradio/include/gnuradio/block.h **** 
 478:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     /*!
 479:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * \brief Gets variance of  num items produced performance counter.
 480:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      */
 481:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     float pc_nproduced_var();
 482:/home/mpiscopo/gnuradio/include/gnuradio/block.h **** 
 483:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     /*!
 484:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * \brief Gets instantaneous fullness of \p which input buffer.
 485:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      */
 486:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     float pc_input_buffers_full(int which);
 487:/home/mpiscopo/gnuradio/include/gnuradio/block.h **** 
 488:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     /*!
 489:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * \brief Gets average fullness of \p which input buffer.
 490:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      */
 491:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     float pc_input_buffers_full_avg(int which);
 492:/home/mpiscopo/gnuradio/include/gnuradio/block.h **** 
 493:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     /*!
 494:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * \brief Gets variance of fullness of \p which input buffer.
 495:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      */
 496:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     float pc_input_buffers_full_var(int which);
 497:/home/mpiscopo/gnuradio/include/gnuradio/block.h **** 
 498:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     /*!
 499:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * \brief Gets instantaneous fullness of all input buffers.
 500:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      */
 501:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     std::vector<float> pc_input_buffers_full();
 502:/home/mpiscopo/gnuradio/include/gnuradio/block.h **** 
 503:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     /*!
 504:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * \brief Gets average fullness of all input buffers.
 505:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      */
 506:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     std::vector<float> pc_input_buffers_full_avg();
 507:/home/mpiscopo/gnuradio/include/gnuradio/block.h **** 
 508:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     /*!
 509:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * \brief Gets variance of fullness of all input buffers.
 510:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      */
 511:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     std::vector<float> pc_input_buffers_full_var();
 512:/home/mpiscopo/gnuradio/include/gnuradio/block.h **** 
 513:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     /*!
 514:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * \brief Gets instantaneous fullness of \p which input buffer.
 515:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      */
 516:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     float pc_output_buffers_full(int which);
 517:/home/mpiscopo/gnuradio/include/gnuradio/block.h **** 
 518:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     /*!
 519:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * \brief Gets average fullness of \p which input buffer.
 520:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      */
 521:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     float pc_output_buffers_full_avg(int which);
 522:/home/mpiscopo/gnuradio/include/gnuradio/block.h **** 
 523:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     /*!
 524:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * \brief Gets variance of fullness of \p which input buffer.
GAS LISTING /tmp/ccvUPO8Q.s 			page 154


 525:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      */
 526:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     float pc_output_buffers_full_var(int which);
 527:/home/mpiscopo/gnuradio/include/gnuradio/block.h **** 
 528:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     /*!
 529:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * \brief Gets instantaneous fullness of all output buffers.
 530:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      */
 531:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     std::vector<float> pc_output_buffers_full();
 532:/home/mpiscopo/gnuradio/include/gnuradio/block.h **** 
 533:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     /*!
 534:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * \brief Gets average fullness of all output buffers.
 535:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      */
 536:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     std::vector<float> pc_output_buffers_full_avg();
 537:/home/mpiscopo/gnuradio/include/gnuradio/block.h **** 
 538:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     /*!
 539:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * \brief Gets variance of fullness of all output buffers.
 540:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      */
 541:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     std::vector<float> pc_output_buffers_full_var();
 542:/home/mpiscopo/gnuradio/include/gnuradio/block.h **** 
 543:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     /*!
 544:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * \brief Gets instantaneous clock cycles spent in work.
 545:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      */
 546:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     float pc_work_time();
 547:/home/mpiscopo/gnuradio/include/gnuradio/block.h **** 
 548:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     /*!
 549:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * \brief Gets average clock cycles spent in work.
 550:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      */
 551:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     float pc_work_time_avg();
 552:/home/mpiscopo/gnuradio/include/gnuradio/block.h **** 
 553:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     /*!
 554:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * \brief Gets average clock cycles spent in work.
 555:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      */
 556:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     float pc_work_time_var();
 557:/home/mpiscopo/gnuradio/include/gnuradio/block.h **** 
 558:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     /*!
 559:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * \brief Gets total clock cycles spent in work.
 560:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      */
 561:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     float pc_work_time_total();
 562:/home/mpiscopo/gnuradio/include/gnuradio/block.h **** 
 563:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     /*!
 564:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * \brief Gets average throughput.
 565:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      */
 566:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     float pc_throughput_avg();
 567:/home/mpiscopo/gnuradio/include/gnuradio/block.h **** 
 568:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     /*!
 569:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * \brief Resets the performance counters
 570:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      */
 571:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     void reset_perf_counters();
 572:/home/mpiscopo/gnuradio/include/gnuradio/block.h **** 
 573:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     /*!
 574:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * \brief Sets up export of perf. counters to ControlPort. Only
 575:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * called by the scheduler.
 576:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      */
 577:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     void setup_pc_rpc();
 578:/home/mpiscopo/gnuradio/include/gnuradio/block.h **** 
 579:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     /*!
 580:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * \brief Checks if this block is already exporting perf. counters
 581:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * to ControlPort.
GAS LISTING /tmp/ccvUPO8Q.s 			page 155


 582:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      */
 583:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     bool is_pc_rpc_set() { return d_pc_rpc_set; }
 584:/home/mpiscopo/gnuradio/include/gnuradio/block.h **** 
 585:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     /*!
 586:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * \brief If the block calls this in its constructor, it's
 587:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * perf. counters will not be exported.
 588:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      */
 589:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     void no_pc_rpc() { d_pc_rpc_set = true; }
 590:/home/mpiscopo/gnuradio/include/gnuradio/block.h **** 
 591:/home/mpiscopo/gnuradio/include/gnuradio/block.h **** 
 592:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     // ----------------------------------------------------------------------------
 593:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     // Functions to handle thread affinity
 594:/home/mpiscopo/gnuradio/include/gnuradio/block.h **** 
 595:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     /*!
 596:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * \brief Set the thread's affinity to processor core \p n.
 597:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      *
 598:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * \param mask a vector of ints of the core numbers available to this block.
 599:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      */
 600:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     void set_processor_affinity(const std::vector<int> &mask);
 601:/home/mpiscopo/gnuradio/include/gnuradio/block.h **** 
 602:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     /*!
 603:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * \brief Remove processor affinity to a specific core.
 604:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      */
 605:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     void unset_processor_affinity();
 606:/home/mpiscopo/gnuradio/include/gnuradio/block.h **** 
 607:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     /*!
 608:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * \brief Get the current processor affinity.
 609:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      */
 610:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     std::vector<int> processor_affinity() { return d_affinity; }
 2666              		.loc 18 610 0
 2667              		.cfi_startproc
 2668 0000 55       		pushq	%rbp
 2669              		.cfi_def_cfa_offset 16
 2670              		.cfi_offset 6, -16
 2671 0001 4889E5   		movq	%rsp, %rbp
 2672              		.cfi_def_cfa_register 6
 2673 0004 4883EC10 		subq	$16, %rsp
 2674 0008 48897DF8 		movq	%rdi, -8(%rbp)
 2675 000c 488975F0 		movq	%rsi, -16(%rbp)
 2676              		.loc 18 610 0
 2677 0010 488B45F0 		movq	-16(%rbp), %rax
 2678 0014 488D90C8 		leaq	456(%rax), %rdx
 2678      010000
 2679 001b 488B45F8 		movq	-8(%rbp), %rax
 2680 001f 4889D6   		movq	%rdx, %rsi
 2681 0022 4889C7   		movq	%rax, %rdi
 2682 0025 E8000000 		call	_ZNSt6vectorIiSaIiEEC1ERKS1_
 2682      00
 2683 002a 488B45F8 		movq	-8(%rbp), %rax
 2684 002e C9       		leave
 2685              		.cfi_def_cfa 7, 8
 2686 002f C3       		ret
 2687              		.cfi_endproc
 2688              	.LFE10906:
 2690              		.data
 2691              		.align 32
 2694              	_ZN2gr6blocksL14tanh_lut_tableE:
GAS LISTING /tmp/ccvUPO8Q.s 			page 156


 2695 0000 83CA76BF 		.long	3212233347
 2696 0004 C68076BF 		.long	3212214470
 2697 0008 C63476BF 		.long	3212195014
 2698 000c 71E675BF 		.long	3212174961
 2699 0010 B89575BF 		.long	3212154296
 2700 0014 874275BF 		.long	3212132999
 2701 0018 CCEC74BF 		.long	3212111052
 2702 001c 749474BF 		.long	3212088436
 2703 0020 6D3974BF 		.long	3212065133
 2704 0024 A1DB73BF 		.long	3212041121
 2705 0028 FD7A73BF 		.long	3212016381
 2706 002c 6B1773BF 		.long	3211990891
 2707 0030 D7B072BF 		.long	3211964631
 2708 0034 2A4772BF 		.long	3211937578
 2709 0038 4EDA71BF 		.long	3211909710
 2710 003c 2B6A71BF 		.long	3211881003
 2711 0040 ABF670BF 		.long	3211851435
 2712 0044 B47F70BF 		.long	3211820980
 2713 0048 2F0570BF 		.long	3211789615
 2714 004c 01876FBF 		.long	3211757313
 2715 0050 11056FBF 		.long	3211724049
 2716 0054 447F6EBF 		.long	3211689796
 2717 0058 7FF56DBF 		.long	3211654527
 2718 005c A7676DBF 		.long	3211618215
 2719 0060 9ED56CBF 		.long	3211580830
 2720 0064 493F6CBF 		.long	3211542345
 2721 0068 89A46BBF 		.long	3211502729
 2722 006c 41056BBF 		.long	3211461953
 2723 0070 51616ABF 		.long	3211419985
 2724 0074 9AB869BF 		.long	3211376794
 2725 0078 FC0A69BF 		.long	3211332348
 2726 007c 575868BF 		.long	3211286615
 2727 0080 89A067BF 		.long	3211239561
 2728 0084 6FE366BF 		.long	3211191151
 2729 0088 E92066BF 		.long	3211141353
 2730 008c D25865BF 		.long	3211090130
 2731 0090 088B64BF 		.long	3211037448
 2732 0094 64B763BF 		.long	3210983268
 2733 0098 C4DD62BF 		.long	3210927556
 2734 009c 01FE61BF 		.long	3210870273
 2735 00a0 F51761BF 		.long	3210811381
 2736 00a4 7A2B60BF 		.long	3210750842
 2737 00a8 69385FBF 		.long	3210688617
 2738 00ac 9B3E5EBF 		.long	3210624667
 2739 00b0 E73D5DBF 		.long	3210558951
 2740 00b4 24365CBF 		.long	3210491428
 2741 00b8 2B275BBF 		.long	3210422059
 2742 00bc D2105ABF 		.long	3210350802
 2743 00c0 EEF258BF 		.long	3210277614
 2744 00c4 57CD57BF 		.long	3210202455
 2745 00c8 E29F56BF 		.long	3210125282
 2746 00cc 636A55BF 		.long	3210046051
 2747 00d0 B22C54BF 		.long	3209964722
 2748 00d4 A2E652BF 		.long	3209881250
 2749 00d8 089851BF 		.long	3209795592
 2750 00dc BA4050BF 		.long	3209707706
 2751 00e0 8DE04EBF 		.long	3209617549
GAS LISTING /tmp/ccvUPO8Q.s 			page 157


 2752 00e4 54774DBF 		.long	3209525076
 2753 00e8 E5044CBF 		.long	3209430245
 2754 00ec 16894ABF 		.long	3209333014
 2755 00f0 BB0349BF 		.long	3209233339
 2756 00f4 AA7447BF 		.long	3209131178
 2757 00f8 BADB45BF 		.long	3209026490
 2758 00fc C03844BF 		.long	3208919232
 2759 0100 948B42BF 		.long	3208809364
 2760 0104 0DD440BF 		.long	3208696845
 2761 0108 03123FBF 		.long	3208581635
 2762 010c 50453DBF 		.long	3208463696
 2763 0110 CE6D3BBF 		.long	3208342990
 2764 0114 578B39BF 		.long	3208219479
 2765 0118 C79D37BF 		.long	3208093127
 2766 011c FDA435BF 		.long	3207963901
 2767 0120 D5A033BF 		.long	3207831765
 2768 0124 319131BF 		.long	3207696689
 2769 0128 F1752FBF 		.long	3207558641
 2770 012c F94E2DBF 		.long	3207417593
 2771 0130 2E1C2BBF 		.long	3207273518
 2772 0134 75DD28BF 		.long	3207126389
 2773 0138 B89226BF 		.long	3206976184
 2774 013c E23B24BF 		.long	3206822882
 2775 0140 DED821BF 		.long	3206666462
 2776 0144 9E691FBF 		.long	3206506910
 2777 0148 12EE1CBF 		.long	3206344210
 2778 014c 2F661ABF 		.long	3206178351
 2779 0150 ECD117BF 		.long	3206009324
 2780 0154 433115BF 		.long	3205837123
 2781 0158 318412BF 		.long	3205661745
 2782 015c B6CA0FBF 		.long	3205483190
 2783 0160 D4040DBF 		.long	3205301460
 2784 0164 93320ABF 		.long	3205116563
 2785 0168 FC5307BF 		.long	3204928508
 2786 016c 1C6904BF 		.long	3204737308
 2787 0170 047201BF 		.long	3204542980
 2788 0174 93DDFCBE 		.long	3204242835
 2789 0178 09BFF6BE 		.long	3203841801
 2790 017c A188F0BE 		.long	3203434657
 2791 0180 9D3AEABE 		.long	3203021469
 2792 0184 44D5E3BE 		.long	3202602308
 2793 0188 E758DDBE 		.long	3202177255
 2794 018c DEC5D6BE 		.long	3201746398
 2795 0190 8A1CD0BE 		.long	3201309834
 2796 0194 535DC9BE 		.long	3200867667
 2797 0198 AC88C2BE 		.long	3200420012
 2798 019c 0C9FBBBE 		.long	3199966988
 2799 01a0 F7A0B4BE 		.long	3199508727
 2800 01a4 F78EADBE 		.long	3199045367
 2801 01a8 9C69A6BE 		.long	3198577052
 2802 01ac 82319FBE 		.long	3198103938
 2803 01b0 4BE797BE 		.long	3197626187
 2804 01b4 A18B90BE 		.long	3197143969
 2805 01b8 351F89BE 		.long	3196657461
 2806 01bc C0A281BE 		.long	3196166848
 2807 01c0 062E74BE 		.long	3195284998
 2808 01c4 8AF964BE 		.long	3194288522
GAS LISTING /tmp/ccvUPO8Q.s 			page 158


 2809 01c8 A8A955BE 		.long	3193285032
 2810 01cc 074046BE 		.long	3192274951
 2811 01d0 5DBE36BE 		.long	3191258717
 2812 01d4 6B2627BE 		.long	3190236779
 2813 01d8 F97917BE 		.long	3189209593
 2814 01dc DFBA07BE 		.long	3188177631
 2815 01e0 F0D5EFBD 		.long	3186611696
 2816 01e4 5618D0BD 		.long	3184531542
 2817 01e8 CC40B0BD 		.long	3182444748
 2818 01ec 385390BD 		.long	3180352312
 2819 01f0 1AA760BD 		.long	3177228058
 2820 01f4 918B20BD 		.long	3173026705
 2821 01f8 A6B7C0BC 		.long	3166746534
 2822 01fc D87F00BC 		.long	3154149336
 2823 0200 D87F003C 		.long	1006665688
 2824 0204 A6B7C03C 		.long	1019262886
 2825 0208 918B203D 		.long	1025543057
 2826 020c 1AA7603D 		.long	1029744410
 2827 0210 3853903D 		.long	1032868664
 2828 0214 CC40B03D 		.long	1034961100
 2829 0218 5618D03D 		.long	1037047894
 2830 021c F0D5EF3D 		.long	1039128048
 2831 0220 DFBA073E 		.long	1040693983
 2832 0224 F979173E 		.long	1041725945
 2833 0228 6B26273E 		.long	1042753131
 2834 022c 5DBE363E 		.long	1043775069
 2835 0230 0740463E 		.long	1044791303
 2836 0234 A8A9553E 		.long	1045801384
 2837 0238 8AF9643E 		.long	1046804874
 2838 023c 062E743E 		.long	1047801350
 2839 0240 C0A2813E 		.long	1048683200
 2840 0244 351F893E 		.long	1049173813
 2841 0248 A18B903E 		.long	1049660321
 2842 024c 4BE7973E 		.long	1050142539
 2843 0250 82319F3E 		.long	1050620290
 2844 0254 9C69A63E 		.long	1051093404
 2845 0258 F78EAD3E 		.long	1051561719
 2846 025c F7A0B43E 		.long	1052025079
 2847 0260 0C9FBB3E 		.long	1052483340
 2848 0264 AC88C23E 		.long	1052936364
 2849 0268 535DC93E 		.long	1053384019
 2850 026c 8A1CD03E 		.long	1053826186
 2851 0270 DEC5D63E 		.long	1054262750
 2852 0274 E758DD3E 		.long	1054693607
 2853 0278 44D5E33E 		.long	1055118660
 2854 027c 9D3AEA3E 		.long	1055537821
 2855 0280 A188F03E 		.long	1055951009
 2856 0284 09BFF63E 		.long	1056358153
 2857 0288 93DDFC3E 		.long	1056759187
 2858 028c 0472013F 		.long	1057059332
 2859 0290 1C69043F 		.long	1057253660
 2860 0294 FC53073F 		.long	1057444860
 2861 0298 93320A3F 		.long	1057632915
 2862 029c D4040D3F 		.long	1057817812
 2863 02a0 B6CA0F3F 		.long	1057999542
 2864 02a4 3184123F 		.long	1058178097
 2865 02a8 4331153F 		.long	1058353475
GAS LISTING /tmp/ccvUPO8Q.s 			page 159


 2866 02ac ECD1173F 		.long	1058525676
 2867 02b0 2F661A3F 		.long	1058694703
 2868 02b4 12EE1C3F 		.long	1058860562
 2869 02b8 9E691F3F 		.long	1059023262
 2870 02bc DED8213F 		.long	1059182814
 2871 02c0 E23B243F 		.long	1059339234
 2872 02c4 B892263F 		.long	1059492536
 2873 02c8 75DD283F 		.long	1059642741
 2874 02cc 2E1C2B3F 		.long	1059789870
 2875 02d0 F94E2D3F 		.long	1059933945
 2876 02d4 F1752F3F 		.long	1060074993
 2877 02d8 3191313F 		.long	1060213041
 2878 02dc D5A0333F 		.long	1060348117
 2879 02e0 FDA4353F 		.long	1060480253
 2880 02e4 C79D373F 		.long	1060609479
 2881 02e8 578B393F 		.long	1060735831
 2882 02ec CE6D3B3F 		.long	1060859342
 2883 02f0 50453D3F 		.long	1060980048
 2884 02f4 03123F3F 		.long	1061097987
 2885 02f8 0DD4403F 		.long	1061213197
 2886 02fc 948B423F 		.long	1061325716
 2887 0300 C038443F 		.long	1061435584
 2888 0304 BADB453F 		.long	1061542842
 2889 0308 AA74473F 		.long	1061647530
 2890 030c BB03493F 		.long	1061749691
 2891 0310 16894A3F 		.long	1061849366
 2892 0314 E5044C3F 		.long	1061946597
 2893 0318 54774D3F 		.long	1062041428
 2894 031c 8DE04E3F 		.long	1062133901
 2895 0320 BA40503F 		.long	1062224058
 2896 0324 0898513F 		.long	1062311944
 2897 0328 A2E6523F 		.long	1062397602
 2898 032c B22C543F 		.long	1062481074
 2899 0330 636A553F 		.long	1062562403
 2900 0334 E29F563F 		.long	1062641634
 2901 0338 57CD573F 		.long	1062718807
 2902 033c EEF2583F 		.long	1062793966
 2903 0340 D2105A3F 		.long	1062867154
 2904 0344 2B275B3F 		.long	1062938411
 2905 0348 24365C3F 		.long	1063007780
 2906 034c E73D5D3F 		.long	1063075303
 2907 0350 9B3E5E3F 		.long	1063141019
 2908 0354 69385F3F 		.long	1063204969
 2909 0358 7A2B603F 		.long	1063267194
 2910 035c F517613F 		.long	1063327733
 2911 0360 01FE613F 		.long	1063386625
 2912 0364 C4DD623F 		.long	1063443908
 2913 0368 64B7633F 		.long	1063499620
 2914 036c 088B643F 		.long	1063553800
 2915 0370 D258653F 		.long	1063606482
 2916 0374 E920663F 		.long	1063657705
 2917 0378 6FE3663F 		.long	1063707503
 2918 037c 89A0673F 		.long	1063755913
 2919 0380 5758683F 		.long	1063802967
 2920 0384 FC0A693F 		.long	1063848700
 2921 0388 9AB8693F 		.long	1063893146
 2922 038c 51616A3F 		.long	1063936337
GAS LISTING /tmp/ccvUPO8Q.s 			page 160


 2923 0390 41056B3F 		.long	1063978305
 2924 0394 89A46B3F 		.long	1064019081
 2925 0398 493F6C3F 		.long	1064058697
 2926 039c 9ED56C3F 		.long	1064097182
 2927 03a0 A7676D3F 		.long	1064134567
 2928 03a4 7FF56D3F 		.long	1064170879
 2929 03a8 447F6E3F 		.long	1064206148
 2930 03ac 11056F3F 		.long	1064240401
 2931 03b0 01876F3F 		.long	1064273665
 2932 03b4 2F05703F 		.long	1064305967
 2933 03b8 B47F703F 		.long	1064337332
 2934 03bc ABF6703F 		.long	1064367787
 2935 03c0 2B6A713F 		.long	1064397355
 2936 03c4 4EDA713F 		.long	1064426062
 2937 03c8 2A47723F 		.long	1064453930
 2938 03cc D7B0723F 		.long	1064480983
 2939 03d0 6B17733F 		.long	1064507243
 2940 03d4 FD7A733F 		.long	1064532733
 2941 03d8 A1DB733F 		.long	1064557473
 2942 03dc 6D39743F 		.long	1064581485
 2943 03e0 7494743F 		.long	1064604788
 2944 03e4 CCEC743F 		.long	1064627404
 2945 03e8 8742753F 		.long	1064649351
 2946 03ec B895753F 		.long	1064670648
 2947 03f0 71E6753F 		.long	1064691313
 2948 03f4 C634763F 		.long	1064711366
 2949 03f8 C680763F 		.long	1064730822
 2950 03fc 83CA763F 		.long	1064749699
 2951              		.section	.text._ZNK2gr5lfast12costas2_impl16phase_detector_2ESt7complexIfE,"axG",@progbits,_ZNK2gr
 2952              		.align 2
 2953              		.weak	_ZNK2gr5lfast12costas2_impl16phase_detector_2ESt7complexIfE
 2955              	_ZNK2gr5lfast12costas2_impl16phase_detector_2ESt7complexIfE:
 2956              	.LFB10930:
 2957              		.file 19 "costas2_impl.h"
   1:costas2_impl.h **** /* -*- c++ -*- */
   2:costas2_impl.h **** /* 
   3:costas2_impl.h ****  * Copyright 2017 ghostop14.
   4:costas2_impl.h ****  * 
   5:costas2_impl.h ****  * This is free software; you can redistribute it and/or modify
   6:costas2_impl.h ****  * it under the terms of the GNU General Public License as published by
   7:costas2_impl.h ****  * the Free Software Foundation; either version 3, or (at your option)
   8:costas2_impl.h ****  * any later version.
   9:costas2_impl.h ****  * 
  10:costas2_impl.h ****  * This software is distributed in the hope that it will be useful,
  11:costas2_impl.h ****  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  12:costas2_impl.h ****  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  13:costas2_impl.h ****  * GNU General Public License for more details.
  14:costas2_impl.h ****  * 
  15:costas2_impl.h ****  * You should have received a copy of the GNU General Public License
  16:costas2_impl.h ****  * along with this software; see the file COPYING.  If not, write to
  17:costas2_impl.h ****  * the Free Software Foundation, Inc., 51 Franklin Street,
  18:costas2_impl.h ****  * Boston, MA 02110-1301, USA.
  19:costas2_impl.h ****  */
  20:costas2_impl.h **** 
  21:costas2_impl.h **** #ifndef INCLUDED_LFAST_COSTAS2_IMPL_H
  22:costas2_impl.h **** #define INCLUDED_LFAST_COSTAS2_IMPL_H
  23:costas2_impl.h **** 
GAS LISTING /tmp/ccvUPO8Q.s 			page 161


  24:costas2_impl.h **** #include <lfast/costas2.h>
  25:costas2_impl.h **** 
  26:costas2_impl.h **** namespace gr {
  27:costas2_impl.h ****   namespace lfast {
  28:costas2_impl.h **** 
  29:costas2_impl.h ****     class costas2_impl : public costas2
  30:costas2_impl.h ****     {
  31:costas2_impl.h ****      private:
  32:costas2_impl.h ****        int d_order;
  33:costas2_impl.h ****        float d_error;
  34:costas2_impl.h ****        float d_noise;
  35:costas2_impl.h **** 
  36:costas2_impl.h ****        float
  37:costas2_impl.h ****        phase_detector_2(gr_complex sample) const
 2958              		.loc 19 37 0
 2959              		.cfi_startproc
 2960 0000 55       		pushq	%rbp
 2961              		.cfi_def_cfa_offset 16
 2962              		.cfi_offset 6, -16
 2963 0001 4889E5   		movq	%rsp, %rbp
 2964              		.cfi_def_cfa_register 6
 2965 0004 4883EC20 		subq	$32, %rsp
 2966 0008 48897DF8 		movq	%rdi, -8(%rbp)
 2967 000c C4E1F97E 		vmovq	%xmm0, %rax
 2967      C0
 2968 0011 488945F0 		movq	%rax, -16(%rbp)
 2969 0015 C5FA104D 		vmovss	-16(%rbp), %xmm1
 2969      F0
 2970 001a C5FA1045 		vmovss	-12(%rbp), %xmm0
 2970      F4
 2971 001f C5FA114D 		vmovss	%xmm1, -24(%rbp)
 2971      E8
 2972 0024 C5FA1145 		vmovss	%xmm0, -20(%rbp)
 2972      EC
  38:costas2_impl.h ****        {
  39:costas2_impl.h ****          return (sample.real()*sample.imag());
 2973              		.loc 19 39 0
 2974 0029 488D45E8 		leaq	-24(%rbp), %rax
 2975 002d 4889C7   		movq	%rax, %rdi
 2976 0030 E8000000 		call	_ZNKSt7complexIfE4realB5cxx11Ev
 2976      00
 2977 0035 C5FA1145 		vmovss	%xmm0, -28(%rbp)
 2977      E4
 2978 003a 488D45E8 		leaq	-24(%rbp), %rax
 2979 003e 4889C7   		movq	%rax, %rdi
 2980 0041 E8000000 		call	_ZNKSt7complexIfE4imagB5cxx11Ev
 2980      00
 2981 0046 C5FA5945 		vmulss	-28(%rbp), %xmm0, %xmm0
 2981      E4
  40:costas2_impl.h ****        }
 2982              		.loc 19 40 0
 2983 004b C9       		leave
 2984              		.cfi_def_cfa 7, 8
 2985 004c C3       		ret
 2986              		.cfi_endproc
 2987              	.LFE10930:
 2989              		.text
GAS LISTING /tmp/ccvUPO8Q.s 			page 162


 2991              	_ZL7gr_expjf:
 2992              	.LFB10931:
 2993              		.file 20 "/home/mpiscopo/gnuradio/include/gnuradio/expj.h"
   1:/home/mpiscopo/gnuradio/include/gnuradio/expj.h **** /* -*- c++ -*- */
   2:/home/mpiscopo/gnuradio/include/gnuradio/expj.h **** /*
   3:/home/mpiscopo/gnuradio/include/gnuradio/expj.h ****  * Copyright 2006 Free Software Foundation, Inc.
   4:/home/mpiscopo/gnuradio/include/gnuradio/expj.h ****  *
   5:/home/mpiscopo/gnuradio/include/gnuradio/expj.h ****  * This file is part of GNU Radio
   6:/home/mpiscopo/gnuradio/include/gnuradio/expj.h ****  *
   7:/home/mpiscopo/gnuradio/include/gnuradio/expj.h ****  * GNU Radio is free software; you can redistribute it and/or modify
   8:/home/mpiscopo/gnuradio/include/gnuradio/expj.h ****  * it under the terms of the GNU General Public License as published by
   9:/home/mpiscopo/gnuradio/include/gnuradio/expj.h ****  * the Free Software Foundation; either version 3, or (at your option)
  10:/home/mpiscopo/gnuradio/include/gnuradio/expj.h ****  * any later version.
  11:/home/mpiscopo/gnuradio/include/gnuradio/expj.h ****  *
  12:/home/mpiscopo/gnuradio/include/gnuradio/expj.h ****  * GNU Radio is distributed in the hope that it will be useful,
  13:/home/mpiscopo/gnuradio/include/gnuradio/expj.h ****  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  14:/home/mpiscopo/gnuradio/include/gnuradio/expj.h ****  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  15:/home/mpiscopo/gnuradio/include/gnuradio/expj.h ****  * GNU General Public License for more details.
  16:/home/mpiscopo/gnuradio/include/gnuradio/expj.h ****  *
  17:/home/mpiscopo/gnuradio/include/gnuradio/expj.h ****  * You should have received a copy of the GNU General Public License
  18:/home/mpiscopo/gnuradio/include/gnuradio/expj.h ****  * along with GNU Radio; see the file COPYING.  If not, write to
  19:/home/mpiscopo/gnuradio/include/gnuradio/expj.h ****  * the Free Software Foundation, Inc., 51 Franklin Street,
  20:/home/mpiscopo/gnuradio/include/gnuradio/expj.h ****  * Boston, MA 02110-1301, USA.
  21:/home/mpiscopo/gnuradio/include/gnuradio/expj.h ****  */
  22:/home/mpiscopo/gnuradio/include/gnuradio/expj.h **** #ifndef INCLUDED_GR_EXPJ_H
  23:/home/mpiscopo/gnuradio/include/gnuradio/expj.h **** #define INCLUDED_GR_EXPJ_H
  24:/home/mpiscopo/gnuradio/include/gnuradio/expj.h **** 
  25:/home/mpiscopo/gnuradio/include/gnuradio/expj.h **** #include <gnuradio/api.h>
  26:/home/mpiscopo/gnuradio/include/gnuradio/expj.h **** #include <gnuradio/sincos.h>
  27:/home/mpiscopo/gnuradio/include/gnuradio/expj.h **** #include <gnuradio/types.h>
  28:/home/mpiscopo/gnuradio/include/gnuradio/expj.h **** 
  29:/home/mpiscopo/gnuradio/include/gnuradio/expj.h **** static inline gr_complex
  30:/home/mpiscopo/gnuradio/include/gnuradio/expj.h **** gr_expj(float phase)
  31:/home/mpiscopo/gnuradio/include/gnuradio/expj.h **** {
 2994              		.loc 20 31 0
 2995              		.cfi_startproc
 2996 0000 55       		pushq	%rbp
 2997              		.cfi_def_cfa_offset 16
 2998              		.cfi_offset 6, -16
 2999 0001 4889E5   		movq	%rsp, %rbp
 3000              		.cfi_def_cfa_register 6
 3001 0004 4883EC30 		subq	$48, %rsp
 3002 0008 C5FA1145 		vmovss	%xmm0, -20(%rbp)
 3002      EC
  32:/home/mpiscopo/gnuradio/include/gnuradio/expj.h ****   float	t_imag, t_real;
  33:/home/mpiscopo/gnuradio/include/gnuradio/expj.h ****   gr::sincosf(phase, &t_imag, &t_real);
 3003              		.loc 20 33 0
 3004 000d 488D4DF0 		leaq	-16(%rbp), %rcx
 3005 0011 488D55F4 		leaq	-12(%rbp), %rdx
 3006 0015 8B45EC   		movl	-20(%rbp), %eax
 3007 0018 4889CE   		movq	%rcx, %rsi
 3008 001b 4889D7   		movq	%rdx, %rdi
 3009 001e 8945D8   		movl	%eax, -40(%rbp)
 3010 0021 C5FA1045 		vmovss	-40(%rbp), %xmm0
 3010      D8
 3011 0026 E8000000 		call	_ZN2gr7sincosfEfPfS0_@PLT
 3011      00
GAS LISTING /tmp/ccvUPO8Q.s 			page 163


  34:/home/mpiscopo/gnuradio/include/gnuradio/expj.h ****   return gr_complex(t_real, t_imag);
 3012              		.loc 20 34 0
 3013 002b C5FA1045 		vmovss	-12(%rbp), %xmm0
 3013      F4
 3014 0030 8B55F0   		movl	-16(%rbp), %edx
 3015 0033 488D45F8 		leaq	-8(%rbp), %rax
 3016 0037 C5F828C8 		vmovaps	%xmm0, %xmm1
 3017 003b 8955D8   		movl	%edx, -40(%rbp)
 3018 003e C5FA1045 		vmovss	-40(%rbp), %xmm0
 3018      D8
 3019 0043 4889C7   		movq	%rax, %rdi
 3020 0046 E8000000 		call	_ZNSt7complexIfEC1Eff
 3020      00
 3021 004b C5FA104D 		vmovss	-8(%rbp), %xmm1
 3021      F8
 3022 0050 C5FA1045 		vmovss	-4(%rbp), %xmm0
 3022      FC
 3023 0055 C5FA114D 		vmovss	%xmm1, -28(%rbp)
 3023      E4
 3024 005a C5FA1145 		vmovss	%xmm0, -24(%rbp)
 3024      E8
 3025 005f 488B45E4 		movq	-28(%rbp), %rax
  35:/home/mpiscopo/gnuradio/include/gnuradio/expj.h **** }
 3026              		.loc 20 35 0
 3027 0063 488945D8 		movq	%rax, -40(%rbp)
 3028 0067 C5FA7E45 		vmovq	-40(%rbp), %xmm0
 3028      D8
 3029 006c C9       		leave
 3030              		.cfi_def_cfa 7, 8
 3031 006d C3       		ret
 3032              		.cfi_endproc
 3033              	.LFE10931:
 3036              	_ZN2grL15branchless_clipEff:
 3037              	.LFB10934:
 3038              		.file 21 "/home/mpiscopo/gnuradio/include/gnuradio/math.h"
   1:/home/mpiscopo/gnuradio/include/gnuradio/math.h **** /* -*- c++ -*- */
   2:/home/mpiscopo/gnuradio/include/gnuradio/math.h **** /*
   3:/home/mpiscopo/gnuradio/include/gnuradio/math.h ****  * Copyright 2003,2005,2008,2013 Free Software Foundation, Inc.
   4:/home/mpiscopo/gnuradio/include/gnuradio/math.h ****  *
   5:/home/mpiscopo/gnuradio/include/gnuradio/math.h ****  * This file is part of GNU Radio
   6:/home/mpiscopo/gnuradio/include/gnuradio/math.h ****  *
   7:/home/mpiscopo/gnuradio/include/gnuradio/math.h ****  * GNU Radio is free software; you can redistribute it and/or modify
   8:/home/mpiscopo/gnuradio/include/gnuradio/math.h ****  * it under the terms of the GNU General Public License as published by
   9:/home/mpiscopo/gnuradio/include/gnuradio/math.h ****  * the Free Software Foundation; either version 3, or (at your option)
  10:/home/mpiscopo/gnuradio/include/gnuradio/math.h ****  * any later version.
  11:/home/mpiscopo/gnuradio/include/gnuradio/math.h ****  *
  12:/home/mpiscopo/gnuradio/include/gnuradio/math.h ****  * GNU Radio is distributed in the hope that it will be useful,
  13:/home/mpiscopo/gnuradio/include/gnuradio/math.h ****  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  14:/home/mpiscopo/gnuradio/include/gnuradio/math.h ****  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  15:/home/mpiscopo/gnuradio/include/gnuradio/math.h ****  * GNU General Public License for more details.
  16:/home/mpiscopo/gnuradio/include/gnuradio/math.h ****  *
  17:/home/mpiscopo/gnuradio/include/gnuradio/math.h ****  * You should have received a copy of the GNU General Public License
  18:/home/mpiscopo/gnuradio/include/gnuradio/math.h ****  * along with GNU Radio; see the file COPYING.  If not, write to
  19:/home/mpiscopo/gnuradio/include/gnuradio/math.h ****  * the Free Software Foundation, Inc., 51 Franklin Street,
  20:/home/mpiscopo/gnuradio/include/gnuradio/math.h ****  * Boston, MA 02110-1301, USA.
  21:/home/mpiscopo/gnuradio/include/gnuradio/math.h ****  */
  22:/home/mpiscopo/gnuradio/include/gnuradio/math.h **** 
GAS LISTING /tmp/ccvUPO8Q.s 			page 164


  23:/home/mpiscopo/gnuradio/include/gnuradio/math.h **** /*
  24:/home/mpiscopo/gnuradio/include/gnuradio/math.h ****  * mathematical odds and ends.
  25:/home/mpiscopo/gnuradio/include/gnuradio/math.h ****  */
  26:/home/mpiscopo/gnuradio/include/gnuradio/math.h **** 
  27:/home/mpiscopo/gnuradio/include/gnuradio/math.h **** #ifndef _GR_MATH_H_
  28:/home/mpiscopo/gnuradio/include/gnuradio/math.h **** #define _GR_MATH_H_
  29:/home/mpiscopo/gnuradio/include/gnuradio/math.h **** 
  30:/home/mpiscopo/gnuradio/include/gnuradio/math.h **** #include <cmath>
  31:/home/mpiscopo/gnuradio/include/gnuradio/math.h **** #include <gnuradio/api.h>
  32:/home/mpiscopo/gnuradio/include/gnuradio/math.h **** #include <gnuradio/gr_complex.h>
  33:/home/mpiscopo/gnuradio/include/gnuradio/math.h **** 
  34:/home/mpiscopo/gnuradio/include/gnuradio/math.h **** namespace gr {
  35:/home/mpiscopo/gnuradio/include/gnuradio/math.h **** 
  36:/home/mpiscopo/gnuradio/include/gnuradio/math.h ****   static inline bool
  37:/home/mpiscopo/gnuradio/include/gnuradio/math.h ****   is_power_of_2(long x)
  38:/home/mpiscopo/gnuradio/include/gnuradio/math.h ****   {
  39:/home/mpiscopo/gnuradio/include/gnuradio/math.h ****     return x != 0 && (x & (x-1)) == 0;
  40:/home/mpiscopo/gnuradio/include/gnuradio/math.h ****   }
  41:/home/mpiscopo/gnuradio/include/gnuradio/math.h **** 
  42:/home/mpiscopo/gnuradio/include/gnuradio/math.h ****   /*!
  43:/home/mpiscopo/gnuradio/include/gnuradio/math.h ****    * \brief Fast arc tangent using table lookup and linear interpolation
  44:/home/mpiscopo/gnuradio/include/gnuradio/math.h ****    * \ingroup misc
  45:/home/mpiscopo/gnuradio/include/gnuradio/math.h ****    *
  46:/home/mpiscopo/gnuradio/include/gnuradio/math.h ****    * \param y component of input vector
  47:/home/mpiscopo/gnuradio/include/gnuradio/math.h ****    * \param x component of input vector
  48:/home/mpiscopo/gnuradio/include/gnuradio/math.h ****    * \returns float angle angle of vector (x, y) in radians
  49:/home/mpiscopo/gnuradio/include/gnuradio/math.h ****    *
  50:/home/mpiscopo/gnuradio/include/gnuradio/math.h ****    * This function calculates the angle of the vector (x,y) based on a
  51:/home/mpiscopo/gnuradio/include/gnuradio/math.h ****    * table lookup and linear interpolation. The table uses a 256 point
  52:/home/mpiscopo/gnuradio/include/gnuradio/math.h ****    * table covering -45 to +45 degrees and uses symetry to determine
  53:/home/mpiscopo/gnuradio/include/gnuradio/math.h ****    * the final angle value in the range of -180 to 180 degrees. Note
  54:/home/mpiscopo/gnuradio/include/gnuradio/math.h ****    * that this function uses the small angle approximation for values
  55:/home/mpiscopo/gnuradio/include/gnuradio/math.h ****    * close to zero. This routine calculates the arc tangent with an
  56:/home/mpiscopo/gnuradio/include/gnuradio/math.h ****    * average error of +/- 0.045 degrees.
  57:/home/mpiscopo/gnuradio/include/gnuradio/math.h ****    */
  58:/home/mpiscopo/gnuradio/include/gnuradio/math.h ****   GR_RUNTIME_API float fast_atan2f(float y, float x);
  59:/home/mpiscopo/gnuradio/include/gnuradio/math.h **** 
  60:/home/mpiscopo/gnuradio/include/gnuradio/math.h ****   static inline float
  61:/home/mpiscopo/gnuradio/include/gnuradio/math.h ****   fast_atan2f(gr_complex z)
  62:/home/mpiscopo/gnuradio/include/gnuradio/math.h ****   {
  63:/home/mpiscopo/gnuradio/include/gnuradio/math.h ****     return fast_atan2f(z.imag(), z.real());
  64:/home/mpiscopo/gnuradio/include/gnuradio/math.h ****   }
  65:/home/mpiscopo/gnuradio/include/gnuradio/math.h **** 
  66:/home/mpiscopo/gnuradio/include/gnuradio/math.h ****   /* This bounds x by +/- clip without a branch */
  67:/home/mpiscopo/gnuradio/include/gnuradio/math.h ****   static inline float
  68:/home/mpiscopo/gnuradio/include/gnuradio/math.h ****   branchless_clip(float x, float clip)
  69:/home/mpiscopo/gnuradio/include/gnuradio/math.h ****   {
 3039              		.loc 21 69 0
 3040              		.cfi_startproc
 3041 006e 55       		pushq	%rbp
 3042              		.cfi_def_cfa_offset 16
 3043              		.cfi_offset 6, -16
 3044 006f 4889E5   		movq	%rsp, %rbp
 3045              		.cfi_def_cfa_register 6
 3046 0072 C5FA1145 		vmovss	%xmm0, -20(%rbp)
 3046      EC
 3047 0077 C5FA114D 		vmovss	%xmm1, -24(%rbp)
GAS LISTING /tmp/ccvUPO8Q.s 			page 165


 3047      E8
  70:/home/mpiscopo/gnuradio/include/gnuradio/math.h ****     float x1 = fabsf(x+clip);
 3048              		.loc 21 70 0
 3049 007c C5FA1045 		vmovss	-20(%rbp), %xmm0
 3049      EC
 3050 0081 C5FA5845 		vaddss	-24(%rbp), %xmm0, %xmm0
 3050      E8
 3051 0086 C5FA100D 		vmovss	.LC0(%rip), %xmm1
 3051      00000000 
 3052 008e C5F854C1 		vandps	%xmm1, %xmm0, %xmm0
 3053 0092 C5FA1145 		vmovss	%xmm0, -4(%rbp)
 3053      FC
  71:/home/mpiscopo/gnuradio/include/gnuradio/math.h ****     float x2 = fabsf(x-clip);
 3054              		.loc 21 71 0
 3055 0097 C5FA1045 		vmovss	-20(%rbp), %xmm0
 3055      EC
 3056 009c C5FA5C45 		vsubss	-24(%rbp), %xmm0, %xmm0
 3056      E8
 3057 00a1 C5FA100D 		vmovss	.LC0(%rip), %xmm1
 3057      00000000 
 3058 00a9 C5F854C1 		vandps	%xmm1, %xmm0, %xmm0
 3059 00ad C5FA1145 		vmovss	%xmm0, -8(%rbp)
 3059      F8
  72:/home/mpiscopo/gnuradio/include/gnuradio/math.h ****     x1 -= x2;
 3060              		.loc 21 72 0
 3061 00b2 C5FA1045 		vmovss	-4(%rbp), %xmm0
 3061      FC
 3062 00b7 C5FA5C45 		vsubss	-8(%rbp), %xmm0, %xmm0
 3062      F8
 3063 00bc C5FA1145 		vmovss	%xmm0, -4(%rbp)
 3063      FC
  73:/home/mpiscopo/gnuradio/include/gnuradio/math.h ****     return 0.5*x1;
 3064              		.loc 21 73 0
 3065 00c1 C5FA104D 		vmovss	-4(%rbp), %xmm1
 3065      FC
 3066 00c6 C5FA1005 		vmovss	.LC3(%rip), %xmm0
 3066      00000000 
 3067 00ce C5F259C0 		vmulss	%xmm0, %xmm1, %xmm0
  74:/home/mpiscopo/gnuradio/include/gnuradio/math.h ****   }
 3068              		.loc 21 74 0
 3069 00d2 5D       		popq	%rbp
 3070              		.cfi_def_cfa 7, 8
 3071 00d3 C3       		ret
 3072              		.cfi_endproc
 3073              	.LFE10934:
 3075              		.section	.text._ZN5boost10shared_ptrIN2gr5lfast12costas2_implEED2Ev,"axG",@progbits,_ZN5boost10sha
 3076              		.align 2
 3077              		.weak	_ZN5boost10shared_ptrIN2gr5lfast12costas2_implEED2Ev
 3079              	_ZN5boost10shared_ptrIN2gr5lfast12costas2_implEED2Ev:
 3080              	.LFB10952:
 3081              		.loc 7 336 0
 3082              		.cfi_startproc
 3083 0000 55       		pushq	%rbp
 3084              		.cfi_def_cfa_offset 16
 3085              		.cfi_offset 6, -16
 3086 0001 4889E5   		movq	%rsp, %rbp
 3087              		.cfi_def_cfa_register 6
GAS LISTING /tmp/ccvUPO8Q.s 			page 166


 3088 0004 4883EC10 		subq	$16, %rsp
 3089 0008 48897DF8 		movq	%rdi, -8(%rbp)
 3090              	.LBB32:
 3091              		.loc 7 336 0
 3092 000c 488B45F8 		movq	-8(%rbp), %rax
 3093 0010 4883C008 		addq	$8, %rax
 3094 0014 4889C7   		movq	%rax, %rdi
 3095 0017 E8000000 		call	_ZN5boost6detail12shared_countD1Ev
 3095      00
 3096              	.LBE32:
 3097 001c 90       		nop
 3098 001d C9       		leave
 3099              		.cfi_def_cfa 7, 8
 3100 001e C3       		ret
 3101              		.cfi_endproc
 3102              	.LFE10952:
 3104              		.weak	_ZN5boost10shared_ptrIN2gr5lfast12costas2_implEED1Ev
 3105              		.set	_ZN5boost10shared_ptrIN2gr5lfast12costas2_implEED1Ev,_ZN5boost10shared_ptrIN2gr5lfast12costas
 3106              		.text
 3107              		.align 2
 3108              		.globl	_ZN2gr5lfast7costas24makeEfi
 3110              	_ZN2gr5lfast7costas24makeEfi:
 3111              	.LFB10950:
 3112              		.file 22 "costas2_impl.cc"
   1:costas2_impl.cc **** /* -*- c++ -*- */
   2:costas2_impl.cc **** /* 
   3:costas2_impl.cc ****  * Copyright 2017 ghostop14.
   4:costas2_impl.cc ****  * 
   5:costas2_impl.cc ****  * This is free software; you can redistribute it and/or modify
   6:costas2_impl.cc ****  * it under the terms of the GNU General Public License as published by
   7:costas2_impl.cc ****  * the Free Software Foundation; either version 3, or (at your option)
   8:costas2_impl.cc ****  * any later version.
   9:costas2_impl.cc ****  * 
  10:costas2_impl.cc ****  * This software is distributed in the hope that it will be useful,
  11:costas2_impl.cc ****  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  12:costas2_impl.cc ****  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  13:costas2_impl.cc ****  * GNU General Public License for more details.
  14:costas2_impl.cc ****  * 
  15:costas2_impl.cc ****  * You should have received a copy of the GNU General Public License
  16:costas2_impl.cc ****  * along with this software; see the file COPYING.  If not, write to
  17:costas2_impl.cc ****  * the Free Software Foundation, Inc., 51 Franklin Street,
  18:costas2_impl.cc ****  * Boston, MA 02110-1301, USA.
  19:costas2_impl.cc ****  */
  20:costas2_impl.cc **** 
  21:costas2_impl.cc **** 
  22:costas2_impl.cc **** //  Note:  To compile and generate intermingled assembly, use this command:
  23:costas2_impl.cc **** // gcc -I $Gnuradio_DIR/include -c -g -Wa,-a,-ad costas2_impl.cc > costas2_impl.s
  24:costas2_impl.cc **** // You can add the -mfma  switch to force fma compilation
  25:costas2_impl.cc **** 
  26:costas2_impl.cc **** #ifdef HAVE_CONFIG_H
  27:costas2_impl.cc **** #include "config.h"
  28:costas2_impl.cc **** #endif
  29:costas2_impl.cc **** 
  30:costas2_impl.cc **** #include <gnuradio/io_signature.h>
  31:costas2_impl.cc **** #include "costas2_impl.h"
  32:costas2_impl.cc **** #include <gnuradio/sincos.h>
  33:costas2_impl.cc **** #include <gnuradio/expj.h>
GAS LISTING /tmp/ccvUPO8Q.s 			page 167


  34:costas2_impl.cc **** #include <gnuradio/math.h>
  35:costas2_impl.cc **** #include "clSComplex.h"
  36:costas2_impl.cc **** 
  37:costas2_impl.cc **** #define CL_TWO_PI 6.28318530717958647692
  38:costas2_impl.cc **** #define CL_MINUS_TWO_PI -6.28318530717958647692
  39:costas2_impl.cc **** 
  40:costas2_impl.cc **** // assisted detection of Fused Multiply Add (FMA) functionality
  41:costas2_impl.cc **** #if !defined(__FMA__) && defined(__AVX2__)
  42:costas2_impl.cc **** #define __FMA__ 1
  43:costas2_impl.cc **** #endif
  44:costas2_impl.cc **** 
  45:costas2_impl.cc **** #if defined(FP_FAST_FMA)
  46:costas2_impl.cc **** #define __FMA__ 1
  47:costas2_impl.cc **** #endif
  48:costas2_impl.cc **** 
  49:costas2_impl.cc **** #if defined(__FMA__)
  50:costas2_impl.cc **** #pragma message "FMA support detected.  Compiling for Fused Multiply/Add support."
  51:costas2_impl.cc **** #else
  52:costas2_impl.cc **** #pragma message "No FMA support detected.  Compiling for normal math."
  53:costas2_impl.cc **** #endif
  54:costas2_impl.cc **** 
  55:costas2_impl.cc **** namespace gr {
  56:costas2_impl.cc ****   namespace lfast {
  57:costas2_impl.cc **** 
  58:costas2_impl.cc ****     costas2::sptr
  59:costas2_impl.cc ****     costas2::make(float loop_bw, int order)
  60:costas2_impl.cc ****     {
 3113              		.loc 22 60 0
 3114              		.cfi_startproc
 3115              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 3116              		.cfi_lsda 0x1b,.LLSDA10950
 3117 00d4 55       		pushq	%rbp
 3118              		.cfi_def_cfa_offset 16
 3119              		.cfi_offset 6, -16
 3120 00d5 4889E5   		movq	%rsp, %rbp
 3121              		.cfi_def_cfa_register 6
 3122 00d8 4154     		pushq	%r12
 3123 00da 53       		pushq	%rbx
 3124 00db 4883EC40 		subq	$64, %rsp
 3125              		.cfi_offset 12, -24
 3126              		.cfi_offset 3, -32
 3127 00df 48897DC8 		movq	%rdi, -56(%rbp)
 3128 00e3 C5FA1145 		vmovss	%xmm0, -60(%rbp)
 3128      C4
 3129 00e8 8975C0   		movl	%esi, -64(%rbp)
  61:costas2_impl.cc ****       return gnuradio::get_initial_sptr
  62:costas2_impl.cc ****         (new costas2_impl(loop_bw, order));
 3130              		.loc 22 62 0
 3131 00eb BFA00200 		movl	$672, %edi
 3131      00
 3132              	.LEHB13:
 3133 00f0 E8000000 		call	_Znwm@PLT
 3133      00
 3134              	.LEHE13:
 3135 00f5 4889C3   		movq	%rax, %rbx
 3136 00f8 8B55C0   		movl	-64(%rbp), %edx
 3137 00fb 8B45C4   		movl	-60(%rbp), %eax
GAS LISTING /tmp/ccvUPO8Q.s 			page 168


 3138 00fe 89D6     		movl	%edx, %esi
 3139 0100 8945BC   		movl	%eax, -68(%rbp)
 3140 0103 C5FA1045 		vmovss	-68(%rbp), %xmm0
 3140      BC
 3141 0108 4889DF   		movq	%rbx, %rdi
 3142              	.LEHB14:
 3143 010b E8000000 		call	_ZN2gr5lfast12costas2_implC1Efi
 3143      00
 3144              	.LEHE14:
 3145              		.loc 22 62 0 is_stmt 0 discriminator 4
 3146 0110 488D45E0 		leaq	-32(%rbp), %rax
 3147 0114 4889DE   		movq	%rbx, %rsi
 3148 0117 4889C7   		movq	%rax, %rdi
 3149              	.LEHB15:
 3150 011a E8000000 		call	_ZN8gnuradio16get_initial_sptrIN2gr5lfast12costas2_implEEEN5boost10shared_ptrIT_EEPS6_
 3150      00
 3151 011f 488D55E0 		leaq	-32(%rbp), %rdx
 3152 0123 488B45C8 		movq	-56(%rbp), %rax
 3153 0127 4883EC08 		subq	$8, %rsp
 3154 012b 4154     		pushq	%r12
 3155 012d 4889D6   		movq	%rdx, %rsi
 3156 0130 4889C7   		movq	%rax, %rdi
 3157 0133 E8000000 		call	_ZN5boost10shared_ptrIN2gr5lfast7costas2EEC1INS2_12costas2_implEEEONS0_IT_EENS_6detail24sp_en
 3157      00
 3158 0138 4883C410 		addq	$16, %rsp
 3159 013c 488D45E0 		leaq	-32(%rbp), %rax
 3160 0140 4889C7   		movq	%rax, %rdi
 3161 0143 E8000000 		call	_ZN5boost10shared_ptrIN2gr5lfast12costas2_implEED1Ev
 3161      00
 3162 0148 EB1B     		jmp	.L134
 3163              	.L133:
 3164 014a 4989C4   		movq	%rax, %r12
 3165              		.loc 22 62 0
 3166 014d BEA00200 		movl	$672, %esi
 3166      00
 3167 0152 4889DF   		movq	%rbx, %rdi
 3168 0155 E8000000 		call	_ZdlPvm@PLT
 3168      00
 3169 015a 4C89E0   		movq	%r12, %rax
 3170 015d 4889C7   		movq	%rax, %rdi
 3171 0160 E8000000 		call	_Unwind_Resume@PLT
 3171      00
 3172              	.LEHE15:
 3173              	.L134:
  63:costas2_impl.cc ****     }
 3174              		.loc 22 63 0 is_stmt 1
 3175 0165 488B45C8 		movq	-56(%rbp), %rax
 3176 0169 488D65F0 		leaq	-16(%rbp), %rsp
 3177 016d 5B       		popq	%rbx
 3178 016e 415C     		popq	%r12
 3179 0170 5D       		popq	%rbp
 3180              		.cfi_def_cfa 7, 8
 3181 0171 C3       		ret
 3182              		.cfi_endproc
 3183              	.LFE10950:
 3184              		.section	.gcc_except_table,"a",@progbits
 3185              	.LLSDA10950:
GAS LISTING /tmp/ccvUPO8Q.s 			page 169


 3186 0000 FF       		.byte	0xff
 3187 0001 FF       		.byte	0xff
 3188 0002 01       		.byte	0x1
 3189 0003 0C       		.uleb128 .LLSDACSE10950-.LLSDACSB10950
 3190              	.LLSDACSB10950:
 3191 0004 1C       		.uleb128 .LEHB13-.LFB10950
 3192 0005 05       		.uleb128 .LEHE13-.LEHB13
 3193 0006 00       		.uleb128 0
 3194 0007 00       		.uleb128 0
 3195 0008 37       		.uleb128 .LEHB14-.LFB10950
 3196 0009 05       		.uleb128 .LEHE14-.LEHB14
 3197 000a 76       		.uleb128 .L133-.LFB10950
 3198 000b 00       		.uleb128 0
 3199 000c 46       		.uleb128 .LEHB15-.LFB10950
 3200 000d 4B       		.uleb128 .LEHE15-.LEHB15
 3201 000e 00       		.uleb128 0
 3202 000f 00       		.uleb128 0
 3203              	.LLSDACSE10950:
 3204              		.text
 3206              		.section	.text._ZN2gr10sync_blockD2Ev,"axG",@progbits,_ZN2gr10sync_blockD5Ev,comdat
 3207              		.align 2
 3208              		.weak	_ZN2gr10sync_blockD2Ev
 3210              	_ZN2gr10sync_blockD2Ev:
 3211              	.LFB10959:
 3212              		.file 23 "/home/mpiscopo/gnuradio/include/gnuradio/sync_block.h"
   1:/home/mpiscopo/gnuradio/include/gnuradio/sync_block.h **** /* -*- c++ -*- */
   2:/home/mpiscopo/gnuradio/include/gnuradio/sync_block.h **** /*
   3:/home/mpiscopo/gnuradio/include/gnuradio/sync_block.h ****  * Copyright 2004,2013 Free Software Foundation, Inc.
   4:/home/mpiscopo/gnuradio/include/gnuradio/sync_block.h ****  *
   5:/home/mpiscopo/gnuradio/include/gnuradio/sync_block.h ****  * This file is part of GNU Radio
   6:/home/mpiscopo/gnuradio/include/gnuradio/sync_block.h ****  *
   7:/home/mpiscopo/gnuradio/include/gnuradio/sync_block.h ****  * GNU Radio is free software; you can redistribute it and/or modify
   8:/home/mpiscopo/gnuradio/include/gnuradio/sync_block.h ****  * it under the terms of the GNU General Public License as published by
   9:/home/mpiscopo/gnuradio/include/gnuradio/sync_block.h ****  * the Free Software Foundation; either version 3, or (at your option)
  10:/home/mpiscopo/gnuradio/include/gnuradio/sync_block.h ****  * any later version.
  11:/home/mpiscopo/gnuradio/include/gnuradio/sync_block.h ****  *
  12:/home/mpiscopo/gnuradio/include/gnuradio/sync_block.h ****  * GNU Radio is distributed in the hope that it will be useful,
  13:/home/mpiscopo/gnuradio/include/gnuradio/sync_block.h ****  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  14:/home/mpiscopo/gnuradio/include/gnuradio/sync_block.h ****  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  15:/home/mpiscopo/gnuradio/include/gnuradio/sync_block.h ****  * GNU General Public License for more details.
  16:/home/mpiscopo/gnuradio/include/gnuradio/sync_block.h ****  *
  17:/home/mpiscopo/gnuradio/include/gnuradio/sync_block.h ****  * You should have received a copy of the GNU General Public License
  18:/home/mpiscopo/gnuradio/include/gnuradio/sync_block.h ****  * along with GNU Radio; see the file COPYING.  If not, write to
  19:/home/mpiscopo/gnuradio/include/gnuradio/sync_block.h ****  * the Free Software Foundation, Inc., 51 Franklin Street,
  20:/home/mpiscopo/gnuradio/include/gnuradio/sync_block.h ****  * Boston, MA 02110-1301, USA.
  21:/home/mpiscopo/gnuradio/include/gnuradio/sync_block.h ****  */
  22:/home/mpiscopo/gnuradio/include/gnuradio/sync_block.h **** 
  23:/home/mpiscopo/gnuradio/include/gnuradio/sync_block.h **** #ifndef INCLUDED_GR_RUNTIME_SYNC_BLOCK_H
  24:/home/mpiscopo/gnuradio/include/gnuradio/sync_block.h **** #define INCLUDED_GR_RUNTIME_SYNC_BLOCK_H
  25:/home/mpiscopo/gnuradio/include/gnuradio/sync_block.h **** 
  26:/home/mpiscopo/gnuradio/include/gnuradio/sync_block.h **** #include <gnuradio/api.h>
  27:/home/mpiscopo/gnuradio/include/gnuradio/sync_block.h **** #include <gnuradio/block.h>
  28:/home/mpiscopo/gnuradio/include/gnuradio/sync_block.h **** 
  29:/home/mpiscopo/gnuradio/include/gnuradio/sync_block.h **** namespace gr {
  30:/home/mpiscopo/gnuradio/include/gnuradio/sync_block.h **** 
  31:/home/mpiscopo/gnuradio/include/gnuradio/sync_block.h ****   /*!
  32:/home/mpiscopo/gnuradio/include/gnuradio/sync_block.h ****    * \brief synchronous 1:1 input to output with history
GAS LISTING /tmp/ccvUPO8Q.s 			page 170


  33:/home/mpiscopo/gnuradio/include/gnuradio/sync_block.h ****    * \ingroup base_blk
  34:/home/mpiscopo/gnuradio/include/gnuradio/sync_block.h ****    *
  35:/home/mpiscopo/gnuradio/include/gnuradio/sync_block.h ****    * Override work to provide the signal processing implementation.
  36:/home/mpiscopo/gnuradio/include/gnuradio/sync_block.h ****    */
  37:/home/mpiscopo/gnuradio/include/gnuradio/sync_block.h ****   class GR_RUNTIME_API sync_block : public block
 3213              		.loc 23 37 0
 3214              		.cfi_startproc
 3215 0000 55       		pushq	%rbp
 3216              		.cfi_def_cfa_offset 16
 3217              		.cfi_offset 6, -16
 3218 0001 4889E5   		movq	%rsp, %rbp
 3219              		.cfi_def_cfa_register 6
 3220 0004 4883EC10 		subq	$16, %rsp
 3221 0008 48897DF8 		movq	%rdi, -8(%rbp)
 3222              	.LBB33:
 3223              		.loc 23 37 0
 3224 000c 488D1500 		leaq	16+_ZTVN2gr10sync_blockE(%rip), %rdx
 3224      000000
 3225 0013 488B45F8 		movq	-8(%rbp), %rax
 3226 0017 488910   		movq	%rdx, (%rax)
 3227 001a 488B45F8 		movq	-8(%rbp), %rax
 3228 001e 4889C7   		movq	%rax, %rdi
 3229 0021 E8000000 		call	_ZN2gr5blockD2Ev@PLT
 3229      00
 3230              	.LBE33:
 3231 0026 90       		nop
 3232 0027 C9       		leave
 3233              		.cfi_def_cfa 7, 8
 3234 0028 C3       		ret
 3235              		.cfi_endproc
 3236              	.LFE10959:
 3238              		.weak	_ZN2gr10sync_blockD1Ev
 3239              		.set	_ZN2gr10sync_blockD1Ev,_ZN2gr10sync_blockD2Ev
 3240              		.section	.text._ZN2gr10sync_blockD0Ev,"axG",@progbits,_ZN2gr10sync_blockD5Ev,comdat
 3241              		.align 2
 3242              		.weak	_ZN2gr10sync_blockD0Ev
 3244              	_ZN2gr10sync_blockD0Ev:
 3245              	.LFB10961:
 3246              		.loc 23 37 0
 3247              		.cfi_startproc
 3248 0000 55       		pushq	%rbp
 3249              		.cfi_def_cfa_offset 16
 3250              		.cfi_offset 6, -16
 3251 0001 4889E5   		movq	%rsp, %rbp
 3252              		.cfi_def_cfa_register 6
 3253 0004 4883EC10 		subq	$16, %rsp
 3254 0008 48897DF8 		movq	%rdi, -8(%rbp)
 3255              		.loc 23 37 0
 3256 000c 488B45F8 		movq	-8(%rbp), %rax
 3257 0010 4889C7   		movq	%rax, %rdi
 3258 0013 E8000000 		call	_ZN2gr10sync_blockD1Ev
 3258      00
 3259 0018 488B45F8 		movq	-8(%rbp), %rax
 3260 001c BE500200 		movl	$592, %esi
 3260      00
 3261 0021 4889C7   		movq	%rax, %rdi
 3262 0024 E8000000 		call	_ZdlPvm@PLT
GAS LISTING /tmp/ccvUPO8Q.s 			page 171


 3262      00
 3263 0029 C9       		leave
 3264              		.cfi_def_cfa 7, 8
 3265 002a C3       		ret
 3266              		.cfi_endproc
 3267              	.LFE10961:
 3269              		.section	.text._ZN2gr5lfast7costas2C2Ev,"axG",@progbits,_ZN2gr5lfast7costas2C2Ev,comdat
 3270              		.align 2
 3271              		.weak	_ZN2gr5lfast7costas2C2Ev
 3273              	_ZN2gr5lfast7costas2C2Ev:
 3274              	.LFB10963:
 3275              		.file 24 "/home/mpiscopo/gnuradio/include/lfast/costas2.h"
   1:/home/mpiscopo/gnuradio/include/lfast/costas2.h **** /* -*- c++ -*- */
   2:/home/mpiscopo/gnuradio/include/lfast/costas2.h **** /* 
   3:/home/mpiscopo/gnuradio/include/lfast/costas2.h ****  * Copyright 2017 ghostop14.
   4:/home/mpiscopo/gnuradio/include/lfast/costas2.h ****  * 
   5:/home/mpiscopo/gnuradio/include/lfast/costas2.h ****  * This is free software; you can redistribute it and/or modify
   6:/home/mpiscopo/gnuradio/include/lfast/costas2.h ****  * it under the terms of the GNU General Public License as published by
   7:/home/mpiscopo/gnuradio/include/lfast/costas2.h ****  * the Free Software Foundation; either version 3, or (at your option)
   8:/home/mpiscopo/gnuradio/include/lfast/costas2.h ****  * any later version.
   9:/home/mpiscopo/gnuradio/include/lfast/costas2.h ****  * 
  10:/home/mpiscopo/gnuradio/include/lfast/costas2.h ****  * This software is distributed in the hope that it will be useful,
  11:/home/mpiscopo/gnuradio/include/lfast/costas2.h ****  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  12:/home/mpiscopo/gnuradio/include/lfast/costas2.h ****  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  13:/home/mpiscopo/gnuradio/include/lfast/costas2.h ****  * GNU General Public License for more details.
  14:/home/mpiscopo/gnuradio/include/lfast/costas2.h ****  * 
  15:/home/mpiscopo/gnuradio/include/lfast/costas2.h ****  * You should have received a copy of the GNU General Public License
  16:/home/mpiscopo/gnuradio/include/lfast/costas2.h ****  * along with this software; see the file COPYING.  If not, write to
  17:/home/mpiscopo/gnuradio/include/lfast/costas2.h ****  * the Free Software Foundation, Inc., 51 Franklin Street,
  18:/home/mpiscopo/gnuradio/include/lfast/costas2.h ****  * Boston, MA 02110-1301, USA.
  19:/home/mpiscopo/gnuradio/include/lfast/costas2.h ****  */
  20:/home/mpiscopo/gnuradio/include/lfast/costas2.h **** 
  21:/home/mpiscopo/gnuradio/include/lfast/costas2.h **** 
  22:/home/mpiscopo/gnuradio/include/lfast/costas2.h **** #ifndef INCLUDED_LFAST_COSTAS2_H
  23:/home/mpiscopo/gnuradio/include/lfast/costas2.h **** #define INCLUDED_LFAST_COSTAS2_H
  24:/home/mpiscopo/gnuradio/include/lfast/costas2.h **** 
  25:/home/mpiscopo/gnuradio/include/lfast/costas2.h **** #include <lfast/api.h>
  26:/home/mpiscopo/gnuradio/include/lfast/costas2.h **** #include <gnuradio/sync_block.h>
  27:/home/mpiscopo/gnuradio/include/lfast/costas2.h **** #include <gnuradio/blocks/control_loop.h>
  28:/home/mpiscopo/gnuradio/include/lfast/costas2.h **** 
  29:/home/mpiscopo/gnuradio/include/lfast/costas2.h **** namespace gr {
  30:/home/mpiscopo/gnuradio/include/lfast/costas2.h ****   namespace lfast {
  31:/home/mpiscopo/gnuradio/include/lfast/costas2.h **** 
  32:/home/mpiscopo/gnuradio/include/lfast/costas2.h ****     /*!
  33:/home/mpiscopo/gnuradio/include/lfast/costas2.h ****      * \brief <+description of block+>
  34:/home/mpiscopo/gnuradio/include/lfast/costas2.h ****      * \ingroup lfast
  35:/home/mpiscopo/gnuradio/include/lfast/costas2.h ****      *
  36:/home/mpiscopo/gnuradio/include/lfast/costas2.h ****      */
  37:/home/mpiscopo/gnuradio/include/lfast/costas2.h ****     class LFAST_API costas2
 3276              		.loc 24 37 0
 3277              		.cfi_startproc
 3278 0000 55       		pushq	%rbp
 3279              		.cfi_def_cfa_offset 16
 3280              		.cfi_offset 6, -16
 3281 0001 4889E5   		movq	%rsp, %rbp
 3282              		.cfi_def_cfa_register 6
 3283 0004 48897DF8 		movq	%rdi, -8(%rbp)
GAS LISTING /tmp/ccvUPO8Q.s 			page 172


 3284 0008 488975F0 		movq	%rsi, -16(%rbp)
 3285              	.LBB34:
 3286              		.loc 24 37 0
 3287 000c 488B45F0 		movq	-16(%rbp), %rax
 3288 0010 488B10   		movq	(%rax), %rdx
 3289 0013 488B45F8 		movq	-8(%rbp), %rax
 3290 0017 488910   		movq	%rdx, (%rax)
 3291 001a 488B45F8 		movq	-8(%rbp), %rax
 3292 001e 488B00   		movq	(%rax), %rax
 3293 0021 4883E818 		subq	$24, %rax
 3294 0025 488B00   		movq	(%rax), %rax
 3295 0028 4889C2   		movq	%rax, %rdx
 3296 002b 488B45F8 		movq	-8(%rbp), %rax
 3297 002f 4801C2   		addq	%rax, %rdx
 3298 0032 488B45F0 		movq	-16(%rbp), %rax
 3299 0036 488B4008 		movq	8(%rax), %rax
 3300 003a 488902   		movq	%rax, (%rdx)
 3301 003d 488B45F8 		movq	-8(%rbp), %rax
 3302 0041 488B00   		movq	(%rax), %rax
 3303 0044 4883E820 		subq	$32, %rax
 3304 0048 488B00   		movq	(%rax), %rax
 3305 004b 4889C2   		movq	%rax, %rdx
 3306 004e 488B45F8 		movq	-8(%rbp), %rax
 3307 0052 4801C2   		addq	%rax, %rdx
 3308 0055 488B45F0 		movq	-16(%rbp), %rax
 3309 0059 488B4010 		movq	16(%rax), %rax
 3310 005d 488902   		movq	%rax, (%rdx)
 3311              	.LBE34:
 3312 0060 90       		nop
 3313 0061 5D       		popq	%rbp
 3314              		.cfi_def_cfa 7, 8
 3315 0062 C3       		ret
 3316              		.cfi_endproc
 3317              	.LFE10963:
 3319              		.section	.text._ZN2gr5lfast7costas2D2Ev,"axG",@progbits,_ZN2gr5lfast7costas2D2Ev,comdat
 3320              		.align 2
 3321              		.weak	_ZN2gr5lfast7costas2D2Ev
 3323              	_ZN2gr5lfast7costas2D2Ev:
 3324              	.LFB10966:
 3325              		.loc 24 37 0
 3326              		.cfi_startproc
 3327 0000 55       		pushq	%rbp
 3328              		.cfi_def_cfa_offset 16
 3329              		.cfi_offset 6, -16
 3330 0001 4889E5   		movq	%rsp, %rbp
 3331              		.cfi_def_cfa_register 6
 3332 0004 48897DF8 		movq	%rdi, -8(%rbp)
 3333 0008 488975F0 		movq	%rsi, -16(%rbp)
 3334              	.LBB35:
 3335              		.loc 24 37 0
 3336 000c 488B45F0 		movq	-16(%rbp), %rax
 3337 0010 488B10   		movq	(%rax), %rdx
 3338 0013 488B45F8 		movq	-8(%rbp), %rax
 3339 0017 488910   		movq	%rdx, (%rax)
 3340 001a 488B45F8 		movq	-8(%rbp), %rax
 3341 001e 488B00   		movq	(%rax), %rax
 3342 0021 4883E818 		subq	$24, %rax
GAS LISTING /tmp/ccvUPO8Q.s 			page 173


 3343 0025 488B00   		movq	(%rax), %rax
 3344 0028 4889C2   		movq	%rax, %rdx
 3345 002b 488B45F8 		movq	-8(%rbp), %rax
 3346 002f 4801C2   		addq	%rax, %rdx
 3347 0032 488B45F0 		movq	-16(%rbp), %rax
 3348 0036 488B4008 		movq	8(%rax), %rax
 3349 003a 488902   		movq	%rax, (%rdx)
 3350 003d 488B45F8 		movq	-8(%rbp), %rax
 3351 0041 488B00   		movq	(%rax), %rax
 3352 0044 4883E820 		subq	$32, %rax
 3353 0048 488B00   		movq	(%rax), %rax
 3354 004b 4889C2   		movq	%rax, %rdx
 3355 004e 488B45F8 		movq	-8(%rbp), %rax
 3356 0052 4801C2   		addq	%rax, %rdx
 3357 0055 488B45F0 		movq	-16(%rbp), %rax
 3358 0059 488B4010 		movq	16(%rax), %rax
 3359 005d 488902   		movq	%rax, (%rdx)
 3360              	.LBE35:
 3361 0060 90       		nop
 3362 0061 5D       		popq	%rbp
 3363              		.cfi_def_cfa 7, 8
 3364 0062 C3       		ret
 3365              		.cfi_endproc
 3366              	.LFE10966:
 3368              		.text
 3369              		.align 2
 3370              		.globl	_ZN2gr5lfast12costas2_implC2Efi
 3372              	_ZN2gr5lfast12costas2_implC2Efi:
 3373              	.LFB10969:
  64:costas2_impl.cc **** 
  65:costas2_impl.cc ****     /*
  66:costas2_impl.cc ****      * The private constructor
  67:costas2_impl.cc ****      */
  68:costas2_impl.cc ****     costas2_impl::costas2_impl(float loop_bw, int order)
 3374              		.loc 22 68 0
 3375              		.cfi_startproc
 3376 0172 55       		pushq	%rbp
 3377              		.cfi_def_cfa_offset 16
 3378              		.cfi_offset 6, -16
 3379 0173 4889E5   		movq	%rsp, %rbp
 3380              		.cfi_def_cfa_register 6
 3381 0176 4883EC70 		subq	$112, %rsp
 3382 017a 48897DA8 		movq	%rdi, -88(%rbp)
 3383 017e 488975A0 		movq	%rsi, -96(%rbp)
 3384 0182 C5FA1145 		vmovss	%xmm0, -100(%rbp)
 3384      9C
 3385 0187 895598   		movl	%edx, -104(%rbp)
 3386              	.LBB36:
  69:costas2_impl.cc ****       : gr::sync_block("costas2",
  70:costas2_impl.cc ****               gr::io_signature::make(1, 1, sizeof(gr_complex)),
  71:costas2_impl.cc ****               gr::io_signature::make(1, 1, sizeof(gr_complex))),
  72:costas2_impl.cc **** 			  blocks::control_loop(loop_bw, 1.0, -1.0),
  73:costas2_impl.cc **** 			  d_order(order), d_error(0), d_noise(1.0), d_phase_detector(NULL)
 3387              		.loc 22 73 0
 3388 018a 488B45A0 		movq	-96(%rbp), %rax
 3389 018e 488D5008 		leaq	8(%rax), %rdx
 3390 0192 488B45A8 		movq	-88(%rbp), %rax
GAS LISTING /tmp/ccvUPO8Q.s 			page 174


 3391 0196 4889D6   		movq	%rdx, %rsi
 3392 0199 4889C7   		movq	%rax, %rdi
 3393 019c E8000000 		call	_ZN2gr5lfast7costas2C2Ev
 3393      00
 3394 01a1 488B45A0 		movq	-96(%rbp), %rax
 3395 01a5 488B10   		movq	(%rax), %rdx
 3396 01a8 488B45A8 		movq	-88(%rbp), %rax
 3397 01ac 488910   		movq	%rdx, (%rax)
 3398 01af 488B45A8 		movq	-88(%rbp), %rax
 3399 01b3 488B00   		movq	(%rax), %rax
 3400 01b6 4883E818 		subq	$24, %rax
 3401 01ba 488B00   		movq	(%rax), %rax
 3402 01bd 4889C2   		movq	%rax, %rdx
 3403 01c0 488B45A8 		movq	-88(%rbp), %rax
 3404 01c4 4801C2   		addq	%rax, %rdx
 3405 01c7 488B45A0 		movq	-96(%rbp), %rax
 3406 01cb 488B4020 		movq	32(%rax), %rax
 3407 01cf 488902   		movq	%rax, (%rdx)
 3408 01d2 488B45A8 		movq	-88(%rbp), %rax
 3409 01d6 488B00   		movq	(%rax), %rax
 3410 01d9 4883E820 		subq	$32, %rax
 3411 01dd 488B00   		movq	(%rax), %rax
 3412 01e0 4889C2   		movq	%rax, %rdx
 3413 01e3 488B45A8 		movq	-88(%rbp), %rax
 3414 01e7 4801C2   		addq	%rax, %rdx
 3415 01ea 488B45A0 		movq	-96(%rbp), %rax
 3416 01ee 488B4028 		movq	40(%rax), %rax
 3417 01f2 488902   		movq	%rax, (%rdx)
 3418 01f5 488B45A8 		movq	-88(%rbp), %rax
 3419 01f9 8B5598   		movl	-104(%rbp), %edx
 3420 01fc 895008   		movl	%edx, 8(%rax)
 3421 01ff 488B45A8 		movq	-88(%rbp), %rax
 3422 0203 C5F857C0 		vxorps	%xmm0, %xmm0, %xmm0
 3423 0207 C5FA1140 		vmovss	%xmm0, 12(%rax)
 3423      0C
 3424 020c 488B45A8 		movq	-88(%rbp), %rax
 3425 0210 C5FA1005 		vmovss	.LC5(%rip), %xmm0
 3425      00000000 
 3426 0218 C5FA1140 		vmovss	%xmm0, 16(%rax)
 3426      10
 3427 021d 488B45A8 		movq	-88(%rbp), %rax
 3428 0221 48C74018 		movq	$0, 24(%rax)
 3428      00000000 
 3429 0229 488B45A8 		movq	-88(%rbp), %rax
 3430 022d 48C74020 		movq	$0, 32(%rax)
 3430      00000000 
  74:costas2_impl.cc ****     {
  75:costas2_impl.cc ****     	// Only set up for 2nd order right now.
  76:costas2_impl.cc ****         d_phase_detector = &costas2_impl::phase_detector_2;
 3431              		.loc 22 76 0
 3432 0235 488B45A8 		movq	-88(%rbp), %rax
 3433 0239 488D1500 		leaq	_ZNK2gr5lfast12costas2_impl16phase_detector_2ESt7complexIfE(%rip), %rdx
 3433      000000
 3434 0240 48895018 		movq	%rdx, 24(%rax)
 3435 0244 488B45A8 		movq	-88(%rbp), %rax
 3436 0248 48C74020 		movq	$0, 32(%rax)
 3436      00000000 
GAS LISTING /tmp/ccvUPO8Q.s 			page 175


 3437              	.LBE36:
  77:costas2_impl.cc **** /*
  78:costas2_impl.cc ****         message_port_register_in(pmt::mp("noise"));
  79:costas2_impl.cc ****         set_msg_handler(
  80:costas2_impl.cc ****           pmt::mp("noise"),
  81:costas2_impl.cc ****           boost::bind(&costas2_impl::handle_set_noise,
  82:costas2_impl.cc ****                       this, _1));
  83:costas2_impl.cc **** */
  84:costas2_impl.cc ****     }
 3438              		.loc 22 84 0
 3439 0250 90       		nop
 3440 0251 C9       		leave
 3441              		.cfi_def_cfa 7, 8
 3442 0252 C3       		ret
 3443              		.cfi_endproc
 3444              	.LFE10969:
 3446              		.section	.rodata
 3447              	.LC6:
 3448 0054 636F7374 		.string	"costas2"
 3448      61733200 
 3449              		.text
 3450 0253 90       		.align 2
 3451              		.globl	_ZN2gr5lfast12costas2_implC1Efi
 3453              	_ZN2gr5lfast12costas2_implC1Efi:
 3454              	.LFB10970:
  68:costas2_impl.cc ****       : gr::sync_block("costas2",
 3455              		.loc 22 68 0
 3456              		.cfi_startproc
 3457              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 3458              		.cfi_lsda 0x1b,.LLSDA10970
 3459 0254 55       		pushq	%rbp
 3460              		.cfi_def_cfa_offset 16
 3461              		.cfi_offset 6, -16
 3462 0255 4889E5   		movq	%rsp, %rbp
 3463              		.cfi_def_cfa_register 6
 3464 0258 53       		pushq	%rbx
 3465 0259 4883EC78 		subq	$120, %rsp
 3466              		.cfi_offset 3, -24
 3467 025d 48897D98 		movq	%rdi, -104(%rbp)
 3468 0261 C5FA1145 		vmovss	%xmm0, -108(%rbp)
 3468      94
 3469 0266 897590   		movl	%esi, -112(%rbp)
 3470              	.LBB37:
  71:costas2_impl.cc **** 			  blocks::control_loop(loop_bw, 1.0, -1.0),
 3471              		.loc 22 71 0
 3472 0269 488D45A0 		leaq	-96(%rbp), %rax
 3473 026d B9080000 		movl	$8, %ecx
 3473      00
 3474 0272 BA010000 		movl	$1, %edx
 3474      00
 3475 0277 BE010000 		movl	$1, %esi
 3475      00
 3476 027c 4889C7   		movq	%rax, %rdi
 3477              	.LEHB16:
 3478 027f E8000000 		call	_ZN2gr12io_signature4makeEiii@PLT
 3478      00
 3479              	.LEHE16:
GAS LISTING /tmp/ccvUPO8Q.s 			page 176


  70:costas2_impl.cc ****               gr::io_signature::make(1, 1, sizeof(gr_complex))),
 3480              		.loc 22 70 0
 3481 0284 488D45B0 		leaq	-80(%rbp), %rax
 3482 0288 B9080000 		movl	$8, %ecx
 3482      00
 3483 028d BA010000 		movl	$1, %edx
 3483      00
 3484 0292 BE010000 		movl	$1, %esi
 3484      00
 3485 0297 4889C7   		movq	%rax, %rdi
 3486              	.LEHB17:
 3487 029a E8000000 		call	_ZN2gr12io_signature4makeEiii@PLT
 3487      00
 3488              	.LEHE17:
  73:costas2_impl.cc ****     {
 3489              		.loc 22 73 0
 3490 029f 488D45EF 		leaq	-17(%rbp), %rax
 3491 02a3 4889C7   		movq	%rax, %rdi
 3492 02a6 E8000000 		call	_ZNSaIcEC1Ev@PLT
 3492      00
 3493 02ab 488D55EF 		leaq	-17(%rbp), %rdx
 3494 02af 488D45C0 		leaq	-64(%rbp), %rax
 3495 02b3 488D3500 		leaq	.LC6(%rip), %rsi
 3495      000000
 3496 02ba 4889C7   		movq	%rax, %rdi
 3497              	.LEHB18:
 3498 02bd E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EPKcRKS3_@PLT
 3498      00
 3499              	.LEHE18:
  73:costas2_impl.cc ****     {
 3500              		.loc 22 73 0 is_stmt 0 discriminator 3
 3501 02c2 488B4598 		movq	-104(%rbp), %rax
 3502 02c6 488D7828 		leaq	40(%rax), %rdi
 3503 02ca 488D4DA0 		leaq	-96(%rbp), %rcx
 3504 02ce 488D55B0 		leaq	-80(%rbp), %rdx
 3505 02d2 488D45C0 		leaq	-64(%rbp), %rax
 3506 02d6 4889C6   		movq	%rax, %rsi
 3507              	.LEHB19:
 3508 02d9 E8000000 		call	_ZN2gr10sync_blockC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN5boost10shared_pt
 3508      00
 3509              	.LEHE19:
  73:costas2_impl.cc ****     {
 3510              		.loc 22 73 0 discriminator 5
 3511 02de 488D45C0 		leaq	-64(%rbp), %rax
 3512 02e2 4889C7   		movq	%rax, %rdi
 3513 02e5 E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@PLT
 3513      00
 3514 02ea 488D45EF 		leaq	-17(%rbp), %rax
 3515 02ee 4889C7   		movq	%rax, %rdi
 3516 02f1 E8000000 		call	_ZNSaIcED1Ev@PLT
 3516      00
  70:costas2_impl.cc ****               gr::io_signature::make(1, 1, sizeof(gr_complex))),
 3517              		.loc 22 70 0 is_stmt 1 discriminator 5
 3518 02f6 488D45B0 		leaq	-80(%rbp), %rax
 3519 02fa 4889C7   		movq	%rax, %rdi
 3520 02fd E8000000 		call	_ZN5boost10shared_ptrIN2gr12io_signatureEED1Ev
 3520      00
GAS LISTING /tmp/ccvUPO8Q.s 			page 177


  71:costas2_impl.cc **** 			  blocks::control_loop(loop_bw, 1.0, -1.0),
 3521              		.loc 22 71 0 discriminator 5
 3522 0302 488D45A0 		leaq	-96(%rbp), %rax
 3523 0306 4889C7   		movq	%rax, %rdi
 3524 0309 E8000000 		call	_ZN5boost10shared_ptrIN2gr12io_signatureEED1Ev
 3524      00
  73:costas2_impl.cc ****     {
 3525              		.loc 22 73 0 discriminator 5
 3526 030e 488B4598 		movq	-104(%rbp), %rax
 3527 0312 488D9078 		leaq	632(%rax), %rdx
 3527      020000
 3528 0319 8B4594   		movl	-108(%rbp), %eax
 3529 031c C5FA1015 		vmovss	.LC7(%rip), %xmm2
 3529      00000000 
 3530 0324 C5FA100D 		vmovss	.LC5(%rip), %xmm1
 3530      00000000 
 3531 032c 89458C   		movl	%eax, -116(%rbp)
 3532 032f C5FA1045 		vmovss	-116(%rbp), %xmm0
 3532      8C
 3533 0334 4889D7   		movq	%rdx, %rdi
 3534              	.LEHB20:
 3535 0337 E8000000 		call	_ZN2gr6blocks12control_loopC2Efff@PLT
 3535      00
 3536              	.LEHE20:
  73:costas2_impl.cc ****     {
 3537              		.loc 22 73 0 is_stmt 0
 3538 033c 488D1500 		leaq	8+_ZTTN2gr5lfast12costas2_implE(%rip), %rdx
 3538      000000
 3539 0343 488B4598 		movq	-104(%rbp), %rax
 3540 0347 4889D6   		movq	%rdx, %rsi
 3541 034a 4889C7   		movq	%rax, %rdi
 3542 034d E8000000 		call	_ZN2gr5lfast7costas2C2Ev
 3542      00
 3543 0352 488D1500 		leaq	32+_ZTVN2gr5lfast12costas2_implE(%rip), %rdx
 3543      000000
 3544 0359 488B4598 		movq	-104(%rbp), %rax
 3545 035d 488910   		movq	%rdx, (%rax)
 3546 0360 488B4598 		movq	-104(%rbp), %rax
 3547 0364 488D5028 		leaq	40(%rax), %rdx
 3548 0368 488D0500 		leaq	248+_ZTVN2gr5lfast12costas2_implE(%rip), %rax
 3548      000000
 3549 036f 488902   		movq	%rax, (%rdx)
 3550 0372 488B4598 		movq	-104(%rbp), %rax
 3551 0376 488D9078 		leaq	632(%rax), %rdx
 3551      020000
 3552 037d 488D0500 		leaq	448+_ZTVN2gr5lfast12costas2_implE(%rip), %rax
 3552      000000
 3553 0384 488902   		movq	%rax, (%rdx)
 3554 0387 488B4598 		movq	-104(%rbp), %rax
 3555 038b 8B5590   		movl	-112(%rbp), %edx
 3556 038e 895008   		movl	%edx, 8(%rax)
 3557 0391 488B4598 		movq	-104(%rbp), %rax
 3558 0395 C5F857C0 		vxorps	%xmm0, %xmm0, %xmm0
 3559 0399 C5FA1140 		vmovss	%xmm0, 12(%rax)
 3559      0C
 3560 039e 488B4598 		movq	-104(%rbp), %rax
 3561 03a2 C5FA1005 		vmovss	.LC5(%rip), %xmm0
GAS LISTING /tmp/ccvUPO8Q.s 			page 178


 3561      00000000 
 3562 03aa C5FA1140 		vmovss	%xmm0, 16(%rax)
 3562      10
 3563 03af 488B4598 		movq	-104(%rbp), %rax
 3564 03b3 48C74018 		movq	$0, 24(%rax)
 3564      00000000 
 3565 03bb 488B4598 		movq	-104(%rbp), %rax
 3566 03bf 48C74020 		movq	$0, 32(%rax)
 3566      00000000 
  76:costas2_impl.cc **** /*
 3567              		.loc 22 76 0 is_stmt 1
 3568 03c7 488B4598 		movq	-104(%rbp), %rax
 3569 03cb 488D1500 		leaq	_ZNK2gr5lfast12costas2_impl16phase_detector_2ESt7complexIfE(%rip), %rdx
 3569      000000
 3570 03d2 48895018 		movq	%rdx, 24(%rax)
 3571 03d6 488B4598 		movq	-104(%rbp), %rax
 3572 03da 48C74020 		movq	$0, 32(%rax)
 3572      00000000 
 3573              	.LBE37:
 3574              		.loc 22 84 0
 3575 03e2 EB66     		jmp	.L149
 3576              	.L147:
 3577 03e4 4889C3   		movq	%rax, %rbx
 3578              	.LBB38:
  73:costas2_impl.cc ****     {
 3579              		.loc 22 73 0
 3580 03e7 488D45C0 		leaq	-64(%rbp), %rax
 3581 03eb 4889C7   		movq	%rax, %rdi
 3582 03ee E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@PLT
 3582      00
 3583 03f3 EB03     		jmp	.L142
 3584              	.L146:
 3585 03f5 4889C3   		movq	%rax, %rbx
 3586              	.L142:
  73:costas2_impl.cc ****     {
 3587              		.loc 22 73 0 is_stmt 0 discriminator 2
 3588 03f8 488D45EF 		leaq	-17(%rbp), %rax
 3589 03fc 4889C7   		movq	%rax, %rdi
 3590 03ff E8000000 		call	_ZNSaIcED1Ev@PLT
 3590      00
  70:costas2_impl.cc ****               gr::io_signature::make(1, 1, sizeof(gr_complex))),
 3591              		.loc 22 70 0 is_stmt 1 discriminator 2
 3592 0404 488D45B0 		leaq	-80(%rbp), %rax
 3593 0408 4889C7   		movq	%rax, %rdi
 3594 040b E8000000 		call	_ZN5boost10shared_ptrIN2gr12io_signatureEED1Ev
 3594      00
 3595 0410 EB03     		jmp	.L143
 3596              	.L145:
 3597 0412 4889C3   		movq	%rax, %rbx
 3598              	.L143:
  71:costas2_impl.cc **** 			  blocks::control_loop(loop_bw, 1.0, -1.0),
 3599              		.loc 22 71 0
 3600 0415 488D45A0 		leaq	-96(%rbp), %rax
 3601 0419 4889C7   		movq	%rax, %rdi
 3602 041c E8000000 		call	_ZN5boost10shared_ptrIN2gr12io_signatureEED1Ev
 3602      00
 3603 0421 4889D8   		movq	%rbx, %rax
GAS LISTING /tmp/ccvUPO8Q.s 			page 179


 3604 0424 4889C7   		movq	%rax, %rdi
 3605              	.LEHB21:
 3606 0427 E8000000 		call	_Unwind_Resume@PLT
 3606      00
 3607              	.L148:
 3608 042c 4889C3   		movq	%rax, %rbx
  73:costas2_impl.cc ****     {
 3609              		.loc 22 73 0
 3610 042f 488B4598 		movq	-104(%rbp), %rax
 3611 0433 4883C028 		addq	$40, %rax
 3612 0437 4889C7   		movq	%rax, %rdi
 3613 043a E8000000 		call	_ZN2gr10sync_blockD2Ev
 3613      00
 3614 043f 4889D8   		movq	%rbx, %rax
 3615 0442 4889C7   		movq	%rax, %rdi
 3616 0445 E8000000 		call	_Unwind_Resume@PLT
 3616      00
 3617              	.LEHE21:
 3618              	.L149:
 3619              	.LBE38:
 3620              		.loc 22 84 0
 3621 044a 4883C478 		addq	$120, %rsp
 3622 044e 5B       		popq	%rbx
 3623 044f 5D       		popq	%rbp
 3624              		.cfi_def_cfa 7, 8
 3625 0450 C3       		ret
 3626              		.cfi_endproc
 3627              	.LFE10970:
 3628              		.section	.gcc_except_table
 3629              	.LLSDA10970:
 3630 0010 FF       		.byte	0xff
 3631 0011 FF       		.byte	0xff
 3632 0012 01       		.byte	0x1
 3633 0013 1F       		.uleb128 .LLSDACSE10970-.LLSDACSB10970
 3634              	.LLSDACSB10970:
 3635 0014 2B       		.uleb128 .LEHB16-.LFB10970
 3636 0015 05       		.uleb128 .LEHE16-.LEHB16
 3637 0016 00       		.uleb128 0
 3638 0017 00       		.uleb128 0
 3639 0018 46       		.uleb128 .LEHB17-.LFB10970
 3640 0019 05       		.uleb128 .LEHE17-.LEHB17
 3641 001a BE03     		.uleb128 .L145-.LFB10970
 3642 001c 00       		.uleb128 0
 3643 001d 69       		.uleb128 .LEHB18-.LFB10970
 3644 001e 05       		.uleb128 .LEHE18-.LEHB18
 3645 001f A103     		.uleb128 .L146-.LFB10970
 3646 0021 00       		.uleb128 0
 3647 0022 8501     		.uleb128 .LEHB19-.LFB10970
 3648 0024 05       		.uleb128 .LEHE19-.LEHB19
 3649 0025 9003     		.uleb128 .L147-.LFB10970
 3650 0027 00       		.uleb128 0
 3651 0028 E301     		.uleb128 .LEHB20-.LFB10970
 3652 002a 05       		.uleb128 .LEHE20-.LEHB20
 3653 002b D803     		.uleb128 .L148-.LFB10970
 3654 002d 00       		.uleb128 0
 3655 002e D303     		.uleb128 .LEHB21-.LFB10970
 3656 0030 23       		.uleb128 .LEHE21-.LEHB21
GAS LISTING /tmp/ccvUPO8Q.s 			page 180


 3657 0031 00       		.uleb128 0
 3658 0032 00       		.uleb128 0
 3659              	.LLSDACSE10970:
 3660              		.text
 3662 0451 90       		.align 2
 3663              		.globl	_ZN2gr5lfast12costas2_implD2Ev
 3665              	_ZN2gr5lfast12costas2_implD2Ev:
 3666              	.LFB10972:
  85:costas2_impl.cc **** 
  86:costas2_impl.cc ****     /*
  87:costas2_impl.cc ****      * Our virtual destructor.
  88:costas2_impl.cc ****      */
  89:costas2_impl.cc ****     costas2_impl::~costas2_impl()
 3667              		.loc 22 89 0
 3668              		.cfi_startproc
 3669 0452 55       		pushq	%rbp
 3670              		.cfi_def_cfa_offset 16
 3671              		.cfi_offset 6, -16
 3672 0453 4889E5   		movq	%rsp, %rbp
 3673              		.cfi_def_cfa_register 6
 3674 0456 4883EC10 		subq	$16, %rsp
 3675 045a 48897DF8 		movq	%rdi, -8(%rbp)
 3676 045e 488975F0 		movq	%rsi, -16(%rbp)
 3677              	.LBB39:
 3678              		.loc 22 89 0
 3679 0462 488B45F0 		movq	-16(%rbp), %rax
 3680 0466 488B10   		movq	(%rax), %rdx
 3681 0469 488B45F8 		movq	-8(%rbp), %rax
 3682 046d 488910   		movq	%rdx, (%rax)
 3683 0470 488B45F8 		movq	-8(%rbp), %rax
 3684 0474 488B00   		movq	(%rax), %rax
 3685 0477 4883E818 		subq	$24, %rax
 3686 047b 488B00   		movq	(%rax), %rax
 3687 047e 4889C2   		movq	%rax, %rdx
 3688 0481 488B45F8 		movq	-8(%rbp), %rax
 3689 0485 4801C2   		addq	%rax, %rdx
 3690 0488 488B45F0 		movq	-16(%rbp), %rax
 3691 048c 488B4020 		movq	32(%rax), %rax
 3692 0490 488902   		movq	%rax, (%rdx)
 3693 0493 488B45F8 		movq	-8(%rbp), %rax
 3694 0497 488B00   		movq	(%rax), %rax
 3695 049a 4883E820 		subq	$32, %rax
 3696 049e 488B00   		movq	(%rax), %rax
 3697 04a1 4889C2   		movq	%rax, %rdx
 3698 04a4 488B45F8 		movq	-8(%rbp), %rax
 3699 04a8 4801C2   		addq	%rax, %rdx
 3700 04ab 488B45F0 		movq	-16(%rbp), %rax
 3701 04af 488B4028 		movq	40(%rax), %rax
 3702 04b3 488902   		movq	%rax, (%rdx)
 3703 04b6 488B45F0 		movq	-16(%rbp), %rax
 3704 04ba 488D5008 		leaq	8(%rax), %rdx
 3705 04be 488B45F8 		movq	-8(%rbp), %rax
 3706 04c2 4889D6   		movq	%rdx, %rsi
 3707 04c5 4889C7   		movq	%rax, %rdi
 3708 04c8 E8000000 		call	_ZN2gr5lfast7costas2D2Ev
 3708      00
 3709              	.LBE39:
GAS LISTING /tmp/ccvUPO8Q.s 			page 181


  90:costas2_impl.cc ****     {
  91:costas2_impl.cc ****     }
 3710              		.loc 22 91 0
 3711 04cd 90       		nop
 3712 04ce C9       		leave
 3713              		.cfi_def_cfa 7, 8
 3714 04cf C3       		ret
 3715              		.cfi_endproc
 3716              	.LFE10972:
 3718              		.align 2
 3719              		.globl	_ZN2gr5lfast12costas2_implD1Ev
 3721              	_ZN2gr5lfast12costas2_implD1Ev:
 3722              	.LFB10973:
  89:costas2_impl.cc ****     {
 3723              		.loc 22 89 0
 3724              		.cfi_startproc
 3725 04d0 55       		pushq	%rbp
 3726              		.cfi_def_cfa_offset 16
 3727              		.cfi_offset 6, -16
 3728 04d1 4889E5   		movq	%rsp, %rbp
 3729              		.cfi_def_cfa_register 6
 3730 04d4 4883EC10 		subq	$16, %rsp
 3731 04d8 48897DF8 		movq	%rdi, -8(%rbp)
 3732              	.LBB40:
  89:costas2_impl.cc ****     {
 3733              		.loc 22 89 0
 3734 04dc 488D1500 		leaq	32+_ZTVN2gr5lfast12costas2_implE(%rip), %rdx
 3734      000000
 3735 04e3 488B45F8 		movq	-8(%rbp), %rax
 3736 04e7 488910   		movq	%rdx, (%rax)
 3737 04ea 488B45F8 		movq	-8(%rbp), %rax
 3738 04ee 488D5028 		leaq	40(%rax), %rdx
 3739 04f2 488D0500 		leaq	248+_ZTVN2gr5lfast12costas2_implE(%rip), %rax
 3739      000000
 3740 04f9 488902   		movq	%rax, (%rdx)
 3741 04fc 488B45F8 		movq	-8(%rbp), %rax
 3742 0500 488D9078 		leaq	632(%rax), %rdx
 3742      020000
 3743 0507 488D0500 		leaq	448+_ZTVN2gr5lfast12costas2_implE(%rip), %rax
 3743      000000
 3744 050e 488902   		movq	%rax, (%rdx)
 3745 0511 488D1500 		leaq	8+_ZTTN2gr5lfast12costas2_implE(%rip), %rdx
 3745      000000
 3746 0518 488B45F8 		movq	-8(%rbp), %rax
 3747 051c 4889D6   		movq	%rdx, %rsi
 3748 051f 4889C7   		movq	%rax, %rdi
 3749 0522 E8000000 		call	_ZN2gr5lfast7costas2D2Ev
 3749      00
 3750 0527 488B45F8 		movq	-8(%rbp), %rax
 3751 052b 48057802 		addq	$632, %rax
 3751      0000
 3752 0531 4889C7   		movq	%rax, %rdi
 3753 0534 E8000000 		call	_ZN2gr6blocks12control_loopD2Ev@PLT
 3753      00
 3754 0539 488B45F8 		movq	-8(%rbp), %rax
 3755 053d 4883C028 		addq	$40, %rax
 3756 0541 4889C7   		movq	%rax, %rdi
GAS LISTING /tmp/ccvUPO8Q.s 			page 182


 3757 0544 E8000000 		call	_ZN2gr10sync_blockD2Ev
 3757      00
 3758              	.LBE40:
 3759              		.loc 22 91 0
 3760 0549 90       		nop
 3761 054a C9       		leave
 3762              		.cfi_def_cfa 7, 8
 3763 054b C3       		ret
 3764              		.cfi_endproc
 3765              	.LFE10973:
 3767              		.set	.LTHUNK8,_ZN2gr5lfast12costas2_implD1Ev
 3768              		.globl	_ZTv0_n24_N2gr5lfast12costas2_implD1Ev
 3770              	_ZTv0_n24_N2gr5lfast12costas2_implD1Ev:
 3771              	.LFB15693:
  41:costas2_impl.h **** 
  42:costas2_impl.h ****        float (costas2_impl::*d_phase_detector)(gr_complex sample) const;
  43:costas2_impl.h **** 
  44:costas2_impl.h ****      public:
  45:costas2_impl.h ****       costas2_impl(float loop_bw, int order);
  46:costas2_impl.h ****       ~costas2_impl();
 3772              		.loc 19 46 0
 3773              		.cfi_startproc
 3774 054c 4C8B17   		movq	(%rdi), %r10
 3775 054f 49037AE8 		addq	-24(%r10), %rdi
 3776 0553 E978FFFF 		jmp	.LTHUNK8
 3776      FF
 3777              		.cfi_endproc
 3778              	.LFE15693:
 3780              		.align 2
 3781              		.globl	_ZN2gr5lfast12costas2_implD0Ev
 3783              	_ZN2gr5lfast12costas2_implD0Ev:
 3784              	.LFB10974:
  89:costas2_impl.cc ****     {
 3785              		.loc 22 89 0
 3786              		.cfi_startproc
 3787 0558 55       		pushq	%rbp
 3788              		.cfi_def_cfa_offset 16
 3789              		.cfi_offset 6, -16
 3790 0559 4889E5   		movq	%rsp, %rbp
 3791              		.cfi_def_cfa_register 6
 3792 055c 4883EC10 		subq	$16, %rsp
 3793 0560 48897DF8 		movq	%rdi, -8(%rbp)
 3794              		.loc 22 91 0
 3795 0564 488B45F8 		movq	-8(%rbp), %rax
 3796 0568 4889C7   		movq	%rax, %rdi
 3797 056b E8000000 		call	_ZN2gr5lfast12costas2_implD1Ev
 3797      00
 3798 0570 488B45F8 		movq	-8(%rbp), %rax
 3799 0574 BEA00200 		movl	$672, %esi
 3799      00
 3800 0579 4889C7   		movq	%rax, %rdi
 3801 057c E8000000 		call	_ZdlPvm@PLT
 3801      00
 3802 0581 C9       		leave
 3803              		.cfi_def_cfa 7, 8
 3804 0582 C3       		ret
 3805              		.cfi_endproc
GAS LISTING /tmp/ccvUPO8Q.s 			page 183


 3806              	.LFE10974:
 3808              		.set	.LTHUNK9,_ZN2gr5lfast12costas2_implD0Ev
 3809              		.globl	_ZTv0_n24_N2gr5lfast12costas2_implD0Ev
 3811              	_ZTv0_n24_N2gr5lfast12costas2_implD0Ev:
 3812              	.LFB15694:
 3813              		.loc 19 46 0
 3814              		.cfi_startproc
 3815 0583 4C8B17   		movq	(%rdi), %r10
 3816 0586 49037AE8 		addq	-24(%r10), %rdi
 3817 058a EBCC     		jmp	.LTHUNK9
 3818              		.cfi_endproc
 3819              	.LFE15694:
 3821              		.align 2
 3822              		.globl	_ZNK2gr5lfast12costas2_impl5errorEv
 3824              	_ZNK2gr5lfast12costas2_impl5errorEv:
 3825              	.LFB10975:
  92:costas2_impl.cc **** 
  93:costas2_impl.cc ****     float
  94:costas2_impl.cc ****     costas2_impl::error() const
  95:costas2_impl.cc ****     {
 3826              		.loc 22 95 0
 3827              		.cfi_startproc
 3828 058c 55       		pushq	%rbp
 3829              		.cfi_def_cfa_offset 16
 3830              		.cfi_offset 6, -16
 3831 058d 4889E5   		movq	%rsp, %rbp
 3832              		.cfi_def_cfa_register 6
 3833 0590 48897DF8 		movq	%rdi, -8(%rbp)
  96:costas2_impl.cc ****       return d_error;
 3834              		.loc 22 96 0
 3835 0594 488B45F8 		movq	-8(%rbp), %rax
 3836 0598 C5FA1040 		vmovss	12(%rax), %xmm0
 3836      0C
  97:costas2_impl.cc ****     }
 3837              		.loc 22 97 0
 3838 059d 5D       		popq	%rbp
 3839              		.cfi_def_cfa 7, 8
 3840 059e C3       		ret
 3841              		.cfi_endproc
 3842              	.LFE10975:
 3844 059f 90       		.align 2
 3845              		.globl	_ZN2gr5lfast12costas2_impl16handle_set_noiseEN5boost13intrusive_ptrIN3pmt8pmt_baseEEE
 3847              	_ZN2gr5lfast12costas2_impl16handle_set_noiseEN5boost13intrusive_ptrIN3pmt8pmt_baseEEE:
 3848              	.LFB10976:
  98:costas2_impl.cc **** 
  99:costas2_impl.cc ****     void
 100:costas2_impl.cc ****     costas2_impl::handle_set_noise(pmt::pmt_t msg)
 101:costas2_impl.cc ****     {
 3849              		.loc 22 101 0
 3850              		.cfi_startproc
 3851              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 3852              		.cfi_lsda 0x1b,.LLSDA10976
 3853 05a0 55       		pushq	%rbp
 3854              		.cfi_def_cfa_offset 16
 3855              		.cfi_offset 6, -16
 3856 05a1 4889E5   		movq	%rsp, %rbp
 3857              		.cfi_def_cfa_register 6
GAS LISTING /tmp/ccvUPO8Q.s 			page 184


 3858 05a4 53       		pushq	%rbx
 3859 05a5 4883EC28 		subq	$40, %rsp
 3860              		.cfi_offset 3, -24
 3861 05a9 48897DD8 		movq	%rdi, -40(%rbp)
 3862 05ad 488975D0 		movq	%rsi, -48(%rbp)
 102:costas2_impl.cc ****       if(pmt::is_real(msg)) {
 3863              		.loc 22 102 0
 3864 05b1 488B55D0 		movq	-48(%rbp), %rdx
 3865 05b5 488D45E0 		leaq	-32(%rbp), %rax
 3866 05b9 4889D6   		movq	%rdx, %rsi
 3867 05bc 4889C7   		movq	%rax, %rdi
 3868              	.LEHB22:
 3869 05bf E8000000 		call	_ZN5boost13intrusive_ptrIN3pmt8pmt_baseEEC1ERKS3_
 3869      00
 3870              	.LEHE22:
 3871 05c4 488D45E0 		leaq	-32(%rbp), %rax
 3872 05c8 4889C7   		movq	%rax, %rdi
 3873              	.LEHB23:
 3874 05cb E8000000 		call	_ZN3pmt7is_realEN5boost13intrusive_ptrINS_8pmt_baseEEE@PLT
 3874      00
 3875              	.LEHE23:
 3876 05d0 89C3     		movl	%eax, %ebx
 3877 05d2 488D45E0 		leaq	-32(%rbp), %rax
 3878 05d6 4889C7   		movq	%rax, %rdi
 3879 05d9 E8000000 		call	_ZN5boost13intrusive_ptrIN3pmt8pmt_baseEED1Ev
 3879      00
 3880 05de 84DB     		testb	%bl, %bl
 3881 05e0 0F849F00 		je	.L161
 3881      0000
 103:costas2_impl.cc ****         d_noise = pmt::to_double(msg);
 3882              		.loc 22 103 0
 3883 05e6 488B55D0 		movq	-48(%rbp), %rdx
 3884 05ea 488D45E8 		leaq	-24(%rbp), %rax
 3885 05ee 4889D6   		movq	%rdx, %rsi
 3886 05f1 4889C7   		movq	%rax, %rdi
 3887              	.LEHB24:
 3888 05f4 E8000000 		call	_ZN5boost13intrusive_ptrIN3pmt8pmt_baseEEC1ERKS3_
 3888      00
 3889              	.LEHE24:
 3890 05f9 488D45E8 		leaq	-24(%rbp), %rax
 3891 05fd 4889C7   		movq	%rax, %rdi
 3892              	.LEHB25:
 3893 0600 E8000000 		call	_ZN3pmt9to_doubleEN5boost13intrusive_ptrINS_8pmt_baseEEE@PLT
 3893      00
 3894              	.LEHE25:
 3895 0605 C5FB5AC0 		vcvtsd2ss	%xmm0, %xmm0, %xmm0
 3896 0609 488B45D8 		movq	-40(%rbp), %rax
 3897 060d C5FA1140 		vmovss	%xmm0, 16(%rax)
 3897      10
 3898 0612 488D45E8 		leaq	-24(%rbp), %rax
 3899 0616 4889C7   		movq	%rax, %rdi
 3900 0619 E8000000 		call	_ZN5boost13intrusive_ptrIN3pmt8pmt_baseEED1Ev
 3900      00
 104:costas2_impl.cc ****         d_noise = powf(10.0f, d_noise/10.0f);
 3901              		.loc 22 104 0
 3902 061e 488B45D8 		movq	-40(%rbp), %rax
 3903 0622 C5FA1040 		vmovss	16(%rax), %xmm0
GAS LISTING /tmp/ccvUPO8Q.s 			page 185


 3903      10
 3904 0627 C5FA100D 		vmovss	.LC8(%rip), %xmm1
 3904      00000000 
 3905 062f C5FA5EC1 		vdivss	%xmm1, %xmm0, %xmm0
 3906 0633 C5F828C8 		vmovaps	%xmm0, %xmm1
 3907 0637 C5FA1005 		vmovss	.LC8(%rip), %xmm0
 3907      00000000 
 3908 063f E8000000 		call	powf@PLT
 3908      00
 3909 0644 C5F97EC2 		vmovd	%xmm0, %edx
 3910 0648 488B45D8 		movq	-40(%rbp), %rax
 3911 064c 895010   		movl	%edx, 16(%rax)
 105:costas2_impl.cc ****       }
 106:costas2_impl.cc ****     }
 3912              		.loc 22 106 0
 3913 064f EB34     		jmp	.L161
 3914              	.L159:
 3915 0651 4889C3   		movq	%rax, %rbx
 102:costas2_impl.cc ****         d_noise = pmt::to_double(msg);
 3916              		.loc 22 102 0
 3917 0654 488D45E0 		leaq	-32(%rbp), %rax
 3918 0658 4889C7   		movq	%rax, %rdi
 3919 065b E8000000 		call	_ZN5boost13intrusive_ptrIN3pmt8pmt_baseEED1Ev
 3919      00
 3920 0660 4889D8   		movq	%rbx, %rax
 3921 0663 4889C7   		movq	%rax, %rdi
 3922              	.LEHB26:
 3923 0666 E8000000 		call	_Unwind_Resume@PLT
 3923      00
 3924              	.L160:
 3925 066b 4889C3   		movq	%rax, %rbx
 103:costas2_impl.cc ****         d_noise = powf(10.0f, d_noise/10.0f);
 3926              		.loc 22 103 0
 3927 066e 488D45E8 		leaq	-24(%rbp), %rax
 3928 0672 4889C7   		movq	%rax, %rdi
 3929 0675 E8000000 		call	_ZN5boost13intrusive_ptrIN3pmt8pmt_baseEED1Ev
 3929      00
 3930 067a 4889D8   		movq	%rbx, %rax
 3931 067d 4889C7   		movq	%rax, %rdi
 3932 0680 E8000000 		call	_Unwind_Resume@PLT
 3932      00
 3933              	.LEHE26:
 3934              	.L161:
 3935              		.loc 22 106 0
 3936 0685 90       		nop
 3937 0686 4883C428 		addq	$40, %rsp
 3938 068a 5B       		popq	%rbx
 3939 068b 5D       		popq	%rbp
 3940              		.cfi_def_cfa 7, 8
 3941 068c C3       		ret
 3942              		.cfi_endproc
 3943              	.LFE10976:
 3944              		.section	.gcc_except_table
 3945              	.LLSDA10976:
 3946 0033 FF       		.byte	0xff
 3947 0034 FF       		.byte	0xff
 3948 0035 01       		.byte	0x1
GAS LISTING /tmp/ccvUPO8Q.s 			page 186


 3949 0036 17       		.uleb128 .LLSDACSE10976-.LLSDACSB10976
 3950              	.LLSDACSB10976:
 3951 0037 1F       		.uleb128 .LEHB22-.LFB10976
 3952 0038 05       		.uleb128 .LEHE22-.LEHB22
 3953 0039 00       		.uleb128 0
 3954 003a 00       		.uleb128 0
 3955 003b 2B       		.uleb128 .LEHB23-.LFB10976
 3956 003c 05       		.uleb128 .LEHE23-.LEHB23
 3957 003d B101     		.uleb128 .L159-.LFB10976
 3958 003f 00       		.uleb128 0
 3959 0040 54       		.uleb128 .LEHB24-.LFB10976
 3960 0041 05       		.uleb128 .LEHE24-.LEHB24
 3961 0042 00       		.uleb128 0
 3962 0043 00       		.uleb128 0
 3963 0044 60       		.uleb128 .LEHB25-.LFB10976
 3964 0045 05       		.uleb128 .LEHE25-.LEHB25
 3965 0046 CB01     		.uleb128 .L160-.LFB10976
 3966 0048 00       		.uleb128 0
 3967 0049 C601     		.uleb128 .LEHB26-.LFB10976
 3968 004b 1F       		.uleb128 .LEHE26-.LEHB26
 3969 004c 00       		.uleb128 0
 3970 004d 00       		.uleb128 0
 3971              	.LLSDACSE10976:
 3972              		.text
 3974              		.section	.rodata
 3975              		.align 4
 3976              	.LC9:
 3977 005c 00000000 		.long	0
 3978 0060 00000000 		.long	0
 3979              		.text
 3980 068d 90       		.align 2
 3981              		.globl	_ZN2gr5lfast12costas2_impl13work_originalEiRSt6vectorIPKvSaIS4_EERS2_IPvSaIS8_EE
 3983              	_ZN2gr5lfast12costas2_impl13work_originalEiRSt6vectorIPKvSaIS4_EERS2_IPvSaIS8_EE:
 3984              	.LFB10977:
 107:costas2_impl.cc **** 
 108:costas2_impl.cc ****     int
 109:costas2_impl.cc ****     costas2_impl::work_original(int noutput_items,
 110:costas2_impl.cc **** 			      gr_vector_const_void_star &input_items,
 111:costas2_impl.cc **** 			      gr_vector_void_star &output_items)
 112:costas2_impl.cc ****     {
 3985              		.loc 22 112 0
 3986              		.cfi_startproc
 3987              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 3988              		.cfi_lsda 0x1b,.LLSDA10977
 3989 068e 55       		pushq	%rbp
 3990              		.cfi_def_cfa_offset 16
 3991              		.cfi_offset 6, -16
 3992 068f 4889E5   		movq	%rsp, %rbp
 3993              		.cfi_def_cfa_register 6
 3994 0692 53       		pushq	%rbx
 3995 0693 4881ECB8 		subq	$184, %rsp
 3995      000000
 3996              		.cfi_offset 3, -24
 3997 069a 4889BD68 		movq	%rdi, -152(%rbp)
 3997      FFFFFF
 3998 06a1 89B564FF 		movl	%esi, -156(%rbp)
 3998      FFFF
GAS LISTING /tmp/ccvUPO8Q.s 			page 187


 3999 06a7 48899558 		movq	%rdx, -168(%rbp)
 3999      FFFFFF
 4000 06ae 48898D50 		movq	%rcx, -176(%rbp)
 4000      FFFFFF
 113:costas2_impl.cc ****       const gr_complex *iptr = (gr_complex *) input_items[0];
 4001              		.loc 22 113 0
 4002 06b5 488B8558 		movq	-168(%rbp), %rax
 4002      FFFFFF
 4003 06bc BE000000 		movl	$0, %esi
 4003      00
 4004 06c1 4889C7   		movq	%rax, %rdi
 4005 06c4 E8000000 		call	_ZNSt6vectorIPKvSaIS1_EEixEm
 4005      00
 4006 06c9 488B00   		movq	(%rax), %rax
 4007 06cc 488945E0 		movq	%rax, -32(%rbp)
 114:costas2_impl.cc ****       gr_complex *optr = (gr_complex *) output_items[0];
 4008              		.loc 22 114 0
 4009 06d0 488B8550 		movq	-176(%rbp), %rax
 4009      FFFFFF
 4010 06d7 BE000000 		movl	$0, %esi
 4010      00
 4011 06dc 4889C7   		movq	%rax, %rdi
 4012 06df E8000000 		call	_ZNSt6vectorIPvSaIS0_EEixEm
 4012      00
 4013 06e4 488B00   		movq	(%rax), %rax
 4014 06e7 488945D8 		movq	%rax, -40(%rbp)
 115:costas2_impl.cc ****       float *foptr = (float *) output_items[1];
 4015              		.loc 22 115 0
 4016 06eb 488B8550 		movq	-176(%rbp), %rax
 4016      FFFFFF
 4017 06f2 BE010000 		movl	$1, %esi
 4017      00
 4018 06f7 4889C7   		movq	%rax, %rdi
 4019 06fa E8000000 		call	_ZNSt6vectorIPvSaIS0_EEixEm
 4019      00
 4020 06ff 488B00   		movq	(%rax), %rax
 4021 0702 488945D0 		movq	%rax, -48(%rbp)
 116:costas2_impl.cc **** 
 117:costas2_impl.cc ****       bool write_foptr = output_items.size() >= 2;
 4022              		.loc 22 117 0
 4023 0706 488B8550 		movq	-176(%rbp), %rax
 4023      FFFFFF
 4024 070d 4889C7   		movq	%rax, %rdi
 4025 0710 E8000000 		call	_ZNKSt6vectorIPvSaIS0_EE4sizeEv
 4025      00
 4026 0715 4883F801 		cmpq	$1, %rax
 4027 0719 0F97C0   		seta	%al
 4028 071c 8845CF   		movb	%al, -49(%rbp)
 118:costas2_impl.cc **** 
 119:costas2_impl.cc ****       gr_complex nco_out;
 4029              		.loc 22 119 0
 4030 071f C5FA1005 		vmovss	.LC9(%rip), %xmm0
 4030      00000000 
 4031 0727 C5FA1145 		vmovss	%xmm0, -112(%rbp)
 4031      90
 4032 072c C5FA1005 		vmovss	4+.LC9(%rip), %xmm0
 4032      00000000 
GAS LISTING /tmp/ccvUPO8Q.s 			page 188


 4033 0734 C5FA1145 		vmovss	%xmm0, -108(%rbp)
 4033      94
 120:costas2_impl.cc ****       float i_r,i_i,n_r,n_i;
 121:costas2_impl.cc **** 
 122:costas2_impl.cc ****       std::vector<tag_t> tags;
 4034              		.loc 22 122 0
 4035 0739 488D8570 		leaq	-144(%rbp), %rax
 4035      FFFFFF
 4036 0740 4889C7   		movq	%rax, %rdi
 4037 0743 E8000000 		call	_ZNSt6vectorIN2gr5tag_tESaIS1_EEC1Ev
 4037      00
 4038              	.LBB41:
 123:costas2_impl.cc ****       /*
 124:costas2_impl.cc ****       get_tags_in_range(tags, 0, nitems_read(0),
 125:costas2_impl.cc ****                         nitems_read(0)+noutput_items,
 126:costas2_impl.cc ****                         pmt::intern("phase_est"));
 127:costas2_impl.cc **** 		*/
 128:costas2_impl.cc ****       if(write_foptr) {
 4039              		.loc 22 128 0
 4040 0748 807DCF00 		cmpb	$0, -49(%rbp)
 4041 074c 0F84F202 		je	.L163
 4041      0000
 4042              	.LBB42:
 4043              	.LBB43:
 129:costas2_impl.cc ****         for(int i = 0; i < noutput_items; i++) {
 4044              		.loc 22 129 0
 4045 0752 C745EC00 		movl	$0, -20(%rbp)
 4045      000000
 4046              	.L166:
 4047              		.loc 22 129 0 is_stmt 0 discriminator 1
 4048 0759 8B45EC   		movl	-20(%rbp), %eax
 4049 075c 3B8564FF 		cmpl	-156(%rbp), %eax
 4049      FFFF
 4050 0762 0F8DF205 		jge	.L167
 4050      0000
 130:costas2_impl.cc ****           if(tags.size() > 0) {
 4051              		.loc 22 130 0 is_stmt 1
 4052 0768 488D8570 		leaq	-144(%rbp), %rax
 4052      FFFFFF
 4053 076f 4889C7   		movq	%rax, %rdi
 4054 0772 E8000000 		call	_ZNKSt6vectorIN2gr5tag_tESaIS1_EE4sizeEv
 4054      00
 4055 0777 4885C0   		testq	%rax, %rax
 4056 077a 0F95C0   		setne	%al
 4057 077d 84C0     		testb	%al, %al
 4058 077f 0F84FE00 		je	.L165
 4058      0000
 131:costas2_impl.cc ****             if(tags[0].offset-nitems_read(0) == (size_t)i) {
 4059              		.loc 22 131 0
 4060 0785 488D8570 		leaq	-144(%rbp), %rax
 4060      FFFFFF
 4061 078c BE000000 		movl	$0, %esi
 4061      00
 4062 0791 4889C7   		movq	%rax, %rdi
 4063 0794 E8000000 		call	_ZNSt6vectorIN2gr5tag_tESaIS1_EEixEm
 4063      00
 4064 0799 488B18   		movq	(%rax), %rbx
GAS LISTING /tmp/ccvUPO8Q.s 			page 189


 4065 079c 488B8568 		movq	-152(%rbp), %rax
 4065      FFFFFF
 4066 07a3 488B00   		movq	(%rax), %rax
 4067 07a6 4883E818 		subq	$24, %rax
 4068 07aa 488B00   		movq	(%rax), %rax
 4069 07ad 4889C2   		movq	%rax, %rdx
 4070 07b0 488B8568 		movq	-152(%rbp), %rax
 4070      FFFFFF
 4071 07b7 4801D0   		addq	%rdx, %rax
 4072 07ba BE000000 		movl	$0, %esi
 4072      00
 4073 07bf 4889C7   		movq	%rax, %rdi
 4074              	.LEHB27:
 4075 07c2 E8000000 		call	_ZN2gr5block11nitems_readEj@PLT
 4075      00
 4076 07c7 4829C3   		subq	%rax, %rbx
 4077 07ca 4889DA   		movq	%rbx, %rdx
 4078 07cd 8B45EC   		movl	-20(%rbp), %eax
 4079 07d0 4898     		cltq
 4080 07d2 4839C2   		cmpq	%rax, %rdx
 4081 07d5 0F94C0   		sete	%al
 4082 07d8 84C0     		testb	%al, %al
 4083 07da 0F84A300 		je	.L165
 4083      0000
 132:costas2_impl.cc ****               d_phase = (float)pmt::to_double(tags[0].value);
 4084              		.loc 22 132 0
 4085 07e0 488B8568 		movq	-152(%rbp), %rax
 4085      FFFFFF
 4086 07e7 488B00   		movq	(%rax), %rax
 4087 07ea 4883E820 		subq	$32, %rax
 4088 07ee 488B00   		movq	(%rax), %rax
 4089 07f1 4889C2   		movq	%rax, %rdx
 4090 07f4 488B8568 		movq	-152(%rbp), %rax
 4090      FFFFFF
 4091 07fb 488D1C02 		leaq	(%rdx,%rax), %rbx
 4092 07ff 488D8570 		leaq	-144(%rbp), %rax
 4092      FFFFFF
 4093 0806 BE000000 		movl	$0, %esi
 4093      00
 4094 080b 4889C7   		movq	%rax, %rdi
 4095 080e E8000000 		call	_ZNSt6vectorIN2gr5tag_tESaIS1_EEixEm
 4095      00
 4096 0813 488D5010 		leaq	16(%rax), %rdx
 4097 0817 488D4598 		leaq	-104(%rbp), %rax
 4098 081b 4889D6   		movq	%rdx, %rsi
 4099 081e 4889C7   		movq	%rax, %rdi
 4100 0821 E8000000 		call	_ZN5boost13intrusive_ptrIN3pmt8pmt_baseEEC1ERKS3_
 4100      00
 4101              	.LEHE27:
 4102              		.loc 22 132 0 is_stmt 0 discriminator 1
 4103 0826 488D4598 		leaq	-104(%rbp), %rax
 4104 082a 4889C7   		movq	%rax, %rdi
 4105              	.LEHB28:
 4106 082d E8000000 		call	_ZN3pmt9to_doubleEN5boost13intrusive_ptrINS_8pmt_baseEEE@PLT
 4106      00
 4107              	.LEHE28:
 4108 0832 C5FB5AC0 		vcvtsd2ss	%xmm0, %xmm0, %xmm0
GAS LISTING /tmp/ccvUPO8Q.s 			page 190


 4109 0836 C5FA1143 		vmovss	%xmm0, 8(%rbx)
 4109      08
 4110 083b 488D4598 		leaq	-104(%rbp), %rax
 4111 083f 4889C7   		movq	%rax, %rdi
 4112 0842 E8000000 		call	_ZN5boost13intrusive_ptrIN3pmt8pmt_baseEED1Ev
 4112      00
 133:costas2_impl.cc ****               tags.erase(tags.begin());
 4113              		.loc 22 133 0 is_stmt 1 discriminator 1
 4114 0847 488D8570 		leaq	-144(%rbp), %rax
 4114      FFFFFF
 4115 084e 4889C7   		movq	%rax, %rdi
 4116 0851 E8000000 		call	_ZNSt6vectorIN2gr5tag_tESaIS1_EE5beginEv
 4116      00
 4117 0856 488945A8 		movq	%rax, -88(%rbp)
 4118 085a 488D55A8 		leaq	-88(%rbp), %rdx
 4119 085e 488D45A0 		leaq	-96(%rbp), %rax
 4120 0862 4889D6   		movq	%rdx, %rsi
 4121 0865 4889C7   		movq	%rax, %rdi
 4122 0868 E8000000 		call	_ZN9__gnu_cxx17__normal_iteratorIPKN2gr5tag_tESt6vectorIS2_SaIS2_EEEC1IPS2_EERKNS0_IT_NS_11__
 4122      00
 4123 086d 488B55A0 		movq	-96(%rbp), %rdx
 4124 0871 488D8570 		leaq	-144(%rbp), %rax
 4124      FFFFFF
 4125 0878 4889D6   		movq	%rdx, %rsi
 4126 087b 4889C7   		movq	%rax, %rdi
 4127              	.LEHB29:
 4128 087e E8000000 		call	_ZNSt6vectorIN2gr5tag_tESaIS1_EE5eraseEN9__gnu_cxx17__normal_iteratorIPKS1_S3_EE
 4128      00
 4129              	.L165:
 134:costas2_impl.cc ****             }
 135:costas2_impl.cc ****           }
 136:costas2_impl.cc ****           nco_out = gr_expj(-d_phase);
 4130              		.loc 22 136 0
 4131 0883 488B8568 		movq	-152(%rbp), %rax
 4131      FFFFFF
 4132 088a 488B00   		movq	(%rax), %rax
 4133 088d 4883E820 		subq	$32, %rax
 4134 0891 488B00   		movq	(%rax), %rax
 4135 0894 4889C2   		movq	%rax, %rdx
 4136 0897 488B8568 		movq	-152(%rbp), %rax
 4136      FFFFFF
 4137 089e 4801D0   		addq	%rdx, %rax
 4138 08a1 C5FA1048 		vmovss	8(%rax), %xmm1
 4138      08
 4139 08a6 C5FA1005 		vmovss	.LC10(%rip), %xmm0
 4139      00000000 
 4140 08ae C5F857C1 		vxorps	%xmm1, %xmm0, %xmm0
 4141 08b2 E849F7FF 		call	_ZL7gr_expjf
 4141      FF
 4142 08b7 C4E1F97E 		vmovq	%xmm0, %rax
 4142      C0
 4143 08bc 48894590 		movq	%rax, -112(%rbp)
 137:costas2_impl.cc **** 
 138:costas2_impl.cc ****           optr[i] = iptr[i] * nco_out;
 4144              		.loc 22 138 0
 4145 08c0 8B45EC   		movl	-20(%rbp), %eax
 4146 08c3 4898     		cltq
GAS LISTING /tmp/ccvUPO8Q.s 			page 191


 4147 08c5 488D14C5 		leaq	0(,%rax,8), %rdx
 4147      00000000 
 4148 08cd 488B45D8 		movq	-40(%rbp), %rax
 4149 08d1 488D1C02 		leaq	(%rdx,%rax), %rbx
 4150 08d5 8B45EC   		movl	-20(%rbp), %eax
 4151 08d8 4898     		cltq
 4152 08da 488D14C5 		leaq	0(,%rax,8), %rdx
 4152      00000000 
 4153 08e2 488B45E0 		movq	-32(%rbp), %rax
 4154 08e6 4801C2   		addq	%rax, %rdx
 4155 08e9 488D4590 		leaq	-112(%rbp), %rax
 4156 08ed 4889C6   		movq	%rax, %rsi
 4157 08f0 4889D7   		movq	%rdx, %rdi
 4158 08f3 E8000000 		call	_ZStmlIfESt7complexIT_ERKS2_S4_
 4158      00
 4159 08f8 C4E1F97E 		vmovq	%xmm0, %rax
 4159      C0
 4160 08fd 488903   		movq	%rax, (%rbx)
 139:costas2_impl.cc **** 
 140:costas2_impl.cc ****           d_error = phase_detector_2(optr[i]);
 4161              		.loc 22 140 0
 4162 0900 8B45EC   		movl	-20(%rbp), %eax
 4163 0903 4898     		cltq
 4164 0905 488D14C5 		leaq	0(,%rax,8), %rdx
 4164      00000000 
 4165 090d 488B45D8 		movq	-40(%rbp), %rax
 4166 0911 4801D0   		addq	%rdx, %rax
 4167 0914 488B10   		movq	(%rax), %rdx
 4168 0917 488B8568 		movq	-152(%rbp), %rax
 4168      FFFFFF
 4169 091e 48899548 		movq	%rdx, -184(%rbp)
 4169      FFFFFF
 4170 0925 C5FA7E85 		vmovq	-184(%rbp), %xmm0
 4170      48FFFFFF 
 4171 092d 4889C7   		movq	%rax, %rdi
 4172 0930 E8000000 		call	_ZNK2gr5lfast12costas2_impl16phase_detector_2ESt7complexIfE
 4172      00
 4173 0935 C5F97EC2 		vmovd	%xmm0, %edx
 4174 0939 488B8568 		movq	-152(%rbp), %rax
 4174      FFFFFF
 4175 0940 89500C   		movl	%edx, 12(%rax)
 141:costas2_impl.cc ****           d_error = gr::branchless_clip(d_error, 1.0);
 4176              		.loc 22 141 0
 4177 0943 488B8568 		movq	-152(%rbp), %rax
 4177      FFFFFF
 4178 094a 8B400C   		movl	12(%rax), %eax
 4179 094d C5FA100D 		vmovss	.LC5(%rip), %xmm1
 4179      00000000 
 4180 0955 898548FF 		movl	%eax, -184(%rbp)
 4180      FFFF
 4181 095b C5FA1085 		vmovss	-184(%rbp), %xmm0
 4181      48FFFFFF 
 4182 0963 E806F7FF 		call	_ZN2grL15branchless_clipEff
 4182      FF
 4183 0968 C5F97EC2 		vmovd	%xmm0, %edx
 4184 096c 488B8568 		movq	-152(%rbp), %rax
 4184      FFFFFF
GAS LISTING /tmp/ccvUPO8Q.s 			page 192


 4185 0973 89500C   		movl	%edx, 12(%rax)
 142:costas2_impl.cc **** 
 143:costas2_impl.cc ****           advance_loop(d_error);
 4186              		.loc 22 143 0
 4187 0976 488B8568 		movq	-152(%rbp), %rax
 4187      FFFFFF
 4188 097d 8B400C   		movl	12(%rax), %eax
 4189 0980 488B9568 		movq	-152(%rbp), %rdx
 4189      FFFFFF
 4190 0987 488B12   		movq	(%rdx), %rdx
 4191 098a 4883EA20 		subq	$32, %rdx
 4192 098e 488B12   		movq	(%rdx), %rdx
 4193 0991 4889D1   		movq	%rdx, %rcx
 4194 0994 488B9568 		movq	-152(%rbp), %rdx
 4194      FFFFFF
 4195 099b 4801CA   		addq	%rcx, %rdx
 4196 099e 898548FF 		movl	%eax, -184(%rbp)
 4196      FFFF
 4197 09a4 C5FA1085 		vmovss	-184(%rbp), %xmm0
 4197      48FFFFFF 
 4198 09ac 4889D7   		movq	%rdx, %rdi
 4199 09af E8000000 		call	_ZN2gr6blocks12control_loop12advance_loopEf@PLT
 4199      00
 144:costas2_impl.cc ****           phase_wrap();
 4200              		.loc 22 144 0
 4201 09b4 488B8568 		movq	-152(%rbp), %rax
 4201      FFFFFF
 4202 09bb 488B00   		movq	(%rax), %rax
 4203 09be 4883E820 		subq	$32, %rax
 4204 09c2 488B00   		movq	(%rax), %rax
 4205 09c5 4889C2   		movq	%rax, %rdx
 4206 09c8 488B8568 		movq	-152(%rbp), %rax
 4206      FFFFFF
 4207 09cf 4801D0   		addq	%rdx, %rax
 4208 09d2 4889C7   		movq	%rax, %rdi
 4209 09d5 E8000000 		call	_ZN2gr6blocks12control_loop10phase_wrapEv@PLT
 4209      00
 145:costas2_impl.cc ****           frequency_limit();
 4210              		.loc 22 145 0
 4211 09da 488B8568 		movq	-152(%rbp), %rax
 4211      FFFFFF
 4212 09e1 488B00   		movq	(%rax), %rax
 4213 09e4 4883E820 		subq	$32, %rax
 4214 09e8 488B00   		movq	(%rax), %rax
 4215 09eb 4889C2   		movq	%rax, %rdx
 4216 09ee 488B8568 		movq	-152(%rbp), %rax
 4216      FFFFFF
 4217 09f5 4801D0   		addq	%rdx, %rax
 4218 09f8 4889C7   		movq	%rax, %rdi
 4219 09fb E8000000 		call	_ZN2gr6blocks12control_loop15frequency_limitEv@PLT
 4219      00
 146:costas2_impl.cc **** 
 147:costas2_impl.cc ****           foptr[i] = d_freq;
 4220              		.loc 22 147 0 discriminator 2
 4221 0a00 8B45EC   		movl	-20(%rbp), %eax
 4222 0a03 4898     		cltq
 4223 0a05 488D1485 		leaq	0(,%rax,4), %rdx
GAS LISTING /tmp/ccvUPO8Q.s 			page 193


 4223      00000000 
 4224 0a0d 488B45D0 		movq	-48(%rbp), %rax
 4225 0a11 4801C2   		addq	%rax, %rdx
 4226 0a14 488B8568 		movq	-152(%rbp), %rax
 4226      FFFFFF
 4227 0a1b 488B00   		movq	(%rax), %rax
 4228 0a1e 4883E820 		subq	$32, %rax
 4229 0a22 488B00   		movq	(%rax), %rax
 4230 0a25 4889C1   		movq	%rax, %rcx
 4231 0a28 488B8568 		movq	-152(%rbp), %rax
 4231      FFFFFF
 4232 0a2f 4801C8   		addq	%rcx, %rax
 4233 0a32 C5FA1040 		vmovss	12(%rax), %xmm0
 4233      0C
 4234 0a37 C5FA1102 		vmovss	%xmm0, (%rdx)
 129:costas2_impl.cc ****           if(tags.size() > 0) {
 4235              		.loc 22 129 0 discriminator 2
 4236 0a3b 8345EC01 		addl	$1, -20(%rbp)
 4237 0a3f E915FDFF 		jmp	.L166
 4237      FF
 4238              	.L163:
 4239              	.LBE43:
 4240              	.LBE42:
 4241              	.LBB45:
 4242              	.LBB46:
 148:costas2_impl.cc ****         }
 149:costas2_impl.cc ****       }
 150:costas2_impl.cc ****       else {
 151:costas2_impl.cc ****         for(int i = 0; i < noutput_items; i++) {
 4243              		.loc 22 151 0
 4244 0a44 C745E800 		movl	$0, -24(%rbp)
 4244      000000
 4245              	.L171:
 4246              		.loc 22 151 0 is_stmt 0 discriminator 1
 4247 0a4b 8B45E8   		movl	-24(%rbp), %eax
 4248 0a4e 3B8564FF 		cmpl	-156(%rbp), %eax
 4248      FFFF
 4249 0a54 0F8D0003 		jge	.L167
 4249      0000
 152:costas2_impl.cc ****           if(tags.size() > 0) {
 4250              		.loc 22 152 0 is_stmt 1
 4251 0a5a 488D8570 		leaq	-144(%rbp), %rax
 4251      FFFFFF
 4252 0a61 4889C7   		movq	%rax, %rdi
 4253 0a64 E8000000 		call	_ZNKSt6vectorIN2gr5tag_tESaIS1_EE4sizeEv
 4253      00
 4254 0a69 4885C0   		testq	%rax, %rax
 4255 0a6c 0F95C0   		setne	%al
 4256 0a6f 84C0     		testb	%al, %al
 4257 0a71 0F84FE00 		je	.L168
 4257      0000
 153:costas2_impl.cc ****             if(tags[0].offset-nitems_read(0) == (size_t)i) {
 4258              		.loc 22 153 0
 4259 0a77 488D8570 		leaq	-144(%rbp), %rax
 4259      FFFFFF
 4260 0a7e BE000000 		movl	$0, %esi
 4260      00
GAS LISTING /tmp/ccvUPO8Q.s 			page 194


 4261 0a83 4889C7   		movq	%rax, %rdi
 4262 0a86 E8000000 		call	_ZNSt6vectorIN2gr5tag_tESaIS1_EEixEm
 4262      00
 4263 0a8b 488B18   		movq	(%rax), %rbx
 4264 0a8e 488B8568 		movq	-152(%rbp), %rax
 4264      FFFFFF
 4265 0a95 488B00   		movq	(%rax), %rax
 4266 0a98 4883E818 		subq	$24, %rax
 4267 0a9c 488B00   		movq	(%rax), %rax
 4268 0a9f 4889C2   		movq	%rax, %rdx
 4269 0aa2 488B8568 		movq	-152(%rbp), %rax
 4269      FFFFFF
 4270 0aa9 4801D0   		addq	%rdx, %rax
 4271 0aac BE000000 		movl	$0, %esi
 4271      00
 4272 0ab1 4889C7   		movq	%rax, %rdi
 4273 0ab4 E8000000 		call	_ZN2gr5block11nitems_readEj@PLT
 4273      00
 4274 0ab9 4829C3   		subq	%rax, %rbx
 4275 0abc 4889DA   		movq	%rbx, %rdx
 4276 0abf 8B45E8   		movl	-24(%rbp), %eax
 4277 0ac2 4898     		cltq
 4278 0ac4 4839C2   		cmpq	%rax, %rdx
 4279 0ac7 0F94C0   		sete	%al
 4280 0aca 84C0     		testb	%al, %al
 4281 0acc 0F84A300 		je	.L168
 4281      0000
 154:costas2_impl.cc ****               d_phase = (float)pmt::to_double(tags[0].value);
 4282              		.loc 22 154 0
 4283 0ad2 488B8568 		movq	-152(%rbp), %rax
 4283      FFFFFF
 4284 0ad9 488B00   		movq	(%rax), %rax
 4285 0adc 4883E820 		subq	$32, %rax
 4286 0ae0 488B00   		movq	(%rax), %rax
 4287 0ae3 4889C2   		movq	%rax, %rdx
 4288 0ae6 488B8568 		movq	-152(%rbp), %rax
 4288      FFFFFF
 4289 0aed 488D1C02 		leaq	(%rdx,%rax), %rbx
 4290 0af1 488D8570 		leaq	-144(%rbp), %rax
 4290      FFFFFF
 4291 0af8 BE000000 		movl	$0, %esi
 4291      00
 4292 0afd 4889C7   		movq	%rax, %rdi
 4293 0b00 E8000000 		call	_ZNSt6vectorIN2gr5tag_tESaIS1_EEixEm
 4293      00
 4294 0b05 488D5010 		leaq	16(%rax), %rdx
 4295 0b09 488D45B0 		leaq	-80(%rbp), %rax
 4296 0b0d 4889D6   		movq	%rdx, %rsi
 4297 0b10 4889C7   		movq	%rax, %rdi
 4298 0b13 E8000000 		call	_ZN5boost13intrusive_ptrIN3pmt8pmt_baseEEC1ERKS3_
 4298      00
 4299              	.LEHE29:
 4300              		.loc 22 154 0 is_stmt 0 discriminator 1
 4301 0b18 488D45B0 		leaq	-80(%rbp), %rax
 4302 0b1c 4889C7   		movq	%rax, %rdi
 4303              	.LEHB30:
 4304 0b1f E8000000 		call	_ZN3pmt9to_doubleEN5boost13intrusive_ptrINS_8pmt_baseEEE@PLT
GAS LISTING /tmp/ccvUPO8Q.s 			page 195


 4304      00
 4305              	.LEHE30:
 4306 0b24 C5FB5AC0 		vcvtsd2ss	%xmm0, %xmm0, %xmm0
 4307 0b28 C5FA1143 		vmovss	%xmm0, 8(%rbx)
 4307      08
 4308 0b2d 488D45B0 		leaq	-80(%rbp), %rax
 4309 0b31 4889C7   		movq	%rax, %rdi
 4310 0b34 E8000000 		call	_ZN5boost13intrusive_ptrIN3pmt8pmt_baseEED1Ev
 4310      00
 155:costas2_impl.cc ****               tags.erase(tags.begin());
 4311              		.loc 22 155 0 is_stmt 1 discriminator 1
 4312 0b39 488D8570 		leaq	-144(%rbp), %rax
 4312      FFFFFF
 4313 0b40 4889C7   		movq	%rax, %rdi
 4314 0b43 E8000000 		call	_ZNSt6vectorIN2gr5tag_tESaIS1_EE5beginEv
 4314      00
 4315 0b48 488945C0 		movq	%rax, -64(%rbp)
 4316 0b4c 488D55C0 		leaq	-64(%rbp), %rdx
 4317 0b50 488D45B8 		leaq	-72(%rbp), %rax
 4318 0b54 4889D6   		movq	%rdx, %rsi
 4319 0b57 4889C7   		movq	%rax, %rdi
 4320 0b5a E8000000 		call	_ZN9__gnu_cxx17__normal_iteratorIPKN2gr5tag_tESt6vectorIS2_SaIS2_EEEC1IPS2_EERKNS0_IT_NS_11__
 4320      00
 4321 0b5f 488B55B8 		movq	-72(%rbp), %rdx
 4322 0b63 488D8570 		leaq	-144(%rbp), %rax
 4322      FFFFFF
 4323 0b6a 4889D6   		movq	%rdx, %rsi
 4324 0b6d 4889C7   		movq	%rax, %rdi
 4325              	.LEHB31:
 4326 0b70 E8000000 		call	_ZNSt6vectorIN2gr5tag_tESaIS1_EE5eraseEN9__gnu_cxx17__normal_iteratorIPKS1_S3_EE
 4326      00
 4327              	.L168:
 156:costas2_impl.cc ****             }
 157:costas2_impl.cc ****           }
 158:costas2_impl.cc ****           // gr_expj does a sine/cosine
 159:costas2_impl.cc ****           // EXPENSIVE LINE
 160:costas2_impl.cc ****           nco_out = gr_expj(-d_phase);
 4328              		.loc 22 160 0
 4329 0b75 488B8568 		movq	-152(%rbp), %rax
 4329      FFFFFF
 4330 0b7c 488B00   		movq	(%rax), %rax
 4331 0b7f 4883E820 		subq	$32, %rax
 4332 0b83 488B00   		movq	(%rax), %rax
 4333 0b86 4889C2   		movq	%rax, %rdx
 4334 0b89 488B8568 		movq	-152(%rbp), %rax
 4334      FFFFFF
 4335 0b90 4801D0   		addq	%rdx, %rax
 4336 0b93 C5FA1048 		vmovss	8(%rax), %xmm1
 4336      08
 4337 0b98 C5FA1005 		vmovss	.LC10(%rip), %xmm0
 4337      00000000 
 4338 0ba0 C5F857C1 		vxorps	%xmm1, %xmm0, %xmm0
 4339 0ba4 E857F4FF 		call	_ZL7gr_expjf
 4339      FF
 4340 0ba9 C4E1F97E 		vmovq	%xmm0, %rax
 4340      C0
 4341 0bae 48894590 		movq	%rax, -112(%rbp)
GAS LISTING /tmp/ccvUPO8Q.s 			page 196


 161:costas2_impl.cc **** 
 162:costas2_impl.cc ****           optr[i] = iptr[i] * nco_out;
 4342              		.loc 22 162 0
 4343 0bb2 8B45E8   		movl	-24(%rbp), %eax
 4344 0bb5 4898     		cltq
 4345 0bb7 488D14C5 		leaq	0(,%rax,8), %rdx
 4345      00000000 
 4346 0bbf 488B45D8 		movq	-40(%rbp), %rax
 4347 0bc3 488D1C02 		leaq	(%rdx,%rax), %rbx
 4348 0bc7 8B45E8   		movl	-24(%rbp), %eax
 4349 0bca 4898     		cltq
 4350 0bcc 488D14C5 		leaq	0(,%rax,8), %rdx
 4350      00000000 
 4351 0bd4 488B45E0 		movq	-32(%rbp), %rax
 4352 0bd8 4801C2   		addq	%rax, %rdx
 4353 0bdb 488D4590 		leaq	-112(%rbp), %rax
 4354 0bdf 4889C6   		movq	%rax, %rsi
 4355 0be2 4889D7   		movq	%rdx, %rdi
 4356 0be5 E8000000 		call	_ZStmlIfESt7complexIT_ERKS2_S4_
 4356      00
 4357 0bea C4E1F97E 		vmovq	%xmm0, %rax
 4357      C0
 4358 0bef 488903   		movq	%rax, (%rbx)
 163:costas2_impl.cc **** 
 164:costas2_impl.cc ****           // EXPENSIVE LINE
 165:costas2_impl.cc ****           d_error = (*this.*d_phase_detector)(optr[i]);
 4359              		.loc 22 165 0
 4360 0bf2 488B8568 		movq	-152(%rbp), %rax
 4360      FFFFFF
 4361 0bf9 488B4018 		movq	24(%rax), %rax
 4362 0bfd 83E001   		andl	$1, %eax
 4363 0c00 4885C0   		testq	%rax, %rax
 4364 0c03 7432     		je	.L169
 4365              		.loc 22 165 0 is_stmt 0 discriminator 1
 4366 0c05 488B8568 		movq	-152(%rbp), %rax
 4366      FFFFFF
 4367 0c0c 488B4020 		movq	32(%rax), %rax
 4368 0c10 4889C2   		movq	%rax, %rdx
 4369 0c13 488B8568 		movq	-152(%rbp), %rax
 4369      FFFFFF
 4370 0c1a 4801D0   		addq	%rdx, %rax
 4371 0c1d 488B10   		movq	(%rax), %rdx
 4372 0c20 488B8568 		movq	-152(%rbp), %rax
 4372      FFFFFF
 4373 0c27 488B4018 		movq	24(%rax), %rax
 4374 0c2b 4883E801 		subq	$1, %rax
 4375 0c2f 4801D0   		addq	%rdx, %rax
 4376 0c32 488B00   		movq	(%rax), %rax
 4377 0c35 EB0B     		jmp	.L170
 4378              	.L169:
 4379              		.loc 22 165 0 discriminator 2
 4380 0c37 488B8568 		movq	-152(%rbp), %rax
 4380      FFFFFF
 4381 0c3e 488B4018 		movq	24(%rax), %rax
 4382              	.L170:
 4383              		.loc 22 165 0 discriminator 4
 4384 0c42 8B55E8   		movl	-24(%rbp), %edx
GAS LISTING /tmp/ccvUPO8Q.s 			page 197


 4385 0c45 4863D2   		movslq	%edx, %rdx
 4386 0c48 488D0CD5 		leaq	0(,%rdx,8), %rcx
 4386      00000000 
 4387 0c50 488B55D8 		movq	-40(%rbp), %rdx
 4388 0c54 4801D1   		addq	%rdx, %rcx
 4389 0c57 488B9568 		movq	-152(%rbp), %rdx
 4389      FFFFFF
 4390 0c5e 488B5220 		movq	32(%rdx), %rdx
 4391 0c62 4889D6   		movq	%rdx, %rsi
 4392 0c65 488B9568 		movq	-152(%rbp), %rdx
 4392      FFFFFF
 4393 0c6c 4801F2   		addq	%rsi, %rdx
 4394 0c6f 488B09   		movq	(%rcx), %rcx
 4395 0c72 48898D48 		movq	%rcx, -184(%rbp)
 4395      FFFFFF
 4396 0c79 C5FA7E85 		vmovq	-184(%rbp), %xmm0
 4396      48FFFFFF 
 4397 0c81 4889D7   		movq	%rdx, %rdi
 4398 0c84 FFD0     		call	*%rax
 4399              	.LVL6:
 4400 0c86 C5F97EC2 		vmovd	%xmm0, %edx
 4401 0c8a 488B8568 		movq	-152(%rbp), %rax
 4401      FFFFFF
 4402 0c91 89500C   		movl	%edx, 12(%rax)
 166:costas2_impl.cc ****           d_error = gr::branchless_clip(d_error, 1.0);
 4403              		.loc 22 166 0 is_stmt 1 discriminator 4
 4404 0c94 488B8568 		movq	-152(%rbp), %rax
 4404      FFFFFF
 4405 0c9b 8B400C   		movl	12(%rax), %eax
 4406 0c9e C5FA100D 		vmovss	.LC5(%rip), %xmm1
 4406      00000000 
 4407 0ca6 898548FF 		movl	%eax, -184(%rbp)
 4407      FFFF
 4408 0cac C5FA1085 		vmovss	-184(%rbp), %xmm0
 4408      48FFFFFF 
 4409 0cb4 E8B5F3FF 		call	_ZN2grL15branchless_clipEff
 4409      FF
 4410 0cb9 C5F97EC2 		vmovd	%xmm0, %edx
 4411 0cbd 488B8568 		movq	-152(%rbp), %rax
 4411      FFFFFF
 4412 0cc4 89500C   		movl	%edx, 12(%rax)
 167:costas2_impl.cc **** 
 168:costas2_impl.cc ****           advance_loop(d_error);
 4413              		.loc 22 168 0 discriminator 4
 4414 0cc7 488B8568 		movq	-152(%rbp), %rax
 4414      FFFFFF
 4415 0cce 8B400C   		movl	12(%rax), %eax
 4416 0cd1 488B9568 		movq	-152(%rbp), %rdx
 4416      FFFFFF
 4417 0cd8 488B12   		movq	(%rdx), %rdx
 4418 0cdb 4883EA20 		subq	$32, %rdx
 4419 0cdf 488B12   		movq	(%rdx), %rdx
 4420 0ce2 4889D1   		movq	%rdx, %rcx
 4421 0ce5 488B9568 		movq	-152(%rbp), %rdx
 4421      FFFFFF
 4422 0cec 4801CA   		addq	%rcx, %rdx
 4423 0cef 898548FF 		movl	%eax, -184(%rbp)
GAS LISTING /tmp/ccvUPO8Q.s 			page 198


 4423      FFFF
 4424 0cf5 C5FA1085 		vmovss	-184(%rbp), %xmm0
 4424      48FFFFFF 
 4425 0cfd 4889D7   		movq	%rdx, %rdi
 4426 0d00 E8000000 		call	_ZN2gr6blocks12control_loop12advance_loopEf@PLT
 4426      00
 169:costas2_impl.cc ****           phase_wrap();
 4427              		.loc 22 169 0
 4428 0d05 488B8568 		movq	-152(%rbp), %rax
 4428      FFFFFF
 4429 0d0c 488B00   		movq	(%rax), %rax
 4430 0d0f 4883E820 		subq	$32, %rax
 4431 0d13 488B00   		movq	(%rax), %rax
 4432 0d16 4889C2   		movq	%rax, %rdx
 4433 0d19 488B8568 		movq	-152(%rbp), %rax
 4433      FFFFFF
 4434 0d20 4801D0   		addq	%rdx, %rax
 4435 0d23 4889C7   		movq	%rax, %rdi
 4436 0d26 E8000000 		call	_ZN2gr6blocks12control_loop10phase_wrapEv@PLT
 4436      00
 170:costas2_impl.cc ****           frequency_limit();
 4437              		.loc 22 170 0
 4438 0d2b 488B8568 		movq	-152(%rbp), %rax
 4438      FFFFFF
 4439 0d32 488B00   		movq	(%rax), %rax
 4440 0d35 4883E820 		subq	$32, %rax
 4441 0d39 488B00   		movq	(%rax), %rax
 4442 0d3c 4889C2   		movq	%rax, %rdx
 4443 0d3f 488B8568 		movq	-152(%rbp), %rax
 4443      FFFFFF
 4444 0d46 4801D0   		addq	%rdx, %rax
 4445 0d49 4889C7   		movq	%rax, %rdi
 4446 0d4c E8000000 		call	_ZN2gr6blocks12control_loop15frequency_limitEv@PLT
 4446      00
 4447              	.LEHE31:
 151:costas2_impl.cc ****           if(tags.size() > 0) {
 4448              		.loc 22 151 0 discriminator 2
 4449 0d51 8345E801 		addl	$1, -24(%rbp)
 4450 0d55 E9F1FCFF 		jmp	.L171
 4450      FF
 4451              	.L167:
 4452              	.LBE46:
 4453              	.LBE45:
 4454              	.LBE41:
 171:costas2_impl.cc ****         }
 172:costas2_impl.cc ****       }
 173:costas2_impl.cc **** 
 174:costas2_impl.cc ****       return noutput_items;
 4455              		.loc 22 174 0
 4456 0d5a 8B9D64FF 		movl	-156(%rbp), %ebx
 4456      FFFF
 122:costas2_impl.cc ****       /*
 4457              		.loc 22 122 0
 4458 0d60 488D8570 		leaq	-144(%rbp), %rax
 4458      FFFFFF
 4459 0d67 4889C7   		movq	%rax, %rdi
 4460 0d6a E8000000 		call	_ZNSt6vectorIN2gr5tag_tESaIS1_EED1Ev
GAS LISTING /tmp/ccvUPO8Q.s 			page 199


 4460      00
 4461              		.loc 22 174 0
 4462 0d6f 89D8     		movl	%ebx, %eax
 4463 0d71 EB3F     		jmp	.L179
 4464              	.L177:
 4465 0d73 4889C3   		movq	%rax, %rbx
 4466              	.LBB50:
 4467              	.LBB48:
 4468              	.LBB44:
 132:costas2_impl.cc ****               tags.erase(tags.begin());
 4469              		.loc 22 132 0
 4470 0d76 488D4598 		leaq	-104(%rbp), %rax
 4471 0d7a 4889C7   		movq	%rax, %rdi
 4472 0d7d E8000000 		call	_ZN5boost13intrusive_ptrIN3pmt8pmt_baseEED1Ev
 4472      00
 4473 0d82 EB14     		jmp	.L174
 4474              	.L178:
 4475 0d84 4889C3   		movq	%rax, %rbx
 4476              	.LBE44:
 4477              	.LBE48:
 4478              	.LBB49:
 4479              	.LBB47:
 154:costas2_impl.cc ****               tags.erase(tags.begin());
 4480              		.loc 22 154 0
 4481 0d87 488D45B0 		leaq	-80(%rbp), %rax
 4482 0d8b 4889C7   		movq	%rax, %rdi
 4483 0d8e E8000000 		call	_ZN5boost13intrusive_ptrIN3pmt8pmt_baseEED1Ev
 4483      00
 4484 0d93 EB03     		jmp	.L174
 4485              	.L176:
 4486 0d95 4889C3   		movq	%rax, %rbx
 4487              	.L174:
 4488              	.LBE47:
 4489              	.LBE49:
 4490              	.LBE50:
 122:costas2_impl.cc ****       /*
 4491              		.loc 22 122 0
 4492 0d98 488D8570 		leaq	-144(%rbp), %rax
 4492      FFFFFF
 4493 0d9f 4889C7   		movq	%rax, %rdi
 4494 0da2 E8000000 		call	_ZNSt6vectorIN2gr5tag_tESaIS1_EED1Ev
 4494      00
 4495 0da7 4889D8   		movq	%rbx, %rax
 4496 0daa 4889C7   		movq	%rax, %rdi
 4497              	.LEHB32:
 4498 0dad E8000000 		call	_Unwind_Resume@PLT
 4498      00
 4499              	.LEHE32:
 4500              	.L179:
 175:costas2_impl.cc ****     }
 4501              		.loc 22 175 0
 4502 0db2 4881C4B8 		addq	$184, %rsp
 4502      000000
 4503 0db9 5B       		popq	%rbx
 4504 0dba 5D       		popq	%rbp
 4505              		.cfi_def_cfa 7, 8
 4506 0dbb C3       		ret
GAS LISTING /tmp/ccvUPO8Q.s 			page 200


 4507              		.cfi_endproc
 4508              	.LFE10977:
 4509              		.section	.gcc_except_table
 4510              	.LLSDA10977:
 4511 004e FF       		.byte	0xff
 4512 004f FF       		.byte	0xff
 4513 0050 01       		.byte	0x1
 4514 0051 25       		.uleb128 .LLSDACSE10977-.LLSDACSB10977
 4515              	.LLSDACSB10977:
 4516 0052 B402     		.uleb128 .LEHB27-.LFB10977
 4517 0054 64       		.uleb128 .LEHE27-.LEHB27
 4518 0055 870E     		.uleb128 .L176-.LFB10977
 4519 0057 00       		.uleb128 0
 4520 0058 9F03     		.uleb128 .LEHB28-.LFB10977
 4521 005a 05       		.uleb128 .LEHE28-.LEHB28
 4522 005b E50D     		.uleb128 .L177-.LFB10977
 4523 005d 00       		.uleb128 0
 4524 005e F003     		.uleb128 .LEHB29-.LFB10977
 4525 0060 9A05     		.uleb128 .LEHE29-.LEHB29
 4526 0062 870E     		.uleb128 .L176-.LFB10977
 4527 0064 00       		.uleb128 0
 4528 0065 9109     		.uleb128 .LEHB30-.LFB10977
 4529 0067 05       		.uleb128 .LEHE30-.LEHB30
 4530 0068 F60D     		.uleb128 .L178-.LFB10977
 4531 006a 00       		.uleb128 0
 4532 006b E209     		.uleb128 .LEHB31-.LFB10977
 4533 006d E103     		.uleb128 .LEHE31-.LEHB31
 4534 006f 870E     		.uleb128 .L176-.LFB10977
 4535 0071 00       		.uleb128 0
 4536 0072 9F0E     		.uleb128 .LEHB32-.LFB10977
 4537 0074 05       		.uleb128 .LEHE32-.LEHB32
 4538 0075 00       		.uleb128 0
 4539 0076 00       		.uleb128 0
 4540              	.LLSDACSE10977:
 4541              		.text
 4543              		.align 2
 4544              		.globl	_ZN2gr5lfast12costas2_impl9work_testEiRSt6vectorIPKvSaIS4_EERS2_IPvSaIS8_EE
 4546              	_ZN2gr5lfast12costas2_impl9work_testEiRSt6vectorIPKvSaIS4_EERS2_IPvSaIS8_EE:
 4547              	.LFB10978:
 176:costas2_impl.cc **** 
 177:costas2_impl.cc ****     int
 178:costas2_impl.cc ****     costas2_impl::work_test(int noutput_items,
 179:costas2_impl.cc ****         gr_vector_const_void_star &input_items,
 180:costas2_impl.cc ****         gr_vector_void_star &output_items)
 181:costas2_impl.cc ****     {
 4548              		.loc 22 181 0
 4549              		.cfi_startproc
 4550 0dbc 55       		pushq	%rbp
 4551              		.cfi_def_cfa_offset 16
 4552              		.cfi_offset 6, -16
 4553 0dbd 4889E5   		movq	%rsp, %rbp
 4554              		.cfi_def_cfa_register 6
 4555 0dc0 4883EC50 		subq	$80, %rsp
 4556 0dc4 48897DC8 		movq	%rdi, -56(%rbp)
 4557 0dc8 8975C4   		movl	%esi, -60(%rbp)
 4558 0dcb 488955B8 		movq	%rdx, -72(%rbp)
 4559 0dcf 48894DB0 		movq	%rcx, -80(%rbp)
GAS LISTING /tmp/ccvUPO8Q.s 			page 201


 182:costas2_impl.cc ****         // const gr_complex *iptr = (gr_complex *) input_items[0];
 183:costas2_impl.cc ****         // gr_complex *optr = (gr_complex *) output_items[0];
 184:costas2_impl.cc ****         const SComplex *iptr = (SComplex *) input_items[0];
 4560              		.loc 22 184 0
 4561 0dd3 488B45B8 		movq	-72(%rbp), %rax
 4562 0dd7 BE000000 		movl	$0, %esi
 4562      00
 4563 0ddc 4889C7   		movq	%rax, %rdi
 4564 0ddf E8000000 		call	_ZNSt6vectorIPKvSaIS1_EEixEm
 4564      00
 4565 0de4 488B00   		movq	(%rax), %rax
 4566 0de7 488945F0 		movq	%rax, -16(%rbp)
 185:costas2_impl.cc ****         SComplex *optr = (SComplex *) output_items[0];
 4567              		.loc 22 185 0
 4568 0deb 488B45B0 		movq	-80(%rbp), %rax
 4569 0def BE000000 		movl	$0, %esi
 4569      00
 4570 0df4 4889C7   		movq	%rax, %rdi
 4571 0df7 E8000000 		call	_ZNSt6vectorIPvSaIS0_EEixEm
 4571      00
 4572 0dfc 488B00   		movq	(%rax), %rax
 4573 0dff 488945E8 		movq	%rax, -24(%rbp)
 186:costas2_impl.cc ****         // gr_complex nco_out;
 187:costas2_impl.cc ****         float i_r,i_i,n_r,n_i,o_r,o_i;
 188:costas2_impl.cc ****         // float x1,x2;
 189:costas2_impl.cc ****         int i;
 190:costas2_impl.cc ****         // float angle_rad,sin,cos;
 191:costas2_impl.cc **** 
 192:costas2_impl.cc ****         // gr_complex nco_out;
 193:costas2_impl.cc **** 
 194:costas2_impl.cc ****         for(i = 0; i < noutput_items; i++) {
 4574              		.loc 22 194 0
 4575 0e03 C745FC00 		movl	$0, -4(%rbp)
 4575      000000
 4576              	.L194:
 4577              		.loc 22 194 0 is_stmt 0 discriminator 1
 4578 0e0a 8B45FC   		movl	-4(%rbp), %eax
 4579 0e0d 3B45C4   		cmpl	-60(%rbp), %eax
 4580 0e10 0F8DE304 		jge	.L181
 4580      0000
 195:costas2_impl.cc ****           // nco_out = gr_expj(-d_phase);
 196:costas2_impl.cc ****       	  // returns this:  nco_out.real = n_r, nco_out.imag = n_i
 197:costas2_impl.cc ****          // Trig functions killing performance.  Tried a number of replacement options but no luck:
 198:costas2_impl.cc ****         	// gnuradio lookup functions - expensive with float_to_fixed in each iteration
 199:costas2_impl.cc ****         	// Tried rolling our own lookup tables - Same performance as straight trig
 200:costas2_impl.cc ****         	// Tried quadratic curve inline approximation - Tiny bit faster
 201:costas2_impl.cc ****        	 // gr::sincosf(-d_phase, &n_i, &n_r);
 202:costas2_impl.cc **** 			n_i = sinf(-d_phase);
 4581              		.loc 22 202 0 is_stmt 1
 4582 0e16 488B45C8 		movq	-56(%rbp), %rax
 4583 0e1a 488B00   		movq	(%rax), %rax
 4584 0e1d 4883E820 		subq	$32, %rax
 4585 0e21 488B00   		movq	(%rax), %rax
 4586 0e24 4889C2   		movq	%rax, %rdx
 4587 0e27 488B45C8 		movq	-56(%rbp), %rax
 4588 0e2b 4801D0   		addq	%rdx, %rax
 4589 0e2e C5FA1048 		vmovss	8(%rax), %xmm1
GAS LISTING /tmp/ccvUPO8Q.s 			page 202


 4589      08
 4590 0e33 C5FA1005 		vmovss	.LC10(%rip), %xmm0
 4590      00000000 
 4591 0e3b C5F857C1 		vxorps	%xmm1, %xmm0, %xmm0
 4592 0e3f E8000000 		call	sinf@PLT
 4592      00
 4593 0e44 C5F97EC0 		vmovd	%xmm0, %eax
 4594 0e48 8945E4   		movl	%eax, -28(%rbp)
 203:costas2_impl.cc **** 			n_r = cosf(-d_phase);
 4595              		.loc 22 203 0
 4596 0e4b 488B45C8 		movq	-56(%rbp), %rax
 4597 0e4f 488B00   		movq	(%rax), %rax
 4598 0e52 4883E820 		subq	$32, %rax
 4599 0e56 488B00   		movq	(%rax), %rax
 4600 0e59 4889C2   		movq	%rax, %rdx
 4601 0e5c 488B45C8 		movq	-56(%rbp), %rax
 4602 0e60 4801D0   		addq	%rdx, %rax
 4603 0e63 C5FA1048 		vmovss	8(%rax), %xmm1
 4603      08
 4604 0e68 C5FA1005 		vmovss	.LC10(%rip), %xmm0
 4604      00000000 
 4605 0e70 C5F857C1 		vxorps	%xmm1, %xmm0, %xmm0
 4606 0e74 E8000000 		call	cosf@PLT
 4606      00
 4607 0e79 C5F97EC0 		vmovd	%xmm0, %eax
 4608 0e7d 8945E0   		movl	%eax, -32(%rbp)
 204:costas2_impl.cc **** 
 205:costas2_impl.cc ****           //optr[i] = iptr[i] * nco_out;
 206:costas2_impl.cc **** 
 207:costas2_impl.cc ****           // FMA stands for fused multiply-add operations where FMA(a,b,c)=(a*b)+c and it does it a
 208:costas2_impl.cc **** #if defined(__FMA__)
 209:costas2_impl.cc ****           o_r = __builtin_fmaf(iptr[i].real,n_r,-iptr[i].imag*n_i);
 4609              		.loc 22 209 0
 4610 0e80 8B45FC   		movl	-4(%rbp), %eax
 4611 0e83 4898     		cltq
 4612 0e85 488D14C5 		leaq	0(,%rax,8), %rdx
 4612      00000000 
 4613 0e8d 488B45F0 		movq	-16(%rbp), %rax
 4614 0e91 4801D0   		addq	%rdx, %rax
 4615 0e94 C5FA1008 		vmovss	(%rax), %xmm1
 4616 0e98 8B45FC   		movl	-4(%rbp), %eax
 4617 0e9b 4898     		cltq
 4618 0e9d 488D14C5 		leaq	0(,%rax,8), %rdx
 4618      00000000 
 4619 0ea5 488B45F0 		movq	-16(%rbp), %rax
 4620 0ea9 4801D0   		addq	%rdx, %rax
 4621 0eac C5FA1050 		vmovss	4(%rax), %xmm2
 4621      04
 4622 0eb1 C5FA1005 		vmovss	.LC10(%rip), %xmm0
 4622      00000000 
 4623 0eb9 C5F857C2 		vxorps	%xmm2, %xmm0, %xmm0
 4624 0ebd C5FA5945 		vmulss	-28(%rbp), %xmm0, %xmm0
 4624      E4
 4625 0ec2 C4E271B9 		vfmadd231ss	-32(%rbp), %xmm1, %xmm0
 4625      45E0
 4626 0ec8 C5FA1145 		vmovss	%xmm0, -36(%rbp)
 4626      DC
GAS LISTING /tmp/ccvUPO8Q.s 			page 203


 210:costas2_impl.cc ****           o_i = __builtin_fmaf(iptr[i].real,n_i,iptr[i].imag*n_r);
 4627              		.loc 22 210 0
 4628 0ecd 8B45FC   		movl	-4(%rbp), %eax
 4629 0ed0 4898     		cltq
 4630 0ed2 488D14C5 		leaq	0(,%rax,8), %rdx
 4630      00000000 
 4631 0eda 488B45F0 		movq	-16(%rbp), %rax
 4632 0ede 4801D0   		addq	%rdx, %rax
 4633 0ee1 C5FA1008 		vmovss	(%rax), %xmm1
 4634 0ee5 8B45FC   		movl	-4(%rbp), %eax
 4635 0ee8 4898     		cltq
 4636 0eea 488D14C5 		leaq	0(,%rax,8), %rdx
 4636      00000000 
 4637 0ef2 488B45F0 		movq	-16(%rbp), %rax
 4638 0ef6 4801D0   		addq	%rdx, %rax
 4639 0ef9 C5FA1040 		vmovss	4(%rax), %xmm0
 4639      04
 4640 0efe C5FA5945 		vmulss	-32(%rbp), %xmm0, %xmm0
 4640      E0
 4641 0f03 C4E271B9 		vfmadd231ss	-28(%rbp), %xmm1, %xmm0
 4641      45E4
 4642 0f09 C5FA1145 		vmovss	%xmm0, -40(%rbp)
 4642      D8
 211:costas2_impl.cc **** #else
 212:costas2_impl.cc ****           i_r = iptr[i].real;
 213:costas2_impl.cc ****           i_i = iptr[i].imag;
 214:costas2_impl.cc ****           o_r = (i_r * n_r) - (i_i*n_i);
 215:costas2_impl.cc ****           o_i = (i_r * n_i) + (i_i * n_r);
 216:costas2_impl.cc **** #endif
 217:costas2_impl.cc **** 
 218:costas2_impl.cc ****           optr[i].real = o_r;
 4643              		.loc 22 218 0
 4644 0f0e 8B45FC   		movl	-4(%rbp), %eax
 4645 0f11 4898     		cltq
 4646 0f13 488D14C5 		leaq	0(,%rax,8), %rdx
 4646      00000000 
 4647 0f1b 488B45E8 		movq	-24(%rbp), %rax
 4648 0f1f 4801D0   		addq	%rdx, %rax
 4649 0f22 C5FA1045 		vmovss	-36(%rbp), %xmm0
 4649      DC
 4650 0f27 C5FA1100 		vmovss	%xmm0, (%rax)
 219:costas2_impl.cc ****           optr[i].imag = o_i;
 4651              		.loc 22 219 0
 4652 0f2b 8B45FC   		movl	-4(%rbp), %eax
 4653 0f2e 4898     		cltq
 4654 0f30 488D14C5 		leaq	0(,%rax,8), %rdx
 4654      00000000 
 4655 0f38 488B45E8 		movq	-24(%rbp), %rax
 4656 0f3c 4801D0   		addq	%rdx, %rax
 4657 0f3f C5FA1045 		vmovss	-40(%rbp), %xmm0
 4657      D8
 4658 0f44 C5FA1140 		vmovss	%xmm0, 4(%rax)
 4658      04
 220:costas2_impl.cc **** 
 221:costas2_impl.cc ****           //d_error = (*this.*d_phase_detector)(optr[i]);
 222:costas2_impl.cc ****           // 2nd order in-place
 223:costas2_impl.cc ****           d_error = o_r*o_i;
GAS LISTING /tmp/ccvUPO8Q.s 			page 204


 4659              		.loc 22 223 0
 4660 0f49 C5FA1045 		vmovss	-36(%rbp), %xmm0
 4660      DC
 4661 0f4e C5FA5945 		vmulss	-40(%rbp), %xmm0, %xmm0
 4661      D8
 4662 0f53 488B45C8 		movq	-56(%rbp), %rax
 4663 0f57 C5FA1140 		vmovss	%xmm0, 12(%rax)
 4663      0C
 224:costas2_impl.cc **** 
 225:costas2_impl.cc ****           // d_error = gr::branchless_clip(d_error, 1.0);
 226:costas2_impl.cc ****           /*  Taken out for speed and consolidated
 227:costas2_impl.cc ****           x1 = fabsf(d_error+1);
 228:costas2_impl.cc ****           x2 = fabsf(d_error-1);
 229:costas2_impl.cc ****           x1 -= x2;
 230:costas2_impl.cc ****           d_error = 0.5*x1;
 231:costas2_impl.cc **** 		  */
 232:costas2_impl.cc ****           d_error = 0.5 * (fabsf(d_error+1) - fabsf(d_error-1));
 4664              		.loc 22 232 0
 4665 0f5c 488B45C8 		movq	-56(%rbp), %rax
 4666 0f60 C5FA1048 		vmovss	12(%rax), %xmm1
 4666      0C
 4667 0f65 C5FA1005 		vmovss	.LC5(%rip), %xmm0
 4667      00000000 
 4668 0f6d C5F258C0 		vaddss	%xmm0, %xmm1, %xmm0
 4669 0f71 C5FA100D 		vmovss	.LC0(%rip), %xmm1
 4669      00000000 
 4670 0f79 C5F854C1 		vandps	%xmm1, %xmm0, %xmm0
 4671 0f7d 488B45C8 		movq	-56(%rbp), %rax
 4672 0f81 C5FA1048 		vmovss	12(%rax), %xmm1
 4672      0C
 4673 0f86 C5FA1015 		vmovss	.LC5(%rip), %xmm2
 4673      00000000 
 4674 0f8e C5F25CCA 		vsubss	%xmm2, %xmm1, %xmm1
 4675 0f92 C5FA1015 		vmovss	.LC0(%rip), %xmm2
 4675      00000000 
 4676 0f9a C5F054CA 		vandps	%xmm2, %xmm1, %xmm1
 4677 0f9e C5FA5CC1 		vsubss	%xmm1, %xmm0, %xmm0
 4678 0fa2 C5FA100D 		vmovss	.LC3(%rip), %xmm1
 4678      00000000 
 4679 0faa C5FA59C1 		vmulss	%xmm1, %xmm0, %xmm0
 4680 0fae 488B45C8 		movq	-56(%rbp), %rax
 4681 0fb2 C5FA1140 		vmovss	%xmm0, 12(%rax)
 4681      0C
 233:costas2_impl.cc **** 
 234:costas2_impl.cc ****           //advance_loop(d_error);
 235:costas2_impl.cc **** #if defined(__FMA__)
 236:costas2_impl.cc ****           d_freq = __builtin_fmaf(d_beta,d_error,d_freq);
 4682              		.loc 22 236 0
 4683 0fb7 488B45C8 		movq	-56(%rbp), %rax
 4684 0fbb 488B00   		movq	(%rax), %rax
 4685 0fbe 4883E820 		subq	$32, %rax
 4686 0fc2 488B00   		movq	(%rax), %rax
 4687 0fc5 4889C2   		movq	%rax, %rdx
 4688 0fc8 488B45C8 		movq	-56(%rbp), %rax
 4689 0fcc 4801C2   		addq	%rax, %rdx
 4690 0fcf 488B45C8 		movq	-56(%rbp), %rax
 4691 0fd3 488B00   		movq	(%rax), %rax
GAS LISTING /tmp/ccvUPO8Q.s 			page 205


 4692 0fd6 4883E820 		subq	$32, %rax
 4693 0fda 488B00   		movq	(%rax), %rax
 4694 0fdd 4889C1   		movq	%rax, %rcx
 4695 0fe0 488B45C8 		movq	-56(%rbp), %rax
 4696 0fe4 4801C8   		addq	%rcx, %rax
 4697 0fe7 C5FA1050 		vmovss	36(%rax), %xmm2
 4697      24
 4698 0fec 488B45C8 		movq	-56(%rbp), %rax
 4699 0ff0 C5FA1048 		vmovss	12(%rax), %xmm1
 4699      0C
 4700 0ff5 488B45C8 		movq	-56(%rbp), %rax
 4701 0ff9 488B00   		movq	(%rax), %rax
 4702 0ffc 4883E820 		subq	$32, %rax
 4703 1000 488B00   		movq	(%rax), %rax
 4704 1003 4889C1   		movq	%rax, %rcx
 4705 1006 488B45C8 		movq	-56(%rbp), %rax
 4706 100a 4801C8   		addq	%rcx, %rax
 4707 100d C5FA1040 		vmovss	12(%rax), %xmm0
 4707      0C
 4708 1012 C4E269B9 		vfmadd231ss	%xmm1, %xmm2, %xmm0
 4708      C1
 4709 1017 C5FA1142 		vmovss	%xmm0, 12(%rdx)
 4709      0C
 237:costas2_impl.cc **** #else
 238:costas2_impl.cc ****           d_freq = d_beta * d_error + d_freq;
 239:costas2_impl.cc **** #endif
 240:costas2_impl.cc ****           //d_freq = __builtin_fmaf(d_beta,d_error,d_freq);
 241:costas2_impl.cc ****           // This line is causing one of the greatest performance drops!  100 Msps -> 33 Msps!
 242:costas2_impl.cc **** #if defined(__FMA__)
 243:costas2_impl.cc ****           d_phase += __builtin_fmaf(d_alpha,d_error,d_freq);
 4710              		.loc 22 243 0
 4711 101c 488B45C8 		movq	-56(%rbp), %rax
 4712 1020 488B00   		movq	(%rax), %rax
 4713 1023 4883E820 		subq	$32, %rax
 4714 1027 488B00   		movq	(%rax), %rax
 4715 102a 4889C2   		movq	%rax, %rdx
 4716 102d 488B45C8 		movq	-56(%rbp), %rax
 4717 1031 4801C2   		addq	%rax, %rdx
 4718 1034 488B45C8 		movq	-56(%rbp), %rax
 4719 1038 488B00   		movq	(%rax), %rax
 4720 103b 4883E820 		subq	$32, %rax
 4721 103f 488B00   		movq	(%rax), %rax
 4722 1042 4889C1   		movq	%rax, %rcx
 4723 1045 488B45C8 		movq	-56(%rbp), %rax
 4724 1049 4801C8   		addq	%rcx, %rax
 4725 104c C5FA1048 		vmovss	8(%rax), %xmm1
 4725      08
 4726 1051 488B45C8 		movq	-56(%rbp), %rax
 4727 1055 488B00   		movq	(%rax), %rax
 4728 1058 4883E820 		subq	$32, %rax
 4729 105c 488B00   		movq	(%rax), %rax
 4730 105f 4889C1   		movq	%rax, %rcx
 4731 1062 488B45C8 		movq	-56(%rbp), %rax
 4732 1066 4801C8   		addq	%rcx, %rax
 4733 1069 C5FA1058 		vmovss	32(%rax), %xmm3
 4733      20
 4734 106e 488B45C8 		movq	-56(%rbp), %rax
GAS LISTING /tmp/ccvUPO8Q.s 			page 206


 4735 1072 C5FA1050 		vmovss	12(%rax), %xmm2
 4735      0C
 4736 1077 488B45C8 		movq	-56(%rbp), %rax
 4737 107b 488B00   		movq	(%rax), %rax
 4738 107e 4883E820 		subq	$32, %rax
 4739 1082 488B00   		movq	(%rax), %rax
 4740 1085 4889C1   		movq	%rax, %rcx
 4741 1088 488B45C8 		movq	-56(%rbp), %rax
 4742 108c 4801C8   		addq	%rcx, %rax
 4743 108f C5FA1040 		vmovss	12(%rax), %xmm0
 4743      0C
 4744 1094 C4E261B9 		vfmadd231ss	%xmm2, %xmm3, %xmm0
 4744      C2
 4745 1099 C5F258C0 		vaddss	%xmm0, %xmm1, %xmm0
 4746 109d C5FA1142 		vmovss	%xmm0, 8(%rdx)
 4746      08
 244:costas2_impl.cc **** #else
 245:costas2_impl.cc ****           d_phase = d_alpha * d_error + d_phase + d_freq;
 246:costas2_impl.cc **** #endif
 247:costas2_impl.cc ****           // d_phase = d_phase + d_freq + d_alpha * d_error;
 248:costas2_impl.cc ****           // d_phase = d_phase + __builtin_fmaf(d_alpha,d_error,d_freq);
 249:costas2_impl.cc **** 
 250:costas2_impl.cc ****           //phase_wrap();
 251:costas2_impl.cc ****           if (d_phase > CL_TWO_PI) {
 4747              		.loc 22 251 0
 4748 10a2 488B45C8 		movq	-56(%rbp), %rax
 4749 10a6 488B00   		movq	(%rax), %rax
 4750 10a9 4883E820 		subq	$32, %rax
 4751 10ad 488B00   		movq	(%rax), %rax
 4752 10b0 4889C2   		movq	%rax, %rdx
 4753 10b3 488B45C8 		movq	-56(%rbp), %rax
 4754 10b7 4801D0   		addq	%rdx, %rax
 4755 10ba C5FA1040 		vmovss	8(%rax), %xmm0
 4755      08
 4756 10bf C5FA5AC0 		vcvtss2sd	%xmm0, %xmm0, %xmm0
 4757 10c3 C5F92E05 		vucomisd	.LC11(%rip), %xmm0
 4757      00000000 
 4758 10cb 767F     		jbe	.L200
 4759              	.L186:
 252:costas2_impl.cc ****   			while(d_phase>CL_TWO_PI) {
 4760              		.loc 22 252 0
 4761 10cd 488B45C8 		movq	-56(%rbp), %rax
 4762 10d1 488B00   		movq	(%rax), %rax
 4763 10d4 4883E820 		subq	$32, %rax
 4764 10d8 488B00   		movq	(%rax), %rax
 4765 10db 4889C2   		movq	%rax, %rdx
 4766 10de 488B45C8 		movq	-56(%rbp), %rax
 4767 10e2 4801D0   		addq	%rdx, %rax
 4768 10e5 C5FA1040 		vmovss	8(%rax), %xmm0
 4768      08
 4769 10ea C5FA5AC0 		vcvtss2sd	%xmm0, %xmm0, %xmm0
 4770 10ee C5F92E05 		vucomisd	.LC11(%rip), %xmm0
 4770      00000000 
 4771 10f6 0F86FE00 		jbe	.L184
 4771      0000
 253:costas2_impl.cc ****   			  d_phase -= CL_TWO_PI;
 4772              		.loc 22 253 0
GAS LISTING /tmp/ccvUPO8Q.s 			page 207


 4773 10fc 488B45C8 		movq	-56(%rbp), %rax
 4774 1100 488B00   		movq	(%rax), %rax
 4775 1103 4883E820 		subq	$32, %rax
 4776 1107 488B00   		movq	(%rax), %rax
 4777 110a 4889C2   		movq	%rax, %rdx
 4778 110d 488B45C8 		movq	-56(%rbp), %rax
 4779 1111 4801C2   		addq	%rax, %rdx
 4780 1114 488B45C8 		movq	-56(%rbp), %rax
 4781 1118 488B00   		movq	(%rax), %rax
 4782 111b 4883E820 		subq	$32, %rax
 4783 111f 488B00   		movq	(%rax), %rax
 4784 1122 4889C1   		movq	%rax, %rcx
 4785 1125 488B45C8 		movq	-56(%rbp), %rax
 4786 1129 4801C8   		addq	%rcx, %rax
 4787 112c C5FA1040 		vmovss	8(%rax), %xmm0
 4787      08
 4788 1131 C5FA5AC0 		vcvtss2sd	%xmm0, %xmm0, %xmm0
 4789 1135 C5FB100D 		vmovsd	.LC11(%rip), %xmm1
 4789      00000000 
 4790 113d C5FB5CC1 		vsubsd	%xmm1, %xmm0, %xmm0
 4791 1141 C5FB5AC0 		vcvtsd2ss	%xmm0, %xmm0, %xmm0
 4792 1145 C5FA1142 		vmovss	%xmm0, 8(%rdx)
 4792      08
 252:costas2_impl.cc ****   			while(d_phase>CL_TWO_PI) {
 4793              		.loc 22 252 0
 4794 114a EB81     		jmp	.L186
 4795              	.L200:
 254:costas2_impl.cc ****   			}
 255:costas2_impl.cc ****           }
 256:costas2_impl.cc ****           else if (d_phase < CL_MINUS_TWO_PI) {
 4796              		.loc 22 256 0
 4797 114c 488B45C8 		movq	-56(%rbp), %rax
 4798 1150 488B00   		movq	(%rax), %rax
 4799 1153 4883E820 		subq	$32, %rax
 4800 1157 488B00   		movq	(%rax), %rax
 4801 115a 4889C2   		movq	%rax, %rdx
 4802 115d 488B45C8 		movq	-56(%rbp), %rax
 4803 1161 4801D0   		addq	%rdx, %rax
 4804 1164 C5FA1040 		vmovss	8(%rax), %xmm0
 4804      08
 4805 1169 C5FA5AC0 		vcvtss2sd	%xmm0, %xmm0, %xmm0
 4806 116d C5FB100D 		vmovsd	.LC12(%rip), %xmm1
 4806      00000000 
 4807 1175 C5F92EC8 		vucomisd	%xmm0, %xmm1
 4808 1179 767F     		jbe	.L184
 4809              	.L189:
 257:costas2_impl.cc ****   			while(d_phase < CL_MINUS_TWO_PI) {
 4810              		.loc 22 257 0
 4811 117b 488B45C8 		movq	-56(%rbp), %rax
 4812 117f 488B00   		movq	(%rax), %rax
 4813 1182 4883E820 		subq	$32, %rax
 4814 1186 488B00   		movq	(%rax), %rax
 4815 1189 4889C2   		movq	%rax, %rdx
 4816 118c 488B45C8 		movq	-56(%rbp), %rax
 4817 1190 4801D0   		addq	%rdx, %rax
 4818 1193 C5FA1040 		vmovss	8(%rax), %xmm0
 4818      08
GAS LISTING /tmp/ccvUPO8Q.s 			page 208


 4819 1198 C5FA5AC0 		vcvtss2sd	%xmm0, %xmm0, %xmm0
 4820 119c C5FB100D 		vmovsd	.LC12(%rip), %xmm1
 4820      00000000 
 4821 11a4 C5F92EC8 		vucomisd	%xmm0, %xmm1
 4822 11a8 7650     		jbe	.L184
 258:costas2_impl.cc ****   			  d_phase += CL_TWO_PI;
 4823              		.loc 22 258 0
 4824 11aa 488B45C8 		movq	-56(%rbp), %rax
 4825 11ae 488B00   		movq	(%rax), %rax
 4826 11b1 4883E820 		subq	$32, %rax
 4827 11b5 488B00   		movq	(%rax), %rax
 4828 11b8 4889C2   		movq	%rax, %rdx
 4829 11bb 488B45C8 		movq	-56(%rbp), %rax
 4830 11bf 4801C2   		addq	%rax, %rdx
 4831 11c2 488B45C8 		movq	-56(%rbp), %rax
 4832 11c6 488B00   		movq	(%rax), %rax
 4833 11c9 4883E820 		subq	$32, %rax
 4834 11cd 488B00   		movq	(%rax), %rax
 4835 11d0 4889C1   		movq	%rax, %rcx
 4836 11d3 488B45C8 		movq	-56(%rbp), %rax
 4837 11d7 4801C8   		addq	%rcx, %rax
 4838 11da C5FA1040 		vmovss	8(%rax), %xmm0
 4838      08
 4839 11df C5FA5AC0 		vcvtss2sd	%xmm0, %xmm0, %xmm0
 4840 11e3 C5FB100D 		vmovsd	.LC11(%rip), %xmm1
 4840      00000000 
 4841 11eb C5FB58C1 		vaddsd	%xmm1, %xmm0, %xmm0
 4842 11ef C5FB5AC0 		vcvtsd2ss	%xmm0, %xmm0, %xmm0
 4843 11f3 C5FA1142 		vmovss	%xmm0, 8(%rdx)
 4843      08
 257:costas2_impl.cc ****   			while(d_phase < CL_MINUS_TWO_PI) {
 4844              		.loc 22 257 0
 4845 11f8 EB81     		jmp	.L189
 4846              	.L184:
 259:costas2_impl.cc ****   			}
 260:costas2_impl.cc ****           }
 261:costas2_impl.cc **** 
 262:costas2_impl.cc ****           //frequency_limit();
 263:costas2_impl.cc ****           if(d_freq > d_max_freq)
 4847              		.loc 22 263 0
 4848 11fa 488B45C8 		movq	-56(%rbp), %rax
 4849 11fe 488B00   		movq	(%rax), %rax
 4850 1201 4883E820 		subq	$32, %rax
 4851 1205 488B00   		movq	(%rax), %rax
 4852 1208 4889C2   		movq	%rax, %rdx
 4853 120b 488B45C8 		movq	-56(%rbp), %rax
 4854 120f 4801D0   		addq	%rdx, %rax
 4855 1212 C5FA1040 		vmovss	12(%rax), %xmm0
 4855      0C
 4856 1217 488B45C8 		movq	-56(%rbp), %rax
 4857 121b 488B00   		movq	(%rax), %rax
 4858 121e 4883E820 		subq	$32, %rax
 4859 1222 488B00   		movq	(%rax), %rax
 4860 1225 4889C2   		movq	%rax, %rdx
 4861 1228 488B45C8 		movq	-56(%rbp), %rax
 4862 122c 4801D0   		addq	%rdx, %rax
 4863 122f C5FA1048 		vmovss	16(%rax), %xmm1
GAS LISTING /tmp/ccvUPO8Q.s 			page 209


 4863      10
 4864 1234 C5F82EC1 		vucomiss	%xmm1, %xmm0
 4865 1238 763C     		jbe	.L201
 264:costas2_impl.cc ****             d_freq = d_max_freq;
 4866              		.loc 22 264 0
 4867 123a 488B45C8 		movq	-56(%rbp), %rax
 4868 123e 488B00   		movq	(%rax), %rax
 4869 1241 4883E820 		subq	$32, %rax
 4870 1245 488B00   		movq	(%rax), %rax
 4871 1248 4889C2   		movq	%rax, %rdx
 4872 124b 488B45C8 		movq	-56(%rbp), %rax
 4873 124f 4801C2   		addq	%rax, %rdx
 4874 1252 488B45C8 		movq	-56(%rbp), %rax
 4875 1256 488B00   		movq	(%rax), %rax
 4876 1259 4883E820 		subq	$32, %rax
 4877 125d 488B00   		movq	(%rax), %rax
 4878 1260 4889C1   		movq	%rax, %rcx
 4879 1263 488B45C8 		movq	-56(%rbp), %rax
 4880 1267 4801C8   		addq	%rcx, %rax
 4881 126a C5FA1040 		vmovss	16(%rax), %xmm0
 4881      10
 4882 126f C5FA1142 		vmovss	%xmm0, 12(%rdx)
 4882      0C
 4883 1274 EB7A     		jmp	.L192
 4884              	.L201:
 265:costas2_impl.cc ****           else if(d_freq < d_min_freq)
 4885              		.loc 22 265 0
 4886 1276 488B45C8 		movq	-56(%rbp), %rax
 4887 127a 488B00   		movq	(%rax), %rax
 4888 127d 4883E820 		subq	$32, %rax
 4889 1281 488B00   		movq	(%rax), %rax
 4890 1284 4889C2   		movq	%rax, %rdx
 4891 1287 488B45C8 		movq	-56(%rbp), %rax
 4892 128b 4801D0   		addq	%rdx, %rax
 4893 128e C5FA1048 		vmovss	12(%rax), %xmm1
 4893      0C
 4894 1293 488B45C8 		movq	-56(%rbp), %rax
 4895 1297 488B00   		movq	(%rax), %rax
 4896 129a 4883E820 		subq	$32, %rax
 4897 129e 488B00   		movq	(%rax), %rax
 4898 12a1 4889C2   		movq	%rax, %rdx
 4899 12a4 488B45C8 		movq	-56(%rbp), %rax
 4900 12a8 4801D0   		addq	%rdx, %rax
 4901 12ab C5FA1040 		vmovss	20(%rax), %xmm0
 4901      14
 4902 12b0 C5F82EC1 		vucomiss	%xmm1, %xmm0
 4903 12b4 763A     		jbe	.L192
 266:costas2_impl.cc ****             d_freq = d_min_freq;
 4904              		.loc 22 266 0
 4905 12b6 488B45C8 		movq	-56(%rbp), %rax
 4906 12ba 488B00   		movq	(%rax), %rax
 4907 12bd 4883E820 		subq	$32, %rax
 4908 12c1 488B00   		movq	(%rax), %rax
 4909 12c4 4889C2   		movq	%rax, %rdx
 4910 12c7 488B45C8 		movq	-56(%rbp), %rax
 4911 12cb 4801C2   		addq	%rax, %rdx
 4912 12ce 488B45C8 		movq	-56(%rbp), %rax
GAS LISTING /tmp/ccvUPO8Q.s 			page 210


 4913 12d2 488B00   		movq	(%rax), %rax
 4914 12d5 4883E820 		subq	$32, %rax
 4915 12d9 488B00   		movq	(%rax), %rax
 4916 12dc 4889C1   		movq	%rax, %rcx
 4917 12df 488B45C8 		movq	-56(%rbp), %rax
 4918 12e3 4801C8   		addq	%rcx, %rax
 4919 12e6 C5FA1040 		vmovss	20(%rax), %xmm0
 4919      14
 4920 12eb C5FA1142 		vmovss	%xmm0, 12(%rdx)
 4920      0C
 4921              	.L192:
 194:costas2_impl.cc ****           // nco_out = gr_expj(-d_phase);
 4922              		.loc 22 194 0 discriminator 2
 4923 12f0 8345FC01 		addl	$1, -4(%rbp)
 4924 12f4 E911FBFF 		jmp	.L194
 4924      FF
 4925              	.L181:
 267:costas2_impl.cc **** 
 268:costas2_impl.cc ****         /*
 269:costas2_impl.cc ****          * original code
 270:costas2_impl.cc **** 		nco_out = gr_expj(-d_phase);
 271:costas2_impl.cc **** 		optr[i] = iptr[i] * nco_out;
 272:costas2_impl.cc **** 
 273:costas2_impl.cc **** 		d_error = (*this.*d_phase_detector)(optr[i]);
 274:costas2_impl.cc **** 		d_error = gr::branchless_clip(d_error, 1.0);
 275:costas2_impl.cc **** 
 276:costas2_impl.cc **** 		advance_loop(d_error);
 277:costas2_impl.cc **** 		phase_wrap();
 278:costas2_impl.cc **** 		frequency_limit();
 279:costas2_impl.cc ****          */
 280:costas2_impl.cc **** 
 281:costas2_impl.cc ****         }
 282:costas2_impl.cc **** 
 283:costas2_impl.cc ****         return noutput_items;
 4926              		.loc 22 283 0
 4927 12f9 8B45C4   		movl	-60(%rbp), %eax
 284:costas2_impl.cc ****     }
 4928              		.loc 22 284 0
 4929 12fc C9       		leave
 4930              		.cfi_def_cfa 7, 8
 4931 12fd C3       		ret
 4932              		.cfi_endproc
 4933              	.LFE10978:
 4935              		.align 2
 4936              		.globl	_ZN2gr5lfast12costas2_impl4workEiRSt6vectorIPKvSaIS4_EERS2_IPvSaIS8_EE
 4938              	_ZN2gr5lfast12costas2_impl4workEiRSt6vectorIPKvSaIS4_EERS2_IPvSaIS8_EE:
 4939              	.LFB10979:
 285:costas2_impl.cc **** 
 286:costas2_impl.cc ****     int
 287:costas2_impl.cc ****     costas2_impl::work(int noutput_items,
 288:costas2_impl.cc ****         gr_vector_const_void_star &input_items,
 289:costas2_impl.cc ****         gr_vector_void_star &output_items)
 290:costas2_impl.cc ****     {
 4940              		.loc 22 290 0
 4941              		.cfi_startproc
 4942 12fe 55       		pushq	%rbp
 4943              		.cfi_def_cfa_offset 16
GAS LISTING /tmp/ccvUPO8Q.s 			page 211


 4944              		.cfi_offset 6, -16
 4945 12ff 4889E5   		movq	%rsp, %rbp
 4946              		.cfi_def_cfa_register 6
 4947 1302 4883EC50 		subq	$80, %rsp
 4948 1306 48897DC8 		movq	%rdi, -56(%rbp)
 4949 130a 8975C4   		movl	%esi, -60(%rbp)
 4950 130d 488955B8 		movq	%rdx, -72(%rbp)
 4951 1311 48894DB0 		movq	%rcx, -80(%rbp)
 291:costas2_impl.cc ****         // const gr_complex *iptr = (gr_complex *) input_items[0];
 292:costas2_impl.cc ****         // gr_complex *optr = (gr_complex *) output_items[0];
 293:costas2_impl.cc ****         const SComplex *iptr = (SComplex *) input_items[0];
 4952              		.loc 22 293 0
 4953 1315 488B45B8 		movq	-72(%rbp), %rax
 4954 1319 BE000000 		movl	$0, %esi
 4954      00
 4955 131e 4889C7   		movq	%rax, %rdi
 4956 1321 E8000000 		call	_ZNSt6vectorIPKvSaIS1_EEixEm
 4956      00
 4957 1326 488B00   		movq	(%rax), %rax
 4958 1329 488945F0 		movq	%rax, -16(%rbp)
 294:costas2_impl.cc ****         SComplex *optr = (SComplex *) output_items[0];
 4959              		.loc 22 294 0
 4960 132d 488B45B0 		movq	-80(%rbp), %rax
 4961 1331 BE000000 		movl	$0, %esi
 4961      00
 4962 1336 4889C7   		movq	%rax, %rdi
 4963 1339 E8000000 		call	_ZNSt6vectorIPvSaIS0_EEixEm
 4963      00
 4964 133e 488B00   		movq	(%rax), %rax
 4965 1341 488945E8 		movq	%rax, -24(%rbp)
 295:costas2_impl.cc ****         // gr_complex nco_out;
 296:costas2_impl.cc ****         float i_r,i_i,n_r,n_i,o_r,o_i;
 297:costas2_impl.cc ****         // float x1,x2;
 298:costas2_impl.cc ****         int i;
 299:costas2_impl.cc ****         // float angle_rad,sin,cos;
 300:costas2_impl.cc **** 
 301:costas2_impl.cc ****         // gr_complex nco_out;
 302:costas2_impl.cc **** 
 303:costas2_impl.cc ****         for(i = 0; i < noutput_items; i++) {
 4966              		.loc 22 303 0
 4967 1345 C745FC00 		movl	$0, -4(%rbp)
 4967      000000
 4968              	.L216:
 4969              		.loc 22 303 0 is_stmt 0 discriminator 1
 4970 134c 8B45FC   		movl	-4(%rbp), %eax
 4971 134f 3B45C4   		cmpl	-60(%rbp), %eax
 4972 1352 0F8DDF04 		jge	.L203
 4972      0000
 304:costas2_impl.cc ****           // nco_out = gr_expj(-d_phase);
 305:costas2_impl.cc ****       	  // returns this:  nco_out.real = n_r, nco_out.imag = n_i
 306:costas2_impl.cc ****          // Trig functions killing performance.  Tried a number of replacement options but no luck:
 307:costas2_impl.cc ****         	// gnuradio lookup functions - expensive with float_to_fixed in each iteration
 308:costas2_impl.cc ****         	// Tried rolling our own lookup tables - Same performance as straight trig
 309:costas2_impl.cc ****         	// Tried quadratic curve inline approximation - Tiny bit faster
 310:costas2_impl.cc ****        	 // gr::sincosf(-d_phase, &n_i, &n_r);
 311:costas2_impl.cc **** 			n_i = sinf(-d_phase);
 4973              		.loc 22 311 0 is_stmt 1
GAS LISTING /tmp/ccvUPO8Q.s 			page 212


 4974 1358 488B45C8 		movq	-56(%rbp), %rax
 4975 135c 488B00   		movq	(%rax), %rax
 4976 135f 4883E820 		subq	$32, %rax
 4977 1363 488B00   		movq	(%rax), %rax
 4978 1366 4889C2   		movq	%rax, %rdx
 4979 1369 488B45C8 		movq	-56(%rbp), %rax
 4980 136d 4801D0   		addq	%rdx, %rax
 4981 1370 C5FA1048 		vmovss	8(%rax), %xmm1
 4981      08
 4982 1375 C5FA1005 		vmovss	.LC10(%rip), %xmm0
 4982      00000000 
 4983 137d C5F857C1 		vxorps	%xmm1, %xmm0, %xmm0
 4984 1381 E8000000 		call	sinf@PLT
 4984      00
 4985 1386 C5F97EC0 		vmovd	%xmm0, %eax
 4986 138a 8945E4   		movl	%eax, -28(%rbp)
 312:costas2_impl.cc **** 			n_r = cosf(-d_phase);
 4987              		.loc 22 312 0
 4988 138d 488B45C8 		movq	-56(%rbp), %rax
 4989 1391 488B00   		movq	(%rax), %rax
 4990 1394 4883E820 		subq	$32, %rax
 4991 1398 488B00   		movq	(%rax), %rax
 4992 139b 4889C2   		movq	%rax, %rdx
 4993 139e 488B45C8 		movq	-56(%rbp), %rax
 4994 13a2 4801D0   		addq	%rdx, %rax
 4995 13a5 C5FA1048 		vmovss	8(%rax), %xmm1
 4995      08
 4996 13aa C5FA1005 		vmovss	.LC10(%rip), %xmm0
 4996      00000000 
 4997 13b2 C5F857C1 		vxorps	%xmm1, %xmm0, %xmm0
 4998 13b6 E8000000 		call	cosf@PLT
 4998      00
 4999 13bb C5F97EC0 		vmovd	%xmm0, %eax
 5000 13bf 8945E0   		movl	%eax, -32(%rbp)
 313:costas2_impl.cc **** 
 314:costas2_impl.cc ****           //optr[i] = iptr[i] * nco_out;
 315:costas2_impl.cc **** 
 316:costas2_impl.cc ****           // FMA stands for fused multiply-add operations where FMA(a,b,c)=(a*b)+c and it does it a
 317:costas2_impl.cc **** #if defined(__FMA__)
 318:costas2_impl.cc ****           o_r = __builtin_fmaf(iptr[i].real,n_r,-iptr[i].imag*n_i);
 5001              		.loc 22 318 0
 5002 13c2 8B45FC   		movl	-4(%rbp), %eax
 5003 13c5 4898     		cltq
 5004 13c7 488D14C5 		leaq	0(,%rax,8), %rdx
 5004      00000000 
 5005 13cf 488B45F0 		movq	-16(%rbp), %rax
 5006 13d3 4801D0   		addq	%rdx, %rax
 5007 13d6 C5FA1008 		vmovss	(%rax), %xmm1
 5008 13da 8B45FC   		movl	-4(%rbp), %eax
 5009 13dd 4898     		cltq
 5010 13df 488D14C5 		leaq	0(,%rax,8), %rdx
 5010      00000000 
 5011 13e7 488B45F0 		movq	-16(%rbp), %rax
 5012 13eb 4801D0   		addq	%rdx, %rax
 5013 13ee C5FA1050 		vmovss	4(%rax), %xmm2
 5013      04
 5014 13f3 C5FA1005 		vmovss	.LC10(%rip), %xmm0
GAS LISTING /tmp/ccvUPO8Q.s 			page 213


 5014      00000000 
 5015 13fb C5F857C2 		vxorps	%xmm2, %xmm0, %xmm0
 5016 13ff C5FA5945 		vmulss	-28(%rbp), %xmm0, %xmm0
 5016      E4
 5017 1404 C4E271B9 		vfmadd231ss	-32(%rbp), %xmm1, %xmm0
 5017      45E0
 5018 140a C5FA1145 		vmovss	%xmm0, -36(%rbp)
 5018      DC
 319:costas2_impl.cc ****           o_i = __builtin_fmaf(iptr[i].real,n_i,iptr[i].imag*n_r);
 5019              		.loc 22 319 0
 5020 140f 8B45FC   		movl	-4(%rbp), %eax
 5021 1412 4898     		cltq
 5022 1414 488D14C5 		leaq	0(,%rax,8), %rdx
 5022      00000000 
 5023 141c 488B45F0 		movq	-16(%rbp), %rax
 5024 1420 4801D0   		addq	%rdx, %rax
 5025 1423 C5FA1008 		vmovss	(%rax), %xmm1
 5026 1427 8B45FC   		movl	-4(%rbp), %eax
 5027 142a 4898     		cltq
 5028 142c 488D14C5 		leaq	0(,%rax,8), %rdx
 5028      00000000 
 5029 1434 488B45F0 		movq	-16(%rbp), %rax
 5030 1438 4801D0   		addq	%rdx, %rax
 5031 143b C5FA1040 		vmovss	4(%rax), %xmm0
 5031      04
 5032 1440 C5FA5945 		vmulss	-32(%rbp), %xmm0, %xmm0
 5032      E0
 5033 1445 C4E271B9 		vfmadd231ss	-28(%rbp), %xmm1, %xmm0
 5033      45E4
 5034 144b C5FA1145 		vmovss	%xmm0, -40(%rbp)
 5034      D8
 320:costas2_impl.cc **** #else
 321:costas2_impl.cc ****           i_r = iptr[i].real;
 322:costas2_impl.cc ****           i_i = iptr[i].imag;
 323:costas2_impl.cc ****           o_r = (i_r * n_r) - (i_i*n_i);
 324:costas2_impl.cc ****           o_i = (i_r * n_i) + (i_i * n_r);
 325:costas2_impl.cc **** #endif
 326:costas2_impl.cc **** 
 327:costas2_impl.cc ****           optr[i].real = o_r;
 5035              		.loc 22 327 0
 5036 1450 8B45FC   		movl	-4(%rbp), %eax
 5037 1453 4898     		cltq
 5038 1455 488D14C5 		leaq	0(,%rax,8), %rdx
 5038      00000000 
 5039 145d 488B45E8 		movq	-24(%rbp), %rax
 5040 1461 4801D0   		addq	%rdx, %rax
 5041 1464 C5FA1045 		vmovss	-36(%rbp), %xmm0
 5041      DC
 5042 1469 C5FA1100 		vmovss	%xmm0, (%rax)
 328:costas2_impl.cc ****           optr[i].imag = o_i;
 5043              		.loc 22 328 0
 5044 146d 8B45FC   		movl	-4(%rbp), %eax
 5045 1470 4898     		cltq
 5046 1472 488D14C5 		leaq	0(,%rax,8), %rdx
 5046      00000000 
 5047 147a 488B45E8 		movq	-24(%rbp), %rax
 5048 147e 4801D0   		addq	%rdx, %rax
GAS LISTING /tmp/ccvUPO8Q.s 			page 214


 5049 1481 C5FA1045 		vmovss	-40(%rbp), %xmm0
 5049      D8
 5050 1486 C5FA1140 		vmovss	%xmm0, 4(%rax)
 5050      04
 329:costas2_impl.cc **** 
 330:costas2_impl.cc ****           //d_error = (*this.*d_phase_detector)(optr[i]);
 331:costas2_impl.cc ****           // 2nd order in-place
 332:costas2_impl.cc ****           d_error = o_r*o_i;
 5051              		.loc 22 332 0
 5052 148b C5FA1045 		vmovss	-36(%rbp), %xmm0
 5052      DC
 5053 1490 C5FA5945 		vmulss	-40(%rbp), %xmm0, %xmm0
 5053      D8
 5054 1495 488B45C8 		movq	-56(%rbp), %rax
 5055 1499 C5FA1140 		vmovss	%xmm0, 12(%rax)
 5055      0C
 333:costas2_impl.cc **** 
 334:costas2_impl.cc ****           // d_error = gr::branchless_clip(d_error, 1.0);
 335:costas2_impl.cc ****           /*  Taken out for speed and consolidated
 336:costas2_impl.cc ****           x1 = fabsf(d_error+1);
 337:costas2_impl.cc ****           x2 = fabsf(d_error-1);
 338:costas2_impl.cc ****           x1 -= x2;
 339:costas2_impl.cc ****           d_error = 0.5*x1;
 340:costas2_impl.cc **** 		  */
 341:costas2_impl.cc **** 
 342:costas2_impl.cc ****           // d_error = 0.5 * (fabsf(d_error+1) - fabsf(d_error-1));
 343:costas2_impl.cc **** 
 344:costas2_impl.cc ****           // See http://stackoverflow.com/questions/23474796/is-there-a-fast-fabsf-replacement-for-
 345:costas2_impl.cc ****           // for some notes on fabs performance
 346:costas2_impl.cc ****           d_error = 0.5 * (std::abs(d_error+1) - std::abs(d_error-1));
 5056              		.loc 22 346 0
 5057 149e 488B45C8 		movq	-56(%rbp), %rax
 5058 14a2 C5FA1048 		vmovss	12(%rax), %xmm1
 5058      0C
 5059 14a7 C5FA1005 		vmovss	.LC5(%rip), %xmm0
 5059      00000000 
 5060 14af C5F258C0 		vaddss	%xmm0, %xmm1, %xmm0
 5061 14b3 E8000000 		call	_ZSt3absf
 5061      00
 5062 14b8 C5FA1145 		vmovss	%xmm0, -64(%rbp)
 5062      C0
 5063 14bd 488B45C8 		movq	-56(%rbp), %rax
 5064 14c1 C5FA1040 		vmovss	12(%rax), %xmm0
 5064      0C
 5065 14c6 C5FA100D 		vmovss	.LC5(%rip), %xmm1
 5065      00000000 
 5066 14ce C5FA5CC1 		vsubss	%xmm1, %xmm0, %xmm0
 5067 14d2 E8000000 		call	_ZSt3absf
 5067      00
 5068 14d7 C5FA1065 		vmovss	-64(%rbp), %xmm4
 5068      C0
 5069 14dc C5DA5CC0 		vsubss	%xmm0, %xmm4, %xmm0
 5070 14e0 C5FA100D 		vmovss	.LC3(%rip), %xmm1
 5070      00000000 
 5071 14e8 C5FA59C1 		vmulss	%xmm1, %xmm0, %xmm0
 5072 14ec 488B45C8 		movq	-56(%rbp), %rax
 5073 14f0 C5FA1140 		vmovss	%xmm0, 12(%rax)
GAS LISTING /tmp/ccvUPO8Q.s 			page 215


 5073      0C
 347:costas2_impl.cc **** 
 348:costas2_impl.cc **** 
 349:costas2_impl.cc ****           //advance_loop(d_error);
 350:costas2_impl.cc **** #if defined(__FMA__)
 351:costas2_impl.cc ****           d_freq = __builtin_fmaf(d_beta,d_error,d_freq);
 5074              		.loc 22 351 0
 5075 14f5 488B45C8 		movq	-56(%rbp), %rax
 5076 14f9 488B00   		movq	(%rax), %rax
 5077 14fc 4883E820 		subq	$32, %rax
 5078 1500 488B00   		movq	(%rax), %rax
 5079 1503 4889C2   		movq	%rax, %rdx
 5080 1506 488B45C8 		movq	-56(%rbp), %rax
 5081 150a 4801C2   		addq	%rax, %rdx
 5082 150d 488B45C8 		movq	-56(%rbp), %rax
 5083 1511 488B00   		movq	(%rax), %rax
 5084 1514 4883E820 		subq	$32, %rax
 5085 1518 488B00   		movq	(%rax), %rax
 5086 151b 4889C1   		movq	%rax, %rcx
 5087 151e 488B45C8 		movq	-56(%rbp), %rax
 5088 1522 4801C8   		addq	%rcx, %rax
 5089 1525 C5FA1050 		vmovss	36(%rax), %xmm2
 5089      24
 5090 152a 488B45C8 		movq	-56(%rbp), %rax
 5091 152e C5FA1048 		vmovss	12(%rax), %xmm1
 5091      0C
 5092 1533 488B45C8 		movq	-56(%rbp), %rax
 5093 1537 488B00   		movq	(%rax), %rax
 5094 153a 4883E820 		subq	$32, %rax
 5095 153e 488B00   		movq	(%rax), %rax
 5096 1541 4889C1   		movq	%rax, %rcx
 5097 1544 488B45C8 		movq	-56(%rbp), %rax
 5098 1548 4801C8   		addq	%rcx, %rax
 5099 154b C5FA1040 		vmovss	12(%rax), %xmm0
 5099      0C
 5100 1550 C4E269B9 		vfmadd231ss	%xmm1, %xmm2, %xmm0
 5100      C1
 5101 1555 C5FA1142 		vmovss	%xmm0, 12(%rdx)
 5101      0C
 352:costas2_impl.cc **** #else
 353:costas2_impl.cc ****           d_freq = d_beta * d_error + d_freq;
 354:costas2_impl.cc **** #endif
 355:costas2_impl.cc ****           //d_freq = __builtin_fmaf(d_beta,d_error,d_freq);
 356:costas2_impl.cc ****           // This line is causing one of the greatest performance drops!  100 Msps -> 33 Msps!
 357:costas2_impl.cc **** #if defined(__FMA__)
 358:costas2_impl.cc ****           d_phase += __builtin_fmaf(d_alpha,d_error,d_freq);
 5102              		.loc 22 358 0
 5103 155a 488B45C8 		movq	-56(%rbp), %rax
 5104 155e 488B00   		movq	(%rax), %rax
 5105 1561 4883E820 		subq	$32, %rax
 5106 1565 488B00   		movq	(%rax), %rax
 5107 1568 4889C2   		movq	%rax, %rdx
 5108 156b 488B45C8 		movq	-56(%rbp), %rax
 5109 156f 4801C2   		addq	%rax, %rdx
 5110 1572 488B45C8 		movq	-56(%rbp), %rax
 5111 1576 488B00   		movq	(%rax), %rax
 5112 1579 4883E820 		subq	$32, %rax
GAS LISTING /tmp/ccvUPO8Q.s 			page 216


 5113 157d 488B00   		movq	(%rax), %rax
 5114 1580 4889C1   		movq	%rax, %rcx
 5115 1583 488B45C8 		movq	-56(%rbp), %rax
 5116 1587 4801C8   		addq	%rcx, %rax
 5117 158a C5FA1048 		vmovss	8(%rax), %xmm1
 5117      08
 5118 158f 488B45C8 		movq	-56(%rbp), %rax
 5119 1593 488B00   		movq	(%rax), %rax
 5120 1596 4883E820 		subq	$32, %rax
 5121 159a 488B00   		movq	(%rax), %rax
 5122 159d 4889C1   		movq	%rax, %rcx
 5123 15a0 488B45C8 		movq	-56(%rbp), %rax
 5124 15a4 4801C8   		addq	%rcx, %rax
 5125 15a7 C5FA1058 		vmovss	32(%rax), %xmm3
 5125      20
 5126 15ac 488B45C8 		movq	-56(%rbp), %rax
 5127 15b0 C5FA1050 		vmovss	12(%rax), %xmm2
 5127      0C
 5128 15b5 488B45C8 		movq	-56(%rbp), %rax
 5129 15b9 488B00   		movq	(%rax), %rax
 5130 15bc 4883E820 		subq	$32, %rax
 5131 15c0 488B00   		movq	(%rax), %rax
 5132 15c3 4889C1   		movq	%rax, %rcx
 5133 15c6 488B45C8 		movq	-56(%rbp), %rax
 5134 15ca 4801C8   		addq	%rcx, %rax
 5135 15cd C5FA1040 		vmovss	12(%rax), %xmm0
 5135      0C
 5136 15d2 C4E261B9 		vfmadd231ss	%xmm2, %xmm3, %xmm0
 5136      C2
 5137 15d7 C5F258C0 		vaddss	%xmm0, %xmm1, %xmm0
 5138 15db C5FA1142 		vmovss	%xmm0, 8(%rdx)
 5138      08
 359:costas2_impl.cc **** #else
 360:costas2_impl.cc ****           d_phase = d_alpha * d_error + d_phase + d_freq;
 361:costas2_impl.cc **** #endif
 362:costas2_impl.cc ****           // d_phase = d_phase + d_freq + d_alpha * d_error;
 363:costas2_impl.cc ****           // d_phase = d_phase + __builtin_fmaf(d_alpha,d_error,d_freq);
 364:costas2_impl.cc **** 
 365:costas2_impl.cc ****           //phase_wrap();
 366:costas2_impl.cc ****           if (d_phase > CL_TWO_PI) {
 5139              		.loc 22 366 0
 5140 15e0 488B45C8 		movq	-56(%rbp), %rax
 5141 15e4 488B00   		movq	(%rax), %rax
 5142 15e7 4883E820 		subq	$32, %rax
 5143 15eb 488B00   		movq	(%rax), %rax
 5144 15ee 4889C2   		movq	%rax, %rdx
 5145 15f1 488B45C8 		movq	-56(%rbp), %rax
 5146 15f5 4801D0   		addq	%rdx, %rax
 5147 15f8 C5FA1040 		vmovss	8(%rax), %xmm0
 5147      08
 5148 15fd C5FA5AC0 		vcvtss2sd	%xmm0, %xmm0, %xmm0
 5149 1601 C5F92E05 		vucomisd	.LC11(%rip), %xmm0
 5149      00000000 
 5150 1609 767F     		jbe	.L222
 5151              	.L208:
 367:costas2_impl.cc ****   			while(d_phase>CL_TWO_PI) {
 5152              		.loc 22 367 0
GAS LISTING /tmp/ccvUPO8Q.s 			page 217


 5153 160b 488B45C8 		movq	-56(%rbp), %rax
 5154 160f 488B00   		movq	(%rax), %rax
 5155 1612 4883E820 		subq	$32, %rax
 5156 1616 488B00   		movq	(%rax), %rax
 5157 1619 4889C2   		movq	%rax, %rdx
 5158 161c 488B45C8 		movq	-56(%rbp), %rax
 5159 1620 4801D0   		addq	%rdx, %rax
 5160 1623 C5FA1040 		vmovss	8(%rax), %xmm0
 5160      08
 5161 1628 C5FA5AC0 		vcvtss2sd	%xmm0, %xmm0, %xmm0
 5162 162c C5F92E05 		vucomisd	.LC11(%rip), %xmm0
 5162      00000000 
 5163 1634 0F86FE00 		jbe	.L206
 5163      0000
 368:costas2_impl.cc ****   			  d_phase -= CL_TWO_PI;
 5164              		.loc 22 368 0
 5165 163a 488B45C8 		movq	-56(%rbp), %rax
 5166 163e 488B00   		movq	(%rax), %rax
 5167 1641 4883E820 		subq	$32, %rax
 5168 1645 488B00   		movq	(%rax), %rax
 5169 1648 4889C2   		movq	%rax, %rdx
 5170 164b 488B45C8 		movq	-56(%rbp), %rax
 5171 164f 4801C2   		addq	%rax, %rdx
 5172 1652 488B45C8 		movq	-56(%rbp), %rax
 5173 1656 488B00   		movq	(%rax), %rax
 5174 1659 4883E820 		subq	$32, %rax
 5175 165d 488B00   		movq	(%rax), %rax
 5176 1660 4889C1   		movq	%rax, %rcx
 5177 1663 488B45C8 		movq	-56(%rbp), %rax
 5178 1667 4801C8   		addq	%rcx, %rax
 5179 166a C5FA1040 		vmovss	8(%rax), %xmm0
 5179      08
 5180 166f C5FA5AC0 		vcvtss2sd	%xmm0, %xmm0, %xmm0
 5181 1673 C5FB100D 		vmovsd	.LC11(%rip), %xmm1
 5181      00000000 
 5182 167b C5FB5CC1 		vsubsd	%xmm1, %xmm0, %xmm0
 5183 167f C5FB5AC0 		vcvtsd2ss	%xmm0, %xmm0, %xmm0
 5184 1683 C5FA1142 		vmovss	%xmm0, 8(%rdx)
 5184      08
 367:costas2_impl.cc ****   			while(d_phase>CL_TWO_PI) {
 5185              		.loc 22 367 0
 5186 1688 EB81     		jmp	.L208
 5187              	.L222:
 369:costas2_impl.cc ****   			}
 370:costas2_impl.cc ****           }
 371:costas2_impl.cc ****           else if (d_phase < CL_MINUS_TWO_PI) {
 5188              		.loc 22 371 0
 5189 168a 488B45C8 		movq	-56(%rbp), %rax
 5190 168e 488B00   		movq	(%rax), %rax
 5191 1691 4883E820 		subq	$32, %rax
 5192 1695 488B00   		movq	(%rax), %rax
 5193 1698 4889C2   		movq	%rax, %rdx
 5194 169b 488B45C8 		movq	-56(%rbp), %rax
 5195 169f 4801D0   		addq	%rdx, %rax
 5196 16a2 C5FA1040 		vmovss	8(%rax), %xmm0
 5196      08
 5197 16a7 C5FA5AC0 		vcvtss2sd	%xmm0, %xmm0, %xmm0
GAS LISTING /tmp/ccvUPO8Q.s 			page 218


 5198 16ab C5FB100D 		vmovsd	.LC12(%rip), %xmm1
 5198      00000000 
 5199 16b3 C5F92EC8 		vucomisd	%xmm0, %xmm1
 5200 16b7 767F     		jbe	.L206
 5201              	.L211:
 372:costas2_impl.cc ****   			while(d_phase < CL_MINUS_TWO_PI) {
 5202              		.loc 22 372 0
 5203 16b9 488B45C8 		movq	-56(%rbp), %rax
 5204 16bd 488B00   		movq	(%rax), %rax
 5205 16c0 4883E820 		subq	$32, %rax
 5206 16c4 488B00   		movq	(%rax), %rax
 5207 16c7 4889C2   		movq	%rax, %rdx
 5208 16ca 488B45C8 		movq	-56(%rbp), %rax
 5209 16ce 4801D0   		addq	%rdx, %rax
 5210 16d1 C5FA1040 		vmovss	8(%rax), %xmm0
 5210      08
 5211 16d6 C5FA5AC0 		vcvtss2sd	%xmm0, %xmm0, %xmm0
 5212 16da C5FB100D 		vmovsd	.LC12(%rip), %xmm1
 5212      00000000 
 5213 16e2 C5F92EC8 		vucomisd	%xmm0, %xmm1
 5214 16e6 7650     		jbe	.L206
 373:costas2_impl.cc ****   			  d_phase += CL_TWO_PI;
 5215              		.loc 22 373 0
 5216 16e8 488B45C8 		movq	-56(%rbp), %rax
 5217 16ec 488B00   		movq	(%rax), %rax
 5218 16ef 4883E820 		subq	$32, %rax
 5219 16f3 488B00   		movq	(%rax), %rax
 5220 16f6 4889C2   		movq	%rax, %rdx
 5221 16f9 488B45C8 		movq	-56(%rbp), %rax
 5222 16fd 4801C2   		addq	%rax, %rdx
 5223 1700 488B45C8 		movq	-56(%rbp), %rax
 5224 1704 488B00   		movq	(%rax), %rax
 5225 1707 4883E820 		subq	$32, %rax
 5226 170b 488B00   		movq	(%rax), %rax
 5227 170e 4889C1   		movq	%rax, %rcx
 5228 1711 488B45C8 		movq	-56(%rbp), %rax
 5229 1715 4801C8   		addq	%rcx, %rax
 5230 1718 C5FA1040 		vmovss	8(%rax), %xmm0
 5230      08
 5231 171d C5FA5AC0 		vcvtss2sd	%xmm0, %xmm0, %xmm0
 5232 1721 C5FB100D 		vmovsd	.LC11(%rip), %xmm1
 5232      00000000 
 5233 1729 C5FB58C1 		vaddsd	%xmm1, %xmm0, %xmm0
 5234 172d C5FB5AC0 		vcvtsd2ss	%xmm0, %xmm0, %xmm0
 5235 1731 C5FA1142 		vmovss	%xmm0, 8(%rdx)
 5235      08
 372:costas2_impl.cc ****   			while(d_phase < CL_MINUS_TWO_PI) {
 5236              		.loc 22 372 0
 5237 1736 EB81     		jmp	.L211
 5238              	.L206:
 374:costas2_impl.cc ****   			}
 375:costas2_impl.cc ****           }
 376:costas2_impl.cc **** 
 377:costas2_impl.cc ****           //frequency_limit();
 378:costas2_impl.cc ****           if(d_freq > d_max_freq)
 5239              		.loc 22 378 0
 5240 1738 488B45C8 		movq	-56(%rbp), %rax
GAS LISTING /tmp/ccvUPO8Q.s 			page 219


 5241 173c 488B00   		movq	(%rax), %rax
 5242 173f 4883E820 		subq	$32, %rax
 5243 1743 488B00   		movq	(%rax), %rax
 5244 1746 4889C2   		movq	%rax, %rdx
 5245 1749 488B45C8 		movq	-56(%rbp), %rax
 5246 174d 4801D0   		addq	%rdx, %rax
 5247 1750 C5FA1040 		vmovss	12(%rax), %xmm0
 5247      0C
 5248 1755 488B45C8 		movq	-56(%rbp), %rax
 5249 1759 488B00   		movq	(%rax), %rax
 5250 175c 4883E820 		subq	$32, %rax
 5251 1760 488B00   		movq	(%rax), %rax
 5252 1763 4889C2   		movq	%rax, %rdx
 5253 1766 488B45C8 		movq	-56(%rbp), %rax
 5254 176a 4801D0   		addq	%rdx, %rax
 5255 176d C5FA1048 		vmovss	16(%rax), %xmm1
 5255      10
 5256 1772 C5F82EC1 		vucomiss	%xmm1, %xmm0
 5257 1776 763C     		jbe	.L223
 379:costas2_impl.cc ****             d_freq = d_max_freq;
 5258              		.loc 22 379 0
 5259 1778 488B45C8 		movq	-56(%rbp), %rax
 5260 177c 488B00   		movq	(%rax), %rax
 5261 177f 4883E820 		subq	$32, %rax
 5262 1783 488B00   		movq	(%rax), %rax
 5263 1786 4889C2   		movq	%rax, %rdx
 5264 1789 488B45C8 		movq	-56(%rbp), %rax
 5265 178d 4801C2   		addq	%rax, %rdx
 5266 1790 488B45C8 		movq	-56(%rbp), %rax
 5267 1794 488B00   		movq	(%rax), %rax
 5268 1797 4883E820 		subq	$32, %rax
 5269 179b 488B00   		movq	(%rax), %rax
 5270 179e 4889C1   		movq	%rax, %rcx
 5271 17a1 488B45C8 		movq	-56(%rbp), %rax
 5272 17a5 4801C8   		addq	%rcx, %rax
 5273 17a8 C5FA1040 		vmovss	16(%rax), %xmm0
 5273      10
 5274 17ad C5FA1142 		vmovss	%xmm0, 12(%rdx)
 5274      0C
 5275 17b2 EB7A     		jmp	.L214
 5276              	.L223:
 380:costas2_impl.cc ****           else if(d_freq < d_min_freq)
 5277              		.loc 22 380 0
 5278 17b4 488B45C8 		movq	-56(%rbp), %rax
 5279 17b8 488B00   		movq	(%rax), %rax
 5280 17bb 4883E820 		subq	$32, %rax
 5281 17bf 488B00   		movq	(%rax), %rax
 5282 17c2 4889C2   		movq	%rax, %rdx
 5283 17c5 488B45C8 		movq	-56(%rbp), %rax
 5284 17c9 4801D0   		addq	%rdx, %rax
 5285 17cc C5FA1048 		vmovss	12(%rax), %xmm1
 5285      0C
 5286 17d1 488B45C8 		movq	-56(%rbp), %rax
 5287 17d5 488B00   		movq	(%rax), %rax
 5288 17d8 4883E820 		subq	$32, %rax
 5289 17dc 488B00   		movq	(%rax), %rax
 5290 17df 4889C2   		movq	%rax, %rdx
GAS LISTING /tmp/ccvUPO8Q.s 			page 220


 5291 17e2 488B45C8 		movq	-56(%rbp), %rax
 5292 17e6 4801D0   		addq	%rdx, %rax
 5293 17e9 C5FA1040 		vmovss	20(%rax), %xmm0
 5293      14
 5294 17ee C5F82EC1 		vucomiss	%xmm1, %xmm0
 5295 17f2 763A     		jbe	.L214
 381:costas2_impl.cc ****             d_freq = d_min_freq;
 5296              		.loc 22 381 0
 5297 17f4 488B45C8 		movq	-56(%rbp), %rax
 5298 17f8 488B00   		movq	(%rax), %rax
 5299 17fb 4883E820 		subq	$32, %rax
 5300 17ff 488B00   		movq	(%rax), %rax
 5301 1802 4889C2   		movq	%rax, %rdx
 5302 1805 488B45C8 		movq	-56(%rbp), %rax
 5303 1809 4801C2   		addq	%rax, %rdx
 5304 180c 488B45C8 		movq	-56(%rbp), %rax
 5305 1810 488B00   		movq	(%rax), %rax
 5306 1813 4883E820 		subq	$32, %rax
 5307 1817 488B00   		movq	(%rax), %rax
 5308 181a 4889C1   		movq	%rax, %rcx
 5309 181d 488B45C8 		movq	-56(%rbp), %rax
 5310 1821 4801C8   		addq	%rcx, %rax
 5311 1824 C5FA1040 		vmovss	20(%rax), %xmm0
 5311      14
 5312 1829 C5FA1142 		vmovss	%xmm0, 12(%rdx)
 5312      0C
 5313              	.L214:
 303:costas2_impl.cc ****           // nco_out = gr_expj(-d_phase);
 5314              		.loc 22 303 0 discriminator 2
 5315 182e 8345FC01 		addl	$1, -4(%rbp)
 5316 1832 E915FBFF 		jmp	.L216
 5316      FF
 5317              	.L203:
 382:costas2_impl.cc **** 
 383:costas2_impl.cc ****         /*
 384:costas2_impl.cc ****          * original code
 385:costas2_impl.cc **** 		nco_out = gr_expj(-d_phase);
 386:costas2_impl.cc **** 		optr[i] = iptr[i] * nco_out;
 387:costas2_impl.cc **** 
 388:costas2_impl.cc **** 		d_error = (*this.*d_phase_detector)(optr[i]);
 389:costas2_impl.cc **** 		d_error = gr::branchless_clip(d_error, 1.0);
 390:costas2_impl.cc **** 
 391:costas2_impl.cc **** 		advance_loop(d_error);
 392:costas2_impl.cc **** 		phase_wrap();
 393:costas2_impl.cc **** 		frequency_limit();
 394:costas2_impl.cc ****          */
 395:costas2_impl.cc **** 
 396:costas2_impl.cc ****         }
 397:costas2_impl.cc **** 
 398:costas2_impl.cc ****         return noutput_items;
 5318              		.loc 22 398 0
 5319 1837 8B45C4   		movl	-60(%rbp), %eax
 399:costas2_impl.cc ****     }
 5320              		.loc 22 399 0
 5321 183a C9       		leave
 5322              		.cfi_def_cfa 7, 8
 5323 183b C3       		ret
GAS LISTING /tmp/ccvUPO8Q.s 			page 221


 5324              		.cfi_endproc
 5325              	.LFE10979:
 5327              		.set	.LTHUNK10,_ZN2gr5lfast12costas2_impl4workEiRSt6vectorIPKvSaIS4_EERS2_IPvSaIS8_EE
 5328              		.globl	_ZTv0_n176_N2gr5lfast12costas2_impl4workEiRSt6vectorIPKvSaIS4_EERS2_IPvSaIS8_EE
 5330              	_ZTv0_n176_N2gr5lfast12costas2_impl4workEiRSt6vectorIPKvSaIS4_EERS2_IPvSaIS8_EE:
 5331              	.LFB15695:
  47:costas2_impl.h **** 
  48:costas2_impl.h ****       float error() const;
  49:costas2_impl.h **** 
  50:costas2_impl.h ****       // void printSineError();
  51:costas2_impl.h **** 
  52:costas2_impl.h ****       void handle_set_noise(pmt::pmt_t msg);
  53:costas2_impl.h **** 
  54:costas2_impl.h ****       void setup_rpc();
  55:costas2_impl.h **** 
  56:costas2_impl.h ****       // Where all the action really happens
  57:costas2_impl.h ****       int work(int noutput_items,
 5332              		.loc 19 57 0
 5333              		.cfi_startproc
 5334 183c 4C8B17   		movq	(%rdi), %r10
 5335 183f 4903BA50 		addq	-176(%r10), %rdi
 5335      FFFFFF
 5336 1846 E9B3FAFF 		jmp	.LTHUNK10
 5336      FF
 5337              		.cfi_endproc
 5338              	.LFE15695:
 5340 184b 90       		.align 2
 5341              		.globl	_ZN2gr5lfast12costas2_impl9setup_rpcEv
 5343              	_ZN2gr5lfast12costas2_impl9setup_rpcEv:
 5344              	.LFB10980:
 400:costas2_impl.cc **** 
 401:costas2_impl.cc ****     void
 402:costas2_impl.cc ****     costas2_impl::setup_rpc()
 403:costas2_impl.cc ****     {
 5345              		.loc 22 403 0
 5346              		.cfi_startproc
 5347 184c 55       		pushq	%rbp
 5348              		.cfi_def_cfa_offset 16
 5349              		.cfi_offset 6, -16
 5350 184d 4889E5   		movq	%rsp, %rbp
 5351              		.cfi_def_cfa_register 6
 5352 1850 48897DF8 		movq	%rdi, -8(%rbp)
 404:costas2_impl.cc **** #ifdef GR_CTRLPORT
 405:costas2_impl.cc ****       // Getters
 406:costas2_impl.cc ****         rpcbasic_sptr(new rpcbasic_register_get<costas2_cc, float>(
 407:costas2_impl.cc **** 	      alias(), "error",
 408:costas2_impl.cc **** 	      &costas_loop_cc::error,
 409:costas2_impl.cc **** 	      pmt::mp(-2.0f), pmt::mp(2.0f), pmt::mp(0.0f),
 410:costas2_impl.cc **** 	      "", "Error signal of loop", RPC_PRIVLVL_MIN,
 411:costas2_impl.cc ****             DISPTIME | DISPOPTSTRIP)));
 412:costas2_impl.cc ****       add_rpc_variable(
 413:costas2_impl.cc ****           rpcbasic_sptr(new rpcbasic_register_get<control_loop, float>(
 414:costas2_impl.cc **** 	      alias(), "loop_bw",
 415:costas2_impl.cc **** 	      &control_loop::get_loop_bandwidth,
 416:costas2_impl.cc **** 	      pmt::mp(0.0f), pmt::mp(2.0f), pmt::mp(0.0f),
 417:costas2_impl.cc **** 	      "", "Loop bandwidth", RPC_PRIVLVL_MIN,
 418:costas2_impl.cc ****               DISPTIME | DISPOPTSTRIP)));
GAS LISTING /tmp/ccvUPO8Q.s 			page 222


 419:costas2_impl.cc **** 
 420:costas2_impl.cc ****       // Setters
 421:costas2_impl.cc ****       add_rpc_variable(
 422:costas2_impl.cc ****           rpcbasic_sptr(new rpcbasic_register_set<control_loop, float>(
 423:costas2_impl.cc **** 	      alias(), "loop_bw",
 424:costas2_impl.cc **** 	      &control_loop::set_loop_bandwidth,
 425:costas2_impl.cc **** 	      pmt::mp(0.0f), pmt::mp(1.0f), pmt::mp(0.0f),
 426:costas2_impl.cc **** 	      "", "Loop bandwidth",
 427:costas2_impl.cc **** 	      RPC_PRIVLVL_MIN, DISPNULL)));
 428:costas2_impl.cc **** #endif /* GR_CTRLPORT */
 429:costas2_impl.cc ****     }
 5353              		.loc 22 429 0
 5354 1854 90       		nop
 5355 1855 5D       		popq	%rbp
 5356              		.cfi_def_cfa 7, 8
 5357 1856 C3       		ret
 5358              		.cfi_endproc
 5359              	.LFE10980:
 5361              		.set	.LTHUNK11,_ZN2gr5lfast12costas2_impl9setup_rpcEv
 5362              		.globl	_ZTv0_n88_N2gr5lfast12costas2_impl9setup_rpcEv
 5364              	_ZTv0_n88_N2gr5lfast12costas2_impl9setup_rpcEv:
 5365              	.LFB15696:
  54:costas2_impl.h **** 
 5366              		.loc 19 54 0
 5367              		.cfi_startproc
 5368 1857 4C8B17   		movq	(%rdi), %r10
 5369 185a 49037AA8 		addq	-88(%r10), %rdi
 5370 185e EBEC     		jmp	.LTHUNK11
 5371              		.cfi_endproc
 5372              	.LFE15696:
 5374              		.section	.text._ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEEC2Ev,"axG",@p
 5375              		.align 2
 5376              		.weak	_ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEEC2Ev
 5378              	_ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEEC2Ev:
 5379              	.LFB11186:
  27:/usr/include/boost/exception/exception.hpp ****                 px_(0)
 5380              		.loc 3 27 0
 5381              		.cfi_startproc
 5382 0000 55       		pushq	%rbp
 5383              		.cfi_def_cfa_offset 16
 5384              		.cfi_offset 6, -16
 5385 0001 4889E5   		movq	%rsp, %rbp
 5386              		.cfi_def_cfa_register 6
 5387 0004 48897DF8 		movq	%rdi, -8(%rbp)
 5388              	.LBB51:
  28:/usr/include/boost/exception/exception.hpp ****                 {
 5389              		.loc 3 28 0
 5390 0008 488B45F8 		movq	-8(%rbp), %rax
 5391 000c 48C70000 		movq	$0, (%rax)
 5391      000000
 5392              	.LBE51:
  30:/usr/include/boost/exception/exception.hpp **** 
 5393              		.loc 3 30 0
 5394 0013 90       		nop
 5395 0014 5D       		popq	%rbp
 5396              		.cfi_def_cfa 7, 8
 5397 0015 C3       		ret
GAS LISTING /tmp/ccvUPO8Q.s 			page 223


 5398              		.cfi_endproc
 5399              	.LFE11186:
 5401              		.weak	_ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEEC1Ev
 5402              		.set	_ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEEC1Ev,_ZN5boost16excepti
 5403              		.section	.text._ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEED2Ev,"axG",@p
 5404              		.align 2
 5405              		.weak	_ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEED2Ev
 5407              	_ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEED2Ev:
 5408              	.LFB11189:
  32:/usr/include/boost/exception/exception.hpp ****                 {
 5409              		.loc 3 32 0
 5410              		.cfi_startproc
 5411              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 5412              		.cfi_lsda 0x1b,.LLSDA11189
 5413 0000 55       		pushq	%rbp
 5414              		.cfi_def_cfa_offset 16
 5415              		.cfi_offset 6, -16
 5416 0001 4889E5   		movq	%rsp, %rbp
 5417              		.cfi_def_cfa_register 6
 5418 0004 4883EC10 		subq	$16, %rsp
 5419 0008 48897DF8 		movq	%rdi, -8(%rbp)
 5420              	.LBB52:
  34:/usr/include/boost/exception/exception.hpp ****                 }
 5421              		.loc 3 34 0
 5422 000c 488B45F8 		movq	-8(%rbp), %rax
 5423 0010 4889C7   		movq	%rax, %rdi
 5424 0013 E8000000 		call	_ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEE7releaseEv
 5424      00
 5425              	.LBE52:
  35:/usr/include/boost/exception/exception.hpp **** 
 5426              		.loc 3 35 0
 5427 0018 90       		nop
 5428 0019 C9       		leave
 5429              		.cfi_def_cfa 7, 8
 5430 001a C3       		ret
 5431              		.cfi_endproc
 5432              	.LFE11189:
 5433              		.section	.gcc_except_table
 5434              	.LLSDA11189:
 5435 0077 FF       		.byte	0xff
 5436 0078 FF       		.byte	0xff
 5437 0079 01       		.byte	0x1
 5438 007a 00       		.uleb128 .LLSDACSE11189-.LLSDACSB11189
 5439              	.LLSDACSB11189:
 5440              	.LLSDACSE11189:
 5441              		.section	.text._ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEED2Ev,"axG",@p
 5443              		.weak	_ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEED1Ev
 5444              		.set	_ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEED1Ev,_ZN5boost16excepti
 5445              		.section	.text._ZNK5boost16exception_detail12refcount_ptrINS0_20error_info_containerEE3getEv,"axG"
 5446              		.align 2
 5447              		.weak	_ZNK5boost16exception_detail12refcount_ptrINS0_20error_info_containerEE3getEv
 5449              	_ZNK5boost16exception_detail12refcount_ptrINS0_20error_info_containerEE3getEv:
 5450              	.LFB11191:
  59:/usr/include/boost/exception/exception.hpp ****                 {
 5451              		.loc 3 59 0
 5452              		.cfi_startproc
 5453 0000 55       		pushq	%rbp
GAS LISTING /tmp/ccvUPO8Q.s 			page 224


 5454              		.cfi_def_cfa_offset 16
 5455              		.cfi_offset 6, -16
 5456 0001 4889E5   		movq	%rsp, %rbp
 5457              		.cfi_def_cfa_register 6
 5458 0004 48897DF8 		movq	%rdi, -8(%rbp)
  61:/usr/include/boost/exception/exception.hpp ****                 }
 5459              		.loc 3 61 0
 5460 0008 488B45F8 		movq	-8(%rbp), %rax
 5461 000c 488B00   		movq	(%rax), %rax
  62:/usr/include/boost/exception/exception.hpp **** 
 5462              		.loc 3 62 0
 5463 000f 5D       		popq	%rbp
 5464              		.cfi_def_cfa 7, 8
 5465 0010 C3       		ret
 5466              		.cfi_endproc
 5467              	.LFE11191:
 5469              		.section	.text._ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEEaSERKS3_,"axG
 5470              		.align 2
 5471              		.weak	_ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEEaSERKS3_
 5473              	_ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEEaSERKS3_:
 5474              	.LFB11192:
  44:/usr/include/boost/exception/exception.hpp ****                 {
 5475              		.loc 3 44 0
 5476              		.cfi_startproc
 5477 0000 55       		pushq	%rbp
 5478              		.cfi_def_cfa_offset 16
 5479              		.cfi_offset 6, -16
 5480 0001 4889E5   		movq	%rsp, %rbp
 5481              		.cfi_def_cfa_register 6
 5482 0004 4883EC10 		subq	$16, %rsp
 5483 0008 48897DF8 		movq	%rdi, -8(%rbp)
 5484 000c 488975F0 		movq	%rsi, -16(%rbp)
  46:/usr/include/boost/exception/exception.hpp ****                 return *this;
 5485              		.loc 3 46 0
 5486 0010 488B45F0 		movq	-16(%rbp), %rax
 5487 0014 488B10   		movq	(%rax), %rdx
 5488 0017 488B45F8 		movq	-8(%rbp), %rax
 5489 001b 4889D6   		movq	%rdx, %rsi
 5490 001e 4889C7   		movq	%rax, %rdi
 5491 0021 E8000000 		call	_ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEE5adoptEPS2_
 5491      00
  47:/usr/include/boost/exception/exception.hpp ****                 }
 5492              		.loc 3 47 0
 5493 0026 488B45F8 		movq	-8(%rbp), %rax
  48:/usr/include/boost/exception/exception.hpp **** 
 5494              		.loc 3 48 0
 5495 002a C9       		leave
 5496              		.cfi_def_cfa 7, 8
 5497 002b C3       		ret
 5498              		.cfi_endproc
 5499              	.LFE11192:
 5501              		.section	.text._ZN5boost16exception_detail10clone_baseC2ERKS1_,"axG",@progbits,_ZN5boost16exceptio
 5502              		.align 2
 5503              		.weak	_ZN5boost16exception_detail10clone_baseC2ERKS1_
 5505              	_ZN5boost16exception_detail10clone_baseC2ERKS1_:
 5506              	.LFB11199:
 415:/usr/include/boost/exception/exception.hpp ****             {
GAS LISTING /tmp/ccvUPO8Q.s 			page 225


 5507              		.loc 3 415 0
 5508              		.cfi_startproc
 5509 0000 55       		pushq	%rbp
 5510              		.cfi_def_cfa_offset 16
 5511              		.cfi_offset 6, -16
 5512 0001 4889E5   		movq	%rsp, %rbp
 5513              		.cfi_def_cfa_register 6
 5514 0004 48897DF8 		movq	%rdi, -8(%rbp)
 5515 0008 488975F0 		movq	%rsi, -16(%rbp)
 5516              	.LBB53:
 415:/usr/include/boost/exception/exception.hpp ****             {
 5517              		.loc 3 415 0
 5518 000c 488D1500 		leaq	16+_ZTVN5boost16exception_detail10clone_baseE(%rip), %rdx
 5518      000000
 5519 0013 488B45F8 		movq	-8(%rbp), %rax
 5520 0017 488910   		movq	%rdx, (%rax)
 5521              	.LBE53:
 5522 001a 90       		nop
 5523 001b 5D       		popq	%rbp
 5524              		.cfi_def_cfa 7, 8
 5525 001c C3       		ret
 5526              		.cfi_endproc
 5527              	.LFE11199:
 5529              		.weak	_ZN5boost16exception_detail10clone_baseC1ERKS1_
 5530              		.set	_ZN5boost16exception_detail10clone_baseC1ERKS1_,_ZN5boost16exception_detail10clone_baseC2ERKS
 5531              		.section	.text._ZN5boost13intrusive_ptrIN3pmt8pmt_baseEED2Ev,"axG",@progbits,_ZN5boost13intrusive_
 5532              		.align 2
 5533              		.weak	_ZN5boost13intrusive_ptrIN3pmt8pmt_baseEED2Ev
 5535              	_ZN5boost13intrusive_ptrIN3pmt8pmt_baseEED2Ev:
 5536              	.LFB11237:
 5537              		.file 25 "/usr/include/boost/smart_ptr/intrusive_ptr.hpp"
   1:/usr/include/boost/smart_ptr/intrusive_ptr.hpp **** #ifndef BOOST_SMART_PTR_INTRUSIVE_PTR_HPP_INCLUDED
   2:/usr/include/boost/smart_ptr/intrusive_ptr.hpp **** #define BOOST_SMART_PTR_INTRUSIVE_PTR_HPP_INCLUDED
   3:/usr/include/boost/smart_ptr/intrusive_ptr.hpp **** 
   4:/usr/include/boost/smart_ptr/intrusive_ptr.hpp **** //
   5:/usr/include/boost/smart_ptr/intrusive_ptr.hpp **** //  intrusive_ptr.hpp
   6:/usr/include/boost/smart_ptr/intrusive_ptr.hpp **** //
   7:/usr/include/boost/smart_ptr/intrusive_ptr.hpp **** //  Copyright (c) 2001, 2002 Peter Dimov
   8:/usr/include/boost/smart_ptr/intrusive_ptr.hpp **** //
   9:/usr/include/boost/smart_ptr/intrusive_ptr.hpp **** // Distributed under the Boost Software License, Version 1.0. (See
  10:/usr/include/boost/smart_ptr/intrusive_ptr.hpp **** // accompanying file LICENSE_1_0.txt or copy at
  11:/usr/include/boost/smart_ptr/intrusive_ptr.hpp **** // http://www.boost.org/LICENSE_1_0.txt)
  12:/usr/include/boost/smart_ptr/intrusive_ptr.hpp **** //
  13:/usr/include/boost/smart_ptr/intrusive_ptr.hpp **** //  See http://www.boost.org/libs/smart_ptr/intrusive_ptr.html for documentation.
  14:/usr/include/boost/smart_ptr/intrusive_ptr.hpp **** //
  15:/usr/include/boost/smart_ptr/intrusive_ptr.hpp **** 
  16:/usr/include/boost/smart_ptr/intrusive_ptr.hpp **** #include <boost/config.hpp>
  17:/usr/include/boost/smart_ptr/intrusive_ptr.hpp **** 
  18:/usr/include/boost/smart_ptr/intrusive_ptr.hpp **** #include <boost/assert.hpp>
  19:/usr/include/boost/smart_ptr/intrusive_ptr.hpp **** #include <boost/detail/workaround.hpp>
  20:/usr/include/boost/smart_ptr/intrusive_ptr.hpp **** #include <boost/smart_ptr/detail/sp_convertible.hpp>
  21:/usr/include/boost/smart_ptr/intrusive_ptr.hpp **** #include <boost/smart_ptr/detail/sp_nullptr_t.hpp>
  22:/usr/include/boost/smart_ptr/intrusive_ptr.hpp **** 
  23:/usr/include/boost/smart_ptr/intrusive_ptr.hpp **** #include <boost/config/no_tr1/functional.hpp>           // for std::less
  24:/usr/include/boost/smart_ptr/intrusive_ptr.hpp **** 
  25:/usr/include/boost/smart_ptr/intrusive_ptr.hpp **** #if !defined(BOOST_NO_IOSTREAM)
  26:/usr/include/boost/smart_ptr/intrusive_ptr.hpp **** #if !defined(BOOST_NO_IOSFWD)
GAS LISTING /tmp/ccvUPO8Q.s 			page 226


  27:/usr/include/boost/smart_ptr/intrusive_ptr.hpp **** #include <iosfwd>               // for std::basic_ostream
  28:/usr/include/boost/smart_ptr/intrusive_ptr.hpp **** #else
  29:/usr/include/boost/smart_ptr/intrusive_ptr.hpp **** #include <ostream>
  30:/usr/include/boost/smart_ptr/intrusive_ptr.hpp **** #endif
  31:/usr/include/boost/smart_ptr/intrusive_ptr.hpp **** #endif
  32:/usr/include/boost/smart_ptr/intrusive_ptr.hpp **** 
  33:/usr/include/boost/smart_ptr/intrusive_ptr.hpp **** 
  34:/usr/include/boost/smart_ptr/intrusive_ptr.hpp **** namespace boost
  35:/usr/include/boost/smart_ptr/intrusive_ptr.hpp **** {
  36:/usr/include/boost/smart_ptr/intrusive_ptr.hpp **** 
  37:/usr/include/boost/smart_ptr/intrusive_ptr.hpp **** //
  38:/usr/include/boost/smart_ptr/intrusive_ptr.hpp **** //  intrusive_ptr
  39:/usr/include/boost/smart_ptr/intrusive_ptr.hpp **** //
  40:/usr/include/boost/smart_ptr/intrusive_ptr.hpp **** //  A smart pointer that uses intrusive reference counting.
  41:/usr/include/boost/smart_ptr/intrusive_ptr.hpp **** //
  42:/usr/include/boost/smart_ptr/intrusive_ptr.hpp **** //  Relies on unqualified calls to
  43:/usr/include/boost/smart_ptr/intrusive_ptr.hpp **** //  
  44:/usr/include/boost/smart_ptr/intrusive_ptr.hpp **** //      void intrusive_ptr_add_ref(T * p);
  45:/usr/include/boost/smart_ptr/intrusive_ptr.hpp **** //      void intrusive_ptr_release(T * p);
  46:/usr/include/boost/smart_ptr/intrusive_ptr.hpp **** //
  47:/usr/include/boost/smart_ptr/intrusive_ptr.hpp **** //          (p != 0)
  48:/usr/include/boost/smart_ptr/intrusive_ptr.hpp **** //
  49:/usr/include/boost/smart_ptr/intrusive_ptr.hpp **** //  The object is responsible for destroying itself.
  50:/usr/include/boost/smart_ptr/intrusive_ptr.hpp **** //
  51:/usr/include/boost/smart_ptr/intrusive_ptr.hpp **** 
  52:/usr/include/boost/smart_ptr/intrusive_ptr.hpp **** template<class T> class intrusive_ptr
  53:/usr/include/boost/smart_ptr/intrusive_ptr.hpp **** {
  54:/usr/include/boost/smart_ptr/intrusive_ptr.hpp **** private:
  55:/usr/include/boost/smart_ptr/intrusive_ptr.hpp **** 
  56:/usr/include/boost/smart_ptr/intrusive_ptr.hpp ****     typedef intrusive_ptr this_type;
  57:/usr/include/boost/smart_ptr/intrusive_ptr.hpp **** 
  58:/usr/include/boost/smart_ptr/intrusive_ptr.hpp **** public:
  59:/usr/include/boost/smart_ptr/intrusive_ptr.hpp **** 
  60:/usr/include/boost/smart_ptr/intrusive_ptr.hpp ****     typedef T element_type;
  61:/usr/include/boost/smart_ptr/intrusive_ptr.hpp **** 
  62:/usr/include/boost/smart_ptr/intrusive_ptr.hpp ****     BOOST_CONSTEXPR intrusive_ptr() BOOST_NOEXCEPT : px( 0 )
  63:/usr/include/boost/smart_ptr/intrusive_ptr.hpp ****     {
  64:/usr/include/boost/smart_ptr/intrusive_ptr.hpp ****     }
  65:/usr/include/boost/smart_ptr/intrusive_ptr.hpp **** 
  66:/usr/include/boost/smart_ptr/intrusive_ptr.hpp ****     intrusive_ptr( T * p, bool add_ref = true ): px( p )
  67:/usr/include/boost/smart_ptr/intrusive_ptr.hpp ****     {
  68:/usr/include/boost/smart_ptr/intrusive_ptr.hpp ****         if( px != 0 && add_ref ) intrusive_ptr_add_ref( px );
  69:/usr/include/boost/smart_ptr/intrusive_ptr.hpp ****     }
  70:/usr/include/boost/smart_ptr/intrusive_ptr.hpp **** 
  71:/usr/include/boost/smart_ptr/intrusive_ptr.hpp **** #if !defined(BOOST_NO_MEMBER_TEMPLATES) || defined(BOOST_MSVC6_MEMBER_TEMPLATES)
  72:/usr/include/boost/smart_ptr/intrusive_ptr.hpp **** 
  73:/usr/include/boost/smart_ptr/intrusive_ptr.hpp ****     template<class U>
  74:/usr/include/boost/smart_ptr/intrusive_ptr.hpp **** #if !defined( BOOST_SP_NO_SP_CONVERTIBLE )
  75:/usr/include/boost/smart_ptr/intrusive_ptr.hpp **** 
  76:/usr/include/boost/smart_ptr/intrusive_ptr.hpp ****     intrusive_ptr( intrusive_ptr<U> const & rhs, typename boost::detail::sp_enable_if_convertible<U
  77:/usr/include/boost/smart_ptr/intrusive_ptr.hpp **** 
  78:/usr/include/boost/smart_ptr/intrusive_ptr.hpp **** #else
  79:/usr/include/boost/smart_ptr/intrusive_ptr.hpp **** 
  80:/usr/include/boost/smart_ptr/intrusive_ptr.hpp ****     intrusive_ptr( intrusive_ptr<U> const & rhs )
  81:/usr/include/boost/smart_ptr/intrusive_ptr.hpp **** 
  82:/usr/include/boost/smart_ptr/intrusive_ptr.hpp **** #endif
  83:/usr/include/boost/smart_ptr/intrusive_ptr.hpp ****     : px( rhs.get() )
GAS LISTING /tmp/ccvUPO8Q.s 			page 227


  84:/usr/include/boost/smart_ptr/intrusive_ptr.hpp ****     {
  85:/usr/include/boost/smart_ptr/intrusive_ptr.hpp ****         if( px != 0 ) intrusive_ptr_add_ref( px );
  86:/usr/include/boost/smart_ptr/intrusive_ptr.hpp ****     }
  87:/usr/include/boost/smart_ptr/intrusive_ptr.hpp **** 
  88:/usr/include/boost/smart_ptr/intrusive_ptr.hpp **** #endif
  89:/usr/include/boost/smart_ptr/intrusive_ptr.hpp **** 
  90:/usr/include/boost/smart_ptr/intrusive_ptr.hpp ****     intrusive_ptr(intrusive_ptr const & rhs): px( rhs.px )
  91:/usr/include/boost/smart_ptr/intrusive_ptr.hpp ****     {
  92:/usr/include/boost/smart_ptr/intrusive_ptr.hpp ****         if( px != 0 ) intrusive_ptr_add_ref( px );
  93:/usr/include/boost/smart_ptr/intrusive_ptr.hpp ****     }
  94:/usr/include/boost/smart_ptr/intrusive_ptr.hpp **** 
  95:/usr/include/boost/smart_ptr/intrusive_ptr.hpp ****     ~intrusive_ptr()
 5538              		.loc 25 95 0
 5539              		.cfi_startproc
 5540              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 5541              		.cfi_lsda 0x1b,.LLSDA11237
 5542 0000 55       		pushq	%rbp
 5543              		.cfi_def_cfa_offset 16
 5544              		.cfi_offset 6, -16
 5545 0001 4889E5   		movq	%rsp, %rbp
 5546              		.cfi_def_cfa_register 6
 5547 0004 4883EC10 		subq	$16, %rsp
 5548 0008 48897DF8 		movq	%rdi, -8(%rbp)
 5549              	.LBB54:
  96:/usr/include/boost/smart_ptr/intrusive_ptr.hpp ****     {
  97:/usr/include/boost/smart_ptr/intrusive_ptr.hpp ****         if( px != 0 ) intrusive_ptr_release( px );
 5550              		.loc 25 97 0
 5551 000c 488B45F8 		movq	-8(%rbp), %rax
 5552 0010 488B00   		movq	(%rax), %rax
 5553 0013 4885C0   		testq	%rax, %rax
 5554 0016 740F     		je	.L234
 5555              		.loc 25 97 0 is_stmt 0 discriminator 1
 5556 0018 488B45F8 		movq	-8(%rbp), %rax
 5557 001c 488B00   		movq	(%rax), %rax
 5558 001f 4889C7   		movq	%rax, %rdi
 5559 0022 E8000000 		call	_ZN3pmt21intrusive_ptr_releaseEPNS_8pmt_baseE@PLT
 5559      00
 5560              	.L234:
 5561              	.LBE54:
  98:/usr/include/boost/smart_ptr/intrusive_ptr.hpp ****     }
 5562              		.loc 25 98 0 is_stmt 1
 5563 0027 90       		nop
 5564 0028 C9       		leave
 5565              		.cfi_def_cfa 7, 8
 5566 0029 C3       		ret
 5567              		.cfi_endproc
 5568              	.LFE11237:
 5569              		.section	.gcc_except_table
 5570              	.LLSDA11237:
 5571 007b FF       		.byte	0xff
 5572 007c FF       		.byte	0xff
 5573 007d 01       		.byte	0x1
 5574 007e 00       		.uleb128 .LLSDACSE11237-.LLSDACSB11237
 5575              	.LLSDACSB11237:
 5576              	.LLSDACSE11237:
 5577              		.section	.text._ZN5boost13intrusive_ptrIN3pmt8pmt_baseEED2Ev,"axG",@progbits,_ZN5boost13intrusive_
 5579              		.weak	_ZN5boost13intrusive_ptrIN3pmt8pmt_baseEED1Ev
GAS LISTING /tmp/ccvUPO8Q.s 			page 228


 5580              		.set	_ZN5boost13intrusive_ptrIN3pmt8pmt_baseEED1Ev,_ZN5boost13intrusive_ptrIN3pmt8pmt_baseEED2Ev
 5581              		.section	.text._ZN5boost13intrusive_ptrIN3pmt8pmt_baseEEC2EOS3_,"axG",@progbits,_ZN5boost13intrusi
 5582              		.align 2
 5583              		.weak	_ZN5boost13intrusive_ptrIN3pmt8pmt_baseEEC2EOS3_
 5585              	_ZN5boost13intrusive_ptrIN3pmt8pmt_baseEEC2EOS3_:
 5586              	.LFB11240:
  99:/usr/include/boost/smart_ptr/intrusive_ptr.hpp **** 
 100:/usr/include/boost/smart_ptr/intrusive_ptr.hpp **** #if !defined(BOOST_NO_MEMBER_TEMPLATES) || defined(BOOST_MSVC6_MEMBER_TEMPLATES)
 101:/usr/include/boost/smart_ptr/intrusive_ptr.hpp **** 
 102:/usr/include/boost/smart_ptr/intrusive_ptr.hpp ****     template<class U> intrusive_ptr & operator=(intrusive_ptr<U> const & rhs)
 103:/usr/include/boost/smart_ptr/intrusive_ptr.hpp ****     {
 104:/usr/include/boost/smart_ptr/intrusive_ptr.hpp ****         this_type(rhs).swap(*this);
 105:/usr/include/boost/smart_ptr/intrusive_ptr.hpp ****         return *this;
 106:/usr/include/boost/smart_ptr/intrusive_ptr.hpp ****     }
 107:/usr/include/boost/smart_ptr/intrusive_ptr.hpp **** 
 108:/usr/include/boost/smart_ptr/intrusive_ptr.hpp **** #endif
 109:/usr/include/boost/smart_ptr/intrusive_ptr.hpp **** 
 110:/usr/include/boost/smart_ptr/intrusive_ptr.hpp **** // Move support
 111:/usr/include/boost/smart_ptr/intrusive_ptr.hpp **** 
 112:/usr/include/boost/smart_ptr/intrusive_ptr.hpp **** #if !defined( BOOST_NO_CXX11_RVALUE_REFERENCES )
 113:/usr/include/boost/smart_ptr/intrusive_ptr.hpp **** 
 114:/usr/include/boost/smart_ptr/intrusive_ptr.hpp ****     intrusive_ptr(intrusive_ptr && rhs) BOOST_NOEXCEPT : px( rhs.px )
 5587              		.loc 25 114 0
 5588              		.cfi_startproc
 5589 0000 55       		pushq	%rbp
 5590              		.cfi_def_cfa_offset 16
 5591              		.cfi_offset 6, -16
 5592 0001 4889E5   		movq	%rsp, %rbp
 5593              		.cfi_def_cfa_register 6
 5594 0004 48897DF8 		movq	%rdi, -8(%rbp)
 5595 0008 488975F0 		movq	%rsi, -16(%rbp)
 5596              	.LBB55:
 5597              		.loc 25 114 0
 5598 000c 488B45F0 		movq	-16(%rbp), %rax
 5599 0010 488B10   		movq	(%rax), %rdx
 5600 0013 488B45F8 		movq	-8(%rbp), %rax
 5601 0017 488910   		movq	%rdx, (%rax)
 115:/usr/include/boost/smart_ptr/intrusive_ptr.hpp ****     {
 116:/usr/include/boost/smart_ptr/intrusive_ptr.hpp ****         rhs.px = 0;
 5602              		.loc 25 116 0
 5603 001a 488B45F0 		movq	-16(%rbp), %rax
 5604 001e 48C70000 		movq	$0, (%rax)
 5604      000000
 5605              	.LBE55:
 117:/usr/include/boost/smart_ptr/intrusive_ptr.hpp ****     }
 5606              		.loc 25 117 0
 5607 0025 90       		nop
 5608 0026 5D       		popq	%rbp
 5609              		.cfi_def_cfa 7, 8
 5610 0027 C3       		ret
 5611              		.cfi_endproc
 5612              	.LFE11240:
 5614              		.weak	_ZN5boost13intrusive_ptrIN3pmt8pmt_baseEEC1EOS3_
 5615              		.set	_ZN5boost13intrusive_ptrIN3pmt8pmt_baseEEC1EOS3_,_ZN5boost13intrusive_ptrIN3pmt8pmt_baseEEC2E
 5616              		.section	.text._ZNK5boost13intrusive_ptrIN3pmt8pmt_baseEE3getEv,"axG",@progbits,_ZNK5boost13intrus
 5617              		.align 2
 5618              		.weak	_ZNK5boost13intrusive_ptrIN3pmt8pmt_baseEE3getEv
GAS LISTING /tmp/ccvUPO8Q.s 			page 229


 5620              	_ZNK5boost13intrusive_ptrIN3pmt8pmt_baseEE3getEv:
 5621              	.LFB11242:
 118:/usr/include/boost/smart_ptr/intrusive_ptr.hpp **** 
 119:/usr/include/boost/smart_ptr/intrusive_ptr.hpp ****     intrusive_ptr & operator=(intrusive_ptr && rhs) BOOST_NOEXCEPT
 120:/usr/include/boost/smart_ptr/intrusive_ptr.hpp ****     {
 121:/usr/include/boost/smart_ptr/intrusive_ptr.hpp ****         this_type( static_cast< intrusive_ptr && >( rhs ) ).swap(*this);
 122:/usr/include/boost/smart_ptr/intrusive_ptr.hpp ****         return *this;
 123:/usr/include/boost/smart_ptr/intrusive_ptr.hpp ****     }
 124:/usr/include/boost/smart_ptr/intrusive_ptr.hpp **** 
 125:/usr/include/boost/smart_ptr/intrusive_ptr.hpp ****     template<class U> friend class intrusive_ptr;
 126:/usr/include/boost/smart_ptr/intrusive_ptr.hpp **** 
 127:/usr/include/boost/smart_ptr/intrusive_ptr.hpp ****     template<class U>
 128:/usr/include/boost/smart_ptr/intrusive_ptr.hpp **** #if !defined( BOOST_SP_NO_SP_CONVERTIBLE )
 129:/usr/include/boost/smart_ptr/intrusive_ptr.hpp **** 
 130:/usr/include/boost/smart_ptr/intrusive_ptr.hpp ****     intrusive_ptr(intrusive_ptr<U> && rhs, typename boost::detail::sp_enable_if_convertible<U,T>::t
 131:/usr/include/boost/smart_ptr/intrusive_ptr.hpp **** 
 132:/usr/include/boost/smart_ptr/intrusive_ptr.hpp **** #else
 133:/usr/include/boost/smart_ptr/intrusive_ptr.hpp **** 
 134:/usr/include/boost/smart_ptr/intrusive_ptr.hpp ****     intrusive_ptr(intrusive_ptr<U> && rhs)
 135:/usr/include/boost/smart_ptr/intrusive_ptr.hpp **** 
 136:/usr/include/boost/smart_ptr/intrusive_ptr.hpp **** #endif        
 137:/usr/include/boost/smart_ptr/intrusive_ptr.hpp ****     : px( rhs.px )
 138:/usr/include/boost/smart_ptr/intrusive_ptr.hpp ****     {
 139:/usr/include/boost/smart_ptr/intrusive_ptr.hpp ****         rhs.px = 0;
 140:/usr/include/boost/smart_ptr/intrusive_ptr.hpp ****     }
 141:/usr/include/boost/smart_ptr/intrusive_ptr.hpp **** 
 142:/usr/include/boost/smart_ptr/intrusive_ptr.hpp ****     template<class U>
 143:/usr/include/boost/smart_ptr/intrusive_ptr.hpp ****     intrusive_ptr & operator=(intrusive_ptr<U> && rhs) BOOST_NOEXCEPT
 144:/usr/include/boost/smart_ptr/intrusive_ptr.hpp ****     {
 145:/usr/include/boost/smart_ptr/intrusive_ptr.hpp ****         this_type( static_cast< intrusive_ptr<U> && >( rhs ) ).swap(*this);
 146:/usr/include/boost/smart_ptr/intrusive_ptr.hpp ****         return *this;
 147:/usr/include/boost/smart_ptr/intrusive_ptr.hpp ****     }
 148:/usr/include/boost/smart_ptr/intrusive_ptr.hpp **** 
 149:/usr/include/boost/smart_ptr/intrusive_ptr.hpp **** #endif
 150:/usr/include/boost/smart_ptr/intrusive_ptr.hpp **** 
 151:/usr/include/boost/smart_ptr/intrusive_ptr.hpp ****     intrusive_ptr & operator=(intrusive_ptr const & rhs)
 152:/usr/include/boost/smart_ptr/intrusive_ptr.hpp ****     {
 153:/usr/include/boost/smart_ptr/intrusive_ptr.hpp ****         this_type(rhs).swap(*this);
 154:/usr/include/boost/smart_ptr/intrusive_ptr.hpp ****         return *this;
 155:/usr/include/boost/smart_ptr/intrusive_ptr.hpp ****     }
 156:/usr/include/boost/smart_ptr/intrusive_ptr.hpp **** 
 157:/usr/include/boost/smart_ptr/intrusive_ptr.hpp ****     intrusive_ptr & operator=(T * rhs)
 158:/usr/include/boost/smart_ptr/intrusive_ptr.hpp ****     {
 159:/usr/include/boost/smart_ptr/intrusive_ptr.hpp ****         this_type(rhs).swap(*this);
 160:/usr/include/boost/smart_ptr/intrusive_ptr.hpp ****         return *this;
 161:/usr/include/boost/smart_ptr/intrusive_ptr.hpp ****     }
 162:/usr/include/boost/smart_ptr/intrusive_ptr.hpp **** 
 163:/usr/include/boost/smart_ptr/intrusive_ptr.hpp ****     void reset() BOOST_NOEXCEPT
 164:/usr/include/boost/smart_ptr/intrusive_ptr.hpp ****     {
 165:/usr/include/boost/smart_ptr/intrusive_ptr.hpp ****         this_type().swap( *this );
 166:/usr/include/boost/smart_ptr/intrusive_ptr.hpp ****     }
 167:/usr/include/boost/smart_ptr/intrusive_ptr.hpp **** 
 168:/usr/include/boost/smart_ptr/intrusive_ptr.hpp ****     void reset( T * rhs )
 169:/usr/include/boost/smart_ptr/intrusive_ptr.hpp ****     {
 170:/usr/include/boost/smart_ptr/intrusive_ptr.hpp ****         this_type( rhs ).swap( *this );
 171:/usr/include/boost/smart_ptr/intrusive_ptr.hpp ****     }
 172:/usr/include/boost/smart_ptr/intrusive_ptr.hpp **** 
GAS LISTING /tmp/ccvUPO8Q.s 			page 230


 173:/usr/include/boost/smart_ptr/intrusive_ptr.hpp ****     void reset( T * rhs, bool add_ref )
 174:/usr/include/boost/smart_ptr/intrusive_ptr.hpp ****     {
 175:/usr/include/boost/smart_ptr/intrusive_ptr.hpp ****         this_type( rhs, add_ref ).swap( *this );
 176:/usr/include/boost/smart_ptr/intrusive_ptr.hpp ****     }
 177:/usr/include/boost/smart_ptr/intrusive_ptr.hpp **** 
 178:/usr/include/boost/smart_ptr/intrusive_ptr.hpp ****     T * get() const BOOST_NOEXCEPT
 5622              		.loc 25 178 0
 5623              		.cfi_startproc
 5624 0000 55       		pushq	%rbp
 5625              		.cfi_def_cfa_offset 16
 5626              		.cfi_offset 6, -16
 5627 0001 4889E5   		movq	%rsp, %rbp
 5628              		.cfi_def_cfa_register 6
 5629 0004 48897DF8 		movq	%rdi, -8(%rbp)
 179:/usr/include/boost/smart_ptr/intrusive_ptr.hpp ****     {
 180:/usr/include/boost/smart_ptr/intrusive_ptr.hpp ****         return px;
 5630              		.loc 25 180 0
 5631 0008 488B45F8 		movq	-8(%rbp), %rax
 5632 000c 488B00   		movq	(%rax), %rax
 181:/usr/include/boost/smart_ptr/intrusive_ptr.hpp ****     }
 5633              		.loc 25 181 0
 5634 000f 5D       		popq	%rbp
 5635              		.cfi_def_cfa 7, 8
 5636 0010 C3       		ret
 5637              		.cfi_endproc
 5638              	.LFE11242:
 5640              		.section	.text._ZNSt3mapIN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS0_8functionIFvS4_EEENS2_10compa
 5641              		.align 2
 5642              		.weak	_ZNSt3mapIN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS0_8functionIFvS4_EEENS2_10comparatorESaI
 5644              	_ZNSt3mapIN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS0_8functionIFvS4_EEENS2_10comparatorESaISt4pair
 5645              	.LFB11670:
 5646              		.file 26 "/usr/include/c++/6/bits/stl_map.h"
   1:/usr/include/c++/6/bits/stl_map.h **** // Map implementation -*- C++ -*-
   2:/usr/include/c++/6/bits/stl_map.h **** 
   3:/usr/include/c++/6/bits/stl_map.h **** // Copyright (C) 2001-2016 Free Software Foundation, Inc.
   4:/usr/include/c++/6/bits/stl_map.h **** //
   5:/usr/include/c++/6/bits/stl_map.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/6/bits/stl_map.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/6/bits/stl_map.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/6/bits/stl_map.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/6/bits/stl_map.h **** // any later version.
  10:/usr/include/c++/6/bits/stl_map.h **** 
  11:/usr/include/c++/6/bits/stl_map.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/6/bits/stl_map.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/6/bits/stl_map.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/6/bits/stl_map.h **** // GNU General Public License for more details.
  15:/usr/include/c++/6/bits/stl_map.h **** 
  16:/usr/include/c++/6/bits/stl_map.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/6/bits/stl_map.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/6/bits/stl_map.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/6/bits/stl_map.h **** 
  20:/usr/include/c++/6/bits/stl_map.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/6/bits/stl_map.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/6/bits/stl_map.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/6/bits/stl_map.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/6/bits/stl_map.h **** 
  25:/usr/include/c++/6/bits/stl_map.h **** /*
GAS LISTING /tmp/ccvUPO8Q.s 			page 231


  26:/usr/include/c++/6/bits/stl_map.h ****  *
  27:/usr/include/c++/6/bits/stl_map.h ****  * Copyright (c) 1994
  28:/usr/include/c++/6/bits/stl_map.h ****  * Hewlett-Packard Company
  29:/usr/include/c++/6/bits/stl_map.h ****  *
  30:/usr/include/c++/6/bits/stl_map.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:/usr/include/c++/6/bits/stl_map.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:/usr/include/c++/6/bits/stl_map.h ****  * provided that the above copyright notice appear in all copies and
  33:/usr/include/c++/6/bits/stl_map.h ****  * that both that copyright notice and this permission notice appear
  34:/usr/include/c++/6/bits/stl_map.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:/usr/include/c++/6/bits/stl_map.h ****  * representations about the suitability of this software for any
  36:/usr/include/c++/6/bits/stl_map.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:/usr/include/c++/6/bits/stl_map.h ****  *
  38:/usr/include/c++/6/bits/stl_map.h ****  *
  39:/usr/include/c++/6/bits/stl_map.h ****  * Copyright (c) 1996,1997
  40:/usr/include/c++/6/bits/stl_map.h ****  * Silicon Graphics Computer Systems, Inc.
  41:/usr/include/c++/6/bits/stl_map.h ****  *
  42:/usr/include/c++/6/bits/stl_map.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:/usr/include/c++/6/bits/stl_map.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:/usr/include/c++/6/bits/stl_map.h ****  * provided that the above copyright notice appear in all copies and
  45:/usr/include/c++/6/bits/stl_map.h ****  * that both that copyright notice and this permission notice appear
  46:/usr/include/c++/6/bits/stl_map.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:/usr/include/c++/6/bits/stl_map.h ****  * representations about the suitability of this software for any
  48:/usr/include/c++/6/bits/stl_map.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:/usr/include/c++/6/bits/stl_map.h ****  */
  50:/usr/include/c++/6/bits/stl_map.h **** 
  51:/usr/include/c++/6/bits/stl_map.h **** /** @file bits/stl_map.h
  52:/usr/include/c++/6/bits/stl_map.h ****  *  This is an internal header file, included by other library headers.
  53:/usr/include/c++/6/bits/stl_map.h ****  *  Do not attempt to use it directly. @headername{map}
  54:/usr/include/c++/6/bits/stl_map.h ****  */
  55:/usr/include/c++/6/bits/stl_map.h **** 
  56:/usr/include/c++/6/bits/stl_map.h **** #ifndef _STL_MAP_H
  57:/usr/include/c++/6/bits/stl_map.h **** #define _STL_MAP_H 1
  58:/usr/include/c++/6/bits/stl_map.h **** 
  59:/usr/include/c++/6/bits/stl_map.h **** #include <bits/functexcept.h>
  60:/usr/include/c++/6/bits/stl_map.h **** #include <bits/concept_check.h>
  61:/usr/include/c++/6/bits/stl_map.h **** #if __cplusplus >= 201103L
  62:/usr/include/c++/6/bits/stl_map.h **** #include <initializer_list>
  63:/usr/include/c++/6/bits/stl_map.h **** #include <tuple>
  64:/usr/include/c++/6/bits/stl_map.h **** #endif
  65:/usr/include/c++/6/bits/stl_map.h **** 
  66:/usr/include/c++/6/bits/stl_map.h **** namespace std _GLIBCXX_VISIBILITY(default)
  67:/usr/include/c++/6/bits/stl_map.h **** {
  68:/usr/include/c++/6/bits/stl_map.h **** _GLIBCXX_BEGIN_NAMESPACE_CONTAINER
  69:/usr/include/c++/6/bits/stl_map.h **** 
  70:/usr/include/c++/6/bits/stl_map.h ****   /**
  71:/usr/include/c++/6/bits/stl_map.h ****    *  @brief A standard container made up of (key,value) pairs, which can be
  72:/usr/include/c++/6/bits/stl_map.h ****    *  retrieved based on a key, in logarithmic time.
  73:/usr/include/c++/6/bits/stl_map.h ****    *
  74:/usr/include/c++/6/bits/stl_map.h ****    *  @ingroup associative_containers
  75:/usr/include/c++/6/bits/stl_map.h ****    *
  76:/usr/include/c++/6/bits/stl_map.h ****    *  @tparam _Key  Type of key objects.
  77:/usr/include/c++/6/bits/stl_map.h ****    *  @tparam  _Tp  Type of mapped objects.
  78:/usr/include/c++/6/bits/stl_map.h ****    *  @tparam _Compare  Comparison function object type, defaults to less<_Key>.
  79:/usr/include/c++/6/bits/stl_map.h ****    *  @tparam _Alloc  Allocator type, defaults to 
  80:/usr/include/c++/6/bits/stl_map.h ****    *                  allocator<pair<const _Key, _Tp>.
  81:/usr/include/c++/6/bits/stl_map.h ****    *
  82:/usr/include/c++/6/bits/stl_map.h ****    *  Meets the requirements of a <a href="tables.html#65">container</a>, a
GAS LISTING /tmp/ccvUPO8Q.s 			page 232


  83:/usr/include/c++/6/bits/stl_map.h ****    *  <a href="tables.html#66">reversible container</a>, and an
  84:/usr/include/c++/6/bits/stl_map.h ****    *  <a href="tables.html#69">associative container</a> (using unique keys).
  85:/usr/include/c++/6/bits/stl_map.h ****    *  For a @c map<Key,T> the key_type is Key, the mapped_type is T, and the
  86:/usr/include/c++/6/bits/stl_map.h ****    *  value_type is std::pair<const Key,T>.
  87:/usr/include/c++/6/bits/stl_map.h ****    *
  88:/usr/include/c++/6/bits/stl_map.h ****    *  Maps support bidirectional iterators.
  89:/usr/include/c++/6/bits/stl_map.h ****    *
  90:/usr/include/c++/6/bits/stl_map.h ****    *  The private tree data is declared exactly the same way for map and
  91:/usr/include/c++/6/bits/stl_map.h ****    *  multimap; the distinction is made entirely in how the tree functions are
  92:/usr/include/c++/6/bits/stl_map.h ****    *  called (*_unique versus *_equal, same as the standard).
  93:/usr/include/c++/6/bits/stl_map.h ****   */
  94:/usr/include/c++/6/bits/stl_map.h ****   template <typename _Key, typename _Tp, typename _Compare = std::less<_Key>,
  95:/usr/include/c++/6/bits/stl_map.h ****             typename _Alloc = std::allocator<std::pair<const _Key, _Tp> > >
  96:/usr/include/c++/6/bits/stl_map.h ****     class map
  97:/usr/include/c++/6/bits/stl_map.h ****     {
  98:/usr/include/c++/6/bits/stl_map.h ****     public:
  99:/usr/include/c++/6/bits/stl_map.h ****       typedef _Key                                          key_type;
 100:/usr/include/c++/6/bits/stl_map.h ****       typedef _Tp                                           mapped_type;
 101:/usr/include/c++/6/bits/stl_map.h ****       typedef std::pair<const _Key, _Tp>                    value_type;
 102:/usr/include/c++/6/bits/stl_map.h ****       typedef _Compare                                      key_compare;
 103:/usr/include/c++/6/bits/stl_map.h ****       typedef _Alloc                                        allocator_type;
 104:/usr/include/c++/6/bits/stl_map.h **** 
 105:/usr/include/c++/6/bits/stl_map.h ****     private:
 106:/usr/include/c++/6/bits/stl_map.h ****       // concept requirements
 107:/usr/include/c++/6/bits/stl_map.h ****       typedef typename _Alloc::value_type                   _Alloc_value_type;
 108:/usr/include/c++/6/bits/stl_map.h ****       __glibcxx_class_requires(_Tp, _SGIAssignableConcept)
 109:/usr/include/c++/6/bits/stl_map.h ****       __glibcxx_class_requires4(_Compare, bool, _Key, _Key,
 110:/usr/include/c++/6/bits/stl_map.h **** 				_BinaryFunctionConcept)
 111:/usr/include/c++/6/bits/stl_map.h ****       __glibcxx_class_requires2(value_type, _Alloc_value_type, _SameTypeConcept)
 112:/usr/include/c++/6/bits/stl_map.h **** 
 113:/usr/include/c++/6/bits/stl_map.h ****     public:
 114:/usr/include/c++/6/bits/stl_map.h ****       class value_compare
 115:/usr/include/c++/6/bits/stl_map.h ****       : public std::binary_function<value_type, value_type, bool>
 116:/usr/include/c++/6/bits/stl_map.h ****       {
 117:/usr/include/c++/6/bits/stl_map.h **** 	friend class map<_Key, _Tp, _Compare, _Alloc>;
 118:/usr/include/c++/6/bits/stl_map.h ****       protected:
 119:/usr/include/c++/6/bits/stl_map.h **** 	_Compare comp;
 120:/usr/include/c++/6/bits/stl_map.h **** 
 121:/usr/include/c++/6/bits/stl_map.h **** 	value_compare(_Compare __c)
 122:/usr/include/c++/6/bits/stl_map.h **** 	: comp(__c) { }
 123:/usr/include/c++/6/bits/stl_map.h **** 
 124:/usr/include/c++/6/bits/stl_map.h ****       public:
 125:/usr/include/c++/6/bits/stl_map.h **** 	bool operator()(const value_type& __x, const value_type& __y) const
 126:/usr/include/c++/6/bits/stl_map.h **** 	{ return comp(__x.first, __y.first); }
 127:/usr/include/c++/6/bits/stl_map.h ****       };
 128:/usr/include/c++/6/bits/stl_map.h **** 
 129:/usr/include/c++/6/bits/stl_map.h ****     private:
 130:/usr/include/c++/6/bits/stl_map.h ****       /// This turns a red-black tree into a [multi]map. 
 131:/usr/include/c++/6/bits/stl_map.h ****       typedef typename __gnu_cxx::__alloc_traits<_Alloc>::template
 132:/usr/include/c++/6/bits/stl_map.h **** 	rebind<value_type>::other _Pair_alloc_type;
 133:/usr/include/c++/6/bits/stl_map.h **** 
 134:/usr/include/c++/6/bits/stl_map.h ****       typedef _Rb_tree<key_type, value_type, _Select1st<value_type>,
 135:/usr/include/c++/6/bits/stl_map.h **** 		       key_compare, _Pair_alloc_type> _Rep_type;
 136:/usr/include/c++/6/bits/stl_map.h **** 
 137:/usr/include/c++/6/bits/stl_map.h ****       /// The actual tree structure.
 138:/usr/include/c++/6/bits/stl_map.h ****       _Rep_type _M_t;
 139:/usr/include/c++/6/bits/stl_map.h **** 
GAS LISTING /tmp/ccvUPO8Q.s 			page 233


 140:/usr/include/c++/6/bits/stl_map.h ****       typedef __gnu_cxx::__alloc_traits<_Pair_alloc_type> _Alloc_traits;
 141:/usr/include/c++/6/bits/stl_map.h **** 
 142:/usr/include/c++/6/bits/stl_map.h ****     public:
 143:/usr/include/c++/6/bits/stl_map.h ****       // many of these are specified differently in ISO, but the following are
 144:/usr/include/c++/6/bits/stl_map.h ****       // "functionally equivalent"
 145:/usr/include/c++/6/bits/stl_map.h ****       typedef typename _Alloc_traits::pointer            pointer;
 146:/usr/include/c++/6/bits/stl_map.h ****       typedef typename _Alloc_traits::const_pointer      const_pointer;
 147:/usr/include/c++/6/bits/stl_map.h ****       typedef typename _Alloc_traits::reference          reference;
 148:/usr/include/c++/6/bits/stl_map.h ****       typedef typename _Alloc_traits::const_reference    const_reference;
 149:/usr/include/c++/6/bits/stl_map.h ****       typedef typename _Rep_type::iterator               iterator;
 150:/usr/include/c++/6/bits/stl_map.h ****       typedef typename _Rep_type::const_iterator         const_iterator;
 151:/usr/include/c++/6/bits/stl_map.h ****       typedef typename _Rep_type::size_type              size_type;
 152:/usr/include/c++/6/bits/stl_map.h ****       typedef typename _Rep_type::difference_type        difference_type;
 153:/usr/include/c++/6/bits/stl_map.h ****       typedef typename _Rep_type::reverse_iterator       reverse_iterator;
 154:/usr/include/c++/6/bits/stl_map.h ****       typedef typename _Rep_type::const_reverse_iterator const_reverse_iterator;
 155:/usr/include/c++/6/bits/stl_map.h **** 
 156:/usr/include/c++/6/bits/stl_map.h ****       // [23.3.1.1] construct/copy/destroy
 157:/usr/include/c++/6/bits/stl_map.h ****       // (get_allocator() is also listed in this section)
 158:/usr/include/c++/6/bits/stl_map.h **** 
 159:/usr/include/c++/6/bits/stl_map.h ****       /**
 160:/usr/include/c++/6/bits/stl_map.h ****        *  @brief  Default constructor creates no elements.
 161:/usr/include/c++/6/bits/stl_map.h ****        */
 162:/usr/include/c++/6/bits/stl_map.h ****       map()
 163:/usr/include/c++/6/bits/stl_map.h ****       _GLIBCXX_NOEXCEPT_IF(
 164:/usr/include/c++/6/bits/stl_map.h **** 	  is_nothrow_default_constructible<allocator_type>::value
 165:/usr/include/c++/6/bits/stl_map.h **** 	  && is_nothrow_default_constructible<key_compare>::value)
 166:/usr/include/c++/6/bits/stl_map.h ****       : _M_t() { }
 167:/usr/include/c++/6/bits/stl_map.h **** 
 168:/usr/include/c++/6/bits/stl_map.h ****       /**
 169:/usr/include/c++/6/bits/stl_map.h ****        *  @brief  Creates a %map with no elements.
 170:/usr/include/c++/6/bits/stl_map.h ****        *  @param  __comp  A comparison object.
 171:/usr/include/c++/6/bits/stl_map.h ****        *  @param  __a  An allocator object.
 172:/usr/include/c++/6/bits/stl_map.h ****        */
 173:/usr/include/c++/6/bits/stl_map.h ****       explicit
 174:/usr/include/c++/6/bits/stl_map.h ****       map(const _Compare& __comp,
 175:/usr/include/c++/6/bits/stl_map.h **** 	  const allocator_type& __a = allocator_type())
 176:/usr/include/c++/6/bits/stl_map.h ****       : _M_t(__comp, _Pair_alloc_type(__a)) { }
 177:/usr/include/c++/6/bits/stl_map.h **** 
 178:/usr/include/c++/6/bits/stl_map.h ****       /**
 179:/usr/include/c++/6/bits/stl_map.h ****        *  @brief  %Map copy constructor.
 180:/usr/include/c++/6/bits/stl_map.h ****        *  @param  __x  A %map of identical element and allocator types.
 181:/usr/include/c++/6/bits/stl_map.h ****        *
 182:/usr/include/c++/6/bits/stl_map.h ****        *  The newly-created %map uses a copy of the allocation object
 183:/usr/include/c++/6/bits/stl_map.h ****        *  used by @a __x.
 184:/usr/include/c++/6/bits/stl_map.h ****        */
 185:/usr/include/c++/6/bits/stl_map.h ****       map(const map& __x)
 186:/usr/include/c++/6/bits/stl_map.h ****       : _M_t(__x._M_t) { }
 187:/usr/include/c++/6/bits/stl_map.h **** 
 188:/usr/include/c++/6/bits/stl_map.h **** #if __cplusplus >= 201103L
 189:/usr/include/c++/6/bits/stl_map.h ****       /**
 190:/usr/include/c++/6/bits/stl_map.h ****        *  @brief  %Map move constructor.
 191:/usr/include/c++/6/bits/stl_map.h ****        *  @param  __x  A %map of identical element and allocator types.
 192:/usr/include/c++/6/bits/stl_map.h ****        *
 193:/usr/include/c++/6/bits/stl_map.h ****        *  The newly-created %map contains the exact contents of @a __x.
 194:/usr/include/c++/6/bits/stl_map.h ****        *  The contents of @a __x are a valid, but unspecified %map.
 195:/usr/include/c++/6/bits/stl_map.h ****        */
 196:/usr/include/c++/6/bits/stl_map.h ****       map(map&& __x)
GAS LISTING /tmp/ccvUPO8Q.s 			page 234


 197:/usr/include/c++/6/bits/stl_map.h ****       noexcept(is_nothrow_copy_constructible<_Compare>::value)
 198:/usr/include/c++/6/bits/stl_map.h ****       : _M_t(std::move(__x._M_t)) { }
 199:/usr/include/c++/6/bits/stl_map.h **** 
 200:/usr/include/c++/6/bits/stl_map.h ****       /**
 201:/usr/include/c++/6/bits/stl_map.h ****        *  @brief  Builds a %map from an initializer_list.
 202:/usr/include/c++/6/bits/stl_map.h ****        *  @param  __l  An initializer_list.
 203:/usr/include/c++/6/bits/stl_map.h ****        *  @param  __comp  A comparison object.
 204:/usr/include/c++/6/bits/stl_map.h ****        *  @param  __a  An allocator object.
 205:/usr/include/c++/6/bits/stl_map.h ****        *
 206:/usr/include/c++/6/bits/stl_map.h ****        *  Create a %map consisting of copies of the elements in the
 207:/usr/include/c++/6/bits/stl_map.h ****        *  initializer_list @a __l.
 208:/usr/include/c++/6/bits/stl_map.h ****        *  This is linear in N if the range is already sorted, and NlogN
 209:/usr/include/c++/6/bits/stl_map.h ****        *  otherwise (where N is @a __l.size()).
 210:/usr/include/c++/6/bits/stl_map.h ****        */
 211:/usr/include/c++/6/bits/stl_map.h ****       map(initializer_list<value_type> __l,
 212:/usr/include/c++/6/bits/stl_map.h **** 	  const _Compare& __comp = _Compare(),
 213:/usr/include/c++/6/bits/stl_map.h **** 	  const allocator_type& __a = allocator_type())
 214:/usr/include/c++/6/bits/stl_map.h ****       : _M_t(__comp, _Pair_alloc_type(__a))
 215:/usr/include/c++/6/bits/stl_map.h ****       { _M_t._M_insert_unique(__l.begin(), __l.end()); }
 216:/usr/include/c++/6/bits/stl_map.h **** 
 217:/usr/include/c++/6/bits/stl_map.h ****       /// Allocator-extended default constructor.
 218:/usr/include/c++/6/bits/stl_map.h ****       explicit
 219:/usr/include/c++/6/bits/stl_map.h ****       map(const allocator_type& __a)
 220:/usr/include/c++/6/bits/stl_map.h ****       : _M_t(_Compare(), _Pair_alloc_type(__a)) { }
 221:/usr/include/c++/6/bits/stl_map.h **** 
 222:/usr/include/c++/6/bits/stl_map.h ****       /// Allocator-extended copy constructor.
 223:/usr/include/c++/6/bits/stl_map.h ****       map(const map& __m, const allocator_type& __a)
 224:/usr/include/c++/6/bits/stl_map.h ****       : _M_t(__m._M_t, _Pair_alloc_type(__a)) { }
 225:/usr/include/c++/6/bits/stl_map.h **** 
 226:/usr/include/c++/6/bits/stl_map.h ****       /// Allocator-extended move constructor.
 227:/usr/include/c++/6/bits/stl_map.h ****       map(map&& __m, const allocator_type& __a)
 228:/usr/include/c++/6/bits/stl_map.h ****       noexcept(is_nothrow_copy_constructible<_Compare>::value
 229:/usr/include/c++/6/bits/stl_map.h **** 	       && _Alloc_traits::_S_always_equal())
 230:/usr/include/c++/6/bits/stl_map.h ****       : _M_t(std::move(__m._M_t), _Pair_alloc_type(__a)) { }
 231:/usr/include/c++/6/bits/stl_map.h **** 
 232:/usr/include/c++/6/bits/stl_map.h ****       /// Allocator-extended initialier-list constructor.
 233:/usr/include/c++/6/bits/stl_map.h ****       map(initializer_list<value_type> __l, const allocator_type& __a)
 234:/usr/include/c++/6/bits/stl_map.h ****       : _M_t(_Compare(), _Pair_alloc_type(__a))
 235:/usr/include/c++/6/bits/stl_map.h ****       { _M_t._M_insert_unique(__l.begin(), __l.end()); }
 236:/usr/include/c++/6/bits/stl_map.h **** 
 237:/usr/include/c++/6/bits/stl_map.h ****       /// Allocator-extended range constructor.
 238:/usr/include/c++/6/bits/stl_map.h ****       template<typename _InputIterator>
 239:/usr/include/c++/6/bits/stl_map.h ****         map(_InputIterator __first, _InputIterator __last,
 240:/usr/include/c++/6/bits/stl_map.h **** 	    const allocator_type& __a)
 241:/usr/include/c++/6/bits/stl_map.h **** 	: _M_t(_Compare(), _Pair_alloc_type(__a))
 242:/usr/include/c++/6/bits/stl_map.h ****         { _M_t._M_insert_unique(__first, __last); }
 243:/usr/include/c++/6/bits/stl_map.h **** #endif
 244:/usr/include/c++/6/bits/stl_map.h **** 
 245:/usr/include/c++/6/bits/stl_map.h ****       /**
 246:/usr/include/c++/6/bits/stl_map.h ****        *  @brief  Builds a %map from a range.
 247:/usr/include/c++/6/bits/stl_map.h ****        *  @param  __first  An input iterator.
 248:/usr/include/c++/6/bits/stl_map.h ****        *  @param  __last  An input iterator.
 249:/usr/include/c++/6/bits/stl_map.h ****        *
 250:/usr/include/c++/6/bits/stl_map.h ****        *  Create a %map consisting of copies of the elements from
 251:/usr/include/c++/6/bits/stl_map.h ****        *  [__first,__last).  This is linear in N if the range is
 252:/usr/include/c++/6/bits/stl_map.h ****        *  already sorted, and NlogN otherwise (where N is
 253:/usr/include/c++/6/bits/stl_map.h ****        *  distance(__first,__last)).
GAS LISTING /tmp/ccvUPO8Q.s 			page 235


 254:/usr/include/c++/6/bits/stl_map.h ****        */
 255:/usr/include/c++/6/bits/stl_map.h ****       template<typename _InputIterator>
 256:/usr/include/c++/6/bits/stl_map.h ****         map(_InputIterator __first, _InputIterator __last)
 257:/usr/include/c++/6/bits/stl_map.h **** 	: _M_t()
 258:/usr/include/c++/6/bits/stl_map.h ****         { _M_t._M_insert_unique(__first, __last); }
 259:/usr/include/c++/6/bits/stl_map.h **** 
 260:/usr/include/c++/6/bits/stl_map.h ****       /**
 261:/usr/include/c++/6/bits/stl_map.h ****        *  @brief  Builds a %map from a range.
 262:/usr/include/c++/6/bits/stl_map.h ****        *  @param  __first  An input iterator.
 263:/usr/include/c++/6/bits/stl_map.h ****        *  @param  __last  An input iterator.
 264:/usr/include/c++/6/bits/stl_map.h ****        *  @param  __comp  A comparison functor.
 265:/usr/include/c++/6/bits/stl_map.h ****        *  @param  __a  An allocator object.
 266:/usr/include/c++/6/bits/stl_map.h ****        *
 267:/usr/include/c++/6/bits/stl_map.h ****        *  Create a %map consisting of copies of the elements from
 268:/usr/include/c++/6/bits/stl_map.h ****        *  [__first,__last).  This is linear in N if the range is
 269:/usr/include/c++/6/bits/stl_map.h ****        *  already sorted, and NlogN otherwise (where N is
 270:/usr/include/c++/6/bits/stl_map.h ****        *  distance(__first,__last)).
 271:/usr/include/c++/6/bits/stl_map.h ****        */
 272:/usr/include/c++/6/bits/stl_map.h ****       template<typename _InputIterator>
 273:/usr/include/c++/6/bits/stl_map.h ****         map(_InputIterator __first, _InputIterator __last,
 274:/usr/include/c++/6/bits/stl_map.h **** 	    const _Compare& __comp,
 275:/usr/include/c++/6/bits/stl_map.h **** 	    const allocator_type& __a = allocator_type())
 276:/usr/include/c++/6/bits/stl_map.h **** 	: _M_t(__comp, _Pair_alloc_type(__a))
 277:/usr/include/c++/6/bits/stl_map.h ****         { _M_t._M_insert_unique(__first, __last); }
 278:/usr/include/c++/6/bits/stl_map.h **** 
 279:/usr/include/c++/6/bits/stl_map.h ****       // FIXME There is no dtor declared, but we should have something
 280:/usr/include/c++/6/bits/stl_map.h ****       // generated by Doxygen.  I don't know what tags to add to this
 281:/usr/include/c++/6/bits/stl_map.h ****       // paragraph to make that happen:
 282:/usr/include/c++/6/bits/stl_map.h ****       /**
 283:/usr/include/c++/6/bits/stl_map.h ****        *  The dtor only erases the elements, and note that if the elements
 284:/usr/include/c++/6/bits/stl_map.h ****        *  themselves are pointers, the pointed-to memory is not touched in any
 285:/usr/include/c++/6/bits/stl_map.h ****        *  way.  Managing the pointer is the user's responsibility.
 286:/usr/include/c++/6/bits/stl_map.h ****        */
 287:/usr/include/c++/6/bits/stl_map.h **** 
 288:/usr/include/c++/6/bits/stl_map.h ****       /**
 289:/usr/include/c++/6/bits/stl_map.h ****        *  @brief  %Map assignment operator.
 290:/usr/include/c++/6/bits/stl_map.h ****        *  @param  __x  A %map of identical element and allocator types.
 291:/usr/include/c++/6/bits/stl_map.h ****        *
 292:/usr/include/c++/6/bits/stl_map.h ****        *  All the elements of @a __x are copied, but unlike the copy
 293:/usr/include/c++/6/bits/stl_map.h ****        *  constructor, the allocator object is not copied.
 294:/usr/include/c++/6/bits/stl_map.h ****        */
 295:/usr/include/c++/6/bits/stl_map.h ****       map&
 296:/usr/include/c++/6/bits/stl_map.h ****       operator=(const map& __x)
 297:/usr/include/c++/6/bits/stl_map.h ****       {
 298:/usr/include/c++/6/bits/stl_map.h **** 	_M_t = __x._M_t;
 299:/usr/include/c++/6/bits/stl_map.h **** 	return *this;
 300:/usr/include/c++/6/bits/stl_map.h ****       }
 301:/usr/include/c++/6/bits/stl_map.h **** 
 302:/usr/include/c++/6/bits/stl_map.h **** #if __cplusplus >= 201103L
 303:/usr/include/c++/6/bits/stl_map.h ****       /// Move assignment operator.
 304:/usr/include/c++/6/bits/stl_map.h ****       map&
 305:/usr/include/c++/6/bits/stl_map.h ****       operator=(map&&) = default;
 306:/usr/include/c++/6/bits/stl_map.h **** 
 307:/usr/include/c++/6/bits/stl_map.h ****       /**
 308:/usr/include/c++/6/bits/stl_map.h ****        *  @brief  %Map list assignment operator.
 309:/usr/include/c++/6/bits/stl_map.h ****        *  @param  __l  An initializer_list.
 310:/usr/include/c++/6/bits/stl_map.h ****        *
GAS LISTING /tmp/ccvUPO8Q.s 			page 236


 311:/usr/include/c++/6/bits/stl_map.h ****        *  This function fills a %map with copies of the elements in the
 312:/usr/include/c++/6/bits/stl_map.h ****        *  initializer list @a __l.
 313:/usr/include/c++/6/bits/stl_map.h ****        *
 314:/usr/include/c++/6/bits/stl_map.h ****        *  Note that the assignment completely changes the %map and
 315:/usr/include/c++/6/bits/stl_map.h ****        *  that the resulting %map's size is the same as the number
 316:/usr/include/c++/6/bits/stl_map.h ****        *  of elements assigned.  Old data may be lost.
 317:/usr/include/c++/6/bits/stl_map.h ****        */
 318:/usr/include/c++/6/bits/stl_map.h ****       map&
 319:/usr/include/c++/6/bits/stl_map.h ****       operator=(initializer_list<value_type> __l)
 320:/usr/include/c++/6/bits/stl_map.h ****       {
 321:/usr/include/c++/6/bits/stl_map.h **** 	_M_t._M_assign_unique(__l.begin(), __l.end());
 322:/usr/include/c++/6/bits/stl_map.h **** 	return *this;
 323:/usr/include/c++/6/bits/stl_map.h ****       }
 324:/usr/include/c++/6/bits/stl_map.h **** #endif
 325:/usr/include/c++/6/bits/stl_map.h **** 
 326:/usr/include/c++/6/bits/stl_map.h ****       /// Get a copy of the memory allocation object.
 327:/usr/include/c++/6/bits/stl_map.h ****       allocator_type
 328:/usr/include/c++/6/bits/stl_map.h ****       get_allocator() const _GLIBCXX_NOEXCEPT
 329:/usr/include/c++/6/bits/stl_map.h ****       { return allocator_type(_M_t.get_allocator()); }
 330:/usr/include/c++/6/bits/stl_map.h **** 
 331:/usr/include/c++/6/bits/stl_map.h ****       // iterators
 332:/usr/include/c++/6/bits/stl_map.h ****       /**
 333:/usr/include/c++/6/bits/stl_map.h ****        *  Returns a read/write iterator that points to the first pair in the
 334:/usr/include/c++/6/bits/stl_map.h ****        *  %map.
 335:/usr/include/c++/6/bits/stl_map.h ****        *  Iteration is done in ascending order according to the keys.
 336:/usr/include/c++/6/bits/stl_map.h ****        */
 337:/usr/include/c++/6/bits/stl_map.h ****       iterator
 338:/usr/include/c++/6/bits/stl_map.h ****       begin() _GLIBCXX_NOEXCEPT
 339:/usr/include/c++/6/bits/stl_map.h ****       { return _M_t.begin(); }
 340:/usr/include/c++/6/bits/stl_map.h **** 
 341:/usr/include/c++/6/bits/stl_map.h ****       /**
 342:/usr/include/c++/6/bits/stl_map.h ****        *  Returns a read-only (constant) iterator that points to the first pair
 343:/usr/include/c++/6/bits/stl_map.h ****        *  in the %map.  Iteration is done in ascending order according to the
 344:/usr/include/c++/6/bits/stl_map.h ****        *  keys.
 345:/usr/include/c++/6/bits/stl_map.h ****        */
 346:/usr/include/c++/6/bits/stl_map.h ****       const_iterator
 347:/usr/include/c++/6/bits/stl_map.h ****       begin() const _GLIBCXX_NOEXCEPT
 348:/usr/include/c++/6/bits/stl_map.h ****       { return _M_t.begin(); }
 349:/usr/include/c++/6/bits/stl_map.h **** 
 350:/usr/include/c++/6/bits/stl_map.h ****       /**
 351:/usr/include/c++/6/bits/stl_map.h ****        *  Returns a read/write iterator that points one past the last
 352:/usr/include/c++/6/bits/stl_map.h ****        *  pair in the %map.  Iteration is done in ascending order
 353:/usr/include/c++/6/bits/stl_map.h ****        *  according to the keys.
 354:/usr/include/c++/6/bits/stl_map.h ****        */
 355:/usr/include/c++/6/bits/stl_map.h ****       iterator
 356:/usr/include/c++/6/bits/stl_map.h ****       end() _GLIBCXX_NOEXCEPT
 357:/usr/include/c++/6/bits/stl_map.h ****       { return _M_t.end(); }
 358:/usr/include/c++/6/bits/stl_map.h **** 
 359:/usr/include/c++/6/bits/stl_map.h ****       /**
 360:/usr/include/c++/6/bits/stl_map.h ****        *  Returns a read-only (constant) iterator that points one past the last
 361:/usr/include/c++/6/bits/stl_map.h ****        *  pair in the %map.  Iteration is done in ascending order according to
 362:/usr/include/c++/6/bits/stl_map.h ****        *  the keys.
 363:/usr/include/c++/6/bits/stl_map.h ****        */
 364:/usr/include/c++/6/bits/stl_map.h ****       const_iterator
 365:/usr/include/c++/6/bits/stl_map.h ****       end() const _GLIBCXX_NOEXCEPT
 366:/usr/include/c++/6/bits/stl_map.h ****       { return _M_t.end(); }
 367:/usr/include/c++/6/bits/stl_map.h **** 
GAS LISTING /tmp/ccvUPO8Q.s 			page 237


 368:/usr/include/c++/6/bits/stl_map.h ****       /**
 369:/usr/include/c++/6/bits/stl_map.h ****        *  Returns a read/write reverse iterator that points to the last pair in
 370:/usr/include/c++/6/bits/stl_map.h ****        *  the %map.  Iteration is done in descending order according to the
 371:/usr/include/c++/6/bits/stl_map.h ****        *  keys.
 372:/usr/include/c++/6/bits/stl_map.h ****        */
 373:/usr/include/c++/6/bits/stl_map.h ****       reverse_iterator
 374:/usr/include/c++/6/bits/stl_map.h ****       rbegin() _GLIBCXX_NOEXCEPT
 375:/usr/include/c++/6/bits/stl_map.h ****       { return _M_t.rbegin(); }
 376:/usr/include/c++/6/bits/stl_map.h **** 
 377:/usr/include/c++/6/bits/stl_map.h ****       /**
 378:/usr/include/c++/6/bits/stl_map.h ****        *  Returns a read-only (constant) reverse iterator that points to the
 379:/usr/include/c++/6/bits/stl_map.h ****        *  last pair in the %map.  Iteration is done in descending order
 380:/usr/include/c++/6/bits/stl_map.h ****        *  according to the keys.
 381:/usr/include/c++/6/bits/stl_map.h ****        */
 382:/usr/include/c++/6/bits/stl_map.h ****       const_reverse_iterator
 383:/usr/include/c++/6/bits/stl_map.h ****       rbegin() const _GLIBCXX_NOEXCEPT
 384:/usr/include/c++/6/bits/stl_map.h ****       { return _M_t.rbegin(); }
 385:/usr/include/c++/6/bits/stl_map.h **** 
 386:/usr/include/c++/6/bits/stl_map.h ****       /**
 387:/usr/include/c++/6/bits/stl_map.h ****        *  Returns a read/write reverse iterator that points to one before the
 388:/usr/include/c++/6/bits/stl_map.h ****        *  first pair in the %map.  Iteration is done in descending order
 389:/usr/include/c++/6/bits/stl_map.h ****        *  according to the keys.
 390:/usr/include/c++/6/bits/stl_map.h ****        */
 391:/usr/include/c++/6/bits/stl_map.h ****       reverse_iterator
 392:/usr/include/c++/6/bits/stl_map.h ****       rend() _GLIBCXX_NOEXCEPT
 393:/usr/include/c++/6/bits/stl_map.h ****       { return _M_t.rend(); }
 394:/usr/include/c++/6/bits/stl_map.h **** 
 395:/usr/include/c++/6/bits/stl_map.h ****       /**
 396:/usr/include/c++/6/bits/stl_map.h ****        *  Returns a read-only (constant) reverse iterator that points to one
 397:/usr/include/c++/6/bits/stl_map.h ****        *  before the first pair in the %map.  Iteration is done in descending
 398:/usr/include/c++/6/bits/stl_map.h ****        *  order according to the keys.
 399:/usr/include/c++/6/bits/stl_map.h ****        */
 400:/usr/include/c++/6/bits/stl_map.h ****       const_reverse_iterator
 401:/usr/include/c++/6/bits/stl_map.h ****       rend() const _GLIBCXX_NOEXCEPT
 402:/usr/include/c++/6/bits/stl_map.h ****       { return _M_t.rend(); }
 403:/usr/include/c++/6/bits/stl_map.h **** 
 404:/usr/include/c++/6/bits/stl_map.h **** #if __cplusplus >= 201103L
 405:/usr/include/c++/6/bits/stl_map.h ****       /**
 406:/usr/include/c++/6/bits/stl_map.h ****        *  Returns a read-only (constant) iterator that points to the first pair
 407:/usr/include/c++/6/bits/stl_map.h ****        *  in the %map.  Iteration is done in ascending order according to the
 408:/usr/include/c++/6/bits/stl_map.h ****        *  keys.
 409:/usr/include/c++/6/bits/stl_map.h ****        */
 410:/usr/include/c++/6/bits/stl_map.h ****       const_iterator
 411:/usr/include/c++/6/bits/stl_map.h ****       cbegin() const noexcept
 412:/usr/include/c++/6/bits/stl_map.h ****       { return _M_t.begin(); }
 413:/usr/include/c++/6/bits/stl_map.h **** 
 414:/usr/include/c++/6/bits/stl_map.h ****       /**
 415:/usr/include/c++/6/bits/stl_map.h ****        *  Returns a read-only (constant) iterator that points one past the last
 416:/usr/include/c++/6/bits/stl_map.h ****        *  pair in the %map.  Iteration is done in ascending order according to
 417:/usr/include/c++/6/bits/stl_map.h ****        *  the keys.
 418:/usr/include/c++/6/bits/stl_map.h ****        */
 419:/usr/include/c++/6/bits/stl_map.h ****       const_iterator
 420:/usr/include/c++/6/bits/stl_map.h ****       cend() const noexcept
 421:/usr/include/c++/6/bits/stl_map.h ****       { return _M_t.end(); }
 422:/usr/include/c++/6/bits/stl_map.h **** 
 423:/usr/include/c++/6/bits/stl_map.h ****       /**
 424:/usr/include/c++/6/bits/stl_map.h ****        *  Returns a read-only (constant) reverse iterator that points to the
GAS LISTING /tmp/ccvUPO8Q.s 			page 238


 425:/usr/include/c++/6/bits/stl_map.h ****        *  last pair in the %map.  Iteration is done in descending order
 426:/usr/include/c++/6/bits/stl_map.h ****        *  according to the keys.
 427:/usr/include/c++/6/bits/stl_map.h ****        */
 428:/usr/include/c++/6/bits/stl_map.h ****       const_reverse_iterator
 429:/usr/include/c++/6/bits/stl_map.h ****       crbegin() const noexcept
 430:/usr/include/c++/6/bits/stl_map.h ****       { return _M_t.rbegin(); }
 431:/usr/include/c++/6/bits/stl_map.h **** 
 432:/usr/include/c++/6/bits/stl_map.h ****       /**
 433:/usr/include/c++/6/bits/stl_map.h ****        *  Returns a read-only (constant) reverse iterator that points to one
 434:/usr/include/c++/6/bits/stl_map.h ****        *  before the first pair in the %map.  Iteration is done in descending
 435:/usr/include/c++/6/bits/stl_map.h ****        *  order according to the keys.
 436:/usr/include/c++/6/bits/stl_map.h ****        */
 437:/usr/include/c++/6/bits/stl_map.h ****       const_reverse_iterator
 438:/usr/include/c++/6/bits/stl_map.h ****       crend() const noexcept
 439:/usr/include/c++/6/bits/stl_map.h ****       { return _M_t.rend(); }
 440:/usr/include/c++/6/bits/stl_map.h **** #endif
 441:/usr/include/c++/6/bits/stl_map.h **** 
 442:/usr/include/c++/6/bits/stl_map.h ****       // capacity
 443:/usr/include/c++/6/bits/stl_map.h ****       /** Returns true if the %map is empty.  (Thus begin() would equal
 444:/usr/include/c++/6/bits/stl_map.h ****        *  end().)
 445:/usr/include/c++/6/bits/stl_map.h ****       */
 446:/usr/include/c++/6/bits/stl_map.h ****       bool
 447:/usr/include/c++/6/bits/stl_map.h ****       empty() const _GLIBCXX_NOEXCEPT
 448:/usr/include/c++/6/bits/stl_map.h ****       { return _M_t.empty(); }
 449:/usr/include/c++/6/bits/stl_map.h **** 
 450:/usr/include/c++/6/bits/stl_map.h ****       /** Returns the size of the %map.  */
 451:/usr/include/c++/6/bits/stl_map.h ****       size_type
 452:/usr/include/c++/6/bits/stl_map.h ****       size() const _GLIBCXX_NOEXCEPT
 453:/usr/include/c++/6/bits/stl_map.h ****       { return _M_t.size(); }
 454:/usr/include/c++/6/bits/stl_map.h **** 
 455:/usr/include/c++/6/bits/stl_map.h ****       /** Returns the maximum size of the %map.  */
 456:/usr/include/c++/6/bits/stl_map.h ****       size_type
 457:/usr/include/c++/6/bits/stl_map.h ****       max_size() const _GLIBCXX_NOEXCEPT
 458:/usr/include/c++/6/bits/stl_map.h ****       { return _M_t.max_size(); }
 459:/usr/include/c++/6/bits/stl_map.h **** 
 460:/usr/include/c++/6/bits/stl_map.h ****       // [23.3.1.2] element access
 461:/usr/include/c++/6/bits/stl_map.h ****       /**
 462:/usr/include/c++/6/bits/stl_map.h ****        *  @brief  Subscript ( @c [] ) access to %map data.
 463:/usr/include/c++/6/bits/stl_map.h ****        *  @param  __k  The key for which data should be retrieved.
 464:/usr/include/c++/6/bits/stl_map.h ****        *  @return  A reference to the data of the (key,data) %pair.
 465:/usr/include/c++/6/bits/stl_map.h ****        *
 466:/usr/include/c++/6/bits/stl_map.h ****        *  Allows for easy lookup with the subscript ( @c [] )
 467:/usr/include/c++/6/bits/stl_map.h ****        *  operator.  Returns data associated with the key specified in
 468:/usr/include/c++/6/bits/stl_map.h ****        *  subscript.  If the key does not exist, a pair with that key
 469:/usr/include/c++/6/bits/stl_map.h ****        *  is created using default values, which is then returned.
 470:/usr/include/c++/6/bits/stl_map.h ****        *
 471:/usr/include/c++/6/bits/stl_map.h ****        *  Lookup requires logarithmic time.
 472:/usr/include/c++/6/bits/stl_map.h ****        */
 473:/usr/include/c++/6/bits/stl_map.h ****       mapped_type&
 474:/usr/include/c++/6/bits/stl_map.h ****       operator[](const key_type& __k)
 475:/usr/include/c++/6/bits/stl_map.h ****       {
 476:/usr/include/c++/6/bits/stl_map.h **** 	// concept requirements
 477:/usr/include/c++/6/bits/stl_map.h **** 	__glibcxx_function_requires(_DefaultConstructibleConcept<mapped_type>)
 478:/usr/include/c++/6/bits/stl_map.h **** 
 479:/usr/include/c++/6/bits/stl_map.h **** 	iterator __i = lower_bound(__k);
 480:/usr/include/c++/6/bits/stl_map.h **** 	// __i->first is greater than or equivalent to __k.
 481:/usr/include/c++/6/bits/stl_map.h **** 	if (__i == end() || key_comp()(__k, (*__i).first))
GAS LISTING /tmp/ccvUPO8Q.s 			page 239


 482:/usr/include/c++/6/bits/stl_map.h **** #if __cplusplus >= 201103L
 483:/usr/include/c++/6/bits/stl_map.h **** 	  __i = _M_t._M_emplace_hint_unique(__i, std::piecewise_construct,
 484:/usr/include/c++/6/bits/stl_map.h **** 					    std::tuple<const key_type&>(__k),
 485:/usr/include/c++/6/bits/stl_map.h **** 					    std::tuple<>());
 486:/usr/include/c++/6/bits/stl_map.h **** #else
 487:/usr/include/c++/6/bits/stl_map.h ****           __i = insert(__i, value_type(__k, mapped_type()));
 488:/usr/include/c++/6/bits/stl_map.h **** #endif
 489:/usr/include/c++/6/bits/stl_map.h **** 	return (*__i).second;
 490:/usr/include/c++/6/bits/stl_map.h ****       }
 491:/usr/include/c++/6/bits/stl_map.h **** 
 492:/usr/include/c++/6/bits/stl_map.h **** #if __cplusplus >= 201103L
 493:/usr/include/c++/6/bits/stl_map.h ****       mapped_type&
 494:/usr/include/c++/6/bits/stl_map.h ****       operator[](key_type&& __k)
 495:/usr/include/c++/6/bits/stl_map.h ****       {
 496:/usr/include/c++/6/bits/stl_map.h **** 	// concept requirements
 497:/usr/include/c++/6/bits/stl_map.h **** 	__glibcxx_function_requires(_DefaultConstructibleConcept<mapped_type>)
 498:/usr/include/c++/6/bits/stl_map.h **** 
 499:/usr/include/c++/6/bits/stl_map.h **** 	iterator __i = lower_bound(__k);
 500:/usr/include/c++/6/bits/stl_map.h **** 	// __i->first is greater than or equivalent to __k.
 501:/usr/include/c++/6/bits/stl_map.h **** 	if (__i == end() || key_comp()(__k, (*__i).first))
 502:/usr/include/c++/6/bits/stl_map.h **** 	  __i = _M_t._M_emplace_hint_unique(__i, std::piecewise_construct,
 503:/usr/include/c++/6/bits/stl_map.h **** 					std::forward_as_tuple(std::move(__k)),
 504:/usr/include/c++/6/bits/stl_map.h **** 					std::tuple<>());
 505:/usr/include/c++/6/bits/stl_map.h **** 	return (*__i).second;
 506:/usr/include/c++/6/bits/stl_map.h ****       }
 507:/usr/include/c++/6/bits/stl_map.h **** #endif
 508:/usr/include/c++/6/bits/stl_map.h **** 
 509:/usr/include/c++/6/bits/stl_map.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 510:/usr/include/c++/6/bits/stl_map.h ****       // DR 464. Suggestion for new member functions in standard containers.
 511:/usr/include/c++/6/bits/stl_map.h ****       /**
 512:/usr/include/c++/6/bits/stl_map.h ****        *  @brief  Access to %map data.
 513:/usr/include/c++/6/bits/stl_map.h ****        *  @param  __k  The key for which data should be retrieved.
 514:/usr/include/c++/6/bits/stl_map.h ****        *  @return  A reference to the data whose key is equivalent to @a __k, if
 515:/usr/include/c++/6/bits/stl_map.h ****        *           such a data is present in the %map.
 516:/usr/include/c++/6/bits/stl_map.h ****        *  @throw  std::out_of_range  If no such data is present.
 517:/usr/include/c++/6/bits/stl_map.h ****        */
 518:/usr/include/c++/6/bits/stl_map.h ****       mapped_type&
 519:/usr/include/c++/6/bits/stl_map.h ****       at(const key_type& __k)
 520:/usr/include/c++/6/bits/stl_map.h ****       {
 521:/usr/include/c++/6/bits/stl_map.h **** 	iterator __i = lower_bound(__k);
 522:/usr/include/c++/6/bits/stl_map.h **** 	if (__i == end() || key_comp()(__k, (*__i).first))
 523:/usr/include/c++/6/bits/stl_map.h **** 	  __throw_out_of_range(__N("map::at"));
 524:/usr/include/c++/6/bits/stl_map.h **** 	return (*__i).second;
 525:/usr/include/c++/6/bits/stl_map.h ****       }
 526:/usr/include/c++/6/bits/stl_map.h **** 
 527:/usr/include/c++/6/bits/stl_map.h ****       const mapped_type&
 528:/usr/include/c++/6/bits/stl_map.h ****       at(const key_type& __k) const
 529:/usr/include/c++/6/bits/stl_map.h ****       {
 530:/usr/include/c++/6/bits/stl_map.h **** 	const_iterator __i = lower_bound(__k);
 531:/usr/include/c++/6/bits/stl_map.h **** 	if (__i == end() || key_comp()(__k, (*__i).first))
 532:/usr/include/c++/6/bits/stl_map.h **** 	  __throw_out_of_range(__N("map::at"));
 533:/usr/include/c++/6/bits/stl_map.h **** 	return (*__i).second;
 534:/usr/include/c++/6/bits/stl_map.h ****       }
 535:/usr/include/c++/6/bits/stl_map.h **** 
 536:/usr/include/c++/6/bits/stl_map.h ****       // modifiers
 537:/usr/include/c++/6/bits/stl_map.h **** #if __cplusplus >= 201103L
 538:/usr/include/c++/6/bits/stl_map.h ****       /**
GAS LISTING /tmp/ccvUPO8Q.s 			page 240


 539:/usr/include/c++/6/bits/stl_map.h ****        *  @brief Attempts to build and insert a std::pair into the %map.
 540:/usr/include/c++/6/bits/stl_map.h ****        *
 541:/usr/include/c++/6/bits/stl_map.h ****        *  @param __args  Arguments used to generate a new pair instance (see
 542:/usr/include/c++/6/bits/stl_map.h ****        *	        std::piecewise_contruct for passing arguments to each
 543:/usr/include/c++/6/bits/stl_map.h ****        *	        part of the pair constructor).
 544:/usr/include/c++/6/bits/stl_map.h ****        *
 545:/usr/include/c++/6/bits/stl_map.h ****        *  @return  A pair, of which the first element is an iterator that points
 546:/usr/include/c++/6/bits/stl_map.h ****        *           to the possibly inserted pair, and the second is a bool that
 547:/usr/include/c++/6/bits/stl_map.h ****        *           is true if the pair was actually inserted.
 548:/usr/include/c++/6/bits/stl_map.h ****        *
 549:/usr/include/c++/6/bits/stl_map.h ****        *  This function attempts to build and insert a (key, value) %pair into
 550:/usr/include/c++/6/bits/stl_map.h ****        *  the %map.
 551:/usr/include/c++/6/bits/stl_map.h ****        *  A %map relies on unique keys and thus a %pair is only inserted if its
 552:/usr/include/c++/6/bits/stl_map.h ****        *  first element (the key) is not already present in the %map.
 553:/usr/include/c++/6/bits/stl_map.h ****        *
 554:/usr/include/c++/6/bits/stl_map.h ****        *  Insertion requires logarithmic time.
 555:/usr/include/c++/6/bits/stl_map.h ****        */
 556:/usr/include/c++/6/bits/stl_map.h ****       template<typename... _Args>
 557:/usr/include/c++/6/bits/stl_map.h **** 	std::pair<iterator, bool>
 558:/usr/include/c++/6/bits/stl_map.h **** 	emplace(_Args&&... __args)
 559:/usr/include/c++/6/bits/stl_map.h **** 	{ return _M_t._M_emplace_unique(std::forward<_Args>(__args)...); }
 560:/usr/include/c++/6/bits/stl_map.h **** 
 561:/usr/include/c++/6/bits/stl_map.h ****       /**
 562:/usr/include/c++/6/bits/stl_map.h ****        *  @brief Attempts to build and insert a std::pair into the %map.
 563:/usr/include/c++/6/bits/stl_map.h ****        *
 564:/usr/include/c++/6/bits/stl_map.h ****        *  @param  __pos  An iterator that serves as a hint as to where the pair
 565:/usr/include/c++/6/bits/stl_map.h ****        *                should be inserted.
 566:/usr/include/c++/6/bits/stl_map.h ****        *  @param  __args  Arguments used to generate a new pair instance (see
 567:/usr/include/c++/6/bits/stl_map.h ****        *	         std::piecewise_contruct for passing arguments to each
 568:/usr/include/c++/6/bits/stl_map.h ****        *	         part of the pair constructor).
 569:/usr/include/c++/6/bits/stl_map.h ****        *  @return An iterator that points to the element with key of the
 570:/usr/include/c++/6/bits/stl_map.h ****        *          std::pair built from @a __args (may or may not be that
 571:/usr/include/c++/6/bits/stl_map.h ****        *          std::pair).
 572:/usr/include/c++/6/bits/stl_map.h ****        *
 573:/usr/include/c++/6/bits/stl_map.h ****        *  This function is not concerned about whether the insertion took place,
 574:/usr/include/c++/6/bits/stl_map.h ****        *  and thus does not return a boolean like the single-argument emplace()
 575:/usr/include/c++/6/bits/stl_map.h ****        *  does.
 576:/usr/include/c++/6/bits/stl_map.h ****        *  Note that the first parameter is only a hint and can potentially
 577:/usr/include/c++/6/bits/stl_map.h ****        *  improve the performance of the insertion process. A bad hint would
 578:/usr/include/c++/6/bits/stl_map.h ****        *  cause no gains in efficiency.
 579:/usr/include/c++/6/bits/stl_map.h ****        *
 580:/usr/include/c++/6/bits/stl_map.h ****        *  See
 581:/usr/include/c++/6/bits/stl_map.h ****        *  https://gcc.gnu.org/onlinedocs/libstdc++/manual/associative.html#containers.associative.i
 582:/usr/include/c++/6/bits/stl_map.h ****        *  for more on @a hinting.
 583:/usr/include/c++/6/bits/stl_map.h ****        *
 584:/usr/include/c++/6/bits/stl_map.h ****        *  Insertion requires logarithmic time (if the hint is not taken).
 585:/usr/include/c++/6/bits/stl_map.h ****        */
 586:/usr/include/c++/6/bits/stl_map.h ****       template<typename... _Args>
 587:/usr/include/c++/6/bits/stl_map.h **** 	iterator
 588:/usr/include/c++/6/bits/stl_map.h **** 	emplace_hint(const_iterator __pos, _Args&&... __args)
 589:/usr/include/c++/6/bits/stl_map.h **** 	{
 590:/usr/include/c++/6/bits/stl_map.h **** 	  return _M_t._M_emplace_hint_unique(__pos,
 591:/usr/include/c++/6/bits/stl_map.h **** 					     std::forward<_Args>(__args)...);
 592:/usr/include/c++/6/bits/stl_map.h **** 	}
 593:/usr/include/c++/6/bits/stl_map.h **** #endif
 594:/usr/include/c++/6/bits/stl_map.h **** 
 595:/usr/include/c++/6/bits/stl_map.h **** #if __cplusplus > 201402L
GAS LISTING /tmp/ccvUPO8Q.s 			page 241


 596:/usr/include/c++/6/bits/stl_map.h **** #define __cpp_lib_map_try_emplace 201411
 597:/usr/include/c++/6/bits/stl_map.h ****       /**
 598:/usr/include/c++/6/bits/stl_map.h ****        *  @brief Attempts to build and insert a std::pair into the %map.
 599:/usr/include/c++/6/bits/stl_map.h ****        *
 600:/usr/include/c++/6/bits/stl_map.h ****        *  @param __k    Key to use for finding a possibly existing pair in
 601:/usr/include/c++/6/bits/stl_map.h ****        *                the map.
 602:/usr/include/c++/6/bits/stl_map.h ****        *  @param __args  Arguments used to generate the .second for a new pair 
 603:/usr/include/c++/6/bits/stl_map.h ****        *                instance.
 604:/usr/include/c++/6/bits/stl_map.h ****        *
 605:/usr/include/c++/6/bits/stl_map.h ****        *  @return  A pair, of which the first element is an iterator that points
 606:/usr/include/c++/6/bits/stl_map.h ****        *           to the possibly inserted pair, and the second is a bool that
 607:/usr/include/c++/6/bits/stl_map.h ****        *           is true if the pair was actually inserted.
 608:/usr/include/c++/6/bits/stl_map.h ****        *
 609:/usr/include/c++/6/bits/stl_map.h ****        *  This function attempts to build and insert a (key, value) %pair into
 610:/usr/include/c++/6/bits/stl_map.h ****        *  the %map.
 611:/usr/include/c++/6/bits/stl_map.h ****        *  A %map relies on unique keys and thus a %pair is only inserted if its
 612:/usr/include/c++/6/bits/stl_map.h ****        *  first element (the key) is not already present in the %map.
 613:/usr/include/c++/6/bits/stl_map.h ****        *  If a %pair is not inserted, this function has no effect.
 614:/usr/include/c++/6/bits/stl_map.h ****        *
 615:/usr/include/c++/6/bits/stl_map.h ****        *  Insertion requires logarithmic time.
 616:/usr/include/c++/6/bits/stl_map.h ****        */
 617:/usr/include/c++/6/bits/stl_map.h ****       template <typename... _Args>
 618:/usr/include/c++/6/bits/stl_map.h ****         pair<iterator, bool>
 619:/usr/include/c++/6/bits/stl_map.h ****         try_emplace(const key_type& __k, _Args&&... __args)
 620:/usr/include/c++/6/bits/stl_map.h ****         {
 621:/usr/include/c++/6/bits/stl_map.h ****           iterator __i = lower_bound(__k);
 622:/usr/include/c++/6/bits/stl_map.h ****           if (__i == end() || key_comp()(__k, (*__i).first))
 623:/usr/include/c++/6/bits/stl_map.h ****             {
 624:/usr/include/c++/6/bits/stl_map.h ****               __i = emplace_hint(__i, std::piecewise_construct,
 625:/usr/include/c++/6/bits/stl_map.h ****                                  std::forward_as_tuple(__k),
 626:/usr/include/c++/6/bits/stl_map.h ****                                  std::forward_as_tuple(
 627:/usr/include/c++/6/bits/stl_map.h ****                                    std::forward<_Args>(__args)...));
 628:/usr/include/c++/6/bits/stl_map.h ****               return {__i, true};
 629:/usr/include/c++/6/bits/stl_map.h ****             }
 630:/usr/include/c++/6/bits/stl_map.h ****           return {__i, false};
 631:/usr/include/c++/6/bits/stl_map.h ****         }
 632:/usr/include/c++/6/bits/stl_map.h **** 
 633:/usr/include/c++/6/bits/stl_map.h ****       // move-capable overload
 634:/usr/include/c++/6/bits/stl_map.h ****       template <typename... _Args>
 635:/usr/include/c++/6/bits/stl_map.h ****         pair<iterator, bool>
 636:/usr/include/c++/6/bits/stl_map.h ****         try_emplace(key_type&& __k, _Args&&... __args)
 637:/usr/include/c++/6/bits/stl_map.h ****         {
 638:/usr/include/c++/6/bits/stl_map.h ****           iterator __i = lower_bound(__k);
 639:/usr/include/c++/6/bits/stl_map.h ****           if (__i == end() || key_comp()(__k, (*__i).first))
 640:/usr/include/c++/6/bits/stl_map.h ****             {
 641:/usr/include/c++/6/bits/stl_map.h ****               __i = emplace_hint(__i, std::piecewise_construct,
 642:/usr/include/c++/6/bits/stl_map.h ****                                  std::forward_as_tuple(std::move(__k)),
 643:/usr/include/c++/6/bits/stl_map.h ****                                  std::forward_as_tuple(
 644:/usr/include/c++/6/bits/stl_map.h ****                                    std::forward<_Args>(__args)...));
 645:/usr/include/c++/6/bits/stl_map.h ****               return {__i, true};
 646:/usr/include/c++/6/bits/stl_map.h ****             }
 647:/usr/include/c++/6/bits/stl_map.h ****           return {__i, false};
 648:/usr/include/c++/6/bits/stl_map.h ****         }
 649:/usr/include/c++/6/bits/stl_map.h **** 
 650:/usr/include/c++/6/bits/stl_map.h ****       /**
 651:/usr/include/c++/6/bits/stl_map.h ****        *  @brief Attempts to build and insert a std::pair into the %map.
 652:/usr/include/c++/6/bits/stl_map.h ****        *
GAS LISTING /tmp/ccvUPO8Q.s 			page 242


 653:/usr/include/c++/6/bits/stl_map.h ****        *  @param  __hint  An iterator that serves as a hint as to where the
 654:/usr/include/c++/6/bits/stl_map.h ****        *                  pair should be inserted.
 655:/usr/include/c++/6/bits/stl_map.h ****        *  @param __k    Key to use for finding a possibly existing pair in
 656:/usr/include/c++/6/bits/stl_map.h ****        *                the map.
 657:/usr/include/c++/6/bits/stl_map.h ****        *  @param __args  Arguments used to generate the .second for a new pair 
 658:/usr/include/c++/6/bits/stl_map.h ****        *                instance.
 659:/usr/include/c++/6/bits/stl_map.h ****        *  @return An iterator that points to the element with key of the
 660:/usr/include/c++/6/bits/stl_map.h ****        *          std::pair built from @a __args (may or may not be that
 661:/usr/include/c++/6/bits/stl_map.h ****        *          std::pair).
 662:/usr/include/c++/6/bits/stl_map.h ****        *
 663:/usr/include/c++/6/bits/stl_map.h ****        *  This function is not concerned about whether the insertion took place,
 664:/usr/include/c++/6/bits/stl_map.h ****        *  and thus does not return a boolean like the single-argument 
 665:/usr/include/c++/6/bits/stl_map.h ****        *  try_emplace() does. However, if insertion did not take place,
 666:/usr/include/c++/6/bits/stl_map.h ****        *  this function has no effect.
 667:/usr/include/c++/6/bits/stl_map.h ****        *  Note that the first parameter is only a hint and can potentially
 668:/usr/include/c++/6/bits/stl_map.h ****        *  improve the performance of the insertion process. A bad hint would
 669:/usr/include/c++/6/bits/stl_map.h ****        *  cause no gains in efficiency.
 670:/usr/include/c++/6/bits/stl_map.h ****        *
 671:/usr/include/c++/6/bits/stl_map.h ****        *  See
 672:/usr/include/c++/6/bits/stl_map.h ****        *  https://gcc.gnu.org/onlinedocs/libstdc++/manual/associative.html#containers.associative.i
 673:/usr/include/c++/6/bits/stl_map.h ****        *  for more on @a hinting.
 674:/usr/include/c++/6/bits/stl_map.h ****        *
 675:/usr/include/c++/6/bits/stl_map.h ****        *  Insertion requires logarithmic time (if the hint is not taken).
 676:/usr/include/c++/6/bits/stl_map.h ****        */
 677:/usr/include/c++/6/bits/stl_map.h ****       template <typename... _Args>
 678:/usr/include/c++/6/bits/stl_map.h ****         iterator
 679:/usr/include/c++/6/bits/stl_map.h ****         try_emplace(const_iterator __hint, const key_type& __k,
 680:/usr/include/c++/6/bits/stl_map.h ****                     _Args&&... __args)
 681:/usr/include/c++/6/bits/stl_map.h ****         {
 682:/usr/include/c++/6/bits/stl_map.h ****           iterator __i;
 683:/usr/include/c++/6/bits/stl_map.h ****           auto __true_hint = _M_t._M_get_insert_hint_unique_pos(__hint, __k);
 684:/usr/include/c++/6/bits/stl_map.h ****           if (__true_hint.second)
 685:/usr/include/c++/6/bits/stl_map.h ****             __i = emplace_hint(iterator(__true_hint.second),
 686:/usr/include/c++/6/bits/stl_map.h ****                                std::piecewise_construct,
 687:/usr/include/c++/6/bits/stl_map.h ****                                std::forward_as_tuple(__k),
 688:/usr/include/c++/6/bits/stl_map.h ****                                std::forward_as_tuple(
 689:/usr/include/c++/6/bits/stl_map.h ****                                  std::forward<_Args>(__args)...));
 690:/usr/include/c++/6/bits/stl_map.h ****           else
 691:/usr/include/c++/6/bits/stl_map.h ****             __i = iterator(__true_hint.first);
 692:/usr/include/c++/6/bits/stl_map.h ****           return __i;
 693:/usr/include/c++/6/bits/stl_map.h ****         }
 694:/usr/include/c++/6/bits/stl_map.h **** 
 695:/usr/include/c++/6/bits/stl_map.h ****       // move-capable overload
 696:/usr/include/c++/6/bits/stl_map.h ****       template <typename... _Args>
 697:/usr/include/c++/6/bits/stl_map.h ****         iterator
 698:/usr/include/c++/6/bits/stl_map.h ****         try_emplace(const_iterator __hint, key_type&& __k, _Args&&... __args)
 699:/usr/include/c++/6/bits/stl_map.h ****         {
 700:/usr/include/c++/6/bits/stl_map.h ****           iterator __i;
 701:/usr/include/c++/6/bits/stl_map.h ****           auto __true_hint = _M_t._M_get_insert_hint_unique_pos(__hint, __k);
 702:/usr/include/c++/6/bits/stl_map.h ****           if (__true_hint.second)
 703:/usr/include/c++/6/bits/stl_map.h ****             __i = emplace_hint(iterator(__true_hint.second),
 704:/usr/include/c++/6/bits/stl_map.h ****                                std::piecewise_construct,
 705:/usr/include/c++/6/bits/stl_map.h ****                                std::forward_as_tuple(std::move(__k)),
 706:/usr/include/c++/6/bits/stl_map.h ****                                std::forward_as_tuple(
 707:/usr/include/c++/6/bits/stl_map.h ****                                  std::forward<_Args>(__args)...));
 708:/usr/include/c++/6/bits/stl_map.h ****           else
 709:/usr/include/c++/6/bits/stl_map.h ****             __i = iterator(__true_hint.first);
GAS LISTING /tmp/ccvUPO8Q.s 			page 243


 710:/usr/include/c++/6/bits/stl_map.h ****           return __i;
 711:/usr/include/c++/6/bits/stl_map.h ****         }
 712:/usr/include/c++/6/bits/stl_map.h **** #endif
 713:/usr/include/c++/6/bits/stl_map.h **** 
 714:/usr/include/c++/6/bits/stl_map.h ****       /**
 715:/usr/include/c++/6/bits/stl_map.h ****        *  @brief Attempts to insert a std::pair into the %map.
 716:/usr/include/c++/6/bits/stl_map.h **** 
 717:/usr/include/c++/6/bits/stl_map.h ****        *  @param __x Pair to be inserted (see std::make_pair for easy
 718:/usr/include/c++/6/bits/stl_map.h ****        *	     creation of pairs).
 719:/usr/include/c++/6/bits/stl_map.h ****        *
 720:/usr/include/c++/6/bits/stl_map.h ****        *  @return  A pair, of which the first element is an iterator that 
 721:/usr/include/c++/6/bits/stl_map.h ****        *           points to the possibly inserted pair, and the second is 
 722:/usr/include/c++/6/bits/stl_map.h ****        *           a bool that is true if the pair was actually inserted.
 723:/usr/include/c++/6/bits/stl_map.h ****        *
 724:/usr/include/c++/6/bits/stl_map.h ****        *  This function attempts to insert a (key, value) %pair into the %map.
 725:/usr/include/c++/6/bits/stl_map.h ****        *  A %map relies on unique keys and thus a %pair is only inserted if its
 726:/usr/include/c++/6/bits/stl_map.h ****        *  first element (the key) is not already present in the %map.
 727:/usr/include/c++/6/bits/stl_map.h ****        *
 728:/usr/include/c++/6/bits/stl_map.h ****        *  Insertion requires logarithmic time.
 729:/usr/include/c++/6/bits/stl_map.h ****        */
 730:/usr/include/c++/6/bits/stl_map.h ****       std::pair<iterator, bool>
 731:/usr/include/c++/6/bits/stl_map.h ****       insert(const value_type& __x)
 732:/usr/include/c++/6/bits/stl_map.h ****       { return _M_t._M_insert_unique(__x); }
 733:/usr/include/c++/6/bits/stl_map.h **** 
 734:/usr/include/c++/6/bits/stl_map.h **** #if __cplusplus >= 201103L
 735:/usr/include/c++/6/bits/stl_map.h ****       template<typename _Pair, typename = typename
 736:/usr/include/c++/6/bits/stl_map.h **** 	       std::enable_if<std::is_constructible<value_type,
 737:/usr/include/c++/6/bits/stl_map.h **** 						    _Pair&&>::value>::type>
 738:/usr/include/c++/6/bits/stl_map.h ****         std::pair<iterator, bool>
 739:/usr/include/c++/6/bits/stl_map.h ****         insert(_Pair&& __x)
 740:/usr/include/c++/6/bits/stl_map.h ****         { return _M_t._M_insert_unique(std::forward<_Pair>(__x)); }
 741:/usr/include/c++/6/bits/stl_map.h **** #endif
 742:/usr/include/c++/6/bits/stl_map.h **** 
 743:/usr/include/c++/6/bits/stl_map.h **** #if __cplusplus >= 201103L
 744:/usr/include/c++/6/bits/stl_map.h ****       /**
 745:/usr/include/c++/6/bits/stl_map.h ****        *  @brief Attempts to insert a list of std::pairs into the %map.
 746:/usr/include/c++/6/bits/stl_map.h ****        *  @param  __list  A std::initializer_list<value_type> of pairs to be
 747:/usr/include/c++/6/bits/stl_map.h ****        *                  inserted.
 748:/usr/include/c++/6/bits/stl_map.h ****        *
 749:/usr/include/c++/6/bits/stl_map.h ****        *  Complexity similar to that of the range constructor.
 750:/usr/include/c++/6/bits/stl_map.h ****        */
 751:/usr/include/c++/6/bits/stl_map.h ****       void
 752:/usr/include/c++/6/bits/stl_map.h ****       insert(std::initializer_list<value_type> __list)
 753:/usr/include/c++/6/bits/stl_map.h ****       { insert(__list.begin(), __list.end()); }
 754:/usr/include/c++/6/bits/stl_map.h **** #endif
 755:/usr/include/c++/6/bits/stl_map.h **** 
 756:/usr/include/c++/6/bits/stl_map.h ****       /**
 757:/usr/include/c++/6/bits/stl_map.h ****        *  @brief Attempts to insert a std::pair into the %map.
 758:/usr/include/c++/6/bits/stl_map.h ****        *  @param  __position  An iterator that serves as a hint as to where the
 759:/usr/include/c++/6/bits/stl_map.h ****        *                    pair should be inserted.
 760:/usr/include/c++/6/bits/stl_map.h ****        *  @param  __x  Pair to be inserted (see std::make_pair for easy creation
 761:/usr/include/c++/6/bits/stl_map.h ****        *               of pairs).
 762:/usr/include/c++/6/bits/stl_map.h ****        *  @return An iterator that points to the element with key of
 763:/usr/include/c++/6/bits/stl_map.h ****        *           @a __x (may or may not be the %pair passed in).
 764:/usr/include/c++/6/bits/stl_map.h ****        *
 765:/usr/include/c++/6/bits/stl_map.h **** 
 766:/usr/include/c++/6/bits/stl_map.h ****        *  This function is not concerned about whether the insertion
GAS LISTING /tmp/ccvUPO8Q.s 			page 244


 767:/usr/include/c++/6/bits/stl_map.h ****        *  took place, and thus does not return a boolean like the
 768:/usr/include/c++/6/bits/stl_map.h ****        *  single-argument insert() does.  Note that the first
 769:/usr/include/c++/6/bits/stl_map.h ****        *  parameter is only a hint and can potentially improve the
 770:/usr/include/c++/6/bits/stl_map.h ****        *  performance of the insertion process.  A bad hint would
 771:/usr/include/c++/6/bits/stl_map.h ****        *  cause no gains in efficiency.
 772:/usr/include/c++/6/bits/stl_map.h ****        *
 773:/usr/include/c++/6/bits/stl_map.h ****        *  See
 774:/usr/include/c++/6/bits/stl_map.h ****        *  https://gcc.gnu.org/onlinedocs/libstdc++/manual/associative.html#containers.associative.i
 775:/usr/include/c++/6/bits/stl_map.h ****        *  for more on @a hinting.
 776:/usr/include/c++/6/bits/stl_map.h ****        *
 777:/usr/include/c++/6/bits/stl_map.h ****        *  Insertion requires logarithmic time (if the hint is not taken).
 778:/usr/include/c++/6/bits/stl_map.h ****        */
 779:/usr/include/c++/6/bits/stl_map.h ****       iterator
 780:/usr/include/c++/6/bits/stl_map.h **** #if __cplusplus >= 201103L
 781:/usr/include/c++/6/bits/stl_map.h ****       insert(const_iterator __position, const value_type& __x)
 782:/usr/include/c++/6/bits/stl_map.h **** #else
 783:/usr/include/c++/6/bits/stl_map.h ****       insert(iterator __position, const value_type& __x)
 784:/usr/include/c++/6/bits/stl_map.h **** #endif
 785:/usr/include/c++/6/bits/stl_map.h ****       { return _M_t._M_insert_unique_(__position, __x); }
 786:/usr/include/c++/6/bits/stl_map.h **** 
 787:/usr/include/c++/6/bits/stl_map.h **** #if __cplusplus >= 201103L
 788:/usr/include/c++/6/bits/stl_map.h ****       template<typename _Pair, typename = typename
 789:/usr/include/c++/6/bits/stl_map.h **** 	       std::enable_if<std::is_constructible<value_type,
 790:/usr/include/c++/6/bits/stl_map.h **** 						    _Pair&&>::value>::type>
 791:/usr/include/c++/6/bits/stl_map.h ****         iterator
 792:/usr/include/c++/6/bits/stl_map.h ****         insert(const_iterator __position, _Pair&& __x)
 793:/usr/include/c++/6/bits/stl_map.h ****         { return _M_t._M_insert_unique_(__position,
 794:/usr/include/c++/6/bits/stl_map.h **** 					std::forward<_Pair>(__x)); }
 795:/usr/include/c++/6/bits/stl_map.h **** #endif
 796:/usr/include/c++/6/bits/stl_map.h **** 
 797:/usr/include/c++/6/bits/stl_map.h ****       /**
 798:/usr/include/c++/6/bits/stl_map.h ****        *  @brief Template function that attempts to insert a range of elements.
 799:/usr/include/c++/6/bits/stl_map.h ****        *  @param  __first  Iterator pointing to the start of the range to be
 800:/usr/include/c++/6/bits/stl_map.h ****        *                   inserted.
 801:/usr/include/c++/6/bits/stl_map.h ****        *  @param  __last  Iterator pointing to the end of the range.
 802:/usr/include/c++/6/bits/stl_map.h ****        *
 803:/usr/include/c++/6/bits/stl_map.h ****        *  Complexity similar to that of the range constructor.
 804:/usr/include/c++/6/bits/stl_map.h ****        */
 805:/usr/include/c++/6/bits/stl_map.h ****       template<typename _InputIterator>
 806:/usr/include/c++/6/bits/stl_map.h ****         void
 807:/usr/include/c++/6/bits/stl_map.h ****         insert(_InputIterator __first, _InputIterator __last)
 808:/usr/include/c++/6/bits/stl_map.h ****         { _M_t._M_insert_unique(__first, __last); }
 809:/usr/include/c++/6/bits/stl_map.h **** 
 810:/usr/include/c++/6/bits/stl_map.h **** #if __cplusplus > 201402L
 811:/usr/include/c++/6/bits/stl_map.h **** #define __cpp_lib_map_insertion 201411
 812:/usr/include/c++/6/bits/stl_map.h ****       /**
 813:/usr/include/c++/6/bits/stl_map.h ****        *  @brief Attempts to insert or assign a std::pair into the %map.
 814:/usr/include/c++/6/bits/stl_map.h ****        *  @param __k    Key to use for finding a possibly existing pair in
 815:/usr/include/c++/6/bits/stl_map.h ****        *                the map.
 816:/usr/include/c++/6/bits/stl_map.h ****        *  @param __obj  Argument used to generate the .second for a pair 
 817:/usr/include/c++/6/bits/stl_map.h ****        *                instance.
 818:/usr/include/c++/6/bits/stl_map.h ****        *
 819:/usr/include/c++/6/bits/stl_map.h ****        *  @return  A pair, of which the first element is an iterator that 
 820:/usr/include/c++/6/bits/stl_map.h ****        *           points to the possibly inserted pair, and the second is 
 821:/usr/include/c++/6/bits/stl_map.h ****        *           a bool that is true if the pair was actually inserted.
 822:/usr/include/c++/6/bits/stl_map.h ****        *
 823:/usr/include/c++/6/bits/stl_map.h ****        *  This function attempts to insert a (key, value) %pair into the %map.
GAS LISTING /tmp/ccvUPO8Q.s 			page 245


 824:/usr/include/c++/6/bits/stl_map.h ****        *  A %map relies on unique keys and thus a %pair is only inserted if its
 825:/usr/include/c++/6/bits/stl_map.h ****        *  first element (the key) is not already present in the %map.
 826:/usr/include/c++/6/bits/stl_map.h ****        *  If the %pair was already in the %map, the .second of the %pair
 827:/usr/include/c++/6/bits/stl_map.h ****        *  is assigned from __obj.
 828:/usr/include/c++/6/bits/stl_map.h ****        *
 829:/usr/include/c++/6/bits/stl_map.h ****        *  Insertion requires logarithmic time.
 830:/usr/include/c++/6/bits/stl_map.h ****        */
 831:/usr/include/c++/6/bits/stl_map.h ****       template <typename _Obj>
 832:/usr/include/c++/6/bits/stl_map.h ****         pair<iterator, bool>
 833:/usr/include/c++/6/bits/stl_map.h ****         insert_or_assign(const key_type& __k, _Obj&& __obj)
 834:/usr/include/c++/6/bits/stl_map.h ****         {
 835:/usr/include/c++/6/bits/stl_map.h ****           iterator __i = lower_bound(__k);
 836:/usr/include/c++/6/bits/stl_map.h ****           if (__i == end() || key_comp()(__k, (*__i).first))
 837:/usr/include/c++/6/bits/stl_map.h ****             {
 838:/usr/include/c++/6/bits/stl_map.h ****               __i = emplace_hint(__i, std::piecewise_construct,
 839:/usr/include/c++/6/bits/stl_map.h ****                                  std::forward_as_tuple(__k),
 840:/usr/include/c++/6/bits/stl_map.h ****                                  std::forward_as_tuple(
 841:/usr/include/c++/6/bits/stl_map.h ****                                    std::forward<_Obj>(__obj)));
 842:/usr/include/c++/6/bits/stl_map.h ****               return {__i, true};
 843:/usr/include/c++/6/bits/stl_map.h ****             }
 844:/usr/include/c++/6/bits/stl_map.h ****           (*__i).second = std::forward<_Obj>(__obj);
 845:/usr/include/c++/6/bits/stl_map.h ****           return {__i, false};
 846:/usr/include/c++/6/bits/stl_map.h ****         }
 847:/usr/include/c++/6/bits/stl_map.h **** 
 848:/usr/include/c++/6/bits/stl_map.h ****       // move-capable overload
 849:/usr/include/c++/6/bits/stl_map.h ****       template <typename _Obj>
 850:/usr/include/c++/6/bits/stl_map.h ****         pair<iterator, bool>
 851:/usr/include/c++/6/bits/stl_map.h ****         insert_or_assign(key_type&& __k, _Obj&& __obj)
 852:/usr/include/c++/6/bits/stl_map.h ****         {
 853:/usr/include/c++/6/bits/stl_map.h ****           iterator __i = lower_bound(__k);
 854:/usr/include/c++/6/bits/stl_map.h ****           if (__i == end() || key_comp()(__k, (*__i).first))
 855:/usr/include/c++/6/bits/stl_map.h ****             {
 856:/usr/include/c++/6/bits/stl_map.h ****               __i = emplace_hint(__i, std::piecewise_construct,
 857:/usr/include/c++/6/bits/stl_map.h ****                                  std::forward_as_tuple(std::move(__k)),
 858:/usr/include/c++/6/bits/stl_map.h ****                                  std::forward_as_tuple(
 859:/usr/include/c++/6/bits/stl_map.h ****                                    std::forward<_Obj>(__obj)));
 860:/usr/include/c++/6/bits/stl_map.h ****               return {__i, true};
 861:/usr/include/c++/6/bits/stl_map.h ****             }
 862:/usr/include/c++/6/bits/stl_map.h ****           (*__i).second = std::forward<_Obj>(__obj);
 863:/usr/include/c++/6/bits/stl_map.h ****           return {__i, false};
 864:/usr/include/c++/6/bits/stl_map.h ****         }
 865:/usr/include/c++/6/bits/stl_map.h **** 
 866:/usr/include/c++/6/bits/stl_map.h ****       /**
 867:/usr/include/c++/6/bits/stl_map.h ****        *  @brief Attempts to insert or assign a std::pair into the %map.
 868:/usr/include/c++/6/bits/stl_map.h ****        *  @param  __hint  An iterator that serves as a hint as to where the
 869:/usr/include/c++/6/bits/stl_map.h ****        *                  pair should be inserted.
 870:/usr/include/c++/6/bits/stl_map.h ****        *  @param __k    Key to use for finding a possibly existing pair in
 871:/usr/include/c++/6/bits/stl_map.h ****        *                the map.
 872:/usr/include/c++/6/bits/stl_map.h ****        *  @param __obj  Argument used to generate the .second for a pair 
 873:/usr/include/c++/6/bits/stl_map.h ****        *                instance.
 874:/usr/include/c++/6/bits/stl_map.h ****        *
 875:/usr/include/c++/6/bits/stl_map.h ****        *  @return An iterator that points to the element with key of
 876:/usr/include/c++/6/bits/stl_map.h ****        *           @a __x (may or may not be the %pair passed in).
 877:/usr/include/c++/6/bits/stl_map.h ****        *
 878:/usr/include/c++/6/bits/stl_map.h ****        *  This function attempts to insert a (key, value) %pair into the %map.
 879:/usr/include/c++/6/bits/stl_map.h ****        *  A %map relies on unique keys and thus a %pair is only inserted if its
 880:/usr/include/c++/6/bits/stl_map.h ****        *  first element (the key) is not already present in the %map.
GAS LISTING /tmp/ccvUPO8Q.s 			page 246


 881:/usr/include/c++/6/bits/stl_map.h ****        *  If the %pair was already in the %map, the .second of the %pair
 882:/usr/include/c++/6/bits/stl_map.h ****        *  is assigned from __obj.
 883:/usr/include/c++/6/bits/stl_map.h ****        *
 884:/usr/include/c++/6/bits/stl_map.h ****        *  Insertion requires logarithmic time.
 885:/usr/include/c++/6/bits/stl_map.h ****        */
 886:/usr/include/c++/6/bits/stl_map.h ****       template <typename _Obj>
 887:/usr/include/c++/6/bits/stl_map.h ****         iterator
 888:/usr/include/c++/6/bits/stl_map.h ****         insert_or_assign(const_iterator __hint,
 889:/usr/include/c++/6/bits/stl_map.h ****                          const key_type& __k, _Obj&& __obj)
 890:/usr/include/c++/6/bits/stl_map.h ****         {
 891:/usr/include/c++/6/bits/stl_map.h ****           iterator __i;
 892:/usr/include/c++/6/bits/stl_map.h ****           auto __true_hint = _M_t._M_get_insert_hint_unique_pos(__hint, __k);
 893:/usr/include/c++/6/bits/stl_map.h ****           if (__true_hint.second)
 894:/usr/include/c++/6/bits/stl_map.h ****             {
 895:/usr/include/c++/6/bits/stl_map.h ****               return emplace_hint(iterator(__true_hint.second),
 896:/usr/include/c++/6/bits/stl_map.h ****                                   std::piecewise_construct,
 897:/usr/include/c++/6/bits/stl_map.h ****                                   std::forward_as_tuple(__k),
 898:/usr/include/c++/6/bits/stl_map.h ****                                   std::forward_as_tuple(
 899:/usr/include/c++/6/bits/stl_map.h ****                                     std::forward<_Obj>(__obj)));
 900:/usr/include/c++/6/bits/stl_map.h ****             }
 901:/usr/include/c++/6/bits/stl_map.h ****           __i = iterator(__true_hint.first);
 902:/usr/include/c++/6/bits/stl_map.h ****           (*__i).second = std::forward<_Obj>(__obj);
 903:/usr/include/c++/6/bits/stl_map.h ****           return __i;
 904:/usr/include/c++/6/bits/stl_map.h ****         }
 905:/usr/include/c++/6/bits/stl_map.h **** 
 906:/usr/include/c++/6/bits/stl_map.h ****       // move-capable overload
 907:/usr/include/c++/6/bits/stl_map.h ****       template <typename _Obj>
 908:/usr/include/c++/6/bits/stl_map.h ****         iterator
 909:/usr/include/c++/6/bits/stl_map.h ****         insert_or_assign(const_iterator __hint, key_type&& __k, _Obj&& __obj)
 910:/usr/include/c++/6/bits/stl_map.h ****         {
 911:/usr/include/c++/6/bits/stl_map.h ****           iterator __i;
 912:/usr/include/c++/6/bits/stl_map.h ****           auto __true_hint = _M_t._M_get_insert_hint_unique_pos(__hint, __k);
 913:/usr/include/c++/6/bits/stl_map.h ****           if (__true_hint.second)
 914:/usr/include/c++/6/bits/stl_map.h ****             {
 915:/usr/include/c++/6/bits/stl_map.h ****               return emplace_hint(iterator(__true_hint.second),
 916:/usr/include/c++/6/bits/stl_map.h ****                                   std::piecewise_construct,
 917:/usr/include/c++/6/bits/stl_map.h ****                                   std::forward_as_tuple(std::move(__k)),
 918:/usr/include/c++/6/bits/stl_map.h ****                                   std::forward_as_tuple(
 919:/usr/include/c++/6/bits/stl_map.h ****                                     std::forward<_Obj>(__obj)));
 920:/usr/include/c++/6/bits/stl_map.h ****             }
 921:/usr/include/c++/6/bits/stl_map.h ****           __i = iterator(__true_hint.first);
 922:/usr/include/c++/6/bits/stl_map.h ****           (*__i).second = std::forward<_Obj>(__obj);
 923:/usr/include/c++/6/bits/stl_map.h ****           return __i;
 924:/usr/include/c++/6/bits/stl_map.h ****         }
 925:/usr/include/c++/6/bits/stl_map.h **** #endif
 926:/usr/include/c++/6/bits/stl_map.h **** 
 927:/usr/include/c++/6/bits/stl_map.h **** #if __cplusplus >= 201103L
 928:/usr/include/c++/6/bits/stl_map.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 929:/usr/include/c++/6/bits/stl_map.h ****       // DR 130. Associative erase should return an iterator.
 930:/usr/include/c++/6/bits/stl_map.h ****       /**
 931:/usr/include/c++/6/bits/stl_map.h ****        *  @brief Erases an element from a %map.
 932:/usr/include/c++/6/bits/stl_map.h ****        *  @param  __position  An iterator pointing to the element to be erased.
 933:/usr/include/c++/6/bits/stl_map.h ****        *  @return An iterator pointing to the element immediately following
 934:/usr/include/c++/6/bits/stl_map.h ****        *          @a position prior to the element being erased. If no such 
 935:/usr/include/c++/6/bits/stl_map.h ****        *          element exists, end() is returned.
 936:/usr/include/c++/6/bits/stl_map.h ****        *
 937:/usr/include/c++/6/bits/stl_map.h ****        *  This function erases an element, pointed to by the given
GAS LISTING /tmp/ccvUPO8Q.s 			page 247


 938:/usr/include/c++/6/bits/stl_map.h ****        *  iterator, from a %map.  Note that this function only erases
 939:/usr/include/c++/6/bits/stl_map.h ****        *  the element, and that if the element is itself a pointer,
 940:/usr/include/c++/6/bits/stl_map.h ****        *  the pointed-to memory is not touched in any way.  Managing
 941:/usr/include/c++/6/bits/stl_map.h ****        *  the pointer is the user's responsibility.
 942:/usr/include/c++/6/bits/stl_map.h ****        */
 943:/usr/include/c++/6/bits/stl_map.h ****       iterator
 944:/usr/include/c++/6/bits/stl_map.h ****       erase(const_iterator __position)
 945:/usr/include/c++/6/bits/stl_map.h ****       { return _M_t.erase(__position); }
 946:/usr/include/c++/6/bits/stl_map.h **** 
 947:/usr/include/c++/6/bits/stl_map.h ****       // LWG 2059
 948:/usr/include/c++/6/bits/stl_map.h ****       _GLIBCXX_ABI_TAG_CXX11
 949:/usr/include/c++/6/bits/stl_map.h ****       iterator
 950:/usr/include/c++/6/bits/stl_map.h ****       erase(iterator __position)
 951:/usr/include/c++/6/bits/stl_map.h ****       { return _M_t.erase(__position); }
 952:/usr/include/c++/6/bits/stl_map.h **** #else
 953:/usr/include/c++/6/bits/stl_map.h ****       /**
 954:/usr/include/c++/6/bits/stl_map.h ****        *  @brief Erases an element from a %map.
 955:/usr/include/c++/6/bits/stl_map.h ****        *  @param  __position  An iterator pointing to the element to be erased.
 956:/usr/include/c++/6/bits/stl_map.h ****        *
 957:/usr/include/c++/6/bits/stl_map.h ****        *  This function erases an element, pointed to by the given
 958:/usr/include/c++/6/bits/stl_map.h ****        *  iterator, from a %map.  Note that this function only erases
 959:/usr/include/c++/6/bits/stl_map.h ****        *  the element, and that if the element is itself a pointer,
 960:/usr/include/c++/6/bits/stl_map.h ****        *  the pointed-to memory is not touched in any way.  Managing
 961:/usr/include/c++/6/bits/stl_map.h ****        *  the pointer is the user's responsibility.
 962:/usr/include/c++/6/bits/stl_map.h ****        */
 963:/usr/include/c++/6/bits/stl_map.h ****       void
 964:/usr/include/c++/6/bits/stl_map.h ****       erase(iterator __position)
 965:/usr/include/c++/6/bits/stl_map.h ****       { _M_t.erase(__position); }
 966:/usr/include/c++/6/bits/stl_map.h **** #endif
 967:/usr/include/c++/6/bits/stl_map.h **** 
 968:/usr/include/c++/6/bits/stl_map.h ****       /**
 969:/usr/include/c++/6/bits/stl_map.h ****        *  @brief Erases elements according to the provided key.
 970:/usr/include/c++/6/bits/stl_map.h ****        *  @param  __x  Key of element to be erased.
 971:/usr/include/c++/6/bits/stl_map.h ****        *  @return  The number of elements erased.
 972:/usr/include/c++/6/bits/stl_map.h ****        *
 973:/usr/include/c++/6/bits/stl_map.h ****        *  This function erases all the elements located by the given key from
 974:/usr/include/c++/6/bits/stl_map.h ****        *  a %map.
 975:/usr/include/c++/6/bits/stl_map.h ****        *  Note that this function only erases the element, and that if
 976:/usr/include/c++/6/bits/stl_map.h ****        *  the element is itself a pointer, the pointed-to memory is not touched
 977:/usr/include/c++/6/bits/stl_map.h ****        *  in any way.  Managing the pointer is the user's responsibility.
 978:/usr/include/c++/6/bits/stl_map.h ****        */
 979:/usr/include/c++/6/bits/stl_map.h ****       size_type
 980:/usr/include/c++/6/bits/stl_map.h ****       erase(const key_type& __x)
 981:/usr/include/c++/6/bits/stl_map.h ****       { return _M_t.erase(__x); }
 982:/usr/include/c++/6/bits/stl_map.h **** 
 983:/usr/include/c++/6/bits/stl_map.h **** #if __cplusplus >= 201103L
 984:/usr/include/c++/6/bits/stl_map.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 985:/usr/include/c++/6/bits/stl_map.h ****       // DR 130. Associative erase should return an iterator.
 986:/usr/include/c++/6/bits/stl_map.h ****       /**
 987:/usr/include/c++/6/bits/stl_map.h ****        *  @brief Erases a [first,last) range of elements from a %map.
 988:/usr/include/c++/6/bits/stl_map.h ****        *  @param  __first  Iterator pointing to the start of the range to be
 989:/usr/include/c++/6/bits/stl_map.h ****        *                   erased.
 990:/usr/include/c++/6/bits/stl_map.h ****        *  @param __last Iterator pointing to the end of the range to
 991:/usr/include/c++/6/bits/stl_map.h ****        *                be erased.
 992:/usr/include/c++/6/bits/stl_map.h ****        *  @return The iterator @a __last.
 993:/usr/include/c++/6/bits/stl_map.h ****        *
 994:/usr/include/c++/6/bits/stl_map.h ****        *  This function erases a sequence of elements from a %map.
GAS LISTING /tmp/ccvUPO8Q.s 			page 248


 995:/usr/include/c++/6/bits/stl_map.h ****        *  Note that this function only erases the element, and that if
 996:/usr/include/c++/6/bits/stl_map.h ****        *  the element is itself a pointer, the pointed-to memory is not touched
 997:/usr/include/c++/6/bits/stl_map.h ****        *  in any way.  Managing the pointer is the user's responsibility.
 998:/usr/include/c++/6/bits/stl_map.h ****        */
 999:/usr/include/c++/6/bits/stl_map.h ****       iterator
1000:/usr/include/c++/6/bits/stl_map.h ****       erase(const_iterator __first, const_iterator __last)
1001:/usr/include/c++/6/bits/stl_map.h ****       { return _M_t.erase(__first, __last); }
1002:/usr/include/c++/6/bits/stl_map.h **** #else
1003:/usr/include/c++/6/bits/stl_map.h ****       /**
1004:/usr/include/c++/6/bits/stl_map.h ****        *  @brief Erases a [__first,__last) range of elements from a %map.
1005:/usr/include/c++/6/bits/stl_map.h ****        *  @param  __first  Iterator pointing to the start of the range to be
1006:/usr/include/c++/6/bits/stl_map.h ****        *                   erased.
1007:/usr/include/c++/6/bits/stl_map.h ****        *  @param __last Iterator pointing to the end of the range to
1008:/usr/include/c++/6/bits/stl_map.h ****        *                be erased.
1009:/usr/include/c++/6/bits/stl_map.h ****        *
1010:/usr/include/c++/6/bits/stl_map.h ****        *  This function erases a sequence of elements from a %map.
1011:/usr/include/c++/6/bits/stl_map.h ****        *  Note that this function only erases the element, and that if
1012:/usr/include/c++/6/bits/stl_map.h ****        *  the element is itself a pointer, the pointed-to memory is not touched
1013:/usr/include/c++/6/bits/stl_map.h ****        *  in any way.  Managing the pointer is the user's responsibility.
1014:/usr/include/c++/6/bits/stl_map.h ****        */
1015:/usr/include/c++/6/bits/stl_map.h ****       void
1016:/usr/include/c++/6/bits/stl_map.h ****       erase(iterator __first, iterator __last)
1017:/usr/include/c++/6/bits/stl_map.h ****       { _M_t.erase(__first, __last); }
1018:/usr/include/c++/6/bits/stl_map.h **** #endif
1019:/usr/include/c++/6/bits/stl_map.h **** 
1020:/usr/include/c++/6/bits/stl_map.h ****       /**
1021:/usr/include/c++/6/bits/stl_map.h ****        *  @brief  Swaps data with another %map.
1022:/usr/include/c++/6/bits/stl_map.h ****        *  @param  __x  A %map of the same element and allocator types.
1023:/usr/include/c++/6/bits/stl_map.h ****        *
1024:/usr/include/c++/6/bits/stl_map.h ****        *  This exchanges the elements between two maps in constant
1025:/usr/include/c++/6/bits/stl_map.h ****        *  time.  (It is only swapping a pointer, an integer, and an
1026:/usr/include/c++/6/bits/stl_map.h ****        *  instance of the @c Compare type (which itself is often
1027:/usr/include/c++/6/bits/stl_map.h ****        *  stateless and empty), so it should be quite fast.)  Note
1028:/usr/include/c++/6/bits/stl_map.h ****        *  that the global std::swap() function is specialized such
1029:/usr/include/c++/6/bits/stl_map.h ****        *  that std::swap(m1,m2) will feed to this function.
1030:/usr/include/c++/6/bits/stl_map.h ****        */
1031:/usr/include/c++/6/bits/stl_map.h ****       void
1032:/usr/include/c++/6/bits/stl_map.h ****       swap(map& __x)
1033:/usr/include/c++/6/bits/stl_map.h ****       _GLIBCXX_NOEXCEPT_IF(__is_nothrow_swappable<_Compare>::value)
1034:/usr/include/c++/6/bits/stl_map.h ****       { _M_t.swap(__x._M_t); }
1035:/usr/include/c++/6/bits/stl_map.h **** 
1036:/usr/include/c++/6/bits/stl_map.h ****       /**
1037:/usr/include/c++/6/bits/stl_map.h ****        *  Erases all elements in a %map.  Note that this function only
1038:/usr/include/c++/6/bits/stl_map.h ****        *  erases the elements, and that if the elements themselves are
1039:/usr/include/c++/6/bits/stl_map.h ****        *  pointers, the pointed-to memory is not touched in any way.
1040:/usr/include/c++/6/bits/stl_map.h ****        *  Managing the pointer is the user's responsibility.
1041:/usr/include/c++/6/bits/stl_map.h ****        */
1042:/usr/include/c++/6/bits/stl_map.h ****       void
1043:/usr/include/c++/6/bits/stl_map.h ****       clear() _GLIBCXX_NOEXCEPT
1044:/usr/include/c++/6/bits/stl_map.h ****       { _M_t.clear(); }
1045:/usr/include/c++/6/bits/stl_map.h **** 
1046:/usr/include/c++/6/bits/stl_map.h ****       // observers
1047:/usr/include/c++/6/bits/stl_map.h ****       /**
1048:/usr/include/c++/6/bits/stl_map.h ****        *  Returns the key comparison object out of which the %map was
1049:/usr/include/c++/6/bits/stl_map.h ****        *  constructed.
1050:/usr/include/c++/6/bits/stl_map.h ****        */
1051:/usr/include/c++/6/bits/stl_map.h ****       key_compare
GAS LISTING /tmp/ccvUPO8Q.s 			page 249


1052:/usr/include/c++/6/bits/stl_map.h ****       key_comp() const
1053:/usr/include/c++/6/bits/stl_map.h ****       { return _M_t.key_comp(); }
1054:/usr/include/c++/6/bits/stl_map.h **** 
1055:/usr/include/c++/6/bits/stl_map.h ****       /**
1056:/usr/include/c++/6/bits/stl_map.h ****        *  Returns a value comparison object, built from the key comparison
1057:/usr/include/c++/6/bits/stl_map.h ****        *  object out of which the %map was constructed.
1058:/usr/include/c++/6/bits/stl_map.h ****        */
1059:/usr/include/c++/6/bits/stl_map.h ****       value_compare
1060:/usr/include/c++/6/bits/stl_map.h ****       value_comp() const
1061:/usr/include/c++/6/bits/stl_map.h ****       { return value_compare(_M_t.key_comp()); }
1062:/usr/include/c++/6/bits/stl_map.h **** 
1063:/usr/include/c++/6/bits/stl_map.h ****       // [23.3.1.3] map operations
1064:/usr/include/c++/6/bits/stl_map.h **** 
1065:/usr/include/c++/6/bits/stl_map.h ****       //@{
1066:/usr/include/c++/6/bits/stl_map.h ****       /**
1067:/usr/include/c++/6/bits/stl_map.h ****        *  @brief Tries to locate an element in a %map.
1068:/usr/include/c++/6/bits/stl_map.h ****        *  @param  __x  Key of (key, value) %pair to be located.
1069:/usr/include/c++/6/bits/stl_map.h ****        *  @return  Iterator pointing to sought-after element, or end() if not
1070:/usr/include/c++/6/bits/stl_map.h ****        *           found.
1071:/usr/include/c++/6/bits/stl_map.h ****        *
1072:/usr/include/c++/6/bits/stl_map.h ****        *  This function takes a key and tries to locate the element with which
1073:/usr/include/c++/6/bits/stl_map.h ****        *  the key matches.  If successful the function returns an iterator
1074:/usr/include/c++/6/bits/stl_map.h ****        *  pointing to the sought after %pair.  If unsuccessful it returns the
1075:/usr/include/c++/6/bits/stl_map.h ****        *  past-the-end ( @c end() ) iterator.
1076:/usr/include/c++/6/bits/stl_map.h ****        */
1077:/usr/include/c++/6/bits/stl_map.h **** 
1078:/usr/include/c++/6/bits/stl_map.h ****       iterator
1079:/usr/include/c++/6/bits/stl_map.h ****       find(const key_type& __x)
 5647              		.loc 26 1079 0
 5648              		.cfi_startproc
 5649 0000 55       		pushq	%rbp
 5650              		.cfi_def_cfa_offset 16
 5651              		.cfi_offset 6, -16
 5652 0001 4889E5   		movq	%rsp, %rbp
 5653              		.cfi_def_cfa_register 6
 5654 0004 4883EC10 		subq	$16, %rsp
 5655 0008 48897DF8 		movq	%rdi, -8(%rbp)
 5656 000c 488975F0 		movq	%rsi, -16(%rbp)
1080:/usr/include/c++/6/bits/stl_map.h ****       { return _M_t.find(__x); }
 5657              		.loc 26 1080 0
 5658 0010 488B45F8 		movq	-8(%rbp), %rax
 5659 0014 488B55F0 		movq	-16(%rbp), %rdx
 5660 0018 4889D6   		movq	%rdx, %rsi
 5661 001b 4889C7   		movq	%rax, %rdi
 5662 001e E8000000 		call	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt1
 5662      00
 5663 0023 C9       		leave
 5664              		.cfi_def_cfa 7, 8
 5665 0024 C3       		ret
 5666              		.cfi_endproc
 5667              	.LFE11670:
 5669              		.section	.text._ZNSt3mapIN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS0_8functionIFvS4_EEENS2_10compa
 5670              		.align 2
 5671              		.weak	_ZNSt3mapIN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS0_8functionIFvS4_EEENS2_10comparatorESaI
 5673              	_ZNSt3mapIN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS0_8functionIFvS4_EEENS2_10comparatorESaISt4pair
 5674              	.LFB11671:
 356:/usr/include/c++/6/bits/stl_map.h ****       { return _M_t.end(); }
GAS LISTING /tmp/ccvUPO8Q.s 			page 250


 5675              		.loc 26 356 0
 5676              		.cfi_startproc
 5677 0000 55       		pushq	%rbp
 5678              		.cfi_def_cfa_offset 16
 5679              		.cfi_offset 6, -16
 5680 0001 4889E5   		movq	%rsp, %rbp
 5681              		.cfi_def_cfa_register 6
 5682 0004 4883EC10 		subq	$16, %rsp
 5683 0008 48897DF8 		movq	%rdi, -8(%rbp)
 357:/usr/include/c++/6/bits/stl_map.h **** 
 5684              		.loc 26 357 0
 5685 000c 488B45F8 		movq	-8(%rbp), %rax
 5686 0010 4889C7   		movq	%rax, %rdi
 5687 0013 E8000000 		call	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt1
 5687      00
 5688 0018 C9       		leave
 5689              		.cfi_def_cfa 7, 8
 5690 0019 C3       		ret
 5691              		.cfi_endproc
 5692              	.LFE11671:
 5694              		.section	.text._ZNKSt17_Rb_tree_iteratorISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS1_8fun
 5695              		.align 2
 5696              		.weak	_ZNKSt17_Rb_tree_iteratorISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS1_8functionIFvS
 5698              	_ZNKSt17_Rb_tree_iteratorISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS1_8functionIFvS5_EEEEE
 5699              	.LFB11672:
 5700              		.file 27 "/usr/include/c++/6/bits/stl_tree.h"
   1:/usr/include/c++/6/bits/stl_tree.h **** // RB tree implementation -*- C++ -*-
   2:/usr/include/c++/6/bits/stl_tree.h **** 
   3:/usr/include/c++/6/bits/stl_tree.h **** // Copyright (C) 2001-2016 Free Software Foundation, Inc.
   4:/usr/include/c++/6/bits/stl_tree.h **** //
   5:/usr/include/c++/6/bits/stl_tree.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/6/bits/stl_tree.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/6/bits/stl_tree.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/6/bits/stl_tree.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/6/bits/stl_tree.h **** // any later version.
  10:/usr/include/c++/6/bits/stl_tree.h **** 
  11:/usr/include/c++/6/bits/stl_tree.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/6/bits/stl_tree.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/6/bits/stl_tree.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/6/bits/stl_tree.h **** // GNU General Public License for more details.
  15:/usr/include/c++/6/bits/stl_tree.h **** 
  16:/usr/include/c++/6/bits/stl_tree.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/6/bits/stl_tree.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/6/bits/stl_tree.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/6/bits/stl_tree.h **** 
  20:/usr/include/c++/6/bits/stl_tree.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/6/bits/stl_tree.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/6/bits/stl_tree.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/6/bits/stl_tree.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/6/bits/stl_tree.h **** 
  25:/usr/include/c++/6/bits/stl_tree.h **** /*
  26:/usr/include/c++/6/bits/stl_tree.h ****  *
  27:/usr/include/c++/6/bits/stl_tree.h ****  * Copyright (c) 1996,1997
  28:/usr/include/c++/6/bits/stl_tree.h ****  * Silicon Graphics Computer Systems, Inc.
  29:/usr/include/c++/6/bits/stl_tree.h ****  *
  30:/usr/include/c++/6/bits/stl_tree.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:/usr/include/c++/6/bits/stl_tree.h ****  * and its documentation for any purpose is hereby granted without fee,
GAS LISTING /tmp/ccvUPO8Q.s 			page 251


  32:/usr/include/c++/6/bits/stl_tree.h ****  * provided that the above copyright notice appear in all copies and
  33:/usr/include/c++/6/bits/stl_tree.h ****  * that both that copyright notice and this permission notice appear
  34:/usr/include/c++/6/bits/stl_tree.h ****  * in supporting documentation.  Silicon Graphics makes no
  35:/usr/include/c++/6/bits/stl_tree.h ****  * representations about the suitability of this software for any
  36:/usr/include/c++/6/bits/stl_tree.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:/usr/include/c++/6/bits/stl_tree.h ****  *
  38:/usr/include/c++/6/bits/stl_tree.h ****  *
  39:/usr/include/c++/6/bits/stl_tree.h ****  * Copyright (c) 1994
  40:/usr/include/c++/6/bits/stl_tree.h ****  * Hewlett-Packard Company
  41:/usr/include/c++/6/bits/stl_tree.h ****  *
  42:/usr/include/c++/6/bits/stl_tree.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:/usr/include/c++/6/bits/stl_tree.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:/usr/include/c++/6/bits/stl_tree.h ****  * provided that the above copyright notice appear in all copies and
  45:/usr/include/c++/6/bits/stl_tree.h ****  * that both that copyright notice and this permission notice appear
  46:/usr/include/c++/6/bits/stl_tree.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  47:/usr/include/c++/6/bits/stl_tree.h ****  * representations about the suitability of this software for any
  48:/usr/include/c++/6/bits/stl_tree.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:/usr/include/c++/6/bits/stl_tree.h ****  *
  50:/usr/include/c++/6/bits/stl_tree.h ****  *
  51:/usr/include/c++/6/bits/stl_tree.h ****  */
  52:/usr/include/c++/6/bits/stl_tree.h **** 
  53:/usr/include/c++/6/bits/stl_tree.h **** /** @file bits/stl_tree.h
  54:/usr/include/c++/6/bits/stl_tree.h ****  *  This is an internal header file, included by other library headers.
  55:/usr/include/c++/6/bits/stl_tree.h ****  *  Do not attempt to use it directly. @headername{map,set}
  56:/usr/include/c++/6/bits/stl_tree.h ****  */
  57:/usr/include/c++/6/bits/stl_tree.h **** 
  58:/usr/include/c++/6/bits/stl_tree.h **** #ifndef _STL_TREE_H
  59:/usr/include/c++/6/bits/stl_tree.h **** #define _STL_TREE_H 1
  60:/usr/include/c++/6/bits/stl_tree.h **** 
  61:/usr/include/c++/6/bits/stl_tree.h **** #pragma GCC system_header
  62:/usr/include/c++/6/bits/stl_tree.h **** 
  63:/usr/include/c++/6/bits/stl_tree.h **** #include <bits/stl_algobase.h>
  64:/usr/include/c++/6/bits/stl_tree.h **** #include <bits/allocator.h>
  65:/usr/include/c++/6/bits/stl_tree.h **** #include <bits/stl_function.h>
  66:/usr/include/c++/6/bits/stl_tree.h **** #include <bits/cpp_type_traits.h>
  67:/usr/include/c++/6/bits/stl_tree.h **** #include <ext/alloc_traits.h>
  68:/usr/include/c++/6/bits/stl_tree.h **** #if __cplusplus >= 201103L
  69:/usr/include/c++/6/bits/stl_tree.h **** #include <ext/aligned_buffer.h>
  70:/usr/include/c++/6/bits/stl_tree.h **** #endif
  71:/usr/include/c++/6/bits/stl_tree.h **** 
  72:/usr/include/c++/6/bits/stl_tree.h **** namespace std _GLIBCXX_VISIBILITY(default)
  73:/usr/include/c++/6/bits/stl_tree.h **** {
  74:/usr/include/c++/6/bits/stl_tree.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  75:/usr/include/c++/6/bits/stl_tree.h **** 
  76:/usr/include/c++/6/bits/stl_tree.h **** #if __cplusplus > 201103L
  77:/usr/include/c++/6/bits/stl_tree.h **** # define __cpp_lib_generic_associative_lookup 201304
  78:/usr/include/c++/6/bits/stl_tree.h **** #endif
  79:/usr/include/c++/6/bits/stl_tree.h **** 
  80:/usr/include/c++/6/bits/stl_tree.h ****   // Red-black tree class, designed for use in implementing STL
  81:/usr/include/c++/6/bits/stl_tree.h ****   // associative containers (set, multiset, map, and multimap). The
  82:/usr/include/c++/6/bits/stl_tree.h ****   // insertion and deletion algorithms are based on those in Cormen,
  83:/usr/include/c++/6/bits/stl_tree.h ****   // Leiserson, and Rivest, Introduction to Algorithms (MIT Press,
  84:/usr/include/c++/6/bits/stl_tree.h ****   // 1990), except that
  85:/usr/include/c++/6/bits/stl_tree.h ****   //
  86:/usr/include/c++/6/bits/stl_tree.h ****   // (1) the header cell is maintained with links not only to the root
  87:/usr/include/c++/6/bits/stl_tree.h ****   // but also to the leftmost node of the tree, to enable constant
  88:/usr/include/c++/6/bits/stl_tree.h ****   // time begin(), and to the rightmost node of the tree, to enable
GAS LISTING /tmp/ccvUPO8Q.s 			page 252


  89:/usr/include/c++/6/bits/stl_tree.h ****   // linear time performance when used with the generic set algorithms
  90:/usr/include/c++/6/bits/stl_tree.h ****   // (set_union, etc.)
  91:/usr/include/c++/6/bits/stl_tree.h ****   // 
  92:/usr/include/c++/6/bits/stl_tree.h ****   // (2) when a node being deleted has two children its successor node
  93:/usr/include/c++/6/bits/stl_tree.h ****   // is relinked into its place, rather than copied, so that the only
  94:/usr/include/c++/6/bits/stl_tree.h ****   // iterators invalidated are those referring to the deleted node.
  95:/usr/include/c++/6/bits/stl_tree.h **** 
  96:/usr/include/c++/6/bits/stl_tree.h ****   enum _Rb_tree_color { _S_red = false, _S_black = true };
  97:/usr/include/c++/6/bits/stl_tree.h **** 
  98:/usr/include/c++/6/bits/stl_tree.h ****   struct _Rb_tree_node_base
  99:/usr/include/c++/6/bits/stl_tree.h ****   {
 100:/usr/include/c++/6/bits/stl_tree.h ****     typedef _Rb_tree_node_base* _Base_ptr;
 101:/usr/include/c++/6/bits/stl_tree.h ****     typedef const _Rb_tree_node_base* _Const_Base_ptr;
 102:/usr/include/c++/6/bits/stl_tree.h **** 
 103:/usr/include/c++/6/bits/stl_tree.h ****     _Rb_tree_color	_M_color;
 104:/usr/include/c++/6/bits/stl_tree.h ****     _Base_ptr		_M_parent;
 105:/usr/include/c++/6/bits/stl_tree.h ****     _Base_ptr		_M_left;
 106:/usr/include/c++/6/bits/stl_tree.h ****     _Base_ptr		_M_right;
 107:/usr/include/c++/6/bits/stl_tree.h **** 
 108:/usr/include/c++/6/bits/stl_tree.h ****     static _Base_ptr
 109:/usr/include/c++/6/bits/stl_tree.h ****     _S_minimum(_Base_ptr __x) _GLIBCXX_NOEXCEPT
 110:/usr/include/c++/6/bits/stl_tree.h ****     {
 111:/usr/include/c++/6/bits/stl_tree.h ****       while (__x->_M_left != 0) __x = __x->_M_left;
 112:/usr/include/c++/6/bits/stl_tree.h ****       return __x;
 113:/usr/include/c++/6/bits/stl_tree.h ****     }
 114:/usr/include/c++/6/bits/stl_tree.h **** 
 115:/usr/include/c++/6/bits/stl_tree.h ****     static _Const_Base_ptr
 116:/usr/include/c++/6/bits/stl_tree.h ****     _S_minimum(_Const_Base_ptr __x) _GLIBCXX_NOEXCEPT
 117:/usr/include/c++/6/bits/stl_tree.h ****     {
 118:/usr/include/c++/6/bits/stl_tree.h ****       while (__x->_M_left != 0) __x = __x->_M_left;
 119:/usr/include/c++/6/bits/stl_tree.h ****       return __x;
 120:/usr/include/c++/6/bits/stl_tree.h ****     }
 121:/usr/include/c++/6/bits/stl_tree.h **** 
 122:/usr/include/c++/6/bits/stl_tree.h ****     static _Base_ptr
 123:/usr/include/c++/6/bits/stl_tree.h ****     _S_maximum(_Base_ptr __x) _GLIBCXX_NOEXCEPT
 124:/usr/include/c++/6/bits/stl_tree.h ****     {
 125:/usr/include/c++/6/bits/stl_tree.h ****       while (__x->_M_right != 0) __x = __x->_M_right;
 126:/usr/include/c++/6/bits/stl_tree.h ****       return __x;
 127:/usr/include/c++/6/bits/stl_tree.h ****     }
 128:/usr/include/c++/6/bits/stl_tree.h **** 
 129:/usr/include/c++/6/bits/stl_tree.h ****     static _Const_Base_ptr
 130:/usr/include/c++/6/bits/stl_tree.h ****     _S_maximum(_Const_Base_ptr __x) _GLIBCXX_NOEXCEPT
 131:/usr/include/c++/6/bits/stl_tree.h ****     {
 132:/usr/include/c++/6/bits/stl_tree.h ****       while (__x->_M_right != 0) __x = __x->_M_right;
 133:/usr/include/c++/6/bits/stl_tree.h ****       return __x;
 134:/usr/include/c++/6/bits/stl_tree.h ****     }
 135:/usr/include/c++/6/bits/stl_tree.h ****   };
 136:/usr/include/c++/6/bits/stl_tree.h **** 
 137:/usr/include/c++/6/bits/stl_tree.h ****   template<typename _Val>
 138:/usr/include/c++/6/bits/stl_tree.h ****     struct _Rb_tree_node : public _Rb_tree_node_base
 139:/usr/include/c++/6/bits/stl_tree.h ****     {
 140:/usr/include/c++/6/bits/stl_tree.h ****       typedef _Rb_tree_node<_Val>* _Link_type;
 141:/usr/include/c++/6/bits/stl_tree.h **** 
 142:/usr/include/c++/6/bits/stl_tree.h **** #if __cplusplus < 201103L
 143:/usr/include/c++/6/bits/stl_tree.h ****       _Val _M_value_field;
 144:/usr/include/c++/6/bits/stl_tree.h **** 
 145:/usr/include/c++/6/bits/stl_tree.h ****       _Val*
GAS LISTING /tmp/ccvUPO8Q.s 			page 253


 146:/usr/include/c++/6/bits/stl_tree.h ****       _M_valptr()
 147:/usr/include/c++/6/bits/stl_tree.h ****       { return std::__addressof(_M_value_field); }
 148:/usr/include/c++/6/bits/stl_tree.h **** 
 149:/usr/include/c++/6/bits/stl_tree.h ****       const _Val*
 150:/usr/include/c++/6/bits/stl_tree.h ****       _M_valptr() const
 151:/usr/include/c++/6/bits/stl_tree.h ****       { return std::__addressof(_M_value_field); }
 152:/usr/include/c++/6/bits/stl_tree.h **** #else
 153:/usr/include/c++/6/bits/stl_tree.h ****       __gnu_cxx::__aligned_membuf<_Val> _M_storage;
 154:/usr/include/c++/6/bits/stl_tree.h **** 
 155:/usr/include/c++/6/bits/stl_tree.h ****       _Val*
 156:/usr/include/c++/6/bits/stl_tree.h ****       _M_valptr()
 157:/usr/include/c++/6/bits/stl_tree.h ****       { return _M_storage._M_ptr(); }
 158:/usr/include/c++/6/bits/stl_tree.h **** 
 159:/usr/include/c++/6/bits/stl_tree.h ****       const _Val*
 160:/usr/include/c++/6/bits/stl_tree.h ****       _M_valptr() const
 161:/usr/include/c++/6/bits/stl_tree.h ****       { return _M_storage._M_ptr(); }
 162:/usr/include/c++/6/bits/stl_tree.h **** #endif
 163:/usr/include/c++/6/bits/stl_tree.h ****     };
 164:/usr/include/c++/6/bits/stl_tree.h **** 
 165:/usr/include/c++/6/bits/stl_tree.h ****   _GLIBCXX_PURE _Rb_tree_node_base*
 166:/usr/include/c++/6/bits/stl_tree.h ****   _Rb_tree_increment(_Rb_tree_node_base* __x) throw ();
 167:/usr/include/c++/6/bits/stl_tree.h **** 
 168:/usr/include/c++/6/bits/stl_tree.h ****   _GLIBCXX_PURE const _Rb_tree_node_base*
 169:/usr/include/c++/6/bits/stl_tree.h ****   _Rb_tree_increment(const _Rb_tree_node_base* __x) throw ();
 170:/usr/include/c++/6/bits/stl_tree.h **** 
 171:/usr/include/c++/6/bits/stl_tree.h ****   _GLIBCXX_PURE _Rb_tree_node_base*
 172:/usr/include/c++/6/bits/stl_tree.h ****   _Rb_tree_decrement(_Rb_tree_node_base* __x) throw ();
 173:/usr/include/c++/6/bits/stl_tree.h **** 
 174:/usr/include/c++/6/bits/stl_tree.h ****   _GLIBCXX_PURE const _Rb_tree_node_base*
 175:/usr/include/c++/6/bits/stl_tree.h ****   _Rb_tree_decrement(const _Rb_tree_node_base* __x) throw ();
 176:/usr/include/c++/6/bits/stl_tree.h **** 
 177:/usr/include/c++/6/bits/stl_tree.h ****   template<typename _Tp>
 178:/usr/include/c++/6/bits/stl_tree.h ****     struct _Rb_tree_iterator
 179:/usr/include/c++/6/bits/stl_tree.h ****     {
 180:/usr/include/c++/6/bits/stl_tree.h ****       typedef _Tp  value_type;
 181:/usr/include/c++/6/bits/stl_tree.h ****       typedef _Tp& reference;
 182:/usr/include/c++/6/bits/stl_tree.h ****       typedef _Tp* pointer;
 183:/usr/include/c++/6/bits/stl_tree.h **** 
 184:/usr/include/c++/6/bits/stl_tree.h ****       typedef bidirectional_iterator_tag iterator_category;
 185:/usr/include/c++/6/bits/stl_tree.h ****       typedef ptrdiff_t                  difference_type;
 186:/usr/include/c++/6/bits/stl_tree.h **** 
 187:/usr/include/c++/6/bits/stl_tree.h ****       typedef _Rb_tree_iterator<_Tp>        _Self;
 188:/usr/include/c++/6/bits/stl_tree.h ****       typedef _Rb_tree_node_base::_Base_ptr _Base_ptr;
 189:/usr/include/c++/6/bits/stl_tree.h ****       typedef _Rb_tree_node<_Tp>*           _Link_type;
 190:/usr/include/c++/6/bits/stl_tree.h **** 
 191:/usr/include/c++/6/bits/stl_tree.h ****       _Rb_tree_iterator() _GLIBCXX_NOEXCEPT
 192:/usr/include/c++/6/bits/stl_tree.h ****       : _M_node() { }
 193:/usr/include/c++/6/bits/stl_tree.h **** 
 194:/usr/include/c++/6/bits/stl_tree.h ****       explicit
 195:/usr/include/c++/6/bits/stl_tree.h ****       _Rb_tree_iterator(_Base_ptr __x) _GLIBCXX_NOEXCEPT
 196:/usr/include/c++/6/bits/stl_tree.h ****       : _M_node(__x) { }
 197:/usr/include/c++/6/bits/stl_tree.h **** 
 198:/usr/include/c++/6/bits/stl_tree.h ****       reference
 199:/usr/include/c++/6/bits/stl_tree.h ****       operator*() const _GLIBCXX_NOEXCEPT
 200:/usr/include/c++/6/bits/stl_tree.h ****       { return *static_cast<_Link_type>(_M_node)->_M_valptr(); }
 201:/usr/include/c++/6/bits/stl_tree.h **** 
 202:/usr/include/c++/6/bits/stl_tree.h ****       pointer
GAS LISTING /tmp/ccvUPO8Q.s 			page 254


 203:/usr/include/c++/6/bits/stl_tree.h ****       operator->() const _GLIBCXX_NOEXCEPT
 204:/usr/include/c++/6/bits/stl_tree.h ****       { return static_cast<_Link_type> (_M_node)->_M_valptr(); }
 205:/usr/include/c++/6/bits/stl_tree.h **** 
 206:/usr/include/c++/6/bits/stl_tree.h ****       _Self&
 207:/usr/include/c++/6/bits/stl_tree.h ****       operator++() _GLIBCXX_NOEXCEPT
 208:/usr/include/c++/6/bits/stl_tree.h ****       {
 209:/usr/include/c++/6/bits/stl_tree.h **** 	_M_node = _Rb_tree_increment(_M_node);
 210:/usr/include/c++/6/bits/stl_tree.h **** 	return *this;
 211:/usr/include/c++/6/bits/stl_tree.h ****       }
 212:/usr/include/c++/6/bits/stl_tree.h **** 
 213:/usr/include/c++/6/bits/stl_tree.h ****       _Self
 214:/usr/include/c++/6/bits/stl_tree.h ****       operator++(int) _GLIBCXX_NOEXCEPT
 215:/usr/include/c++/6/bits/stl_tree.h ****       {
 216:/usr/include/c++/6/bits/stl_tree.h **** 	_Self __tmp = *this;
 217:/usr/include/c++/6/bits/stl_tree.h **** 	_M_node = _Rb_tree_increment(_M_node);
 218:/usr/include/c++/6/bits/stl_tree.h **** 	return __tmp;
 219:/usr/include/c++/6/bits/stl_tree.h ****       }
 220:/usr/include/c++/6/bits/stl_tree.h **** 
 221:/usr/include/c++/6/bits/stl_tree.h ****       _Self&
 222:/usr/include/c++/6/bits/stl_tree.h ****       operator--() _GLIBCXX_NOEXCEPT
 223:/usr/include/c++/6/bits/stl_tree.h ****       {
 224:/usr/include/c++/6/bits/stl_tree.h **** 	_M_node = _Rb_tree_decrement(_M_node);
 225:/usr/include/c++/6/bits/stl_tree.h **** 	return *this;
 226:/usr/include/c++/6/bits/stl_tree.h ****       }
 227:/usr/include/c++/6/bits/stl_tree.h **** 
 228:/usr/include/c++/6/bits/stl_tree.h ****       _Self
 229:/usr/include/c++/6/bits/stl_tree.h ****       operator--(int) _GLIBCXX_NOEXCEPT
 230:/usr/include/c++/6/bits/stl_tree.h ****       {
 231:/usr/include/c++/6/bits/stl_tree.h **** 	_Self __tmp = *this;
 232:/usr/include/c++/6/bits/stl_tree.h **** 	_M_node = _Rb_tree_decrement(_M_node);
 233:/usr/include/c++/6/bits/stl_tree.h **** 	return __tmp;
 234:/usr/include/c++/6/bits/stl_tree.h ****       }
 235:/usr/include/c++/6/bits/stl_tree.h **** 
 236:/usr/include/c++/6/bits/stl_tree.h ****       bool
 237:/usr/include/c++/6/bits/stl_tree.h ****       operator==(const _Self& __x) const _GLIBCXX_NOEXCEPT
 238:/usr/include/c++/6/bits/stl_tree.h ****       { return _M_node == __x._M_node; }
 239:/usr/include/c++/6/bits/stl_tree.h **** 
 240:/usr/include/c++/6/bits/stl_tree.h ****       bool
 241:/usr/include/c++/6/bits/stl_tree.h ****       operator!=(const _Self& __x) const _GLIBCXX_NOEXCEPT
 5701              		.loc 27 241 0
 5702              		.cfi_startproc
 5703 0000 55       		pushq	%rbp
 5704              		.cfi_def_cfa_offset 16
 5705              		.cfi_offset 6, -16
 5706 0001 4889E5   		movq	%rsp, %rbp
 5707              		.cfi_def_cfa_register 6
 5708 0004 48897DF8 		movq	%rdi, -8(%rbp)
 5709 0008 488975F0 		movq	%rsi, -16(%rbp)
 242:/usr/include/c++/6/bits/stl_tree.h ****       { return _M_node != __x._M_node; }
 5710              		.loc 27 242 0
 5711 000c 488B45F8 		movq	-8(%rbp), %rax
 5712 0010 488B10   		movq	(%rax), %rdx
 5713 0013 488B45F0 		movq	-16(%rbp), %rax
 5714 0017 488B00   		movq	(%rax), %rax
 5715 001a 4839C2   		cmpq	%rax, %rdx
 5716 001d 0F95C0   		setne	%al
 5717 0020 5D       		popq	%rbp
GAS LISTING /tmp/ccvUPO8Q.s 			page 255


 5718              		.cfi_def_cfa 7, 8
 5719 0021 C3       		ret
 5720              		.cfi_endproc
 5721              	.LFE11672:
 5723              		.section	.text._ZN5boost13intrusive_ptrIN3pmt8pmt_baseEEC2ERKS3_,"axG",@progbits,_ZN5boost13intrus
 5724              		.align 2
 5725              		.weak	_ZN5boost13intrusive_ptrIN3pmt8pmt_baseEEC2ERKS3_
 5727              	_ZN5boost13intrusive_ptrIN3pmt8pmt_baseEEC2ERKS3_:
 5728              	.LFB11674:
  90:/usr/include/boost/smart_ptr/intrusive_ptr.hpp ****     {
 5729              		.loc 25 90 0
 5730              		.cfi_startproc
 5731 0000 55       		pushq	%rbp
 5732              		.cfi_def_cfa_offset 16
 5733              		.cfi_offset 6, -16
 5734 0001 4889E5   		movq	%rsp, %rbp
 5735              		.cfi_def_cfa_register 6
 5736 0004 4883EC10 		subq	$16, %rsp
 5737 0008 48897DF8 		movq	%rdi, -8(%rbp)
 5738 000c 488975F0 		movq	%rsi, -16(%rbp)
 5739              	.LBB56:
  90:/usr/include/boost/smart_ptr/intrusive_ptr.hpp ****     {
 5740              		.loc 25 90 0
 5741 0010 488B45F0 		movq	-16(%rbp), %rax
 5742 0014 488B10   		movq	(%rax), %rdx
 5743 0017 488B45F8 		movq	-8(%rbp), %rax
 5744 001b 488910   		movq	%rdx, (%rax)
  92:/usr/include/boost/smart_ptr/intrusive_ptr.hpp ****     }
 5745              		.loc 25 92 0
 5746 001e 488B45F8 		movq	-8(%rbp), %rax
 5747 0022 488B00   		movq	(%rax), %rax
 5748 0025 4885C0   		testq	%rax, %rax
 5749 0028 740F     		je	.L246
  92:/usr/include/boost/smart_ptr/intrusive_ptr.hpp ****     }
 5750              		.loc 25 92 0 is_stmt 0 discriminator 1
 5751 002a 488B45F8 		movq	-8(%rbp), %rax
 5752 002e 488B00   		movq	(%rax), %rax
 5753 0031 4889C7   		movq	%rax, %rdi
 5754 0034 E8000000 		call	_ZN3pmt21intrusive_ptr_add_refEPNS_8pmt_baseE@PLT
 5754      00
 5755              	.L246:
 5756              	.LBE56:
  93:/usr/include/boost/smart_ptr/intrusive_ptr.hpp **** 
 5757              		.loc 25 93 0 is_stmt 1
 5758 0039 90       		nop
 5759 003a C9       		leave
 5760              		.cfi_def_cfa 7, 8
 5761 003b C3       		ret
 5762              		.cfi_endproc
 5763              	.LFE11674:
 5765              		.weak	_ZN5boost13intrusive_ptrIN3pmt8pmt_baseEEC1ERKS3_
 5766              		.set	_ZN5boost13intrusive_ptrIN3pmt8pmt_baseEEC1ERKS3_,_ZN5boost13intrusive_ptrIN3pmt8pmt_baseEEC2
 5767              		.section	.text._ZNSt10_Head_baseILm0ERKN5boost13intrusive_ptrIN3pmt8pmt_baseEEELb0EEC2ES6_,"axG",@
 5768              		.align 2
 5769              		.weak	_ZNSt10_Head_baseILm0ERKN5boost13intrusive_ptrIN3pmt8pmt_baseEEELb0EEC2ES6_
 5771              	_ZNSt10_Head_baseILm0ERKN5boost13intrusive_ptrIN3pmt8pmt_baseEEELb0EEC2ES6_:
 5772              	.LFB11685:
GAS LISTING /tmp/ccvUPO8Q.s 			page 256


 5773              		.file 28 "/usr/include/c++/6/tuple"
   1:/usr/include/c++/6/tuple **** // <tuple> -*- C++ -*-
   2:/usr/include/c++/6/tuple **** 
   3:/usr/include/c++/6/tuple **** // Copyright (C) 2007-2016 Free Software Foundation, Inc.
   4:/usr/include/c++/6/tuple **** //
   5:/usr/include/c++/6/tuple **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/6/tuple **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/6/tuple **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/6/tuple **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/6/tuple **** // any later version.
  10:/usr/include/c++/6/tuple **** 
  11:/usr/include/c++/6/tuple **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/6/tuple **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/6/tuple **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/6/tuple **** // GNU General Public License for more details.
  15:/usr/include/c++/6/tuple **** 
  16:/usr/include/c++/6/tuple **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/6/tuple **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/6/tuple **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/6/tuple **** 
  20:/usr/include/c++/6/tuple **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/6/tuple **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/6/tuple **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/6/tuple **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/6/tuple **** 
  25:/usr/include/c++/6/tuple **** /** @file include/tuple
  26:/usr/include/c++/6/tuple ****  *  This is a Standard C++ Library header.
  27:/usr/include/c++/6/tuple ****  */
  28:/usr/include/c++/6/tuple **** 
  29:/usr/include/c++/6/tuple **** #ifndef _GLIBCXX_TUPLE
  30:/usr/include/c++/6/tuple **** #define _GLIBCXX_TUPLE 1
  31:/usr/include/c++/6/tuple **** 
  32:/usr/include/c++/6/tuple **** #pragma GCC system_header
  33:/usr/include/c++/6/tuple **** 
  34:/usr/include/c++/6/tuple **** #if __cplusplus < 201103L
  35:/usr/include/c++/6/tuple **** # include <bits/c++0x_warning.h>
  36:/usr/include/c++/6/tuple **** #else
  37:/usr/include/c++/6/tuple **** 
  38:/usr/include/c++/6/tuple **** #include <utility>
  39:/usr/include/c++/6/tuple **** #include <array>
  40:/usr/include/c++/6/tuple **** #include <bits/uses_allocator.h>
  41:/usr/include/c++/6/tuple **** 
  42:/usr/include/c++/6/tuple **** namespace std _GLIBCXX_VISIBILITY(default)
  43:/usr/include/c++/6/tuple **** {
  44:/usr/include/c++/6/tuple **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  45:/usr/include/c++/6/tuple **** 
  46:/usr/include/c++/6/tuple ****   /**
  47:/usr/include/c++/6/tuple ****    *  @addtogroup utilities
  48:/usr/include/c++/6/tuple ****    *  @{
  49:/usr/include/c++/6/tuple ****    */
  50:/usr/include/c++/6/tuple **** 
  51:/usr/include/c++/6/tuple ****   template<std::size_t _Idx, typename _Head, bool _IsEmptyNotFinal>
  52:/usr/include/c++/6/tuple ****     struct _Head_base;
  53:/usr/include/c++/6/tuple **** 
  54:/usr/include/c++/6/tuple ****   template<std::size_t _Idx, typename _Head>
  55:/usr/include/c++/6/tuple ****     struct _Head_base<_Idx, _Head, true>
  56:/usr/include/c++/6/tuple ****     : public _Head
GAS LISTING /tmp/ccvUPO8Q.s 			page 257


  57:/usr/include/c++/6/tuple ****     {
  58:/usr/include/c++/6/tuple ****       constexpr _Head_base()
  59:/usr/include/c++/6/tuple ****       : _Head() { }
  60:/usr/include/c++/6/tuple **** 
  61:/usr/include/c++/6/tuple ****       constexpr _Head_base(const _Head& __h)
  62:/usr/include/c++/6/tuple ****       : _Head(__h) { }
  63:/usr/include/c++/6/tuple **** 
  64:/usr/include/c++/6/tuple ****       constexpr _Head_base(const _Head_base&) = default;
  65:/usr/include/c++/6/tuple ****       constexpr _Head_base(_Head_base&&) = default;
  66:/usr/include/c++/6/tuple **** 
  67:/usr/include/c++/6/tuple ****       template<typename _UHead>
  68:/usr/include/c++/6/tuple ****         constexpr _Head_base(_UHead&& __h)
  69:/usr/include/c++/6/tuple **** 	: _Head(std::forward<_UHead>(__h)) { }
  70:/usr/include/c++/6/tuple **** 
  71:/usr/include/c++/6/tuple ****       _Head_base(allocator_arg_t, __uses_alloc0)
  72:/usr/include/c++/6/tuple ****       : _Head() { }
  73:/usr/include/c++/6/tuple **** 
  74:/usr/include/c++/6/tuple ****       template<typename _Alloc>
  75:/usr/include/c++/6/tuple **** 	_Head_base(allocator_arg_t, __uses_alloc1<_Alloc> __a)
  76:/usr/include/c++/6/tuple **** 	: _Head(allocator_arg, *__a._M_a) { }
  77:/usr/include/c++/6/tuple **** 
  78:/usr/include/c++/6/tuple ****       template<typename _Alloc>
  79:/usr/include/c++/6/tuple **** 	_Head_base(allocator_arg_t, __uses_alloc2<_Alloc> __a)
  80:/usr/include/c++/6/tuple **** 	: _Head(*__a._M_a) { }
  81:/usr/include/c++/6/tuple **** 
  82:/usr/include/c++/6/tuple ****       template<typename _UHead>
  83:/usr/include/c++/6/tuple **** 	_Head_base(__uses_alloc0, _UHead&& __uhead)
  84:/usr/include/c++/6/tuple **** 	: _Head(std::forward<_UHead>(__uhead)) { }
  85:/usr/include/c++/6/tuple **** 
  86:/usr/include/c++/6/tuple ****       template<typename _Alloc, typename _UHead>
  87:/usr/include/c++/6/tuple **** 	_Head_base(__uses_alloc1<_Alloc> __a, _UHead&& __uhead)
  88:/usr/include/c++/6/tuple **** 	: _Head(allocator_arg, *__a._M_a, std::forward<_UHead>(__uhead)) { }
  89:/usr/include/c++/6/tuple **** 
  90:/usr/include/c++/6/tuple ****       template<typename _Alloc, typename _UHead>
  91:/usr/include/c++/6/tuple **** 	_Head_base(__uses_alloc2<_Alloc> __a, _UHead&& __uhead)
  92:/usr/include/c++/6/tuple **** 	: _Head(std::forward<_UHead>(__uhead), *__a._M_a) { }
  93:/usr/include/c++/6/tuple **** 
  94:/usr/include/c++/6/tuple ****       static constexpr _Head&
  95:/usr/include/c++/6/tuple ****       _M_head(_Head_base& __b) noexcept { return __b; }
  96:/usr/include/c++/6/tuple **** 
  97:/usr/include/c++/6/tuple ****       static constexpr const _Head&
  98:/usr/include/c++/6/tuple ****       _M_head(const _Head_base& __b) noexcept { return __b; }
  99:/usr/include/c++/6/tuple ****     };
 100:/usr/include/c++/6/tuple **** 
 101:/usr/include/c++/6/tuple ****   template<std::size_t _Idx, typename _Head>
 102:/usr/include/c++/6/tuple ****     struct _Head_base<_Idx, _Head, false>
 103:/usr/include/c++/6/tuple ****     {
 104:/usr/include/c++/6/tuple ****       constexpr _Head_base()
 105:/usr/include/c++/6/tuple ****       : _M_head_impl() { }
 106:/usr/include/c++/6/tuple **** 
 107:/usr/include/c++/6/tuple ****       constexpr _Head_base(const _Head& __h)
 5774              		.loc 28 107 0
 5775              		.cfi_startproc
 5776 0000 55       		pushq	%rbp
 5777              		.cfi_def_cfa_offset 16
 5778              		.cfi_offset 6, -16
 5779 0001 4889E5   		movq	%rsp, %rbp
GAS LISTING /tmp/ccvUPO8Q.s 			page 258


 5780              		.cfi_def_cfa_register 6
 5781 0004 48897DF8 		movq	%rdi, -8(%rbp)
 5782 0008 488975F0 		movq	%rsi, -16(%rbp)
 5783              	.LBB57:
 108:/usr/include/c++/6/tuple ****       : _M_head_impl(__h) { }
 5784              		.loc 28 108 0
 5785 000c 488B45F8 		movq	-8(%rbp), %rax
 5786 0010 488B55F0 		movq	-16(%rbp), %rdx
 5787 0014 488910   		movq	%rdx, (%rax)
 5788              	.LBE57:
 5789 0017 90       		nop
 5790 0018 5D       		popq	%rbp
 5791              		.cfi_def_cfa 7, 8
 5792 0019 C3       		ret
 5793              		.cfi_endproc
 5794              	.LFE11685:
 5796              		.weak	_ZNSt10_Head_baseILm0ERKN5boost13intrusive_ptrIN3pmt8pmt_baseEEELb0EEC1ES6_
 5797              		.set	_ZNSt10_Head_baseILm0ERKN5boost13intrusive_ptrIN3pmt8pmt_baseEEELb0EEC1ES6_,_ZNSt10_Head_base
 5798              		.section	.text._ZNSt11_Tuple_implILm0EJRKN5boost13intrusive_ptrIN3pmt8pmt_baseEEEEEC2ES6_,"axG",@p
 5799              		.align 2
 5800              		.weak	_ZNSt11_Tuple_implILm0EJRKN5boost13intrusive_ptrIN3pmt8pmt_baseEEEEEC2ES6_
 5802              	_ZNSt11_Tuple_implILm0EJRKN5boost13intrusive_ptrIN3pmt8pmt_baseEEEEEC2ES6_:
 5803              	.LFB11687:
 109:/usr/include/c++/6/tuple **** 
 110:/usr/include/c++/6/tuple ****       constexpr _Head_base(const _Head_base&) = default;
 111:/usr/include/c++/6/tuple ****       constexpr _Head_base(_Head_base&&) = default;
 112:/usr/include/c++/6/tuple **** 
 113:/usr/include/c++/6/tuple ****       template<typename _UHead>
 114:/usr/include/c++/6/tuple ****         constexpr _Head_base(_UHead&& __h)
 115:/usr/include/c++/6/tuple **** 	: _M_head_impl(std::forward<_UHead>(__h)) { }
 116:/usr/include/c++/6/tuple **** 
 117:/usr/include/c++/6/tuple ****       _Head_base(allocator_arg_t, __uses_alloc0)
 118:/usr/include/c++/6/tuple ****       : _M_head_impl() { }
 119:/usr/include/c++/6/tuple **** 
 120:/usr/include/c++/6/tuple ****       template<typename _Alloc>
 121:/usr/include/c++/6/tuple **** 	_Head_base(allocator_arg_t, __uses_alloc1<_Alloc> __a)
 122:/usr/include/c++/6/tuple **** 	: _M_head_impl(allocator_arg, *__a._M_a) { }
 123:/usr/include/c++/6/tuple **** 
 124:/usr/include/c++/6/tuple ****       template<typename _Alloc>
 125:/usr/include/c++/6/tuple **** 	_Head_base(allocator_arg_t, __uses_alloc2<_Alloc> __a)
 126:/usr/include/c++/6/tuple **** 	: _M_head_impl(*__a._M_a) { }
 127:/usr/include/c++/6/tuple **** 
 128:/usr/include/c++/6/tuple ****       template<typename _UHead>
 129:/usr/include/c++/6/tuple **** 	_Head_base(__uses_alloc0, _UHead&& __uhead)
 130:/usr/include/c++/6/tuple **** 	: _M_head_impl(std::forward<_UHead>(__uhead)) { }
 131:/usr/include/c++/6/tuple **** 
 132:/usr/include/c++/6/tuple ****       template<typename _Alloc, typename _UHead>
 133:/usr/include/c++/6/tuple **** 	_Head_base(__uses_alloc1<_Alloc> __a, _UHead&& __uhead)
 134:/usr/include/c++/6/tuple **** 	: _M_head_impl(allocator_arg, *__a._M_a, std::forward<_UHead>(__uhead))
 135:/usr/include/c++/6/tuple **** 	{ }
 136:/usr/include/c++/6/tuple **** 
 137:/usr/include/c++/6/tuple ****       template<typename _Alloc, typename _UHead>
 138:/usr/include/c++/6/tuple **** 	_Head_base(__uses_alloc2<_Alloc> __a, _UHead&& __uhead)
 139:/usr/include/c++/6/tuple **** 	: _M_head_impl(std::forward<_UHead>(__uhead), *__a._M_a) { }
 140:/usr/include/c++/6/tuple **** 
 141:/usr/include/c++/6/tuple ****       static constexpr _Head&
 142:/usr/include/c++/6/tuple ****       _M_head(_Head_base& __b) noexcept { return __b._M_head_impl; }
GAS LISTING /tmp/ccvUPO8Q.s 			page 259


 143:/usr/include/c++/6/tuple **** 
 144:/usr/include/c++/6/tuple ****       static constexpr const _Head&
 145:/usr/include/c++/6/tuple ****       _M_head(const _Head_base& __b) noexcept { return __b._M_head_impl; }
 146:/usr/include/c++/6/tuple **** 
 147:/usr/include/c++/6/tuple ****       _Head _M_head_impl;
 148:/usr/include/c++/6/tuple ****     };
 149:/usr/include/c++/6/tuple **** 
 150:/usr/include/c++/6/tuple ****   /**
 151:/usr/include/c++/6/tuple ****    * Contains the actual implementation of the @c tuple template, stored
 152:/usr/include/c++/6/tuple ****    * as a recursive inheritance hierarchy from the first element (most
 153:/usr/include/c++/6/tuple ****    * derived class) to the last (least derived class). The @c Idx
 154:/usr/include/c++/6/tuple ****    * parameter gives the 0-based index of the element stored at this
 155:/usr/include/c++/6/tuple ****    * point in the hierarchy; we use it to implement a constant-time
 156:/usr/include/c++/6/tuple ****    * get() operation.
 157:/usr/include/c++/6/tuple ****    */
 158:/usr/include/c++/6/tuple ****   template<std::size_t _Idx, typename... _Elements>
 159:/usr/include/c++/6/tuple ****     struct _Tuple_impl; 
 160:/usr/include/c++/6/tuple **** 
 161:/usr/include/c++/6/tuple ****   template<typename _Tp>
 162:/usr/include/c++/6/tuple ****     struct __is_empty_non_tuple : is_empty<_Tp> { };
 163:/usr/include/c++/6/tuple **** 
 164:/usr/include/c++/6/tuple ****   // Using EBO for elements that are tuples causes ambiguous base errors.
 165:/usr/include/c++/6/tuple ****   template<typename _El0, typename... _El>
 166:/usr/include/c++/6/tuple ****     struct __is_empty_non_tuple<tuple<_El0, _El...>> : false_type { };
 167:/usr/include/c++/6/tuple **** 
 168:/usr/include/c++/6/tuple ****   // Use the Empty Base-class Optimization for empty, non-final types.
 169:/usr/include/c++/6/tuple ****   template<typename _Tp>
 170:/usr/include/c++/6/tuple ****     using __empty_not_final
 171:/usr/include/c++/6/tuple ****     = typename conditional<__is_final(_Tp), false_type,
 172:/usr/include/c++/6/tuple **** 			   __is_empty_non_tuple<_Tp>>::type;
 173:/usr/include/c++/6/tuple **** 
 174:/usr/include/c++/6/tuple ****   /**
 175:/usr/include/c++/6/tuple ****    * Recursive tuple implementation. Here we store the @c Head element
 176:/usr/include/c++/6/tuple ****    * and derive from a @c Tuple_impl containing the remaining elements
 177:/usr/include/c++/6/tuple ****    * (which contains the @c Tail).
 178:/usr/include/c++/6/tuple ****    */
 179:/usr/include/c++/6/tuple ****   template<std::size_t _Idx, typename _Head, typename... _Tail>
 180:/usr/include/c++/6/tuple ****     struct _Tuple_impl<_Idx, _Head, _Tail...>
 181:/usr/include/c++/6/tuple ****     : public _Tuple_impl<_Idx + 1, _Tail...>,
 182:/usr/include/c++/6/tuple ****       private _Head_base<_Idx, _Head, __empty_not_final<_Head>::value>
 183:/usr/include/c++/6/tuple ****     {
 184:/usr/include/c++/6/tuple ****       template<std::size_t, typename...> friend class _Tuple_impl;
 185:/usr/include/c++/6/tuple **** 
 186:/usr/include/c++/6/tuple ****       typedef _Tuple_impl<_Idx + 1, _Tail...> _Inherited;
 187:/usr/include/c++/6/tuple ****       typedef _Head_base<_Idx, _Head, __empty_not_final<_Head>::value> _Base;
 188:/usr/include/c++/6/tuple **** 
 189:/usr/include/c++/6/tuple ****       static constexpr _Head&  
 190:/usr/include/c++/6/tuple ****       _M_head(_Tuple_impl& __t) noexcept { return _Base::_M_head(__t); }
 191:/usr/include/c++/6/tuple **** 
 192:/usr/include/c++/6/tuple ****       static constexpr const _Head&
 193:/usr/include/c++/6/tuple ****       _M_head(const _Tuple_impl& __t) noexcept { return _Base::_M_head(__t); }
 194:/usr/include/c++/6/tuple **** 
 195:/usr/include/c++/6/tuple ****       static constexpr _Inherited&
 196:/usr/include/c++/6/tuple ****       _M_tail(_Tuple_impl& __t) noexcept { return __t; }
 197:/usr/include/c++/6/tuple **** 
 198:/usr/include/c++/6/tuple ****       static constexpr const _Inherited&
 199:/usr/include/c++/6/tuple ****       _M_tail(const _Tuple_impl& __t) noexcept { return __t; }
GAS LISTING /tmp/ccvUPO8Q.s 			page 260


 200:/usr/include/c++/6/tuple **** 
 201:/usr/include/c++/6/tuple ****       constexpr _Tuple_impl()
 202:/usr/include/c++/6/tuple ****       : _Inherited(), _Base() { }
 203:/usr/include/c++/6/tuple **** 
 204:/usr/include/c++/6/tuple ****       explicit 
 205:/usr/include/c++/6/tuple ****       constexpr _Tuple_impl(const _Head& __head, const _Tail&... __tail)
 206:/usr/include/c++/6/tuple ****       : _Inherited(__tail...), _Base(__head) { }
 207:/usr/include/c++/6/tuple **** 
 208:/usr/include/c++/6/tuple ****       template<typename _UHead, typename... _UTail, typename = typename
 209:/usr/include/c++/6/tuple ****                enable_if<sizeof...(_Tail) == sizeof...(_UTail)>::type> 
 210:/usr/include/c++/6/tuple ****         explicit
 211:/usr/include/c++/6/tuple ****         constexpr _Tuple_impl(_UHead&& __head, _UTail&&... __tail)
 212:/usr/include/c++/6/tuple **** 	: _Inherited(std::forward<_UTail>(__tail)...),
 213:/usr/include/c++/6/tuple **** 	  _Base(std::forward<_UHead>(__head)) { }
 214:/usr/include/c++/6/tuple **** 
 215:/usr/include/c++/6/tuple ****       constexpr _Tuple_impl(const _Tuple_impl&) = default;
 216:/usr/include/c++/6/tuple **** 
 217:/usr/include/c++/6/tuple ****       constexpr
 218:/usr/include/c++/6/tuple ****       _Tuple_impl(_Tuple_impl&& __in)
 219:/usr/include/c++/6/tuple ****       noexcept(__and_<is_nothrow_move_constructible<_Head>,
 220:/usr/include/c++/6/tuple **** 	              is_nothrow_move_constructible<_Inherited>>::value)
 221:/usr/include/c++/6/tuple ****       : _Inherited(std::move(_M_tail(__in))), 
 222:/usr/include/c++/6/tuple **** 	_Base(std::forward<_Head>(_M_head(__in))) { }
 223:/usr/include/c++/6/tuple **** 
 224:/usr/include/c++/6/tuple ****       template<typename... _UElements>
 225:/usr/include/c++/6/tuple ****         constexpr _Tuple_impl(const _Tuple_impl<_Idx, _UElements...>& __in)
 226:/usr/include/c++/6/tuple **** 	: _Inherited(_Tuple_impl<_Idx, _UElements...>::_M_tail(__in)),
 227:/usr/include/c++/6/tuple **** 	  _Base(_Tuple_impl<_Idx, _UElements...>::_M_head(__in)) { }
 228:/usr/include/c++/6/tuple **** 
 229:/usr/include/c++/6/tuple ****       template<typename _UHead, typename... _UTails>
 230:/usr/include/c++/6/tuple ****         constexpr _Tuple_impl(_Tuple_impl<_Idx, _UHead, _UTails...>&& __in)
 231:/usr/include/c++/6/tuple **** 	: _Inherited(std::move
 232:/usr/include/c++/6/tuple **** 		     (_Tuple_impl<_Idx, _UHead, _UTails...>::_M_tail(__in))),
 233:/usr/include/c++/6/tuple **** 	  _Base(std::forward<_UHead>
 234:/usr/include/c++/6/tuple **** 		(_Tuple_impl<_Idx, _UHead, _UTails...>::_M_head(__in))) { }
 235:/usr/include/c++/6/tuple **** 
 236:/usr/include/c++/6/tuple ****       template<typename _Alloc>
 237:/usr/include/c++/6/tuple **** 	_Tuple_impl(allocator_arg_t __tag, const _Alloc& __a)
 238:/usr/include/c++/6/tuple **** 	: _Inherited(__tag, __a),
 239:/usr/include/c++/6/tuple ****           _Base(__tag, __use_alloc<_Head>(__a)) { }
 240:/usr/include/c++/6/tuple **** 
 241:/usr/include/c++/6/tuple ****       template<typename _Alloc>
 242:/usr/include/c++/6/tuple **** 	_Tuple_impl(allocator_arg_t __tag, const _Alloc& __a,
 243:/usr/include/c++/6/tuple **** 		    const _Head& __head, const _Tail&... __tail)
 244:/usr/include/c++/6/tuple **** 	: _Inherited(__tag, __a, __tail...),
 245:/usr/include/c++/6/tuple ****           _Base(__use_alloc<_Head, _Alloc, _Head>(__a), __head) { }
 246:/usr/include/c++/6/tuple **** 
 247:/usr/include/c++/6/tuple ****       template<typename _Alloc, typename _UHead, typename... _UTail,
 248:/usr/include/c++/6/tuple ****                typename = typename enable_if<sizeof...(_Tail)
 249:/usr/include/c++/6/tuple **** 					     == sizeof...(_UTail)>::type>
 250:/usr/include/c++/6/tuple **** 	_Tuple_impl(allocator_arg_t __tag, const _Alloc& __a,
 251:/usr/include/c++/6/tuple **** 	            _UHead&& __head, _UTail&&... __tail)
 252:/usr/include/c++/6/tuple **** 	: _Inherited(__tag, __a, std::forward<_UTail>(__tail)...),
 253:/usr/include/c++/6/tuple ****           _Base(__use_alloc<_Head, _Alloc, _UHead>(__a),
 254:/usr/include/c++/6/tuple **** 	        std::forward<_UHead>(__head)) { }
 255:/usr/include/c++/6/tuple **** 
 256:/usr/include/c++/6/tuple ****       template<typename _Alloc>
GAS LISTING /tmp/ccvUPO8Q.s 			page 261


 257:/usr/include/c++/6/tuple ****         _Tuple_impl(allocator_arg_t __tag, const _Alloc& __a,
 258:/usr/include/c++/6/tuple **** 	            const _Tuple_impl& __in)
 259:/usr/include/c++/6/tuple **** 	: _Inherited(__tag, __a, _M_tail(__in)), 
 260:/usr/include/c++/6/tuple ****           _Base(__use_alloc<_Head, _Alloc, _Head>(__a), _M_head(__in)) { }
 261:/usr/include/c++/6/tuple **** 
 262:/usr/include/c++/6/tuple ****       template<typename _Alloc>
 263:/usr/include/c++/6/tuple **** 	_Tuple_impl(allocator_arg_t __tag, const _Alloc& __a,
 264:/usr/include/c++/6/tuple **** 	            _Tuple_impl&& __in)
 265:/usr/include/c++/6/tuple **** 	: _Inherited(__tag, __a, std::move(_M_tail(__in))), 
 266:/usr/include/c++/6/tuple **** 	  _Base(__use_alloc<_Head, _Alloc, _Head>(__a),
 267:/usr/include/c++/6/tuple **** 	        std::forward<_Head>(_M_head(__in))) { }
 268:/usr/include/c++/6/tuple **** 
 269:/usr/include/c++/6/tuple ****       template<typename _Alloc, typename... _UElements>
 270:/usr/include/c++/6/tuple **** 	_Tuple_impl(allocator_arg_t __tag, const _Alloc& __a,
 271:/usr/include/c++/6/tuple **** 	            const _Tuple_impl<_Idx, _UElements...>& __in)
 272:/usr/include/c++/6/tuple **** 	: _Inherited(__tag, __a,
 273:/usr/include/c++/6/tuple **** 		     _Tuple_impl<_Idx, _UElements...>::_M_tail(__in)),
 274:/usr/include/c++/6/tuple **** 	  _Base(__use_alloc<_Head, _Alloc, _Head>(__a),
 275:/usr/include/c++/6/tuple **** 		_Tuple_impl<_Idx, _UElements...>::_M_head(__in)) { }
 276:/usr/include/c++/6/tuple **** 
 277:/usr/include/c++/6/tuple ****       template<typename _Alloc, typename _UHead, typename... _UTails>
 278:/usr/include/c++/6/tuple **** 	_Tuple_impl(allocator_arg_t __tag, const _Alloc& __a,
 279:/usr/include/c++/6/tuple **** 	            _Tuple_impl<_Idx, _UHead, _UTails...>&& __in)
 280:/usr/include/c++/6/tuple **** 	: _Inherited(__tag, __a, std::move
 281:/usr/include/c++/6/tuple **** 		     (_Tuple_impl<_Idx, _UHead, _UTails...>::_M_tail(__in))),
 282:/usr/include/c++/6/tuple **** 	  _Base(__use_alloc<_Head, _Alloc, _UHead>(__a),
 283:/usr/include/c++/6/tuple ****                 std::forward<_UHead>
 284:/usr/include/c++/6/tuple **** 		(_Tuple_impl<_Idx, _UHead, _UTails...>::_M_head(__in))) { }
 285:/usr/include/c++/6/tuple **** 
 286:/usr/include/c++/6/tuple ****       _Tuple_impl&
 287:/usr/include/c++/6/tuple ****       operator=(const _Tuple_impl& __in)
 288:/usr/include/c++/6/tuple ****       {
 289:/usr/include/c++/6/tuple **** 	_M_head(*this) = _M_head(__in);
 290:/usr/include/c++/6/tuple **** 	_M_tail(*this) = _M_tail(__in);
 291:/usr/include/c++/6/tuple **** 	return *this;
 292:/usr/include/c++/6/tuple ****       }
 293:/usr/include/c++/6/tuple **** 
 294:/usr/include/c++/6/tuple ****       _Tuple_impl&
 295:/usr/include/c++/6/tuple ****       operator=(_Tuple_impl&& __in)
 296:/usr/include/c++/6/tuple ****       noexcept(__and_<is_nothrow_move_assignable<_Head>,
 297:/usr/include/c++/6/tuple **** 	              is_nothrow_move_assignable<_Inherited>>::value)
 298:/usr/include/c++/6/tuple ****       {
 299:/usr/include/c++/6/tuple **** 	_M_head(*this) = std::forward<_Head>(_M_head(__in));
 300:/usr/include/c++/6/tuple **** 	_M_tail(*this) = std::move(_M_tail(__in));
 301:/usr/include/c++/6/tuple **** 	return *this;
 302:/usr/include/c++/6/tuple ****       }
 303:/usr/include/c++/6/tuple **** 
 304:/usr/include/c++/6/tuple ****       template<typename... _UElements>
 305:/usr/include/c++/6/tuple ****         _Tuple_impl&
 306:/usr/include/c++/6/tuple ****         operator=(const _Tuple_impl<_Idx, _UElements...>& __in)
 307:/usr/include/c++/6/tuple ****         {
 308:/usr/include/c++/6/tuple **** 	  _M_head(*this) = _Tuple_impl<_Idx, _UElements...>::_M_head(__in);
 309:/usr/include/c++/6/tuple **** 	  _M_tail(*this) = _Tuple_impl<_Idx, _UElements...>::_M_tail(__in);
 310:/usr/include/c++/6/tuple **** 	  return *this;
 311:/usr/include/c++/6/tuple **** 	}
 312:/usr/include/c++/6/tuple **** 
 313:/usr/include/c++/6/tuple ****       template<typename _UHead, typename... _UTails>
GAS LISTING /tmp/ccvUPO8Q.s 			page 262


 314:/usr/include/c++/6/tuple ****         _Tuple_impl&
 315:/usr/include/c++/6/tuple ****         operator=(_Tuple_impl<_Idx, _UHead, _UTails...>&& __in)
 316:/usr/include/c++/6/tuple ****         {
 317:/usr/include/c++/6/tuple **** 	  _M_head(*this) = std::forward<_UHead>
 318:/usr/include/c++/6/tuple **** 	    (_Tuple_impl<_Idx, _UHead, _UTails...>::_M_head(__in));
 319:/usr/include/c++/6/tuple **** 	  _M_tail(*this) = std::move
 320:/usr/include/c++/6/tuple **** 	    (_Tuple_impl<_Idx, _UHead, _UTails...>::_M_tail(__in));
 321:/usr/include/c++/6/tuple **** 	  return *this;
 322:/usr/include/c++/6/tuple **** 	}
 323:/usr/include/c++/6/tuple **** 
 324:/usr/include/c++/6/tuple ****     protected:
 325:/usr/include/c++/6/tuple ****       void
 326:/usr/include/c++/6/tuple ****       _M_swap(_Tuple_impl& __in)
 327:/usr/include/c++/6/tuple ****       noexcept(__is_nothrow_swappable<_Head>::value
 328:/usr/include/c++/6/tuple ****                && noexcept(_M_tail(__in)._M_swap(_M_tail(__in))))
 329:/usr/include/c++/6/tuple ****       {
 330:/usr/include/c++/6/tuple **** 	using std::swap;
 331:/usr/include/c++/6/tuple **** 	swap(_M_head(*this), _M_head(__in));
 332:/usr/include/c++/6/tuple **** 	_Inherited::_M_swap(_M_tail(__in));
 333:/usr/include/c++/6/tuple ****       }
 334:/usr/include/c++/6/tuple ****     };
 335:/usr/include/c++/6/tuple **** 
 336:/usr/include/c++/6/tuple ****   // Basis case of inheritance recursion.
 337:/usr/include/c++/6/tuple ****   template<std::size_t _Idx, typename _Head>
 338:/usr/include/c++/6/tuple ****     struct _Tuple_impl<_Idx, _Head>
 339:/usr/include/c++/6/tuple ****     : private _Head_base<_Idx, _Head, __empty_not_final<_Head>::value>
 340:/usr/include/c++/6/tuple ****     {
 341:/usr/include/c++/6/tuple ****       template<std::size_t, typename...> friend class _Tuple_impl;
 342:/usr/include/c++/6/tuple **** 
 343:/usr/include/c++/6/tuple ****       typedef _Head_base<_Idx, _Head, __empty_not_final<_Head>::value> _Base;
 344:/usr/include/c++/6/tuple **** 
 345:/usr/include/c++/6/tuple ****       static constexpr _Head&
 346:/usr/include/c++/6/tuple ****       _M_head(_Tuple_impl& __t) noexcept { return _Base::_M_head(__t); }
 347:/usr/include/c++/6/tuple **** 
 348:/usr/include/c++/6/tuple ****       static constexpr const _Head&
 349:/usr/include/c++/6/tuple ****       _M_head(const _Tuple_impl& __t) noexcept { return _Base::_M_head(__t); }
 350:/usr/include/c++/6/tuple **** 
 351:/usr/include/c++/6/tuple ****       constexpr _Tuple_impl()
 352:/usr/include/c++/6/tuple ****       : _Base() { }
 353:/usr/include/c++/6/tuple **** 
 354:/usr/include/c++/6/tuple ****       explicit
 355:/usr/include/c++/6/tuple ****       constexpr _Tuple_impl(const _Head& __head)
 5804              		.loc 28 355 0
 5805              		.cfi_startproc
 5806 0000 55       		pushq	%rbp
 5807              		.cfi_def_cfa_offset 16
 5808              		.cfi_offset 6, -16
 5809 0001 4889E5   		movq	%rsp, %rbp
 5810              		.cfi_def_cfa_register 6
 5811 0004 4883EC10 		subq	$16, %rsp
 5812 0008 48897DF8 		movq	%rdi, -8(%rbp)
 5813 000c 488975F0 		movq	%rsi, -16(%rbp)
 5814              	.LBB58:
 356:/usr/include/c++/6/tuple ****       : _Base(__head) { }
 5815              		.loc 28 356 0
 5816 0010 488B45F8 		movq	-8(%rbp), %rax
 5817 0014 488B55F0 		movq	-16(%rbp), %rdx
GAS LISTING /tmp/ccvUPO8Q.s 			page 263


 5818 0018 4889D6   		movq	%rdx, %rsi
 5819 001b 4889C7   		movq	%rax, %rdi
 5820 001e E8000000 		call	_ZNSt10_Head_baseILm0ERKN5boost13intrusive_ptrIN3pmt8pmt_baseEEELb0EEC2ES6_
 5820      00
 5821              	.LBE58:
 5822 0023 90       		nop
 5823 0024 C9       		leave
 5824              		.cfi_def_cfa 7, 8
 5825 0025 C3       		ret
 5826              		.cfi_endproc
 5827              	.LFE11687:
 5829              		.weak	_ZNSt11_Tuple_implILm0EJRKN5boost13intrusive_ptrIN3pmt8pmt_baseEEEEEC1ES6_
 5830              		.set	_ZNSt11_Tuple_implILm0EJRKN5boost13intrusive_ptrIN3pmt8pmt_baseEEEEEC1ES6_,_ZNSt11_Tuple_impl
 5831              		.section	.text._ZNSt5tupleIJRKN5boost13intrusive_ptrIN3pmt8pmt_baseEEEEEC2IvLb1EEES6_,"axG",@progb
 5832              		.align 2
 5833              		.weak	_ZNSt5tupleIJRKN5boost13intrusive_ptrIN3pmt8pmt_baseEEEEEC2IvLb1EEES6_
 5835              	_ZNSt5tupleIJRKN5boost13intrusive_ptrIN3pmt8pmt_baseEEEEEC2IvLb1EEES6_:
 5836              	.LFB11689:
 357:/usr/include/c++/6/tuple **** 
 358:/usr/include/c++/6/tuple ****       template<typename _UHead>
 359:/usr/include/c++/6/tuple ****         explicit
 360:/usr/include/c++/6/tuple ****         constexpr _Tuple_impl(_UHead&& __head)
 361:/usr/include/c++/6/tuple **** 	: _Base(std::forward<_UHead>(__head)) { }
 362:/usr/include/c++/6/tuple **** 
 363:/usr/include/c++/6/tuple ****       constexpr _Tuple_impl(const _Tuple_impl&) = default;
 364:/usr/include/c++/6/tuple **** 
 365:/usr/include/c++/6/tuple ****       constexpr
 366:/usr/include/c++/6/tuple ****       _Tuple_impl(_Tuple_impl&& __in)
 367:/usr/include/c++/6/tuple ****       noexcept(is_nothrow_move_constructible<_Head>::value)
 368:/usr/include/c++/6/tuple ****       : _Base(std::forward<_Head>(_M_head(__in))) { }
 369:/usr/include/c++/6/tuple **** 
 370:/usr/include/c++/6/tuple ****       template<typename _UHead>
 371:/usr/include/c++/6/tuple ****         constexpr _Tuple_impl(const _Tuple_impl<_Idx, _UHead>& __in)
 372:/usr/include/c++/6/tuple **** 	: _Base(_Tuple_impl<_Idx, _UHead>::_M_head(__in)) { }
 373:/usr/include/c++/6/tuple **** 
 374:/usr/include/c++/6/tuple ****       template<typename _UHead>
 375:/usr/include/c++/6/tuple ****         constexpr _Tuple_impl(_Tuple_impl<_Idx, _UHead>&& __in)
 376:/usr/include/c++/6/tuple **** 	: _Base(std::forward<_UHead>(_Tuple_impl<_Idx, _UHead>::_M_head(__in)))
 377:/usr/include/c++/6/tuple **** 	{ }
 378:/usr/include/c++/6/tuple **** 
 379:/usr/include/c++/6/tuple ****       template<typename _Alloc>
 380:/usr/include/c++/6/tuple **** 	_Tuple_impl(allocator_arg_t __tag, const _Alloc& __a)
 381:/usr/include/c++/6/tuple **** 	: _Base(__tag, __use_alloc<_Head>(__a)) { }
 382:/usr/include/c++/6/tuple **** 
 383:/usr/include/c++/6/tuple ****       template<typename _Alloc>
 384:/usr/include/c++/6/tuple **** 	_Tuple_impl(allocator_arg_t __tag, const _Alloc& __a,
 385:/usr/include/c++/6/tuple **** 		    const _Head& __head)
 386:/usr/include/c++/6/tuple **** 	: _Base(__use_alloc<_Head, _Alloc, _Head>(__a), __head) { }
 387:/usr/include/c++/6/tuple **** 
 388:/usr/include/c++/6/tuple ****       template<typename _Alloc, typename _UHead>
 389:/usr/include/c++/6/tuple **** 	_Tuple_impl(allocator_arg_t __tag, const _Alloc& __a,
 390:/usr/include/c++/6/tuple **** 	            _UHead&& __head)
 391:/usr/include/c++/6/tuple **** 	: _Base(__use_alloc<_Head, _Alloc, _UHead>(__a),
 392:/usr/include/c++/6/tuple **** 	        std::forward<_UHead>(__head)) { }
 393:/usr/include/c++/6/tuple **** 
 394:/usr/include/c++/6/tuple ****       template<typename _Alloc>
 395:/usr/include/c++/6/tuple ****         _Tuple_impl(allocator_arg_t __tag, const _Alloc& __a,
GAS LISTING /tmp/ccvUPO8Q.s 			page 264


 396:/usr/include/c++/6/tuple **** 	            const _Tuple_impl& __in)
 397:/usr/include/c++/6/tuple **** 	: _Base(__use_alloc<_Head, _Alloc, _Head>(__a), _M_head(__in)) { }
 398:/usr/include/c++/6/tuple **** 
 399:/usr/include/c++/6/tuple ****       template<typename _Alloc>
 400:/usr/include/c++/6/tuple **** 	_Tuple_impl(allocator_arg_t __tag, const _Alloc& __a,
 401:/usr/include/c++/6/tuple **** 	            _Tuple_impl&& __in)
 402:/usr/include/c++/6/tuple **** 	: _Base(__use_alloc<_Head, _Alloc, _Head>(__a),
 403:/usr/include/c++/6/tuple **** 	        std::forward<_Head>(_M_head(__in))) { }
 404:/usr/include/c++/6/tuple **** 
 405:/usr/include/c++/6/tuple ****       template<typename _Alloc, typename _UHead>
 406:/usr/include/c++/6/tuple **** 	_Tuple_impl(allocator_arg_t __tag, const _Alloc& __a,
 407:/usr/include/c++/6/tuple **** 	            const _Tuple_impl<_Idx, _UHead>& __in)
 408:/usr/include/c++/6/tuple **** 	: _Base(__use_alloc<_Head, _Alloc, _Head>(__a),
 409:/usr/include/c++/6/tuple **** 		_Tuple_impl<_Idx, _UHead>::_M_head(__in)) { }
 410:/usr/include/c++/6/tuple **** 
 411:/usr/include/c++/6/tuple ****       template<typename _Alloc, typename _UHead>
 412:/usr/include/c++/6/tuple **** 	_Tuple_impl(allocator_arg_t __tag, const _Alloc& __a,
 413:/usr/include/c++/6/tuple **** 	            _Tuple_impl<_Idx, _UHead>&& __in)
 414:/usr/include/c++/6/tuple **** 	: _Base(__use_alloc<_Head, _Alloc, _UHead>(__a),
 415:/usr/include/c++/6/tuple ****                 std::forward<_UHead>(_Tuple_impl<_Idx, _UHead>::_M_head(__in)))
 416:/usr/include/c++/6/tuple **** 	{ }
 417:/usr/include/c++/6/tuple **** 
 418:/usr/include/c++/6/tuple ****       _Tuple_impl&
 419:/usr/include/c++/6/tuple ****       operator=(const _Tuple_impl& __in)
 420:/usr/include/c++/6/tuple ****       {
 421:/usr/include/c++/6/tuple **** 	_M_head(*this) = _M_head(__in);
 422:/usr/include/c++/6/tuple **** 	return *this;
 423:/usr/include/c++/6/tuple ****       }
 424:/usr/include/c++/6/tuple **** 
 425:/usr/include/c++/6/tuple ****       _Tuple_impl&
 426:/usr/include/c++/6/tuple ****       operator=(_Tuple_impl&& __in)
 427:/usr/include/c++/6/tuple ****       noexcept(is_nothrow_move_assignable<_Head>::value)
 428:/usr/include/c++/6/tuple ****       {
 429:/usr/include/c++/6/tuple **** 	_M_head(*this) = std::forward<_Head>(_M_head(__in));
 430:/usr/include/c++/6/tuple **** 	return *this;
 431:/usr/include/c++/6/tuple ****       }
 432:/usr/include/c++/6/tuple **** 
 433:/usr/include/c++/6/tuple ****       template<typename _UHead>
 434:/usr/include/c++/6/tuple ****         _Tuple_impl&
 435:/usr/include/c++/6/tuple ****         operator=(const _Tuple_impl<_Idx, _UHead>& __in)
 436:/usr/include/c++/6/tuple ****         {
 437:/usr/include/c++/6/tuple **** 	  _M_head(*this) = _Tuple_impl<_Idx, _UHead>::_M_head(__in);
 438:/usr/include/c++/6/tuple **** 	  return *this;
 439:/usr/include/c++/6/tuple **** 	}
 440:/usr/include/c++/6/tuple **** 
 441:/usr/include/c++/6/tuple ****       template<typename _UHead>
 442:/usr/include/c++/6/tuple ****         _Tuple_impl&
 443:/usr/include/c++/6/tuple ****         operator=(_Tuple_impl<_Idx, _UHead>&& __in)
 444:/usr/include/c++/6/tuple ****         {
 445:/usr/include/c++/6/tuple **** 	  _M_head(*this)
 446:/usr/include/c++/6/tuple **** 	    = std::forward<_UHead>(_Tuple_impl<_Idx, _UHead>::_M_head(__in));
 447:/usr/include/c++/6/tuple **** 	  return *this;
 448:/usr/include/c++/6/tuple **** 	}
 449:/usr/include/c++/6/tuple **** 
 450:/usr/include/c++/6/tuple ****     protected:
 451:/usr/include/c++/6/tuple ****       void
 452:/usr/include/c++/6/tuple ****       _M_swap(_Tuple_impl& __in)
GAS LISTING /tmp/ccvUPO8Q.s 			page 265


 453:/usr/include/c++/6/tuple ****       noexcept(__is_nothrow_swappable<_Head>::value)
 454:/usr/include/c++/6/tuple ****       {
 455:/usr/include/c++/6/tuple **** 	using std::swap;
 456:/usr/include/c++/6/tuple **** 	swap(_M_head(*this), _M_head(__in));
 457:/usr/include/c++/6/tuple ****       }
 458:/usr/include/c++/6/tuple ****     };
 459:/usr/include/c++/6/tuple **** 
 460:/usr/include/c++/6/tuple ****   template<typename... _Elements>
 461:/usr/include/c++/6/tuple ****     class tuple;
 462:/usr/include/c++/6/tuple **** 
 463:/usr/include/c++/6/tuple ****   // Concept utility functions, reused in conditionally-explicit
 464:/usr/include/c++/6/tuple ****   // constructors.
 465:/usr/include/c++/6/tuple ****   template<bool, typename... _Elements>
 466:/usr/include/c++/6/tuple ****   struct _TC
 467:/usr/include/c++/6/tuple ****   {
 468:/usr/include/c++/6/tuple ****     template<typename... _UElements>
 469:/usr/include/c++/6/tuple ****     static constexpr bool _ConstructibleTuple()
 470:/usr/include/c++/6/tuple ****     {
 471:/usr/include/c++/6/tuple ****       return __and_<is_constructible<_Elements, const _UElements&>...>::value;
 472:/usr/include/c++/6/tuple ****     }
 473:/usr/include/c++/6/tuple **** 
 474:/usr/include/c++/6/tuple ****     template<typename... _UElements>
 475:/usr/include/c++/6/tuple ****     static constexpr bool _ImplicitlyConvertibleTuple()
 476:/usr/include/c++/6/tuple ****     {
 477:/usr/include/c++/6/tuple ****       return __and_<is_convertible<const _UElements&, _Elements>...>::value;
 478:/usr/include/c++/6/tuple ****     }
 479:/usr/include/c++/6/tuple **** 
 480:/usr/include/c++/6/tuple ****     template<typename... _UElements>
 481:/usr/include/c++/6/tuple ****     static constexpr bool _MoveConstructibleTuple()
 482:/usr/include/c++/6/tuple ****     {
 483:/usr/include/c++/6/tuple ****       return __and_<is_constructible<_Elements, _UElements&&>...>::value;
 484:/usr/include/c++/6/tuple ****     }
 485:/usr/include/c++/6/tuple **** 
 486:/usr/include/c++/6/tuple ****     template<typename... _UElements>
 487:/usr/include/c++/6/tuple ****     static constexpr bool _ImplicitlyMoveConvertibleTuple()
 488:/usr/include/c++/6/tuple ****     {
 489:/usr/include/c++/6/tuple ****       return __and_<is_convertible<_UElements&&, _Elements>...>::value;
 490:/usr/include/c++/6/tuple ****     }
 491:/usr/include/c++/6/tuple **** 
 492:/usr/include/c++/6/tuple ****     template<typename _SrcTuple>
 493:/usr/include/c++/6/tuple ****     static constexpr bool _NonNestedTuple()
 494:/usr/include/c++/6/tuple ****     {
 495:/usr/include/c++/6/tuple ****       return  __and_<__not_<is_same<tuple<_Elements...>,
 496:/usr/include/c++/6/tuple ****                                    typename remove_cv<
 497:/usr/include/c++/6/tuple ****                                      typename remove_reference<_SrcTuple>::type
 498:/usr/include/c++/6/tuple ****                                    >::type>>,
 499:/usr/include/c++/6/tuple ****                      __not_<is_convertible<_SrcTuple, _Elements...>>,
 500:/usr/include/c++/6/tuple ****                      __not_<is_constructible<_Elements..., _SrcTuple>>
 501:/usr/include/c++/6/tuple ****               >::value;
 502:/usr/include/c++/6/tuple ****     }
 503:/usr/include/c++/6/tuple ****     template<typename... _UElements>
 504:/usr/include/c++/6/tuple ****     static constexpr bool _NotSameTuple()
 505:/usr/include/c++/6/tuple ****     {
 506:/usr/include/c++/6/tuple ****       return  __not_<is_same<tuple<_Elements...>,
 507:/usr/include/c++/6/tuple **** 			     typename remove_const<
 508:/usr/include/c++/6/tuple **** 			       typename remove_reference<_UElements...>::type
 509:/usr/include/c++/6/tuple **** 			       >::type>>::value;
GAS LISTING /tmp/ccvUPO8Q.s 			page 266


 510:/usr/include/c++/6/tuple ****     }
 511:/usr/include/c++/6/tuple ****   };
 512:/usr/include/c++/6/tuple **** 
 513:/usr/include/c++/6/tuple ****   template<typename... _Elements>
 514:/usr/include/c++/6/tuple ****   struct _TC<false, _Elements...>
 515:/usr/include/c++/6/tuple ****   {
 516:/usr/include/c++/6/tuple ****     template<typename... _UElements>
 517:/usr/include/c++/6/tuple ****     static constexpr bool _ConstructibleTuple()
 518:/usr/include/c++/6/tuple ****     {
 519:/usr/include/c++/6/tuple ****       return false;
 520:/usr/include/c++/6/tuple ****     }
 521:/usr/include/c++/6/tuple **** 
 522:/usr/include/c++/6/tuple ****     template<typename... _UElements>
 523:/usr/include/c++/6/tuple ****     static constexpr bool _ImplicitlyConvertibleTuple()
 524:/usr/include/c++/6/tuple ****     {
 525:/usr/include/c++/6/tuple ****       return false;
 526:/usr/include/c++/6/tuple ****     }
 527:/usr/include/c++/6/tuple **** 
 528:/usr/include/c++/6/tuple ****     template<typename... _UElements>
 529:/usr/include/c++/6/tuple ****     static constexpr bool _MoveConstructibleTuple()
 530:/usr/include/c++/6/tuple ****     {
 531:/usr/include/c++/6/tuple ****       return false;
 532:/usr/include/c++/6/tuple ****     }
 533:/usr/include/c++/6/tuple **** 
 534:/usr/include/c++/6/tuple ****     template<typename... _UElements>
 535:/usr/include/c++/6/tuple ****     static constexpr bool _ImplicitlyMoveConvertibleTuple()
 536:/usr/include/c++/6/tuple ****     {
 537:/usr/include/c++/6/tuple ****       return false;
 538:/usr/include/c++/6/tuple ****     }
 539:/usr/include/c++/6/tuple **** 
 540:/usr/include/c++/6/tuple ****     template<typename... _UElements>
 541:/usr/include/c++/6/tuple ****     static constexpr bool _NonNestedTuple()
 542:/usr/include/c++/6/tuple ****     {
 543:/usr/include/c++/6/tuple ****       return true;
 544:/usr/include/c++/6/tuple ****     }
 545:/usr/include/c++/6/tuple ****     template<typename... _UElements>
 546:/usr/include/c++/6/tuple ****     static constexpr bool _NotSameTuple()
 547:/usr/include/c++/6/tuple ****     {
 548:/usr/include/c++/6/tuple ****       return  true;
 549:/usr/include/c++/6/tuple ****     }
 550:/usr/include/c++/6/tuple ****   };
 551:/usr/include/c++/6/tuple **** 
 552:/usr/include/c++/6/tuple ****   /// Primary class template, tuple
 553:/usr/include/c++/6/tuple ****   template<typename... _Elements> 
 554:/usr/include/c++/6/tuple ****     class tuple : public _Tuple_impl<0, _Elements...>
 555:/usr/include/c++/6/tuple ****     {
 556:/usr/include/c++/6/tuple ****       typedef _Tuple_impl<0, _Elements...> _Inherited;
 557:/usr/include/c++/6/tuple **** 
 558:/usr/include/c++/6/tuple ****       // Used for constraining the default constructor so
 559:/usr/include/c++/6/tuple ****       // that it becomes dependent on the constraints.
 560:/usr/include/c++/6/tuple ****       template<typename _Dummy>
 561:/usr/include/c++/6/tuple ****       struct _TC2
 562:/usr/include/c++/6/tuple ****       {
 563:/usr/include/c++/6/tuple ****         static constexpr bool _DefaultConstructibleTuple()
 564:/usr/include/c++/6/tuple ****         {
 565:/usr/include/c++/6/tuple ****           return __and_<is_default_constructible<_Elements>...>::value;
 566:/usr/include/c++/6/tuple ****         }
GAS LISTING /tmp/ccvUPO8Q.s 			page 267


 567:/usr/include/c++/6/tuple ****         static constexpr bool _ImplicitlyDefaultConstructibleTuple()
 568:/usr/include/c++/6/tuple ****         {
 569:/usr/include/c++/6/tuple ****           return __and_<__is_implicitly_default_constructible<_Elements>...>
 570:/usr/include/c++/6/tuple ****             ::value;
 571:/usr/include/c++/6/tuple ****         }
 572:/usr/include/c++/6/tuple ****       };
 573:/usr/include/c++/6/tuple **** 
 574:/usr/include/c++/6/tuple ****     public:
 575:/usr/include/c++/6/tuple ****       template<typename _Dummy = void,
 576:/usr/include/c++/6/tuple ****                typename enable_if<_TC2<_Dummy>::
 577:/usr/include/c++/6/tuple ****                                     _ImplicitlyDefaultConstructibleTuple(),
 578:/usr/include/c++/6/tuple ****                                   bool>::type = true>
 579:/usr/include/c++/6/tuple ****       constexpr tuple()
 580:/usr/include/c++/6/tuple ****       : _Inherited() { }
 581:/usr/include/c++/6/tuple **** 
 582:/usr/include/c++/6/tuple ****       template<typename _Dummy = void,
 583:/usr/include/c++/6/tuple ****                typename enable_if<_TC2<_Dummy>::
 584:/usr/include/c++/6/tuple ****                                     _DefaultConstructibleTuple()
 585:/usr/include/c++/6/tuple ****                                   &&
 586:/usr/include/c++/6/tuple ****                                   !_TC2<_Dummy>::
 587:/usr/include/c++/6/tuple ****                                     _ImplicitlyDefaultConstructibleTuple(),
 588:/usr/include/c++/6/tuple ****                                   bool>::type = false>
 589:/usr/include/c++/6/tuple ****       explicit constexpr tuple()
 590:/usr/include/c++/6/tuple ****       : _Inherited() { }
 591:/usr/include/c++/6/tuple **** 
 592:/usr/include/c++/6/tuple ****       // Shortcut for the cases where constructors taking _Elements...
 593:/usr/include/c++/6/tuple ****       // need to be constrained.
 594:/usr/include/c++/6/tuple ****       template<typename _Dummy> using _TCC =
 595:/usr/include/c++/6/tuple ****         _TC<is_same<_Dummy, void>::value,
 596:/usr/include/c++/6/tuple ****             _Elements...>;
 597:/usr/include/c++/6/tuple **** 
 598:/usr/include/c++/6/tuple ****       template<typename _Dummy = void,
 599:/usr/include/c++/6/tuple ****                typename enable_if<
 600:/usr/include/c++/6/tuple ****                  _TCC<_Dummy>::template
 601:/usr/include/c++/6/tuple ****                    _ConstructibleTuple<_Elements...>()
 602:/usr/include/c++/6/tuple ****                  && _TCC<_Dummy>::template
 603:/usr/include/c++/6/tuple ****                    _ImplicitlyConvertibleTuple<_Elements...>()
 604:/usr/include/c++/6/tuple ****                  && (sizeof...(_Elements) >= 1),
 605:/usr/include/c++/6/tuple ****                bool>::type=true>
 606:/usr/include/c++/6/tuple ****         constexpr tuple(const _Elements&... __elements)
 5837              		.loc 28 606 0
 5838              		.cfi_startproc
 5839 0000 55       		pushq	%rbp
 5840              		.cfi_def_cfa_offset 16
 5841              		.cfi_offset 6, -16
 5842 0001 4889E5   		movq	%rsp, %rbp
 5843              		.cfi_def_cfa_register 6
 5844 0004 4883EC10 		subq	$16, %rsp
 5845 0008 48897DF8 		movq	%rdi, -8(%rbp)
 5846 000c 488975F0 		movq	%rsi, -16(%rbp)
 5847              	.LBB59:
 607:/usr/include/c++/6/tuple ****       : _Inherited(__elements...) { }
 5848              		.loc 28 607 0
 5849 0010 488B45F8 		movq	-8(%rbp), %rax
 5850 0014 488B55F0 		movq	-16(%rbp), %rdx
 5851 0018 4889D6   		movq	%rdx, %rsi
 5852 001b 4889C7   		movq	%rax, %rdi
GAS LISTING /tmp/ccvUPO8Q.s 			page 268


 5853 001e E8000000 		call	_ZNSt11_Tuple_implILm0EJRKN5boost13intrusive_ptrIN3pmt8pmt_baseEEEEEC2ES6_
 5853      00
 5854              	.LBE59:
 5855 0023 90       		nop
 5856 0024 C9       		leave
 5857              		.cfi_def_cfa 7, 8
 5858 0025 C3       		ret
 5859              		.cfi_endproc
 5860              	.LFE11689:
 5862              		.weak	_ZNSt5tupleIJRKN5boost13intrusive_ptrIN3pmt8pmt_baseEEEEEC1IvLb1EEES6_
 5863              		.set	_ZNSt5tupleIJRKN5boost13intrusive_ptrIN3pmt8pmt_baseEEEEEC1IvLb1EEES6_,_ZNSt5tupleIJRKN5boost
 5864              		.section	.text._ZNSt3mapIN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS0_8functionIFvS4_EEENS2_10compa
 5865              		.align 2
 5866              		.weak	_ZNSt3mapIN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS0_8functionIFvS4_EEENS2_10comparatorESaI
 5868              	_ZNSt3mapIN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS0_8functionIFvS4_EEENS2_10comparatorESaISt4pair
 5869              	.LFB11676:
 474:/usr/include/c++/6/bits/stl_map.h ****       {
 5870              		.loc 26 474 0
 5871              		.cfi_startproc
 5872              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 5873              		.cfi_lsda 0x1b,.LLSDA11676
 5874 0000 55       		pushq	%rbp
 5875              		.cfi_def_cfa_offset 16
 5876              		.cfi_offset 6, -16
 5877 0001 4889E5   		movq	%rsp, %rbp
 5878              		.cfi_def_cfa_register 6
 5879 0004 4155     		pushq	%r13
 5880 0006 4154     		pushq	%r12
 5881 0008 53       		pushq	%rbx
 5882 0009 4883EC48 		subq	$72, %rsp
 5883              		.cfi_offset 13, -24
 5884              		.cfi_offset 12, -32
 5885              		.cfi_offset 3, -40
 5886 000d 48897DA8 		movq	%rdi, -88(%rbp)
 5887 0011 488975A0 		movq	%rsi, -96(%rbp)
 479:/usr/include/c++/6/bits/stl_map.h **** 	// __i->first is greater than or equivalent to __k.
 5888              		.loc 26 479 0
 5889 0015 488B55A0 		movq	-96(%rbp), %rdx
 5890 0019 488B45A8 		movq	-88(%rbp), %rax
 5891 001d 4889D6   		movq	%rdx, %rsi
 5892 0020 4889C7   		movq	%rax, %rdi
 5893              	.LEHB33:
 5894 0023 E8000000 		call	_ZNSt3mapIN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS0_8functionIFvS4_EEENS2_10comparatorESaIS
 5894      00
 5895              	.LEHE33:
 5896 0028 488945B8 		movq	%rax, -72(%rbp)
 481:/usr/include/c++/6/bits/stl_map.h **** #if __cplusplus >= 201103L
 5897              		.loc 26 481 0
 5898 002c BB000000 		movl	$0, %ebx
 5898      00
 5899 0031 488B45A8 		movq	-88(%rbp), %rax
 5900 0035 4889C7   		movq	%rax, %rdi
 5901 0038 E8000000 		call	_ZNSt3mapIN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS0_8functionIFvS4_EEENS2_10comparatorESaIS
 5901      00
 5902 003d 488945C0 		movq	%rax, -64(%rbp)
 5903 0041 41BC0100 		movl	$1, %r12d
 5903      0000
GAS LISTING /tmp/ccvUPO8Q.s 			page 269


 5904 0047 488D55C0 		leaq	-64(%rbp), %rdx
 5905 004b 488D45B8 		leaq	-72(%rbp), %rax
 5906 004f 4889D6   		movq	%rdx, %rsi
 5907 0052 4889C7   		movq	%rax, %rdi
 5908 0055 E8000000 		call	_ZNKSt17_Rb_tree_iteratorISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS1_8functionIFvS5
 5908      00
 5909 005a 84C0     		testb	%al, %al
 5910 005c 753A     		jne	.L251
 481:/usr/include/c++/6/bits/stl_map.h **** #if __cplusplus >= 201103L
 5911              		.loc 26 481 0 is_stmt 0 discriminator 2
 5912 005e 488D45B8 		leaq	-72(%rbp), %rax
 5913 0062 4889C7   		movq	%rax, %rdi
 5914 0065 E8000000 		call	_ZNKSt17_Rb_tree_iteratorISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS1_8functionIFvS5
 5914      00
 5915 006a 4989C5   		movq	%rax, %r13
 5916 006d 488B45A8 		movq	-88(%rbp), %rax
 5917 0071 4889C7   		movq	%rax, %rdi
 5918              	.LEHB34:
 5919 0074 E8000000 		call	_ZNKSt3mapIN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS0_8functionIFvS4_EEENS2_10comparatorESaI
 5919      00
 481:/usr/include/c++/6/bits/stl_map.h **** #if __cplusplus >= 201103L
 5920              		.loc 26 481 0 discriminator 4
 5921 0079 BB010000 		movl	$1, %ebx
 5921      00
 5922 007e 488B4DA0 		movq	-96(%rbp), %rcx
 5923 0082 488D45CE 		leaq	-50(%rbp), %rax
 5924 0086 4C89EA   		movq	%r13, %rdx
 5925 0089 4889CE   		movq	%rcx, %rsi
 5926 008c 4889C7   		movq	%rax, %rdi
 5927 008f E8000000 		call	_ZNK3pmt10comparatorclERKN5boost13intrusive_ptrINS_8pmt_baseEEES6_
 5927      00
 5928              	.LEHE34:
 5929 0094 84C0     		testb	%al, %al
 5930 0096 7407     		je	.L252
 5931              	.L251:
 481:/usr/include/c++/6/bits/stl_map.h **** #if __cplusplus >= 201103L
 5932              		.loc 26 481 0 discriminator 7
 5933 0098 B8010000 		movl	$1, %eax
 5933      00
 5934 009d EB05     		jmp	.L253
 5935              	.L252:
 481:/usr/include/c++/6/bits/stl_map.h **** #if __cplusplus >= 201103L
 5936              		.loc 26 481 0 discriminator 8
 5937 009f B8000000 		movl	$0, %eax
 5937      00
 5938              	.L253:
 481:/usr/include/c++/6/bits/stl_map.h **** #if __cplusplus >= 201103L
 5939              		.loc 26 481 0 discriminator 10
 5940 00a4 84DB     		testb	%bl, %bl
 5941 00a6 4584E4   		testb	%r12b, %r12b
 5942 00a9 84C0     		testb	%al, %al
 5943 00ab 744F     		je	.L256
 483:/usr/include/c++/6/bits/stl_map.h **** 					    std::tuple<const key_type&>(__k),
 5944              		.loc 26 483 0 is_stmt 1
 5945 00ad 488B55A0 		movq	-96(%rbp), %rdx
 5946 00b1 488D45D0 		leaq	-48(%rbp), %rax
 5947 00b5 4889D6   		movq	%rdx, %rsi
GAS LISTING /tmp/ccvUPO8Q.s 			page 270


 5948 00b8 4889C7   		movq	%rax, %rdi
 5949 00bb E8000000 		call	_ZNSt5tupleIJRKN5boost13intrusive_ptrIN3pmt8pmt_baseEEEEEC1IvLb1EEES6_
 5949      00
 5950 00c0 488D55B8 		leaq	-72(%rbp), %rdx
 5951 00c4 488D45D8 		leaq	-40(%rbp), %rax
 5952 00c8 4889D6   		movq	%rdx, %rsi
 5953 00cb 4889C7   		movq	%rax, %rdi
 5954 00ce E8000000 		call	_ZNSt23_Rb_tree_const_iteratorISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS1_8function
 5954      00
 5955 00d3 488B45A8 		movq	-88(%rbp), %rax
 5956 00d7 488D4DCF 		leaq	-49(%rbp), %rcx
 5957 00db 488D55D0 		leaq	-48(%rbp), %rdx
 5958 00df 488B75D8 		movq	-40(%rbp), %rsi
 5959 00e3 4989C8   		movq	%rcx, %r8
 5960 00e6 4889D1   		movq	%rdx, %rcx
 5961 00e9 488D1500 		leaq	_ZStL19piecewise_construct(%rip), %rdx
 5961      000000
 5962 00f0 4889C7   		movq	%rax, %rdi
 5963              	.LEHB35:
 5964 00f3 E8000000 		call	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt1
 5964      00
 5965 00f8 488945B8 		movq	%rax, -72(%rbp)
 5966              	.L256:
 489:/usr/include/c++/6/bits/stl_map.h ****       }
 5967              		.loc 26 489 0
 5968 00fc 488D45B8 		leaq	-72(%rbp), %rax
 5969 0100 4889C7   		movq	%rax, %rdi
 5970 0103 E8000000 		call	_ZNKSt17_Rb_tree_iteratorISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS1_8functionIFvS5
 5970      00
 5971 0108 4883C008 		addq	$8, %rax
 5972 010c EB0E     		jmp	.L262
 5973              	.L261:
 481:/usr/include/c++/6/bits/stl_map.h **** #if __cplusplus >= 201103L
 5974              		.loc 26 481 0
 5975 010e 84DB     		testb	%bl, %bl
 5976 0110 4584E4   		testb	%r12b, %r12b
 5977 0113 90       		nop
 5978 0114 4889C7   		movq	%rax, %rdi
 5979 0117 E8000000 		call	_Unwind_Resume@PLT
 5979      00
 5980              	.LEHE35:
 5981              	.L262:
 490:/usr/include/c++/6/bits/stl_map.h **** 
 5982              		.loc 26 490 0
 5983 011c 4883C448 		addq	$72, %rsp
 5984 0120 5B       		popq	%rbx
 5985 0121 415C     		popq	%r12
 5986 0123 415D     		popq	%r13
 5987 0125 5D       		popq	%rbp
 5988              		.cfi_def_cfa 7, 8
 5989 0126 C3       		ret
 5990              		.cfi_endproc
 5991              	.LFE11676:
 5992              		.section	.gcc_except_table
 5993              	.LLSDA11676:
 5994 007f FF       		.byte	0xff
 5995 0080 FF       		.byte	0xff
GAS LISTING /tmp/ccvUPO8Q.s 			page 271


 5996 0081 01       		.byte	0x1
 5997 0082 0E       		.uleb128 .LLSDACSE11676-.LLSDACSB11676
 5998              	.LLSDACSB11676:
 5999 0083 23       		.uleb128 .LEHB33-.LFB11676
 6000 0084 05       		.uleb128 .LEHE33-.LEHB33
 6001 0085 00       		.uleb128 0
 6002 0086 00       		.uleb128 0
 6003 0087 74       		.uleb128 .LEHB34-.LFB11676
 6004 0088 20       		.uleb128 .LEHE34-.LEHB34
 6005 0089 8E02     		.uleb128 .L261-.LFB11676
 6006 008b 00       		.uleb128 0
 6007 008c F301     		.uleb128 .LEHB35-.LFB11676
 6008 008e 29       		.uleb128 .LEHE35-.LEHB35
 6009 008f 00       		.uleb128 0
 6010 0090 00       		.uleb128 0
 6011              	.LLSDACSE11676:
 6012              		.section	.text._ZNSt3mapIN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS0_8functionIFvS4_EEENS2_10compa
 6014              		.section	.text._ZN5boost17bad_function_callD2Ev,"axG",@progbits,_ZN5boost17bad_function_callD5Ev,c
 6015              		.align 2
 6016              		.weak	_ZN5boost17bad_function_callD2Ev
 6018              	_ZN5boost17bad_function_callD2Ev:
 6019              	.LFB11693:
 696:/usr/include/boost/function/function_base.hpp **** {
 6020              		.loc 13 696 0
 6021              		.cfi_startproc
 6022 0000 55       		pushq	%rbp
 6023              		.cfi_def_cfa_offset 16
 6024              		.cfi_offset 6, -16
 6025 0001 4889E5   		movq	%rsp, %rbp
 6026              		.cfi_def_cfa_register 6
 6027 0004 4883EC10 		subq	$16, %rsp
 6028 0008 48897DF8 		movq	%rdi, -8(%rbp)
 6029              	.LBB60:
 696:/usr/include/boost/function/function_base.hpp **** {
 6030              		.loc 13 696 0
 6031 000c 488D1500 		leaq	16+_ZTVN5boost17bad_function_callE(%rip), %rdx
 6031      000000
 6032 0013 488B45F8 		movq	-8(%rbp), %rax
 6033 0017 488910   		movq	%rdx, (%rax)
 6034 001a 488B45F8 		movq	-8(%rbp), %rax
 6035 001e 4889C7   		movq	%rax, %rdi
 6036 0021 E8000000 		call	_ZNSt13runtime_errorD2Ev@PLT
 6036      00
 6037              	.LBE60:
 6038 0026 90       		nop
 6039 0027 C9       		leave
 6040              		.cfi_def_cfa 7, 8
 6041 0028 C3       		ret
 6042              		.cfi_endproc
 6043              	.LFE11693:
 6045              		.weak	_ZN5boost17bad_function_callD1Ev
 6046              		.set	_ZN5boost17bad_function_callD1Ev,_ZN5boost17bad_function_callD2Ev
 6047              		.section	.text._ZN5boost17bad_function_callD0Ev,"axG",@progbits,_ZN5boost17bad_function_callD5Ev,c
 6048              		.align 2
 6049              		.weak	_ZN5boost17bad_function_callD0Ev
 6051              	_ZN5boost17bad_function_callD0Ev:
 6052              	.LFB11695:
GAS LISTING /tmp/ccvUPO8Q.s 			page 272


 696:/usr/include/boost/function/function_base.hpp **** {
 6053              		.loc 13 696 0
 6054              		.cfi_startproc
 6055 0000 55       		pushq	%rbp
 6056              		.cfi_def_cfa_offset 16
 6057              		.cfi_offset 6, -16
 6058 0001 4889E5   		movq	%rsp, %rbp
 6059              		.cfi_def_cfa_register 6
 6060 0004 4883EC10 		subq	$16, %rsp
 6061 0008 48897DF8 		movq	%rdi, -8(%rbp)
 696:/usr/include/boost/function/function_base.hpp **** {
 6062              		.loc 13 696 0
 6063 000c 488B45F8 		movq	-8(%rbp), %rax
 6064 0010 4889C7   		movq	%rax, %rdi
 6065 0013 E8000000 		call	_ZN5boost17bad_function_callD1Ev
 6065      00
 6066 0018 488B45F8 		movq	-8(%rbp), %rax
 6067 001c BE100000 		movl	$16, %esi
 6067      00
 6068 0021 4889C7   		movq	%rax, %rdi
 6069 0024 E8000000 		call	_ZdlPvm@PLT
 6069      00
 6070 0029 C9       		leave
 6071              		.cfi_def_cfa 7, 8
 6072 002a C3       		ret
 6073              		.cfi_endproc
 6074              	.LFE11695:
 6076              		.section	.text._ZNK5boost9function1IvNS_13intrusive_ptrIN3pmt8pmt_baseEEEEclES4_,"axG",@progbits,_
 6077              		.align 2
 6078              		.weak	_ZNK5boost9function1IvNS_13intrusive_ptrIN3pmt8pmt_baseEEEEclES4_
 6080              	_ZNK5boost9function1IvNS_13intrusive_ptrIN3pmt8pmt_baseEEEEclES4_:
 6081              	.LFB11691:
 6082              		.file 29 "/usr/include/boost/function/function_template.hpp"
   1:/usr/include/boost/function/function_template.hpp **** // Boost.Function library
   2:/usr/include/boost/function/function_template.hpp **** 
   3:/usr/include/boost/function/function_template.hpp **** //  Copyright Douglas Gregor 2001-2006
   4:/usr/include/boost/function/function_template.hpp **** //  Copyright Emil Dotchevski 2007
   5:/usr/include/boost/function/function_template.hpp **** //  Use, modification and distribution is subject to the Boost Software License, Version 1.0.
   6:/usr/include/boost/function/function_template.hpp **** //  (See accompanying file LICENSE_1_0.txt or copy at
   7:/usr/include/boost/function/function_template.hpp **** //  http://www.boost.org/LICENSE_1_0.txt)
   8:/usr/include/boost/function/function_template.hpp **** 
   9:/usr/include/boost/function/function_template.hpp **** // For more information, see http://www.boost.org
  10:/usr/include/boost/function/function_template.hpp **** 
  11:/usr/include/boost/function/function_template.hpp **** // Note: this header is a header template and must NOT have multiple-inclusion
  12:/usr/include/boost/function/function_template.hpp **** // protection.
  13:/usr/include/boost/function/function_template.hpp **** #include <boost/function/detail/prologue.hpp>
  14:/usr/include/boost/function/function_template.hpp **** #include <boost/detail/no_exceptions_support.hpp>
  15:/usr/include/boost/function/function_template.hpp **** 
  16:/usr/include/boost/function/function_template.hpp **** #if defined(BOOST_MSVC)
  17:/usr/include/boost/function/function_template.hpp **** #   pragma warning( push )
  18:/usr/include/boost/function/function_template.hpp **** #   pragma warning( disable : 4127 ) // "conditional expression is constant"
  19:/usr/include/boost/function/function_template.hpp **** #endif
  20:/usr/include/boost/function/function_template.hpp **** 
  21:/usr/include/boost/function/function_template.hpp **** #define BOOST_FUNCTION_TEMPLATE_PARMS BOOST_PP_ENUM_PARAMS(BOOST_FUNCTION_NUM_ARGS, typename T)
  22:/usr/include/boost/function/function_template.hpp **** 
  23:/usr/include/boost/function/function_template.hpp **** #define BOOST_FUNCTION_TEMPLATE_ARGS BOOST_PP_ENUM_PARAMS(BOOST_FUNCTION_NUM_ARGS, T)
  24:/usr/include/boost/function/function_template.hpp **** 
GAS LISTING /tmp/ccvUPO8Q.s 			page 273


  25:/usr/include/boost/function/function_template.hpp **** #define BOOST_FUNCTION_PARM(J,I,D) BOOST_PP_CAT(T,I) BOOST_PP_CAT(a,I)
  26:/usr/include/boost/function/function_template.hpp **** 
  27:/usr/include/boost/function/function_template.hpp **** #define BOOST_FUNCTION_PARMS BOOST_PP_ENUM(BOOST_FUNCTION_NUM_ARGS,BOOST_FUNCTION_PARM,BOOST_PP_EMP
  28:/usr/include/boost/function/function_template.hpp **** 
  29:/usr/include/boost/function/function_template.hpp **** #ifdef BOOST_NO_CXX11_RVALUE_REFERENCES
  30:/usr/include/boost/function/function_template.hpp **** #   define BOOST_FUNCTION_ARGS BOOST_PP_ENUM_PARAMS(BOOST_FUNCTION_NUM_ARGS, a)
  31:/usr/include/boost/function/function_template.hpp **** #else
  32:/usr/include/boost/function/function_template.hpp **** #   include <boost/move/utility_core.hpp>
  33:/usr/include/boost/function/function_template.hpp **** #   define BOOST_FUNCTION_ARG(J,I,D) ::boost::forward< BOOST_PP_CAT(T,I) >(BOOST_PP_CAT(a,I))
  34:/usr/include/boost/function/function_template.hpp **** #   define BOOST_FUNCTION_ARGS BOOST_PP_ENUM(BOOST_FUNCTION_NUM_ARGS,BOOST_FUNCTION_ARG,BOOST_PP_EM
  35:/usr/include/boost/function/function_template.hpp **** #endif
  36:/usr/include/boost/function/function_template.hpp **** 
  37:/usr/include/boost/function/function_template.hpp **** #define BOOST_FUNCTION_ARG_TYPE(J,I,D) \
  38:/usr/include/boost/function/function_template.hpp ****   typedef BOOST_PP_CAT(T,I) BOOST_PP_CAT(BOOST_PP_CAT(arg, BOOST_PP_INC(I)),_type);
  39:/usr/include/boost/function/function_template.hpp **** 
  40:/usr/include/boost/function/function_template.hpp **** #define BOOST_FUNCTION_ARG_TYPES BOOST_PP_REPEAT(BOOST_FUNCTION_NUM_ARGS,BOOST_FUNCTION_ARG_TYPE,BO
  41:/usr/include/boost/function/function_template.hpp **** 
  42:/usr/include/boost/function/function_template.hpp **** // Comma if nonzero number of arguments
  43:/usr/include/boost/function/function_template.hpp **** #if BOOST_FUNCTION_NUM_ARGS == 0
  44:/usr/include/boost/function/function_template.hpp **** #  define BOOST_FUNCTION_COMMA
  45:/usr/include/boost/function/function_template.hpp **** #else
  46:/usr/include/boost/function/function_template.hpp **** #  define BOOST_FUNCTION_COMMA ,
  47:/usr/include/boost/function/function_template.hpp **** #endif // BOOST_FUNCTION_NUM_ARGS > 0
  48:/usr/include/boost/function/function_template.hpp **** 
  49:/usr/include/boost/function/function_template.hpp **** // Class names used in this version of the code
  50:/usr/include/boost/function/function_template.hpp **** #define BOOST_FUNCTION_FUNCTION BOOST_JOIN(function,BOOST_FUNCTION_NUM_ARGS)
  51:/usr/include/boost/function/function_template.hpp **** #define BOOST_FUNCTION_FUNCTION_INVOKER \
  52:/usr/include/boost/function/function_template.hpp ****   BOOST_JOIN(function_invoker,BOOST_FUNCTION_NUM_ARGS)
  53:/usr/include/boost/function/function_template.hpp **** #define BOOST_FUNCTION_VOID_FUNCTION_INVOKER \
  54:/usr/include/boost/function/function_template.hpp ****   BOOST_JOIN(void_function_invoker,BOOST_FUNCTION_NUM_ARGS)
  55:/usr/include/boost/function/function_template.hpp **** #define BOOST_FUNCTION_FUNCTION_OBJ_INVOKER \
  56:/usr/include/boost/function/function_template.hpp ****   BOOST_JOIN(function_obj_invoker,BOOST_FUNCTION_NUM_ARGS)
  57:/usr/include/boost/function/function_template.hpp **** #define BOOST_FUNCTION_VOID_FUNCTION_OBJ_INVOKER \
  58:/usr/include/boost/function/function_template.hpp ****   BOOST_JOIN(void_function_obj_invoker,BOOST_FUNCTION_NUM_ARGS)
  59:/usr/include/boost/function/function_template.hpp **** #define BOOST_FUNCTION_FUNCTION_REF_INVOKER \
  60:/usr/include/boost/function/function_template.hpp ****   BOOST_JOIN(function_ref_invoker,BOOST_FUNCTION_NUM_ARGS)
  61:/usr/include/boost/function/function_template.hpp **** #define BOOST_FUNCTION_VOID_FUNCTION_REF_INVOKER \
  62:/usr/include/boost/function/function_template.hpp ****   BOOST_JOIN(void_function_ref_invoker,BOOST_FUNCTION_NUM_ARGS)
  63:/usr/include/boost/function/function_template.hpp **** #define BOOST_FUNCTION_MEMBER_INVOKER \
  64:/usr/include/boost/function/function_template.hpp ****   BOOST_JOIN(function_mem_invoker,BOOST_FUNCTION_NUM_ARGS)
  65:/usr/include/boost/function/function_template.hpp **** #define BOOST_FUNCTION_VOID_MEMBER_INVOKER \
  66:/usr/include/boost/function/function_template.hpp ****   BOOST_JOIN(function_void_mem_invoker,BOOST_FUNCTION_NUM_ARGS)
  67:/usr/include/boost/function/function_template.hpp **** #define BOOST_FUNCTION_GET_FUNCTION_INVOKER \
  68:/usr/include/boost/function/function_template.hpp ****   BOOST_JOIN(get_function_invoker,BOOST_FUNCTION_NUM_ARGS)
  69:/usr/include/boost/function/function_template.hpp **** #define BOOST_FUNCTION_GET_FUNCTION_OBJ_INVOKER \
  70:/usr/include/boost/function/function_template.hpp ****   BOOST_JOIN(get_function_obj_invoker,BOOST_FUNCTION_NUM_ARGS)
  71:/usr/include/boost/function/function_template.hpp **** #define BOOST_FUNCTION_GET_FUNCTION_REF_INVOKER \
  72:/usr/include/boost/function/function_template.hpp ****   BOOST_JOIN(get_function_ref_invoker,BOOST_FUNCTION_NUM_ARGS)
  73:/usr/include/boost/function/function_template.hpp **** #define BOOST_FUNCTION_GET_MEMBER_INVOKER \
  74:/usr/include/boost/function/function_template.hpp ****   BOOST_JOIN(get_member_invoker,BOOST_FUNCTION_NUM_ARGS)
  75:/usr/include/boost/function/function_template.hpp **** #define BOOST_FUNCTION_GET_INVOKER \
  76:/usr/include/boost/function/function_template.hpp ****   BOOST_JOIN(get_invoker,BOOST_FUNCTION_NUM_ARGS)
  77:/usr/include/boost/function/function_template.hpp **** #define BOOST_FUNCTION_VTABLE BOOST_JOIN(basic_vtable,BOOST_FUNCTION_NUM_ARGS)
  78:/usr/include/boost/function/function_template.hpp **** 
  79:/usr/include/boost/function/function_template.hpp **** #ifndef BOOST_NO_VOID_RETURNS
  80:/usr/include/boost/function/function_template.hpp **** #  define BOOST_FUNCTION_VOID_RETURN_TYPE void
  81:/usr/include/boost/function/function_template.hpp **** #  define BOOST_FUNCTION_RETURN(X) X
GAS LISTING /tmp/ccvUPO8Q.s 			page 274


  82:/usr/include/boost/function/function_template.hpp **** #else
  83:/usr/include/boost/function/function_template.hpp **** #  define BOOST_FUNCTION_VOID_RETURN_TYPE boost::detail::function::unusable
  84:/usr/include/boost/function/function_template.hpp **** #  define BOOST_FUNCTION_RETURN(X) X; return BOOST_FUNCTION_VOID_RETURN_TYPE ()
  85:/usr/include/boost/function/function_template.hpp **** #endif
  86:/usr/include/boost/function/function_template.hpp **** 
  87:/usr/include/boost/function/function_template.hpp **** namespace boost {
  88:/usr/include/boost/function/function_template.hpp ****   namespace detail {
  89:/usr/include/boost/function/function_template.hpp ****     namespace function {
  90:/usr/include/boost/function/function_template.hpp ****       template<
  91:/usr/include/boost/function/function_template.hpp ****         typename FunctionPtr,
  92:/usr/include/boost/function/function_template.hpp ****         typename R BOOST_FUNCTION_COMMA
  93:/usr/include/boost/function/function_template.hpp ****         BOOST_FUNCTION_TEMPLATE_PARMS
  94:/usr/include/boost/function/function_template.hpp ****         >
  95:/usr/include/boost/function/function_template.hpp ****       struct BOOST_FUNCTION_FUNCTION_INVOKER
  96:/usr/include/boost/function/function_template.hpp ****       {
  97:/usr/include/boost/function/function_template.hpp ****         static R invoke(function_buffer& function_ptr BOOST_FUNCTION_COMMA
  98:/usr/include/boost/function/function_template.hpp ****                         BOOST_FUNCTION_PARMS)
  99:/usr/include/boost/function/function_template.hpp ****         {
 100:/usr/include/boost/function/function_template.hpp ****           FunctionPtr f = reinterpret_cast<FunctionPtr>(function_ptr.members.func_ptr);
 101:/usr/include/boost/function/function_template.hpp ****           return f(BOOST_FUNCTION_ARGS);
 102:/usr/include/boost/function/function_template.hpp ****         }
 103:/usr/include/boost/function/function_template.hpp ****       };
 104:/usr/include/boost/function/function_template.hpp **** 
 105:/usr/include/boost/function/function_template.hpp ****       template<
 106:/usr/include/boost/function/function_template.hpp ****         typename FunctionPtr,
 107:/usr/include/boost/function/function_template.hpp ****         typename R BOOST_FUNCTION_COMMA
 108:/usr/include/boost/function/function_template.hpp ****         BOOST_FUNCTION_TEMPLATE_PARMS
 109:/usr/include/boost/function/function_template.hpp ****         >
 110:/usr/include/boost/function/function_template.hpp ****       struct BOOST_FUNCTION_VOID_FUNCTION_INVOKER
 111:/usr/include/boost/function/function_template.hpp ****       {
 112:/usr/include/boost/function/function_template.hpp ****         static BOOST_FUNCTION_VOID_RETURN_TYPE
 113:/usr/include/boost/function/function_template.hpp ****         invoke(function_buffer& function_ptr BOOST_FUNCTION_COMMA
 114:/usr/include/boost/function/function_template.hpp ****                BOOST_FUNCTION_PARMS)
 115:/usr/include/boost/function/function_template.hpp **** 
 116:/usr/include/boost/function/function_template.hpp ****         {
 117:/usr/include/boost/function/function_template.hpp ****           FunctionPtr f = reinterpret_cast<FunctionPtr>(function_ptr.members.func_ptr);
 118:/usr/include/boost/function/function_template.hpp ****           BOOST_FUNCTION_RETURN(f(BOOST_FUNCTION_ARGS));
 119:/usr/include/boost/function/function_template.hpp ****         }
 120:/usr/include/boost/function/function_template.hpp ****       };
 121:/usr/include/boost/function/function_template.hpp **** 
 122:/usr/include/boost/function/function_template.hpp ****       template<
 123:/usr/include/boost/function/function_template.hpp ****         typename FunctionObj,
 124:/usr/include/boost/function/function_template.hpp ****         typename R BOOST_FUNCTION_COMMA
 125:/usr/include/boost/function/function_template.hpp ****         BOOST_FUNCTION_TEMPLATE_PARMS
 126:/usr/include/boost/function/function_template.hpp ****       >
 127:/usr/include/boost/function/function_template.hpp ****       struct BOOST_FUNCTION_FUNCTION_OBJ_INVOKER
 128:/usr/include/boost/function/function_template.hpp ****       {
 129:/usr/include/boost/function/function_template.hpp ****         static R invoke(function_buffer& function_obj_ptr BOOST_FUNCTION_COMMA
 130:/usr/include/boost/function/function_template.hpp ****                         BOOST_FUNCTION_PARMS)
 131:/usr/include/boost/function/function_template.hpp **** 
 132:/usr/include/boost/function/function_template.hpp ****         {
 133:/usr/include/boost/function/function_template.hpp ****           FunctionObj* f;
 134:/usr/include/boost/function/function_template.hpp ****           if (function_allows_small_object_optimization<FunctionObj>::value)
 135:/usr/include/boost/function/function_template.hpp ****             f = reinterpret_cast<FunctionObj*>(function_obj_ptr.data);
 136:/usr/include/boost/function/function_template.hpp ****           else
 137:/usr/include/boost/function/function_template.hpp ****             f = reinterpret_cast<FunctionObj*>(function_obj_ptr.members.obj_ptr);
 138:/usr/include/boost/function/function_template.hpp ****           return (*f)(BOOST_FUNCTION_ARGS);
GAS LISTING /tmp/ccvUPO8Q.s 			page 275


 139:/usr/include/boost/function/function_template.hpp ****         }
 140:/usr/include/boost/function/function_template.hpp ****       };
 141:/usr/include/boost/function/function_template.hpp **** 
 142:/usr/include/boost/function/function_template.hpp ****       template<
 143:/usr/include/boost/function/function_template.hpp ****         typename FunctionObj,
 144:/usr/include/boost/function/function_template.hpp ****         typename R BOOST_FUNCTION_COMMA
 145:/usr/include/boost/function/function_template.hpp ****         BOOST_FUNCTION_TEMPLATE_PARMS
 146:/usr/include/boost/function/function_template.hpp ****       >
 147:/usr/include/boost/function/function_template.hpp ****       struct BOOST_FUNCTION_VOID_FUNCTION_OBJ_INVOKER
 148:/usr/include/boost/function/function_template.hpp ****       {
 149:/usr/include/boost/function/function_template.hpp ****         static BOOST_FUNCTION_VOID_RETURN_TYPE
 150:/usr/include/boost/function/function_template.hpp ****         invoke(function_buffer& function_obj_ptr BOOST_FUNCTION_COMMA
 151:/usr/include/boost/function/function_template.hpp ****                BOOST_FUNCTION_PARMS)
 152:/usr/include/boost/function/function_template.hpp **** 
 153:/usr/include/boost/function/function_template.hpp ****         {
 154:/usr/include/boost/function/function_template.hpp ****           FunctionObj* f;
 155:/usr/include/boost/function/function_template.hpp ****           if (function_allows_small_object_optimization<FunctionObj>::value)
 156:/usr/include/boost/function/function_template.hpp ****             f = reinterpret_cast<FunctionObj*>(function_obj_ptr.data);
 157:/usr/include/boost/function/function_template.hpp ****           else
 158:/usr/include/boost/function/function_template.hpp ****             f = reinterpret_cast<FunctionObj*>(function_obj_ptr.members.obj_ptr);
 159:/usr/include/boost/function/function_template.hpp ****           BOOST_FUNCTION_RETURN((*f)(BOOST_FUNCTION_ARGS));
 160:/usr/include/boost/function/function_template.hpp ****         }
 161:/usr/include/boost/function/function_template.hpp ****       };
 162:/usr/include/boost/function/function_template.hpp **** 
 163:/usr/include/boost/function/function_template.hpp ****       template<
 164:/usr/include/boost/function/function_template.hpp ****         typename FunctionObj,
 165:/usr/include/boost/function/function_template.hpp ****         typename R BOOST_FUNCTION_COMMA
 166:/usr/include/boost/function/function_template.hpp ****         BOOST_FUNCTION_TEMPLATE_PARMS
 167:/usr/include/boost/function/function_template.hpp ****       >
 168:/usr/include/boost/function/function_template.hpp ****       struct BOOST_FUNCTION_FUNCTION_REF_INVOKER
 169:/usr/include/boost/function/function_template.hpp ****       {
 170:/usr/include/boost/function/function_template.hpp ****         static R invoke(function_buffer& function_obj_ptr BOOST_FUNCTION_COMMA
 171:/usr/include/boost/function/function_template.hpp ****                         BOOST_FUNCTION_PARMS)
 172:/usr/include/boost/function/function_template.hpp **** 
 173:/usr/include/boost/function/function_template.hpp ****         {
 174:/usr/include/boost/function/function_template.hpp ****           FunctionObj* f =
 175:/usr/include/boost/function/function_template.hpp ****             reinterpret_cast<FunctionObj*>(function_obj_ptr.members.obj_ptr);
 176:/usr/include/boost/function/function_template.hpp ****           return (*f)(BOOST_FUNCTION_ARGS);
 177:/usr/include/boost/function/function_template.hpp ****         }
 178:/usr/include/boost/function/function_template.hpp ****       };
 179:/usr/include/boost/function/function_template.hpp **** 
 180:/usr/include/boost/function/function_template.hpp ****       template<
 181:/usr/include/boost/function/function_template.hpp ****         typename FunctionObj,
 182:/usr/include/boost/function/function_template.hpp ****         typename R BOOST_FUNCTION_COMMA
 183:/usr/include/boost/function/function_template.hpp ****         BOOST_FUNCTION_TEMPLATE_PARMS
 184:/usr/include/boost/function/function_template.hpp ****       >
 185:/usr/include/boost/function/function_template.hpp ****       struct BOOST_FUNCTION_VOID_FUNCTION_REF_INVOKER
 186:/usr/include/boost/function/function_template.hpp ****       {
 187:/usr/include/boost/function/function_template.hpp ****         static BOOST_FUNCTION_VOID_RETURN_TYPE
 188:/usr/include/boost/function/function_template.hpp ****         invoke(function_buffer& function_obj_ptr BOOST_FUNCTION_COMMA
 189:/usr/include/boost/function/function_template.hpp ****                BOOST_FUNCTION_PARMS)
 190:/usr/include/boost/function/function_template.hpp **** 
 191:/usr/include/boost/function/function_template.hpp ****         {
 192:/usr/include/boost/function/function_template.hpp ****           FunctionObj* f =
 193:/usr/include/boost/function/function_template.hpp ****             reinterpret_cast<FunctionObj*>(function_obj_ptr.members.obj_ptr);
 194:/usr/include/boost/function/function_template.hpp ****           BOOST_FUNCTION_RETURN((*f)(BOOST_FUNCTION_ARGS));
 195:/usr/include/boost/function/function_template.hpp ****         }
GAS LISTING /tmp/ccvUPO8Q.s 			page 276


 196:/usr/include/boost/function/function_template.hpp ****       };
 197:/usr/include/boost/function/function_template.hpp **** 
 198:/usr/include/boost/function/function_template.hpp **** #if BOOST_FUNCTION_NUM_ARGS > 0
 199:/usr/include/boost/function/function_template.hpp ****       /* Handle invocation of member pointers. */
 200:/usr/include/boost/function/function_template.hpp ****       template<
 201:/usr/include/boost/function/function_template.hpp ****         typename MemberPtr,
 202:/usr/include/boost/function/function_template.hpp ****         typename R BOOST_FUNCTION_COMMA
 203:/usr/include/boost/function/function_template.hpp ****         BOOST_FUNCTION_TEMPLATE_PARMS
 204:/usr/include/boost/function/function_template.hpp ****       >
 205:/usr/include/boost/function/function_template.hpp ****       struct BOOST_FUNCTION_MEMBER_INVOKER
 206:/usr/include/boost/function/function_template.hpp ****       {
 207:/usr/include/boost/function/function_template.hpp ****         static R invoke(function_buffer& function_obj_ptr BOOST_FUNCTION_COMMA
 208:/usr/include/boost/function/function_template.hpp ****                         BOOST_FUNCTION_PARMS)
 209:/usr/include/boost/function/function_template.hpp **** 
 210:/usr/include/boost/function/function_template.hpp ****         {
 211:/usr/include/boost/function/function_template.hpp ****           MemberPtr* f =
 212:/usr/include/boost/function/function_template.hpp ****             reinterpret_cast<MemberPtr*>(function_obj_ptr.data);
 213:/usr/include/boost/function/function_template.hpp ****           return boost::mem_fn(*f)(BOOST_FUNCTION_ARGS);
 214:/usr/include/boost/function/function_template.hpp ****         }
 215:/usr/include/boost/function/function_template.hpp ****       };
 216:/usr/include/boost/function/function_template.hpp **** 
 217:/usr/include/boost/function/function_template.hpp ****       template<
 218:/usr/include/boost/function/function_template.hpp ****         typename MemberPtr,
 219:/usr/include/boost/function/function_template.hpp ****         typename R BOOST_FUNCTION_COMMA
 220:/usr/include/boost/function/function_template.hpp ****         BOOST_FUNCTION_TEMPLATE_PARMS
 221:/usr/include/boost/function/function_template.hpp ****       >
 222:/usr/include/boost/function/function_template.hpp ****       struct BOOST_FUNCTION_VOID_MEMBER_INVOKER
 223:/usr/include/boost/function/function_template.hpp ****       {
 224:/usr/include/boost/function/function_template.hpp ****         static BOOST_FUNCTION_VOID_RETURN_TYPE
 225:/usr/include/boost/function/function_template.hpp ****         invoke(function_buffer& function_obj_ptr BOOST_FUNCTION_COMMA
 226:/usr/include/boost/function/function_template.hpp ****                BOOST_FUNCTION_PARMS)
 227:/usr/include/boost/function/function_template.hpp **** 
 228:/usr/include/boost/function/function_template.hpp ****         {
 229:/usr/include/boost/function/function_template.hpp ****           MemberPtr* f =
 230:/usr/include/boost/function/function_template.hpp ****             reinterpret_cast<MemberPtr*>(function_obj_ptr.data);
 231:/usr/include/boost/function/function_template.hpp ****           BOOST_FUNCTION_RETURN(boost::mem_fn(*f)(BOOST_FUNCTION_ARGS));
 232:/usr/include/boost/function/function_template.hpp ****         }
 233:/usr/include/boost/function/function_template.hpp ****       };
 234:/usr/include/boost/function/function_template.hpp **** #endif
 235:/usr/include/boost/function/function_template.hpp **** 
 236:/usr/include/boost/function/function_template.hpp ****       template<
 237:/usr/include/boost/function/function_template.hpp ****         typename FunctionPtr,
 238:/usr/include/boost/function/function_template.hpp ****         typename R BOOST_FUNCTION_COMMA
 239:/usr/include/boost/function/function_template.hpp ****         BOOST_FUNCTION_TEMPLATE_PARMS
 240:/usr/include/boost/function/function_template.hpp ****       >
 241:/usr/include/boost/function/function_template.hpp ****       struct BOOST_FUNCTION_GET_FUNCTION_INVOKER
 242:/usr/include/boost/function/function_template.hpp ****       {
 243:/usr/include/boost/function/function_template.hpp ****         typedef typename mpl::if_c<(is_void<R>::value),
 244:/usr/include/boost/function/function_template.hpp ****                             BOOST_FUNCTION_VOID_FUNCTION_INVOKER<
 245:/usr/include/boost/function/function_template.hpp ****                             FunctionPtr,
 246:/usr/include/boost/function/function_template.hpp ****                             R BOOST_FUNCTION_COMMA
 247:/usr/include/boost/function/function_template.hpp ****                             BOOST_FUNCTION_TEMPLATE_ARGS
 248:/usr/include/boost/function/function_template.hpp ****                           >,
 249:/usr/include/boost/function/function_template.hpp ****                           BOOST_FUNCTION_FUNCTION_INVOKER<
 250:/usr/include/boost/function/function_template.hpp ****                             FunctionPtr,
 251:/usr/include/boost/function/function_template.hpp ****                             R BOOST_FUNCTION_COMMA
 252:/usr/include/boost/function/function_template.hpp ****                             BOOST_FUNCTION_TEMPLATE_ARGS
GAS LISTING /tmp/ccvUPO8Q.s 			page 277


 253:/usr/include/boost/function/function_template.hpp ****                           >
 254:/usr/include/boost/function/function_template.hpp ****                        >::type type;
 255:/usr/include/boost/function/function_template.hpp ****       };
 256:/usr/include/boost/function/function_template.hpp **** 
 257:/usr/include/boost/function/function_template.hpp ****       template<
 258:/usr/include/boost/function/function_template.hpp ****         typename FunctionObj,
 259:/usr/include/boost/function/function_template.hpp ****         typename R BOOST_FUNCTION_COMMA
 260:/usr/include/boost/function/function_template.hpp ****         BOOST_FUNCTION_TEMPLATE_PARMS
 261:/usr/include/boost/function/function_template.hpp ****        >
 262:/usr/include/boost/function/function_template.hpp ****       struct BOOST_FUNCTION_GET_FUNCTION_OBJ_INVOKER
 263:/usr/include/boost/function/function_template.hpp ****       {
 264:/usr/include/boost/function/function_template.hpp ****         typedef typename mpl::if_c<(is_void<R>::value),
 265:/usr/include/boost/function/function_template.hpp ****                             BOOST_FUNCTION_VOID_FUNCTION_OBJ_INVOKER<
 266:/usr/include/boost/function/function_template.hpp ****                             FunctionObj,
 267:/usr/include/boost/function/function_template.hpp ****                             R BOOST_FUNCTION_COMMA
 268:/usr/include/boost/function/function_template.hpp ****                             BOOST_FUNCTION_TEMPLATE_ARGS
 269:/usr/include/boost/function/function_template.hpp ****                           >,
 270:/usr/include/boost/function/function_template.hpp ****                           BOOST_FUNCTION_FUNCTION_OBJ_INVOKER<
 271:/usr/include/boost/function/function_template.hpp ****                             FunctionObj,
 272:/usr/include/boost/function/function_template.hpp ****                             R BOOST_FUNCTION_COMMA
 273:/usr/include/boost/function/function_template.hpp ****                             BOOST_FUNCTION_TEMPLATE_ARGS
 274:/usr/include/boost/function/function_template.hpp ****                           >
 275:/usr/include/boost/function/function_template.hpp ****                        >::type type;
 276:/usr/include/boost/function/function_template.hpp ****       };
 277:/usr/include/boost/function/function_template.hpp **** 
 278:/usr/include/boost/function/function_template.hpp ****       template<
 279:/usr/include/boost/function/function_template.hpp ****         typename FunctionObj,
 280:/usr/include/boost/function/function_template.hpp ****         typename R BOOST_FUNCTION_COMMA
 281:/usr/include/boost/function/function_template.hpp ****         BOOST_FUNCTION_TEMPLATE_PARMS
 282:/usr/include/boost/function/function_template.hpp ****        >
 283:/usr/include/boost/function/function_template.hpp ****       struct BOOST_FUNCTION_GET_FUNCTION_REF_INVOKER
 284:/usr/include/boost/function/function_template.hpp ****       {
 285:/usr/include/boost/function/function_template.hpp ****         typedef typename mpl::if_c<(is_void<R>::value),
 286:/usr/include/boost/function/function_template.hpp ****                             BOOST_FUNCTION_VOID_FUNCTION_REF_INVOKER<
 287:/usr/include/boost/function/function_template.hpp ****                             FunctionObj,
 288:/usr/include/boost/function/function_template.hpp ****                             R BOOST_FUNCTION_COMMA
 289:/usr/include/boost/function/function_template.hpp ****                             BOOST_FUNCTION_TEMPLATE_ARGS
 290:/usr/include/boost/function/function_template.hpp ****                           >,
 291:/usr/include/boost/function/function_template.hpp ****                           BOOST_FUNCTION_FUNCTION_REF_INVOKER<
 292:/usr/include/boost/function/function_template.hpp ****                             FunctionObj,
 293:/usr/include/boost/function/function_template.hpp ****                             R BOOST_FUNCTION_COMMA
 294:/usr/include/boost/function/function_template.hpp ****                             BOOST_FUNCTION_TEMPLATE_ARGS
 295:/usr/include/boost/function/function_template.hpp ****                           >
 296:/usr/include/boost/function/function_template.hpp ****                        >::type type;
 297:/usr/include/boost/function/function_template.hpp ****       };
 298:/usr/include/boost/function/function_template.hpp **** 
 299:/usr/include/boost/function/function_template.hpp **** #if BOOST_FUNCTION_NUM_ARGS > 0
 300:/usr/include/boost/function/function_template.hpp ****       /* Retrieve the appropriate invoker for a member pointer.  */
 301:/usr/include/boost/function/function_template.hpp ****       template<
 302:/usr/include/boost/function/function_template.hpp ****         typename MemberPtr,
 303:/usr/include/boost/function/function_template.hpp ****         typename R BOOST_FUNCTION_COMMA
 304:/usr/include/boost/function/function_template.hpp ****         BOOST_FUNCTION_TEMPLATE_PARMS
 305:/usr/include/boost/function/function_template.hpp ****        >
 306:/usr/include/boost/function/function_template.hpp ****       struct BOOST_FUNCTION_GET_MEMBER_INVOKER
 307:/usr/include/boost/function/function_template.hpp ****       {
 308:/usr/include/boost/function/function_template.hpp ****         typedef typename mpl::if_c<(is_void<R>::value),
 309:/usr/include/boost/function/function_template.hpp ****                             BOOST_FUNCTION_VOID_MEMBER_INVOKER<
GAS LISTING /tmp/ccvUPO8Q.s 			page 278


 310:/usr/include/boost/function/function_template.hpp ****                             MemberPtr,
 311:/usr/include/boost/function/function_template.hpp ****                             R BOOST_FUNCTION_COMMA
 312:/usr/include/boost/function/function_template.hpp ****                             BOOST_FUNCTION_TEMPLATE_ARGS
 313:/usr/include/boost/function/function_template.hpp ****                           >,
 314:/usr/include/boost/function/function_template.hpp ****                           BOOST_FUNCTION_MEMBER_INVOKER<
 315:/usr/include/boost/function/function_template.hpp ****                             MemberPtr,
 316:/usr/include/boost/function/function_template.hpp ****                             R BOOST_FUNCTION_COMMA
 317:/usr/include/boost/function/function_template.hpp ****                             BOOST_FUNCTION_TEMPLATE_ARGS
 318:/usr/include/boost/function/function_template.hpp ****                           >
 319:/usr/include/boost/function/function_template.hpp ****                        >::type type;
 320:/usr/include/boost/function/function_template.hpp ****       };
 321:/usr/include/boost/function/function_template.hpp **** #endif
 322:/usr/include/boost/function/function_template.hpp **** 
 323:/usr/include/boost/function/function_template.hpp ****       /* Given the tag returned by get_function_tag, retrieve the
 324:/usr/include/boost/function/function_template.hpp ****          actual invoker that will be used for the given function
 325:/usr/include/boost/function/function_template.hpp ****          object.
 326:/usr/include/boost/function/function_template.hpp **** 
 327:/usr/include/boost/function/function_template.hpp ****          Each specialization contains an "apply" nested class template
 328:/usr/include/boost/function/function_template.hpp ****          that accepts the function object, return type, function
 329:/usr/include/boost/function/function_template.hpp ****          argument types, and allocator. The resulting "apply" class
 330:/usr/include/boost/function/function_template.hpp ****          contains two typedefs, "invoker_type" and "manager_type",
 331:/usr/include/boost/function/function_template.hpp ****          which correspond to the invoker and manager types. */
 332:/usr/include/boost/function/function_template.hpp ****       template<typename Tag>
 333:/usr/include/boost/function/function_template.hpp ****       struct BOOST_FUNCTION_GET_INVOKER { };
 334:/usr/include/boost/function/function_template.hpp **** 
 335:/usr/include/boost/function/function_template.hpp ****       /* Retrieve the invoker for a function pointer. */
 336:/usr/include/boost/function/function_template.hpp ****       template<>
 337:/usr/include/boost/function/function_template.hpp ****       struct BOOST_FUNCTION_GET_INVOKER<function_ptr_tag>
 338:/usr/include/boost/function/function_template.hpp ****       {
 339:/usr/include/boost/function/function_template.hpp ****         template<typename FunctionPtr,
 340:/usr/include/boost/function/function_template.hpp ****                  typename R BOOST_FUNCTION_COMMA BOOST_FUNCTION_TEMPLATE_PARMS>
 341:/usr/include/boost/function/function_template.hpp ****         struct apply
 342:/usr/include/boost/function/function_template.hpp ****         {
 343:/usr/include/boost/function/function_template.hpp ****           typedef typename BOOST_FUNCTION_GET_FUNCTION_INVOKER<
 344:/usr/include/boost/function/function_template.hpp ****                              FunctionPtr,
 345:/usr/include/boost/function/function_template.hpp ****                              R BOOST_FUNCTION_COMMA
 346:/usr/include/boost/function/function_template.hpp ****                              BOOST_FUNCTION_TEMPLATE_ARGS
 347:/usr/include/boost/function/function_template.hpp ****                            >::type
 348:/usr/include/boost/function/function_template.hpp ****             invoker_type;
 349:/usr/include/boost/function/function_template.hpp **** 
 350:/usr/include/boost/function/function_template.hpp ****           typedef functor_manager<FunctionPtr> manager_type;
 351:/usr/include/boost/function/function_template.hpp ****         };
 352:/usr/include/boost/function/function_template.hpp **** 
 353:/usr/include/boost/function/function_template.hpp ****         template<typename FunctionPtr,
 354:/usr/include/boost/function/function_template.hpp ****                  typename R BOOST_FUNCTION_COMMA BOOST_FUNCTION_TEMPLATE_PARMS,
 355:/usr/include/boost/function/function_template.hpp ****                  typename Allocator>
 356:/usr/include/boost/function/function_template.hpp ****         struct apply_a
 357:/usr/include/boost/function/function_template.hpp ****         {
 358:/usr/include/boost/function/function_template.hpp ****           typedef typename BOOST_FUNCTION_GET_FUNCTION_INVOKER<
 359:/usr/include/boost/function/function_template.hpp ****                              FunctionPtr,
 360:/usr/include/boost/function/function_template.hpp ****                              R BOOST_FUNCTION_COMMA
 361:/usr/include/boost/function/function_template.hpp ****                              BOOST_FUNCTION_TEMPLATE_ARGS
 362:/usr/include/boost/function/function_template.hpp ****                            >::type
 363:/usr/include/boost/function/function_template.hpp ****             invoker_type;
 364:/usr/include/boost/function/function_template.hpp **** 
 365:/usr/include/boost/function/function_template.hpp ****           typedef functor_manager<FunctionPtr> manager_type;
 366:/usr/include/boost/function/function_template.hpp ****         };
GAS LISTING /tmp/ccvUPO8Q.s 			page 279


 367:/usr/include/boost/function/function_template.hpp ****       };
 368:/usr/include/boost/function/function_template.hpp **** 
 369:/usr/include/boost/function/function_template.hpp **** #if BOOST_FUNCTION_NUM_ARGS > 0
 370:/usr/include/boost/function/function_template.hpp ****       /* Retrieve the invoker for a member pointer. */
 371:/usr/include/boost/function/function_template.hpp ****       template<>
 372:/usr/include/boost/function/function_template.hpp ****       struct BOOST_FUNCTION_GET_INVOKER<member_ptr_tag>
 373:/usr/include/boost/function/function_template.hpp ****       {
 374:/usr/include/boost/function/function_template.hpp ****         template<typename MemberPtr,
 375:/usr/include/boost/function/function_template.hpp ****                  typename R BOOST_FUNCTION_COMMA BOOST_FUNCTION_TEMPLATE_PARMS>
 376:/usr/include/boost/function/function_template.hpp ****         struct apply
 377:/usr/include/boost/function/function_template.hpp ****         {
 378:/usr/include/boost/function/function_template.hpp ****           typedef typename BOOST_FUNCTION_GET_MEMBER_INVOKER<
 379:/usr/include/boost/function/function_template.hpp ****                              MemberPtr,
 380:/usr/include/boost/function/function_template.hpp ****                              R BOOST_FUNCTION_COMMA
 381:/usr/include/boost/function/function_template.hpp ****                              BOOST_FUNCTION_TEMPLATE_ARGS
 382:/usr/include/boost/function/function_template.hpp ****                            >::type
 383:/usr/include/boost/function/function_template.hpp ****             invoker_type;
 384:/usr/include/boost/function/function_template.hpp **** 
 385:/usr/include/boost/function/function_template.hpp ****           typedef functor_manager<MemberPtr> manager_type;
 386:/usr/include/boost/function/function_template.hpp ****         };
 387:/usr/include/boost/function/function_template.hpp **** 
 388:/usr/include/boost/function/function_template.hpp ****         template<typename MemberPtr,
 389:/usr/include/boost/function/function_template.hpp ****                  typename R BOOST_FUNCTION_COMMA BOOST_FUNCTION_TEMPLATE_PARMS,
 390:/usr/include/boost/function/function_template.hpp ****                  typename Allocator>
 391:/usr/include/boost/function/function_template.hpp ****         struct apply_a
 392:/usr/include/boost/function/function_template.hpp ****         {
 393:/usr/include/boost/function/function_template.hpp ****           typedef typename BOOST_FUNCTION_GET_MEMBER_INVOKER<
 394:/usr/include/boost/function/function_template.hpp ****                              MemberPtr,
 395:/usr/include/boost/function/function_template.hpp ****                              R BOOST_FUNCTION_COMMA
 396:/usr/include/boost/function/function_template.hpp ****                              BOOST_FUNCTION_TEMPLATE_ARGS
 397:/usr/include/boost/function/function_template.hpp ****                            >::type
 398:/usr/include/boost/function/function_template.hpp ****             invoker_type;
 399:/usr/include/boost/function/function_template.hpp **** 
 400:/usr/include/boost/function/function_template.hpp ****           typedef functor_manager<MemberPtr> manager_type;
 401:/usr/include/boost/function/function_template.hpp ****         };
 402:/usr/include/boost/function/function_template.hpp ****       };
 403:/usr/include/boost/function/function_template.hpp **** #endif
 404:/usr/include/boost/function/function_template.hpp **** 
 405:/usr/include/boost/function/function_template.hpp ****       /* Retrieve the invoker for a function object. */
 406:/usr/include/boost/function/function_template.hpp ****       template<>
 407:/usr/include/boost/function/function_template.hpp ****       struct BOOST_FUNCTION_GET_INVOKER<function_obj_tag>
 408:/usr/include/boost/function/function_template.hpp ****       {
 409:/usr/include/boost/function/function_template.hpp ****         template<typename FunctionObj,
 410:/usr/include/boost/function/function_template.hpp ****                  typename R BOOST_FUNCTION_COMMA BOOST_FUNCTION_TEMPLATE_PARMS>
 411:/usr/include/boost/function/function_template.hpp ****         struct apply
 412:/usr/include/boost/function/function_template.hpp ****         {
 413:/usr/include/boost/function/function_template.hpp ****           typedef typename BOOST_FUNCTION_GET_FUNCTION_OBJ_INVOKER<
 414:/usr/include/boost/function/function_template.hpp ****                              FunctionObj,
 415:/usr/include/boost/function/function_template.hpp ****                              R BOOST_FUNCTION_COMMA
 416:/usr/include/boost/function/function_template.hpp ****                              BOOST_FUNCTION_TEMPLATE_ARGS
 417:/usr/include/boost/function/function_template.hpp ****                            >::type
 418:/usr/include/boost/function/function_template.hpp ****             invoker_type;
 419:/usr/include/boost/function/function_template.hpp **** 
 420:/usr/include/boost/function/function_template.hpp ****           typedef functor_manager<FunctionObj> manager_type;
 421:/usr/include/boost/function/function_template.hpp ****         };
 422:/usr/include/boost/function/function_template.hpp **** 
 423:/usr/include/boost/function/function_template.hpp ****         template<typename FunctionObj,
GAS LISTING /tmp/ccvUPO8Q.s 			page 280


 424:/usr/include/boost/function/function_template.hpp ****                  typename R BOOST_FUNCTION_COMMA BOOST_FUNCTION_TEMPLATE_PARMS,
 425:/usr/include/boost/function/function_template.hpp ****                  typename Allocator>
 426:/usr/include/boost/function/function_template.hpp ****         struct apply_a
 427:/usr/include/boost/function/function_template.hpp ****         {
 428:/usr/include/boost/function/function_template.hpp ****           typedef typename BOOST_FUNCTION_GET_FUNCTION_OBJ_INVOKER<
 429:/usr/include/boost/function/function_template.hpp ****                              FunctionObj,
 430:/usr/include/boost/function/function_template.hpp ****                              R BOOST_FUNCTION_COMMA
 431:/usr/include/boost/function/function_template.hpp ****                              BOOST_FUNCTION_TEMPLATE_ARGS
 432:/usr/include/boost/function/function_template.hpp ****                            >::type
 433:/usr/include/boost/function/function_template.hpp ****             invoker_type;
 434:/usr/include/boost/function/function_template.hpp **** 
 435:/usr/include/boost/function/function_template.hpp ****           typedef functor_manager_a<FunctionObj, Allocator> manager_type;
 436:/usr/include/boost/function/function_template.hpp ****         };
 437:/usr/include/boost/function/function_template.hpp ****       };
 438:/usr/include/boost/function/function_template.hpp **** 
 439:/usr/include/boost/function/function_template.hpp ****       /* Retrieve the invoker for a reference to a function object. */
 440:/usr/include/boost/function/function_template.hpp ****       template<>
 441:/usr/include/boost/function/function_template.hpp ****       struct BOOST_FUNCTION_GET_INVOKER<function_obj_ref_tag>
 442:/usr/include/boost/function/function_template.hpp ****       {
 443:/usr/include/boost/function/function_template.hpp ****         template<typename RefWrapper,
 444:/usr/include/boost/function/function_template.hpp ****                  typename R BOOST_FUNCTION_COMMA BOOST_FUNCTION_TEMPLATE_PARMS>
 445:/usr/include/boost/function/function_template.hpp ****         struct apply
 446:/usr/include/boost/function/function_template.hpp ****         {
 447:/usr/include/boost/function/function_template.hpp ****           typedef typename BOOST_FUNCTION_GET_FUNCTION_REF_INVOKER<
 448:/usr/include/boost/function/function_template.hpp ****                              typename RefWrapper::type,
 449:/usr/include/boost/function/function_template.hpp ****                              R BOOST_FUNCTION_COMMA
 450:/usr/include/boost/function/function_template.hpp ****                              BOOST_FUNCTION_TEMPLATE_ARGS
 451:/usr/include/boost/function/function_template.hpp ****                            >::type
 452:/usr/include/boost/function/function_template.hpp ****             invoker_type;
 453:/usr/include/boost/function/function_template.hpp **** 
 454:/usr/include/boost/function/function_template.hpp ****           typedef reference_manager<typename RefWrapper::type> manager_type;
 455:/usr/include/boost/function/function_template.hpp ****         };
 456:/usr/include/boost/function/function_template.hpp **** 
 457:/usr/include/boost/function/function_template.hpp ****         template<typename RefWrapper,
 458:/usr/include/boost/function/function_template.hpp ****                  typename R BOOST_FUNCTION_COMMA BOOST_FUNCTION_TEMPLATE_PARMS,
 459:/usr/include/boost/function/function_template.hpp ****                  typename Allocator>
 460:/usr/include/boost/function/function_template.hpp ****         struct apply_a
 461:/usr/include/boost/function/function_template.hpp ****         {
 462:/usr/include/boost/function/function_template.hpp ****           typedef typename BOOST_FUNCTION_GET_FUNCTION_REF_INVOKER<
 463:/usr/include/boost/function/function_template.hpp ****                              typename RefWrapper::type,
 464:/usr/include/boost/function/function_template.hpp ****                              R BOOST_FUNCTION_COMMA
 465:/usr/include/boost/function/function_template.hpp ****                              BOOST_FUNCTION_TEMPLATE_ARGS
 466:/usr/include/boost/function/function_template.hpp ****                            >::type
 467:/usr/include/boost/function/function_template.hpp ****             invoker_type;
 468:/usr/include/boost/function/function_template.hpp **** 
 469:/usr/include/boost/function/function_template.hpp ****           typedef reference_manager<typename RefWrapper::type> manager_type;
 470:/usr/include/boost/function/function_template.hpp ****         };
 471:/usr/include/boost/function/function_template.hpp ****       };
 472:/usr/include/boost/function/function_template.hpp **** 
 473:/usr/include/boost/function/function_template.hpp **** 
 474:/usr/include/boost/function/function_template.hpp ****       /**
 475:/usr/include/boost/function/function_template.hpp ****        * vtable for a specific boost::function instance. This
 476:/usr/include/boost/function/function_template.hpp ****        * structure must be an aggregate so that we can use static
 477:/usr/include/boost/function/function_template.hpp ****        * initialization in boost::function's assign_to and assign_to_a
 478:/usr/include/boost/function/function_template.hpp ****        * members. It therefore cannot have any constructors,
 479:/usr/include/boost/function/function_template.hpp ****        * destructors, base classes, etc.
 480:/usr/include/boost/function/function_template.hpp ****        */
GAS LISTING /tmp/ccvUPO8Q.s 			page 281


 481:/usr/include/boost/function/function_template.hpp ****       template<typename R BOOST_FUNCTION_COMMA BOOST_FUNCTION_TEMPLATE_PARMS>
 482:/usr/include/boost/function/function_template.hpp ****       struct BOOST_FUNCTION_VTABLE
 483:/usr/include/boost/function/function_template.hpp ****       {
 484:/usr/include/boost/function/function_template.hpp **** #ifndef BOOST_NO_VOID_RETURNS
 485:/usr/include/boost/function/function_template.hpp ****         typedef R         result_type;
 486:/usr/include/boost/function/function_template.hpp **** #else
 487:/usr/include/boost/function/function_template.hpp ****         typedef typename function_return_type<R>::type result_type;
 488:/usr/include/boost/function/function_template.hpp **** #endif // BOOST_NO_VOID_RETURNS
 489:/usr/include/boost/function/function_template.hpp **** 
 490:/usr/include/boost/function/function_template.hpp ****         typedef result_type (*invoker_type)(function_buffer&
 491:/usr/include/boost/function/function_template.hpp ****                                             BOOST_FUNCTION_COMMA
 492:/usr/include/boost/function/function_template.hpp ****                                             BOOST_FUNCTION_TEMPLATE_ARGS);
 493:/usr/include/boost/function/function_template.hpp **** 
 494:/usr/include/boost/function/function_template.hpp ****         template<typename F>
 495:/usr/include/boost/function/function_template.hpp ****         bool assign_to(F f, function_buffer& functor) const
 496:/usr/include/boost/function/function_template.hpp ****         {
 497:/usr/include/boost/function/function_template.hpp ****           typedef typename get_function_tag<F>::type tag;
 498:/usr/include/boost/function/function_template.hpp ****           return assign_to(f, functor, tag());
 499:/usr/include/boost/function/function_template.hpp ****         }
 500:/usr/include/boost/function/function_template.hpp ****         template<typename F,typename Allocator>
 501:/usr/include/boost/function/function_template.hpp ****         bool assign_to_a(F f, function_buffer& functor, Allocator a) const
 502:/usr/include/boost/function/function_template.hpp ****         {
 503:/usr/include/boost/function/function_template.hpp ****           typedef typename get_function_tag<F>::type tag;
 504:/usr/include/boost/function/function_template.hpp ****           return assign_to_a(f, functor, a, tag());
 505:/usr/include/boost/function/function_template.hpp ****         }
 506:/usr/include/boost/function/function_template.hpp **** 
 507:/usr/include/boost/function/function_template.hpp ****         void clear(function_buffer& functor) const
 508:/usr/include/boost/function/function_template.hpp ****         {
 509:/usr/include/boost/function/function_template.hpp ****           if (base.manager)
 510:/usr/include/boost/function/function_template.hpp ****             base.manager(functor, functor, destroy_functor_tag);
 511:/usr/include/boost/function/function_template.hpp ****         }
 512:/usr/include/boost/function/function_template.hpp **** 
 513:/usr/include/boost/function/function_template.hpp ****       private:
 514:/usr/include/boost/function/function_template.hpp ****         // Function pointers
 515:/usr/include/boost/function/function_template.hpp ****         template<typename FunctionPtr>
 516:/usr/include/boost/function/function_template.hpp ****         bool
 517:/usr/include/boost/function/function_template.hpp ****         assign_to(FunctionPtr f, function_buffer& functor, function_ptr_tag) const
 518:/usr/include/boost/function/function_template.hpp ****         {
 519:/usr/include/boost/function/function_template.hpp ****           this->clear(functor);
 520:/usr/include/boost/function/function_template.hpp ****           if (f) {
 521:/usr/include/boost/function/function_template.hpp ****             // should be a reinterpret cast, but some compilers insist
 522:/usr/include/boost/function/function_template.hpp ****             // on giving cv-qualifiers to free functions
 523:/usr/include/boost/function/function_template.hpp ****             functor.members.func_ptr = reinterpret_cast<void (*)()>(f);
 524:/usr/include/boost/function/function_template.hpp ****             return true;
 525:/usr/include/boost/function/function_template.hpp ****           } else {
 526:/usr/include/boost/function/function_template.hpp ****             return false;
 527:/usr/include/boost/function/function_template.hpp ****           }
 528:/usr/include/boost/function/function_template.hpp ****         }
 529:/usr/include/boost/function/function_template.hpp ****         template<typename FunctionPtr,typename Allocator>
 530:/usr/include/boost/function/function_template.hpp ****         bool
 531:/usr/include/boost/function/function_template.hpp ****         assign_to_a(FunctionPtr f, function_buffer& functor, Allocator, function_ptr_tag) const
 532:/usr/include/boost/function/function_template.hpp ****         {
 533:/usr/include/boost/function/function_template.hpp ****           return assign_to(f,functor,function_ptr_tag());
 534:/usr/include/boost/function/function_template.hpp ****         }
 535:/usr/include/boost/function/function_template.hpp **** 
 536:/usr/include/boost/function/function_template.hpp ****         // Member pointers
 537:/usr/include/boost/function/function_template.hpp **** #if BOOST_FUNCTION_NUM_ARGS > 0
GAS LISTING /tmp/ccvUPO8Q.s 			page 282


 538:/usr/include/boost/function/function_template.hpp ****         template<typename MemberPtr>
 539:/usr/include/boost/function/function_template.hpp ****         bool assign_to(MemberPtr f, function_buffer& functor, member_ptr_tag) const
 540:/usr/include/boost/function/function_template.hpp ****         {
 541:/usr/include/boost/function/function_template.hpp ****           // DPG TBD: Add explicit support for member function
 542:/usr/include/boost/function/function_template.hpp ****           // objects, so we invoke through mem_fn() but we retain the
 543:/usr/include/boost/function/function_template.hpp ****           // right target_type() values.
 544:/usr/include/boost/function/function_template.hpp ****           if (f) {
 545:/usr/include/boost/function/function_template.hpp ****             this->assign_to(boost::mem_fn(f), functor);
 546:/usr/include/boost/function/function_template.hpp ****             return true;
 547:/usr/include/boost/function/function_template.hpp ****           } else {
 548:/usr/include/boost/function/function_template.hpp ****             return false;
 549:/usr/include/boost/function/function_template.hpp ****           }
 550:/usr/include/boost/function/function_template.hpp ****         }
 551:/usr/include/boost/function/function_template.hpp ****         template<typename MemberPtr,typename Allocator>
 552:/usr/include/boost/function/function_template.hpp ****         bool assign_to_a(MemberPtr f, function_buffer& functor, Allocator a, member_ptr_tag) const
 553:/usr/include/boost/function/function_template.hpp ****         {
 554:/usr/include/boost/function/function_template.hpp ****           // DPG TBD: Add explicit support for member function
 555:/usr/include/boost/function/function_template.hpp ****           // objects, so we invoke through mem_fn() but we retain the
 556:/usr/include/boost/function/function_template.hpp ****           // right target_type() values.
 557:/usr/include/boost/function/function_template.hpp ****           if (f) {
 558:/usr/include/boost/function/function_template.hpp ****             this->assign_to_a(boost::mem_fn(f), functor, a);
 559:/usr/include/boost/function/function_template.hpp ****             return true;
 560:/usr/include/boost/function/function_template.hpp ****           } else {
 561:/usr/include/boost/function/function_template.hpp ****             return false;
 562:/usr/include/boost/function/function_template.hpp ****           }
 563:/usr/include/boost/function/function_template.hpp ****         }
 564:/usr/include/boost/function/function_template.hpp **** #endif // BOOST_FUNCTION_NUM_ARGS > 0
 565:/usr/include/boost/function/function_template.hpp **** 
 566:/usr/include/boost/function/function_template.hpp ****         // Function objects
 567:/usr/include/boost/function/function_template.hpp ****         // Assign to a function object using the small object optimization
 568:/usr/include/boost/function/function_template.hpp ****         template<typename FunctionObj>
 569:/usr/include/boost/function/function_template.hpp ****         void
 570:/usr/include/boost/function/function_template.hpp ****         assign_functor(FunctionObj f, function_buffer& functor, mpl::true_) const
 571:/usr/include/boost/function/function_template.hpp ****         {
 572:/usr/include/boost/function/function_template.hpp ****           new (reinterpret_cast<void*>(functor.data)) FunctionObj(f);
 573:/usr/include/boost/function/function_template.hpp ****         }
 574:/usr/include/boost/function/function_template.hpp ****         template<typename FunctionObj,typename Allocator>
 575:/usr/include/boost/function/function_template.hpp ****         void
 576:/usr/include/boost/function/function_template.hpp ****         assign_functor_a(FunctionObj f, function_buffer& functor, Allocator, mpl::true_) const
 577:/usr/include/boost/function/function_template.hpp ****         {
 578:/usr/include/boost/function/function_template.hpp ****           assign_functor(f,functor,mpl::true_());
 579:/usr/include/boost/function/function_template.hpp ****         }
 580:/usr/include/boost/function/function_template.hpp **** 
 581:/usr/include/boost/function/function_template.hpp ****         // Assign to a function object allocated on the heap.
 582:/usr/include/boost/function/function_template.hpp ****         template<typename FunctionObj>
 583:/usr/include/boost/function/function_template.hpp ****         void
 584:/usr/include/boost/function/function_template.hpp ****         assign_functor(FunctionObj f, function_buffer& functor, mpl::false_) const
 585:/usr/include/boost/function/function_template.hpp ****         {
 586:/usr/include/boost/function/function_template.hpp ****           functor.members.obj_ptr = new FunctionObj(f);
 587:/usr/include/boost/function/function_template.hpp ****         }
 588:/usr/include/boost/function/function_template.hpp ****         template<typename FunctionObj,typename Allocator>
 589:/usr/include/boost/function/function_template.hpp ****         void
 590:/usr/include/boost/function/function_template.hpp ****         assign_functor_a(FunctionObj f, function_buffer& functor, Allocator a, mpl::false_) const
 591:/usr/include/boost/function/function_template.hpp ****         {
 592:/usr/include/boost/function/function_template.hpp ****           typedef functor_wrapper<FunctionObj,Allocator> functor_wrapper_type;
 593:/usr/include/boost/function/function_template.hpp ****           typedef typename Allocator::template rebind<functor_wrapper_type>::other
 594:/usr/include/boost/function/function_template.hpp ****             wrapper_allocator_type;
GAS LISTING /tmp/ccvUPO8Q.s 			page 283


 595:/usr/include/boost/function/function_template.hpp ****           typedef typename wrapper_allocator_type::pointer wrapper_allocator_pointer_type;
 596:/usr/include/boost/function/function_template.hpp ****           wrapper_allocator_type wrapper_allocator(a);
 597:/usr/include/boost/function/function_template.hpp ****           wrapper_allocator_pointer_type copy = wrapper_allocator.allocate(1);
 598:/usr/include/boost/function/function_template.hpp ****           wrapper_allocator.construct(copy, functor_wrapper_type(f,a));
 599:/usr/include/boost/function/function_template.hpp ****           functor_wrapper_type* new_f = static_cast<functor_wrapper_type*>(copy);
 600:/usr/include/boost/function/function_template.hpp ****           functor.members.obj_ptr = new_f;
 601:/usr/include/boost/function/function_template.hpp ****         }
 602:/usr/include/boost/function/function_template.hpp **** 
 603:/usr/include/boost/function/function_template.hpp ****         template<typename FunctionObj>
 604:/usr/include/boost/function/function_template.hpp ****         bool
 605:/usr/include/boost/function/function_template.hpp ****         assign_to(FunctionObj f, function_buffer& functor, function_obj_tag) const
 606:/usr/include/boost/function/function_template.hpp ****         {
 607:/usr/include/boost/function/function_template.hpp ****           if (!boost::detail::function::has_empty_target(boost::addressof(f))) {
 608:/usr/include/boost/function/function_template.hpp ****             assign_functor(f, functor,
 609:/usr/include/boost/function/function_template.hpp ****                            mpl::bool_<(function_allows_small_object_optimization<FunctionObj>::valu
 610:/usr/include/boost/function/function_template.hpp ****             return true;
 611:/usr/include/boost/function/function_template.hpp ****           } else {
 612:/usr/include/boost/function/function_template.hpp ****             return false;
 613:/usr/include/boost/function/function_template.hpp ****           }
 614:/usr/include/boost/function/function_template.hpp ****         }
 615:/usr/include/boost/function/function_template.hpp ****         template<typename FunctionObj,typename Allocator>
 616:/usr/include/boost/function/function_template.hpp ****         bool
 617:/usr/include/boost/function/function_template.hpp ****         assign_to_a(FunctionObj f, function_buffer& functor, Allocator a, function_obj_tag) const
 618:/usr/include/boost/function/function_template.hpp ****         {
 619:/usr/include/boost/function/function_template.hpp ****           if (!boost::detail::function::has_empty_target(boost::addressof(f))) {
 620:/usr/include/boost/function/function_template.hpp ****             assign_functor_a(f, functor, a,
 621:/usr/include/boost/function/function_template.hpp ****                            mpl::bool_<(function_allows_small_object_optimization<FunctionObj>::valu
 622:/usr/include/boost/function/function_template.hpp ****             return true;
 623:/usr/include/boost/function/function_template.hpp ****           } else {
 624:/usr/include/boost/function/function_template.hpp ****             return false;
 625:/usr/include/boost/function/function_template.hpp ****           }
 626:/usr/include/boost/function/function_template.hpp ****         }
 627:/usr/include/boost/function/function_template.hpp **** 
 628:/usr/include/boost/function/function_template.hpp ****         // Reference to a function object
 629:/usr/include/boost/function/function_template.hpp ****         template<typename FunctionObj>
 630:/usr/include/boost/function/function_template.hpp ****         bool
 631:/usr/include/boost/function/function_template.hpp ****         assign_to(const reference_wrapper<FunctionObj>& f,
 632:/usr/include/boost/function/function_template.hpp ****                   function_buffer& functor, function_obj_ref_tag) const
 633:/usr/include/boost/function/function_template.hpp ****         {
 634:/usr/include/boost/function/function_template.hpp ****           functor.members.obj_ref.obj_ptr = (void *)(f.get_pointer());
 635:/usr/include/boost/function/function_template.hpp ****           functor.members.obj_ref.is_const_qualified = is_const<FunctionObj>::value;
 636:/usr/include/boost/function/function_template.hpp ****           functor.members.obj_ref.is_volatile_qualified = is_volatile<FunctionObj>::value;
 637:/usr/include/boost/function/function_template.hpp ****           return true;
 638:/usr/include/boost/function/function_template.hpp ****         }
 639:/usr/include/boost/function/function_template.hpp ****         template<typename FunctionObj,typename Allocator>
 640:/usr/include/boost/function/function_template.hpp ****         bool
 641:/usr/include/boost/function/function_template.hpp ****         assign_to_a(const reference_wrapper<FunctionObj>& f,
 642:/usr/include/boost/function/function_template.hpp ****                   function_buffer& functor, Allocator, function_obj_ref_tag) const
 643:/usr/include/boost/function/function_template.hpp ****         {
 644:/usr/include/boost/function/function_template.hpp ****           return assign_to(f,functor,function_obj_ref_tag());
 645:/usr/include/boost/function/function_template.hpp ****         }
 646:/usr/include/boost/function/function_template.hpp **** 
 647:/usr/include/boost/function/function_template.hpp ****       public:
 648:/usr/include/boost/function/function_template.hpp ****         vtable_base base;
 649:/usr/include/boost/function/function_template.hpp ****         invoker_type invoker;
 650:/usr/include/boost/function/function_template.hpp ****       };
 651:/usr/include/boost/function/function_template.hpp ****     } // end namespace function
GAS LISTING /tmp/ccvUPO8Q.s 			page 284


 652:/usr/include/boost/function/function_template.hpp ****   } // end namespace detail
 653:/usr/include/boost/function/function_template.hpp **** 
 654:/usr/include/boost/function/function_template.hpp ****   template<
 655:/usr/include/boost/function/function_template.hpp ****     typename R BOOST_FUNCTION_COMMA
 656:/usr/include/boost/function/function_template.hpp ****     BOOST_FUNCTION_TEMPLATE_PARMS
 657:/usr/include/boost/function/function_template.hpp ****   >
 658:/usr/include/boost/function/function_template.hpp ****   class BOOST_FUNCTION_FUNCTION : public function_base
 659:/usr/include/boost/function/function_template.hpp **** 
 660:/usr/include/boost/function/function_template.hpp **** #if BOOST_FUNCTION_NUM_ARGS == 1
 661:/usr/include/boost/function/function_template.hpp **** 
 662:/usr/include/boost/function/function_template.hpp ****     , public std::unary_function<T0,R>
 663:/usr/include/boost/function/function_template.hpp **** 
 664:/usr/include/boost/function/function_template.hpp **** #elif BOOST_FUNCTION_NUM_ARGS == 2
 665:/usr/include/boost/function/function_template.hpp **** 
 666:/usr/include/boost/function/function_template.hpp ****     , public std::binary_function<T0,T1,R>
 667:/usr/include/boost/function/function_template.hpp **** 
 668:/usr/include/boost/function/function_template.hpp **** #endif
 669:/usr/include/boost/function/function_template.hpp **** 
 670:/usr/include/boost/function/function_template.hpp ****   {
 671:/usr/include/boost/function/function_template.hpp ****   public:
 672:/usr/include/boost/function/function_template.hpp **** #ifndef BOOST_NO_VOID_RETURNS
 673:/usr/include/boost/function/function_template.hpp ****     typedef R         result_type;
 674:/usr/include/boost/function/function_template.hpp **** #else
 675:/usr/include/boost/function/function_template.hpp ****     typedef  typename boost::detail::function::function_return_type<R>::type
 676:/usr/include/boost/function/function_template.hpp ****       result_type;
 677:/usr/include/boost/function/function_template.hpp **** #endif // BOOST_NO_VOID_RETURNS
 678:/usr/include/boost/function/function_template.hpp **** 
 679:/usr/include/boost/function/function_template.hpp ****   private:
 680:/usr/include/boost/function/function_template.hpp ****     typedef boost::detail::function::BOOST_FUNCTION_VTABLE<
 681:/usr/include/boost/function/function_template.hpp ****               R BOOST_FUNCTION_COMMA BOOST_FUNCTION_TEMPLATE_ARGS>
 682:/usr/include/boost/function/function_template.hpp ****       vtable_type;
 683:/usr/include/boost/function/function_template.hpp **** 
 684:/usr/include/boost/function/function_template.hpp ****     vtable_type* get_vtable() const {
 685:/usr/include/boost/function/function_template.hpp ****       return reinterpret_cast<vtable_type*>(
 686:/usr/include/boost/function/function_template.hpp ****                reinterpret_cast<std::size_t>(vtable) & ~static_cast<std::size_t>(0x01));
 687:/usr/include/boost/function/function_template.hpp ****     }
 688:/usr/include/boost/function/function_template.hpp **** 
 689:/usr/include/boost/function/function_template.hpp ****     struct clear_type {};
 690:/usr/include/boost/function/function_template.hpp **** 
 691:/usr/include/boost/function/function_template.hpp ****   public:
 692:/usr/include/boost/function/function_template.hpp ****     BOOST_STATIC_CONSTANT(int, args = BOOST_FUNCTION_NUM_ARGS);
 693:/usr/include/boost/function/function_template.hpp **** 
 694:/usr/include/boost/function/function_template.hpp ****     // add signature for boost::lambda
 695:/usr/include/boost/function/function_template.hpp ****     template<typename Args>
 696:/usr/include/boost/function/function_template.hpp ****     struct sig
 697:/usr/include/boost/function/function_template.hpp ****     {
 698:/usr/include/boost/function/function_template.hpp ****       typedef result_type type;
 699:/usr/include/boost/function/function_template.hpp ****     };
 700:/usr/include/boost/function/function_template.hpp **** 
 701:/usr/include/boost/function/function_template.hpp **** #if BOOST_FUNCTION_NUM_ARGS == 1
 702:/usr/include/boost/function/function_template.hpp ****     typedef T0 argument_type;
 703:/usr/include/boost/function/function_template.hpp **** #elif BOOST_FUNCTION_NUM_ARGS == 2
 704:/usr/include/boost/function/function_template.hpp ****     typedef T0 first_argument_type;
 705:/usr/include/boost/function/function_template.hpp ****     typedef T1 second_argument_type;
 706:/usr/include/boost/function/function_template.hpp **** #endif
 707:/usr/include/boost/function/function_template.hpp **** 
 708:/usr/include/boost/function/function_template.hpp ****     BOOST_STATIC_CONSTANT(int, arity = BOOST_FUNCTION_NUM_ARGS);
GAS LISTING /tmp/ccvUPO8Q.s 			page 285


 709:/usr/include/boost/function/function_template.hpp ****     BOOST_FUNCTION_ARG_TYPES
 710:/usr/include/boost/function/function_template.hpp **** 
 711:/usr/include/boost/function/function_template.hpp ****     typedef BOOST_FUNCTION_FUNCTION self_type;
 712:/usr/include/boost/function/function_template.hpp **** 
 713:/usr/include/boost/function/function_template.hpp ****     BOOST_FUNCTION_FUNCTION() : function_base() { }
 714:/usr/include/boost/function/function_template.hpp **** 
 715:/usr/include/boost/function/function_template.hpp ****     // MSVC chokes if the following two constructors are collapsed into
 716:/usr/include/boost/function/function_template.hpp ****     // one with a default parameter.
 717:/usr/include/boost/function/function_template.hpp ****     template<typename Functor>
 718:/usr/include/boost/function/function_template.hpp ****     BOOST_FUNCTION_FUNCTION(Functor BOOST_FUNCTION_TARGET_FIX(const &) f
 719:/usr/include/boost/function/function_template.hpp **** #ifndef BOOST_NO_SFINAE
 720:/usr/include/boost/function/function_template.hpp ****                             ,typename boost::enable_if_c<
 721:/usr/include/boost/function/function_template.hpp ****                              !(is_integral<Functor>::value),
 722:/usr/include/boost/function/function_template.hpp ****                                         int>::type = 0
 723:/usr/include/boost/function/function_template.hpp **** #endif // BOOST_NO_SFINAE
 724:/usr/include/boost/function/function_template.hpp ****                             ) :
 725:/usr/include/boost/function/function_template.hpp ****       function_base()
 726:/usr/include/boost/function/function_template.hpp ****     {
 727:/usr/include/boost/function/function_template.hpp ****       this->assign_to(f);
 728:/usr/include/boost/function/function_template.hpp ****     }
 729:/usr/include/boost/function/function_template.hpp ****     template<typename Functor,typename Allocator>
 730:/usr/include/boost/function/function_template.hpp ****     BOOST_FUNCTION_FUNCTION(Functor BOOST_FUNCTION_TARGET_FIX(const &) f, Allocator a
 731:/usr/include/boost/function/function_template.hpp **** #ifndef BOOST_NO_SFINAE
 732:/usr/include/boost/function/function_template.hpp ****                             ,typename boost::enable_if_c<
 733:/usr/include/boost/function/function_template.hpp ****                               !(is_integral<Functor>::value),
 734:/usr/include/boost/function/function_template.hpp ****                                         int>::type = 0
 735:/usr/include/boost/function/function_template.hpp **** #endif // BOOST_NO_SFINAE
 736:/usr/include/boost/function/function_template.hpp ****                             ) :
 737:/usr/include/boost/function/function_template.hpp ****       function_base()
 738:/usr/include/boost/function/function_template.hpp ****     {
 739:/usr/include/boost/function/function_template.hpp ****       this->assign_to_a(f,a);
 740:/usr/include/boost/function/function_template.hpp ****     }
 741:/usr/include/boost/function/function_template.hpp **** 
 742:/usr/include/boost/function/function_template.hpp **** #ifndef BOOST_NO_SFINAE
 743:/usr/include/boost/function/function_template.hpp ****     BOOST_FUNCTION_FUNCTION(clear_type*) : function_base() { }
 744:/usr/include/boost/function/function_template.hpp **** #else
 745:/usr/include/boost/function/function_template.hpp ****     BOOST_FUNCTION_FUNCTION(int zero) : function_base()
 746:/usr/include/boost/function/function_template.hpp ****     {
 747:/usr/include/boost/function/function_template.hpp ****       BOOST_ASSERT(zero == 0);
 748:/usr/include/boost/function/function_template.hpp ****     }
 749:/usr/include/boost/function/function_template.hpp **** #endif
 750:/usr/include/boost/function/function_template.hpp **** 
 751:/usr/include/boost/function/function_template.hpp ****     BOOST_FUNCTION_FUNCTION(const BOOST_FUNCTION_FUNCTION& f) : function_base()
 752:/usr/include/boost/function/function_template.hpp ****     {
 753:/usr/include/boost/function/function_template.hpp ****       this->assign_to_own(f);
 754:/usr/include/boost/function/function_template.hpp ****     }
 755:/usr/include/boost/function/function_template.hpp **** 
 756:/usr/include/boost/function/function_template.hpp **** #ifndef BOOST_NO_CXX11_RVALUE_REFERENCES
 757:/usr/include/boost/function/function_template.hpp ****     BOOST_FUNCTION_FUNCTION(BOOST_FUNCTION_FUNCTION&& f) : function_base()
 758:/usr/include/boost/function/function_template.hpp ****     {
 759:/usr/include/boost/function/function_template.hpp ****       this->move_assign(f);
 760:/usr/include/boost/function/function_template.hpp ****     }
 761:/usr/include/boost/function/function_template.hpp **** #endif
 762:/usr/include/boost/function/function_template.hpp **** 
 763:/usr/include/boost/function/function_template.hpp ****     ~BOOST_FUNCTION_FUNCTION() { clear(); }
 764:/usr/include/boost/function/function_template.hpp **** 
 765:/usr/include/boost/function/function_template.hpp ****     result_type operator()(BOOST_FUNCTION_PARMS) const
GAS LISTING /tmp/ccvUPO8Q.s 			page 286


 6083              		.loc 29 765 0
 6084              		.cfi_startproc
 6085              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 6086              		.cfi_lsda 0x1b,.LLSDA11691
 6087 0000 55       		pushq	%rbp
 6088              		.cfi_def_cfa_offset 16
 6089              		.cfi_offset 6, -16
 6090 0001 4889E5   		movq	%rsp, %rbp
 6091              		.cfi_def_cfa_register 6
 6092 0004 53       		pushq	%rbx
 6093 0005 4883EC38 		subq	$56, %rsp
 6094              		.cfi_offset 3, -24
 6095 0009 48897DC8 		movq	%rdi, -56(%rbp)
 6096 000d 488975C0 		movq	%rsi, -64(%rbp)
 766:/usr/include/boost/function/function_template.hpp ****     {
 767:/usr/include/boost/function/function_template.hpp ****       if (this->empty())
 6097              		.loc 29 767 0
 6098 0011 488B45C8 		movq	-56(%rbp), %rax
 6099 0015 4889C7   		movq	%rax, %rdi
 6100 0018 E8000000 		call	_ZNK5boost13function_base5emptyEv
 6100      00
 6101 001d 84C0     		testb	%al, %al
 6102 001f 7418     		je	.L266
 768:/usr/include/boost/function/function_template.hpp ****         boost::throw_exception(bad_function_call());
 6103              		.loc 29 768 0
 6104 0021 488D45D0 		leaq	-48(%rbp), %rax
 6105 0025 4889C7   		movq	%rax, %rdi
 6106              	.LEHB36:
 6107 0028 E8000000 		call	_ZN5boost17bad_function_callC1Ev
 6107      00
 6108              	.LEHE36:
 6109 002d 488D45D0 		leaq	-48(%rbp), %rax
 6110 0031 4889C7   		movq	%rax, %rdi
 6111              	.LEHB37:
 6112 0034 E8000000 		call	_ZN5boost15throw_exceptionINS_17bad_function_callEEEvRKT_
 6112      00
 6113              	.LEHE37:
 6114              	.L266:
 769:/usr/include/boost/function/function_template.hpp **** 
 770:/usr/include/boost/function/function_template.hpp ****       return get_vtable()->invoker
 6115              		.loc 29 770 0
 6116 0039 488B45C8 		movq	-56(%rbp), %rax
 6117 003d 4889C7   		movq	%rax, %rdi
 6118 0040 E8000000 		call	_ZNK5boost9function1IvNS_13intrusive_ptrIN3pmt8pmt_baseEEEE10get_vtableEv
 6118      00
 6119 0045 488B5808 		movq	8(%rax), %rbx
 6120 0049 488B45C0 		movq	-64(%rbp), %rax
 6121 004d 4889C7   		movq	%rax, %rdi
 6122 0050 E8000000 		call	_ZN5boost7forwardINS_13intrusive_ptrIN3pmt8pmt_baseEEEEEOT_RNS_11move_detail16remove_referenc
 6122      00
 6123 0055 4889C2   		movq	%rax, %rdx
 6124 0058 488D45E8 		leaq	-24(%rbp), %rax
 6125 005c 4889D6   		movq	%rdx, %rsi
 6126 005f 4889C7   		movq	%rax, %rdi
 6127 0062 E8000000 		call	_ZN5boost13intrusive_ptrIN3pmt8pmt_baseEEC1EOS3_
 6127      00
 6128 0067 488B45C8 		movq	-56(%rbp), %rax
GAS LISTING /tmp/ccvUPO8Q.s 			page 287


 6129 006b 488D5008 		leaq	8(%rax), %rdx
 771:/usr/include/boost/function/function_template.hpp ****                (this->functor BOOST_FUNCTION_COMMA BOOST_FUNCTION_ARGS);
 6130              		.loc 29 771 0
 6131 006f 488D45E8 		leaq	-24(%rbp), %rax
 6132 0073 4889C6   		movq	%rax, %rsi
 6133 0076 4889D7   		movq	%rdx, %rdi
 6134              	.LEHB38:
 6135 0079 FFD3     		call	*%rbx
 6136              	.LVL7:
 6137              	.LEHE38:
 770:/usr/include/boost/function/function_template.hpp ****                (this->functor BOOST_FUNCTION_COMMA BOOST_FUNCTION_ARGS);
 6138              		.loc 29 770 0
 6139 007b 488D45E8 		leaq	-24(%rbp), %rax
 6140 007f 4889C7   		movq	%rax, %rdi
 6141 0082 E8000000 		call	_ZN5boost13intrusive_ptrIN3pmt8pmt_baseEED1Ev
 6141      00
 6142              		.loc 29 771 0
 6143 0087 EB34     		jmp	.L272
 6144              	.L270:
 6145 0089 4889C3   		movq	%rax, %rbx
 768:/usr/include/boost/function/function_template.hpp **** 
 6146              		.loc 29 768 0
 6147 008c 488D45D0 		leaq	-48(%rbp), %rax
 6148 0090 4889C7   		movq	%rax, %rdi
 6149 0093 E8000000 		call	_ZN5boost17bad_function_callD1Ev
 6149      00
 6150 0098 4889D8   		movq	%rbx, %rax
 6151 009b 4889C7   		movq	%rax, %rdi
 6152              	.LEHB39:
 6153 009e E8000000 		call	_Unwind_Resume@PLT
 6153      00
 6154              	.L271:
 6155 00a3 4889C3   		movq	%rax, %rbx
 770:/usr/include/boost/function/function_template.hpp ****                (this->functor BOOST_FUNCTION_COMMA BOOST_FUNCTION_ARGS);
 6156              		.loc 29 770 0
 6157 00a6 488D45E8 		leaq	-24(%rbp), %rax
 6158 00aa 4889C7   		movq	%rax, %rdi
 6159 00ad E8000000 		call	_ZN5boost13intrusive_ptrIN3pmt8pmt_baseEED1Ev
 6159      00
 6160 00b2 4889D8   		movq	%rbx, %rax
 6161 00b5 4889C7   		movq	%rax, %rdi
 6162 00b8 E8000000 		call	_Unwind_Resume@PLT
 6162      00
 6163              	.LEHE39:
 6164              	.L272:
 772:/usr/include/boost/function/function_template.hpp ****     }
 6165              		.loc 29 772 0
 6166 00bd 4883C438 		addq	$56, %rsp
 6167 00c1 5B       		popq	%rbx
 6168 00c2 5D       		popq	%rbp
 6169              		.cfi_def_cfa 7, 8
 6170 00c3 C3       		ret
 6171              		.cfi_endproc
 6172              	.LFE11691:
 6173              		.section	.gcc_except_table
 6174              	.LLSDA11691:
 6175 0091 FF       		.byte	0xff
GAS LISTING /tmp/ccvUPO8Q.s 			page 288


 6176 0092 FF       		.byte	0xff
 6177 0093 01       		.byte	0x1
 6178 0094 13       		.uleb128 .LLSDACSE11691-.LLSDACSB11691
 6179              	.LLSDACSB11691:
 6180 0095 28       		.uleb128 .LEHB36-.LFB11691
 6181 0096 05       		.uleb128 .LEHE36-.LEHB36
 6182 0097 00       		.uleb128 0
 6183 0098 00       		.uleb128 0
 6184 0099 34       		.uleb128 .LEHB37-.LFB11691
 6185 009a 05       		.uleb128 .LEHE37-.LEHB37
 6186 009b 8901     		.uleb128 .L270-.LFB11691
 6187 009d 00       		.uleb128 0
 6188 009e 79       		.uleb128 .LEHB38-.LFB11691
 6189 009f 02       		.uleb128 .LEHE38-.LEHB38
 6190 00a0 A301     		.uleb128 .L271-.LFB11691
 6191 00a2 00       		.uleb128 0
 6192 00a3 9E01     		.uleb128 .LEHB39-.LFB11691
 6193 00a5 1F       		.uleb128 .LEHE39-.LEHB39
 6194 00a6 00       		.uleb128 0
 6195 00a7 00       		.uleb128 0
 6196              	.LLSDACSE11691:
 6197              		.section	.text._ZNK5boost9function1IvNS_13intrusive_ptrIN3pmt8pmt_baseEEEEclES4_,"axG",@progbits,_
 6199              		.section	.text._ZNSt3mapIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt5dequeIS4_SaIS4_EENS2_10compara
 6200              		.align 2
 6201              		.weak	_ZNSt3mapIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt5dequeIS4_SaIS4_EENS2_10comparatorESaISt
 6203              	_ZNSt3mapIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt5dequeIS4_SaIS4_EENS2_10comparatorESaISt4pairIK
 6204              	.LFB11702:
1079:/usr/include/c++/6/bits/stl_map.h ****       { return _M_t.find(__x); }
 6205              		.loc 26 1079 0
 6206              		.cfi_startproc
 6207 0000 55       		pushq	%rbp
 6208              		.cfi_def_cfa_offset 16
 6209              		.cfi_offset 6, -16
 6210 0001 4889E5   		movq	%rsp, %rbp
 6211              		.cfi_def_cfa_register 6
 6212 0004 4883EC10 		subq	$16, %rsp
 6213 0008 48897DF8 		movq	%rdi, -8(%rbp)
 6214 000c 488975F0 		movq	%rsi, -16(%rbp)
 6215              		.loc 26 1080 0
 6216 0010 488B45F8 		movq	-8(%rbp), %rax
 6217 0014 488B55F0 		movq	-16(%rbp), %rdx
 6218 0018 4889D6   		movq	%rdx, %rsi
 6219 001b 4889C7   		movq	%rax, %rdi
 6220 001e E8000000 		call	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_St5dequeIS4_SaIS4_EEESt10_
 6220      00
 6221 0023 C9       		leave
 6222              		.cfi_def_cfa 7, 8
 6223 0024 C3       		ret
 6224              		.cfi_endproc
 6225              	.LFE11702:
 6227              		.section	.text._ZNSt3mapIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt5dequeIS4_SaIS4_EENS2_10compara
 6228              		.align 2
 6229              		.weak	_ZNSt3mapIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt5dequeIS4_SaIS4_EENS2_10comparatorESaISt
 6231              	_ZNSt3mapIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt5dequeIS4_SaIS4_EENS2_10comparatorESaISt4pairIK
 6232              	.LFB11703:
 356:/usr/include/c++/6/bits/stl_map.h ****       { return _M_t.end(); }
 6233              		.loc 26 356 0
GAS LISTING /tmp/ccvUPO8Q.s 			page 289


 6234              		.cfi_startproc
 6235 0000 55       		pushq	%rbp
 6236              		.cfi_def_cfa_offset 16
 6237              		.cfi_offset 6, -16
 6238 0001 4889E5   		movq	%rsp, %rbp
 6239              		.cfi_def_cfa_register 6
 6240 0004 4883EC10 		subq	$16, %rsp
 6241 0008 48897DF8 		movq	%rdi, -8(%rbp)
 357:/usr/include/c++/6/bits/stl_map.h **** 
 6242              		.loc 26 357 0
 6243 000c 488B45F8 		movq	-8(%rbp), %rax
 6244 0010 4889C7   		movq	%rax, %rdi
 6245 0013 E8000000 		call	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_St5dequeIS4_SaIS4_EEESt10_
 6245      00
 6246 0018 C9       		leave
 6247              		.cfi_def_cfa 7, 8
 6248 0019 C3       		ret
 6249              		.cfi_endproc
 6250              	.LFE11703:
 6252              		.section	.text._ZNKSt17_Rb_tree_iteratorISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt5deque
 6253              		.align 2
 6254              		.weak	_ZNKSt17_Rb_tree_iteratorISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt5dequeIS5_SaIS5
 6256              	_ZNKSt17_Rb_tree_iteratorISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt5dequeIS5_SaIS5_EEEEeq
 6257              	.LFB11704:
 237:/usr/include/c++/6/bits/stl_tree.h ****       { return _M_node == __x._M_node; }
 6258              		.loc 27 237 0
 6259              		.cfi_startproc
 6260 0000 55       		pushq	%rbp
 6261              		.cfi_def_cfa_offset 16
 6262              		.cfi_offset 6, -16
 6263 0001 4889E5   		movq	%rsp, %rbp
 6264              		.cfi_def_cfa_register 6
 6265 0004 48897DF8 		movq	%rdi, -8(%rbp)
 6266 0008 488975F0 		movq	%rsi, -16(%rbp)
 238:/usr/include/c++/6/bits/stl_tree.h **** 
 6267              		.loc 27 238 0
 6268 000c 488B45F8 		movq	-8(%rbp), %rax
 6269 0010 488B10   		movq	(%rax), %rdx
 6270 0013 488B45F0 		movq	-16(%rbp), %rax
 6271 0017 488B00   		movq	(%rax), %rax
 6272 001a 4839C2   		cmpq	%rax, %rdx
 6273 001d 0F94C0   		sete	%al
 6274 0020 5D       		popq	%rbp
 6275              		.cfi_def_cfa 7, 8
 6276 0021 C3       		ret
 6277              		.cfi_endproc
 6278              	.LFE11704:
 6280              		.section	.text._ZNKSt17_Rb_tree_iteratorISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt5deque
 6281              		.align 2
 6282              		.weak	_ZNKSt17_Rb_tree_iteratorISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt5dequeIS5_SaIS5
 6284              	_ZNKSt17_Rb_tree_iteratorISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt5dequeIS5_SaIS5_EEEEne
 6285              	.LFB11731:
 241:/usr/include/c++/6/bits/stl_tree.h ****       { return _M_node != __x._M_node; }
 6286              		.loc 27 241 0
 6287              		.cfi_startproc
 6288 0000 55       		pushq	%rbp
 6289              		.cfi_def_cfa_offset 16
GAS LISTING /tmp/ccvUPO8Q.s 			page 290


 6290              		.cfi_offset 6, -16
 6291 0001 4889E5   		movq	%rsp, %rbp
 6292              		.cfi_def_cfa_register 6
 6293 0004 48897DF8 		movq	%rdi, -8(%rbp)
 6294 0008 488975F0 		movq	%rsi, -16(%rbp)
 6295              		.loc 27 242 0
 6296 000c 488B45F8 		movq	-8(%rbp), %rax
 6297 0010 488B10   		movq	(%rax), %rdx
 6298 0013 488B45F0 		movq	-16(%rbp), %rax
 6299 0017 488B00   		movq	(%rax), %rax
 6300 001a 4839C2   		cmpq	%rax, %rdx
 6301 001d 0F95C0   		setne	%al
 6302 0020 5D       		popq	%rbp
 6303              		.cfi_def_cfa 7, 8
 6304 0021 C3       		ret
 6305              		.cfi_endproc
 6306              	.LFE11731:
 6308              		.section	.text._ZNSt6vectorIlSaIlEED2Ev,"axG",@progbits,_ZNSt6vectorIlSaIlEED5Ev,comdat
 6309              		.align 2
 6310              		.weak	_ZNSt6vectorIlSaIlEED2Ev
 6312              	_ZNSt6vectorIlSaIlEED2Ev:
 6313              	.LFB11741:
 6314              		.file 30 "/usr/include/c++/6/bits/stl_vector.h"
   1:/usr/include/c++/6/bits/stl_vector.h **** // Vector implementation -*- C++ -*-
   2:/usr/include/c++/6/bits/stl_vector.h **** 
   3:/usr/include/c++/6/bits/stl_vector.h **** // Copyright (C) 2001-2016 Free Software Foundation, Inc.
   4:/usr/include/c++/6/bits/stl_vector.h **** //
   5:/usr/include/c++/6/bits/stl_vector.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/6/bits/stl_vector.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/6/bits/stl_vector.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/6/bits/stl_vector.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/6/bits/stl_vector.h **** // any later version.
  10:/usr/include/c++/6/bits/stl_vector.h **** 
  11:/usr/include/c++/6/bits/stl_vector.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/6/bits/stl_vector.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/6/bits/stl_vector.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/6/bits/stl_vector.h **** // GNU General Public License for more details.
  15:/usr/include/c++/6/bits/stl_vector.h **** 
  16:/usr/include/c++/6/bits/stl_vector.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/6/bits/stl_vector.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/6/bits/stl_vector.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/6/bits/stl_vector.h **** 
  20:/usr/include/c++/6/bits/stl_vector.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/6/bits/stl_vector.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/6/bits/stl_vector.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/6/bits/stl_vector.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/6/bits/stl_vector.h **** 
  25:/usr/include/c++/6/bits/stl_vector.h **** /*
  26:/usr/include/c++/6/bits/stl_vector.h ****  *
  27:/usr/include/c++/6/bits/stl_vector.h ****  * Copyright (c) 1994
  28:/usr/include/c++/6/bits/stl_vector.h ****  * Hewlett-Packard Company
  29:/usr/include/c++/6/bits/stl_vector.h ****  *
  30:/usr/include/c++/6/bits/stl_vector.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:/usr/include/c++/6/bits/stl_vector.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:/usr/include/c++/6/bits/stl_vector.h ****  * provided that the above copyright notice appear in all copies and
  33:/usr/include/c++/6/bits/stl_vector.h ****  * that both that copyright notice and this permission notice appear
  34:/usr/include/c++/6/bits/stl_vector.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
GAS LISTING /tmp/ccvUPO8Q.s 			page 291


  35:/usr/include/c++/6/bits/stl_vector.h ****  * representations about the suitability of this software for any
  36:/usr/include/c++/6/bits/stl_vector.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:/usr/include/c++/6/bits/stl_vector.h ****  *
  38:/usr/include/c++/6/bits/stl_vector.h ****  *
  39:/usr/include/c++/6/bits/stl_vector.h ****  * Copyright (c) 1996
  40:/usr/include/c++/6/bits/stl_vector.h ****  * Silicon Graphics Computer Systems, Inc.
  41:/usr/include/c++/6/bits/stl_vector.h ****  *
  42:/usr/include/c++/6/bits/stl_vector.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:/usr/include/c++/6/bits/stl_vector.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:/usr/include/c++/6/bits/stl_vector.h ****  * provided that the above copyright notice appear in all copies and
  45:/usr/include/c++/6/bits/stl_vector.h ****  * that both that copyright notice and this permission notice appear
  46:/usr/include/c++/6/bits/stl_vector.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:/usr/include/c++/6/bits/stl_vector.h ****  * representations about the suitability of this  software for any
  48:/usr/include/c++/6/bits/stl_vector.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:/usr/include/c++/6/bits/stl_vector.h ****  */
  50:/usr/include/c++/6/bits/stl_vector.h **** 
  51:/usr/include/c++/6/bits/stl_vector.h **** /** @file bits/stl_vector.h
  52:/usr/include/c++/6/bits/stl_vector.h ****  *  This is an internal header file, included by other library headers.
  53:/usr/include/c++/6/bits/stl_vector.h ****  *  Do not attempt to use it directly. @headername{vector}
  54:/usr/include/c++/6/bits/stl_vector.h ****  */
  55:/usr/include/c++/6/bits/stl_vector.h **** 
  56:/usr/include/c++/6/bits/stl_vector.h **** #ifndef _STL_VECTOR_H
  57:/usr/include/c++/6/bits/stl_vector.h **** #define _STL_VECTOR_H 1
  58:/usr/include/c++/6/bits/stl_vector.h **** 
  59:/usr/include/c++/6/bits/stl_vector.h **** #include <bits/stl_iterator_base_funcs.h>
  60:/usr/include/c++/6/bits/stl_vector.h **** #include <bits/functexcept.h>
  61:/usr/include/c++/6/bits/stl_vector.h **** #include <bits/concept_check.h>
  62:/usr/include/c++/6/bits/stl_vector.h **** #if __cplusplus >= 201103L
  63:/usr/include/c++/6/bits/stl_vector.h **** #include <initializer_list>
  64:/usr/include/c++/6/bits/stl_vector.h **** #endif
  65:/usr/include/c++/6/bits/stl_vector.h **** 
  66:/usr/include/c++/6/bits/stl_vector.h **** namespace std _GLIBCXX_VISIBILITY(default)
  67:/usr/include/c++/6/bits/stl_vector.h **** {
  68:/usr/include/c++/6/bits/stl_vector.h **** _GLIBCXX_BEGIN_NAMESPACE_CONTAINER
  69:/usr/include/c++/6/bits/stl_vector.h **** 
  70:/usr/include/c++/6/bits/stl_vector.h ****   /// See bits/stl_deque.h's _Deque_base for an explanation.
  71:/usr/include/c++/6/bits/stl_vector.h ****   template<typename _Tp, typename _Alloc>
  72:/usr/include/c++/6/bits/stl_vector.h ****     struct _Vector_base
  73:/usr/include/c++/6/bits/stl_vector.h ****     {
  74:/usr/include/c++/6/bits/stl_vector.h ****       typedef typename __gnu_cxx::__alloc_traits<_Alloc>::template
  75:/usr/include/c++/6/bits/stl_vector.h ****         rebind<_Tp>::other _Tp_alloc_type;
  76:/usr/include/c++/6/bits/stl_vector.h ****       typedef typename __gnu_cxx::__alloc_traits<_Tp_alloc_type>::pointer
  77:/usr/include/c++/6/bits/stl_vector.h ****        	pointer;
  78:/usr/include/c++/6/bits/stl_vector.h **** 
  79:/usr/include/c++/6/bits/stl_vector.h ****       struct _Vector_impl 
  80:/usr/include/c++/6/bits/stl_vector.h ****       : public _Tp_alloc_type
  81:/usr/include/c++/6/bits/stl_vector.h ****       {
  82:/usr/include/c++/6/bits/stl_vector.h **** 	pointer _M_start;
  83:/usr/include/c++/6/bits/stl_vector.h **** 	pointer _M_finish;
  84:/usr/include/c++/6/bits/stl_vector.h **** 	pointer _M_end_of_storage;
  85:/usr/include/c++/6/bits/stl_vector.h **** 
  86:/usr/include/c++/6/bits/stl_vector.h **** 	_Vector_impl()
  87:/usr/include/c++/6/bits/stl_vector.h **** 	: _Tp_alloc_type(), _M_start(), _M_finish(), _M_end_of_storage()
  88:/usr/include/c++/6/bits/stl_vector.h **** 	{ }
  89:/usr/include/c++/6/bits/stl_vector.h **** 
  90:/usr/include/c++/6/bits/stl_vector.h **** 	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
  91:/usr/include/c++/6/bits/stl_vector.h **** 	: _Tp_alloc_type(__a), _M_start(), _M_finish(), _M_end_of_storage()
GAS LISTING /tmp/ccvUPO8Q.s 			page 292


  92:/usr/include/c++/6/bits/stl_vector.h **** 	{ }
  93:/usr/include/c++/6/bits/stl_vector.h **** 
  94:/usr/include/c++/6/bits/stl_vector.h **** #if __cplusplus >= 201103L
  95:/usr/include/c++/6/bits/stl_vector.h **** 	_Vector_impl(_Tp_alloc_type&& __a) noexcept
  96:/usr/include/c++/6/bits/stl_vector.h **** 	: _Tp_alloc_type(std::move(__a)),
  97:/usr/include/c++/6/bits/stl_vector.h **** 	  _M_start(), _M_finish(), _M_end_of_storage()
  98:/usr/include/c++/6/bits/stl_vector.h **** 	{ }
  99:/usr/include/c++/6/bits/stl_vector.h **** #endif
 100:/usr/include/c++/6/bits/stl_vector.h **** 
 101:/usr/include/c++/6/bits/stl_vector.h **** 	void _M_swap_data(_Vector_impl& __x) _GLIBCXX_NOEXCEPT
 102:/usr/include/c++/6/bits/stl_vector.h **** 	{
 103:/usr/include/c++/6/bits/stl_vector.h **** 	  std::swap(_M_start, __x._M_start);
 104:/usr/include/c++/6/bits/stl_vector.h **** 	  std::swap(_M_finish, __x._M_finish);
 105:/usr/include/c++/6/bits/stl_vector.h **** 	  std::swap(_M_end_of_storage, __x._M_end_of_storage);
 106:/usr/include/c++/6/bits/stl_vector.h **** 	}
 107:/usr/include/c++/6/bits/stl_vector.h ****       };
 108:/usr/include/c++/6/bits/stl_vector.h ****       
 109:/usr/include/c++/6/bits/stl_vector.h ****     public:
 110:/usr/include/c++/6/bits/stl_vector.h ****       typedef _Alloc allocator_type;
 111:/usr/include/c++/6/bits/stl_vector.h **** 
 112:/usr/include/c++/6/bits/stl_vector.h ****       _Tp_alloc_type&
 113:/usr/include/c++/6/bits/stl_vector.h ****       _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
 114:/usr/include/c++/6/bits/stl_vector.h ****       { return *static_cast<_Tp_alloc_type*>(&this->_M_impl); }
 115:/usr/include/c++/6/bits/stl_vector.h **** 
 116:/usr/include/c++/6/bits/stl_vector.h ****       const _Tp_alloc_type&
 117:/usr/include/c++/6/bits/stl_vector.h ****       _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
 118:/usr/include/c++/6/bits/stl_vector.h ****       { return *static_cast<const _Tp_alloc_type*>(&this->_M_impl); }
 119:/usr/include/c++/6/bits/stl_vector.h **** 
 120:/usr/include/c++/6/bits/stl_vector.h ****       allocator_type
 121:/usr/include/c++/6/bits/stl_vector.h ****       get_allocator() const _GLIBCXX_NOEXCEPT
 122:/usr/include/c++/6/bits/stl_vector.h ****       { return allocator_type(_M_get_Tp_allocator()); }
 123:/usr/include/c++/6/bits/stl_vector.h **** 
 124:/usr/include/c++/6/bits/stl_vector.h ****       _Vector_base()
 125:/usr/include/c++/6/bits/stl_vector.h ****       : _M_impl() { }
 126:/usr/include/c++/6/bits/stl_vector.h **** 
 127:/usr/include/c++/6/bits/stl_vector.h ****       _Vector_base(const allocator_type& __a) _GLIBCXX_NOEXCEPT
 128:/usr/include/c++/6/bits/stl_vector.h ****       : _M_impl(__a) { }
 129:/usr/include/c++/6/bits/stl_vector.h **** 
 130:/usr/include/c++/6/bits/stl_vector.h ****       _Vector_base(size_t __n)
 131:/usr/include/c++/6/bits/stl_vector.h ****       : _M_impl()
 132:/usr/include/c++/6/bits/stl_vector.h ****       { _M_create_storage(__n); }
 133:/usr/include/c++/6/bits/stl_vector.h **** 
 134:/usr/include/c++/6/bits/stl_vector.h ****       _Vector_base(size_t __n, const allocator_type& __a)
 135:/usr/include/c++/6/bits/stl_vector.h ****       : _M_impl(__a)
 136:/usr/include/c++/6/bits/stl_vector.h ****       { _M_create_storage(__n); }
 137:/usr/include/c++/6/bits/stl_vector.h **** 
 138:/usr/include/c++/6/bits/stl_vector.h **** #if __cplusplus >= 201103L
 139:/usr/include/c++/6/bits/stl_vector.h ****       _Vector_base(_Tp_alloc_type&& __a) noexcept
 140:/usr/include/c++/6/bits/stl_vector.h ****       : _M_impl(std::move(__a)) { }
 141:/usr/include/c++/6/bits/stl_vector.h **** 
 142:/usr/include/c++/6/bits/stl_vector.h ****       _Vector_base(_Vector_base&& __x) noexcept
 143:/usr/include/c++/6/bits/stl_vector.h ****       : _M_impl(std::move(__x._M_get_Tp_allocator()))
 144:/usr/include/c++/6/bits/stl_vector.h ****       { this->_M_impl._M_swap_data(__x._M_impl); }
 145:/usr/include/c++/6/bits/stl_vector.h **** 
 146:/usr/include/c++/6/bits/stl_vector.h ****       _Vector_base(_Vector_base&& __x, const allocator_type& __a)
 147:/usr/include/c++/6/bits/stl_vector.h ****       : _M_impl(__a)
 148:/usr/include/c++/6/bits/stl_vector.h ****       {
GAS LISTING /tmp/ccvUPO8Q.s 			page 293


 149:/usr/include/c++/6/bits/stl_vector.h **** 	if (__x.get_allocator() == __a)
 150:/usr/include/c++/6/bits/stl_vector.h **** 	  this->_M_impl._M_swap_data(__x._M_impl);
 151:/usr/include/c++/6/bits/stl_vector.h **** 	else
 152:/usr/include/c++/6/bits/stl_vector.h **** 	  {
 153:/usr/include/c++/6/bits/stl_vector.h **** 	    size_t __n = __x._M_impl._M_finish - __x._M_impl._M_start;
 154:/usr/include/c++/6/bits/stl_vector.h **** 	    _M_create_storage(__n);
 155:/usr/include/c++/6/bits/stl_vector.h **** 	  }
 156:/usr/include/c++/6/bits/stl_vector.h ****       }
 157:/usr/include/c++/6/bits/stl_vector.h **** #endif
 158:/usr/include/c++/6/bits/stl_vector.h **** 
 159:/usr/include/c++/6/bits/stl_vector.h ****       ~_Vector_base() _GLIBCXX_NOEXCEPT
 160:/usr/include/c++/6/bits/stl_vector.h ****       { _M_deallocate(this->_M_impl._M_start, this->_M_impl._M_end_of_storage
 161:/usr/include/c++/6/bits/stl_vector.h **** 		      - this->_M_impl._M_start); }
 162:/usr/include/c++/6/bits/stl_vector.h **** 
 163:/usr/include/c++/6/bits/stl_vector.h ****     public:
 164:/usr/include/c++/6/bits/stl_vector.h ****       _Vector_impl _M_impl;
 165:/usr/include/c++/6/bits/stl_vector.h **** 
 166:/usr/include/c++/6/bits/stl_vector.h ****       pointer
 167:/usr/include/c++/6/bits/stl_vector.h ****       _M_allocate(size_t __n)
 168:/usr/include/c++/6/bits/stl_vector.h ****       {
 169:/usr/include/c++/6/bits/stl_vector.h **** 	typedef __gnu_cxx::__alloc_traits<_Tp_alloc_type> _Tr;
 170:/usr/include/c++/6/bits/stl_vector.h **** 	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
 171:/usr/include/c++/6/bits/stl_vector.h ****       }
 172:/usr/include/c++/6/bits/stl_vector.h **** 
 173:/usr/include/c++/6/bits/stl_vector.h ****       void
 174:/usr/include/c++/6/bits/stl_vector.h ****       _M_deallocate(pointer __p, size_t __n)
 175:/usr/include/c++/6/bits/stl_vector.h ****       {
 176:/usr/include/c++/6/bits/stl_vector.h **** 	typedef __gnu_cxx::__alloc_traits<_Tp_alloc_type> _Tr;
 177:/usr/include/c++/6/bits/stl_vector.h **** 	if (__p)
 178:/usr/include/c++/6/bits/stl_vector.h **** 	  _Tr::deallocate(_M_impl, __p, __n);
 179:/usr/include/c++/6/bits/stl_vector.h ****       }
 180:/usr/include/c++/6/bits/stl_vector.h **** 
 181:/usr/include/c++/6/bits/stl_vector.h ****     private:
 182:/usr/include/c++/6/bits/stl_vector.h ****       void
 183:/usr/include/c++/6/bits/stl_vector.h ****       _M_create_storage(size_t __n)
 184:/usr/include/c++/6/bits/stl_vector.h ****       {
 185:/usr/include/c++/6/bits/stl_vector.h **** 	this->_M_impl._M_start = this->_M_allocate(__n);
 186:/usr/include/c++/6/bits/stl_vector.h **** 	this->_M_impl._M_finish = this->_M_impl._M_start;
 187:/usr/include/c++/6/bits/stl_vector.h **** 	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
 188:/usr/include/c++/6/bits/stl_vector.h ****       }
 189:/usr/include/c++/6/bits/stl_vector.h ****     };
 190:/usr/include/c++/6/bits/stl_vector.h **** 
 191:/usr/include/c++/6/bits/stl_vector.h **** 
 192:/usr/include/c++/6/bits/stl_vector.h ****   /**
 193:/usr/include/c++/6/bits/stl_vector.h ****    *  @brief A standard container which offers fixed time access to
 194:/usr/include/c++/6/bits/stl_vector.h ****    *  individual elements in any order.
 195:/usr/include/c++/6/bits/stl_vector.h ****    *
 196:/usr/include/c++/6/bits/stl_vector.h ****    *  @ingroup sequences
 197:/usr/include/c++/6/bits/stl_vector.h ****    *
 198:/usr/include/c++/6/bits/stl_vector.h ****    *  @tparam _Tp  Type of element.
 199:/usr/include/c++/6/bits/stl_vector.h ****    *  @tparam _Alloc  Allocator type, defaults to allocator<_Tp>.
 200:/usr/include/c++/6/bits/stl_vector.h ****    *
 201:/usr/include/c++/6/bits/stl_vector.h ****    *  Meets the requirements of a <a href="tables.html#65">container</a>, a
 202:/usr/include/c++/6/bits/stl_vector.h ****    *  <a href="tables.html#66">reversible container</a>, and a
 203:/usr/include/c++/6/bits/stl_vector.h ****    *  <a href="tables.html#67">sequence</a>, including the
 204:/usr/include/c++/6/bits/stl_vector.h ****    *  <a href="tables.html#68">optional sequence requirements</a> with the
 205:/usr/include/c++/6/bits/stl_vector.h ****    *  %exception of @c push_front and @c pop_front.
GAS LISTING /tmp/ccvUPO8Q.s 			page 294


 206:/usr/include/c++/6/bits/stl_vector.h ****    *
 207:/usr/include/c++/6/bits/stl_vector.h ****    *  In some terminology a %vector can be described as a dynamic
 208:/usr/include/c++/6/bits/stl_vector.h ****    *  C-style array, it offers fast and efficient access to individual
 209:/usr/include/c++/6/bits/stl_vector.h ****    *  elements in any order and saves the user from worrying about
 210:/usr/include/c++/6/bits/stl_vector.h ****    *  memory and size allocation.  Subscripting ( @c [] ) access is
 211:/usr/include/c++/6/bits/stl_vector.h ****    *  also provided as with C-style arrays.
 212:/usr/include/c++/6/bits/stl_vector.h ****   */
 213:/usr/include/c++/6/bits/stl_vector.h ****   template<typename _Tp, typename _Alloc = std::allocator<_Tp> >
 214:/usr/include/c++/6/bits/stl_vector.h ****     class vector : protected _Vector_base<_Tp, _Alloc>
 215:/usr/include/c++/6/bits/stl_vector.h ****     {
 216:/usr/include/c++/6/bits/stl_vector.h ****       // Concept requirements.
 217:/usr/include/c++/6/bits/stl_vector.h ****       typedef typename _Alloc::value_type                _Alloc_value_type;
 218:/usr/include/c++/6/bits/stl_vector.h **** #if __cplusplus < 201103L
 219:/usr/include/c++/6/bits/stl_vector.h ****       __glibcxx_class_requires(_Tp, _SGIAssignableConcept)
 220:/usr/include/c++/6/bits/stl_vector.h **** #endif
 221:/usr/include/c++/6/bits/stl_vector.h ****       __glibcxx_class_requires2(_Tp, _Alloc_value_type, _SameTypeConcept)
 222:/usr/include/c++/6/bits/stl_vector.h ****       
 223:/usr/include/c++/6/bits/stl_vector.h ****       typedef _Vector_base<_Tp, _Alloc>			 _Base;
 224:/usr/include/c++/6/bits/stl_vector.h ****       typedef typename _Base::_Tp_alloc_type		 _Tp_alloc_type;
 225:/usr/include/c++/6/bits/stl_vector.h ****       typedef __gnu_cxx::__alloc_traits<_Tp_alloc_type>  _Alloc_traits;
 226:/usr/include/c++/6/bits/stl_vector.h **** 
 227:/usr/include/c++/6/bits/stl_vector.h ****     public:
 228:/usr/include/c++/6/bits/stl_vector.h ****       typedef _Tp					 value_type;
 229:/usr/include/c++/6/bits/stl_vector.h ****       typedef typename _Base::pointer                    pointer;
 230:/usr/include/c++/6/bits/stl_vector.h ****       typedef typename _Alloc_traits::const_pointer      const_pointer;
 231:/usr/include/c++/6/bits/stl_vector.h ****       typedef typename _Alloc_traits::reference          reference;
 232:/usr/include/c++/6/bits/stl_vector.h ****       typedef typename _Alloc_traits::const_reference    const_reference;
 233:/usr/include/c++/6/bits/stl_vector.h ****       typedef __gnu_cxx::__normal_iterator<pointer, vector> iterator;
 234:/usr/include/c++/6/bits/stl_vector.h ****       typedef __gnu_cxx::__normal_iterator<const_pointer, vector>
 235:/usr/include/c++/6/bits/stl_vector.h ****       const_iterator;
 236:/usr/include/c++/6/bits/stl_vector.h ****       typedef std::reverse_iterator<const_iterator>  const_reverse_iterator;
 237:/usr/include/c++/6/bits/stl_vector.h ****       typedef std::reverse_iterator<iterator>		 reverse_iterator;
 238:/usr/include/c++/6/bits/stl_vector.h ****       typedef size_t					 size_type;
 239:/usr/include/c++/6/bits/stl_vector.h ****       typedef ptrdiff_t					 difference_type;
 240:/usr/include/c++/6/bits/stl_vector.h ****       typedef _Alloc                        		 allocator_type;
 241:/usr/include/c++/6/bits/stl_vector.h **** 
 242:/usr/include/c++/6/bits/stl_vector.h ****     protected:
 243:/usr/include/c++/6/bits/stl_vector.h ****       using _Base::_M_allocate;
 244:/usr/include/c++/6/bits/stl_vector.h ****       using _Base::_M_deallocate;
 245:/usr/include/c++/6/bits/stl_vector.h ****       using _Base::_M_impl;
 246:/usr/include/c++/6/bits/stl_vector.h ****       using _Base::_M_get_Tp_allocator;
 247:/usr/include/c++/6/bits/stl_vector.h **** 
 248:/usr/include/c++/6/bits/stl_vector.h ****     public:
 249:/usr/include/c++/6/bits/stl_vector.h ****       // [23.2.4.1] construct/copy/destroy
 250:/usr/include/c++/6/bits/stl_vector.h ****       // (assign() and get_allocator() are also listed in this section)
 251:/usr/include/c++/6/bits/stl_vector.h **** 
 252:/usr/include/c++/6/bits/stl_vector.h ****       /**
 253:/usr/include/c++/6/bits/stl_vector.h ****        *  @brief  Creates a %vector with no elements.
 254:/usr/include/c++/6/bits/stl_vector.h ****        */
 255:/usr/include/c++/6/bits/stl_vector.h ****       vector()
 256:/usr/include/c++/6/bits/stl_vector.h **** #if __cplusplus >= 201103L
 257:/usr/include/c++/6/bits/stl_vector.h ****       noexcept(is_nothrow_default_constructible<_Alloc>::value)
 258:/usr/include/c++/6/bits/stl_vector.h **** #endif
 259:/usr/include/c++/6/bits/stl_vector.h ****       : _Base() { }
 260:/usr/include/c++/6/bits/stl_vector.h **** 
 261:/usr/include/c++/6/bits/stl_vector.h ****       /**
 262:/usr/include/c++/6/bits/stl_vector.h ****        *  @brief  Creates a %vector with no elements.
GAS LISTING /tmp/ccvUPO8Q.s 			page 295


 263:/usr/include/c++/6/bits/stl_vector.h ****        *  @param  __a  An allocator object.
 264:/usr/include/c++/6/bits/stl_vector.h ****        */
 265:/usr/include/c++/6/bits/stl_vector.h ****       explicit
 266:/usr/include/c++/6/bits/stl_vector.h ****       vector(const allocator_type& __a) _GLIBCXX_NOEXCEPT
 267:/usr/include/c++/6/bits/stl_vector.h ****       : _Base(__a) { }
 268:/usr/include/c++/6/bits/stl_vector.h **** 
 269:/usr/include/c++/6/bits/stl_vector.h **** #if __cplusplus >= 201103L
 270:/usr/include/c++/6/bits/stl_vector.h ****       /**
 271:/usr/include/c++/6/bits/stl_vector.h ****        *  @brief  Creates a %vector with default constructed elements.
 272:/usr/include/c++/6/bits/stl_vector.h ****        *  @param  __n  The number of elements to initially create.
 273:/usr/include/c++/6/bits/stl_vector.h ****        *  @param  __a  An allocator.
 274:/usr/include/c++/6/bits/stl_vector.h ****        *
 275:/usr/include/c++/6/bits/stl_vector.h ****        *  This constructor fills the %vector with @a __n default
 276:/usr/include/c++/6/bits/stl_vector.h ****        *  constructed elements.
 277:/usr/include/c++/6/bits/stl_vector.h ****        */
 278:/usr/include/c++/6/bits/stl_vector.h ****       explicit
 279:/usr/include/c++/6/bits/stl_vector.h ****       vector(size_type __n, const allocator_type& __a = allocator_type())
 280:/usr/include/c++/6/bits/stl_vector.h ****       : _Base(__n, __a)
 281:/usr/include/c++/6/bits/stl_vector.h ****       { _M_default_initialize(__n); }
 282:/usr/include/c++/6/bits/stl_vector.h **** 
 283:/usr/include/c++/6/bits/stl_vector.h ****       /**
 284:/usr/include/c++/6/bits/stl_vector.h ****        *  @brief  Creates a %vector with copies of an exemplar element.
 285:/usr/include/c++/6/bits/stl_vector.h ****        *  @param  __n  The number of elements to initially create.
 286:/usr/include/c++/6/bits/stl_vector.h ****        *  @param  __value  An element to copy.
 287:/usr/include/c++/6/bits/stl_vector.h ****        *  @param  __a  An allocator.
 288:/usr/include/c++/6/bits/stl_vector.h ****        *
 289:/usr/include/c++/6/bits/stl_vector.h ****        *  This constructor fills the %vector with @a __n copies of @a __value.
 290:/usr/include/c++/6/bits/stl_vector.h ****        */
 291:/usr/include/c++/6/bits/stl_vector.h ****       vector(size_type __n, const value_type& __value,
 292:/usr/include/c++/6/bits/stl_vector.h **** 	     const allocator_type& __a = allocator_type())
 293:/usr/include/c++/6/bits/stl_vector.h ****       : _Base(__n, __a)
 294:/usr/include/c++/6/bits/stl_vector.h ****       { _M_fill_initialize(__n, __value); }
 295:/usr/include/c++/6/bits/stl_vector.h **** #else
 296:/usr/include/c++/6/bits/stl_vector.h ****       /**
 297:/usr/include/c++/6/bits/stl_vector.h ****        *  @brief  Creates a %vector with copies of an exemplar element.
 298:/usr/include/c++/6/bits/stl_vector.h ****        *  @param  __n  The number of elements to initially create.
 299:/usr/include/c++/6/bits/stl_vector.h ****        *  @param  __value  An element to copy.
 300:/usr/include/c++/6/bits/stl_vector.h ****        *  @param  __a  An allocator.
 301:/usr/include/c++/6/bits/stl_vector.h ****        *
 302:/usr/include/c++/6/bits/stl_vector.h ****        *  This constructor fills the %vector with @a __n copies of @a __value.
 303:/usr/include/c++/6/bits/stl_vector.h ****        */
 304:/usr/include/c++/6/bits/stl_vector.h ****       explicit
 305:/usr/include/c++/6/bits/stl_vector.h ****       vector(size_type __n, const value_type& __value = value_type(),
 306:/usr/include/c++/6/bits/stl_vector.h **** 	     const allocator_type& __a = allocator_type())
 307:/usr/include/c++/6/bits/stl_vector.h ****       : _Base(__n, __a)
 308:/usr/include/c++/6/bits/stl_vector.h ****       { _M_fill_initialize(__n, __value); }
 309:/usr/include/c++/6/bits/stl_vector.h **** #endif
 310:/usr/include/c++/6/bits/stl_vector.h **** 
 311:/usr/include/c++/6/bits/stl_vector.h ****       /**
 312:/usr/include/c++/6/bits/stl_vector.h ****        *  @brief  %Vector copy constructor.
 313:/usr/include/c++/6/bits/stl_vector.h ****        *  @param  __x  A %vector of identical element and allocator types.
 314:/usr/include/c++/6/bits/stl_vector.h ****        *
 315:/usr/include/c++/6/bits/stl_vector.h ****        *  The newly-created %vector uses a copy of the allocation
 316:/usr/include/c++/6/bits/stl_vector.h ****        *  object used by @a __x.  All the elements of @a __x are copied,
 317:/usr/include/c++/6/bits/stl_vector.h ****        *  but any extra memory in
 318:/usr/include/c++/6/bits/stl_vector.h ****        *  @a __x (for fast expansion) will not be copied.
 319:/usr/include/c++/6/bits/stl_vector.h ****        */
GAS LISTING /tmp/ccvUPO8Q.s 			page 296


 320:/usr/include/c++/6/bits/stl_vector.h ****       vector(const vector& __x)
 321:/usr/include/c++/6/bits/stl_vector.h ****       : _Base(__x.size(),
 322:/usr/include/c++/6/bits/stl_vector.h ****         _Alloc_traits::_S_select_on_copy(__x._M_get_Tp_allocator()))
 323:/usr/include/c++/6/bits/stl_vector.h ****       { this->_M_impl._M_finish =
 324:/usr/include/c++/6/bits/stl_vector.h **** 	  std::__uninitialized_copy_a(__x.begin(), __x.end(),
 325:/usr/include/c++/6/bits/stl_vector.h **** 				      this->_M_impl._M_start,
 326:/usr/include/c++/6/bits/stl_vector.h **** 				      _M_get_Tp_allocator());
 327:/usr/include/c++/6/bits/stl_vector.h ****       }
 328:/usr/include/c++/6/bits/stl_vector.h **** 
 329:/usr/include/c++/6/bits/stl_vector.h **** #if __cplusplus >= 201103L
 330:/usr/include/c++/6/bits/stl_vector.h ****       /**
 331:/usr/include/c++/6/bits/stl_vector.h ****        *  @brief  %Vector move constructor.
 332:/usr/include/c++/6/bits/stl_vector.h ****        *  @param  __x  A %vector of identical element and allocator types.
 333:/usr/include/c++/6/bits/stl_vector.h ****        *
 334:/usr/include/c++/6/bits/stl_vector.h ****        *  The newly-created %vector contains the exact contents of @a __x.
 335:/usr/include/c++/6/bits/stl_vector.h ****        *  The contents of @a __x are a valid, but unspecified %vector.
 336:/usr/include/c++/6/bits/stl_vector.h ****        */
 337:/usr/include/c++/6/bits/stl_vector.h ****       vector(vector&& __x) noexcept
 338:/usr/include/c++/6/bits/stl_vector.h ****       : _Base(std::move(__x)) { }
 339:/usr/include/c++/6/bits/stl_vector.h **** 
 340:/usr/include/c++/6/bits/stl_vector.h ****       /// Copy constructor with alternative allocator
 341:/usr/include/c++/6/bits/stl_vector.h ****       vector(const vector& __x, const allocator_type& __a)
 342:/usr/include/c++/6/bits/stl_vector.h ****       : _Base(__x.size(), __a)
 343:/usr/include/c++/6/bits/stl_vector.h ****       { this->_M_impl._M_finish =
 344:/usr/include/c++/6/bits/stl_vector.h **** 	  std::__uninitialized_copy_a(__x.begin(), __x.end(),
 345:/usr/include/c++/6/bits/stl_vector.h **** 				      this->_M_impl._M_start,
 346:/usr/include/c++/6/bits/stl_vector.h **** 				      _M_get_Tp_allocator());
 347:/usr/include/c++/6/bits/stl_vector.h ****       }
 348:/usr/include/c++/6/bits/stl_vector.h **** 
 349:/usr/include/c++/6/bits/stl_vector.h ****       /// Move constructor with alternative allocator
 350:/usr/include/c++/6/bits/stl_vector.h ****       vector(vector&& __rv, const allocator_type& __m)
 351:/usr/include/c++/6/bits/stl_vector.h ****       noexcept(_Alloc_traits::_S_always_equal())
 352:/usr/include/c++/6/bits/stl_vector.h ****       : _Base(std::move(__rv), __m)
 353:/usr/include/c++/6/bits/stl_vector.h ****       {
 354:/usr/include/c++/6/bits/stl_vector.h **** 	if (__rv.get_allocator() != __m)
 355:/usr/include/c++/6/bits/stl_vector.h **** 	  {
 356:/usr/include/c++/6/bits/stl_vector.h **** 	    this->_M_impl._M_finish =
 357:/usr/include/c++/6/bits/stl_vector.h **** 	      std::__uninitialized_move_a(__rv.begin(), __rv.end(),
 358:/usr/include/c++/6/bits/stl_vector.h **** 					  this->_M_impl._M_start,
 359:/usr/include/c++/6/bits/stl_vector.h **** 					  _M_get_Tp_allocator());
 360:/usr/include/c++/6/bits/stl_vector.h **** 	    __rv.clear();
 361:/usr/include/c++/6/bits/stl_vector.h **** 	  }
 362:/usr/include/c++/6/bits/stl_vector.h ****       }
 363:/usr/include/c++/6/bits/stl_vector.h **** 
 364:/usr/include/c++/6/bits/stl_vector.h ****       /**
 365:/usr/include/c++/6/bits/stl_vector.h ****        *  @brief  Builds a %vector from an initializer list.
 366:/usr/include/c++/6/bits/stl_vector.h ****        *  @param  __l  An initializer_list.
 367:/usr/include/c++/6/bits/stl_vector.h ****        *  @param  __a  An allocator.
 368:/usr/include/c++/6/bits/stl_vector.h ****        *
 369:/usr/include/c++/6/bits/stl_vector.h ****        *  Create a %vector consisting of copies of the elements in the
 370:/usr/include/c++/6/bits/stl_vector.h ****        *  initializer_list @a __l.
 371:/usr/include/c++/6/bits/stl_vector.h ****        *
 372:/usr/include/c++/6/bits/stl_vector.h ****        *  This will call the element type's copy constructor N times
 373:/usr/include/c++/6/bits/stl_vector.h ****        *  (where N is @a __l.size()) and do no memory reallocation.
 374:/usr/include/c++/6/bits/stl_vector.h ****        */
 375:/usr/include/c++/6/bits/stl_vector.h ****       vector(initializer_list<value_type> __l,
 376:/usr/include/c++/6/bits/stl_vector.h **** 	     const allocator_type& __a = allocator_type())
GAS LISTING /tmp/ccvUPO8Q.s 			page 297


 377:/usr/include/c++/6/bits/stl_vector.h ****       : _Base(__a)
 378:/usr/include/c++/6/bits/stl_vector.h ****       {
 379:/usr/include/c++/6/bits/stl_vector.h **** 	_M_range_initialize(__l.begin(), __l.end(),
 380:/usr/include/c++/6/bits/stl_vector.h **** 			    random_access_iterator_tag());
 381:/usr/include/c++/6/bits/stl_vector.h ****       }
 382:/usr/include/c++/6/bits/stl_vector.h **** #endif
 383:/usr/include/c++/6/bits/stl_vector.h **** 
 384:/usr/include/c++/6/bits/stl_vector.h ****       /**
 385:/usr/include/c++/6/bits/stl_vector.h ****        *  @brief  Builds a %vector from a range.
 386:/usr/include/c++/6/bits/stl_vector.h ****        *  @param  __first  An input iterator.
 387:/usr/include/c++/6/bits/stl_vector.h ****        *  @param  __last  An input iterator.
 388:/usr/include/c++/6/bits/stl_vector.h ****        *  @param  __a  An allocator.
 389:/usr/include/c++/6/bits/stl_vector.h ****        *
 390:/usr/include/c++/6/bits/stl_vector.h ****        *  Create a %vector consisting of copies of the elements from
 391:/usr/include/c++/6/bits/stl_vector.h ****        *  [first,last).
 392:/usr/include/c++/6/bits/stl_vector.h ****        *
 393:/usr/include/c++/6/bits/stl_vector.h ****        *  If the iterators are forward, bidirectional, or
 394:/usr/include/c++/6/bits/stl_vector.h ****        *  random-access, then this will call the elements' copy
 395:/usr/include/c++/6/bits/stl_vector.h ****        *  constructor N times (where N is distance(first,last)) and do
 396:/usr/include/c++/6/bits/stl_vector.h ****        *  no memory reallocation.  But if only input iterators are
 397:/usr/include/c++/6/bits/stl_vector.h ****        *  used, then this will do at most 2N calls to the copy
 398:/usr/include/c++/6/bits/stl_vector.h ****        *  constructor, and logN memory reallocations.
 399:/usr/include/c++/6/bits/stl_vector.h ****        */
 400:/usr/include/c++/6/bits/stl_vector.h **** #if __cplusplus >= 201103L
 401:/usr/include/c++/6/bits/stl_vector.h ****       template<typename _InputIterator,
 402:/usr/include/c++/6/bits/stl_vector.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
 403:/usr/include/c++/6/bits/stl_vector.h ****         vector(_InputIterator __first, _InputIterator __last,
 404:/usr/include/c++/6/bits/stl_vector.h **** 	       const allocator_type& __a = allocator_type())
 405:/usr/include/c++/6/bits/stl_vector.h **** 	: _Base(__a)
 406:/usr/include/c++/6/bits/stl_vector.h ****         { _M_initialize_dispatch(__first, __last, __false_type()); }
 407:/usr/include/c++/6/bits/stl_vector.h **** #else
 408:/usr/include/c++/6/bits/stl_vector.h ****       template<typename _InputIterator>
 409:/usr/include/c++/6/bits/stl_vector.h ****         vector(_InputIterator __first, _InputIterator __last,
 410:/usr/include/c++/6/bits/stl_vector.h **** 	       const allocator_type& __a = allocator_type())
 411:/usr/include/c++/6/bits/stl_vector.h **** 	: _Base(__a)
 412:/usr/include/c++/6/bits/stl_vector.h ****         {
 413:/usr/include/c++/6/bits/stl_vector.h **** 	  // Check whether it's an integral type.  If so, it's not an iterator.
 414:/usr/include/c++/6/bits/stl_vector.h **** 	  typedef typename std::__is_integer<_InputIterator>::__type _Integral;
 415:/usr/include/c++/6/bits/stl_vector.h **** 	  _M_initialize_dispatch(__first, __last, _Integral());
 416:/usr/include/c++/6/bits/stl_vector.h **** 	}
 417:/usr/include/c++/6/bits/stl_vector.h **** #endif
 418:/usr/include/c++/6/bits/stl_vector.h **** 
 419:/usr/include/c++/6/bits/stl_vector.h ****       /**
 420:/usr/include/c++/6/bits/stl_vector.h ****        *  The dtor only erases the elements, and note that if the
 421:/usr/include/c++/6/bits/stl_vector.h ****        *  elements themselves are pointers, the pointed-to memory is
 422:/usr/include/c++/6/bits/stl_vector.h ****        *  not touched in any way.  Managing the pointer is the user's
 423:/usr/include/c++/6/bits/stl_vector.h ****        *  responsibility.
 424:/usr/include/c++/6/bits/stl_vector.h ****        */
 425:/usr/include/c++/6/bits/stl_vector.h ****       ~vector() _GLIBCXX_NOEXCEPT
 6315              		.loc 30 425 0
 6316              		.cfi_startproc
 6317              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 6318              		.cfi_lsda 0x1b,.LLSDA11741
 6319 0000 55       		pushq	%rbp
 6320              		.cfi_def_cfa_offset 16
 6321              		.cfi_offset 6, -16
 6322 0001 4889E5   		movq	%rsp, %rbp
GAS LISTING /tmp/ccvUPO8Q.s 			page 298


 6323              		.cfi_def_cfa_register 6
 6324 0004 4883EC10 		subq	$16, %rsp
 6325 0008 48897DF8 		movq	%rdi, -8(%rbp)
 6326              	.LBB61:
 426:/usr/include/c++/6/bits/stl_vector.h ****       { std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 427:/usr/include/c++/6/bits/stl_vector.h **** 		      _M_get_Tp_allocator()); }
 6327              		.loc 30 427 0
 6328 000c 488B45F8 		movq	-8(%rbp), %rax
 6329 0010 4889C7   		movq	%rax, %rdi
 6330 0013 E8000000 		call	_ZNSt12_Vector_baseIlSaIlEE19_M_get_Tp_allocatorEv
 6330      00
 6331 0018 4889C2   		movq	%rax, %rdx
 426:/usr/include/c++/6/bits/stl_vector.h ****       { std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 6332              		.loc 30 426 0
 6333 001b 488B45F8 		movq	-8(%rbp), %rax
 6334 001f 488B4808 		movq	8(%rax), %rcx
 6335 0023 488B45F8 		movq	-8(%rbp), %rax
 6336 0027 488B00   		movq	(%rax), %rax
 6337 002a 4889CE   		movq	%rcx, %rsi
 6338 002d 4889C7   		movq	%rax, %rdi
 6339 0030 E8000000 		call	_ZSt8_DestroyIPllEvT_S1_RSaIT0_E
 6339      00
 6340              		.loc 30 427 0
 6341 0035 488B45F8 		movq	-8(%rbp), %rax
 6342 0039 4889C7   		movq	%rax, %rdi
 6343 003c E8000000 		call	_ZNSt12_Vector_baseIlSaIlEED2Ev
 6343      00
 6344              	.LBE61:
 6345 0041 90       		nop
 6346 0042 C9       		leave
 6347              		.cfi_def_cfa 7, 8
 6348 0043 C3       		ret
 6349              		.cfi_endproc
 6350              	.LFE11741:
 6351              		.section	.gcc_except_table
 6352              	.LLSDA11741:
 6353 00a8 FF       		.byte	0xff
 6354 00a9 FF       		.byte	0xff
 6355 00aa 01       		.byte	0x1
 6356 00ab 00       		.uleb128 .LLSDACSE11741-.LLSDACSB11741
 6357              	.LLSDACSB11741:
 6358              	.LLSDACSE11741:
 6359              		.section	.text._ZNSt6vectorIlSaIlEED2Ev,"axG",@progbits,_ZNSt6vectorIlSaIlEED5Ev,comdat
 6361              		.weak	_ZNSt6vectorIlSaIlEED1Ev
 6362              		.set	_ZNSt6vectorIlSaIlEED1Ev,_ZNSt6vectorIlSaIlEED2Ev
 6363              		.section	.text._ZN5boost13intrusive_ptrIN3pmt8pmt_baseEEaSERKS3_,"axG",@progbits,_ZN5boost13intrus
 6364              		.align 2
 6365              		.weak	_ZN5boost13intrusive_ptrIN3pmt8pmt_baseEEaSERKS3_
 6367              	_ZN5boost13intrusive_ptrIN3pmt8pmt_baseEEaSERKS3_:
 6368              	.LFB11743:
 151:/usr/include/boost/smart_ptr/intrusive_ptr.hpp ****     {
 6369              		.loc 25 151 0
 6370              		.cfi_startproc
 6371 0000 55       		pushq	%rbp
 6372              		.cfi_def_cfa_offset 16
 6373              		.cfi_offset 6, -16
 6374 0001 4889E5   		movq	%rsp, %rbp
GAS LISTING /tmp/ccvUPO8Q.s 			page 299


 6375              		.cfi_def_cfa_register 6
 6376 0004 4883EC20 		subq	$32, %rsp
 6377 0008 48897DE8 		movq	%rdi, -24(%rbp)
 6378 000c 488975E0 		movq	%rsi, -32(%rbp)
 153:/usr/include/boost/smart_ptr/intrusive_ptr.hpp ****         return *this;
 6379              		.loc 25 153 0
 6380 0010 488B55E0 		movq	-32(%rbp), %rdx
 6381 0014 488D45F8 		leaq	-8(%rbp), %rax
 6382 0018 4889D6   		movq	%rdx, %rsi
 6383 001b 4889C7   		movq	%rax, %rdi
 6384 001e E8000000 		call	_ZN5boost13intrusive_ptrIN3pmt8pmt_baseEEC1ERKS3_
 6384      00
 6385 0023 488B55E8 		movq	-24(%rbp), %rdx
 6386 0027 488D45F8 		leaq	-8(%rbp), %rax
 6387 002b 4889D6   		movq	%rdx, %rsi
 6388 002e 4889C7   		movq	%rax, %rdi
 6389 0031 E8000000 		call	_ZN5boost13intrusive_ptrIN3pmt8pmt_baseEE4swapERS3_
 6389      00
 6390 0036 488D45F8 		leaq	-8(%rbp), %rax
 6391 003a 4889C7   		movq	%rax, %rdi
 6392 003d E8000000 		call	_ZN5boost13intrusive_ptrIN3pmt8pmt_baseEED1Ev
 6392      00
 154:/usr/include/boost/smart_ptr/intrusive_ptr.hpp ****     }
 6393              		.loc 25 154 0
 6394 0042 488B45E8 		movq	-24(%rbp), %rax
 155:/usr/include/boost/smart_ptr/intrusive_ptr.hpp **** 
 6395              		.loc 25 155 0
 6396 0046 C9       		leave
 6397              		.cfi_def_cfa 7, 8
 6398 0047 C3       		ret
 6399              		.cfi_endproc
 6400              	.LFE11743:
 6402              		.section	.text._ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEE5adoptEPS2_,"
 6403              		.align 2
 6404              		.weak	_ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEE5adoptEPS2_
 6406              	_ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEE5adoptEPS2_:
 6407              	.LFB11973:
  51:/usr/include/boost/exception/exception.hpp ****                 {
 6408              		.loc 3 51 0
 6409              		.cfi_startproc
 6410 0000 55       		pushq	%rbp
 6411              		.cfi_def_cfa_offset 16
 6412              		.cfi_offset 6, -16
 6413 0001 4889E5   		movq	%rsp, %rbp
 6414              		.cfi_def_cfa_register 6
 6415 0004 4883EC10 		subq	$16, %rsp
 6416 0008 48897DF8 		movq	%rdi, -8(%rbp)
 6417 000c 488975F0 		movq	%rsi, -16(%rbp)
  53:/usr/include/boost/exception/exception.hpp ****                 px_=px;
 6418              		.loc 3 53 0
 6419 0010 488B45F8 		movq	-8(%rbp), %rax
 6420 0014 4889C7   		movq	%rax, %rdi
 6421 0017 E8000000 		call	_ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEE7releaseEv
 6421      00
  54:/usr/include/boost/exception/exception.hpp ****                 add_ref();
 6422              		.loc 3 54 0
 6423 001c 488B45F8 		movq	-8(%rbp), %rax
GAS LISTING /tmp/ccvUPO8Q.s 			page 300


 6424 0020 488B55F0 		movq	-16(%rbp), %rdx
 6425 0024 488910   		movq	%rdx, (%rax)
  55:/usr/include/boost/exception/exception.hpp ****                 }
 6426              		.loc 3 55 0
 6427 0027 488B45F8 		movq	-8(%rbp), %rax
 6428 002b 4889C7   		movq	%rax, %rdi
 6429 002e E8000000 		call	_ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEE7add_refEv
 6429      00
  56:/usr/include/boost/exception/exception.hpp **** 
 6430              		.loc 3 56 0
 6431 0033 90       		nop
 6432 0034 C9       		leave
 6433              		.cfi_def_cfa 7, 8
 6434 0035 C3       		ret
 6435              		.cfi_endproc
 6436              	.LFE11973:
 6438              		.section	.text._ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEEC2ERKS3_,"axG
 6439              		.align 2
 6440              		.weak	_ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEEC2ERKS3_
 6442              	_ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEEC2ERKS3_:
 6443              	.LFB11976:
  37:/usr/include/boost/exception/exception.hpp ****                 px_(x.px_)
 6444              		.loc 3 37 0
 6445              		.cfi_startproc
 6446 0000 55       		pushq	%rbp
 6447              		.cfi_def_cfa_offset 16
 6448              		.cfi_offset 6, -16
 6449 0001 4889E5   		movq	%rsp, %rbp
 6450              		.cfi_def_cfa_register 6
 6451 0004 4883EC10 		subq	$16, %rsp
 6452 0008 48897DF8 		movq	%rdi, -8(%rbp)
 6453 000c 488975F0 		movq	%rsi, -16(%rbp)
 6454              	.LBB62:
  38:/usr/include/boost/exception/exception.hpp ****                 {
 6455              		.loc 3 38 0
 6456 0010 488B45F0 		movq	-16(%rbp), %rax
 6457 0014 488B10   		movq	(%rax), %rdx
 6458 0017 488B45F8 		movq	-8(%rbp), %rax
 6459 001b 488910   		movq	%rdx, (%rax)
  40:/usr/include/boost/exception/exception.hpp ****                 }
 6460              		.loc 3 40 0
 6461 001e 488B45F8 		movq	-8(%rbp), %rax
 6462 0022 4889C7   		movq	%rax, %rdi
 6463 0025 E8000000 		call	_ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEE7add_refEv
 6463      00
 6464              	.LBE62:
  41:/usr/include/boost/exception/exception.hpp **** 
 6465              		.loc 3 41 0
 6466 002a 90       		nop
 6467 002b C9       		leave
 6468              		.cfi_def_cfa 7, 8
 6469 002c C3       		ret
 6470              		.cfi_endproc
 6471              	.LFE11976:
 6473              		.weak	_ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEEC1ERKS3_
 6474              		.set	_ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEEC1ERKS3_,_ZN5boost16exc
 6475              		.section	.text._ZN5boost10shared_ptrIKNS_16exception_detail10clone_baseEEC2ERKS4_,"axG",@progbits,
GAS LISTING /tmp/ccvUPO8Q.s 			page 301


 6476              		.align 2
 6477              		.weak	_ZN5boost10shared_ptrIKNS_16exception_detail10clone_baseEEC2ERKS4_
 6479              	_ZN5boost10shared_ptrIKNS_16exception_detail10clone_baseEEC2ERKS4_:
 6480              	.LFB11988:
 337:/usr/include/boost/smart_ptr/shared_ptr.hpp **** {
 338:/usr/include/boost/smart_ptr/shared_ptr.hpp **** private:
 339:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 340:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     // Borland 5.5.1 specific workaround
 341:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     typedef shared_ptr<T> this_type;
 342:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 343:/usr/include/boost/smart_ptr/shared_ptr.hpp **** public:
 344:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 345:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     typedef typename boost::detail::sp_element< T >::type element_type;
 346:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 347:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     shared_ptr() BOOST_NOEXCEPT : px( 0 ), pn() // never throws in 1.30+
 348:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     {
 349:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     }
 350:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 351:/usr/include/boost/smart_ptr/shared_ptr.hpp **** #if !defined( BOOST_NO_CXX11_NULLPTR )
 352:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 353:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     shared_ptr( boost::detail::sp_nullptr_t ) BOOST_NOEXCEPT : px( 0 ), pn() // never throws
 354:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     {
 355:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     }
 356:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 357:/usr/include/boost/smart_ptr/shared_ptr.hpp **** #endif
 358:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 359:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     template<class Y>
 360:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     explicit shared_ptr( Y * p ): px( p ), pn() // Y must be complete
 361:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     {
 362:/usr/include/boost/smart_ptr/shared_ptr.hpp ****         boost::detail::sp_pointer_construct( this, p, pn );
 363:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     }
 364:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 365:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     //
 366:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     // Requirements: D's copy constructor must not throw
 367:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     //
 368:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     // shared_ptr will release p by calling d(p)
 369:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     //
 370:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 371:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     template<class Y, class D> shared_ptr( Y * p, D d ): px( p ), pn( p, d )
 372:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     {
 373:/usr/include/boost/smart_ptr/shared_ptr.hpp ****         boost::detail::sp_deleter_construct( this, p );
 374:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     }
 375:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 376:/usr/include/boost/smart_ptr/shared_ptr.hpp **** #if !defined( BOOST_NO_CXX11_NULLPTR )
 377:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 378:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     template<class D> shared_ptr( boost::detail::sp_nullptr_t p, D d ): px( p ), pn( p, d )
 379:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     {
 380:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     }
 381:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 382:/usr/include/boost/smart_ptr/shared_ptr.hpp **** #endif
 383:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 384:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     // As above, but with allocator. A's copy constructor shall not throw.
 385:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 386:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     template<class Y, class D, class A> shared_ptr( Y * p, D d, A a ): px( p ), pn( p, d, a )
 387:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     {
 388:/usr/include/boost/smart_ptr/shared_ptr.hpp ****         boost::detail::sp_deleter_construct( this, p );
 389:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     }
GAS LISTING /tmp/ccvUPO8Q.s 			page 302


 390:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 391:/usr/include/boost/smart_ptr/shared_ptr.hpp **** #if !defined( BOOST_NO_CXX11_NULLPTR )
 392:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 393:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     template<class D, class A> shared_ptr( boost::detail::sp_nullptr_t p, D d, A a ): px( p ), pn( 
 394:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     {
 395:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     }
 396:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 397:/usr/include/boost/smart_ptr/shared_ptr.hpp **** #endif
 398:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 399:/usr/include/boost/smart_ptr/shared_ptr.hpp **** //  generated copy constructor, destructor are fine...
 400:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 401:/usr/include/boost/smart_ptr/shared_ptr.hpp **** #if !defined( BOOST_NO_CXX11_RVALUE_REFERENCES )
 402:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 403:/usr/include/boost/smart_ptr/shared_ptr.hpp **** // ... except in C++0x, move disables the implicit copy
 404:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 405:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     shared_ptr( shared_ptr const & r ) BOOST_NOEXCEPT : px( r.px ), pn( r.pn )
 6481              		.loc 7 405 0
 6482              		.cfi_startproc
 6483 0000 55       		pushq	%rbp
 6484              		.cfi_def_cfa_offset 16
 6485              		.cfi_offset 6, -16
 6486 0001 4889E5   		movq	%rsp, %rbp
 6487              		.cfi_def_cfa_register 6
 6488 0004 4883EC10 		subq	$16, %rsp
 6489 0008 48897DF8 		movq	%rdi, -8(%rbp)
 6490 000c 488975F0 		movq	%rsi, -16(%rbp)
 6491              	.LBB63:
 6492              		.loc 7 405 0
 6493 0010 488B45F0 		movq	-16(%rbp), %rax
 6494 0014 488B10   		movq	(%rax), %rdx
 6495 0017 488B45F8 		movq	-8(%rbp), %rax
 6496 001b 488910   		movq	%rdx, (%rax)
 6497 001e 488B45F0 		movq	-16(%rbp), %rax
 6498 0022 488D5008 		leaq	8(%rax), %rdx
 6499 0026 488B45F8 		movq	-8(%rbp), %rax
 6500 002a 4883C008 		addq	$8, %rax
 6501 002e 4889D6   		movq	%rdx, %rsi
 6502 0031 4889C7   		movq	%rax, %rdi
 6503 0034 E8000000 		call	_ZN5boost6detail12shared_countC1ERKS1_
 6503      00
 6504              	.LBE63:
 406:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     {
 407:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     }
 6505              		.loc 7 407 0
 6506 0039 90       		nop
 6507 003a C9       		leave
 6508              		.cfi_def_cfa 7, 8
 6509 003b C3       		ret
 6510              		.cfi_endproc
 6511              	.LFE11988:
 6513              		.weak	_ZN5boost10shared_ptrIKNS_16exception_detail10clone_baseEEC1ERKS4_
 6514              		.set	_ZN5boost10shared_ptrIKNS_16exception_detail10clone_baseEEC1ERKS4_,_ZN5boost10shared_ptrIKNS_
 6515              		.section	.text._ZN5boost16exception_detail10bad_alloc_C2Ev,"axG",@progbits,_ZN5boost16exception_de
 6516              		.align 2
 6517              		.weak	_ZN5boost16exception_detail10bad_alloc_C2Ev
 6519              	_ZN5boost16exception_detail10bad_alloc_C2Ev:
 6520              	.LFB12014:
GAS LISTING /tmp/ccvUPO8Q.s 			page 303


 103:/usr/include/boost/exception/detail/exception_ptr.hpp ****             boost::exception,
 6521              		.loc 16 103 0
 6522              		.cfi_startproc
 6523 0000 55       		pushq	%rbp
 6524              		.cfi_def_cfa_offset 16
 6525              		.cfi_offset 6, -16
 6526 0001 4889E5   		movq	%rsp, %rbp
 6527              		.cfi_def_cfa_register 6
 6528 0004 4883EC10 		subq	$16, %rsp
 6529 0008 48897DF8 		movq	%rdi, -8(%rbp)
 6530              	.LBB64:
 103:/usr/include/boost/exception/detail/exception_ptr.hpp ****             boost::exception,
 6531              		.loc 16 103 0
 6532 000c 488B45F8 		movq	-8(%rbp), %rax
 6533 0010 4889C7   		movq	%rax, %rdi
 6534 0013 E8000000 		call	_ZN5boost9exceptionC2Ev
 6534      00
 6535 0018 488B45F8 		movq	-8(%rbp), %rax
 6536 001c 4883C028 		addq	$40, %rax
 6537 0020 4889C7   		movq	%rax, %rdi
 6538 0023 E8000000 		call	_ZNSt9bad_allocC2Ev
 6538      00
 6539 0028 488D1500 		leaq	16+_ZTVN5boost16exception_detail10bad_alloc_E(%rip), %rdx
 6539      000000
 6540 002f 488B45F8 		movq	-8(%rbp), %rax
 6541 0033 488910   		movq	%rdx, (%rax)
 6542 0036 488D1500 		leaq	48+_ZTVN5boost16exception_detail10bad_alloc_E(%rip), %rdx
 6542      000000
 6543 003d 488B45F8 		movq	-8(%rbp), %rax
 6544 0041 48895028 		movq	%rdx, 40(%rax)
 6545              	.LBE64:
 6546 0045 90       		nop
 6547 0046 C9       		leave
 6548              		.cfi_def_cfa 7, 8
 6549 0047 C3       		ret
 6550              		.cfi_endproc
 6551              	.LFE12014:
 6553              		.weak	_ZN5boost16exception_detail10bad_alloc_C1Ev
 6554              		.set	_ZN5boost16exception_detail10bad_alloc_C1Ev,_ZN5boost16exception_detail10bad_alloc_C2Ev
 6555              		.section	.text._ZNSt9bad_allocC2ERKS_,"axG",@progbits,_ZNSt9bad_allocC5ERKS_,comdat
 6556              		.align 2
 6557              		.weak	_ZNSt9bad_allocC2ERKS_
 6559              	_ZNSt9bad_allocC2ERKS_:
 6560              	.LFB12019:
  54:/usr/include/c++/6/new ****   {
 6561              		.loc 2 54 0
 6562              		.cfi_startproc
 6563 0000 55       		pushq	%rbp
 6564              		.cfi_def_cfa_offset 16
 6565              		.cfi_offset 6, -16
 6566 0001 4889E5   		movq	%rsp, %rbp
 6567              		.cfi_def_cfa_register 6
 6568 0004 4883EC10 		subq	$16, %rsp
 6569 0008 48897DF8 		movq	%rdi, -8(%rbp)
 6570 000c 488975F0 		movq	%rsi, -16(%rbp)
 6571              	.LBB65:
  54:/usr/include/c++/6/new ****   {
GAS LISTING /tmp/ccvUPO8Q.s 			page 304


 6572              		.loc 2 54 0
 6573 0010 488B55F0 		movq	-16(%rbp), %rdx
 6574 0014 488B45F8 		movq	-8(%rbp), %rax
 6575 0018 4889D6   		movq	%rdx, %rsi
 6576 001b 4889C7   		movq	%rax, %rdi
 6577 001e E8000000 		call	_ZNSt9exceptionC2ERKS_
 6577      00
 6578 0023 488D1500 		leaq	16+_ZTVSt9bad_alloc(%rip), %rdx
 6578      000000
 6579 002a 488B45F8 		movq	-8(%rbp), %rax
 6580 002e 488910   		movq	%rdx, (%rax)
 6581              	.LBE65:
 6582 0031 90       		nop
 6583 0032 C9       		leave
 6584              		.cfi_def_cfa 7, 8
 6585 0033 C3       		ret
 6586              		.cfi_endproc
 6587              	.LFE12019:
 6589              		.weak	_ZNSt9bad_allocC1ERKS_
 6590              		.set	_ZNSt9bad_allocC1ERKS_,_ZNSt9bad_allocC2ERKS_
 6591              		.section	.text._ZN5boost16exception_detail10bad_alloc_C2ERKS1_,"axG",@progbits,_ZN5boost16exceptio
 6592              		.align 2
 6593              		.weak	_ZN5boost16exception_detail10bad_alloc_C2ERKS1_
 6595              	_ZN5boost16exception_detail10bad_alloc_C2ERKS1_:
 6596              	.LFB12021:
 103:/usr/include/boost/exception/detail/exception_ptr.hpp ****             boost::exception,
 6597              		.loc 16 103 0
 6598              		.cfi_startproc
 6599 0000 55       		pushq	%rbp
 6600              		.cfi_def_cfa_offset 16
 6601              		.cfi_offset 6, -16
 6602 0001 4889E5   		movq	%rsp, %rbp
 6603              		.cfi_def_cfa_register 6
 6604 0004 4883EC10 		subq	$16, %rsp
 6605 0008 48897DF8 		movq	%rdi, -8(%rbp)
 6606 000c 488975F0 		movq	%rsi, -16(%rbp)
 6607              	.LBB66:
 103:/usr/include/boost/exception/detail/exception_ptr.hpp ****             boost::exception,
 6608              		.loc 16 103 0
 6609 0010 488B55F0 		movq	-16(%rbp), %rdx
 6610 0014 488B45F8 		movq	-8(%rbp), %rax
 6611 0018 4889D6   		movq	%rdx, %rsi
 6612 001b 4889C7   		movq	%rax, %rdi
 6613 001e E8000000 		call	_ZN5boost9exceptionC2ERKS0_
 6613      00
 6614 0023 488B45F0 		movq	-16(%rbp), %rax
 6615 0027 488D5028 		leaq	40(%rax), %rdx
 6616 002b 488B45F8 		movq	-8(%rbp), %rax
 6617 002f 4883C028 		addq	$40, %rax
 6618 0033 4889D6   		movq	%rdx, %rsi
 6619 0036 4889C7   		movq	%rax, %rdi
 6620 0039 E8000000 		call	_ZNSt9bad_allocC2ERKS_
 6620      00
 6621 003e 488D1500 		leaq	16+_ZTVN5boost16exception_detail10bad_alloc_E(%rip), %rdx
 6621      000000
 6622 0045 488B45F8 		movq	-8(%rbp), %rax
 6623 0049 488910   		movq	%rdx, (%rax)
GAS LISTING /tmp/ccvUPO8Q.s 			page 305


 6624 004c 488D1500 		leaq	48+_ZTVN5boost16exception_detail10bad_alloc_E(%rip), %rdx
 6624      000000
 6625 0053 488B45F8 		movq	-8(%rbp), %rax
 6626 0057 48895028 		movq	%rdx, 40(%rax)
 6627              	.LBE66:
 6628 005b 90       		nop
 6629 005c C9       		leave
 6630              		.cfi_def_cfa 7, 8
 6631 005d C3       		ret
 6632              		.cfi_endproc
 6633              	.LFE12021:
 6635              		.weak	_ZN5boost16exception_detail10bad_alloc_C1ERKS1_
 6636              		.set	_ZN5boost16exception_detail10bad_alloc_C1ERKS1_,_ZN5boost16exception_detail10bad_alloc_C2ERKS
 6637              		.section	.text._ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EEC1ERKS3_,"axG",@progbits,
 6638              		.align 2
 6639              		.weak	_ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EEC1ERKS3_
 6641              	_ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EEC1ERKS3_:
 6642              	.LFB12024:
 445:/usr/include/boost/exception/exception.hpp **** 
 446:/usr/include/boost/exception/exception.hpp ****         inline
 447:/usr/include/boost/exception/exception.hpp ****         void
 448:/usr/include/boost/exception/exception.hpp ****         copy_boost_exception( void *, void const * )
 449:/usr/include/boost/exception/exception.hpp ****             {
 450:/usr/include/boost/exception/exception.hpp ****             }
 451:/usr/include/boost/exception/exception.hpp **** 
 452:/usr/include/boost/exception/exception.hpp **** #if defined(__GNUC__)
 453:/usr/include/boost/exception/exception.hpp **** # if (__GNUC__ == 4 && __GNUC_MINOR__ >= 1) || (__GNUC__ > 4)
 454:/usr/include/boost/exception/exception.hpp **** #  pragma GCC visibility push (default)
 455:/usr/include/boost/exception/exception.hpp **** # endif
 456:/usr/include/boost/exception/exception.hpp **** #endif
 457:/usr/include/boost/exception/exception.hpp ****         template <class T>
 458:/usr/include/boost/exception/exception.hpp ****         class
 459:/usr/include/boost/exception/exception.hpp ****         clone_impl:
 6643              		.loc 3 459 0
 6644              		.cfi_startproc
 6645              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 6646              		.cfi_lsda 0x1b,.LLSDA12024
 6647 0000 55       		pushq	%rbp
 6648              		.cfi_def_cfa_offset 16
 6649              		.cfi_offset 6, -16
 6650 0001 4889E5   		movq	%rsp, %rbp
 6651              		.cfi_def_cfa_register 6
 6652 0004 53       		pushq	%rbx
 6653 0005 4883EC18 		subq	$24, %rsp
 6654              		.cfi_offset 3, -24
 6655 0009 48897DE8 		movq	%rdi, -24(%rbp)
 6656 000d 488975E0 		movq	%rsi, -32(%rbp)
 6657              	.LBB67:
 6658              		.loc 3 459 0
 6659 0011 488B45E0 		movq	-32(%rbp), %rax
 6660 0015 488B00   		movq	(%rax), %rax
 6661 0018 4883E818 		subq	$24, %rax
 6662 001c 488B00   		movq	(%rax), %rax
 6663 001f 4889C2   		movq	%rax, %rdx
 6664 0022 488B45E0 		movq	-32(%rbp), %rax
 6665 0026 4801C2   		addq	%rax, %rdx
 6666 0029 488B45E8 		movq	-24(%rbp), %rax
GAS LISTING /tmp/ccvUPO8Q.s 			page 306


 6667 002d 4883C030 		addq	$48, %rax
 6668 0031 4889D6   		movq	%rdx, %rsi
 6669 0034 4889C7   		movq	%rax, %rdi
 6670 0037 E8000000 		call	_ZN5boost16exception_detail10clone_baseC2ERKS1_
 6670      00
 6671 003c 488B55E0 		movq	-32(%rbp), %rdx
 6672 0040 488B45E8 		movq	-24(%rbp), %rax
 6673 0044 4889D6   		movq	%rdx, %rsi
 6674 0047 4889C7   		movq	%rax, %rdi
 6675              	.LEHB40:
 6676 004a E8000000 		call	_ZN5boost16exception_detail10bad_alloc_C2ERKS1_
 6676      00
 6677              	.LEHE40:
 6678              		.loc 3 459 0 is_stmt 0 discriminator 8
 6679 004f 488D1500 		leaq	24+_ZTVN5boost16exception_detail10clone_implINS0_10bad_alloc_EEE(%rip), %rdx
 6679      000000
 6680 0056 488B45E8 		movq	-24(%rbp), %rax
 6681 005a 488910   		movq	%rdx, (%rax)
 6682 005d 488D1500 		leaq	72+_ZTVN5boost16exception_detail10clone_implINS0_10bad_alloc_EEE(%rip), %rdx
 6682      000000
 6683 0064 488B45E8 		movq	-24(%rbp), %rax
 6684 0068 48895028 		movq	%rdx, 40(%rax)
 6685 006c 488B45E8 		movq	-24(%rbp), %rax
 6686 0070 488D5030 		leaq	48(%rax), %rdx
 6687 0074 488D0500 		leaq	136+_ZTVN5boost16exception_detail10clone_implINS0_10bad_alloc_EEE(%rip), %rax
 6687      000000
 6688 007b 488902   		movq	%rax, (%rdx)
 6689              	.LBE67:
 6690 007e EB1E     		jmp	.L293
 6691              	.L292:
 6692 0080 4889C3   		movq	%rax, %rbx
 6693              	.LBB68:
 6694              		.loc 3 459 0
 6695 0083 488B45E8 		movq	-24(%rbp), %rax
 6696 0087 4883C030 		addq	$48, %rax
 6697 008b 4889C7   		movq	%rax, %rdi
 6698 008e E8000000 		call	_ZN5boost16exception_detail10clone_baseD2Ev
 6698      00
 6699 0093 4889D8   		movq	%rbx, %rax
 6700 0096 4889C7   		movq	%rax, %rdi
 6701              	.LEHB41:
 6702 0099 E8000000 		call	_Unwind_Resume@PLT
 6702      00
 6703              	.LEHE41:
 6704              	.L293:
 6705              	.LBE68:
 6706 009e 4883C418 		addq	$24, %rsp
 6707 00a2 5B       		popq	%rbx
 6708 00a3 5D       		popq	%rbp
 6709              		.cfi_def_cfa 7, 8
 6710 00a4 C3       		ret
 6711              		.cfi_endproc
 6712              	.LFE12024:
 6713              		.section	.gcc_except_table
 6714              	.LLSDA12024:
 6715 00ac FF       		.byte	0xff
 6716 00ad FF       		.byte	0xff
GAS LISTING /tmp/ccvUPO8Q.s 			page 307


 6717 00ae 01       		.byte	0x1
 6718 00af 0A       		.uleb128 .LLSDACSE12024-.LLSDACSB12024
 6719              	.LLSDACSB12024:
 6720 00b0 4A       		.uleb128 .LEHB40-.LFB12024
 6721 00b1 05       		.uleb128 .LEHE40-.LEHB40
 6722 00b2 8001     		.uleb128 .L292-.LFB12024
 6723 00b4 00       		.uleb128 0
 6724 00b5 9901     		.uleb128 .LEHB41-.LFB12024
 6725 00b7 05       		.uleb128 .LEHE41-.LEHB41
 6726 00b8 00       		.uleb128 0
 6727 00b9 00       		.uleb128 0
 6728              	.LLSDACSE12024:
 6729              		.section	.text._ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EEC1ERKS3_,"axG",@progbits,
 6731              		.weak	_ZZN5boost16exception_detail27get_static_exception_objectINS0_10bad_alloc_EEENS_13exception_
 6732              		.section	.bss._ZZN5boost16exception_detail27get_static_exception_objectINS0_10bad_alloc_EEENS_13ex
 6733              		.align 16
 6736              	_ZZN5boost16exception_detail27get_static_exception_objectINS0_10bad_alloc_EEENS_13exception_ptrEvE2
 6737 0000 00000000 		.zero	16
 6737      00000000 
 6737      00000000 
 6737      00000000 
 6738              		.weak	_ZGVZN5boost16exception_detail27get_static_exception_objectINS0_10bad_alloc_EEENS_13exceptio
 6739              		.section	.bss._ZGVZN5boost16exception_detail27get_static_exception_objectINS0_10bad_alloc_EEENS_13
 6740              		.align 8
 6743              	_ZGVZN5boost16exception_detail27get_static_exception_objectINS0_10bad_alloc_EEENS_13exception_ptrEv
 6744 0000 00000000 		.zero	8
 6744      00000000 
 6745              		.section	.rodata
 6746 0064 00000000 		.align 8
 6747              	.LC13:
 6748 0068 2F757372 		.string	"/usr/include/boost/exception/detail/exception_ptr.hpp"
 6748      2F696E63 
 6748      6C756465 
 6748      2F626F6F 
 6748      73742F65 
 6749              		.section	.text._ZN5boost16exception_detail27get_static_exception_objectINS0_10bad_alloc_EEENS_13ex
 6750              		.weak	_ZN5boost16exception_detail27get_static_exception_objectINS0_10bad_alloc_EEENS_13exception_p
 6752              	_ZN5boost16exception_detail27get_static_exception_objectINS0_10bad_alloc_EEENS_13exception_ptrEv:
 6753              	.LFB12012:
 116:/usr/include/boost/exception/detail/exception_ptr.hpp ****                 };
 117:/usr/include/boost/exception/detail/exception_ptr.hpp **** 
 118:/usr/include/boost/exception/detail/exception_ptr.hpp ****         template <class Exception>
 119:/usr/include/boost/exception/detail/exception_ptr.hpp ****         exception_ptr
 120:/usr/include/boost/exception/detail/exception_ptr.hpp ****         get_static_exception_object()
 6754              		.loc 16 120 0 is_stmt 1
 6755              		.cfi_startproc
 6756              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 6757              		.cfi_lsda 0x1b,.LLSDA12012
 6758 0000 55       		pushq	%rbp
 6759              		.cfi_def_cfa_offset 16
 6760              		.cfi_offset 6, -16
 6761 0001 4889E5   		movq	%rsp, %rbp
 6762              		.cfi_def_cfa_register 6
 6763 0004 4155     		pushq	%r13
 6764 0006 4154     		pushq	%r12
 6765 0008 53       		pushq	%rbx
 6766 0009 4881ECB8 		subq	$184, %rsp
GAS LISTING /tmp/ccvUPO8Q.s 			page 308


 6766      000000
 6767              		.cfi_offset 13, -24
 6768              		.cfi_offset 12, -32
 6769              		.cfi_offset 3, -40
 6770 0010 4889BD38 		movq	%rdi, -200(%rbp)
 6770      FFFFFF
 121:/usr/include/boost/exception/detail/exception_ptr.hpp ****             {
 122:/usr/include/boost/exception/detail/exception_ptr.hpp ****             Exception ba;
 6771              		.loc 16 122 0
 6772 0017 488D4580 		leaq	-128(%rbp), %rax
 6773 001b 4889C7   		movq	%rax, %rdi
 6774 001e E8000000 		call	_ZN5boost16exception_detail10bad_alloc_C1Ev
 6774      00
 123:/usr/include/boost/exception/detail/exception_ptr.hpp ****             exception_detail::clone_impl<Exception> c(ba);
 6775              		.loc 16 123 0
 6776 0023 488D5580 		leaq	-128(%rbp), %rdx
 6777 0027 488D8540 		leaq	-192(%rbp), %rax
 6777      FFFFFF
 6778 002e 4889D6   		movq	%rdx, %rsi
 6779 0031 4889C7   		movq	%rax, %rdi
 6780              	.LEHB42:
 6781 0034 E8000000 		call	_ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EEC1ERKS2_
 6781      00
 6782              	.LEHE42:
 124:/usr/include/boost/exception/detail/exception_ptr.hpp **** #ifndef BOOST_EXCEPTION_DISABLE
 125:/usr/include/boost/exception/detail/exception_ptr.hpp ****             c <<
 126:/usr/include/boost/exception/detail/exception_ptr.hpp ****                 throw_function(BOOST_CURRENT_FUNCTION) <<
 127:/usr/include/boost/exception/detail/exception_ptr.hpp ****                 throw_file(__FILE__) <<
 6783              		.loc 16 127 0
 6784 0039 488D45BC 		leaq	-68(%rbp), %rax
 6785 003d BE800000 		movl	$128, %esi
 6785      00
 6786 0042 4889C7   		movq	%rax, %rdi
 6787 0045 E8000000 		call	_ZN5boost10error_infoINS_11throw_line_EiEC1Ei
 6787      00
 126:/usr/include/boost/exception/detail/exception_ptr.hpp ****                 throw_file(__FILE__) <<
 6788              		.loc 16 126 0
 6789 004a 488D45C0 		leaq	-64(%rbp), %rax
 6790 004e 488D3500 		leaq	.LC13(%rip), %rsi
 6790      000000
 6791 0055 4889C7   		movq	%rax, %rdi
 6792 0058 E8000000 		call	_ZN5boost10error_infoINS_11throw_file_EPKcEC1ES3_
 6792      00
 125:/usr/include/boost/exception/detail/exception_ptr.hpp ****                 throw_function(BOOST_CURRENT_FUNCTION) <<
 6793              		.loc 16 125 0
 6794 005d 488D45C8 		leaq	-56(%rbp), %rax
 6795 0061 488D3500 		leaq	_ZZN5boost16exception_detail27get_static_exception_objectINS0_10bad_alloc_EEENS_13exception_p
 6795      000000
 6796 0068 4889C7   		movq	%rax, %rdi
 6797 006b E8000000 		call	_ZN5boost10error_infoINS_15throw_function_EPKcEC1ES3_
 6797      00
 6798 0070 488D55C8 		leaq	-56(%rbp), %rdx
 6799 0074 488D8540 		leaq	-192(%rbp), %rax
 6799      FFFFFF
 6800 007b 4889D6   		movq	%rdx, %rsi
 6801 007e 4889C7   		movq	%rax, %rdi
 6802              	.LEHB43:
GAS LISTING /tmp/ccvUPO8Q.s 			page 309


 6803 0081 E8000000 		call	_ZN5boostlsINS_16exception_detail10clone_implINS1_10bad_alloc_EEENS_15throw_function_EPKcEENS
 6803      00
 6804 0086 4889C2   		movq	%rax, %rdx
 126:/usr/include/boost/exception/detail/exception_ptr.hpp ****                 throw_file(__FILE__) <<
 6805              		.loc 16 126 0
 6806 0089 488D45C0 		leaq	-64(%rbp), %rax
 6807 008d 4889C6   		movq	%rax, %rsi
 6808 0090 4889D7   		movq	%rdx, %rdi
 6809 0093 E8000000 		call	_ZN5boostlsINS_16exception_detail10clone_implINS1_10bad_alloc_EEENS_11throw_file_EPKcEENS_9en
 6809      00
 126:/usr/include/boost/exception/detail/exception_ptr.hpp ****                 throw_file(__FILE__) <<
 6810              		.loc 16 126 0 is_stmt 0 discriminator 2
 6811 0098 4889C2   		movq	%rax, %rdx
 125:/usr/include/boost/exception/detail/exception_ptr.hpp ****                 throw_function(BOOST_CURRENT_FUNCTION) <<
 6812              		.loc 16 125 0 is_stmt 1 discriminator 2
 6813 009b 488D45BC 		leaq	-68(%rbp), %rax
 6814 009f 4889C6   		movq	%rax, %rsi
 6815 00a2 4889D7   		movq	%rdx, %rdi
 6816 00a5 E8000000 		call	_ZN5boostlsINS_16exception_detail10clone_implINS1_10bad_alloc_EEENS_11throw_line_EiEENS_9enab
 6816      00
 6817              	.LEHE43:
 128:/usr/include/boost/exception/detail/exception_ptr.hpp ****                 throw_line(__LINE__);
 129:/usr/include/boost/exception/detail/exception_ptr.hpp **** #endif
 130:/usr/include/boost/exception/detail/exception_ptr.hpp ****             static exception_ptr ep(shared_ptr<exception_detail::clone_base const>(new exception_de
 6818              		.loc 16 130 0 discriminator 4
 6819 00aa 0FB60500 		movzbl	_ZGVZN5boost16exception_detail27get_static_exception_objectINS0_10bad_alloc_EEENS_13excepti
 6819      000000
 6820 00b1 84C0     		testb	%al, %al
 6821 00b3 0F94C0   		sete	%al
 6822 00b6 84C0     		testb	%al, %al
 6823 00b8 0F848E00 		je	.L295
 6823      0000
 6824              		.loc 16 130 0 is_stmt 0 discriminator 1
 6825 00be 488D3D00 		leaq	_ZGVZN5boost16exception_detail27get_static_exception_objectINS0_10bad_alloc_EEENS_13exception
 6825      000000
 6826 00c5 E8000000 		call	__cxa_guard_acquire@PLT
 6826      00
 6827 00ca 85C0     		testl	%eax, %eax
 6828 00cc 0F95C0   		setne	%al
 6829 00cf 84C0     		testb	%al, %al
 6830 00d1 7479     		je	.L295
 6831              		.loc 16 130 0 discriminator 2
 6832 00d3 41BC0000 		movl	$0, %r12d
 6832      0000
 6833 00d9 BF380000 		movl	$56, %edi
 6833      00
 6834              	.LEHB44:
 6835 00de E8000000 		call	_Znwm@PLT
 6835      00
 6836              	.LEHE44:
 6837 00e3 4889C3   		movq	%rax, %rbx
 6838 00e6 488D8540 		leaq	-192(%rbp), %rax
 6838      FFFFFF
 6839 00ed 4889C6   		movq	%rax, %rsi
 6840 00f0 4889DF   		movq	%rbx, %rdi
 6841              	.LEHB45:
 6842 00f3 E8000000 		call	_ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EEC1ERKS3_
GAS LISTING /tmp/ccvUPO8Q.s 			page 310


 6842      00
 6843              	.LEHE45:
 6844              		.loc 16 130 0 discriminator 6
 6845 00f8 488D45D0 		leaq	-48(%rbp), %rax
 6846 00fc 4889DE   		movq	%rbx, %rsi
 6847 00ff 4889C7   		movq	%rax, %rdi
 6848              	.LEHB46:
 6849 0102 E8000000 		call	_ZN5boost10shared_ptrIKNS_16exception_detail10clone_baseEEC1INS1_10clone_implINS1_10bad_alloc
 6849      00
 6850              	.LEHE46:
 6851              		.loc 16 130 0 discriminator 8
 6852 0107 488D45D0 		leaq	-48(%rbp), %rax
 6853 010b 4889C6   		movq	%rax, %rsi
 6854 010e 488D3D00 		leaq	_ZZN5boost16exception_detail27get_static_exception_objectINS0_10bad_alloc_EEENS_13exception_p
 6854      000000
 6855 0115 E8000000 		call	_ZN5boost13exception_ptrC1ERKNS_10shared_ptrIKNS_16exception_detail10clone_baseEEE
 6855      00
 6856 011a 488D3D00 		leaq	_ZGVZN5boost16exception_detail27get_static_exception_objectINS0_10bad_alloc_EEENS_13exception
 6856      000000
 6857 0121 E8000000 		call	__cxa_guard_release@PLT
 6857      00
 6858 0126 488D1500 		leaq	__dso_handle(%rip), %rdx
 6858      000000
 6859 012d 488D3500 		leaq	_ZZN5boost16exception_detail27get_static_exception_objectINS0_10bad_alloc_EEENS_13exception_p
 6859      000000
 6860 0134 488D3D00 		leaq	_ZN5boost13exception_ptrD1Ev(%rip), %rdi
 6860      000000
 6861 013b E8000000 		call	__cxa_atexit@PLT
 6861      00
 6862 0140 488D45D0 		leaq	-48(%rbp), %rax
 6863 0144 4889C7   		movq	%rax, %rdi
 6864 0147 E8000000 		call	_ZN5boost10shared_ptrIKNS_16exception_detail10clone_baseEED1Ev
 6864      00
 6865              	.L295:
 131:/usr/include/boost/exception/detail/exception_ptr.hpp ****             return ep;
 6866              		.loc 16 131 0 is_stmt 1
 6867 014c 488B8538 		movq	-200(%rbp), %rax
 6867      FFFFFF
 6868 0153 488D3500 		leaq	_ZZN5boost16exception_detail27get_static_exception_objectINS0_10bad_alloc_EEENS_13exception_p
 6868      000000
 6869 015a 4889C7   		movq	%rax, %rdi
 6870 015d E8000000 		call	_ZN5boost13exception_ptrC1ERKS0_
 6870      00
 123:/usr/include/boost/exception/detail/exception_ptr.hpp **** #ifndef BOOST_EXCEPTION_DISABLE
 6871              		.loc 16 123 0
 6872 0162 488D8540 		leaq	-192(%rbp), %rax
 6872      FFFFFF
 6873 0169 4889C7   		movq	%rax, %rdi
 6874 016c E8000000 		call	_ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EED1Ev
 6874      00
 122:/usr/include/boost/exception/detail/exception_ptr.hpp ****             exception_detail::clone_impl<Exception> c(ba);
 6875              		.loc 16 122 0
 6876 0171 488D4580 		leaq	-128(%rbp), %rax
 6877 0175 4889C7   		movq	%rax, %rdi
 6878 0178 E8000000 		call	_ZN5boost16exception_detail10bad_alloc_D1Ev
 6878      00
 6879              		.loc 16 131 0
GAS LISTING /tmp/ccvUPO8Q.s 			page 311


 6880 017d EB59     		jmp	.L307
 6881              	.L304:
 6882 017f 4889C3   		movq	%rax, %rbx
 6883 0182 EB29     		jmp	.L298
 6884              	.L306:
 6885 0184 4989C5   		movq	%rax, %r13
 130:/usr/include/boost/exception/detail/exception_ptr.hpp ****             return ep;
 6886              		.loc 16 130 0
 6887 0187 BE380000 		movl	$56, %esi
 6887      00
 6888 018c 4889DF   		movq	%rbx, %rdi
 6889 018f E8000000 		call	_ZdlPvm@PLT
 6889      00
 6890 0194 4C89EB   		movq	%r13, %rbx
 6891 0197 EB03     		jmp	.L300
 6892              	.L305:
 6893 0199 4889C3   		movq	%rax, %rbx
 6894              	.L300:
 130:/usr/include/boost/exception/detail/exception_ptr.hpp ****             return ep;
 6895              		.loc 16 130 0 is_stmt 0 discriminator 7
 6896 019c 4584E4   		testb	%r12b, %r12b
 6897 019f 750C     		jne	.L298
 130:/usr/include/boost/exception/detail/exception_ptr.hpp ****             return ep;
 6898              		.loc 16 130 0 discriminator 9
 6899 01a1 488D3D00 		leaq	_ZGVZN5boost16exception_detail27get_static_exception_objectINS0_10bad_alloc_EEENS_13exception
 6899      000000
 6900 01a8 E8000000 		call	__cxa_guard_abort@PLT
 6900      00
 6901              	.L298:
 123:/usr/include/boost/exception/detail/exception_ptr.hpp **** #ifndef BOOST_EXCEPTION_DISABLE
 6902              		.loc 16 123 0 is_stmt 1
 6903 01ad 488D8540 		leaq	-192(%rbp), %rax
 6903      FFFFFF
 6904 01b4 4889C7   		movq	%rax, %rdi
 6905 01b7 E8000000 		call	_ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EED1Ev
 6905      00
 6906 01bc EB03     		jmp	.L302
 6907              	.L303:
 6908 01be 4889C3   		movq	%rax, %rbx
 6909              	.L302:
 122:/usr/include/boost/exception/detail/exception_ptr.hpp ****             exception_detail::clone_impl<Exception> c(ba);
 6910              		.loc 16 122 0
 6911 01c1 488D4580 		leaq	-128(%rbp), %rax
 6912 01c5 4889C7   		movq	%rax, %rdi
 6913 01c8 E8000000 		call	_ZN5boost16exception_detail10bad_alloc_D1Ev
 6913      00
 6914 01cd 4889D8   		movq	%rbx, %rax
 6915 01d0 4889C7   		movq	%rax, %rdi
 6916              	.LEHB47:
 6917 01d3 E8000000 		call	_Unwind_Resume@PLT
 6917      00
 6918              	.LEHE47:
 6919              	.L307:
 132:/usr/include/boost/exception/detail/exception_ptr.hpp ****             }
 6920              		.loc 16 132 0
 6921 01d8 488B8538 		movq	-200(%rbp), %rax
 6921      FFFFFF
GAS LISTING /tmp/ccvUPO8Q.s 			page 312


 6922 01df 4881C4B8 		addq	$184, %rsp
 6922      000000
 6923 01e6 5B       		popq	%rbx
 6924 01e7 415C     		popq	%r12
 6925 01e9 415D     		popq	%r13
 6926 01eb 5D       		popq	%rbp
 6927              		.cfi_def_cfa 7, 8
 6928 01ec C3       		ret
 6929              		.cfi_endproc
 6930              	.LFE12012:
 6931              		.section	.gcc_except_table
 6932              	.LLSDA12012:
 6933 00ba FF       		.byte	0xff
 6934 00bb FF       		.byte	0xff
 6935 00bc 01       		.byte	0x1
 6936 00bd 22       		.uleb128 .LLSDACSE12012-.LLSDACSB12012
 6937              	.LLSDACSB12012:
 6938 00be 34       		.uleb128 .LEHB42-.LFB12012
 6939 00bf 05       		.uleb128 .LEHE42-.LEHB42
 6940 00c0 BE03     		.uleb128 .L303-.LFB12012
 6941 00c2 00       		.uleb128 0
 6942 00c3 8101     		.uleb128 .LEHB43-.LFB12012
 6943 00c5 29       		.uleb128 .LEHE43-.LEHB43
 6944 00c6 FF02     		.uleb128 .L304-.LFB12012
 6945 00c8 00       		.uleb128 0
 6946 00c9 DE01     		.uleb128 .LEHB44-.LFB12012
 6947 00cb 05       		.uleb128 .LEHE44-.LEHB44
 6948 00cc 9903     		.uleb128 .L305-.LFB12012
 6949 00ce 00       		.uleb128 0
 6950 00cf F301     		.uleb128 .LEHB45-.LFB12012
 6951 00d1 05       		.uleb128 .LEHE45-.LEHB45
 6952 00d2 8403     		.uleb128 .L306-.LFB12012
 6953 00d4 00       		.uleb128 0
 6954 00d5 8202     		.uleb128 .LEHB46-.LFB12012
 6955 00d7 05       		.uleb128 .LEHE46-.LEHB46
 6956 00d8 9903     		.uleb128 .L305-.LFB12012
 6957 00da 00       		.uleb128 0
 6958 00db D303     		.uleb128 .LEHB47-.LFB12012
 6959 00dd 05       		.uleb128 .LEHE47-.LEHB47
 6960 00de 00       		.uleb128 0
 6961 00df 00       		.uleb128 0
 6962              	.LLSDACSE12012:
 6963              		.section	.text._ZN5boost16exception_detail27get_static_exception_objectINS0_10bad_alloc_EEENS_13ex
 6965              		.section	.text._ZN5boost16exception_detail14bad_exception_C2Ev,"axG",@progbits,_ZN5boost16exceptio
 6966              		.align 2
 6967              		.weak	_ZN5boost16exception_detail14bad_exception_C2Ev
 6969              	_ZN5boost16exception_detail14bad_exception_C2Ev:
 6970              	.LFB12027:
 111:/usr/include/boost/exception/detail/exception_ptr.hpp ****             boost::exception,
 6971              		.loc 16 111 0
 6972              		.cfi_startproc
 6973 0000 55       		pushq	%rbp
 6974              		.cfi_def_cfa_offset 16
 6975              		.cfi_offset 6, -16
 6976 0001 4889E5   		movq	%rsp, %rbp
 6977              		.cfi_def_cfa_register 6
 6978 0004 4883EC10 		subq	$16, %rsp
GAS LISTING /tmp/ccvUPO8Q.s 			page 313


 6979 0008 48897DF8 		movq	%rdi, -8(%rbp)
 6980              	.LBB69:
 111:/usr/include/boost/exception/detail/exception_ptr.hpp ****             boost::exception,
 6981              		.loc 16 111 0
 6982 000c 488B45F8 		movq	-8(%rbp), %rax
 6983 0010 4889C7   		movq	%rax, %rdi
 6984 0013 E8000000 		call	_ZN5boost9exceptionC2Ev
 6984      00
 6985 0018 488B45F8 		movq	-8(%rbp), %rax
 6986 001c 4883C028 		addq	$40, %rax
 6987 0020 4889C7   		movq	%rax, %rdi
 6988 0023 E8000000 		call	_ZNSt13bad_exceptionC2Ev
 6988      00
 6989 0028 488D1500 		leaq	16+_ZTVN5boost16exception_detail14bad_exception_E(%rip), %rdx
 6989      000000
 6990 002f 488B45F8 		movq	-8(%rbp), %rax
 6991 0033 488910   		movq	%rdx, (%rax)
 6992 0036 488D1500 		leaq	48+_ZTVN5boost16exception_detail14bad_exception_E(%rip), %rdx
 6992      000000
 6993 003d 488B45F8 		movq	-8(%rbp), %rax
 6994 0041 48895028 		movq	%rdx, 40(%rax)
 6995              	.LBE69:
 6996 0045 90       		nop
 6997 0046 C9       		leave
 6998              		.cfi_def_cfa 7, 8
 6999 0047 C3       		ret
 7000              		.cfi_endproc
 7001              	.LFE12027:
 7003              		.weak	_ZN5boost16exception_detail14bad_exception_C1Ev
 7004              		.set	_ZN5boost16exception_detail14bad_exception_C1Ev,_ZN5boost16exception_detail14bad_exception_C2
 7005              		.section	.text._ZNSt13bad_exceptionC2ERKS_,"axG",@progbits,_ZNSt13bad_exceptionC5ERKS_,comdat
 7006              		.align 2
 7007              		.weak	_ZNSt13bad_exceptionC2ERKS_
 7009              	_ZNSt13bad_exceptionC2ERKS_:
 7010              	.LFB12032:
  76:/usr/include/c++/6/exception ****   {
 7011              		.loc 1 76 0
 7012              		.cfi_startproc
 7013 0000 55       		pushq	%rbp
 7014              		.cfi_def_cfa_offset 16
 7015              		.cfi_offset 6, -16
 7016 0001 4889E5   		movq	%rsp, %rbp
 7017              		.cfi_def_cfa_register 6
 7018 0004 4883EC10 		subq	$16, %rsp
 7019 0008 48897DF8 		movq	%rdi, -8(%rbp)
 7020 000c 488975F0 		movq	%rsi, -16(%rbp)
 7021              	.LBB70:
  76:/usr/include/c++/6/exception ****   {
 7022              		.loc 1 76 0
 7023 0010 488B55F0 		movq	-16(%rbp), %rdx
 7024 0014 488B45F8 		movq	-8(%rbp), %rax
 7025 0018 4889D6   		movq	%rdx, %rsi
 7026 001b 4889C7   		movq	%rax, %rdi
 7027 001e E8000000 		call	_ZNSt9exceptionC2ERKS_
 7027      00
 7028 0023 488D1500 		leaq	16+_ZTVSt13bad_exception(%rip), %rdx
 7028      000000
GAS LISTING /tmp/ccvUPO8Q.s 			page 314


 7029 002a 488B45F8 		movq	-8(%rbp), %rax
 7030 002e 488910   		movq	%rdx, (%rax)
 7031              	.LBE70:
 7032 0031 90       		nop
 7033 0032 C9       		leave
 7034              		.cfi_def_cfa 7, 8
 7035 0033 C3       		ret
 7036              		.cfi_endproc
 7037              	.LFE12032:
 7039              		.weak	_ZNSt13bad_exceptionC1ERKS_
 7040              		.set	_ZNSt13bad_exceptionC1ERKS_,_ZNSt13bad_exceptionC2ERKS_
 7041              		.section	.text._ZN5boost16exception_detail14bad_exception_C2ERKS1_,"axG",@progbits,_ZN5boost16exce
 7042              		.align 2
 7043              		.weak	_ZN5boost16exception_detail14bad_exception_C2ERKS1_
 7045              	_ZN5boost16exception_detail14bad_exception_C2ERKS1_:
 7046              	.LFB12034:
 111:/usr/include/boost/exception/detail/exception_ptr.hpp ****             boost::exception,
 7047              		.loc 16 111 0
 7048              		.cfi_startproc
 7049 0000 55       		pushq	%rbp
 7050              		.cfi_def_cfa_offset 16
 7051              		.cfi_offset 6, -16
 7052 0001 4889E5   		movq	%rsp, %rbp
 7053              		.cfi_def_cfa_register 6
 7054 0004 4883EC10 		subq	$16, %rsp
 7055 0008 48897DF8 		movq	%rdi, -8(%rbp)
 7056 000c 488975F0 		movq	%rsi, -16(%rbp)
 7057              	.LBB71:
 111:/usr/include/boost/exception/detail/exception_ptr.hpp ****             boost::exception,
 7058              		.loc 16 111 0
 7059 0010 488B55F0 		movq	-16(%rbp), %rdx
 7060 0014 488B45F8 		movq	-8(%rbp), %rax
 7061 0018 4889D6   		movq	%rdx, %rsi
 7062 001b 4889C7   		movq	%rax, %rdi
 7063 001e E8000000 		call	_ZN5boost9exceptionC2ERKS0_
 7063      00
 7064 0023 488B45F0 		movq	-16(%rbp), %rax
 7065 0027 488D5028 		leaq	40(%rax), %rdx
 7066 002b 488B45F8 		movq	-8(%rbp), %rax
 7067 002f 4883C028 		addq	$40, %rax
 7068 0033 4889D6   		movq	%rdx, %rsi
 7069 0036 4889C7   		movq	%rax, %rdi
 7070 0039 E8000000 		call	_ZNSt13bad_exceptionC2ERKS_
 7070      00
 7071 003e 488D1500 		leaq	16+_ZTVN5boost16exception_detail14bad_exception_E(%rip), %rdx
 7071      000000
 7072 0045 488B45F8 		movq	-8(%rbp), %rax
 7073 0049 488910   		movq	%rdx, (%rax)
 7074 004c 488D1500 		leaq	48+_ZTVN5boost16exception_detail14bad_exception_E(%rip), %rdx
 7074      000000
 7075 0053 488B45F8 		movq	-8(%rbp), %rax
 7076 0057 48895028 		movq	%rdx, 40(%rax)
 7077              	.LBE71:
 7078 005b 90       		nop
 7079 005c C9       		leave
 7080              		.cfi_def_cfa 7, 8
 7081 005d C3       		ret
GAS LISTING /tmp/ccvUPO8Q.s 			page 315


 7082              		.cfi_endproc
 7083              	.LFE12034:
 7085              		.weak	_ZN5boost16exception_detail14bad_exception_C1ERKS1_
 7086              		.set	_ZN5boost16exception_detail14bad_exception_C1ERKS1_,_ZN5boost16exception_detail14bad_exceptio
 7087              		.section	.text._ZN5boost16exception_detail10clone_implINS0_14bad_exception_EEC1ERKS3_,"axG",@progb
 7088              		.align 2
 7089              		.weak	_ZN5boost16exception_detail10clone_implINS0_14bad_exception_EEC1ERKS3_
 7091              	_ZN5boost16exception_detail10clone_implINS0_14bad_exception_EEC1ERKS3_:
 7092              	.LFB12037:
 7093              		.loc 3 459 0
 7094              		.cfi_startproc
 7095              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 7096              		.cfi_lsda 0x1b,.LLSDA12037
 7097 0000 55       		pushq	%rbp
 7098              		.cfi_def_cfa_offset 16
 7099              		.cfi_offset 6, -16
 7100 0001 4889E5   		movq	%rsp, %rbp
 7101              		.cfi_def_cfa_register 6
 7102 0004 53       		pushq	%rbx
 7103 0005 4883EC18 		subq	$24, %rsp
 7104              		.cfi_offset 3, -24
 7105 0009 48897DE8 		movq	%rdi, -24(%rbp)
 7106 000d 488975E0 		movq	%rsi, -32(%rbp)
 7107              	.LBB72:
 7108              		.loc 3 459 0
 7109 0011 488B45E0 		movq	-32(%rbp), %rax
 7110 0015 488B00   		movq	(%rax), %rax
 7111 0018 4883E818 		subq	$24, %rax
 7112 001c 488B00   		movq	(%rax), %rax
 7113 001f 4889C2   		movq	%rax, %rdx
 7114 0022 488B45E0 		movq	-32(%rbp), %rax
 7115 0026 4801C2   		addq	%rax, %rdx
 7116 0029 488B45E8 		movq	-24(%rbp), %rax
 7117 002d 4883C030 		addq	$48, %rax
 7118 0031 4889D6   		movq	%rdx, %rsi
 7119 0034 4889C7   		movq	%rax, %rdi
 7120 0037 E8000000 		call	_ZN5boost16exception_detail10clone_baseC2ERKS1_
 7120      00
 7121 003c 488B55E0 		movq	-32(%rbp), %rdx
 7122 0040 488B45E8 		movq	-24(%rbp), %rax
 7123 0044 4889D6   		movq	%rdx, %rsi
 7124 0047 4889C7   		movq	%rax, %rdi
 7125              	.LEHB48:
 7126 004a E8000000 		call	_ZN5boost16exception_detail14bad_exception_C2ERKS1_
 7126      00
 7127              	.LEHE48:
 7128              		.loc 3 459 0 is_stmt 0 discriminator 8
 7129 004f 488D1500 		leaq	24+_ZTVN5boost16exception_detail10clone_implINS0_14bad_exception_EEE(%rip), %rdx
 7129      000000
 7130 0056 488B45E8 		movq	-24(%rbp), %rax
 7131 005a 488910   		movq	%rdx, (%rax)
 7132 005d 488D1500 		leaq	72+_ZTVN5boost16exception_detail10clone_implINS0_14bad_exception_EEE(%rip), %rdx
 7132      000000
 7133 0064 488B45E8 		movq	-24(%rbp), %rax
 7134 0068 48895028 		movq	%rdx, 40(%rax)
 7135 006c 488B45E8 		movq	-24(%rbp), %rax
 7136 0070 488D5030 		leaq	48(%rax), %rdx
GAS LISTING /tmp/ccvUPO8Q.s 			page 316


 7137 0074 488D0500 		leaq	136+_ZTVN5boost16exception_detail10clone_implINS0_14bad_exception_EEE(%rip), %rax
 7137      000000
 7138 007b 488902   		movq	%rax, (%rdx)
 7139              	.LBE72:
 7140 007e EB1E     		jmp	.L314
 7141              	.L313:
 7142 0080 4889C3   		movq	%rax, %rbx
 7143              	.LBB73:
 7144              		.loc 3 459 0
 7145 0083 488B45E8 		movq	-24(%rbp), %rax
 7146 0087 4883C030 		addq	$48, %rax
 7147 008b 4889C7   		movq	%rax, %rdi
 7148 008e E8000000 		call	_ZN5boost16exception_detail10clone_baseD2Ev
 7148      00
 7149 0093 4889D8   		movq	%rbx, %rax
 7150 0096 4889C7   		movq	%rax, %rdi
 7151              	.LEHB49:
 7152 0099 E8000000 		call	_Unwind_Resume@PLT
 7152      00
 7153              	.LEHE49:
 7154              	.L314:
 7155              	.LBE73:
 7156 009e 4883C418 		addq	$24, %rsp
 7157 00a2 5B       		popq	%rbx
 7158 00a3 5D       		popq	%rbp
 7159              		.cfi_def_cfa 7, 8
 7160 00a4 C3       		ret
 7161              		.cfi_endproc
 7162              	.LFE12037:
 7163              		.section	.gcc_except_table
 7164              	.LLSDA12037:
 7165 00e0 FF       		.byte	0xff
 7166 00e1 FF       		.byte	0xff
 7167 00e2 01       		.byte	0x1
 7168 00e3 0A       		.uleb128 .LLSDACSE12037-.LLSDACSB12037
 7169              	.LLSDACSB12037:
 7170 00e4 4A       		.uleb128 .LEHB48-.LFB12037
 7171 00e5 05       		.uleb128 .LEHE48-.LEHB48
 7172 00e6 8001     		.uleb128 .L313-.LFB12037
 7173 00e8 00       		.uleb128 0
 7174 00e9 9901     		.uleb128 .LEHB49-.LFB12037
 7175 00eb 05       		.uleb128 .LEHE49-.LEHB49
 7176 00ec 00       		.uleb128 0
 7177 00ed 00       		.uleb128 0
 7178              	.LLSDACSE12037:
 7179              		.section	.text._ZN5boost16exception_detail10clone_implINS0_14bad_exception_EEC1ERKS3_,"axG",@progb
 7181              		.weak	_ZZN5boost16exception_detail27get_static_exception_objectINS0_14bad_exception_EEENS_13except
 7182              		.section	.bss._ZZN5boost16exception_detail27get_static_exception_objectINS0_14bad_exception_EEENS_
 7183              		.align 16
 7186              	_ZZN5boost16exception_detail27get_static_exception_objectINS0_14bad_exception_EEENS_13exception_ptr
 7187 0000 00000000 		.zero	16
 7187      00000000 
 7187      00000000 
 7187      00000000 
 7188              		.weak	_ZGVZN5boost16exception_detail27get_static_exception_objectINS0_14bad_exception_EEENS_13exce
 7189              		.section	.bss._ZGVZN5boost16exception_detail27get_static_exception_objectINS0_14bad_exception_EEEN
 7190              		.align 8
GAS LISTING /tmp/ccvUPO8Q.s 			page 317


 7193              	_ZGVZN5boost16exception_detail27get_static_exception_objectINS0_14bad_exception_EEENS_13exception_p
 7194 0000 00000000 		.zero	8
 7194      00000000 
 7195              		.section	.text._ZN5boost16exception_detail27get_static_exception_objectINS0_14bad_exception_EEENS_
 7196              		.weak	_ZN5boost16exception_detail27get_static_exception_objectINS0_14bad_exception_EEENS_13excepti
 7198              	_ZN5boost16exception_detail27get_static_exception_objectINS0_14bad_exception_EEENS_13exception_ptrE
 7199              	.LFB12025:
 120:/usr/include/boost/exception/detail/exception_ptr.hpp ****             {
 7200              		.loc 16 120 0 is_stmt 1
 7201              		.cfi_startproc
 7202              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 7203              		.cfi_lsda 0x1b,.LLSDA12025
 7204 0000 55       		pushq	%rbp
 7205              		.cfi_def_cfa_offset 16
 7206              		.cfi_offset 6, -16
 7207 0001 4889E5   		movq	%rsp, %rbp
 7208              		.cfi_def_cfa_register 6
 7209 0004 4155     		pushq	%r13
 7210 0006 4154     		pushq	%r12
 7211 0008 53       		pushq	%rbx
 7212 0009 4881ECB8 		subq	$184, %rsp
 7212      000000
 7213              		.cfi_offset 13, -24
 7214              		.cfi_offset 12, -32
 7215              		.cfi_offset 3, -40
 7216 0010 4889BD38 		movq	%rdi, -200(%rbp)
 7216      FFFFFF
 122:/usr/include/boost/exception/detail/exception_ptr.hpp ****             exception_detail::clone_impl<Exception> c(ba);
 7217              		.loc 16 122 0
 7218 0017 488D4580 		leaq	-128(%rbp), %rax
 7219 001b 4889C7   		movq	%rax, %rdi
 7220 001e E8000000 		call	_ZN5boost16exception_detail14bad_exception_C1Ev
 7220      00
 123:/usr/include/boost/exception/detail/exception_ptr.hpp **** #ifndef BOOST_EXCEPTION_DISABLE
 7221              		.loc 16 123 0
 7222 0023 488D5580 		leaq	-128(%rbp), %rdx
 7223 0027 488D8540 		leaq	-192(%rbp), %rax
 7223      FFFFFF
 7224 002e 4889D6   		movq	%rdx, %rsi
 7225 0031 4889C7   		movq	%rax, %rdi
 7226              	.LEHB50:
 7227 0034 E8000000 		call	_ZN5boost16exception_detail10clone_implINS0_14bad_exception_EEC1ERKS2_
 7227      00
 7228              	.LEHE50:
 127:/usr/include/boost/exception/detail/exception_ptr.hpp ****                 throw_line(__LINE__);
 7229              		.loc 16 127 0
 7230 0039 488D45BC 		leaq	-68(%rbp), %rax
 7231 003d BE800000 		movl	$128, %esi
 7231      00
 7232 0042 4889C7   		movq	%rax, %rdi
 7233 0045 E8000000 		call	_ZN5boost10error_infoINS_11throw_line_EiEC1Ei
 7233      00
 126:/usr/include/boost/exception/detail/exception_ptr.hpp ****                 throw_file(__FILE__) <<
 7234              		.loc 16 126 0
 7235 004a 488D45C0 		leaq	-64(%rbp), %rax
 7236 004e 488D3500 		leaq	.LC13(%rip), %rsi
 7236      000000
GAS LISTING /tmp/ccvUPO8Q.s 			page 318


 7237 0055 4889C7   		movq	%rax, %rdi
 7238 0058 E8000000 		call	_ZN5boost10error_infoINS_11throw_file_EPKcEC1ES3_
 7238      00
 125:/usr/include/boost/exception/detail/exception_ptr.hpp ****                 throw_function(BOOST_CURRENT_FUNCTION) <<
 7239              		.loc 16 125 0
 7240 005d 488D45C8 		leaq	-56(%rbp), %rax
 7241 0061 488D3500 		leaq	_ZZN5boost16exception_detail27get_static_exception_objectINS0_14bad_exception_EEENS_13excepti
 7241      000000
 7242 0068 4889C7   		movq	%rax, %rdi
 7243 006b E8000000 		call	_ZN5boost10error_infoINS_15throw_function_EPKcEC1ES3_
 7243      00
 7244 0070 488D55C8 		leaq	-56(%rbp), %rdx
 7245 0074 488D8540 		leaq	-192(%rbp), %rax
 7245      FFFFFF
 7246 007b 4889D6   		movq	%rdx, %rsi
 7247 007e 4889C7   		movq	%rax, %rdi
 7248              	.LEHB51:
 7249 0081 E8000000 		call	_ZN5boostlsINS_16exception_detail10clone_implINS1_14bad_exception_EEENS_15throw_function_EPKc
 7249      00
 7250 0086 4889C2   		movq	%rax, %rdx
 126:/usr/include/boost/exception/detail/exception_ptr.hpp ****                 throw_file(__FILE__) <<
 7251              		.loc 16 126 0
 7252 0089 488D45C0 		leaq	-64(%rbp), %rax
 7253 008d 4889C6   		movq	%rax, %rsi
 7254 0090 4889D7   		movq	%rdx, %rdi
 7255 0093 E8000000 		call	_ZN5boostlsINS_16exception_detail10clone_implINS1_14bad_exception_EEENS_11throw_file_EPKcEENS
 7255      00
 126:/usr/include/boost/exception/detail/exception_ptr.hpp ****                 throw_file(__FILE__) <<
 7256              		.loc 16 126 0 is_stmt 0 discriminator 2
 7257 0098 4889C2   		movq	%rax, %rdx
 125:/usr/include/boost/exception/detail/exception_ptr.hpp ****                 throw_function(BOOST_CURRENT_FUNCTION) <<
 7258              		.loc 16 125 0 is_stmt 1 discriminator 2
 7259 009b 488D45BC 		leaq	-68(%rbp), %rax
 7260 009f 4889C6   		movq	%rax, %rsi
 7261 00a2 4889D7   		movq	%rdx, %rdi
 7262 00a5 E8000000 		call	_ZN5boostlsINS_16exception_detail10clone_implINS1_14bad_exception_EEENS_11throw_line_EiEENS_9
 7262      00
 7263              	.LEHE51:
 130:/usr/include/boost/exception/detail/exception_ptr.hpp ****             return ep;
 7264              		.loc 16 130 0 discriminator 4
 7265 00aa 0FB60500 		movzbl	_ZGVZN5boost16exception_detail27get_static_exception_objectINS0_14bad_exception_EEENS_13exc
 7265      000000
 7266 00b1 84C0     		testb	%al, %al
 7267 00b3 0F94C0   		sete	%al
 7268 00b6 84C0     		testb	%al, %al
 7269 00b8 0F848E00 		je	.L316
 7269      0000
 130:/usr/include/boost/exception/detail/exception_ptr.hpp ****             return ep;
 7270              		.loc 16 130 0 is_stmt 0 discriminator 1
 7271 00be 488D3D00 		leaq	_ZGVZN5boost16exception_detail27get_static_exception_objectINS0_14bad_exception_EEENS_13excep
 7271      000000
 7272 00c5 E8000000 		call	__cxa_guard_acquire@PLT
 7272      00
 7273 00ca 85C0     		testl	%eax, %eax
 7274 00cc 0F95C0   		setne	%al
 7275 00cf 84C0     		testb	%al, %al
 7276 00d1 7479     		je	.L316
GAS LISTING /tmp/ccvUPO8Q.s 			page 319


 130:/usr/include/boost/exception/detail/exception_ptr.hpp ****             return ep;
 7277              		.loc 16 130 0 discriminator 2
 7278 00d3 41BC0000 		movl	$0, %r12d
 7278      0000
 7279 00d9 BF380000 		movl	$56, %edi
 7279      00
 7280              	.LEHB52:
 7281 00de E8000000 		call	_Znwm@PLT
 7281      00
 7282              	.LEHE52:
 7283 00e3 4889C3   		movq	%rax, %rbx
 7284 00e6 488D8540 		leaq	-192(%rbp), %rax
 7284      FFFFFF
 7285 00ed 4889C6   		movq	%rax, %rsi
 7286 00f0 4889DF   		movq	%rbx, %rdi
 7287              	.LEHB53:
 7288 00f3 E8000000 		call	_ZN5boost16exception_detail10clone_implINS0_14bad_exception_EEC1ERKS3_
 7288      00
 7289              	.LEHE53:
 130:/usr/include/boost/exception/detail/exception_ptr.hpp ****             return ep;
 7290              		.loc 16 130 0 discriminator 6
 7291 00f8 488D45D0 		leaq	-48(%rbp), %rax
 7292 00fc 4889DE   		movq	%rbx, %rsi
 7293 00ff 4889C7   		movq	%rax, %rdi
 7294              	.LEHB54:
 7295 0102 E8000000 		call	_ZN5boost10shared_ptrIKNS_16exception_detail10clone_baseEEC1INS1_10clone_implINS1_14bad_excep
 7295      00
 7296              	.LEHE54:
 130:/usr/include/boost/exception/detail/exception_ptr.hpp ****             return ep;
 7297              		.loc 16 130 0 discriminator 8
 7298 0107 488D45D0 		leaq	-48(%rbp), %rax
 7299 010b 4889C6   		movq	%rax, %rsi
 7300 010e 488D3D00 		leaq	_ZZN5boost16exception_detail27get_static_exception_objectINS0_14bad_exception_EEENS_13excepti
 7300      000000
 7301 0115 E8000000 		call	_ZN5boost13exception_ptrC1ERKNS_10shared_ptrIKNS_16exception_detail10clone_baseEEE
 7301      00
 7302 011a 488D3D00 		leaq	_ZGVZN5boost16exception_detail27get_static_exception_objectINS0_14bad_exception_EEENS_13excep
 7302      000000
 7303 0121 E8000000 		call	__cxa_guard_release@PLT
 7303      00
 7304 0126 488D1500 		leaq	__dso_handle(%rip), %rdx
 7304      000000
 7305 012d 488D3500 		leaq	_ZZN5boost16exception_detail27get_static_exception_objectINS0_14bad_exception_EEENS_13excepti
 7305      000000
 7306 0134 488D3D00 		leaq	_ZN5boost13exception_ptrD1Ev(%rip), %rdi
 7306      000000
 7307 013b E8000000 		call	__cxa_atexit@PLT
 7307      00
 7308 0140 488D45D0 		leaq	-48(%rbp), %rax
 7309 0144 4889C7   		movq	%rax, %rdi
 7310 0147 E8000000 		call	_ZN5boost10shared_ptrIKNS_16exception_detail10clone_baseEED1Ev
 7310      00
 7311              	.L316:
 131:/usr/include/boost/exception/detail/exception_ptr.hpp ****             }
 7312              		.loc 16 131 0 is_stmt 1
 7313 014c 488B8538 		movq	-200(%rbp), %rax
 7313      FFFFFF
GAS LISTING /tmp/ccvUPO8Q.s 			page 320


 7314 0153 488D3500 		leaq	_ZZN5boost16exception_detail27get_static_exception_objectINS0_14bad_exception_EEENS_13excepti
 7314      000000
 7315 015a 4889C7   		movq	%rax, %rdi
 7316 015d E8000000 		call	_ZN5boost13exception_ptrC1ERKS0_
 7316      00
 123:/usr/include/boost/exception/detail/exception_ptr.hpp **** #ifndef BOOST_EXCEPTION_DISABLE
 7317              		.loc 16 123 0
 7318 0162 488D8540 		leaq	-192(%rbp), %rax
 7318      FFFFFF
 7319 0169 4889C7   		movq	%rax, %rdi
 7320 016c E8000000 		call	_ZN5boost16exception_detail10clone_implINS0_14bad_exception_EED1Ev
 7320      00
 122:/usr/include/boost/exception/detail/exception_ptr.hpp ****             exception_detail::clone_impl<Exception> c(ba);
 7321              		.loc 16 122 0
 7322 0171 488D4580 		leaq	-128(%rbp), %rax
 7323 0175 4889C7   		movq	%rax, %rdi
 7324 0178 E8000000 		call	_ZN5boost16exception_detail14bad_exception_D1Ev
 7324      00
 131:/usr/include/boost/exception/detail/exception_ptr.hpp ****             }
 7325              		.loc 16 131 0
 7326 017d EB59     		jmp	.L328
 7327              	.L325:
 7328 017f 4889C3   		movq	%rax, %rbx
 7329 0182 EB29     		jmp	.L319
 7330              	.L327:
 7331 0184 4989C5   		movq	%rax, %r13
 130:/usr/include/boost/exception/detail/exception_ptr.hpp ****             return ep;
 7332              		.loc 16 130 0
 7333 0187 BE380000 		movl	$56, %esi
 7333      00
 7334 018c 4889DF   		movq	%rbx, %rdi
 7335 018f E8000000 		call	_ZdlPvm@PLT
 7335      00
 7336 0194 4C89EB   		movq	%r13, %rbx
 7337 0197 EB03     		jmp	.L321
 7338              	.L326:
 7339 0199 4889C3   		movq	%rax, %rbx
 7340              	.L321:
 130:/usr/include/boost/exception/detail/exception_ptr.hpp ****             return ep;
 7341              		.loc 16 130 0 is_stmt 0 discriminator 7
 7342 019c 4584E4   		testb	%r12b, %r12b
 7343 019f 750C     		jne	.L319
 130:/usr/include/boost/exception/detail/exception_ptr.hpp ****             return ep;
 7344              		.loc 16 130 0 discriminator 9
 7345 01a1 488D3D00 		leaq	_ZGVZN5boost16exception_detail27get_static_exception_objectINS0_14bad_exception_EEENS_13excep
 7345      000000
 7346 01a8 E8000000 		call	__cxa_guard_abort@PLT
 7346      00
 7347              	.L319:
 123:/usr/include/boost/exception/detail/exception_ptr.hpp **** #ifndef BOOST_EXCEPTION_DISABLE
 7348              		.loc 16 123 0 is_stmt 1
 7349 01ad 488D8540 		leaq	-192(%rbp), %rax
 7349      FFFFFF
 7350 01b4 4889C7   		movq	%rax, %rdi
 7351 01b7 E8000000 		call	_ZN5boost16exception_detail10clone_implINS0_14bad_exception_EED1Ev
 7351      00
 7352 01bc EB03     		jmp	.L323
GAS LISTING /tmp/ccvUPO8Q.s 			page 321


 7353              	.L324:
 7354 01be 4889C3   		movq	%rax, %rbx
 7355              	.L323:
 122:/usr/include/boost/exception/detail/exception_ptr.hpp ****             exception_detail::clone_impl<Exception> c(ba);
 7356              		.loc 16 122 0
 7357 01c1 488D4580 		leaq	-128(%rbp), %rax
 7358 01c5 4889C7   		movq	%rax, %rdi
 7359 01c8 E8000000 		call	_ZN5boost16exception_detail14bad_exception_D1Ev
 7359      00
 7360 01cd 4889D8   		movq	%rbx, %rax
 7361 01d0 4889C7   		movq	%rax, %rdi
 7362              	.LEHB55:
 7363 01d3 E8000000 		call	_Unwind_Resume@PLT
 7363      00
 7364              	.LEHE55:
 7365              	.L328:
 7366              		.loc 16 132 0
 7367 01d8 488B8538 		movq	-200(%rbp), %rax
 7367      FFFFFF
 7368 01df 4881C4B8 		addq	$184, %rsp
 7368      000000
 7369 01e6 5B       		popq	%rbx
 7370 01e7 415C     		popq	%r12
 7371 01e9 415D     		popq	%r13
 7372 01eb 5D       		popq	%rbp
 7373              		.cfi_def_cfa 7, 8
 7374 01ec C3       		ret
 7375              		.cfi_endproc
 7376              	.LFE12025:
 7377              		.section	.gcc_except_table
 7378              	.LLSDA12025:
 7379 00ee FF       		.byte	0xff
 7380 00ef FF       		.byte	0xff
 7381 00f0 01       		.byte	0x1
 7382 00f1 22       		.uleb128 .LLSDACSE12025-.LLSDACSB12025
 7383              	.LLSDACSB12025:
 7384 00f2 34       		.uleb128 .LEHB50-.LFB12025
 7385 00f3 05       		.uleb128 .LEHE50-.LEHB50
 7386 00f4 BE03     		.uleb128 .L324-.LFB12025
 7387 00f6 00       		.uleb128 0
 7388 00f7 8101     		.uleb128 .LEHB51-.LFB12025
 7389 00f9 29       		.uleb128 .LEHE51-.LEHB51
 7390 00fa FF02     		.uleb128 .L325-.LFB12025
 7391 00fc 00       		.uleb128 0
 7392 00fd DE01     		.uleb128 .LEHB52-.LFB12025
 7393 00ff 05       		.uleb128 .LEHE52-.LEHB52
 7394 0100 9903     		.uleb128 .L326-.LFB12025
 7395 0102 00       		.uleb128 0
 7396 0103 F301     		.uleb128 .LEHB53-.LFB12025
 7397 0105 05       		.uleb128 .LEHE53-.LEHB53
 7398 0106 8403     		.uleb128 .L327-.LFB12025
 7399 0108 00       		.uleb128 0
 7400 0109 8202     		.uleb128 .LEHB54-.LFB12025
 7401 010b 05       		.uleb128 .LEHE54-.LEHB54
 7402 010c 9903     		.uleb128 .L326-.LFB12025
 7403 010e 00       		.uleb128 0
 7404 010f D303     		.uleb128 .LEHB55-.LFB12025
GAS LISTING /tmp/ccvUPO8Q.s 			page 322


 7405 0111 05       		.uleb128 .LEHE55-.LEHB55
 7406 0112 00       		.uleb128 0
 7407 0113 00       		.uleb128 0
 7408              	.LLSDACSE12025:
 7409              		.section	.text._ZN5boost16exception_detail27get_static_exception_objectINS0_14bad_exception_EEENS_
 7411              		.section	.text._ZNSt6vectorIiSaIiEEC2ERKS1_,"axG",@progbits,_ZNSt6vectorIiSaIiEEC5ERKS1_,comdat
 7412              		.align 2
 7413              		.weak	_ZNSt6vectorIiSaIiEEC2ERKS1_
 7415              	_ZNSt6vectorIiSaIiEEC2ERKS1_:
 7416              	.LFB12262:
 320:/usr/include/c++/6/bits/stl_vector.h ****       : _Base(__x.size(),
 7417              		.loc 30 320 0
 7418              		.cfi_startproc
 7419              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 7420              		.cfi_lsda 0x1b,.LLSDA12262
 7421 0000 55       		pushq	%rbp
 7422              		.cfi_def_cfa_offset 16
 7423              		.cfi_offset 6, -16
 7424 0001 4889E5   		movq	%rsp, %rbp
 7425              		.cfi_def_cfa_register 6
 7426 0004 4155     		pushq	%r13
 7427 0006 4154     		pushq	%r12
 7428 0008 53       		pushq	%rbx
 7429 0009 4883EC28 		subq	$40, %rsp
 7430              		.cfi_offset 13, -24
 7431              		.cfi_offset 12, -32
 7432              		.cfi_offset 3, -40
 7433 000d 48897DC8 		movq	%rdi, -56(%rbp)
 7434 0011 488975C0 		movq	%rsi, -64(%rbp)
 7435              	.LBB74:
 322:/usr/include/c++/6/bits/stl_vector.h ****       { this->_M_impl._M_finish =
 7436              		.loc 30 322 0
 7437 0015 488B45C0 		movq	-64(%rbp), %rax
 7438 0019 4889C7   		movq	%rax, %rdi
 7439 001c E8000000 		call	_ZNKSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv
 7439      00
 7440 0021 4889C2   		movq	%rax, %rdx
 7441 0024 488D45DF 		leaq	-33(%rbp), %rax
 7442 0028 4889D6   		movq	%rdx, %rsi
 7443 002b 4889C7   		movq	%rax, %rdi
 7444              	.LEHB56:
 7445 002e E8000000 		call	_ZN9__gnu_cxx14__alloc_traitsISaIiEE17_S_select_on_copyERKS1_
 7445      00
 7446              	.LEHE56:
 7447 0033 488B45C0 		movq	-64(%rbp), %rax
 7448 0037 4889C7   		movq	%rax, %rdi
 7449 003a E8000000 		call	_ZNKSt6vectorIiSaIiEE4sizeEv
 7449      00
 7450 003f 4889C1   		movq	%rax, %rcx
 7451 0042 488B45C8 		movq	-56(%rbp), %rax
 7452 0046 488D55DF 		leaq	-33(%rbp), %rdx
 7453 004a 4889CE   		movq	%rcx, %rsi
 7454 004d 4889C7   		movq	%rax, %rdi
 7455              	.LEHB57:
 7456 0050 E8000000 		call	_ZNSt12_Vector_baseIiSaIiEEC2EmRKS0_
 7456      00
 7457              	.LEHE57:
GAS LISTING /tmp/ccvUPO8Q.s 			page 323


 322:/usr/include/c++/6/bits/stl_vector.h ****       { this->_M_impl._M_finish =
 7458              		.loc 30 322 0 is_stmt 0 discriminator 2
 7459 0055 488D45DF 		leaq	-33(%rbp), %rax
 7460 0059 4889C7   		movq	%rax, %rdi
 7461 005c E8000000 		call	_ZNSaIiED1Ev
 7461      00
 326:/usr/include/c++/6/bits/stl_vector.h ****       }
 7462              		.loc 30 326 0 is_stmt 1 discriminator 2
 7463 0061 488B45C8 		movq	-56(%rbp), %rax
 7464 0065 4889C7   		movq	%rax, %rdi
 7465 0068 E8000000 		call	_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv
 7465      00
 7466 006d 4989C5   		movq	%rax, %r13
 324:/usr/include/c++/6/bits/stl_vector.h **** 				      this->_M_impl._M_start,
 7467              		.loc 30 324 0 discriminator 2
 7468 0070 488B45C8 		movq	-56(%rbp), %rax
 7469 0074 488B18   		movq	(%rax), %rbx
 7470 0077 488B45C0 		movq	-64(%rbp), %rax
 7471 007b 4889C7   		movq	%rax, %rdi
 7472 007e E8000000 		call	_ZNKSt6vectorIiSaIiEE3endEv
 7472      00
 7473 0083 4989C4   		movq	%rax, %r12
 7474 0086 488B45C0 		movq	-64(%rbp), %rax
 7475 008a 4889C7   		movq	%rax, %rdi
 7476 008d E8000000 		call	_ZNKSt6vectorIiSaIiEE5beginEv
 7476      00
 7477 0092 4C89E9   		movq	%r13, %rcx
 7478 0095 4889DA   		movq	%rbx, %rdx
 7479 0098 4C89E6   		movq	%r12, %rsi
 7480 009b 4889C7   		movq	%rax, %rdi
 7481              	.LEHB58:
 7482 009e E8000000 		call	_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEPiiET0_T_SA
 7482      00
 7483              	.LEHE58:
 7484 00a3 4889C2   		movq	%rax, %rdx
 323:/usr/include/c++/6/bits/stl_vector.h **** 	  std::__uninitialized_copy_a(__x.begin(), __x.end(),
 7485              		.loc 30 323 0 discriminator 2
 7486 00a6 488B45C8 		movq	-56(%rbp), %rax
 7487 00aa 48895008 		movq	%rdx, 8(%rax)
 7488              	.LBE74:
 327:/usr/include/c++/6/bits/stl_vector.h **** 
 7489              		.loc 30 327 0 discriminator 2
 7490 00ae EB34     		jmp	.L334
 7491              	.L332:
 7492 00b0 4889C3   		movq	%rax, %rbx
 7493              	.LBB75:
 322:/usr/include/c++/6/bits/stl_vector.h ****       { this->_M_impl._M_finish =
 7494              		.loc 30 322 0
 7495 00b3 488D45DF 		leaq	-33(%rbp), %rax
 7496 00b7 4889C7   		movq	%rax, %rdi
 7497 00ba E8000000 		call	_ZNSaIiED1Ev
 7497      00
 7498 00bf 4889D8   		movq	%rbx, %rax
 7499 00c2 4889C7   		movq	%rax, %rdi
 7500              	.LEHB59:
 7501 00c5 E8000000 		call	_Unwind_Resume@PLT
 7501      00
GAS LISTING /tmp/ccvUPO8Q.s 			page 324


 7502              	.L333:
 7503 00ca 4889C3   		movq	%rax, %rbx
 7504 00cd 488B45C8 		movq	-56(%rbp), %rax
 7505 00d1 4889C7   		movq	%rax, %rdi
 7506 00d4 E8000000 		call	_ZNSt12_Vector_baseIiSaIiEED2Ev
 7506      00
 7507 00d9 4889D8   		movq	%rbx, %rax
 7508 00dc 4889C7   		movq	%rax, %rdi
 7509 00df E8000000 		call	_Unwind_Resume@PLT
 7509      00
 7510              	.LEHE59:
 7511              	.L334:
 7512              	.LBE75:
 327:/usr/include/c++/6/bits/stl_vector.h **** 
 7513              		.loc 30 327 0
 7514 00e4 4883C428 		addq	$40, %rsp
 7515 00e8 5B       		popq	%rbx
 7516 00e9 415C     		popq	%r12
 7517 00eb 415D     		popq	%r13
 7518 00ed 5D       		popq	%rbp
 7519              		.cfi_def_cfa 7, 8
 7520 00ee C3       		ret
 7521              		.cfi_endproc
 7522              	.LFE12262:
 7523              		.section	.gcc_except_table
 7524              	.LLSDA12262:
 7525 0114 FF       		.byte	0xff
 7526 0115 FF       		.byte	0xff
 7527 0116 01       		.byte	0x1
 7528 0117 14       		.uleb128 .LLSDACSE12262-.LLSDACSB12262
 7529              	.LLSDACSB12262:
 7530 0118 2E       		.uleb128 .LEHB56-.LFB12262
 7531 0119 05       		.uleb128 .LEHE56-.LEHB56
 7532 011a 00       		.uleb128 0
 7533 011b 00       		.uleb128 0
 7534 011c 50       		.uleb128 .LEHB57-.LFB12262
 7535 011d 05       		.uleb128 .LEHE57-.LEHB57
 7536 011e B001     		.uleb128 .L332-.LFB12262
 7537 0120 00       		.uleb128 0
 7538 0121 9E01     		.uleb128 .LEHB58-.LFB12262
 7539 0123 05       		.uleb128 .LEHE58-.LEHB58
 7540 0124 CA01     		.uleb128 .L333-.LFB12262
 7541 0126 00       		.uleb128 0
 7542 0127 C501     		.uleb128 .LEHB59-.LFB12262
 7543 0129 1F       		.uleb128 .LEHE59-.LEHB59
 7544 012a 00       		.uleb128 0
 7545 012b 00       		.uleb128 0
 7546              	.LLSDACSE12262:
 7547              		.section	.text._ZNSt6vectorIiSaIiEEC2ERKS1_,"axG",@progbits,_ZNSt6vectorIiSaIiEEC5ERKS1_,comdat
 7549              		.weak	_ZNSt6vectorIiSaIiEEC1ERKS1_
 7550              		.set	_ZNSt6vectorIiSaIiEEC1ERKS1_,_ZNSt6vectorIiSaIiEEC2ERKS1_
 7551              		.section	.text._ZN5boost10shared_ptrIN2gr11basic_blockEED2Ev,"axG",@progbits,_ZN5boost10shared_ptr
 7552              		.align 2
 7553              		.weak	_ZN5boost10shared_ptrIN2gr11basic_blockEED2Ev
 7555              	_ZN5boost10shared_ptrIN2gr11basic_blockEED2Ev:
 7556              	.LFB12283:
 336:/usr/include/boost/smart_ptr/shared_ptr.hpp **** {
GAS LISTING /tmp/ccvUPO8Q.s 			page 325


 7557              		.loc 7 336 0
 7558              		.cfi_startproc
 7559 0000 55       		pushq	%rbp
 7560              		.cfi_def_cfa_offset 16
 7561              		.cfi_offset 6, -16
 7562 0001 4889E5   		movq	%rsp, %rbp
 7563              		.cfi_def_cfa_register 6
 7564 0004 4883EC10 		subq	$16, %rsp
 7565 0008 48897DF8 		movq	%rdi, -8(%rbp)
 7566              	.LBB76:
 336:/usr/include/boost/smart_ptr/shared_ptr.hpp **** {
 7567              		.loc 7 336 0
 7568 000c 488B45F8 		movq	-8(%rbp), %rax
 7569 0010 4883C008 		addq	$8, %rax
 7570 0014 4889C7   		movq	%rax, %rdi
 7571 0017 E8000000 		call	_ZN5boost6detail12shared_countD1Ev
 7571      00
 7572              	.LBE76:
 7573 001c 90       		nop
 7574 001d C9       		leave
 7575              		.cfi_def_cfa 7, 8
 7576 001e C3       		ret
 7577              		.cfi_endproc
 7578              	.LFE12283:
 7580              		.weak	_ZN5boost10shared_ptrIN2gr11basic_blockEED1Ev
 7581              		.set	_ZN5boost10shared_ptrIN2gr11basic_blockEED1Ev,_ZN5boost10shared_ptrIN2gr11basic_blockEED2Ev
 7582              		.section	.text._ZN8gnuradio16get_initial_sptrIN2gr5lfast12costas2_implEEEN5boost10shared_ptrIT_EEP
 7583              		.weak	_ZN8gnuradio16get_initial_sptrIN2gr5lfast12costas2_implEEEN5boost10shared_ptrIT_EEPS6_
 7585              	_ZN8gnuradio16get_initial_sptrIN2gr5lfast12costas2_implEEEN5boost10shared_ptrIT_EEPS6_:
 7586              	.LFB12281:
 7587              		.file 31 "/home/mpiscopo/gnuradio/include/gnuradio/sptr_magic.h"
   1:/home/mpiscopo/gnuradio/include/gnuradio/sptr_magic.h **** /* -*- c++ -*- */
   2:/home/mpiscopo/gnuradio/include/gnuradio/sptr_magic.h **** /*
   3:/home/mpiscopo/gnuradio/include/gnuradio/sptr_magic.h ****  * Copyright 2008,2013 Free Software Foundation, Inc.
   4:/home/mpiscopo/gnuradio/include/gnuradio/sptr_magic.h ****  *
   5:/home/mpiscopo/gnuradio/include/gnuradio/sptr_magic.h ****  * This file is part of GNU Radio
   6:/home/mpiscopo/gnuradio/include/gnuradio/sptr_magic.h ****  *
   7:/home/mpiscopo/gnuradio/include/gnuradio/sptr_magic.h ****  * GNU Radio is free software; you can redistribute it and/or modify
   8:/home/mpiscopo/gnuradio/include/gnuradio/sptr_magic.h ****  * it under the terms of the GNU General Public License as published by
   9:/home/mpiscopo/gnuradio/include/gnuradio/sptr_magic.h ****  * the Free Software Foundation; either version 3, or (at your option)
  10:/home/mpiscopo/gnuradio/include/gnuradio/sptr_magic.h ****  * any later version.
  11:/home/mpiscopo/gnuradio/include/gnuradio/sptr_magic.h ****  *
  12:/home/mpiscopo/gnuradio/include/gnuradio/sptr_magic.h ****  * GNU Radio is distributed in the hope that it will be useful,
  13:/home/mpiscopo/gnuradio/include/gnuradio/sptr_magic.h ****  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  14:/home/mpiscopo/gnuradio/include/gnuradio/sptr_magic.h ****  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  15:/home/mpiscopo/gnuradio/include/gnuradio/sptr_magic.h ****  * GNU General Public License for more details.
  16:/home/mpiscopo/gnuradio/include/gnuradio/sptr_magic.h ****  *
  17:/home/mpiscopo/gnuradio/include/gnuradio/sptr_magic.h ****  * You should have received a copy of the GNU General Public License along
  18:/home/mpiscopo/gnuradio/include/gnuradio/sptr_magic.h ****  * with this program; if not, write to the Free Software Foundation, Inc.,
  19:/home/mpiscopo/gnuradio/include/gnuradio/sptr_magic.h ****  * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
  20:/home/mpiscopo/gnuradio/include/gnuradio/sptr_magic.h ****  */
  21:/home/mpiscopo/gnuradio/include/gnuradio/sptr_magic.h **** 
  22:/home/mpiscopo/gnuradio/include/gnuradio/sptr_magic.h **** #ifndef INCLUDED_GR_RUNTIME_SPTR_MAGIC_H
  23:/home/mpiscopo/gnuradio/include/gnuradio/sptr_magic.h **** #define INCLUDED_GR_RUNTIME_SPTR_MAGIC_H
  24:/home/mpiscopo/gnuradio/include/gnuradio/sptr_magic.h **** 
  25:/home/mpiscopo/gnuradio/include/gnuradio/sptr_magic.h **** #include <gnuradio/api.h>
  26:/home/mpiscopo/gnuradio/include/gnuradio/sptr_magic.h **** #include <boost/shared_ptr.hpp>
GAS LISTING /tmp/ccvUPO8Q.s 			page 326


  27:/home/mpiscopo/gnuradio/include/gnuradio/sptr_magic.h **** 
  28:/home/mpiscopo/gnuradio/include/gnuradio/sptr_magic.h **** namespace gr {
  29:/home/mpiscopo/gnuradio/include/gnuradio/sptr_magic.h ****   class basic_block;
  30:/home/mpiscopo/gnuradio/include/gnuradio/sptr_magic.h ****   class hier_block2;
  31:/home/mpiscopo/gnuradio/include/gnuradio/sptr_magic.h **** }
  32:/home/mpiscopo/gnuradio/include/gnuradio/sptr_magic.h **** 
  33:/home/mpiscopo/gnuradio/include/gnuradio/sptr_magic.h **** namespace gnuradio {
  34:/home/mpiscopo/gnuradio/include/gnuradio/sptr_magic.h ****   namespace detail {
  35:/home/mpiscopo/gnuradio/include/gnuradio/sptr_magic.h **** 
  36:/home/mpiscopo/gnuradio/include/gnuradio/sptr_magic.h ****     class GR_RUNTIME_API sptr_magic
  37:/home/mpiscopo/gnuradio/include/gnuradio/sptr_magic.h ****     {
  38:/home/mpiscopo/gnuradio/include/gnuradio/sptr_magic.h ****     public:
  39:/home/mpiscopo/gnuradio/include/gnuradio/sptr_magic.h ****       static boost::shared_ptr<gr::basic_block> fetch_initial_sptr(gr::basic_block *p);
  40:/home/mpiscopo/gnuradio/include/gnuradio/sptr_magic.h ****       static void create_and_stash_initial_sptr(gr::hier_block2 *p);
  41:/home/mpiscopo/gnuradio/include/gnuradio/sptr_magic.h ****       static void cancel_initial_sptr(gr::hier_block2 *p);
  42:/home/mpiscopo/gnuradio/include/gnuradio/sptr_magic.h ****     };
  43:/home/mpiscopo/gnuradio/include/gnuradio/sptr_magic.h ****   };
  44:/home/mpiscopo/gnuradio/include/gnuradio/sptr_magic.h **** 
  45:/home/mpiscopo/gnuradio/include/gnuradio/sptr_magic.h ****   /*
  46:/home/mpiscopo/gnuradio/include/gnuradio/sptr_magic.h ****    * \brief New!  Improved!  Standard method to get/create the
  47:/home/mpiscopo/gnuradio/include/gnuradio/sptr_magic.h ****    * boost::shared_ptr for a block.
  48:/home/mpiscopo/gnuradio/include/gnuradio/sptr_magic.h ****    */
  49:/home/mpiscopo/gnuradio/include/gnuradio/sptr_magic.h ****   template<class T>
  50:/home/mpiscopo/gnuradio/include/gnuradio/sptr_magic.h ****   boost::shared_ptr<T>
  51:/home/mpiscopo/gnuradio/include/gnuradio/sptr_magic.h ****   get_initial_sptr(T *p)
 7588              		.loc 31 51 0
 7589              		.cfi_startproc
 7590 0000 55       		pushq	%rbp
 7591              		.cfi_def_cfa_offset 16
 7592              		.cfi_offset 6, -16
 7593 0001 4889E5   		movq	%rsp, %rbp
 7594              		.cfi_def_cfa_register 6
 7595 0004 4883EC20 		subq	$32, %rsp
 7596 0008 48897DE8 		movq	%rdi, -24(%rbp)
 7597 000c 488975E0 		movq	%rsi, -32(%rbp)
  52:/home/mpiscopo/gnuradio/include/gnuradio/sptr_magic.h ****   {
  53:/home/mpiscopo/gnuradio/include/gnuradio/sptr_magic.h ****     return boost::dynamic_pointer_cast<T, gr::basic_block>
  54:/home/mpiscopo/gnuradio/include/gnuradio/sptr_magic.h ****       (detail::sptr_magic::fetch_initial_sptr(p));
 7598              		.loc 31 54 0
 7599 0010 48837DE0 		cmpq	$0, -32(%rbp)
 7599      00
 7600 0015 741A     		je	.L337
 7601              		.loc 31 54 0 is_stmt 0 discriminator 1
 7602 0017 488B45E0 		movq	-32(%rbp), %rax
 7603 001b 488B00   		movq	(%rax), %rax
 7604 001e 4883E818 		subq	$24, %rax
 7605 0022 488B00   		movq	(%rax), %rax
 7606 0025 4889C2   		movq	%rax, %rdx
 7607 0028 488B45E0 		movq	-32(%rbp), %rax
 7608 002c 4801C2   		addq	%rax, %rdx
 7609 002f EB05     		jmp	.L338
 7610              	.L337:
 7611              		.loc 31 54 0 discriminator 2
 7612 0031 BA000000 		movl	$0, %edx
 7612      00
 7613              	.L338:
 7614              		.loc 31 54 0 discriminator 4
GAS LISTING /tmp/ccvUPO8Q.s 			page 327


 7615 0036 488D45F0 		leaq	-16(%rbp), %rax
 7616 003a 4889D6   		movq	%rdx, %rsi
 7617 003d 4889C7   		movq	%rax, %rdi
 7618 0040 E8000000 		call	_ZN8gnuradio6detail10sptr_magic18fetch_initial_sptrEPN2gr11basic_blockE@PLT
 7618      00
 7619 0045 488B45E8 		movq	-24(%rbp), %rax
 7620 0049 488D55F0 		leaq	-16(%rbp), %rdx
 7621 004d 4889D6   		movq	%rdx, %rsi
 7622 0050 4889C7   		movq	%rax, %rdi
 7623 0053 E8000000 		call	_ZN5boost20dynamic_pointer_castIN2gr5lfast12costas2_implENS1_11basic_blockEEENS_10shared_ptrI
 7623      00
 7624 0058 488D45F0 		leaq	-16(%rbp), %rax
 7625 005c 4889C7   		movq	%rax, %rdi
 7626 005f E8000000 		call	_ZN5boost10shared_ptrIN2gr11basic_blockEED1Ev
 7626      00
  55:/home/mpiscopo/gnuradio/include/gnuradio/sptr_magic.h ****   }
 7627              		.loc 31 55 0 is_stmt 1 discriminator 4
 7628 0064 488B45E8 		movq	-24(%rbp), %rax
 7629 0068 C9       		leave
 7630              		.cfi_def_cfa 7, 8
 7631 0069 C3       		ret
 7632              		.cfi_endproc
 7633              	.LFE12281:
 7635              		.section	.text._ZN5boost10shared_ptrIN2gr5lfast7costas2EEC2INS2_12costas2_implEEEONS0_IT_EENS_6det
 7636              		.align 2
 7637              		.weak	_ZN5boost10shared_ptrIN2gr5lfast7costas2EEC2INS2_12costas2_implEEEONS0_IT_EENS_6detail24sp_e
 7639              	_ZN5boost10shared_ptrIN2gr5lfast7costas2EEC2INS2_12costas2_implEEEONS0_IT_EENS_6detail24sp_enable_i
 7640              	.LFB12286:
 408:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 409:/usr/include/boost/smart_ptr/shared_ptr.hpp **** #endif
 410:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 411:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     template<class Y>
 412:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     explicit shared_ptr( weak_ptr<Y> const & r ): pn( r.pn ) // may throw
 413:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     {
 414:/usr/include/boost/smart_ptr/shared_ptr.hpp ****         boost::detail::sp_assert_convertible< Y, T >();
 415:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 416:/usr/include/boost/smart_ptr/shared_ptr.hpp ****         // it is now safe to copy r.px, as pn(r.pn) did not throw
 417:/usr/include/boost/smart_ptr/shared_ptr.hpp ****         px = r.px;
 418:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     }
 419:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 420:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     template<class Y>
 421:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     shared_ptr( weak_ptr<Y> const & r, boost::detail::sp_nothrow_tag )
 422:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     BOOST_NOEXCEPT : px( 0 ), pn( r.pn, boost::detail::sp_nothrow_tag() )
 423:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     {
 424:/usr/include/boost/smart_ptr/shared_ptr.hpp ****         if( !pn.empty() )
 425:/usr/include/boost/smart_ptr/shared_ptr.hpp ****         {
 426:/usr/include/boost/smart_ptr/shared_ptr.hpp ****             px = r.px;
 427:/usr/include/boost/smart_ptr/shared_ptr.hpp ****         }
 428:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     }
 429:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 430:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     template<class Y>
 431:/usr/include/boost/smart_ptr/shared_ptr.hpp **** #if !defined( BOOST_SP_NO_SP_CONVERTIBLE )
 432:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 433:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     shared_ptr( shared_ptr<Y> const & r, typename boost::detail::sp_enable_if_convertible<Y,T>::typ
 434:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 435:/usr/include/boost/smart_ptr/shared_ptr.hpp **** #else
 436:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
GAS LISTING /tmp/ccvUPO8Q.s 			page 328


 437:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     shared_ptr( shared_ptr<Y> const & r )
 438:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 439:/usr/include/boost/smart_ptr/shared_ptr.hpp **** #endif
 440:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     BOOST_NOEXCEPT : px( r.px ), pn( r.pn )
 441:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     {
 442:/usr/include/boost/smart_ptr/shared_ptr.hpp ****         boost::detail::sp_assert_convertible< Y, T >();
 443:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     }
 444:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 445:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     // aliasing
 446:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     template< class Y >
 447:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     shared_ptr( shared_ptr<Y> const & r, element_type * p ) BOOST_NOEXCEPT : px( p ), pn( r.pn )
 448:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     {
 449:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     }
 450:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 451:/usr/include/boost/smart_ptr/shared_ptr.hpp **** #ifndef BOOST_NO_AUTO_PTR
 452:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 453:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     template<class Y>
 454:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     explicit shared_ptr( std::auto_ptr<Y> & r ): px(r.get()), pn()
 455:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     {
 456:/usr/include/boost/smart_ptr/shared_ptr.hpp ****         boost::detail::sp_assert_convertible< Y, T >();
 457:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 458:/usr/include/boost/smart_ptr/shared_ptr.hpp ****         Y * tmp = r.get();
 459:/usr/include/boost/smart_ptr/shared_ptr.hpp ****         pn = boost::detail::shared_count( r );
 460:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 461:/usr/include/boost/smart_ptr/shared_ptr.hpp ****         boost::detail::sp_deleter_construct( this, tmp );
 462:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     }
 463:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 464:/usr/include/boost/smart_ptr/shared_ptr.hpp **** #if !defined( BOOST_NO_CXX11_RVALUE_REFERENCES )
 465:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 466:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     template<class Y>
 467:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     shared_ptr( std::auto_ptr<Y> && r ): px(r.get()), pn()
 468:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     {
 469:/usr/include/boost/smart_ptr/shared_ptr.hpp ****         boost::detail::sp_assert_convertible< Y, T >();
 470:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 471:/usr/include/boost/smart_ptr/shared_ptr.hpp ****         Y * tmp = r.get();
 472:/usr/include/boost/smart_ptr/shared_ptr.hpp ****         pn = boost::detail::shared_count( r );
 473:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 474:/usr/include/boost/smart_ptr/shared_ptr.hpp ****         boost::detail::sp_deleter_construct( this, tmp );
 475:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     }
 476:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 477:/usr/include/boost/smart_ptr/shared_ptr.hpp **** #elif !defined( BOOST_NO_SFINAE ) && !defined( BOOST_NO_TEMPLATE_PARTIAL_SPECIALIZATION )
 478:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 479:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     template<class Ap>
 480:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     explicit shared_ptr( Ap r, typename boost::detail::sp_enable_if_auto_ptr<Ap, int>::type = 0 ): 
 481:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     {
 482:/usr/include/boost/smart_ptr/shared_ptr.hpp ****         typedef typename Ap::element_type Y;
 483:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 484:/usr/include/boost/smart_ptr/shared_ptr.hpp ****         boost::detail::sp_assert_convertible< Y, T >();
 485:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 486:/usr/include/boost/smart_ptr/shared_ptr.hpp ****         Y * tmp = r.get();
 487:/usr/include/boost/smart_ptr/shared_ptr.hpp ****         pn = boost::detail::shared_count( r );
 488:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 489:/usr/include/boost/smart_ptr/shared_ptr.hpp ****         boost::detail::sp_deleter_construct( this, tmp );
 490:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     }
 491:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 492:/usr/include/boost/smart_ptr/shared_ptr.hpp **** #endif // BOOST_NO_SFINAE, BOOST_NO_TEMPLATE_PARTIAL_SPECIALIZATION
 493:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
GAS LISTING /tmp/ccvUPO8Q.s 			page 329


 494:/usr/include/boost/smart_ptr/shared_ptr.hpp **** #endif // BOOST_NO_AUTO_PTR
 495:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 496:/usr/include/boost/smart_ptr/shared_ptr.hpp **** #if !defined( BOOST_NO_CXX11_SMART_PTR ) && !defined( BOOST_NO_CXX11_RVALUE_REFERENCES )
 497:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 498:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     template< class Y, class D >
 499:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     shared_ptr( std::unique_ptr< Y, D > && r ): px( r.get() ), pn()
 500:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     {
 501:/usr/include/boost/smart_ptr/shared_ptr.hpp ****         boost::detail::sp_assert_convertible< Y, T >();
 502:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 503:/usr/include/boost/smart_ptr/shared_ptr.hpp ****         typename std::unique_ptr< Y, D >::pointer tmp = r.get();
 504:/usr/include/boost/smart_ptr/shared_ptr.hpp ****         pn = boost::detail::shared_count( r );
 505:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 506:/usr/include/boost/smart_ptr/shared_ptr.hpp ****         boost::detail::sp_deleter_construct( this, tmp );
 507:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     }
 508:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 509:/usr/include/boost/smart_ptr/shared_ptr.hpp **** #endif
 510:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 511:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     template< class Y, class D >
 512:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     shared_ptr( boost::movelib::unique_ptr< Y, D > r ): px( r.get() ), pn()
 513:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     {
 514:/usr/include/boost/smart_ptr/shared_ptr.hpp ****         boost::detail::sp_assert_convertible< Y, T >();
 515:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 516:/usr/include/boost/smart_ptr/shared_ptr.hpp ****         typename boost::movelib::unique_ptr< Y, D >::pointer tmp = r.get();
 517:/usr/include/boost/smart_ptr/shared_ptr.hpp ****         pn = boost::detail::shared_count( r );
 518:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 519:/usr/include/boost/smart_ptr/shared_ptr.hpp ****         boost::detail::sp_deleter_construct( this, tmp );
 520:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     }
 521:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 522:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     // assignment
 523:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 524:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     shared_ptr & operator=( shared_ptr const & r ) BOOST_NOEXCEPT
 525:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     {
 526:/usr/include/boost/smart_ptr/shared_ptr.hpp ****         this_type(r).swap(*this);
 527:/usr/include/boost/smart_ptr/shared_ptr.hpp ****         return *this;
 528:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     }
 529:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 530:/usr/include/boost/smart_ptr/shared_ptr.hpp **** #if !defined(BOOST_MSVC) || (BOOST_MSVC >= 1400)
 531:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 532:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     template<class Y>
 533:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     shared_ptr & operator=(shared_ptr<Y> const & r) BOOST_NOEXCEPT
 534:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     {
 535:/usr/include/boost/smart_ptr/shared_ptr.hpp ****         this_type(r).swap(*this);
 536:/usr/include/boost/smart_ptr/shared_ptr.hpp ****         return *this;
 537:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     }
 538:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 539:/usr/include/boost/smart_ptr/shared_ptr.hpp **** #endif
 540:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 541:/usr/include/boost/smart_ptr/shared_ptr.hpp **** #ifndef BOOST_NO_AUTO_PTR
 542:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 543:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     template<class Y>
 544:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     shared_ptr & operator=( std::auto_ptr<Y> & r )
 545:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     {
 546:/usr/include/boost/smart_ptr/shared_ptr.hpp ****         this_type( r ).swap( *this );
 547:/usr/include/boost/smart_ptr/shared_ptr.hpp ****         return *this;
 548:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     }
 549:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 550:/usr/include/boost/smart_ptr/shared_ptr.hpp **** #if !defined( BOOST_NO_CXX11_RVALUE_REFERENCES )
GAS LISTING /tmp/ccvUPO8Q.s 			page 330


 551:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 552:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     template<class Y>
 553:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     shared_ptr & operator=( std::auto_ptr<Y> && r )
 554:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     {
 555:/usr/include/boost/smart_ptr/shared_ptr.hpp ****         this_type( static_cast< std::auto_ptr<Y> && >( r ) ).swap( *this );
 556:/usr/include/boost/smart_ptr/shared_ptr.hpp ****         return *this;
 557:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     }
 558:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 559:/usr/include/boost/smart_ptr/shared_ptr.hpp **** #elif !defined( BOOST_NO_SFINAE ) && !defined( BOOST_NO_TEMPLATE_PARTIAL_SPECIALIZATION )
 560:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 561:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     template<class Ap>
 562:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     typename boost::detail::sp_enable_if_auto_ptr< Ap, shared_ptr & >::type operator=( Ap r )
 563:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     {
 564:/usr/include/boost/smart_ptr/shared_ptr.hpp ****         this_type( r ).swap( *this );
 565:/usr/include/boost/smart_ptr/shared_ptr.hpp ****         return *this;
 566:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     }
 567:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 568:/usr/include/boost/smart_ptr/shared_ptr.hpp **** #endif // BOOST_NO_SFINAE, BOOST_NO_TEMPLATE_PARTIAL_SPECIALIZATION
 569:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 570:/usr/include/boost/smart_ptr/shared_ptr.hpp **** #endif // BOOST_NO_AUTO_PTR
 571:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 572:/usr/include/boost/smart_ptr/shared_ptr.hpp **** #if !defined( BOOST_NO_CXX11_SMART_PTR ) && !defined( BOOST_NO_CXX11_RVALUE_REFERENCES )
 573:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 574:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     template<class Y, class D>
 575:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     shared_ptr & operator=( std::unique_ptr<Y, D> && r )
 576:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     {
 577:/usr/include/boost/smart_ptr/shared_ptr.hpp ****         this_type( static_cast< std::unique_ptr<Y, D> && >( r ) ).swap(*this);
 578:/usr/include/boost/smart_ptr/shared_ptr.hpp ****         return *this;
 579:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     }
 580:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 581:/usr/include/boost/smart_ptr/shared_ptr.hpp **** #endif
 582:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 583:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     template<class Y, class D>
 584:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     shared_ptr & operator=( boost::movelib::unique_ptr<Y, D> r )
 585:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     {
 586:/usr/include/boost/smart_ptr/shared_ptr.hpp ****         // this_type( static_cast< unique_ptr<Y, D> && >( r ) ).swap( *this );
 587:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 588:/usr/include/boost/smart_ptr/shared_ptr.hpp ****         boost::detail::sp_assert_convertible< Y, T >();
 589:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 590:/usr/include/boost/smart_ptr/shared_ptr.hpp ****         typename boost::movelib::unique_ptr< Y, D >::pointer p = r.get();
 591:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 592:/usr/include/boost/smart_ptr/shared_ptr.hpp ****         shared_ptr tmp;
 593:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 594:/usr/include/boost/smart_ptr/shared_ptr.hpp ****         tmp.px = p;
 595:/usr/include/boost/smart_ptr/shared_ptr.hpp ****         tmp.pn = boost::detail::shared_count( r );
 596:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 597:/usr/include/boost/smart_ptr/shared_ptr.hpp ****         boost::detail::sp_deleter_construct( &tmp, p );
 598:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 599:/usr/include/boost/smart_ptr/shared_ptr.hpp ****         tmp.swap( *this );
 600:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 601:/usr/include/boost/smart_ptr/shared_ptr.hpp ****         return *this;
 602:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     }
 603:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 604:/usr/include/boost/smart_ptr/shared_ptr.hpp **** // Move support
 605:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 606:/usr/include/boost/smart_ptr/shared_ptr.hpp **** #if !defined( BOOST_NO_CXX11_RVALUE_REFERENCES )
 607:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
GAS LISTING /tmp/ccvUPO8Q.s 			page 331


 608:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     shared_ptr( shared_ptr && r ) BOOST_NOEXCEPT : px( r.px ), pn()
 609:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     {
 610:/usr/include/boost/smart_ptr/shared_ptr.hpp ****         pn.swap( r.pn );
 611:/usr/include/boost/smart_ptr/shared_ptr.hpp ****         r.px = 0;
 612:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     }
 613:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 614:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     template<class Y>
 615:/usr/include/boost/smart_ptr/shared_ptr.hpp **** #if !defined( BOOST_SP_NO_SP_CONVERTIBLE )
 616:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 617:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     shared_ptr( shared_ptr<Y> && r, typename boost::detail::sp_enable_if_convertible<Y,T>::type = b
 7641              		.loc 7 617 0
 7642              		.cfi_startproc
 7643 0000 55       		pushq	%rbp
 7644              		.cfi_def_cfa_offset 16
 7645              		.cfi_offset 6, -16
 7646 0001 4889E5   		movq	%rsp, %rbp
 7647              		.cfi_def_cfa_register 6
 7648 0004 4883EC10 		subq	$16, %rsp
 7649 0008 48897DF8 		movq	%rdi, -8(%rbp)
 7650 000c 488975F0 		movq	%rsi, -16(%rbp)
 7651              	.LBB77:
 618:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 619:/usr/include/boost/smart_ptr/shared_ptr.hpp **** #else
 620:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 621:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     shared_ptr( shared_ptr<Y> && r )
 622:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 623:/usr/include/boost/smart_ptr/shared_ptr.hpp **** #endif
 624:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     BOOST_NOEXCEPT : px( r.px ), pn()
 7652              		.loc 7 624 0
 7653 0010 488B45F0 		movq	-16(%rbp), %rax
 7654 0014 488B10   		movq	(%rax), %rdx
 7655 0017 488B45F8 		movq	-8(%rbp), %rax
 7656 001b 488910   		movq	%rdx, (%rax)
 7657 001e 488B45F8 		movq	-8(%rbp), %rax
 7658 0022 4883C008 		addq	$8, %rax
 7659 0026 4889C7   		movq	%rax, %rdi
 7660 0029 E8000000 		call	_ZN5boost6detail12shared_countC1Ev
 7660      00
 625:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     {
 626:/usr/include/boost/smart_ptr/shared_ptr.hpp ****         boost::detail::sp_assert_convertible< Y, T >();
 7661              		.loc 7 626 0
 7662 002e E8000000 		call	_ZN5boost6detail21sp_assert_convertibleIN2gr5lfast12costas2_implENS3_7costas2EEEvv
 7662      00
 627:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 628:/usr/include/boost/smart_ptr/shared_ptr.hpp ****         pn.swap( r.pn );
 7663              		.loc 7 628 0
 7664 0033 488B45F0 		movq	-16(%rbp), %rax
 7665 0037 488D5008 		leaq	8(%rax), %rdx
 7666 003b 488B45F8 		movq	-8(%rbp), %rax
 7667 003f 4883C008 		addq	$8, %rax
 7668 0043 4889D6   		movq	%rdx, %rsi
 7669 0046 4889C7   		movq	%rax, %rdi
 7670 0049 E8000000 		call	_ZN5boost6detail12shared_count4swapERS1_
 7670      00
 629:/usr/include/boost/smart_ptr/shared_ptr.hpp ****         r.px = 0;
 7671              		.loc 7 629 0
 7672 004e 488B45F0 		movq	-16(%rbp), %rax
GAS LISTING /tmp/ccvUPO8Q.s 			page 332


 7673 0052 48C70000 		movq	$0, (%rax)
 7673      000000
 7674              	.LBE77:
 630:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     }
 7675              		.loc 7 630 0
 7676 0059 90       		nop
 7677 005a C9       		leave
 7678              		.cfi_def_cfa 7, 8
 7679 005b C3       		ret
 7680              		.cfi_endproc
 7681              	.LFE12286:
 7683              		.weak	_ZN5boost10shared_ptrIN2gr5lfast7costas2EEC1INS2_12costas2_implEEEONS0_IT_EENS_6detail24sp_e
 7684              		.set	_ZN5boost10shared_ptrIN2gr5lfast7costas2EEC1INS2_12costas2_implEEEONS0_IT_EENS_6detail24sp_en
 7685              		.section	.text._ZNSt6vectorIPKvSaIS1_EEixEm,"axG",@progbits,_ZNSt6vectorIPKvSaIS1_EEixEm,comdat
 7686              		.align 2
 7687              		.weak	_ZNSt6vectorIPKvSaIS1_EEixEm
 7689              	_ZNSt6vectorIPKvSaIS1_EEixEm:
 7690              	.LFB12294:
 428:/usr/include/c++/6/bits/stl_vector.h **** 
 429:/usr/include/c++/6/bits/stl_vector.h ****       /**
 430:/usr/include/c++/6/bits/stl_vector.h ****        *  @brief  %Vector assignment operator.
 431:/usr/include/c++/6/bits/stl_vector.h ****        *  @param  __x  A %vector of identical element and allocator types.
 432:/usr/include/c++/6/bits/stl_vector.h ****        *
 433:/usr/include/c++/6/bits/stl_vector.h ****        *  All the elements of @a __x are copied, but any extra memory in
 434:/usr/include/c++/6/bits/stl_vector.h ****        *  @a __x (for fast expansion) will not be copied.  Unlike the
 435:/usr/include/c++/6/bits/stl_vector.h ****        *  copy constructor, the allocator object is not copied.
 436:/usr/include/c++/6/bits/stl_vector.h ****        */
 437:/usr/include/c++/6/bits/stl_vector.h ****       vector&
 438:/usr/include/c++/6/bits/stl_vector.h ****       operator=(const vector& __x);
 439:/usr/include/c++/6/bits/stl_vector.h **** 
 440:/usr/include/c++/6/bits/stl_vector.h **** #if __cplusplus >= 201103L
 441:/usr/include/c++/6/bits/stl_vector.h ****       /**
 442:/usr/include/c++/6/bits/stl_vector.h ****        *  @brief  %Vector move assignment operator.
 443:/usr/include/c++/6/bits/stl_vector.h ****        *  @param  __x  A %vector of identical element and allocator types.
 444:/usr/include/c++/6/bits/stl_vector.h ****        *
 445:/usr/include/c++/6/bits/stl_vector.h ****        *  The contents of @a __x are moved into this %vector (without copying,
 446:/usr/include/c++/6/bits/stl_vector.h ****        *  if the allocators permit it).
 447:/usr/include/c++/6/bits/stl_vector.h ****        *  @a __x is a valid, but unspecified %vector.
 448:/usr/include/c++/6/bits/stl_vector.h ****        */
 449:/usr/include/c++/6/bits/stl_vector.h ****       vector&
 450:/usr/include/c++/6/bits/stl_vector.h ****       operator=(vector&& __x) noexcept(_Alloc_traits::_S_nothrow_move())
 451:/usr/include/c++/6/bits/stl_vector.h ****       {
 452:/usr/include/c++/6/bits/stl_vector.h ****         constexpr bool __move_storage =
 453:/usr/include/c++/6/bits/stl_vector.h ****           _Alloc_traits::_S_propagate_on_move_assign()
 454:/usr/include/c++/6/bits/stl_vector.h ****           || _Alloc_traits::_S_always_equal();
 455:/usr/include/c++/6/bits/stl_vector.h ****         _M_move_assign(std::move(__x), __bool_constant<__move_storage>());
 456:/usr/include/c++/6/bits/stl_vector.h **** 	return *this;
 457:/usr/include/c++/6/bits/stl_vector.h ****       }
 458:/usr/include/c++/6/bits/stl_vector.h **** 
 459:/usr/include/c++/6/bits/stl_vector.h ****       /**
 460:/usr/include/c++/6/bits/stl_vector.h ****        *  @brief  %Vector list assignment operator.
 461:/usr/include/c++/6/bits/stl_vector.h ****        *  @param  __l  An initializer_list.
 462:/usr/include/c++/6/bits/stl_vector.h ****        *
 463:/usr/include/c++/6/bits/stl_vector.h ****        *  This function fills a %vector with copies of the elements in the
 464:/usr/include/c++/6/bits/stl_vector.h ****        *  initializer list @a __l.
 465:/usr/include/c++/6/bits/stl_vector.h ****        *
 466:/usr/include/c++/6/bits/stl_vector.h ****        *  Note that the assignment completely changes the %vector and
GAS LISTING /tmp/ccvUPO8Q.s 			page 333


 467:/usr/include/c++/6/bits/stl_vector.h ****        *  that the resulting %vector's size is the same as the number
 468:/usr/include/c++/6/bits/stl_vector.h ****        *  of elements assigned.  Old data may be lost.
 469:/usr/include/c++/6/bits/stl_vector.h ****        */
 470:/usr/include/c++/6/bits/stl_vector.h ****       vector&
 471:/usr/include/c++/6/bits/stl_vector.h ****       operator=(initializer_list<value_type> __l)
 472:/usr/include/c++/6/bits/stl_vector.h ****       {
 473:/usr/include/c++/6/bits/stl_vector.h **** 	this->assign(__l.begin(), __l.end());
 474:/usr/include/c++/6/bits/stl_vector.h **** 	return *this;
 475:/usr/include/c++/6/bits/stl_vector.h ****       }
 476:/usr/include/c++/6/bits/stl_vector.h **** #endif
 477:/usr/include/c++/6/bits/stl_vector.h **** 
 478:/usr/include/c++/6/bits/stl_vector.h ****       /**
 479:/usr/include/c++/6/bits/stl_vector.h ****        *  @brief  Assigns a given value to a %vector.
 480:/usr/include/c++/6/bits/stl_vector.h ****        *  @param  __n  Number of elements to be assigned.
 481:/usr/include/c++/6/bits/stl_vector.h ****        *  @param  __val  Value to be assigned.
 482:/usr/include/c++/6/bits/stl_vector.h ****        *
 483:/usr/include/c++/6/bits/stl_vector.h ****        *  This function fills a %vector with @a __n copies of the given
 484:/usr/include/c++/6/bits/stl_vector.h ****        *  value.  Note that the assignment completely changes the
 485:/usr/include/c++/6/bits/stl_vector.h ****        *  %vector and that the resulting %vector's size is the same as
 486:/usr/include/c++/6/bits/stl_vector.h ****        *  the number of elements assigned.  Old data may be lost.
 487:/usr/include/c++/6/bits/stl_vector.h ****        */
 488:/usr/include/c++/6/bits/stl_vector.h ****       void
 489:/usr/include/c++/6/bits/stl_vector.h ****       assign(size_type __n, const value_type& __val)
 490:/usr/include/c++/6/bits/stl_vector.h ****       { _M_fill_assign(__n, __val); }
 491:/usr/include/c++/6/bits/stl_vector.h **** 
 492:/usr/include/c++/6/bits/stl_vector.h ****       /**
 493:/usr/include/c++/6/bits/stl_vector.h ****        *  @brief  Assigns a range to a %vector.
 494:/usr/include/c++/6/bits/stl_vector.h ****        *  @param  __first  An input iterator.
 495:/usr/include/c++/6/bits/stl_vector.h ****        *  @param  __last   An input iterator.
 496:/usr/include/c++/6/bits/stl_vector.h ****        *
 497:/usr/include/c++/6/bits/stl_vector.h ****        *  This function fills a %vector with copies of the elements in the
 498:/usr/include/c++/6/bits/stl_vector.h ****        *  range [__first,__last).
 499:/usr/include/c++/6/bits/stl_vector.h ****        *
 500:/usr/include/c++/6/bits/stl_vector.h ****        *  Note that the assignment completely changes the %vector and
 501:/usr/include/c++/6/bits/stl_vector.h ****        *  that the resulting %vector's size is the same as the number
 502:/usr/include/c++/6/bits/stl_vector.h ****        *  of elements assigned.  Old data may be lost.
 503:/usr/include/c++/6/bits/stl_vector.h ****        */
 504:/usr/include/c++/6/bits/stl_vector.h **** #if __cplusplus >= 201103L
 505:/usr/include/c++/6/bits/stl_vector.h ****       template<typename _InputIterator,
 506:/usr/include/c++/6/bits/stl_vector.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
 507:/usr/include/c++/6/bits/stl_vector.h ****         void
 508:/usr/include/c++/6/bits/stl_vector.h ****         assign(_InputIterator __first, _InputIterator __last)
 509:/usr/include/c++/6/bits/stl_vector.h ****         { _M_assign_dispatch(__first, __last, __false_type()); }
 510:/usr/include/c++/6/bits/stl_vector.h **** #else
 511:/usr/include/c++/6/bits/stl_vector.h ****       template<typename _InputIterator>
 512:/usr/include/c++/6/bits/stl_vector.h ****         void
 513:/usr/include/c++/6/bits/stl_vector.h ****         assign(_InputIterator __first, _InputIterator __last)
 514:/usr/include/c++/6/bits/stl_vector.h ****         {
 515:/usr/include/c++/6/bits/stl_vector.h **** 	  // Check whether it's an integral type.  If so, it's not an iterator.
 516:/usr/include/c++/6/bits/stl_vector.h **** 	  typedef typename std::__is_integer<_InputIterator>::__type _Integral;
 517:/usr/include/c++/6/bits/stl_vector.h **** 	  _M_assign_dispatch(__first, __last, _Integral());
 518:/usr/include/c++/6/bits/stl_vector.h **** 	}
 519:/usr/include/c++/6/bits/stl_vector.h **** #endif
 520:/usr/include/c++/6/bits/stl_vector.h **** 
 521:/usr/include/c++/6/bits/stl_vector.h **** #if __cplusplus >= 201103L
 522:/usr/include/c++/6/bits/stl_vector.h ****       /**
 523:/usr/include/c++/6/bits/stl_vector.h ****        *  @brief  Assigns an initializer list to a %vector.
GAS LISTING /tmp/ccvUPO8Q.s 			page 334


 524:/usr/include/c++/6/bits/stl_vector.h ****        *  @param  __l  An initializer_list.
 525:/usr/include/c++/6/bits/stl_vector.h ****        *
 526:/usr/include/c++/6/bits/stl_vector.h ****        *  This function fills a %vector with copies of the elements in the
 527:/usr/include/c++/6/bits/stl_vector.h ****        *  initializer list @a __l.
 528:/usr/include/c++/6/bits/stl_vector.h ****        *
 529:/usr/include/c++/6/bits/stl_vector.h ****        *  Note that the assignment completely changes the %vector and
 530:/usr/include/c++/6/bits/stl_vector.h ****        *  that the resulting %vector's size is the same as the number
 531:/usr/include/c++/6/bits/stl_vector.h ****        *  of elements assigned.  Old data may be lost.
 532:/usr/include/c++/6/bits/stl_vector.h ****        */
 533:/usr/include/c++/6/bits/stl_vector.h ****       void
 534:/usr/include/c++/6/bits/stl_vector.h ****       assign(initializer_list<value_type> __l)
 535:/usr/include/c++/6/bits/stl_vector.h ****       { this->assign(__l.begin(), __l.end()); }
 536:/usr/include/c++/6/bits/stl_vector.h **** #endif
 537:/usr/include/c++/6/bits/stl_vector.h **** 
 538:/usr/include/c++/6/bits/stl_vector.h ****       /// Get a copy of the memory allocation object.
 539:/usr/include/c++/6/bits/stl_vector.h ****       using _Base::get_allocator;
 540:/usr/include/c++/6/bits/stl_vector.h **** 
 541:/usr/include/c++/6/bits/stl_vector.h ****       // iterators
 542:/usr/include/c++/6/bits/stl_vector.h ****       /**
 543:/usr/include/c++/6/bits/stl_vector.h ****        *  Returns a read/write iterator that points to the first
 544:/usr/include/c++/6/bits/stl_vector.h ****        *  element in the %vector.  Iteration is done in ordinary
 545:/usr/include/c++/6/bits/stl_vector.h ****        *  element order.
 546:/usr/include/c++/6/bits/stl_vector.h ****        */
 547:/usr/include/c++/6/bits/stl_vector.h ****       iterator
 548:/usr/include/c++/6/bits/stl_vector.h ****       begin() _GLIBCXX_NOEXCEPT
 549:/usr/include/c++/6/bits/stl_vector.h ****       { return iterator(this->_M_impl._M_start); }
 550:/usr/include/c++/6/bits/stl_vector.h **** 
 551:/usr/include/c++/6/bits/stl_vector.h ****       /**
 552:/usr/include/c++/6/bits/stl_vector.h ****        *  Returns a read-only (constant) iterator that points to the
 553:/usr/include/c++/6/bits/stl_vector.h ****        *  first element in the %vector.  Iteration is done in ordinary
 554:/usr/include/c++/6/bits/stl_vector.h ****        *  element order.
 555:/usr/include/c++/6/bits/stl_vector.h ****        */
 556:/usr/include/c++/6/bits/stl_vector.h ****       const_iterator
 557:/usr/include/c++/6/bits/stl_vector.h ****       begin() const _GLIBCXX_NOEXCEPT
 558:/usr/include/c++/6/bits/stl_vector.h ****       { return const_iterator(this->_M_impl._M_start); }
 559:/usr/include/c++/6/bits/stl_vector.h **** 
 560:/usr/include/c++/6/bits/stl_vector.h ****       /**
 561:/usr/include/c++/6/bits/stl_vector.h ****        *  Returns a read/write iterator that points one past the last
 562:/usr/include/c++/6/bits/stl_vector.h ****        *  element in the %vector.  Iteration is done in ordinary
 563:/usr/include/c++/6/bits/stl_vector.h ****        *  element order.
 564:/usr/include/c++/6/bits/stl_vector.h ****        */
 565:/usr/include/c++/6/bits/stl_vector.h ****       iterator
 566:/usr/include/c++/6/bits/stl_vector.h ****       end() _GLIBCXX_NOEXCEPT
 567:/usr/include/c++/6/bits/stl_vector.h ****       { return iterator(this->_M_impl._M_finish); }
 568:/usr/include/c++/6/bits/stl_vector.h **** 
 569:/usr/include/c++/6/bits/stl_vector.h ****       /**
 570:/usr/include/c++/6/bits/stl_vector.h ****        *  Returns a read-only (constant) iterator that points one past
 571:/usr/include/c++/6/bits/stl_vector.h ****        *  the last element in the %vector.  Iteration is done in
 572:/usr/include/c++/6/bits/stl_vector.h ****        *  ordinary element order.
 573:/usr/include/c++/6/bits/stl_vector.h ****        */
 574:/usr/include/c++/6/bits/stl_vector.h ****       const_iterator
 575:/usr/include/c++/6/bits/stl_vector.h ****       end() const _GLIBCXX_NOEXCEPT
 576:/usr/include/c++/6/bits/stl_vector.h ****       { return const_iterator(this->_M_impl._M_finish); }
 577:/usr/include/c++/6/bits/stl_vector.h **** 
 578:/usr/include/c++/6/bits/stl_vector.h ****       /**
 579:/usr/include/c++/6/bits/stl_vector.h ****        *  Returns a read/write reverse iterator that points to the
 580:/usr/include/c++/6/bits/stl_vector.h ****        *  last element in the %vector.  Iteration is done in reverse
GAS LISTING /tmp/ccvUPO8Q.s 			page 335


 581:/usr/include/c++/6/bits/stl_vector.h ****        *  element order.
 582:/usr/include/c++/6/bits/stl_vector.h ****        */
 583:/usr/include/c++/6/bits/stl_vector.h ****       reverse_iterator
 584:/usr/include/c++/6/bits/stl_vector.h ****       rbegin() _GLIBCXX_NOEXCEPT
 585:/usr/include/c++/6/bits/stl_vector.h ****       { return reverse_iterator(end()); }
 586:/usr/include/c++/6/bits/stl_vector.h **** 
 587:/usr/include/c++/6/bits/stl_vector.h ****       /**
 588:/usr/include/c++/6/bits/stl_vector.h ****        *  Returns a read-only (constant) reverse iterator that points
 589:/usr/include/c++/6/bits/stl_vector.h ****        *  to the last element in the %vector.  Iteration is done in
 590:/usr/include/c++/6/bits/stl_vector.h ****        *  reverse element order.
 591:/usr/include/c++/6/bits/stl_vector.h ****        */
 592:/usr/include/c++/6/bits/stl_vector.h ****       const_reverse_iterator
 593:/usr/include/c++/6/bits/stl_vector.h ****       rbegin() const _GLIBCXX_NOEXCEPT
 594:/usr/include/c++/6/bits/stl_vector.h ****       { return const_reverse_iterator(end()); }
 595:/usr/include/c++/6/bits/stl_vector.h **** 
 596:/usr/include/c++/6/bits/stl_vector.h ****       /**
 597:/usr/include/c++/6/bits/stl_vector.h ****        *  Returns a read/write reverse iterator that points to one
 598:/usr/include/c++/6/bits/stl_vector.h ****        *  before the first element in the %vector.  Iteration is done
 599:/usr/include/c++/6/bits/stl_vector.h ****        *  in reverse element order.
 600:/usr/include/c++/6/bits/stl_vector.h ****        */
 601:/usr/include/c++/6/bits/stl_vector.h ****       reverse_iterator
 602:/usr/include/c++/6/bits/stl_vector.h ****       rend() _GLIBCXX_NOEXCEPT
 603:/usr/include/c++/6/bits/stl_vector.h ****       { return reverse_iterator(begin()); }
 604:/usr/include/c++/6/bits/stl_vector.h **** 
 605:/usr/include/c++/6/bits/stl_vector.h ****       /**
 606:/usr/include/c++/6/bits/stl_vector.h ****        *  Returns a read-only (constant) reverse iterator that points
 607:/usr/include/c++/6/bits/stl_vector.h ****        *  to one before the first element in the %vector.  Iteration
 608:/usr/include/c++/6/bits/stl_vector.h ****        *  is done in reverse element order.
 609:/usr/include/c++/6/bits/stl_vector.h ****        */
 610:/usr/include/c++/6/bits/stl_vector.h ****       const_reverse_iterator
 611:/usr/include/c++/6/bits/stl_vector.h ****       rend() const _GLIBCXX_NOEXCEPT
 612:/usr/include/c++/6/bits/stl_vector.h ****       { return const_reverse_iterator(begin()); }
 613:/usr/include/c++/6/bits/stl_vector.h **** 
 614:/usr/include/c++/6/bits/stl_vector.h **** #if __cplusplus >= 201103L
 615:/usr/include/c++/6/bits/stl_vector.h ****       /**
 616:/usr/include/c++/6/bits/stl_vector.h ****        *  Returns a read-only (constant) iterator that points to the
 617:/usr/include/c++/6/bits/stl_vector.h ****        *  first element in the %vector.  Iteration is done in ordinary
 618:/usr/include/c++/6/bits/stl_vector.h ****        *  element order.
 619:/usr/include/c++/6/bits/stl_vector.h ****        */
 620:/usr/include/c++/6/bits/stl_vector.h ****       const_iterator
 621:/usr/include/c++/6/bits/stl_vector.h ****       cbegin() const noexcept
 622:/usr/include/c++/6/bits/stl_vector.h ****       { return const_iterator(this->_M_impl._M_start); }
 623:/usr/include/c++/6/bits/stl_vector.h **** 
 624:/usr/include/c++/6/bits/stl_vector.h ****       /**
 625:/usr/include/c++/6/bits/stl_vector.h ****        *  Returns a read-only (constant) iterator that points one past
 626:/usr/include/c++/6/bits/stl_vector.h ****        *  the last element in the %vector.  Iteration is done in
 627:/usr/include/c++/6/bits/stl_vector.h ****        *  ordinary element order.
 628:/usr/include/c++/6/bits/stl_vector.h ****        */
 629:/usr/include/c++/6/bits/stl_vector.h ****       const_iterator
 630:/usr/include/c++/6/bits/stl_vector.h ****       cend() const noexcept
 631:/usr/include/c++/6/bits/stl_vector.h ****       { return const_iterator(this->_M_impl._M_finish); }
 632:/usr/include/c++/6/bits/stl_vector.h **** 
 633:/usr/include/c++/6/bits/stl_vector.h ****       /**
 634:/usr/include/c++/6/bits/stl_vector.h ****        *  Returns a read-only (constant) reverse iterator that points
 635:/usr/include/c++/6/bits/stl_vector.h ****        *  to the last element in the %vector.  Iteration is done in
 636:/usr/include/c++/6/bits/stl_vector.h ****        *  reverse element order.
 637:/usr/include/c++/6/bits/stl_vector.h ****        */
GAS LISTING /tmp/ccvUPO8Q.s 			page 336


 638:/usr/include/c++/6/bits/stl_vector.h ****       const_reverse_iterator
 639:/usr/include/c++/6/bits/stl_vector.h ****       crbegin() const noexcept
 640:/usr/include/c++/6/bits/stl_vector.h ****       { return const_reverse_iterator(end()); }
 641:/usr/include/c++/6/bits/stl_vector.h **** 
 642:/usr/include/c++/6/bits/stl_vector.h ****       /**
 643:/usr/include/c++/6/bits/stl_vector.h ****        *  Returns a read-only (constant) reverse iterator that points
 644:/usr/include/c++/6/bits/stl_vector.h ****        *  to one before the first element in the %vector.  Iteration
 645:/usr/include/c++/6/bits/stl_vector.h ****        *  is done in reverse element order.
 646:/usr/include/c++/6/bits/stl_vector.h ****        */
 647:/usr/include/c++/6/bits/stl_vector.h ****       const_reverse_iterator
 648:/usr/include/c++/6/bits/stl_vector.h ****       crend() const noexcept
 649:/usr/include/c++/6/bits/stl_vector.h ****       { return const_reverse_iterator(begin()); }
 650:/usr/include/c++/6/bits/stl_vector.h **** #endif
 651:/usr/include/c++/6/bits/stl_vector.h **** 
 652:/usr/include/c++/6/bits/stl_vector.h ****       // [23.2.4.2] capacity
 653:/usr/include/c++/6/bits/stl_vector.h ****       /**  Returns the number of elements in the %vector.  */
 654:/usr/include/c++/6/bits/stl_vector.h ****       size_type
 655:/usr/include/c++/6/bits/stl_vector.h ****       size() const _GLIBCXX_NOEXCEPT
 656:/usr/include/c++/6/bits/stl_vector.h ****       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 657:/usr/include/c++/6/bits/stl_vector.h **** 
 658:/usr/include/c++/6/bits/stl_vector.h ****       /**  Returns the size() of the largest possible %vector.  */
 659:/usr/include/c++/6/bits/stl_vector.h ****       size_type
 660:/usr/include/c++/6/bits/stl_vector.h ****       max_size() const _GLIBCXX_NOEXCEPT
 661:/usr/include/c++/6/bits/stl_vector.h ****       { return _Alloc_traits::max_size(_M_get_Tp_allocator()); }
 662:/usr/include/c++/6/bits/stl_vector.h **** 
 663:/usr/include/c++/6/bits/stl_vector.h **** #if __cplusplus >= 201103L
 664:/usr/include/c++/6/bits/stl_vector.h ****       /**
 665:/usr/include/c++/6/bits/stl_vector.h ****        *  @brief  Resizes the %vector to the specified number of elements.
 666:/usr/include/c++/6/bits/stl_vector.h ****        *  @param  __new_size  Number of elements the %vector should contain.
 667:/usr/include/c++/6/bits/stl_vector.h ****        *
 668:/usr/include/c++/6/bits/stl_vector.h ****        *  This function will %resize the %vector to the specified
 669:/usr/include/c++/6/bits/stl_vector.h ****        *  number of elements.  If the number is smaller than the
 670:/usr/include/c++/6/bits/stl_vector.h ****        *  %vector's current size the %vector is truncated, otherwise
 671:/usr/include/c++/6/bits/stl_vector.h ****        *  default constructed elements are appended.
 672:/usr/include/c++/6/bits/stl_vector.h ****        */
 673:/usr/include/c++/6/bits/stl_vector.h ****       void
 674:/usr/include/c++/6/bits/stl_vector.h ****       resize(size_type __new_size)
 675:/usr/include/c++/6/bits/stl_vector.h ****       {
 676:/usr/include/c++/6/bits/stl_vector.h **** 	if (__new_size > size())
 677:/usr/include/c++/6/bits/stl_vector.h **** 	  _M_default_append(__new_size - size());
 678:/usr/include/c++/6/bits/stl_vector.h **** 	else if (__new_size < size())
 679:/usr/include/c++/6/bits/stl_vector.h **** 	  _M_erase_at_end(this->_M_impl._M_start + __new_size);
 680:/usr/include/c++/6/bits/stl_vector.h ****       }
 681:/usr/include/c++/6/bits/stl_vector.h **** 
 682:/usr/include/c++/6/bits/stl_vector.h ****       /**
 683:/usr/include/c++/6/bits/stl_vector.h ****        *  @brief  Resizes the %vector to the specified number of elements.
 684:/usr/include/c++/6/bits/stl_vector.h ****        *  @param  __new_size  Number of elements the %vector should contain.
 685:/usr/include/c++/6/bits/stl_vector.h ****        *  @param  __x  Data with which new elements should be populated.
 686:/usr/include/c++/6/bits/stl_vector.h ****        *
 687:/usr/include/c++/6/bits/stl_vector.h ****        *  This function will %resize the %vector to the specified
 688:/usr/include/c++/6/bits/stl_vector.h ****        *  number of elements.  If the number is smaller than the
 689:/usr/include/c++/6/bits/stl_vector.h ****        *  %vector's current size the %vector is truncated, otherwise
 690:/usr/include/c++/6/bits/stl_vector.h ****        *  the %vector is extended and new elements are populated with
 691:/usr/include/c++/6/bits/stl_vector.h ****        *  given data.
 692:/usr/include/c++/6/bits/stl_vector.h ****        */
 693:/usr/include/c++/6/bits/stl_vector.h ****       void
 694:/usr/include/c++/6/bits/stl_vector.h ****       resize(size_type __new_size, const value_type& __x)
GAS LISTING /tmp/ccvUPO8Q.s 			page 337


 695:/usr/include/c++/6/bits/stl_vector.h ****       {
 696:/usr/include/c++/6/bits/stl_vector.h **** 	if (__new_size > size())
 697:/usr/include/c++/6/bits/stl_vector.h **** 	  insert(end(), __new_size - size(), __x);
 698:/usr/include/c++/6/bits/stl_vector.h **** 	else if (__new_size < size())
 699:/usr/include/c++/6/bits/stl_vector.h **** 	  _M_erase_at_end(this->_M_impl._M_start + __new_size);
 700:/usr/include/c++/6/bits/stl_vector.h ****       }
 701:/usr/include/c++/6/bits/stl_vector.h **** #else
 702:/usr/include/c++/6/bits/stl_vector.h ****       /**
 703:/usr/include/c++/6/bits/stl_vector.h ****        *  @brief  Resizes the %vector to the specified number of elements.
 704:/usr/include/c++/6/bits/stl_vector.h ****        *  @param  __new_size  Number of elements the %vector should contain.
 705:/usr/include/c++/6/bits/stl_vector.h ****        *  @param  __x  Data with which new elements should be populated.
 706:/usr/include/c++/6/bits/stl_vector.h ****        *
 707:/usr/include/c++/6/bits/stl_vector.h ****        *  This function will %resize the %vector to the specified
 708:/usr/include/c++/6/bits/stl_vector.h ****        *  number of elements.  If the number is smaller than the
 709:/usr/include/c++/6/bits/stl_vector.h ****        *  %vector's current size the %vector is truncated, otherwise
 710:/usr/include/c++/6/bits/stl_vector.h ****        *  the %vector is extended and new elements are populated with
 711:/usr/include/c++/6/bits/stl_vector.h ****        *  given data.
 712:/usr/include/c++/6/bits/stl_vector.h ****        */
 713:/usr/include/c++/6/bits/stl_vector.h ****       void
 714:/usr/include/c++/6/bits/stl_vector.h ****       resize(size_type __new_size, value_type __x = value_type())
 715:/usr/include/c++/6/bits/stl_vector.h ****       {
 716:/usr/include/c++/6/bits/stl_vector.h **** 	if (__new_size > size())
 717:/usr/include/c++/6/bits/stl_vector.h **** 	  insert(end(), __new_size - size(), __x);
 718:/usr/include/c++/6/bits/stl_vector.h **** 	else if (__new_size < size())
 719:/usr/include/c++/6/bits/stl_vector.h **** 	  _M_erase_at_end(this->_M_impl._M_start + __new_size);
 720:/usr/include/c++/6/bits/stl_vector.h ****       }
 721:/usr/include/c++/6/bits/stl_vector.h **** #endif
 722:/usr/include/c++/6/bits/stl_vector.h **** 
 723:/usr/include/c++/6/bits/stl_vector.h **** #if __cplusplus >= 201103L
 724:/usr/include/c++/6/bits/stl_vector.h ****       /**  A non-binding request to reduce capacity() to size().  */
 725:/usr/include/c++/6/bits/stl_vector.h ****       void
 726:/usr/include/c++/6/bits/stl_vector.h ****       shrink_to_fit()
 727:/usr/include/c++/6/bits/stl_vector.h ****       { _M_shrink_to_fit(); }
 728:/usr/include/c++/6/bits/stl_vector.h **** #endif
 729:/usr/include/c++/6/bits/stl_vector.h **** 
 730:/usr/include/c++/6/bits/stl_vector.h ****       /**
 731:/usr/include/c++/6/bits/stl_vector.h ****        *  Returns the total number of elements that the %vector can
 732:/usr/include/c++/6/bits/stl_vector.h ****        *  hold before needing to allocate more memory.
 733:/usr/include/c++/6/bits/stl_vector.h ****        */
 734:/usr/include/c++/6/bits/stl_vector.h ****       size_type
 735:/usr/include/c++/6/bits/stl_vector.h ****       capacity() const _GLIBCXX_NOEXCEPT
 736:/usr/include/c++/6/bits/stl_vector.h ****       { return size_type(this->_M_impl._M_end_of_storage
 737:/usr/include/c++/6/bits/stl_vector.h **** 			 - this->_M_impl._M_start); }
 738:/usr/include/c++/6/bits/stl_vector.h **** 
 739:/usr/include/c++/6/bits/stl_vector.h ****       /**
 740:/usr/include/c++/6/bits/stl_vector.h ****        *  Returns true if the %vector is empty.  (Thus begin() would
 741:/usr/include/c++/6/bits/stl_vector.h ****        *  equal end().)
 742:/usr/include/c++/6/bits/stl_vector.h ****        */
 743:/usr/include/c++/6/bits/stl_vector.h ****       bool
 744:/usr/include/c++/6/bits/stl_vector.h ****       empty() const _GLIBCXX_NOEXCEPT
 745:/usr/include/c++/6/bits/stl_vector.h ****       { return begin() == end(); }
 746:/usr/include/c++/6/bits/stl_vector.h **** 
 747:/usr/include/c++/6/bits/stl_vector.h ****       /**
 748:/usr/include/c++/6/bits/stl_vector.h ****        *  @brief  Attempt to preallocate enough memory for specified number of
 749:/usr/include/c++/6/bits/stl_vector.h ****        *          elements.
 750:/usr/include/c++/6/bits/stl_vector.h ****        *  @param  __n  Number of elements required.
 751:/usr/include/c++/6/bits/stl_vector.h ****        *  @throw  std::length_error  If @a n exceeds @c max_size().
GAS LISTING /tmp/ccvUPO8Q.s 			page 338


 752:/usr/include/c++/6/bits/stl_vector.h ****        *
 753:/usr/include/c++/6/bits/stl_vector.h ****        *  This function attempts to reserve enough memory for the
 754:/usr/include/c++/6/bits/stl_vector.h ****        *  %vector to hold the specified number of elements.  If the
 755:/usr/include/c++/6/bits/stl_vector.h ****        *  number requested is more than max_size(), length_error is
 756:/usr/include/c++/6/bits/stl_vector.h ****        *  thrown.
 757:/usr/include/c++/6/bits/stl_vector.h ****        *
 758:/usr/include/c++/6/bits/stl_vector.h ****        *  The advantage of this function is that if optimal code is a
 759:/usr/include/c++/6/bits/stl_vector.h ****        *  necessity and the user can determine the number of elements
 760:/usr/include/c++/6/bits/stl_vector.h ****        *  that will be required, the user can reserve the memory in
 761:/usr/include/c++/6/bits/stl_vector.h ****        *  %advance, and thus prevent a possible reallocation of memory
 762:/usr/include/c++/6/bits/stl_vector.h ****        *  and copying of %vector data.
 763:/usr/include/c++/6/bits/stl_vector.h ****        */
 764:/usr/include/c++/6/bits/stl_vector.h ****       void
 765:/usr/include/c++/6/bits/stl_vector.h ****       reserve(size_type __n);
 766:/usr/include/c++/6/bits/stl_vector.h **** 
 767:/usr/include/c++/6/bits/stl_vector.h ****       // element access
 768:/usr/include/c++/6/bits/stl_vector.h ****       /**
 769:/usr/include/c++/6/bits/stl_vector.h ****        *  @brief  Subscript access to the data contained in the %vector.
 770:/usr/include/c++/6/bits/stl_vector.h ****        *  @param __n The index of the element for which data should be
 771:/usr/include/c++/6/bits/stl_vector.h ****        *  accessed.
 772:/usr/include/c++/6/bits/stl_vector.h ****        *  @return  Read/write reference to data.
 773:/usr/include/c++/6/bits/stl_vector.h ****        *
 774:/usr/include/c++/6/bits/stl_vector.h ****        *  This operator allows for easy, array-style, data access.
 775:/usr/include/c++/6/bits/stl_vector.h ****        *  Note that data access with this operator is unchecked and
 776:/usr/include/c++/6/bits/stl_vector.h ****        *  out_of_range lookups are not defined. (For checked lookups
 777:/usr/include/c++/6/bits/stl_vector.h ****        *  see at().)
 778:/usr/include/c++/6/bits/stl_vector.h ****        */
 779:/usr/include/c++/6/bits/stl_vector.h ****       reference
 780:/usr/include/c++/6/bits/stl_vector.h ****       operator[](size_type __n) _GLIBCXX_NOEXCEPT
 7691              		.loc 30 780 0
 7692              		.cfi_startproc
 7693 0000 55       		pushq	%rbp
 7694              		.cfi_def_cfa_offset 16
 7695              		.cfi_offset 6, -16
 7696 0001 4889E5   		movq	%rsp, %rbp
 7697              		.cfi_def_cfa_register 6
 7698 0004 48897DF8 		movq	%rdi, -8(%rbp)
 7699 0008 488975F0 		movq	%rsi, -16(%rbp)
 781:/usr/include/c++/6/bits/stl_vector.h ****       { return *(this->_M_impl._M_start + __n); }
 7700              		.loc 30 781 0
 7701 000c 488B45F8 		movq	-8(%rbp), %rax
 7702 0010 488B00   		movq	(%rax), %rax
 7703 0013 488B55F0 		movq	-16(%rbp), %rdx
 7704 0017 48C1E203 		salq	$3, %rdx
 7705 001b 4801D0   		addq	%rdx, %rax
 7706 001e 5D       		popq	%rbp
 7707              		.cfi_def_cfa 7, 8
 7708 001f C3       		ret
 7709              		.cfi_endproc
 7710              	.LFE12294:
 7712              		.section	.text._ZNSt6vectorIPvSaIS0_EEixEm,"axG",@progbits,_ZNSt6vectorIPvSaIS0_EEixEm,comdat
 7713              		.align 2
 7714              		.weak	_ZNSt6vectorIPvSaIS0_EEixEm
 7716              	_ZNSt6vectorIPvSaIS0_EEixEm:
 7717              	.LFB12295:
 780:/usr/include/c++/6/bits/stl_vector.h ****       { return *(this->_M_impl._M_start + __n); }
 7718              		.loc 30 780 0
GAS LISTING /tmp/ccvUPO8Q.s 			page 339


 7719              		.cfi_startproc
 7720 0000 55       		pushq	%rbp
 7721              		.cfi_def_cfa_offset 16
 7722              		.cfi_offset 6, -16
 7723 0001 4889E5   		movq	%rsp, %rbp
 7724              		.cfi_def_cfa_register 6
 7725 0004 48897DF8 		movq	%rdi, -8(%rbp)
 7726 0008 488975F0 		movq	%rsi, -16(%rbp)
 7727              		.loc 30 781 0
 7728 000c 488B45F8 		movq	-8(%rbp), %rax
 7729 0010 488B00   		movq	(%rax), %rax
 7730 0013 488B55F0 		movq	-16(%rbp), %rdx
 7731 0017 48C1E203 		salq	$3, %rdx
 7732 001b 4801D0   		addq	%rdx, %rax
 7733 001e 5D       		popq	%rbp
 7734              		.cfi_def_cfa 7, 8
 7735 001f C3       		ret
 7736              		.cfi_endproc
 7737              	.LFE12295:
 7739              		.section	.text._ZNKSt6vectorIPvSaIS0_EE4sizeEv,"axG",@progbits,_ZNKSt6vectorIPvSaIS0_EE4sizeEv,com
 7740              		.align 2
 7741              		.weak	_ZNKSt6vectorIPvSaIS0_EE4sizeEv
 7743              	_ZNKSt6vectorIPvSaIS0_EE4sizeEv:
 7744              	.LFB12296:
 655:/usr/include/c++/6/bits/stl_vector.h ****       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 7745              		.loc 30 655 0
 7746              		.cfi_startproc
 7747 0000 55       		pushq	%rbp
 7748              		.cfi_def_cfa_offset 16
 7749              		.cfi_offset 6, -16
 7750 0001 4889E5   		movq	%rsp, %rbp
 7751              		.cfi_def_cfa_register 6
 7752 0004 48897DF8 		movq	%rdi, -8(%rbp)
 656:/usr/include/c++/6/bits/stl_vector.h **** 
 7753              		.loc 30 656 0
 7754 0008 488B45F8 		movq	-8(%rbp), %rax
 7755 000c 488B4008 		movq	8(%rax), %rax
 7756 0010 4889C2   		movq	%rax, %rdx
 7757 0013 488B45F8 		movq	-8(%rbp), %rax
 7758 0017 488B00   		movq	(%rax), %rax
 7759 001a 4829C2   		subq	%rax, %rdx
 7760 001d 4889D0   		movq	%rdx, %rax
 7761 0020 48C1F803 		sarq	$3, %rax
 7762 0024 5D       		popq	%rbp
 7763              		.cfi_def_cfa 7, 8
 7764 0025 C3       		ret
 7765              		.cfi_endproc
 7766              	.LFE12296:
 7768              		.section	.text._ZNSt6vectorIN2gr5tag_tESaIS1_EEC2Ev,"axG",@progbits,_ZNSt6vectorIN2gr5tag_tESaIS1_
 7769              		.align 2
 7770              		.weak	_ZNSt6vectorIN2gr5tag_tESaIS1_EEC2Ev
 7772              	_ZNSt6vectorIN2gr5tag_tESaIS1_EEC2Ev:
 7773              	.LFB12298:
 255:/usr/include/c++/6/bits/stl_vector.h **** #if __cplusplus >= 201103L
 7774              		.loc 30 255 0
 7775              		.cfi_startproc
 7776              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
GAS LISTING /tmp/ccvUPO8Q.s 			page 340


 7777              		.cfi_lsda 0x1b,.LLSDA12298
 7778 0000 55       		pushq	%rbp
 7779              		.cfi_def_cfa_offset 16
 7780              		.cfi_offset 6, -16
 7781 0001 4889E5   		movq	%rsp, %rbp
 7782              		.cfi_def_cfa_register 6
 7783 0004 4883EC10 		subq	$16, %rsp
 7784 0008 48897DF8 		movq	%rdi, -8(%rbp)
 7785              	.LBB78:
 259:/usr/include/c++/6/bits/stl_vector.h **** 
 7786              		.loc 30 259 0
 7787 000c 488B45F8 		movq	-8(%rbp), %rax
 7788 0010 4889C7   		movq	%rax, %rdi
 7789 0013 E8000000 		call	_ZNSt12_Vector_baseIN2gr5tag_tESaIS1_EEC2Ev
 7789      00
 7790              	.LBE78:
 7791 0018 90       		nop
 7792 0019 C9       		leave
 7793              		.cfi_def_cfa 7, 8
 7794 001a C3       		ret
 7795              		.cfi_endproc
 7796              	.LFE12298:
 7797              		.section	.gcc_except_table
 7798              	.LLSDA12298:
 7799 012c FF       		.byte	0xff
 7800 012d FF       		.byte	0xff
 7801 012e 01       		.byte	0x1
 7802 012f 00       		.uleb128 .LLSDACSE12298-.LLSDACSB12298
 7803              	.LLSDACSB12298:
 7804              	.LLSDACSE12298:
 7805              		.section	.text._ZNSt6vectorIN2gr5tag_tESaIS1_EEC2Ev,"axG",@progbits,_ZNSt6vectorIN2gr5tag_tESaIS1_
 7807              		.weak	_ZNSt6vectorIN2gr5tag_tESaIS1_EEC1Ev
 7808              		.set	_ZNSt6vectorIN2gr5tag_tESaIS1_EEC1Ev,_ZNSt6vectorIN2gr5tag_tESaIS1_EEC2Ev
 7809              		.section	.text._ZNSt6vectorIN2gr5tag_tESaIS1_EED2Ev,"axG",@progbits,_ZNSt6vectorIN2gr5tag_tESaIS1_
 7810              		.align 2
 7811              		.weak	_ZNSt6vectorIN2gr5tag_tESaIS1_EED2Ev
 7813              	_ZNSt6vectorIN2gr5tag_tESaIS1_EED2Ev:
 7814              	.LFB12301:
 425:/usr/include/c++/6/bits/stl_vector.h ****       { std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 7815              		.loc 30 425 0
 7816              		.cfi_startproc
 7817              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 7818              		.cfi_lsda 0x1b,.LLSDA12301
 7819 0000 55       		pushq	%rbp
 7820              		.cfi_def_cfa_offset 16
 7821              		.cfi_offset 6, -16
 7822 0001 4889E5   		movq	%rsp, %rbp
 7823              		.cfi_def_cfa_register 6
 7824 0004 4883EC10 		subq	$16, %rsp
 7825 0008 48897DF8 		movq	%rdi, -8(%rbp)
 7826              	.LBB79:
 427:/usr/include/c++/6/bits/stl_vector.h **** 
 7827              		.loc 30 427 0
 7828 000c 488B45F8 		movq	-8(%rbp), %rax
 7829 0010 4889C7   		movq	%rax, %rdi
 7830 0013 E8000000 		call	_ZNSt12_Vector_baseIN2gr5tag_tESaIS1_EE19_M_get_Tp_allocatorEv
 7830      00
GAS LISTING /tmp/ccvUPO8Q.s 			page 341


 7831 0018 4889C2   		movq	%rax, %rdx
 426:/usr/include/c++/6/bits/stl_vector.h **** 		      _M_get_Tp_allocator()); }
 7832              		.loc 30 426 0
 7833 001b 488B45F8 		movq	-8(%rbp), %rax
 7834 001f 488B4808 		movq	8(%rax), %rcx
 7835 0023 488B45F8 		movq	-8(%rbp), %rax
 7836 0027 488B00   		movq	(%rax), %rax
 7837 002a 4889CE   		movq	%rcx, %rsi
 7838 002d 4889C7   		movq	%rax, %rdi
 7839 0030 E8000000 		call	_ZSt8_DestroyIPN2gr5tag_tES1_EvT_S3_RSaIT0_E
 7839      00
 427:/usr/include/c++/6/bits/stl_vector.h **** 
 7840              		.loc 30 427 0
 7841 0035 488B45F8 		movq	-8(%rbp), %rax
 7842 0039 4889C7   		movq	%rax, %rdi
 7843 003c E8000000 		call	_ZNSt12_Vector_baseIN2gr5tag_tESaIS1_EED2Ev
 7843      00
 7844              	.LBE79:
 7845 0041 90       		nop
 7846 0042 C9       		leave
 7847              		.cfi_def_cfa 7, 8
 7848 0043 C3       		ret
 7849              		.cfi_endproc
 7850              	.LFE12301:
 7851              		.section	.gcc_except_table
 7852              	.LLSDA12301:
 7853 0130 FF       		.byte	0xff
 7854 0131 FF       		.byte	0xff
 7855 0132 01       		.byte	0x1
 7856 0133 00       		.uleb128 .LLSDACSE12301-.LLSDACSB12301
 7857              	.LLSDACSB12301:
 7858              	.LLSDACSE12301:
 7859              		.section	.text._ZNSt6vectorIN2gr5tag_tESaIS1_EED2Ev,"axG",@progbits,_ZNSt6vectorIN2gr5tag_tESaIS1_
 7861              		.weak	_ZNSt6vectorIN2gr5tag_tESaIS1_EED1Ev
 7862              		.set	_ZNSt6vectorIN2gr5tag_tESaIS1_EED1Ev,_ZNSt6vectorIN2gr5tag_tESaIS1_EED2Ev
 7863              		.section	.text._ZNKSt6vectorIN2gr5tag_tESaIS1_EE4sizeEv,"axG",@progbits,_ZNKSt6vectorIN2gr5tag_tES
 7864              		.align 2
 7865              		.weak	_ZNKSt6vectorIN2gr5tag_tESaIS1_EE4sizeEv
 7867              	_ZNKSt6vectorIN2gr5tag_tESaIS1_EE4sizeEv:
 7868              	.LFB12303:
 655:/usr/include/c++/6/bits/stl_vector.h ****       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 7869              		.loc 30 655 0
 7870              		.cfi_startproc
 7871 0000 55       		pushq	%rbp
 7872              		.cfi_def_cfa_offset 16
 7873              		.cfi_offset 6, -16
 7874 0001 4889E5   		movq	%rsp, %rbp
 7875              		.cfi_def_cfa_register 6
 7876 0004 48897DF8 		movq	%rdi, -8(%rbp)
 656:/usr/include/c++/6/bits/stl_vector.h **** 
 7877              		.loc 30 656 0
 7878 0008 488B45F8 		movq	-8(%rbp), %rax
 7879 000c 488B4008 		movq	8(%rax), %rax
 7880 0010 4889C2   		movq	%rax, %rdx
 7881 0013 488B45F8 		movq	-8(%rbp), %rax
 7882 0017 488B00   		movq	(%rax), %rax
 7883 001a 4829C2   		subq	%rax, %rdx
GAS LISTING /tmp/ccvUPO8Q.s 			page 342


 7884 001d 4889D0   		movq	%rdx, %rax
 7885 0020 48C1F803 		sarq	$3, %rax
 7886 0024 4889C2   		movq	%rax, %rdx
 7887 0027 48B8B76D 		movabsq	$7905747460161236407, %rax
 7887      DBB66DDB 
 7887      B66D
 7888 0031 480FAFC2 		imulq	%rdx, %rax
 7889 0035 5D       		popq	%rbp
 7890              		.cfi_def_cfa 7, 8
 7891 0036 C3       		ret
 7892              		.cfi_endproc
 7893              	.LFE12303:
 7895              		.section	.text._ZNSt6vectorIN2gr5tag_tESaIS1_EEixEm,"axG",@progbits,_ZNSt6vectorIN2gr5tag_tESaIS1_
 7896              		.align 2
 7897              		.weak	_ZNSt6vectorIN2gr5tag_tESaIS1_EEixEm
 7899              	_ZNSt6vectorIN2gr5tag_tESaIS1_EEixEm:
 7900              	.LFB12304:
 780:/usr/include/c++/6/bits/stl_vector.h ****       { return *(this->_M_impl._M_start + __n); }
 7901              		.loc 30 780 0
 7902              		.cfi_startproc
 7903 0000 55       		pushq	%rbp
 7904              		.cfi_def_cfa_offset 16
 7905              		.cfi_offset 6, -16
 7906 0001 4889E5   		movq	%rsp, %rbp
 7907              		.cfi_def_cfa_register 6
 7908 0004 48897DF8 		movq	%rdi, -8(%rbp)
 7909 0008 488975F0 		movq	%rsi, -16(%rbp)
 7910              		.loc 30 781 0
 7911 000c 488B45F8 		movq	-8(%rbp), %rax
 7912 0010 488B08   		movq	(%rax), %rcx
 7913 0013 488B55F0 		movq	-16(%rbp), %rdx
 7914 0017 4889D0   		movq	%rdx, %rax
 7915 001a 48C1E003 		salq	$3, %rax
 7916 001e 4829D0   		subq	%rdx, %rax
 7917 0021 48C1E003 		salq	$3, %rax
 7918 0025 4801C8   		addq	%rcx, %rax
 7919 0028 5D       		popq	%rbp
 7920              		.cfi_def_cfa 7, 8
 7921 0029 C3       		ret
 7922              		.cfi_endproc
 7923              	.LFE12304:
 7925              		.section	.text._ZNSt6vectorIN2gr5tag_tESaIS1_EE5beginEv,"axG",@progbits,_ZNSt6vectorIN2gr5tag_tESa
 7926              		.align 2
 7927              		.weak	_ZNSt6vectorIN2gr5tag_tESaIS1_EE5beginEv
 7929              	_ZNSt6vectorIN2gr5tag_tESaIS1_EE5beginEv:
 7930              	.LFB12305:
 548:/usr/include/c++/6/bits/stl_vector.h ****       { return iterator(this->_M_impl._M_start); }
 7931              		.loc 30 548 0
 7932              		.cfi_startproc
 7933 0000 55       		pushq	%rbp
 7934              		.cfi_def_cfa_offset 16
 7935              		.cfi_offset 6, -16
 7936 0001 4889E5   		movq	%rsp, %rbp
 7937              		.cfi_def_cfa_register 6
 7938 0004 4883EC20 		subq	$32, %rsp
 7939 0008 48897DE8 		movq	%rdi, -24(%rbp)
 549:/usr/include/c++/6/bits/stl_vector.h **** 
GAS LISTING /tmp/ccvUPO8Q.s 			page 343


 7940              		.loc 30 549 0
 7941 000c 488B55E8 		movq	-24(%rbp), %rdx
 7942 0010 488D45F8 		leaq	-8(%rbp), %rax
 7943 0014 4889D6   		movq	%rdx, %rsi
 7944 0017 4889C7   		movq	%rax, %rdi
 7945 001a E8000000 		call	_ZN9__gnu_cxx17__normal_iteratorIPN2gr5tag_tESt6vectorIS2_SaIS2_EEEC1ERKS3_
 7945      00
 7946 001f 488B45F8 		movq	-8(%rbp), %rax
 7947 0023 C9       		leave
 7948              		.cfi_def_cfa 7, 8
 7949 0024 C3       		ret
 7950              		.cfi_endproc
 7951              	.LFE12305:
 7953              		.section	.text._ZN9__gnu_cxx17__normal_iteratorIPKN2gr5tag_tESt6vectorIS2_SaIS2_EEEC2IPS2_EERKNS0_
 7954              		.align 2
 7955              		.weak	_ZN9__gnu_cxx17__normal_iteratorIPKN2gr5tag_tESt6vectorIS2_SaIS2_EEEC2IPS2_EERKNS0_IT_NS_11_
 7957              	_ZN9__gnu_cxx17__normal_iteratorIPKN2gr5tag_tESt6vectorIS2_SaIS2_EEEC2IPS2_EERKNS0_IT_NS_11__enable
 7958              	.LFB12307:
 7959              		.file 32 "/usr/include/c++/6/bits/stl_iterator.h"
   1:/usr/include/c++/6/bits/stl_iterator.h **** // Iterators -*- C++ -*-
   2:/usr/include/c++/6/bits/stl_iterator.h **** 
   3:/usr/include/c++/6/bits/stl_iterator.h **** // Copyright (C) 2001-2016 Free Software Foundation, Inc.
   4:/usr/include/c++/6/bits/stl_iterator.h **** //
   5:/usr/include/c++/6/bits/stl_iterator.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/6/bits/stl_iterator.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/6/bits/stl_iterator.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/6/bits/stl_iterator.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/6/bits/stl_iterator.h **** // any later version.
  10:/usr/include/c++/6/bits/stl_iterator.h **** 
  11:/usr/include/c++/6/bits/stl_iterator.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/6/bits/stl_iterator.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/6/bits/stl_iterator.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/6/bits/stl_iterator.h **** // GNU General Public License for more details.
  15:/usr/include/c++/6/bits/stl_iterator.h **** 
  16:/usr/include/c++/6/bits/stl_iterator.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/6/bits/stl_iterator.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/6/bits/stl_iterator.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/6/bits/stl_iterator.h **** 
  20:/usr/include/c++/6/bits/stl_iterator.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/6/bits/stl_iterator.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/6/bits/stl_iterator.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/6/bits/stl_iterator.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/6/bits/stl_iterator.h **** 
  25:/usr/include/c++/6/bits/stl_iterator.h **** /*
  26:/usr/include/c++/6/bits/stl_iterator.h ****  *
  27:/usr/include/c++/6/bits/stl_iterator.h ****  * Copyright (c) 1994
  28:/usr/include/c++/6/bits/stl_iterator.h ****  * Hewlett-Packard Company
  29:/usr/include/c++/6/bits/stl_iterator.h ****  *
  30:/usr/include/c++/6/bits/stl_iterator.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:/usr/include/c++/6/bits/stl_iterator.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:/usr/include/c++/6/bits/stl_iterator.h ****  * provided that the above copyright notice appear in all copies and
  33:/usr/include/c++/6/bits/stl_iterator.h ****  * that both that copyright notice and this permission notice appear
  34:/usr/include/c++/6/bits/stl_iterator.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:/usr/include/c++/6/bits/stl_iterator.h ****  * representations about the suitability of this software for any
  36:/usr/include/c++/6/bits/stl_iterator.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:/usr/include/c++/6/bits/stl_iterator.h ****  *
  38:/usr/include/c++/6/bits/stl_iterator.h ****  *
GAS LISTING /tmp/ccvUPO8Q.s 			page 344


  39:/usr/include/c++/6/bits/stl_iterator.h ****  * Copyright (c) 1996-1998
  40:/usr/include/c++/6/bits/stl_iterator.h ****  * Silicon Graphics Computer Systems, Inc.
  41:/usr/include/c++/6/bits/stl_iterator.h ****  *
  42:/usr/include/c++/6/bits/stl_iterator.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:/usr/include/c++/6/bits/stl_iterator.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:/usr/include/c++/6/bits/stl_iterator.h ****  * provided that the above copyright notice appear in all copies and
  45:/usr/include/c++/6/bits/stl_iterator.h ****  * that both that copyright notice and this permission notice appear
  46:/usr/include/c++/6/bits/stl_iterator.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:/usr/include/c++/6/bits/stl_iterator.h ****  * representations about the suitability of this software for any
  48:/usr/include/c++/6/bits/stl_iterator.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:/usr/include/c++/6/bits/stl_iterator.h ****  */
  50:/usr/include/c++/6/bits/stl_iterator.h **** 
  51:/usr/include/c++/6/bits/stl_iterator.h **** /** @file bits/stl_iterator.h
  52:/usr/include/c++/6/bits/stl_iterator.h ****  *  This is an internal header file, included by other library headers.
  53:/usr/include/c++/6/bits/stl_iterator.h ****  *  Do not attempt to use it directly. @headername{iterator}
  54:/usr/include/c++/6/bits/stl_iterator.h ****  *
  55:/usr/include/c++/6/bits/stl_iterator.h ****  *  This file implements reverse_iterator, back_insert_iterator,
  56:/usr/include/c++/6/bits/stl_iterator.h ****  *  front_insert_iterator, insert_iterator, __normal_iterator, and their
  57:/usr/include/c++/6/bits/stl_iterator.h ****  *  supporting functions and overloaded operators.
  58:/usr/include/c++/6/bits/stl_iterator.h ****  */
  59:/usr/include/c++/6/bits/stl_iterator.h **** 
  60:/usr/include/c++/6/bits/stl_iterator.h **** #ifndef _STL_ITERATOR_H
  61:/usr/include/c++/6/bits/stl_iterator.h **** #define _STL_ITERATOR_H 1
  62:/usr/include/c++/6/bits/stl_iterator.h **** 
  63:/usr/include/c++/6/bits/stl_iterator.h **** #include <bits/cpp_type_traits.h>
  64:/usr/include/c++/6/bits/stl_iterator.h **** #include <ext/type_traits.h>
  65:/usr/include/c++/6/bits/stl_iterator.h **** #include <bits/move.h>
  66:/usr/include/c++/6/bits/stl_iterator.h **** #include <bits/ptr_traits.h>
  67:/usr/include/c++/6/bits/stl_iterator.h **** 
  68:/usr/include/c++/6/bits/stl_iterator.h **** namespace std _GLIBCXX_VISIBILITY(default)
  69:/usr/include/c++/6/bits/stl_iterator.h **** {
  70:/usr/include/c++/6/bits/stl_iterator.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  71:/usr/include/c++/6/bits/stl_iterator.h **** 
  72:/usr/include/c++/6/bits/stl_iterator.h ****   /**
  73:/usr/include/c++/6/bits/stl_iterator.h ****    * @addtogroup iterators
  74:/usr/include/c++/6/bits/stl_iterator.h ****    * @{
  75:/usr/include/c++/6/bits/stl_iterator.h ****    */
  76:/usr/include/c++/6/bits/stl_iterator.h **** 
  77:/usr/include/c++/6/bits/stl_iterator.h ****   // 24.4.1 Reverse iterators
  78:/usr/include/c++/6/bits/stl_iterator.h ****   /**
  79:/usr/include/c++/6/bits/stl_iterator.h ****    *  Bidirectional and random access iterators have corresponding reverse
  80:/usr/include/c++/6/bits/stl_iterator.h ****    *  %iterator adaptors that iterate through the data structure in the
  81:/usr/include/c++/6/bits/stl_iterator.h ****    *  opposite direction.  They have the same signatures as the corresponding
  82:/usr/include/c++/6/bits/stl_iterator.h ****    *  iterators.  The fundamental relation between a reverse %iterator and its
  83:/usr/include/c++/6/bits/stl_iterator.h ****    *  corresponding %iterator @c i is established by the identity:
  84:/usr/include/c++/6/bits/stl_iterator.h ****    *  @code
  85:/usr/include/c++/6/bits/stl_iterator.h ****    *      &*(reverse_iterator(i)) == &*(i - 1)
  86:/usr/include/c++/6/bits/stl_iterator.h ****    *  @endcode
  87:/usr/include/c++/6/bits/stl_iterator.h ****    *
  88:/usr/include/c++/6/bits/stl_iterator.h ****    *  <em>This mapping is dictated by the fact that while there is always a
  89:/usr/include/c++/6/bits/stl_iterator.h ****    *  pointer past the end of an array, there might not be a valid pointer
  90:/usr/include/c++/6/bits/stl_iterator.h ****    *  before the beginning of an array.</em> [24.4.1]/1,2
  91:/usr/include/c++/6/bits/stl_iterator.h ****    *
  92:/usr/include/c++/6/bits/stl_iterator.h ****    *  Reverse iterators can be tricky and surprising at first.  Their
  93:/usr/include/c++/6/bits/stl_iterator.h ****    *  semantics make sense, however, and the trickiness is a side effect of
  94:/usr/include/c++/6/bits/stl_iterator.h ****    *  the requirement that the iterators must be safe.
  95:/usr/include/c++/6/bits/stl_iterator.h ****   */
GAS LISTING /tmp/ccvUPO8Q.s 			page 345


  96:/usr/include/c++/6/bits/stl_iterator.h ****   template<typename _Iterator>
  97:/usr/include/c++/6/bits/stl_iterator.h ****     class reverse_iterator
  98:/usr/include/c++/6/bits/stl_iterator.h ****     : public iterator<typename iterator_traits<_Iterator>::iterator_category,
  99:/usr/include/c++/6/bits/stl_iterator.h **** 		      typename iterator_traits<_Iterator>::value_type,
 100:/usr/include/c++/6/bits/stl_iterator.h **** 		      typename iterator_traits<_Iterator>::difference_type,
 101:/usr/include/c++/6/bits/stl_iterator.h **** 		      typename iterator_traits<_Iterator>::pointer,
 102:/usr/include/c++/6/bits/stl_iterator.h ****                       typename iterator_traits<_Iterator>::reference>
 103:/usr/include/c++/6/bits/stl_iterator.h ****     {
 104:/usr/include/c++/6/bits/stl_iterator.h ****     protected:
 105:/usr/include/c++/6/bits/stl_iterator.h ****       _Iterator current;
 106:/usr/include/c++/6/bits/stl_iterator.h **** 
 107:/usr/include/c++/6/bits/stl_iterator.h ****       typedef iterator_traits<_Iterator>		__traits_type;
 108:/usr/include/c++/6/bits/stl_iterator.h **** 
 109:/usr/include/c++/6/bits/stl_iterator.h ****     public:
 110:/usr/include/c++/6/bits/stl_iterator.h ****       typedef _Iterator					iterator_type;
 111:/usr/include/c++/6/bits/stl_iterator.h ****       typedef typename __traits_type::difference_type	difference_type;
 112:/usr/include/c++/6/bits/stl_iterator.h ****       typedef typename __traits_type::pointer		pointer;
 113:/usr/include/c++/6/bits/stl_iterator.h ****       typedef typename __traits_type::reference		reference;
 114:/usr/include/c++/6/bits/stl_iterator.h **** 
 115:/usr/include/c++/6/bits/stl_iterator.h ****       /**
 116:/usr/include/c++/6/bits/stl_iterator.h ****        *  The default constructor value-initializes member @p current.
 117:/usr/include/c++/6/bits/stl_iterator.h ****        *  If it is a pointer, that means it is zero-initialized.
 118:/usr/include/c++/6/bits/stl_iterator.h ****       */
 119:/usr/include/c++/6/bits/stl_iterator.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 120:/usr/include/c++/6/bits/stl_iterator.h ****       // 235 No specification of default ctor for reverse_iterator
 121:/usr/include/c++/6/bits/stl_iterator.h ****       reverse_iterator() : current() { }
 122:/usr/include/c++/6/bits/stl_iterator.h **** 
 123:/usr/include/c++/6/bits/stl_iterator.h ****       /**
 124:/usr/include/c++/6/bits/stl_iterator.h ****        *  This %iterator will move in the opposite direction that @p x does.
 125:/usr/include/c++/6/bits/stl_iterator.h ****       */
 126:/usr/include/c++/6/bits/stl_iterator.h ****       explicit
 127:/usr/include/c++/6/bits/stl_iterator.h ****       reverse_iterator(iterator_type __x) : current(__x) { }
 128:/usr/include/c++/6/bits/stl_iterator.h **** 
 129:/usr/include/c++/6/bits/stl_iterator.h ****       /**
 130:/usr/include/c++/6/bits/stl_iterator.h ****        *  The copy constructor is normal.
 131:/usr/include/c++/6/bits/stl_iterator.h ****       */
 132:/usr/include/c++/6/bits/stl_iterator.h ****       reverse_iterator(const reverse_iterator& __x)
 133:/usr/include/c++/6/bits/stl_iterator.h ****       : current(__x.current) { }
 134:/usr/include/c++/6/bits/stl_iterator.h **** 
 135:/usr/include/c++/6/bits/stl_iterator.h ****       /**
 136:/usr/include/c++/6/bits/stl_iterator.h ****        *  A %reverse_iterator across other types can be copied if the
 137:/usr/include/c++/6/bits/stl_iterator.h ****        *  underlying %iterator can be converted to the type of @c current.
 138:/usr/include/c++/6/bits/stl_iterator.h ****       */
 139:/usr/include/c++/6/bits/stl_iterator.h ****       template<typename _Iter>
 140:/usr/include/c++/6/bits/stl_iterator.h ****         reverse_iterator(const reverse_iterator<_Iter>& __x)
 141:/usr/include/c++/6/bits/stl_iterator.h **** 	: current(__x.base()) { }
 142:/usr/include/c++/6/bits/stl_iterator.h **** 
 143:/usr/include/c++/6/bits/stl_iterator.h ****       /**
 144:/usr/include/c++/6/bits/stl_iterator.h ****        *  @return  @c current, the %iterator used for underlying work.
 145:/usr/include/c++/6/bits/stl_iterator.h ****       */
 146:/usr/include/c++/6/bits/stl_iterator.h ****       iterator_type
 147:/usr/include/c++/6/bits/stl_iterator.h ****       base() const
 148:/usr/include/c++/6/bits/stl_iterator.h ****       { return current; }
 149:/usr/include/c++/6/bits/stl_iterator.h **** 
 150:/usr/include/c++/6/bits/stl_iterator.h ****       /**
 151:/usr/include/c++/6/bits/stl_iterator.h ****        *  @return  A reference to the value at @c --current
 152:/usr/include/c++/6/bits/stl_iterator.h ****        *
GAS LISTING /tmp/ccvUPO8Q.s 			page 346


 153:/usr/include/c++/6/bits/stl_iterator.h ****        *  This requires that @c --current is dereferenceable.
 154:/usr/include/c++/6/bits/stl_iterator.h ****        *
 155:/usr/include/c++/6/bits/stl_iterator.h ****        *  @warning This implementation requires that for an iterator of the
 156:/usr/include/c++/6/bits/stl_iterator.h ****        *           underlying iterator type, @c x, a reference obtained by
 157:/usr/include/c++/6/bits/stl_iterator.h ****        *           @c *x remains valid after @c x has been modified or
 158:/usr/include/c++/6/bits/stl_iterator.h ****        *           destroyed. This is a bug: http://gcc.gnu.org/PR51823
 159:/usr/include/c++/6/bits/stl_iterator.h ****       */
 160:/usr/include/c++/6/bits/stl_iterator.h ****       reference
 161:/usr/include/c++/6/bits/stl_iterator.h ****       operator*() const
 162:/usr/include/c++/6/bits/stl_iterator.h ****       {
 163:/usr/include/c++/6/bits/stl_iterator.h **** 	_Iterator __tmp = current;
 164:/usr/include/c++/6/bits/stl_iterator.h **** 	return *--__tmp;
 165:/usr/include/c++/6/bits/stl_iterator.h ****       }
 166:/usr/include/c++/6/bits/stl_iterator.h **** 
 167:/usr/include/c++/6/bits/stl_iterator.h ****       /**
 168:/usr/include/c++/6/bits/stl_iterator.h ****        *  @return  A pointer to the value at @c --current
 169:/usr/include/c++/6/bits/stl_iterator.h ****        *
 170:/usr/include/c++/6/bits/stl_iterator.h ****        *  This requires that @c --current is dereferenceable.
 171:/usr/include/c++/6/bits/stl_iterator.h ****       */
 172:/usr/include/c++/6/bits/stl_iterator.h ****       pointer
 173:/usr/include/c++/6/bits/stl_iterator.h ****       operator->() const
 174:/usr/include/c++/6/bits/stl_iterator.h ****       { return &(operator*()); }
 175:/usr/include/c++/6/bits/stl_iterator.h **** 
 176:/usr/include/c++/6/bits/stl_iterator.h ****       /**
 177:/usr/include/c++/6/bits/stl_iterator.h ****        *  @return  @c *this
 178:/usr/include/c++/6/bits/stl_iterator.h ****        *
 179:/usr/include/c++/6/bits/stl_iterator.h ****        *  Decrements the underlying iterator.
 180:/usr/include/c++/6/bits/stl_iterator.h ****       */
 181:/usr/include/c++/6/bits/stl_iterator.h ****       reverse_iterator&
 182:/usr/include/c++/6/bits/stl_iterator.h ****       operator++()
 183:/usr/include/c++/6/bits/stl_iterator.h ****       {
 184:/usr/include/c++/6/bits/stl_iterator.h **** 	--current;
 185:/usr/include/c++/6/bits/stl_iterator.h **** 	return *this;
 186:/usr/include/c++/6/bits/stl_iterator.h ****       }
 187:/usr/include/c++/6/bits/stl_iterator.h **** 
 188:/usr/include/c++/6/bits/stl_iterator.h ****       /**
 189:/usr/include/c++/6/bits/stl_iterator.h ****        *  @return  The original value of @c *this
 190:/usr/include/c++/6/bits/stl_iterator.h ****        *
 191:/usr/include/c++/6/bits/stl_iterator.h ****        *  Decrements the underlying iterator.
 192:/usr/include/c++/6/bits/stl_iterator.h ****       */
 193:/usr/include/c++/6/bits/stl_iterator.h ****       reverse_iterator
 194:/usr/include/c++/6/bits/stl_iterator.h ****       operator++(int)
 195:/usr/include/c++/6/bits/stl_iterator.h ****       {
 196:/usr/include/c++/6/bits/stl_iterator.h **** 	reverse_iterator __tmp = *this;
 197:/usr/include/c++/6/bits/stl_iterator.h **** 	--current;
 198:/usr/include/c++/6/bits/stl_iterator.h **** 	return __tmp;
 199:/usr/include/c++/6/bits/stl_iterator.h ****       }
 200:/usr/include/c++/6/bits/stl_iterator.h **** 
 201:/usr/include/c++/6/bits/stl_iterator.h ****       /**
 202:/usr/include/c++/6/bits/stl_iterator.h ****        *  @return  @c *this
 203:/usr/include/c++/6/bits/stl_iterator.h ****        *
 204:/usr/include/c++/6/bits/stl_iterator.h ****        *  Increments the underlying iterator.
 205:/usr/include/c++/6/bits/stl_iterator.h ****       */
 206:/usr/include/c++/6/bits/stl_iterator.h ****       reverse_iterator&
 207:/usr/include/c++/6/bits/stl_iterator.h ****       operator--()
 208:/usr/include/c++/6/bits/stl_iterator.h ****       {
 209:/usr/include/c++/6/bits/stl_iterator.h **** 	++current;
GAS LISTING /tmp/ccvUPO8Q.s 			page 347


 210:/usr/include/c++/6/bits/stl_iterator.h **** 	return *this;
 211:/usr/include/c++/6/bits/stl_iterator.h ****       }
 212:/usr/include/c++/6/bits/stl_iterator.h **** 
 213:/usr/include/c++/6/bits/stl_iterator.h ****       /**
 214:/usr/include/c++/6/bits/stl_iterator.h ****        *  @return  A reverse_iterator with the previous value of @c *this
 215:/usr/include/c++/6/bits/stl_iterator.h ****        *
 216:/usr/include/c++/6/bits/stl_iterator.h ****        *  Increments the underlying iterator.
 217:/usr/include/c++/6/bits/stl_iterator.h ****       */
 218:/usr/include/c++/6/bits/stl_iterator.h ****       reverse_iterator
 219:/usr/include/c++/6/bits/stl_iterator.h ****       operator--(int)
 220:/usr/include/c++/6/bits/stl_iterator.h ****       {
 221:/usr/include/c++/6/bits/stl_iterator.h **** 	reverse_iterator __tmp = *this;
 222:/usr/include/c++/6/bits/stl_iterator.h **** 	++current;
 223:/usr/include/c++/6/bits/stl_iterator.h **** 	return __tmp;
 224:/usr/include/c++/6/bits/stl_iterator.h ****       }
 225:/usr/include/c++/6/bits/stl_iterator.h **** 
 226:/usr/include/c++/6/bits/stl_iterator.h ****       /**
 227:/usr/include/c++/6/bits/stl_iterator.h ****        *  @return  A reverse_iterator that refers to @c current - @a __n
 228:/usr/include/c++/6/bits/stl_iterator.h ****        *
 229:/usr/include/c++/6/bits/stl_iterator.h ****        *  The underlying iterator must be a Random Access Iterator.
 230:/usr/include/c++/6/bits/stl_iterator.h ****       */
 231:/usr/include/c++/6/bits/stl_iterator.h ****       reverse_iterator
 232:/usr/include/c++/6/bits/stl_iterator.h ****       operator+(difference_type __n) const
 233:/usr/include/c++/6/bits/stl_iterator.h ****       { return reverse_iterator(current - __n); }
 234:/usr/include/c++/6/bits/stl_iterator.h **** 
 235:/usr/include/c++/6/bits/stl_iterator.h ****       /**
 236:/usr/include/c++/6/bits/stl_iterator.h ****        *  @return  *this
 237:/usr/include/c++/6/bits/stl_iterator.h ****        *
 238:/usr/include/c++/6/bits/stl_iterator.h ****        *  Moves the underlying iterator backwards @a __n steps.
 239:/usr/include/c++/6/bits/stl_iterator.h ****        *  The underlying iterator must be a Random Access Iterator.
 240:/usr/include/c++/6/bits/stl_iterator.h ****       */
 241:/usr/include/c++/6/bits/stl_iterator.h ****       reverse_iterator&
 242:/usr/include/c++/6/bits/stl_iterator.h ****       operator+=(difference_type __n)
 243:/usr/include/c++/6/bits/stl_iterator.h ****       {
 244:/usr/include/c++/6/bits/stl_iterator.h **** 	current -= __n;
 245:/usr/include/c++/6/bits/stl_iterator.h **** 	return *this;
 246:/usr/include/c++/6/bits/stl_iterator.h ****       }
 247:/usr/include/c++/6/bits/stl_iterator.h **** 
 248:/usr/include/c++/6/bits/stl_iterator.h ****       /**
 249:/usr/include/c++/6/bits/stl_iterator.h ****        *  @return  A reverse_iterator that refers to @c current - @a __n
 250:/usr/include/c++/6/bits/stl_iterator.h ****        *
 251:/usr/include/c++/6/bits/stl_iterator.h ****        *  The underlying iterator must be a Random Access Iterator.
 252:/usr/include/c++/6/bits/stl_iterator.h ****       */
 253:/usr/include/c++/6/bits/stl_iterator.h ****       reverse_iterator
 254:/usr/include/c++/6/bits/stl_iterator.h ****       operator-(difference_type __n) const
 255:/usr/include/c++/6/bits/stl_iterator.h ****       { return reverse_iterator(current + __n); }
 256:/usr/include/c++/6/bits/stl_iterator.h **** 
 257:/usr/include/c++/6/bits/stl_iterator.h ****       /**
 258:/usr/include/c++/6/bits/stl_iterator.h ****        *  @return  *this
 259:/usr/include/c++/6/bits/stl_iterator.h ****        *
 260:/usr/include/c++/6/bits/stl_iterator.h ****        *  Moves the underlying iterator forwards @a __n steps.
 261:/usr/include/c++/6/bits/stl_iterator.h ****        *  The underlying iterator must be a Random Access Iterator.
 262:/usr/include/c++/6/bits/stl_iterator.h ****       */
 263:/usr/include/c++/6/bits/stl_iterator.h ****       reverse_iterator&
 264:/usr/include/c++/6/bits/stl_iterator.h ****       operator-=(difference_type __n)
 265:/usr/include/c++/6/bits/stl_iterator.h ****       {
 266:/usr/include/c++/6/bits/stl_iterator.h **** 	current += __n;
GAS LISTING /tmp/ccvUPO8Q.s 			page 348


 267:/usr/include/c++/6/bits/stl_iterator.h **** 	return *this;
 268:/usr/include/c++/6/bits/stl_iterator.h ****       }
 269:/usr/include/c++/6/bits/stl_iterator.h **** 
 270:/usr/include/c++/6/bits/stl_iterator.h ****       /**
 271:/usr/include/c++/6/bits/stl_iterator.h ****        *  @return  The value at @c current - @a __n - 1
 272:/usr/include/c++/6/bits/stl_iterator.h ****        *
 273:/usr/include/c++/6/bits/stl_iterator.h ****        *  The underlying iterator must be a Random Access Iterator.
 274:/usr/include/c++/6/bits/stl_iterator.h ****       */
 275:/usr/include/c++/6/bits/stl_iterator.h ****       reference
 276:/usr/include/c++/6/bits/stl_iterator.h ****       operator[](difference_type __n) const
 277:/usr/include/c++/6/bits/stl_iterator.h ****       { return *(*this + __n); }
 278:/usr/include/c++/6/bits/stl_iterator.h ****     };
 279:/usr/include/c++/6/bits/stl_iterator.h **** 
 280:/usr/include/c++/6/bits/stl_iterator.h ****   //@{
 281:/usr/include/c++/6/bits/stl_iterator.h ****   /**
 282:/usr/include/c++/6/bits/stl_iterator.h ****    *  @param  __x  A %reverse_iterator.
 283:/usr/include/c++/6/bits/stl_iterator.h ****    *  @param  __y  A %reverse_iterator.
 284:/usr/include/c++/6/bits/stl_iterator.h ****    *  @return  A simple bool.
 285:/usr/include/c++/6/bits/stl_iterator.h ****    *
 286:/usr/include/c++/6/bits/stl_iterator.h ****    *  Reverse iterators forward many operations to their underlying base()
 287:/usr/include/c++/6/bits/stl_iterator.h ****    *  iterators.  Others are implemented in terms of one another.
 288:/usr/include/c++/6/bits/stl_iterator.h ****    *
 289:/usr/include/c++/6/bits/stl_iterator.h ****   */
 290:/usr/include/c++/6/bits/stl_iterator.h ****   template<typename _Iterator>
 291:/usr/include/c++/6/bits/stl_iterator.h ****     inline bool
 292:/usr/include/c++/6/bits/stl_iterator.h ****     operator==(const reverse_iterator<_Iterator>& __x,
 293:/usr/include/c++/6/bits/stl_iterator.h **** 	       const reverse_iterator<_Iterator>& __y)
 294:/usr/include/c++/6/bits/stl_iterator.h ****     { return __x.base() == __y.base(); }
 295:/usr/include/c++/6/bits/stl_iterator.h **** 
 296:/usr/include/c++/6/bits/stl_iterator.h ****   template<typename _Iterator>
 297:/usr/include/c++/6/bits/stl_iterator.h ****     inline bool
 298:/usr/include/c++/6/bits/stl_iterator.h ****     operator<(const reverse_iterator<_Iterator>& __x,
 299:/usr/include/c++/6/bits/stl_iterator.h **** 	      const reverse_iterator<_Iterator>& __y)
 300:/usr/include/c++/6/bits/stl_iterator.h ****     { return __y.base() < __x.base(); }
 301:/usr/include/c++/6/bits/stl_iterator.h **** 
 302:/usr/include/c++/6/bits/stl_iterator.h ****   template<typename _Iterator>
 303:/usr/include/c++/6/bits/stl_iterator.h ****     inline bool
 304:/usr/include/c++/6/bits/stl_iterator.h ****     operator!=(const reverse_iterator<_Iterator>& __x,
 305:/usr/include/c++/6/bits/stl_iterator.h **** 	       const reverse_iterator<_Iterator>& __y)
 306:/usr/include/c++/6/bits/stl_iterator.h ****     { return !(__x == __y); }
 307:/usr/include/c++/6/bits/stl_iterator.h **** 
 308:/usr/include/c++/6/bits/stl_iterator.h ****   template<typename _Iterator>
 309:/usr/include/c++/6/bits/stl_iterator.h ****     inline bool
 310:/usr/include/c++/6/bits/stl_iterator.h ****     operator>(const reverse_iterator<_Iterator>& __x,
 311:/usr/include/c++/6/bits/stl_iterator.h **** 	      const reverse_iterator<_Iterator>& __y)
 312:/usr/include/c++/6/bits/stl_iterator.h ****     { return __y < __x; }
 313:/usr/include/c++/6/bits/stl_iterator.h **** 
 314:/usr/include/c++/6/bits/stl_iterator.h ****   template<typename _Iterator>
 315:/usr/include/c++/6/bits/stl_iterator.h ****     inline bool
 316:/usr/include/c++/6/bits/stl_iterator.h ****     operator<=(const reverse_iterator<_Iterator>& __x,
 317:/usr/include/c++/6/bits/stl_iterator.h **** 	       const reverse_iterator<_Iterator>& __y)
 318:/usr/include/c++/6/bits/stl_iterator.h ****     { return !(__y < __x); }
 319:/usr/include/c++/6/bits/stl_iterator.h **** 
 320:/usr/include/c++/6/bits/stl_iterator.h ****   template<typename _Iterator>
 321:/usr/include/c++/6/bits/stl_iterator.h ****     inline bool
 322:/usr/include/c++/6/bits/stl_iterator.h ****     operator>=(const reverse_iterator<_Iterator>& __x,
 323:/usr/include/c++/6/bits/stl_iterator.h **** 	       const reverse_iterator<_Iterator>& __y)
GAS LISTING /tmp/ccvUPO8Q.s 			page 349


 324:/usr/include/c++/6/bits/stl_iterator.h ****     { return !(__x < __y); }
 325:/usr/include/c++/6/bits/stl_iterator.h **** 
 326:/usr/include/c++/6/bits/stl_iterator.h ****   template<typename _Iterator>
 327:/usr/include/c++/6/bits/stl_iterator.h **** #if __cplusplus < 201103L
 328:/usr/include/c++/6/bits/stl_iterator.h ****     inline typename reverse_iterator<_Iterator>::difference_type
 329:/usr/include/c++/6/bits/stl_iterator.h ****     operator-(const reverse_iterator<_Iterator>& __x,
 330:/usr/include/c++/6/bits/stl_iterator.h **** 	      const reverse_iterator<_Iterator>& __y)
 331:/usr/include/c++/6/bits/stl_iterator.h **** #else
 332:/usr/include/c++/6/bits/stl_iterator.h ****     inline auto
 333:/usr/include/c++/6/bits/stl_iterator.h ****     operator-(const reverse_iterator<_Iterator>& __x,
 334:/usr/include/c++/6/bits/stl_iterator.h **** 	      const reverse_iterator<_Iterator>& __y)
 335:/usr/include/c++/6/bits/stl_iterator.h ****     -> decltype(__x.base() - __y.base())
 336:/usr/include/c++/6/bits/stl_iterator.h **** #endif
 337:/usr/include/c++/6/bits/stl_iterator.h ****     { return __y.base() - __x.base(); }
 338:/usr/include/c++/6/bits/stl_iterator.h **** 
 339:/usr/include/c++/6/bits/stl_iterator.h ****   template<typename _Iterator>
 340:/usr/include/c++/6/bits/stl_iterator.h ****     inline reverse_iterator<_Iterator>
 341:/usr/include/c++/6/bits/stl_iterator.h ****     operator+(typename reverse_iterator<_Iterator>::difference_type __n,
 342:/usr/include/c++/6/bits/stl_iterator.h **** 	      const reverse_iterator<_Iterator>& __x)
 343:/usr/include/c++/6/bits/stl_iterator.h ****     { return reverse_iterator<_Iterator>(__x.base() - __n); }
 344:/usr/include/c++/6/bits/stl_iterator.h **** 
 345:/usr/include/c++/6/bits/stl_iterator.h ****   // _GLIBCXX_RESOLVE_LIB_DEFECTS
 346:/usr/include/c++/6/bits/stl_iterator.h ****   // DR 280. Comparison of reverse_iterator to const reverse_iterator.
 347:/usr/include/c++/6/bits/stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 348:/usr/include/c++/6/bits/stl_iterator.h ****     inline bool
 349:/usr/include/c++/6/bits/stl_iterator.h ****     operator==(const reverse_iterator<_IteratorL>& __x,
 350:/usr/include/c++/6/bits/stl_iterator.h **** 	       const reverse_iterator<_IteratorR>& __y)
 351:/usr/include/c++/6/bits/stl_iterator.h ****     { return __x.base() == __y.base(); }
 352:/usr/include/c++/6/bits/stl_iterator.h **** 
 353:/usr/include/c++/6/bits/stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 354:/usr/include/c++/6/bits/stl_iterator.h ****     inline bool
 355:/usr/include/c++/6/bits/stl_iterator.h ****     operator<(const reverse_iterator<_IteratorL>& __x,
 356:/usr/include/c++/6/bits/stl_iterator.h **** 	      const reverse_iterator<_IteratorR>& __y)
 357:/usr/include/c++/6/bits/stl_iterator.h ****     { return __y.base() < __x.base(); }
 358:/usr/include/c++/6/bits/stl_iterator.h **** 
 359:/usr/include/c++/6/bits/stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 360:/usr/include/c++/6/bits/stl_iterator.h ****     inline bool
 361:/usr/include/c++/6/bits/stl_iterator.h ****     operator!=(const reverse_iterator<_IteratorL>& __x,
 362:/usr/include/c++/6/bits/stl_iterator.h **** 	       const reverse_iterator<_IteratorR>& __y)
 363:/usr/include/c++/6/bits/stl_iterator.h ****     { return !(__x == __y); }
 364:/usr/include/c++/6/bits/stl_iterator.h **** 
 365:/usr/include/c++/6/bits/stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 366:/usr/include/c++/6/bits/stl_iterator.h ****     inline bool
 367:/usr/include/c++/6/bits/stl_iterator.h ****     operator>(const reverse_iterator<_IteratorL>& __x,
 368:/usr/include/c++/6/bits/stl_iterator.h **** 	      const reverse_iterator<_IteratorR>& __y)
 369:/usr/include/c++/6/bits/stl_iterator.h ****     { return __y < __x; }
 370:/usr/include/c++/6/bits/stl_iterator.h **** 
 371:/usr/include/c++/6/bits/stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 372:/usr/include/c++/6/bits/stl_iterator.h ****     inline bool
 373:/usr/include/c++/6/bits/stl_iterator.h ****     operator<=(const reverse_iterator<_IteratorL>& __x,
 374:/usr/include/c++/6/bits/stl_iterator.h **** 	       const reverse_iterator<_IteratorR>& __y)
 375:/usr/include/c++/6/bits/stl_iterator.h ****     { return !(__y < __x); }
 376:/usr/include/c++/6/bits/stl_iterator.h **** 
 377:/usr/include/c++/6/bits/stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 378:/usr/include/c++/6/bits/stl_iterator.h ****     inline bool
 379:/usr/include/c++/6/bits/stl_iterator.h ****     operator>=(const reverse_iterator<_IteratorL>& __x,
 380:/usr/include/c++/6/bits/stl_iterator.h **** 	       const reverse_iterator<_IteratorR>& __y)
GAS LISTING /tmp/ccvUPO8Q.s 			page 350


 381:/usr/include/c++/6/bits/stl_iterator.h ****     { return !(__x < __y); }
 382:/usr/include/c++/6/bits/stl_iterator.h **** 
 383:/usr/include/c++/6/bits/stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 384:/usr/include/c++/6/bits/stl_iterator.h **** #if __cplusplus >= 201103L
 385:/usr/include/c++/6/bits/stl_iterator.h ****     // DR 685.
 386:/usr/include/c++/6/bits/stl_iterator.h ****     inline auto
 387:/usr/include/c++/6/bits/stl_iterator.h ****     operator-(const reverse_iterator<_IteratorL>& __x,
 388:/usr/include/c++/6/bits/stl_iterator.h **** 	      const reverse_iterator<_IteratorR>& __y)
 389:/usr/include/c++/6/bits/stl_iterator.h ****     -> decltype(__y.base() - __x.base())
 390:/usr/include/c++/6/bits/stl_iterator.h **** #else
 391:/usr/include/c++/6/bits/stl_iterator.h ****     inline typename reverse_iterator<_IteratorL>::difference_type
 392:/usr/include/c++/6/bits/stl_iterator.h ****     operator-(const reverse_iterator<_IteratorL>& __x,
 393:/usr/include/c++/6/bits/stl_iterator.h **** 	      const reverse_iterator<_IteratorR>& __y)
 394:/usr/include/c++/6/bits/stl_iterator.h **** #endif
 395:/usr/include/c++/6/bits/stl_iterator.h ****     { return __y.base() - __x.base(); }
 396:/usr/include/c++/6/bits/stl_iterator.h ****   //@}
 397:/usr/include/c++/6/bits/stl_iterator.h **** 
 398:/usr/include/c++/6/bits/stl_iterator.h **** #if __cplusplus >= 201103L
 399:/usr/include/c++/6/bits/stl_iterator.h ****   // Same as C++14 make_reverse_iterator but used in C++03 mode too.
 400:/usr/include/c++/6/bits/stl_iterator.h ****   template<typename _Iterator>
 401:/usr/include/c++/6/bits/stl_iterator.h ****     inline reverse_iterator<_Iterator>
 402:/usr/include/c++/6/bits/stl_iterator.h ****     __make_reverse_iterator(_Iterator __i)
 403:/usr/include/c++/6/bits/stl_iterator.h ****     { return reverse_iterator<_Iterator>(__i); }
 404:/usr/include/c++/6/bits/stl_iterator.h **** 
 405:/usr/include/c++/6/bits/stl_iterator.h **** # if __cplusplus > 201103L
 406:/usr/include/c++/6/bits/stl_iterator.h **** #  define __cpp_lib_make_reverse_iterator 201402
 407:/usr/include/c++/6/bits/stl_iterator.h **** 
 408:/usr/include/c++/6/bits/stl_iterator.h ****   // _GLIBCXX_RESOLVE_LIB_DEFECTS
 409:/usr/include/c++/6/bits/stl_iterator.h ****   // DR 2285. make_reverse_iterator
 410:/usr/include/c++/6/bits/stl_iterator.h ****   /// Generator function for reverse_iterator.
 411:/usr/include/c++/6/bits/stl_iterator.h ****   template<typename _Iterator>
 412:/usr/include/c++/6/bits/stl_iterator.h ****     inline reverse_iterator<_Iterator>
 413:/usr/include/c++/6/bits/stl_iterator.h ****     make_reverse_iterator(_Iterator __i)
 414:/usr/include/c++/6/bits/stl_iterator.h ****     { return reverse_iterator<_Iterator>(__i); }
 415:/usr/include/c++/6/bits/stl_iterator.h **** # endif
 416:/usr/include/c++/6/bits/stl_iterator.h **** #endif
 417:/usr/include/c++/6/bits/stl_iterator.h **** 
 418:/usr/include/c++/6/bits/stl_iterator.h **** #if __cplusplus >= 201103L
 419:/usr/include/c++/6/bits/stl_iterator.h ****   template<typename _Iterator>
 420:/usr/include/c++/6/bits/stl_iterator.h ****     auto
 421:/usr/include/c++/6/bits/stl_iterator.h ****     __niter_base(reverse_iterator<_Iterator> __it)
 422:/usr/include/c++/6/bits/stl_iterator.h ****     -> decltype(__make_reverse_iterator(__niter_base(__it.base())))
 423:/usr/include/c++/6/bits/stl_iterator.h ****     { return __make_reverse_iterator(__niter_base(__it.base())); }
 424:/usr/include/c++/6/bits/stl_iterator.h **** 
 425:/usr/include/c++/6/bits/stl_iterator.h ****   template<typename _Iterator>
 426:/usr/include/c++/6/bits/stl_iterator.h ****     struct __is_move_iterator<reverse_iterator<_Iterator> >
 427:/usr/include/c++/6/bits/stl_iterator.h ****       : __is_move_iterator<_Iterator>
 428:/usr/include/c++/6/bits/stl_iterator.h ****     { };
 429:/usr/include/c++/6/bits/stl_iterator.h **** 
 430:/usr/include/c++/6/bits/stl_iterator.h ****   template<typename _Iterator>
 431:/usr/include/c++/6/bits/stl_iterator.h ****     auto
 432:/usr/include/c++/6/bits/stl_iterator.h ****     __miter_base(reverse_iterator<_Iterator> __it)
 433:/usr/include/c++/6/bits/stl_iterator.h ****     -> decltype(__make_reverse_iterator(__miter_base(__it.base())))
 434:/usr/include/c++/6/bits/stl_iterator.h ****     { return __make_reverse_iterator(__miter_base(__it.base())); }
 435:/usr/include/c++/6/bits/stl_iterator.h **** #endif
 436:/usr/include/c++/6/bits/stl_iterator.h **** 
 437:/usr/include/c++/6/bits/stl_iterator.h ****   // 24.4.2.2.1 back_insert_iterator
GAS LISTING /tmp/ccvUPO8Q.s 			page 351


 438:/usr/include/c++/6/bits/stl_iterator.h ****   /**
 439:/usr/include/c++/6/bits/stl_iterator.h ****    *  @brief  Turns assignment into insertion.
 440:/usr/include/c++/6/bits/stl_iterator.h ****    *
 441:/usr/include/c++/6/bits/stl_iterator.h ****    *  These are output iterators, constructed from a container-of-T.
 442:/usr/include/c++/6/bits/stl_iterator.h ****    *  Assigning a T to the iterator appends it to the container using
 443:/usr/include/c++/6/bits/stl_iterator.h ****    *  push_back.
 444:/usr/include/c++/6/bits/stl_iterator.h ****    *
 445:/usr/include/c++/6/bits/stl_iterator.h ****    *  Tip:  Using the back_inserter function to create these iterators can
 446:/usr/include/c++/6/bits/stl_iterator.h ****    *  save typing.
 447:/usr/include/c++/6/bits/stl_iterator.h ****   */
 448:/usr/include/c++/6/bits/stl_iterator.h ****   template<typename _Container>
 449:/usr/include/c++/6/bits/stl_iterator.h ****     class back_insert_iterator
 450:/usr/include/c++/6/bits/stl_iterator.h ****     : public iterator<output_iterator_tag, void, void, void, void>
 451:/usr/include/c++/6/bits/stl_iterator.h ****     {
 452:/usr/include/c++/6/bits/stl_iterator.h ****     protected:
 453:/usr/include/c++/6/bits/stl_iterator.h ****       _Container* container;
 454:/usr/include/c++/6/bits/stl_iterator.h **** 
 455:/usr/include/c++/6/bits/stl_iterator.h ****     public:
 456:/usr/include/c++/6/bits/stl_iterator.h ****       /// A nested typedef for the type of whatever container you used.
 457:/usr/include/c++/6/bits/stl_iterator.h ****       typedef _Container          container_type;
 458:/usr/include/c++/6/bits/stl_iterator.h **** 
 459:/usr/include/c++/6/bits/stl_iterator.h ****       /// The only way to create this %iterator is with a container.
 460:/usr/include/c++/6/bits/stl_iterator.h ****       explicit
 461:/usr/include/c++/6/bits/stl_iterator.h ****       back_insert_iterator(_Container& __x)
 462:/usr/include/c++/6/bits/stl_iterator.h ****       : container(std::__addressof(__x)) { }
 463:/usr/include/c++/6/bits/stl_iterator.h **** 
 464:/usr/include/c++/6/bits/stl_iterator.h ****       /**
 465:/usr/include/c++/6/bits/stl_iterator.h ****        *  @param  __value  An instance of whatever type
 466:/usr/include/c++/6/bits/stl_iterator.h ****        *                 container_type::const_reference is; presumably a
 467:/usr/include/c++/6/bits/stl_iterator.h ****        *                 reference-to-const T for container<T>.
 468:/usr/include/c++/6/bits/stl_iterator.h ****        *  @return  This %iterator, for chained operations.
 469:/usr/include/c++/6/bits/stl_iterator.h ****        *
 470:/usr/include/c++/6/bits/stl_iterator.h ****        *  This kind of %iterator doesn't really have a @a position in the
 471:/usr/include/c++/6/bits/stl_iterator.h ****        *  container (you can think of the position as being permanently at
 472:/usr/include/c++/6/bits/stl_iterator.h ****        *  the end, if you like).  Assigning a value to the %iterator will
 473:/usr/include/c++/6/bits/stl_iterator.h ****        *  always append the value to the end of the container.
 474:/usr/include/c++/6/bits/stl_iterator.h ****       */
 475:/usr/include/c++/6/bits/stl_iterator.h **** #if __cplusplus < 201103L
 476:/usr/include/c++/6/bits/stl_iterator.h ****       back_insert_iterator&
 477:/usr/include/c++/6/bits/stl_iterator.h ****       operator=(typename _Container::const_reference __value)
 478:/usr/include/c++/6/bits/stl_iterator.h ****       {
 479:/usr/include/c++/6/bits/stl_iterator.h **** 	container->push_back(__value);
 480:/usr/include/c++/6/bits/stl_iterator.h **** 	return *this;
 481:/usr/include/c++/6/bits/stl_iterator.h ****       }
 482:/usr/include/c++/6/bits/stl_iterator.h **** #else
 483:/usr/include/c++/6/bits/stl_iterator.h ****       back_insert_iterator&
 484:/usr/include/c++/6/bits/stl_iterator.h ****       operator=(const typename _Container::value_type& __value)
 485:/usr/include/c++/6/bits/stl_iterator.h ****       {
 486:/usr/include/c++/6/bits/stl_iterator.h **** 	container->push_back(__value);
 487:/usr/include/c++/6/bits/stl_iterator.h **** 	return *this;
 488:/usr/include/c++/6/bits/stl_iterator.h ****       }
 489:/usr/include/c++/6/bits/stl_iterator.h **** 
 490:/usr/include/c++/6/bits/stl_iterator.h ****       back_insert_iterator&
 491:/usr/include/c++/6/bits/stl_iterator.h ****       operator=(typename _Container::value_type&& __value)
 492:/usr/include/c++/6/bits/stl_iterator.h ****       {
 493:/usr/include/c++/6/bits/stl_iterator.h **** 	container->push_back(std::move(__value));
 494:/usr/include/c++/6/bits/stl_iterator.h **** 	return *this;
GAS LISTING /tmp/ccvUPO8Q.s 			page 352


 495:/usr/include/c++/6/bits/stl_iterator.h ****       }
 496:/usr/include/c++/6/bits/stl_iterator.h **** #endif
 497:/usr/include/c++/6/bits/stl_iterator.h **** 
 498:/usr/include/c++/6/bits/stl_iterator.h ****       /// Simply returns *this.
 499:/usr/include/c++/6/bits/stl_iterator.h ****       back_insert_iterator&
 500:/usr/include/c++/6/bits/stl_iterator.h ****       operator*()
 501:/usr/include/c++/6/bits/stl_iterator.h ****       { return *this; }
 502:/usr/include/c++/6/bits/stl_iterator.h **** 
 503:/usr/include/c++/6/bits/stl_iterator.h ****       /// Simply returns *this.  (This %iterator does not @a move.)
 504:/usr/include/c++/6/bits/stl_iterator.h ****       back_insert_iterator&
 505:/usr/include/c++/6/bits/stl_iterator.h ****       operator++()
 506:/usr/include/c++/6/bits/stl_iterator.h ****       { return *this; }
 507:/usr/include/c++/6/bits/stl_iterator.h **** 
 508:/usr/include/c++/6/bits/stl_iterator.h ****       /// Simply returns *this.  (This %iterator does not @a move.)
 509:/usr/include/c++/6/bits/stl_iterator.h ****       back_insert_iterator
 510:/usr/include/c++/6/bits/stl_iterator.h ****       operator++(int)
 511:/usr/include/c++/6/bits/stl_iterator.h ****       { return *this; }
 512:/usr/include/c++/6/bits/stl_iterator.h ****     };
 513:/usr/include/c++/6/bits/stl_iterator.h **** 
 514:/usr/include/c++/6/bits/stl_iterator.h ****   /**
 515:/usr/include/c++/6/bits/stl_iterator.h ****    *  @param  __x  A container of arbitrary type.
 516:/usr/include/c++/6/bits/stl_iterator.h ****    *  @return  An instance of back_insert_iterator working on @p __x.
 517:/usr/include/c++/6/bits/stl_iterator.h ****    *
 518:/usr/include/c++/6/bits/stl_iterator.h ****    *  This wrapper function helps in creating back_insert_iterator instances.
 519:/usr/include/c++/6/bits/stl_iterator.h ****    *  Typing the name of the %iterator requires knowing the precise full
 520:/usr/include/c++/6/bits/stl_iterator.h ****    *  type of the container, which can be tedious and impedes generic
 521:/usr/include/c++/6/bits/stl_iterator.h ****    *  programming.  Using this function lets you take advantage of automatic
 522:/usr/include/c++/6/bits/stl_iterator.h ****    *  template parameter deduction, making the compiler match the correct
 523:/usr/include/c++/6/bits/stl_iterator.h ****    *  types for you.
 524:/usr/include/c++/6/bits/stl_iterator.h ****   */
 525:/usr/include/c++/6/bits/stl_iterator.h ****   template<typename _Container>
 526:/usr/include/c++/6/bits/stl_iterator.h ****     inline back_insert_iterator<_Container>
 527:/usr/include/c++/6/bits/stl_iterator.h ****     back_inserter(_Container& __x)
 528:/usr/include/c++/6/bits/stl_iterator.h ****     { return back_insert_iterator<_Container>(__x); }
 529:/usr/include/c++/6/bits/stl_iterator.h **** 
 530:/usr/include/c++/6/bits/stl_iterator.h ****   /**
 531:/usr/include/c++/6/bits/stl_iterator.h ****    *  @brief  Turns assignment into insertion.
 532:/usr/include/c++/6/bits/stl_iterator.h ****    *
 533:/usr/include/c++/6/bits/stl_iterator.h ****    *  These are output iterators, constructed from a container-of-T.
 534:/usr/include/c++/6/bits/stl_iterator.h ****    *  Assigning a T to the iterator prepends it to the container using
 535:/usr/include/c++/6/bits/stl_iterator.h ****    *  push_front.
 536:/usr/include/c++/6/bits/stl_iterator.h ****    *
 537:/usr/include/c++/6/bits/stl_iterator.h ****    *  Tip:  Using the front_inserter function to create these iterators can
 538:/usr/include/c++/6/bits/stl_iterator.h ****    *  save typing.
 539:/usr/include/c++/6/bits/stl_iterator.h ****   */
 540:/usr/include/c++/6/bits/stl_iterator.h ****   template<typename _Container>
 541:/usr/include/c++/6/bits/stl_iterator.h ****     class front_insert_iterator
 542:/usr/include/c++/6/bits/stl_iterator.h ****     : public iterator<output_iterator_tag, void, void, void, void>
 543:/usr/include/c++/6/bits/stl_iterator.h ****     {
 544:/usr/include/c++/6/bits/stl_iterator.h ****     protected:
 545:/usr/include/c++/6/bits/stl_iterator.h ****       _Container* container;
 546:/usr/include/c++/6/bits/stl_iterator.h **** 
 547:/usr/include/c++/6/bits/stl_iterator.h ****     public:
 548:/usr/include/c++/6/bits/stl_iterator.h ****       /// A nested typedef for the type of whatever container you used.
 549:/usr/include/c++/6/bits/stl_iterator.h ****       typedef _Container          container_type;
 550:/usr/include/c++/6/bits/stl_iterator.h **** 
 551:/usr/include/c++/6/bits/stl_iterator.h ****       /// The only way to create this %iterator is with a container.
GAS LISTING /tmp/ccvUPO8Q.s 			page 353


 552:/usr/include/c++/6/bits/stl_iterator.h ****       explicit front_insert_iterator(_Container& __x)
 553:/usr/include/c++/6/bits/stl_iterator.h ****       : container(std::__addressof(__x)) { }
 554:/usr/include/c++/6/bits/stl_iterator.h **** 
 555:/usr/include/c++/6/bits/stl_iterator.h ****       /**
 556:/usr/include/c++/6/bits/stl_iterator.h ****        *  @param  __value  An instance of whatever type
 557:/usr/include/c++/6/bits/stl_iterator.h ****        *                 container_type::const_reference is; presumably a
 558:/usr/include/c++/6/bits/stl_iterator.h ****        *                 reference-to-const T for container<T>.
 559:/usr/include/c++/6/bits/stl_iterator.h ****        *  @return  This %iterator, for chained operations.
 560:/usr/include/c++/6/bits/stl_iterator.h ****        *
 561:/usr/include/c++/6/bits/stl_iterator.h ****        *  This kind of %iterator doesn't really have a @a position in the
 562:/usr/include/c++/6/bits/stl_iterator.h ****        *  container (you can think of the position as being permanently at
 563:/usr/include/c++/6/bits/stl_iterator.h ****        *  the front, if you like).  Assigning a value to the %iterator will
 564:/usr/include/c++/6/bits/stl_iterator.h ****        *  always prepend the value to the front of the container.
 565:/usr/include/c++/6/bits/stl_iterator.h ****       */
 566:/usr/include/c++/6/bits/stl_iterator.h **** #if __cplusplus < 201103L
 567:/usr/include/c++/6/bits/stl_iterator.h ****       front_insert_iterator&
 568:/usr/include/c++/6/bits/stl_iterator.h ****       operator=(typename _Container::const_reference __value)
 569:/usr/include/c++/6/bits/stl_iterator.h ****       {
 570:/usr/include/c++/6/bits/stl_iterator.h **** 	container->push_front(__value);
 571:/usr/include/c++/6/bits/stl_iterator.h **** 	return *this;
 572:/usr/include/c++/6/bits/stl_iterator.h ****       }
 573:/usr/include/c++/6/bits/stl_iterator.h **** #else
 574:/usr/include/c++/6/bits/stl_iterator.h ****       front_insert_iterator&
 575:/usr/include/c++/6/bits/stl_iterator.h ****       operator=(const typename _Container::value_type& __value)
 576:/usr/include/c++/6/bits/stl_iterator.h ****       {
 577:/usr/include/c++/6/bits/stl_iterator.h **** 	container->push_front(__value);
 578:/usr/include/c++/6/bits/stl_iterator.h **** 	return *this;
 579:/usr/include/c++/6/bits/stl_iterator.h ****       }
 580:/usr/include/c++/6/bits/stl_iterator.h **** 
 581:/usr/include/c++/6/bits/stl_iterator.h ****       front_insert_iterator&
 582:/usr/include/c++/6/bits/stl_iterator.h ****       operator=(typename _Container::value_type&& __value)
 583:/usr/include/c++/6/bits/stl_iterator.h ****       {
 584:/usr/include/c++/6/bits/stl_iterator.h **** 	container->push_front(std::move(__value));
 585:/usr/include/c++/6/bits/stl_iterator.h **** 	return *this;
 586:/usr/include/c++/6/bits/stl_iterator.h ****       }
 587:/usr/include/c++/6/bits/stl_iterator.h **** #endif
 588:/usr/include/c++/6/bits/stl_iterator.h **** 
 589:/usr/include/c++/6/bits/stl_iterator.h ****       /// Simply returns *this.
 590:/usr/include/c++/6/bits/stl_iterator.h ****       front_insert_iterator&
 591:/usr/include/c++/6/bits/stl_iterator.h ****       operator*()
 592:/usr/include/c++/6/bits/stl_iterator.h ****       { return *this; }
 593:/usr/include/c++/6/bits/stl_iterator.h **** 
 594:/usr/include/c++/6/bits/stl_iterator.h ****       /// Simply returns *this.  (This %iterator does not @a move.)
 595:/usr/include/c++/6/bits/stl_iterator.h ****       front_insert_iterator&
 596:/usr/include/c++/6/bits/stl_iterator.h ****       operator++()
 597:/usr/include/c++/6/bits/stl_iterator.h ****       { return *this; }
 598:/usr/include/c++/6/bits/stl_iterator.h **** 
 599:/usr/include/c++/6/bits/stl_iterator.h ****       /// Simply returns *this.  (This %iterator does not @a move.)
 600:/usr/include/c++/6/bits/stl_iterator.h ****       front_insert_iterator
 601:/usr/include/c++/6/bits/stl_iterator.h ****       operator++(int)
 602:/usr/include/c++/6/bits/stl_iterator.h ****       { return *this; }
 603:/usr/include/c++/6/bits/stl_iterator.h ****     };
 604:/usr/include/c++/6/bits/stl_iterator.h **** 
 605:/usr/include/c++/6/bits/stl_iterator.h ****   /**
 606:/usr/include/c++/6/bits/stl_iterator.h ****    *  @param  __x  A container of arbitrary type.
 607:/usr/include/c++/6/bits/stl_iterator.h ****    *  @return  An instance of front_insert_iterator working on @p x.
 608:/usr/include/c++/6/bits/stl_iterator.h ****    *
GAS LISTING /tmp/ccvUPO8Q.s 			page 354


 609:/usr/include/c++/6/bits/stl_iterator.h ****    *  This wrapper function helps in creating front_insert_iterator instances.
 610:/usr/include/c++/6/bits/stl_iterator.h ****    *  Typing the name of the %iterator requires knowing the precise full
 611:/usr/include/c++/6/bits/stl_iterator.h ****    *  type of the container, which can be tedious and impedes generic
 612:/usr/include/c++/6/bits/stl_iterator.h ****    *  programming.  Using this function lets you take advantage of automatic
 613:/usr/include/c++/6/bits/stl_iterator.h ****    *  template parameter deduction, making the compiler match the correct
 614:/usr/include/c++/6/bits/stl_iterator.h ****    *  types for you.
 615:/usr/include/c++/6/bits/stl_iterator.h ****   */
 616:/usr/include/c++/6/bits/stl_iterator.h ****   template<typename _Container>
 617:/usr/include/c++/6/bits/stl_iterator.h ****     inline front_insert_iterator<_Container>
 618:/usr/include/c++/6/bits/stl_iterator.h ****     front_inserter(_Container& __x)
 619:/usr/include/c++/6/bits/stl_iterator.h ****     { return front_insert_iterator<_Container>(__x); }
 620:/usr/include/c++/6/bits/stl_iterator.h **** 
 621:/usr/include/c++/6/bits/stl_iterator.h ****   /**
 622:/usr/include/c++/6/bits/stl_iterator.h ****    *  @brief  Turns assignment into insertion.
 623:/usr/include/c++/6/bits/stl_iterator.h ****    *
 624:/usr/include/c++/6/bits/stl_iterator.h ****    *  These are output iterators, constructed from a container-of-T.
 625:/usr/include/c++/6/bits/stl_iterator.h ****    *  Assigning a T to the iterator inserts it in the container at the
 626:/usr/include/c++/6/bits/stl_iterator.h ****    *  %iterator's position, rather than overwriting the value at that
 627:/usr/include/c++/6/bits/stl_iterator.h ****    *  position.
 628:/usr/include/c++/6/bits/stl_iterator.h ****    *
 629:/usr/include/c++/6/bits/stl_iterator.h ****    *  (Sequences will actually insert a @e copy of the value before the
 630:/usr/include/c++/6/bits/stl_iterator.h ****    *  %iterator's position.)
 631:/usr/include/c++/6/bits/stl_iterator.h ****    *
 632:/usr/include/c++/6/bits/stl_iterator.h ****    *  Tip:  Using the inserter function to create these iterators can
 633:/usr/include/c++/6/bits/stl_iterator.h ****    *  save typing.
 634:/usr/include/c++/6/bits/stl_iterator.h ****   */
 635:/usr/include/c++/6/bits/stl_iterator.h ****   template<typename _Container>
 636:/usr/include/c++/6/bits/stl_iterator.h ****     class insert_iterator
 637:/usr/include/c++/6/bits/stl_iterator.h ****     : public iterator<output_iterator_tag, void, void, void, void>
 638:/usr/include/c++/6/bits/stl_iterator.h ****     {
 639:/usr/include/c++/6/bits/stl_iterator.h ****     protected:
 640:/usr/include/c++/6/bits/stl_iterator.h ****       _Container* container;
 641:/usr/include/c++/6/bits/stl_iterator.h ****       typename _Container::iterator iter;
 642:/usr/include/c++/6/bits/stl_iterator.h **** 
 643:/usr/include/c++/6/bits/stl_iterator.h ****     public:
 644:/usr/include/c++/6/bits/stl_iterator.h ****       /// A nested typedef for the type of whatever container you used.
 645:/usr/include/c++/6/bits/stl_iterator.h ****       typedef _Container          container_type;
 646:/usr/include/c++/6/bits/stl_iterator.h **** 
 647:/usr/include/c++/6/bits/stl_iterator.h ****       /**
 648:/usr/include/c++/6/bits/stl_iterator.h ****        *  The only way to create this %iterator is with a container and an
 649:/usr/include/c++/6/bits/stl_iterator.h ****        *  initial position (a normal %iterator into the container).
 650:/usr/include/c++/6/bits/stl_iterator.h ****       */
 651:/usr/include/c++/6/bits/stl_iterator.h ****       insert_iterator(_Container& __x, typename _Container::iterator __i)
 652:/usr/include/c++/6/bits/stl_iterator.h ****       : container(std::__addressof(__x)), iter(__i) {}
 653:/usr/include/c++/6/bits/stl_iterator.h **** 
 654:/usr/include/c++/6/bits/stl_iterator.h ****       /**
 655:/usr/include/c++/6/bits/stl_iterator.h ****        *  @param  __value  An instance of whatever type
 656:/usr/include/c++/6/bits/stl_iterator.h ****        *                 container_type::const_reference is; presumably a
 657:/usr/include/c++/6/bits/stl_iterator.h ****        *                 reference-to-const T for container<T>.
 658:/usr/include/c++/6/bits/stl_iterator.h ****        *  @return  This %iterator, for chained operations.
 659:/usr/include/c++/6/bits/stl_iterator.h ****        *
 660:/usr/include/c++/6/bits/stl_iterator.h ****        *  This kind of %iterator maintains its own position in the
 661:/usr/include/c++/6/bits/stl_iterator.h ****        *  container.  Assigning a value to the %iterator will insert the
 662:/usr/include/c++/6/bits/stl_iterator.h ****        *  value into the container at the place before the %iterator.
 663:/usr/include/c++/6/bits/stl_iterator.h ****        *
 664:/usr/include/c++/6/bits/stl_iterator.h ****        *  The position is maintained such that subsequent assignments will
 665:/usr/include/c++/6/bits/stl_iterator.h ****        *  insert values immediately after one another.  For example,
GAS LISTING /tmp/ccvUPO8Q.s 			page 355


 666:/usr/include/c++/6/bits/stl_iterator.h ****        *  @code
 667:/usr/include/c++/6/bits/stl_iterator.h ****        *     // vector v contains A and Z
 668:/usr/include/c++/6/bits/stl_iterator.h ****        *
 669:/usr/include/c++/6/bits/stl_iterator.h ****        *     insert_iterator i (v, ++v.begin());
 670:/usr/include/c++/6/bits/stl_iterator.h ****        *     i = 1;
 671:/usr/include/c++/6/bits/stl_iterator.h ****        *     i = 2;
 672:/usr/include/c++/6/bits/stl_iterator.h ****        *     i = 3;
 673:/usr/include/c++/6/bits/stl_iterator.h ****        *
 674:/usr/include/c++/6/bits/stl_iterator.h ****        *     // vector v contains A, 1, 2, 3, and Z
 675:/usr/include/c++/6/bits/stl_iterator.h ****        *  @endcode
 676:/usr/include/c++/6/bits/stl_iterator.h ****       */
 677:/usr/include/c++/6/bits/stl_iterator.h **** #if __cplusplus < 201103L
 678:/usr/include/c++/6/bits/stl_iterator.h ****       insert_iterator&
 679:/usr/include/c++/6/bits/stl_iterator.h ****       operator=(typename _Container::const_reference __value)
 680:/usr/include/c++/6/bits/stl_iterator.h ****       {
 681:/usr/include/c++/6/bits/stl_iterator.h **** 	iter = container->insert(iter, __value);
 682:/usr/include/c++/6/bits/stl_iterator.h **** 	++iter;
 683:/usr/include/c++/6/bits/stl_iterator.h **** 	return *this;
 684:/usr/include/c++/6/bits/stl_iterator.h ****       }
 685:/usr/include/c++/6/bits/stl_iterator.h **** #else
 686:/usr/include/c++/6/bits/stl_iterator.h ****       insert_iterator&
 687:/usr/include/c++/6/bits/stl_iterator.h ****       operator=(const typename _Container::value_type& __value)
 688:/usr/include/c++/6/bits/stl_iterator.h ****       {
 689:/usr/include/c++/6/bits/stl_iterator.h **** 	iter = container->insert(iter, __value);
 690:/usr/include/c++/6/bits/stl_iterator.h **** 	++iter;
 691:/usr/include/c++/6/bits/stl_iterator.h **** 	return *this;
 692:/usr/include/c++/6/bits/stl_iterator.h ****       }
 693:/usr/include/c++/6/bits/stl_iterator.h **** 
 694:/usr/include/c++/6/bits/stl_iterator.h ****       insert_iterator&
 695:/usr/include/c++/6/bits/stl_iterator.h ****       operator=(typename _Container::value_type&& __value)
 696:/usr/include/c++/6/bits/stl_iterator.h ****       {
 697:/usr/include/c++/6/bits/stl_iterator.h **** 	iter = container->insert(iter, std::move(__value));
 698:/usr/include/c++/6/bits/stl_iterator.h **** 	++iter;
 699:/usr/include/c++/6/bits/stl_iterator.h **** 	return *this;
 700:/usr/include/c++/6/bits/stl_iterator.h ****       }
 701:/usr/include/c++/6/bits/stl_iterator.h **** #endif
 702:/usr/include/c++/6/bits/stl_iterator.h **** 
 703:/usr/include/c++/6/bits/stl_iterator.h ****       /// Simply returns *this.
 704:/usr/include/c++/6/bits/stl_iterator.h ****       insert_iterator&
 705:/usr/include/c++/6/bits/stl_iterator.h ****       operator*()
 706:/usr/include/c++/6/bits/stl_iterator.h ****       { return *this; }
 707:/usr/include/c++/6/bits/stl_iterator.h **** 
 708:/usr/include/c++/6/bits/stl_iterator.h ****       /// Simply returns *this.  (This %iterator does not @a move.)
 709:/usr/include/c++/6/bits/stl_iterator.h ****       insert_iterator&
 710:/usr/include/c++/6/bits/stl_iterator.h ****       operator++()
 711:/usr/include/c++/6/bits/stl_iterator.h ****       { return *this; }
 712:/usr/include/c++/6/bits/stl_iterator.h **** 
 713:/usr/include/c++/6/bits/stl_iterator.h ****       /// Simply returns *this.  (This %iterator does not @a move.)
 714:/usr/include/c++/6/bits/stl_iterator.h ****       insert_iterator&
 715:/usr/include/c++/6/bits/stl_iterator.h ****       operator++(int)
 716:/usr/include/c++/6/bits/stl_iterator.h ****       { return *this; }
 717:/usr/include/c++/6/bits/stl_iterator.h ****     };
 718:/usr/include/c++/6/bits/stl_iterator.h **** 
 719:/usr/include/c++/6/bits/stl_iterator.h ****   /**
 720:/usr/include/c++/6/bits/stl_iterator.h ****    *  @param __x  A container of arbitrary type.
 721:/usr/include/c++/6/bits/stl_iterator.h ****    *  @return  An instance of insert_iterator working on @p __x.
 722:/usr/include/c++/6/bits/stl_iterator.h ****    *
GAS LISTING /tmp/ccvUPO8Q.s 			page 356


 723:/usr/include/c++/6/bits/stl_iterator.h ****    *  This wrapper function helps in creating insert_iterator instances.
 724:/usr/include/c++/6/bits/stl_iterator.h ****    *  Typing the name of the %iterator requires knowing the precise full
 725:/usr/include/c++/6/bits/stl_iterator.h ****    *  type of the container, which can be tedious and impedes generic
 726:/usr/include/c++/6/bits/stl_iterator.h ****    *  programming.  Using this function lets you take advantage of automatic
 727:/usr/include/c++/6/bits/stl_iterator.h ****    *  template parameter deduction, making the compiler match the correct
 728:/usr/include/c++/6/bits/stl_iterator.h ****    *  types for you.
 729:/usr/include/c++/6/bits/stl_iterator.h ****   */
 730:/usr/include/c++/6/bits/stl_iterator.h ****   template<typename _Container, typename _Iterator>
 731:/usr/include/c++/6/bits/stl_iterator.h ****     inline insert_iterator<_Container>
 732:/usr/include/c++/6/bits/stl_iterator.h ****     inserter(_Container& __x, _Iterator __i)
 733:/usr/include/c++/6/bits/stl_iterator.h ****     {
 734:/usr/include/c++/6/bits/stl_iterator.h ****       return insert_iterator<_Container>(__x,
 735:/usr/include/c++/6/bits/stl_iterator.h **** 					 typename _Container::iterator(__i));
 736:/usr/include/c++/6/bits/stl_iterator.h ****     }
 737:/usr/include/c++/6/bits/stl_iterator.h **** 
 738:/usr/include/c++/6/bits/stl_iterator.h ****   // @} group iterators
 739:/usr/include/c++/6/bits/stl_iterator.h **** 
 740:/usr/include/c++/6/bits/stl_iterator.h **** _GLIBCXX_END_NAMESPACE_VERSION
 741:/usr/include/c++/6/bits/stl_iterator.h **** } // namespace
 742:/usr/include/c++/6/bits/stl_iterator.h **** 
 743:/usr/include/c++/6/bits/stl_iterator.h **** namespace __gnu_cxx _GLIBCXX_VISIBILITY(default)
 744:/usr/include/c++/6/bits/stl_iterator.h **** {
 745:/usr/include/c++/6/bits/stl_iterator.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
 746:/usr/include/c++/6/bits/stl_iterator.h **** 
 747:/usr/include/c++/6/bits/stl_iterator.h ****   // This iterator adapter is @a normal in the sense that it does not
 748:/usr/include/c++/6/bits/stl_iterator.h ****   // change the semantics of any of the operators of its iterator
 749:/usr/include/c++/6/bits/stl_iterator.h ****   // parameter.  Its primary purpose is to convert an iterator that is
 750:/usr/include/c++/6/bits/stl_iterator.h ****   // not a class, e.g. a pointer, into an iterator that is a class.
 751:/usr/include/c++/6/bits/stl_iterator.h ****   // The _Container parameter exists solely so that different containers
 752:/usr/include/c++/6/bits/stl_iterator.h ****   // using this template can instantiate different types, even if the
 753:/usr/include/c++/6/bits/stl_iterator.h ****   // _Iterator parameter is the same.
 754:/usr/include/c++/6/bits/stl_iterator.h ****   using std::iterator_traits;
 755:/usr/include/c++/6/bits/stl_iterator.h ****   using std::iterator;
 756:/usr/include/c++/6/bits/stl_iterator.h ****   template<typename _Iterator, typename _Container>
 757:/usr/include/c++/6/bits/stl_iterator.h ****     class __normal_iterator
 758:/usr/include/c++/6/bits/stl_iterator.h ****     {
 759:/usr/include/c++/6/bits/stl_iterator.h ****     protected:
 760:/usr/include/c++/6/bits/stl_iterator.h ****       _Iterator _M_current;
 761:/usr/include/c++/6/bits/stl_iterator.h **** 
 762:/usr/include/c++/6/bits/stl_iterator.h ****       typedef iterator_traits<_Iterator>		__traits_type;
 763:/usr/include/c++/6/bits/stl_iterator.h **** 
 764:/usr/include/c++/6/bits/stl_iterator.h ****     public:
 765:/usr/include/c++/6/bits/stl_iterator.h ****       typedef _Iterator					iterator_type;
 766:/usr/include/c++/6/bits/stl_iterator.h ****       typedef typename __traits_type::iterator_category iterator_category;
 767:/usr/include/c++/6/bits/stl_iterator.h ****       typedef typename __traits_type::value_type  	value_type;
 768:/usr/include/c++/6/bits/stl_iterator.h ****       typedef typename __traits_type::difference_type 	difference_type;
 769:/usr/include/c++/6/bits/stl_iterator.h ****       typedef typename __traits_type::reference 	reference;
 770:/usr/include/c++/6/bits/stl_iterator.h ****       typedef typename __traits_type::pointer   	pointer;
 771:/usr/include/c++/6/bits/stl_iterator.h **** 
 772:/usr/include/c++/6/bits/stl_iterator.h ****       _GLIBCXX_CONSTEXPR __normal_iterator() _GLIBCXX_NOEXCEPT
 773:/usr/include/c++/6/bits/stl_iterator.h ****       : _M_current(_Iterator()) { }
 774:/usr/include/c++/6/bits/stl_iterator.h **** 
 775:/usr/include/c++/6/bits/stl_iterator.h ****       explicit
 776:/usr/include/c++/6/bits/stl_iterator.h ****       __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
 777:/usr/include/c++/6/bits/stl_iterator.h ****       : _M_current(__i) { }
 778:/usr/include/c++/6/bits/stl_iterator.h **** 
 779:/usr/include/c++/6/bits/stl_iterator.h ****       // Allow iterator to const_iterator conversion
GAS LISTING /tmp/ccvUPO8Q.s 			page 357


 780:/usr/include/c++/6/bits/stl_iterator.h ****       template<typename _Iter>
 781:/usr/include/c++/6/bits/stl_iterator.h ****         __normal_iterator(const __normal_iterator<_Iter,
 7960              		.loc 32 781 0
 7961              		.cfi_startproc
 7962 0000 55       		pushq	%rbp
 7963              		.cfi_def_cfa_offset 16
 7964              		.cfi_offset 6, -16
 7965 0001 4889E5   		movq	%rsp, %rbp
 7966              		.cfi_def_cfa_register 6
 7967 0004 4883EC10 		subq	$16, %rsp
 7968 0008 48897DF8 		movq	%rdi, -8(%rbp)
 7969 000c 488975F0 		movq	%rsi, -16(%rbp)
 7970              	.LBB80:
 782:/usr/include/c++/6/bits/stl_iterator.h **** 			  typename __enable_if<
 783:/usr/include/c++/6/bits/stl_iterator.h ****       	       (std::__are_same<_Iter, typename _Container::pointer>::__value),
 784:/usr/include/c++/6/bits/stl_iterator.h **** 		      _Container>::__type>& __i) _GLIBCXX_NOEXCEPT
 785:/usr/include/c++/6/bits/stl_iterator.h ****         : _M_current(__i.base()) { }
 7971              		.loc 32 785 0
 7972 0010 488B45F0 		movq	-16(%rbp), %rax
 7973 0014 4889C7   		movq	%rax, %rdi
 7974 0017 E8000000 		call	_ZNK9__gnu_cxx17__normal_iteratorIPN2gr5tag_tESt6vectorIS2_SaIS2_EEE4baseEv
 7974      00
 7975 001c 488B10   		movq	(%rax), %rdx
 7976 001f 488B45F8 		movq	-8(%rbp), %rax
 7977 0023 488910   		movq	%rdx, (%rax)
 7978              	.LBE80:
 7979 0026 90       		nop
 7980 0027 C9       		leave
 7981              		.cfi_def_cfa 7, 8
 7982 0028 C3       		ret
 7983              		.cfi_endproc
 7984              	.LFE12307:
 7986              		.weak	_ZN9__gnu_cxx17__normal_iteratorIPKN2gr5tag_tESt6vectorIS2_SaIS2_EEEC1IPS2_EERKNS0_IT_NS_11_
 7987              		.set	_ZN9__gnu_cxx17__normal_iteratorIPKN2gr5tag_tESt6vectorIS2_SaIS2_EEEC1IPS2_EERKNS0_IT_NS_11__
 7988              		.section	.text._ZNSt6vectorIN2gr5tag_tESaIS1_EE5eraseEN9__gnu_cxx17__normal_iteratorIPKS1_S3_EE,"a
 7989              		.align 2
 7990              		.weak	_ZNSt6vectorIN2gr5tag_tESaIS1_EE5eraseEN9__gnu_cxx17__normal_iteratorIPKS1_S3_EE
 7992              	_ZNSt6vectorIN2gr5tag_tESaIS1_EE5eraseEN9__gnu_cxx17__normal_iteratorIPKS1_S3_EE:
 7993              	.LFB12309:
 782:/usr/include/c++/6/bits/stl_vector.h **** 
 783:/usr/include/c++/6/bits/stl_vector.h ****       /**
 784:/usr/include/c++/6/bits/stl_vector.h ****        *  @brief  Subscript access to the data contained in the %vector.
 785:/usr/include/c++/6/bits/stl_vector.h ****        *  @param __n The index of the element for which data should be
 786:/usr/include/c++/6/bits/stl_vector.h ****        *  accessed.
 787:/usr/include/c++/6/bits/stl_vector.h ****        *  @return  Read-only (constant) reference to data.
 788:/usr/include/c++/6/bits/stl_vector.h ****        *
 789:/usr/include/c++/6/bits/stl_vector.h ****        *  This operator allows for easy, array-style, data access.
 790:/usr/include/c++/6/bits/stl_vector.h ****        *  Note that data access with this operator is unchecked and
 791:/usr/include/c++/6/bits/stl_vector.h ****        *  out_of_range lookups are not defined. (For checked lookups
 792:/usr/include/c++/6/bits/stl_vector.h ****        *  see at().)
 793:/usr/include/c++/6/bits/stl_vector.h ****        */
 794:/usr/include/c++/6/bits/stl_vector.h ****       const_reference
 795:/usr/include/c++/6/bits/stl_vector.h ****       operator[](size_type __n) const _GLIBCXX_NOEXCEPT
 796:/usr/include/c++/6/bits/stl_vector.h ****       { return *(this->_M_impl._M_start + __n); }
 797:/usr/include/c++/6/bits/stl_vector.h **** 
 798:/usr/include/c++/6/bits/stl_vector.h ****     protected:
 799:/usr/include/c++/6/bits/stl_vector.h ****       /// Safety check used only from at().
GAS LISTING /tmp/ccvUPO8Q.s 			page 358


 800:/usr/include/c++/6/bits/stl_vector.h ****       void
 801:/usr/include/c++/6/bits/stl_vector.h ****       _M_range_check(size_type __n) const
 802:/usr/include/c++/6/bits/stl_vector.h ****       {
 803:/usr/include/c++/6/bits/stl_vector.h **** 	if (__n >= this->size())
 804:/usr/include/c++/6/bits/stl_vector.h **** 	  __throw_out_of_range_fmt(__N("vector::_M_range_check: __n "
 805:/usr/include/c++/6/bits/stl_vector.h **** 				       "(which is %zu) >= this->size() "
 806:/usr/include/c++/6/bits/stl_vector.h **** 				       "(which is %zu)"),
 807:/usr/include/c++/6/bits/stl_vector.h **** 				   __n, this->size());
 808:/usr/include/c++/6/bits/stl_vector.h ****       }
 809:/usr/include/c++/6/bits/stl_vector.h **** 
 810:/usr/include/c++/6/bits/stl_vector.h ****     public:
 811:/usr/include/c++/6/bits/stl_vector.h ****       /**
 812:/usr/include/c++/6/bits/stl_vector.h ****        *  @brief  Provides access to the data contained in the %vector.
 813:/usr/include/c++/6/bits/stl_vector.h ****        *  @param __n The index of the element for which data should be
 814:/usr/include/c++/6/bits/stl_vector.h ****        *  accessed.
 815:/usr/include/c++/6/bits/stl_vector.h ****        *  @return  Read/write reference to data.
 816:/usr/include/c++/6/bits/stl_vector.h ****        *  @throw  std::out_of_range  If @a __n is an invalid index.
 817:/usr/include/c++/6/bits/stl_vector.h ****        *
 818:/usr/include/c++/6/bits/stl_vector.h ****        *  This function provides for safer data access.  The parameter
 819:/usr/include/c++/6/bits/stl_vector.h ****        *  is first checked that it is in the range of the vector.  The
 820:/usr/include/c++/6/bits/stl_vector.h ****        *  function throws out_of_range if the check fails.
 821:/usr/include/c++/6/bits/stl_vector.h ****        */
 822:/usr/include/c++/6/bits/stl_vector.h ****       reference
 823:/usr/include/c++/6/bits/stl_vector.h ****       at(size_type __n)
 824:/usr/include/c++/6/bits/stl_vector.h ****       {
 825:/usr/include/c++/6/bits/stl_vector.h **** 	_M_range_check(__n);
 826:/usr/include/c++/6/bits/stl_vector.h **** 	return (*this)[__n]; 
 827:/usr/include/c++/6/bits/stl_vector.h ****       }
 828:/usr/include/c++/6/bits/stl_vector.h **** 
 829:/usr/include/c++/6/bits/stl_vector.h ****       /**
 830:/usr/include/c++/6/bits/stl_vector.h ****        *  @brief  Provides access to the data contained in the %vector.
 831:/usr/include/c++/6/bits/stl_vector.h ****        *  @param __n The index of the element for which data should be
 832:/usr/include/c++/6/bits/stl_vector.h ****        *  accessed.
 833:/usr/include/c++/6/bits/stl_vector.h ****        *  @return  Read-only (constant) reference to data.
 834:/usr/include/c++/6/bits/stl_vector.h ****        *  @throw  std::out_of_range  If @a __n is an invalid index.
 835:/usr/include/c++/6/bits/stl_vector.h ****        *
 836:/usr/include/c++/6/bits/stl_vector.h ****        *  This function provides for safer data access.  The parameter
 837:/usr/include/c++/6/bits/stl_vector.h ****        *  is first checked that it is in the range of the vector.  The
 838:/usr/include/c++/6/bits/stl_vector.h ****        *  function throws out_of_range if the check fails.
 839:/usr/include/c++/6/bits/stl_vector.h ****        */
 840:/usr/include/c++/6/bits/stl_vector.h ****       const_reference
 841:/usr/include/c++/6/bits/stl_vector.h ****       at(size_type __n) const
 842:/usr/include/c++/6/bits/stl_vector.h ****       {
 843:/usr/include/c++/6/bits/stl_vector.h **** 	_M_range_check(__n);
 844:/usr/include/c++/6/bits/stl_vector.h **** 	return (*this)[__n];
 845:/usr/include/c++/6/bits/stl_vector.h ****       }
 846:/usr/include/c++/6/bits/stl_vector.h **** 
 847:/usr/include/c++/6/bits/stl_vector.h ****       /**
 848:/usr/include/c++/6/bits/stl_vector.h ****        *  Returns a read/write reference to the data at the first
 849:/usr/include/c++/6/bits/stl_vector.h ****        *  element of the %vector.
 850:/usr/include/c++/6/bits/stl_vector.h ****        */
 851:/usr/include/c++/6/bits/stl_vector.h ****       reference
 852:/usr/include/c++/6/bits/stl_vector.h ****       front() _GLIBCXX_NOEXCEPT
 853:/usr/include/c++/6/bits/stl_vector.h ****       { return *begin(); }
 854:/usr/include/c++/6/bits/stl_vector.h **** 
 855:/usr/include/c++/6/bits/stl_vector.h ****       /**
 856:/usr/include/c++/6/bits/stl_vector.h ****        *  Returns a read-only (constant) reference to the data at the first
GAS LISTING /tmp/ccvUPO8Q.s 			page 359


 857:/usr/include/c++/6/bits/stl_vector.h ****        *  element of the %vector.
 858:/usr/include/c++/6/bits/stl_vector.h ****        */
 859:/usr/include/c++/6/bits/stl_vector.h ****       const_reference
 860:/usr/include/c++/6/bits/stl_vector.h ****       front() const _GLIBCXX_NOEXCEPT
 861:/usr/include/c++/6/bits/stl_vector.h ****       { return *begin(); }
 862:/usr/include/c++/6/bits/stl_vector.h **** 
 863:/usr/include/c++/6/bits/stl_vector.h ****       /**
 864:/usr/include/c++/6/bits/stl_vector.h ****        *  Returns a read/write reference to the data at the last
 865:/usr/include/c++/6/bits/stl_vector.h ****        *  element of the %vector.
 866:/usr/include/c++/6/bits/stl_vector.h ****        */
 867:/usr/include/c++/6/bits/stl_vector.h ****       reference
 868:/usr/include/c++/6/bits/stl_vector.h ****       back() _GLIBCXX_NOEXCEPT
 869:/usr/include/c++/6/bits/stl_vector.h ****       { return *(end() - 1); }
 870:/usr/include/c++/6/bits/stl_vector.h ****       
 871:/usr/include/c++/6/bits/stl_vector.h ****       /**
 872:/usr/include/c++/6/bits/stl_vector.h ****        *  Returns a read-only (constant) reference to the data at the
 873:/usr/include/c++/6/bits/stl_vector.h ****        *  last element of the %vector.
 874:/usr/include/c++/6/bits/stl_vector.h ****        */
 875:/usr/include/c++/6/bits/stl_vector.h ****       const_reference
 876:/usr/include/c++/6/bits/stl_vector.h ****       back() const _GLIBCXX_NOEXCEPT
 877:/usr/include/c++/6/bits/stl_vector.h ****       { return *(end() - 1); }
 878:/usr/include/c++/6/bits/stl_vector.h **** 
 879:/usr/include/c++/6/bits/stl_vector.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 880:/usr/include/c++/6/bits/stl_vector.h ****       // DR 464. Suggestion for new member functions in standard containers.
 881:/usr/include/c++/6/bits/stl_vector.h ****       // data access
 882:/usr/include/c++/6/bits/stl_vector.h ****       /**
 883:/usr/include/c++/6/bits/stl_vector.h ****        *   Returns a pointer such that [data(), data() + size()) is a valid
 884:/usr/include/c++/6/bits/stl_vector.h ****        *   range.  For a non-empty %vector, data() == &front().
 885:/usr/include/c++/6/bits/stl_vector.h ****        */
 886:/usr/include/c++/6/bits/stl_vector.h **** #if __cplusplus >= 201103L
 887:/usr/include/c++/6/bits/stl_vector.h ****       _Tp*
 888:/usr/include/c++/6/bits/stl_vector.h **** #else
 889:/usr/include/c++/6/bits/stl_vector.h ****       pointer
 890:/usr/include/c++/6/bits/stl_vector.h **** #endif
 891:/usr/include/c++/6/bits/stl_vector.h ****       data() _GLIBCXX_NOEXCEPT
 892:/usr/include/c++/6/bits/stl_vector.h ****       { return _M_data_ptr(this->_M_impl._M_start); }
 893:/usr/include/c++/6/bits/stl_vector.h **** 
 894:/usr/include/c++/6/bits/stl_vector.h **** #if __cplusplus >= 201103L
 895:/usr/include/c++/6/bits/stl_vector.h ****       const _Tp*
 896:/usr/include/c++/6/bits/stl_vector.h **** #else
 897:/usr/include/c++/6/bits/stl_vector.h ****       const_pointer
 898:/usr/include/c++/6/bits/stl_vector.h **** #endif
 899:/usr/include/c++/6/bits/stl_vector.h ****       data() const _GLIBCXX_NOEXCEPT
 900:/usr/include/c++/6/bits/stl_vector.h ****       { return _M_data_ptr(this->_M_impl._M_start); }
 901:/usr/include/c++/6/bits/stl_vector.h **** 
 902:/usr/include/c++/6/bits/stl_vector.h ****       // [23.2.4.3] modifiers
 903:/usr/include/c++/6/bits/stl_vector.h ****       /**
 904:/usr/include/c++/6/bits/stl_vector.h ****        *  @brief  Add data to the end of the %vector.
 905:/usr/include/c++/6/bits/stl_vector.h ****        *  @param  __x  Data to be added.
 906:/usr/include/c++/6/bits/stl_vector.h ****        *
 907:/usr/include/c++/6/bits/stl_vector.h ****        *  This is a typical stack operation.  The function creates an
 908:/usr/include/c++/6/bits/stl_vector.h ****        *  element at the end of the %vector and assigns the given data
 909:/usr/include/c++/6/bits/stl_vector.h ****        *  to it.  Due to the nature of a %vector this operation can be
 910:/usr/include/c++/6/bits/stl_vector.h ****        *  done in constant time if the %vector has preallocated space
 911:/usr/include/c++/6/bits/stl_vector.h ****        *  available.
 912:/usr/include/c++/6/bits/stl_vector.h ****        */
 913:/usr/include/c++/6/bits/stl_vector.h ****       void
GAS LISTING /tmp/ccvUPO8Q.s 			page 360


 914:/usr/include/c++/6/bits/stl_vector.h ****       push_back(const value_type& __x)
 915:/usr/include/c++/6/bits/stl_vector.h ****       {
 916:/usr/include/c++/6/bits/stl_vector.h **** 	if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
 917:/usr/include/c++/6/bits/stl_vector.h **** 	  {
 918:/usr/include/c++/6/bits/stl_vector.h **** 	    _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish,
 919:/usr/include/c++/6/bits/stl_vector.h **** 	                             __x);
 920:/usr/include/c++/6/bits/stl_vector.h **** 	    ++this->_M_impl._M_finish;
 921:/usr/include/c++/6/bits/stl_vector.h **** 	  }
 922:/usr/include/c++/6/bits/stl_vector.h **** 	else
 923:/usr/include/c++/6/bits/stl_vector.h **** #if __cplusplus >= 201103L
 924:/usr/include/c++/6/bits/stl_vector.h **** 	  _M_emplace_back_aux(__x);
 925:/usr/include/c++/6/bits/stl_vector.h **** #else
 926:/usr/include/c++/6/bits/stl_vector.h **** 	  _M_insert_aux(end(), __x);
 927:/usr/include/c++/6/bits/stl_vector.h **** #endif
 928:/usr/include/c++/6/bits/stl_vector.h ****       }
 929:/usr/include/c++/6/bits/stl_vector.h **** 
 930:/usr/include/c++/6/bits/stl_vector.h **** #if __cplusplus >= 201103L
 931:/usr/include/c++/6/bits/stl_vector.h ****       void
 932:/usr/include/c++/6/bits/stl_vector.h ****       push_back(value_type&& __x)
 933:/usr/include/c++/6/bits/stl_vector.h ****       { emplace_back(std::move(__x)); }
 934:/usr/include/c++/6/bits/stl_vector.h **** 
 935:/usr/include/c++/6/bits/stl_vector.h ****       template<typename... _Args>
 936:/usr/include/c++/6/bits/stl_vector.h ****         void
 937:/usr/include/c++/6/bits/stl_vector.h ****         emplace_back(_Args&&... __args);
 938:/usr/include/c++/6/bits/stl_vector.h **** #endif
 939:/usr/include/c++/6/bits/stl_vector.h **** 
 940:/usr/include/c++/6/bits/stl_vector.h ****       /**
 941:/usr/include/c++/6/bits/stl_vector.h ****        *  @brief  Removes last element.
 942:/usr/include/c++/6/bits/stl_vector.h ****        *
 943:/usr/include/c++/6/bits/stl_vector.h ****        *  This is a typical stack operation. It shrinks the %vector by one.
 944:/usr/include/c++/6/bits/stl_vector.h ****        *
 945:/usr/include/c++/6/bits/stl_vector.h ****        *  Note that no data is returned, and if the last element's
 946:/usr/include/c++/6/bits/stl_vector.h ****        *  data is needed, it should be retrieved before pop_back() is
 947:/usr/include/c++/6/bits/stl_vector.h ****        *  called.
 948:/usr/include/c++/6/bits/stl_vector.h ****        */
 949:/usr/include/c++/6/bits/stl_vector.h ****       void
 950:/usr/include/c++/6/bits/stl_vector.h ****       pop_back() _GLIBCXX_NOEXCEPT
 951:/usr/include/c++/6/bits/stl_vector.h ****       {
 952:/usr/include/c++/6/bits/stl_vector.h **** 	--this->_M_impl._M_finish;
 953:/usr/include/c++/6/bits/stl_vector.h **** 	_Alloc_traits::destroy(this->_M_impl, this->_M_impl._M_finish);
 954:/usr/include/c++/6/bits/stl_vector.h ****       }
 955:/usr/include/c++/6/bits/stl_vector.h **** 
 956:/usr/include/c++/6/bits/stl_vector.h **** #if __cplusplus >= 201103L
 957:/usr/include/c++/6/bits/stl_vector.h ****       /**
 958:/usr/include/c++/6/bits/stl_vector.h ****        *  @brief  Inserts an object in %vector before specified iterator.
 959:/usr/include/c++/6/bits/stl_vector.h ****        *  @param  __position  A const_iterator into the %vector.
 960:/usr/include/c++/6/bits/stl_vector.h ****        *  @param  __args  Arguments.
 961:/usr/include/c++/6/bits/stl_vector.h ****        *  @return  An iterator that points to the inserted data.
 962:/usr/include/c++/6/bits/stl_vector.h ****        *
 963:/usr/include/c++/6/bits/stl_vector.h ****        *  This function will insert an object of type T constructed
 964:/usr/include/c++/6/bits/stl_vector.h ****        *  with T(std::forward<Args>(args)...) before the specified location.
 965:/usr/include/c++/6/bits/stl_vector.h ****        *  Note that this kind of operation could be expensive for a %vector
 966:/usr/include/c++/6/bits/stl_vector.h ****        *  and if it is frequently used the user should consider using
 967:/usr/include/c++/6/bits/stl_vector.h ****        *  std::list.
 968:/usr/include/c++/6/bits/stl_vector.h ****        */
 969:/usr/include/c++/6/bits/stl_vector.h ****       template<typename... _Args>
 970:/usr/include/c++/6/bits/stl_vector.h ****         iterator
GAS LISTING /tmp/ccvUPO8Q.s 			page 361


 971:/usr/include/c++/6/bits/stl_vector.h ****         emplace(const_iterator __position, _Args&&... __args);
 972:/usr/include/c++/6/bits/stl_vector.h **** 
 973:/usr/include/c++/6/bits/stl_vector.h ****       /**
 974:/usr/include/c++/6/bits/stl_vector.h ****        *  @brief  Inserts given value into %vector before specified iterator.
 975:/usr/include/c++/6/bits/stl_vector.h ****        *  @param  __position  A const_iterator into the %vector.
 976:/usr/include/c++/6/bits/stl_vector.h ****        *  @param  __x  Data to be inserted.
 977:/usr/include/c++/6/bits/stl_vector.h ****        *  @return  An iterator that points to the inserted data.
 978:/usr/include/c++/6/bits/stl_vector.h ****        *
 979:/usr/include/c++/6/bits/stl_vector.h ****        *  This function will insert a copy of the given value before
 980:/usr/include/c++/6/bits/stl_vector.h ****        *  the specified location.  Note that this kind of operation
 981:/usr/include/c++/6/bits/stl_vector.h ****        *  could be expensive for a %vector and if it is frequently
 982:/usr/include/c++/6/bits/stl_vector.h ****        *  used the user should consider using std::list.
 983:/usr/include/c++/6/bits/stl_vector.h ****        */
 984:/usr/include/c++/6/bits/stl_vector.h ****       iterator
 985:/usr/include/c++/6/bits/stl_vector.h ****       insert(const_iterator __position, const value_type& __x);
 986:/usr/include/c++/6/bits/stl_vector.h **** #else
 987:/usr/include/c++/6/bits/stl_vector.h ****       /**
 988:/usr/include/c++/6/bits/stl_vector.h ****        *  @brief  Inserts given value into %vector before specified iterator.
 989:/usr/include/c++/6/bits/stl_vector.h ****        *  @param  __position  An iterator into the %vector.
 990:/usr/include/c++/6/bits/stl_vector.h ****        *  @param  __x  Data to be inserted.
 991:/usr/include/c++/6/bits/stl_vector.h ****        *  @return  An iterator that points to the inserted data.
 992:/usr/include/c++/6/bits/stl_vector.h ****        *
 993:/usr/include/c++/6/bits/stl_vector.h ****        *  This function will insert a copy of the given value before
 994:/usr/include/c++/6/bits/stl_vector.h ****        *  the specified location.  Note that this kind of operation
 995:/usr/include/c++/6/bits/stl_vector.h ****        *  could be expensive for a %vector and if it is frequently
 996:/usr/include/c++/6/bits/stl_vector.h ****        *  used the user should consider using std::list.
 997:/usr/include/c++/6/bits/stl_vector.h ****        */
 998:/usr/include/c++/6/bits/stl_vector.h ****       iterator
 999:/usr/include/c++/6/bits/stl_vector.h ****       insert(iterator __position, const value_type& __x);
1000:/usr/include/c++/6/bits/stl_vector.h **** #endif
1001:/usr/include/c++/6/bits/stl_vector.h **** 
1002:/usr/include/c++/6/bits/stl_vector.h **** #if __cplusplus >= 201103L
1003:/usr/include/c++/6/bits/stl_vector.h ****       /**
1004:/usr/include/c++/6/bits/stl_vector.h ****        *  @brief  Inserts given rvalue into %vector before specified iterator.
1005:/usr/include/c++/6/bits/stl_vector.h ****        *  @param  __position  A const_iterator into the %vector.
1006:/usr/include/c++/6/bits/stl_vector.h ****        *  @param  __x  Data to be inserted.
1007:/usr/include/c++/6/bits/stl_vector.h ****        *  @return  An iterator that points to the inserted data.
1008:/usr/include/c++/6/bits/stl_vector.h ****        *
1009:/usr/include/c++/6/bits/stl_vector.h ****        *  This function will insert a copy of the given rvalue before
1010:/usr/include/c++/6/bits/stl_vector.h ****        *  the specified location.  Note that this kind of operation
1011:/usr/include/c++/6/bits/stl_vector.h ****        *  could be expensive for a %vector and if it is frequently
1012:/usr/include/c++/6/bits/stl_vector.h ****        *  used the user should consider using std::list.
1013:/usr/include/c++/6/bits/stl_vector.h ****        */
1014:/usr/include/c++/6/bits/stl_vector.h ****       iterator
1015:/usr/include/c++/6/bits/stl_vector.h ****       insert(const_iterator __position, value_type&& __x)
1016:/usr/include/c++/6/bits/stl_vector.h ****       { return emplace(__position, std::move(__x)); }
1017:/usr/include/c++/6/bits/stl_vector.h **** 
1018:/usr/include/c++/6/bits/stl_vector.h ****       /**
1019:/usr/include/c++/6/bits/stl_vector.h ****        *  @brief  Inserts an initializer_list into the %vector.
1020:/usr/include/c++/6/bits/stl_vector.h ****        *  @param  __position  An iterator into the %vector.
1021:/usr/include/c++/6/bits/stl_vector.h ****        *  @param  __l  An initializer_list.
1022:/usr/include/c++/6/bits/stl_vector.h ****        *
1023:/usr/include/c++/6/bits/stl_vector.h ****        *  This function will insert copies of the data in the 
1024:/usr/include/c++/6/bits/stl_vector.h ****        *  initializer_list @a l into the %vector before the location
1025:/usr/include/c++/6/bits/stl_vector.h ****        *  specified by @a position.
1026:/usr/include/c++/6/bits/stl_vector.h ****        *
1027:/usr/include/c++/6/bits/stl_vector.h ****        *  Note that this kind of operation could be expensive for a
GAS LISTING /tmp/ccvUPO8Q.s 			page 362


1028:/usr/include/c++/6/bits/stl_vector.h ****        *  %vector and if it is frequently used the user should
1029:/usr/include/c++/6/bits/stl_vector.h ****        *  consider using std::list.
1030:/usr/include/c++/6/bits/stl_vector.h ****        */
1031:/usr/include/c++/6/bits/stl_vector.h ****       iterator
1032:/usr/include/c++/6/bits/stl_vector.h ****       insert(const_iterator __position, initializer_list<value_type> __l)
1033:/usr/include/c++/6/bits/stl_vector.h ****       { return this->insert(__position, __l.begin(), __l.end()); }
1034:/usr/include/c++/6/bits/stl_vector.h **** #endif
1035:/usr/include/c++/6/bits/stl_vector.h **** 
1036:/usr/include/c++/6/bits/stl_vector.h **** #if __cplusplus >= 201103L
1037:/usr/include/c++/6/bits/stl_vector.h ****       /**
1038:/usr/include/c++/6/bits/stl_vector.h ****        *  @brief  Inserts a number of copies of given data into the %vector.
1039:/usr/include/c++/6/bits/stl_vector.h ****        *  @param  __position  A const_iterator into the %vector.
1040:/usr/include/c++/6/bits/stl_vector.h ****        *  @param  __n  Number of elements to be inserted.
1041:/usr/include/c++/6/bits/stl_vector.h ****        *  @param  __x  Data to be inserted.
1042:/usr/include/c++/6/bits/stl_vector.h ****        *  @return  An iterator that points to the inserted data.
1043:/usr/include/c++/6/bits/stl_vector.h ****        *
1044:/usr/include/c++/6/bits/stl_vector.h ****        *  This function will insert a specified number of copies of
1045:/usr/include/c++/6/bits/stl_vector.h ****        *  the given data before the location specified by @a position.
1046:/usr/include/c++/6/bits/stl_vector.h ****        *
1047:/usr/include/c++/6/bits/stl_vector.h ****        *  Note that this kind of operation could be expensive for a
1048:/usr/include/c++/6/bits/stl_vector.h ****        *  %vector and if it is frequently used the user should
1049:/usr/include/c++/6/bits/stl_vector.h ****        *  consider using std::list.
1050:/usr/include/c++/6/bits/stl_vector.h ****        */
1051:/usr/include/c++/6/bits/stl_vector.h ****       iterator
1052:/usr/include/c++/6/bits/stl_vector.h ****       insert(const_iterator __position, size_type __n, const value_type& __x)
1053:/usr/include/c++/6/bits/stl_vector.h ****       {
1054:/usr/include/c++/6/bits/stl_vector.h **** 	difference_type __offset = __position - cbegin();
1055:/usr/include/c++/6/bits/stl_vector.h **** 	_M_fill_insert(begin() + __offset, __n, __x);
1056:/usr/include/c++/6/bits/stl_vector.h **** 	return begin() + __offset;
1057:/usr/include/c++/6/bits/stl_vector.h ****       }
1058:/usr/include/c++/6/bits/stl_vector.h **** #else
1059:/usr/include/c++/6/bits/stl_vector.h ****       /**
1060:/usr/include/c++/6/bits/stl_vector.h ****        *  @brief  Inserts a number of copies of given data into the %vector.
1061:/usr/include/c++/6/bits/stl_vector.h ****        *  @param  __position  An iterator into the %vector.
1062:/usr/include/c++/6/bits/stl_vector.h ****        *  @param  __n  Number of elements to be inserted.
1063:/usr/include/c++/6/bits/stl_vector.h ****        *  @param  __x  Data to be inserted.
1064:/usr/include/c++/6/bits/stl_vector.h ****        *
1065:/usr/include/c++/6/bits/stl_vector.h ****        *  This function will insert a specified number of copies of
1066:/usr/include/c++/6/bits/stl_vector.h ****        *  the given data before the location specified by @a position.
1067:/usr/include/c++/6/bits/stl_vector.h ****        *
1068:/usr/include/c++/6/bits/stl_vector.h ****        *  Note that this kind of operation could be expensive for a
1069:/usr/include/c++/6/bits/stl_vector.h ****        *  %vector and if it is frequently used the user should
1070:/usr/include/c++/6/bits/stl_vector.h ****        *  consider using std::list.
1071:/usr/include/c++/6/bits/stl_vector.h ****        */
1072:/usr/include/c++/6/bits/stl_vector.h ****       void
1073:/usr/include/c++/6/bits/stl_vector.h ****       insert(iterator __position, size_type __n, const value_type& __x)
1074:/usr/include/c++/6/bits/stl_vector.h ****       { _M_fill_insert(__position, __n, __x); }
1075:/usr/include/c++/6/bits/stl_vector.h **** #endif
1076:/usr/include/c++/6/bits/stl_vector.h **** 
1077:/usr/include/c++/6/bits/stl_vector.h **** #if __cplusplus >= 201103L
1078:/usr/include/c++/6/bits/stl_vector.h ****       /**
1079:/usr/include/c++/6/bits/stl_vector.h ****        *  @brief  Inserts a range into the %vector.
1080:/usr/include/c++/6/bits/stl_vector.h ****        *  @param  __position  A const_iterator into the %vector.
1081:/usr/include/c++/6/bits/stl_vector.h ****        *  @param  __first  An input iterator.
1082:/usr/include/c++/6/bits/stl_vector.h ****        *  @param  __last   An input iterator.
1083:/usr/include/c++/6/bits/stl_vector.h ****        *  @return  An iterator that points to the inserted data.
1084:/usr/include/c++/6/bits/stl_vector.h ****        *
GAS LISTING /tmp/ccvUPO8Q.s 			page 363


1085:/usr/include/c++/6/bits/stl_vector.h ****        *  This function will insert copies of the data in the range
1086:/usr/include/c++/6/bits/stl_vector.h ****        *  [__first,__last) into the %vector before the location specified
1087:/usr/include/c++/6/bits/stl_vector.h ****        *  by @a pos.
1088:/usr/include/c++/6/bits/stl_vector.h ****        *
1089:/usr/include/c++/6/bits/stl_vector.h ****        *  Note that this kind of operation could be expensive for a
1090:/usr/include/c++/6/bits/stl_vector.h ****        *  %vector and if it is frequently used the user should
1091:/usr/include/c++/6/bits/stl_vector.h ****        *  consider using std::list.
1092:/usr/include/c++/6/bits/stl_vector.h ****        */
1093:/usr/include/c++/6/bits/stl_vector.h ****       template<typename _InputIterator,
1094:/usr/include/c++/6/bits/stl_vector.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
1095:/usr/include/c++/6/bits/stl_vector.h ****         iterator
1096:/usr/include/c++/6/bits/stl_vector.h ****         insert(const_iterator __position, _InputIterator __first,
1097:/usr/include/c++/6/bits/stl_vector.h **** 	       _InputIterator __last)
1098:/usr/include/c++/6/bits/stl_vector.h ****         {
1099:/usr/include/c++/6/bits/stl_vector.h **** 	  difference_type __offset = __position - cbegin();
1100:/usr/include/c++/6/bits/stl_vector.h **** 	  _M_insert_dispatch(begin() + __offset,
1101:/usr/include/c++/6/bits/stl_vector.h **** 			     __first, __last, __false_type());
1102:/usr/include/c++/6/bits/stl_vector.h **** 	  return begin() + __offset;
1103:/usr/include/c++/6/bits/stl_vector.h **** 	}
1104:/usr/include/c++/6/bits/stl_vector.h **** #else
1105:/usr/include/c++/6/bits/stl_vector.h ****       /**
1106:/usr/include/c++/6/bits/stl_vector.h ****        *  @brief  Inserts a range into the %vector.
1107:/usr/include/c++/6/bits/stl_vector.h ****        *  @param  __position  An iterator into the %vector.
1108:/usr/include/c++/6/bits/stl_vector.h ****        *  @param  __first  An input iterator.
1109:/usr/include/c++/6/bits/stl_vector.h ****        *  @param  __last   An input iterator.
1110:/usr/include/c++/6/bits/stl_vector.h ****        *
1111:/usr/include/c++/6/bits/stl_vector.h ****        *  This function will insert copies of the data in the range
1112:/usr/include/c++/6/bits/stl_vector.h ****        *  [__first,__last) into the %vector before the location specified
1113:/usr/include/c++/6/bits/stl_vector.h ****        *  by @a pos.
1114:/usr/include/c++/6/bits/stl_vector.h ****        *
1115:/usr/include/c++/6/bits/stl_vector.h ****        *  Note that this kind of operation could be expensive for a
1116:/usr/include/c++/6/bits/stl_vector.h ****        *  %vector and if it is frequently used the user should
1117:/usr/include/c++/6/bits/stl_vector.h ****        *  consider using std::list.
1118:/usr/include/c++/6/bits/stl_vector.h ****        */
1119:/usr/include/c++/6/bits/stl_vector.h ****       template<typename _InputIterator>
1120:/usr/include/c++/6/bits/stl_vector.h ****         void
1121:/usr/include/c++/6/bits/stl_vector.h ****         insert(iterator __position, _InputIterator __first,
1122:/usr/include/c++/6/bits/stl_vector.h **** 	       _InputIterator __last)
1123:/usr/include/c++/6/bits/stl_vector.h ****         {
1124:/usr/include/c++/6/bits/stl_vector.h **** 	  // Check whether it's an integral type.  If so, it's not an iterator.
1125:/usr/include/c++/6/bits/stl_vector.h **** 	  typedef typename std::__is_integer<_InputIterator>::__type _Integral;
1126:/usr/include/c++/6/bits/stl_vector.h **** 	  _M_insert_dispatch(__position, __first, __last, _Integral());
1127:/usr/include/c++/6/bits/stl_vector.h **** 	}
1128:/usr/include/c++/6/bits/stl_vector.h **** #endif
1129:/usr/include/c++/6/bits/stl_vector.h **** 
1130:/usr/include/c++/6/bits/stl_vector.h ****       /**
1131:/usr/include/c++/6/bits/stl_vector.h ****        *  @brief  Remove element at given position.
1132:/usr/include/c++/6/bits/stl_vector.h ****        *  @param  __position  Iterator pointing to element to be erased.
1133:/usr/include/c++/6/bits/stl_vector.h ****        *  @return  An iterator pointing to the next element (or end()).
1134:/usr/include/c++/6/bits/stl_vector.h ****        *
1135:/usr/include/c++/6/bits/stl_vector.h ****        *  This function will erase the element at the given position and thus
1136:/usr/include/c++/6/bits/stl_vector.h ****        *  shorten the %vector by one.
1137:/usr/include/c++/6/bits/stl_vector.h ****        *
1138:/usr/include/c++/6/bits/stl_vector.h ****        *  Note This operation could be expensive and if it is
1139:/usr/include/c++/6/bits/stl_vector.h ****        *  frequently used the user should consider using std::list.
1140:/usr/include/c++/6/bits/stl_vector.h ****        *  The user is also cautioned that this function only erases
1141:/usr/include/c++/6/bits/stl_vector.h ****        *  the element, and that if the element is itself a pointer,
GAS LISTING /tmp/ccvUPO8Q.s 			page 364


1142:/usr/include/c++/6/bits/stl_vector.h ****        *  the pointed-to memory is not touched in any way.  Managing
1143:/usr/include/c++/6/bits/stl_vector.h ****        *  the pointer is the user's responsibility.
1144:/usr/include/c++/6/bits/stl_vector.h ****        */
1145:/usr/include/c++/6/bits/stl_vector.h ****       iterator
1146:/usr/include/c++/6/bits/stl_vector.h **** #if __cplusplus >= 201103L
1147:/usr/include/c++/6/bits/stl_vector.h ****       erase(const_iterator __position)
 7994              		.loc 30 1147 0
 7995              		.cfi_startproc
 7996 0000 55       		pushq	%rbp
 7997              		.cfi_def_cfa_offset 16
 7998              		.cfi_offset 6, -16
 7999 0001 4889E5   		movq	%rsp, %rbp
 8000              		.cfi_def_cfa_register 6
 8001 0004 53       		pushq	%rbx
 8002 0005 4883EC28 		subq	$40, %rsp
 8003              		.cfi_offset 3, -24
 8004 0009 48897DD8 		movq	%rdi, -40(%rbp)
 8005 000d 488975D0 		movq	%rsi, -48(%rbp)
1148:/usr/include/c++/6/bits/stl_vector.h ****       { return _M_erase(begin() + (__position - cbegin())); }
 8006              		.loc 30 1148 0
 8007 0011 488B45D8 		movq	-40(%rbp), %rax
 8008 0015 4889C7   		movq	%rax, %rdi
 8009 0018 E8000000 		call	_ZNKSt6vectorIN2gr5tag_tESaIS1_EE6cbeginEv
 8009      00
 8010 001d 488945E0 		movq	%rax, -32(%rbp)
 8011 0021 488D55E0 		leaq	-32(%rbp), %rdx
 8012 0025 488D45D0 		leaq	-48(%rbp), %rax
 8013 0029 4889D6   		movq	%rdx, %rsi
 8014 002c 4889C7   		movq	%rax, %rdi
 8015 002f E8000000 		call	_ZN9__gnu_cxxmiIPKN2gr5tag_tESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference
 8015      00
 8016 0034 4889C3   		movq	%rax, %rbx
 8017 0037 488B45D8 		movq	-40(%rbp), %rax
 8018 003b 4889C7   		movq	%rax, %rdi
 8019 003e E8000000 		call	_ZNSt6vectorIN2gr5tag_tESaIS1_EE5beginEv
 8019      00
 8020 0043 488945E8 		movq	%rax, -24(%rbp)
 8021 0047 488D45E8 		leaq	-24(%rbp), %rax
 8022 004b 4889DE   		movq	%rbx, %rsi
 8023 004e 4889C7   		movq	%rax, %rdi
 8024 0051 E8000000 		call	_ZNK9__gnu_cxx17__normal_iteratorIPN2gr5tag_tESt6vectorIS2_SaIS2_EEEplEl
 8024      00
 8025 0056 4889C2   		movq	%rax, %rdx
 8026 0059 488B45D8 		movq	-40(%rbp), %rax
 8027 005d 4889D6   		movq	%rdx, %rsi
 8028 0060 4889C7   		movq	%rax, %rdi
 8029 0063 E8000000 		call	_ZNSt6vectorIN2gr5tag_tESaIS1_EE8_M_eraseEN9__gnu_cxx17__normal_iteratorIPS1_S3_EE
 8029      00
 8030 0068 4883C428 		addq	$40, %rsp
 8031 006c 5B       		popq	%rbx
 8032 006d 5D       		popq	%rbp
 8033              		.cfi_def_cfa 7, 8
 8034 006e C3       		ret
 8035              		.cfi_endproc
 8036              	.LFE12309:
 8038              		.section	.text._ZStmlIfESt7complexIT_ERKS2_S4_,"axG",@progbits,_ZStmlIfESt7complexIT_ERKS2_S4_,com
 8039              		.weak	_ZStmlIfESt7complexIT_ERKS2_S4_
GAS LISTING /tmp/ccvUPO8Q.s 			page 365


 8041              	_ZStmlIfESt7complexIT_ERKS2_S4_:
 8042              	.LFB12310:
 386:/usr/include/c++/6/complex ****     {
 8043              		.loc 9 386 0
 8044              		.cfi_startproc
 8045 0000 55       		pushq	%rbp
 8046              		.cfi_def_cfa_offset 16
 8047              		.cfi_offset 6, -16
 8048 0001 4889E5   		movq	%rsp, %rbp
 8049              		.cfi_def_cfa_register 6
 8050 0004 4883EC30 		subq	$48, %rsp
 8051 0008 48897DE8 		movq	%rdi, -24(%rbp)
 8052 000c 488975E0 		movq	%rsi, -32(%rbp)
 388:/usr/include/c++/6/complex ****       __r *= __y;
 8053              		.loc 9 388 0
 8054 0010 488B45E8 		movq	-24(%rbp), %rax
 8055 0014 C5FA1000 		vmovss	(%rax), %xmm0
 8056 0018 C5FA1145 		vmovss	%xmm0, -8(%rbp)
 8056      F8
 8057 001d C5FA1040 		vmovss	4(%rax), %xmm0
 8057      04
 8058 0022 C5FA1145 		vmovss	%xmm0, -4(%rbp)
 8058      FC
 389:/usr/include/c++/6/complex ****       return __r;
 8059              		.loc 9 389 0
 8060 0027 488B55E0 		movq	-32(%rbp), %rdx
 8061 002b 488D45F8 		leaq	-8(%rbp), %rax
 8062 002f 4889D6   		movq	%rdx, %rsi
 8063 0032 4889C7   		movq	%rax, %rdi
 8064 0035 E8000000 		call	_ZNSt7complexIfEmLIfEERS0_RKS_IT_E
 8064      00
 390:/usr/include/c++/6/complex ****     }
 8065              		.loc 9 390 0
 8066 003a C5FA104D 		vmovss	-8(%rbp), %xmm1
 8066      F8
 8067 003f C5FA1045 		vmovss	-4(%rbp), %xmm0
 8067      FC
 8068 0044 C5FA114D 		vmovss	%xmm1, -40(%rbp)
 8068      D8
 8069 0049 C5FA1145 		vmovss	%xmm0, -36(%rbp)
 8069      DC
 8070 004e 488B45D8 		movq	-40(%rbp), %rax
 391:/usr/include/c++/6/complex **** 
 8071              		.loc 9 391 0
 8072 0052 488945D0 		movq	%rax, -48(%rbp)
 8073 0056 C5FA7E45 		vmovq	-48(%rbp), %xmm0
 8073      D0
 8074 005b C9       		leave
 8075              		.cfi_def_cfa 7, 8
 8076 005c C3       		ret
 8077              		.cfi_endproc
 8078              	.LFE12310:
 8080              		.section	.text._ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEE7releaseEv,"a
 8081              		.align 2
 8082              		.weak	_ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEE7releaseEv
 8084              	_ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEE7releaseEv:
 8085              	.LFB12397:
GAS LISTING /tmp/ccvUPO8Q.s 			page 366


  76:/usr/include/boost/exception/exception.hpp ****                 {
 8086              		.loc 3 76 0
 8087              		.cfi_startproc
 8088 0000 55       		pushq	%rbp
 8089              		.cfi_def_cfa_offset 16
 8090              		.cfi_offset 6, -16
 8091 0001 4889E5   		movq	%rsp, %rbp
 8092              		.cfi_def_cfa_register 6
 8093 0004 4883EC10 		subq	$16, %rsp
 8094 0008 48897DF8 		movq	%rdi, -8(%rbp)
  78:/usr/include/boost/exception/exception.hpp ****                     px_=0;
 8095              		.loc 3 78 0
 8096 000c 488B45F8 		movq	-8(%rbp), %rax
 8097 0010 488B00   		movq	(%rax), %rax
 8098 0013 4885C0   		testq	%rax, %rax
 8099 0016 7428     		je	.L361
  78:/usr/include/boost/exception/exception.hpp ****                     px_=0;
 8100              		.loc 3 78 0 is_stmt 0 discriminator 1
 8101 0018 488B45F8 		movq	-8(%rbp), %rax
 8102 001c 488B00   		movq	(%rax), %rax
 8103 001f 488B00   		movq	(%rax), %rax
 8104 0022 4883C020 		addq	$32, %rax
 8105 0026 488B00   		movq	(%rax), %rax
 8106 0029 488B55F8 		movq	-8(%rbp), %rdx
 8107 002d 488B12   		movq	(%rdx), %rdx
 8108 0030 4889D7   		movq	%rdx, %rdi
 8109 0033 FFD0     		call	*%rax
 8110              	.LVL8:
 8111 0035 84C0     		testb	%al, %al
 8112 0037 7407     		je	.L361
  78:/usr/include/boost/exception/exception.hpp ****                     px_=0;
 8113              		.loc 3 78 0 discriminator 3
 8114 0039 B8010000 		movl	$1, %eax
 8114      00
 8115 003e EB05     		jmp	.L362
 8116              	.L361:
  78:/usr/include/boost/exception/exception.hpp ****                     px_=0;
 8117              		.loc 3 78 0 discriminator 4
 8118 0040 B8000000 		movl	$0, %eax
 8118      00
 8119              	.L362:
  78:/usr/include/boost/exception/exception.hpp ****                     px_=0;
 8120              		.loc 3 78 0 discriminator 6
 8121 0045 84C0     		testb	%al, %al
 8122 0047 740B     		je	.L364
  79:/usr/include/boost/exception/exception.hpp ****                 }
 8123              		.loc 3 79 0 is_stmt 1
 8124 0049 488B45F8 		movq	-8(%rbp), %rax
 8125 004d 48C70000 		movq	$0, (%rax)
 8125      000000
 8126              	.L364:
  80:/usr/include/boost/exception/exception.hpp ****             };
 8127              		.loc 3 80 0
 8128 0054 90       		nop
 8129 0055 C9       		leave
 8130              		.cfi_def_cfa 7, 8
 8131 0056 C3       		ret
GAS LISTING /tmp/ccvUPO8Q.s 			page 367


 8132              		.cfi_endproc
 8133              	.LFE12397:
 8135              		.section	.text._ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFv
 8136              		.align 2
 8137              		.weak	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt
 8139              	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt10_Sele
 8140              	.LFB12626:
 243:/usr/include/c++/6/bits/stl_tree.h **** 
 244:/usr/include/c++/6/bits/stl_tree.h ****       _Base_ptr _M_node;
 245:/usr/include/c++/6/bits/stl_tree.h ****   };
 246:/usr/include/c++/6/bits/stl_tree.h **** 
 247:/usr/include/c++/6/bits/stl_tree.h ****   template<typename _Tp>
 248:/usr/include/c++/6/bits/stl_tree.h ****     struct _Rb_tree_const_iterator
 249:/usr/include/c++/6/bits/stl_tree.h ****     {
 250:/usr/include/c++/6/bits/stl_tree.h ****       typedef _Tp        value_type;
 251:/usr/include/c++/6/bits/stl_tree.h ****       typedef const _Tp& reference;
 252:/usr/include/c++/6/bits/stl_tree.h ****       typedef const _Tp* pointer;
 253:/usr/include/c++/6/bits/stl_tree.h **** 
 254:/usr/include/c++/6/bits/stl_tree.h ****       typedef _Rb_tree_iterator<_Tp> iterator;
 255:/usr/include/c++/6/bits/stl_tree.h **** 
 256:/usr/include/c++/6/bits/stl_tree.h ****       typedef bidirectional_iterator_tag iterator_category;
 257:/usr/include/c++/6/bits/stl_tree.h ****       typedef ptrdiff_t                  difference_type;
 258:/usr/include/c++/6/bits/stl_tree.h **** 
 259:/usr/include/c++/6/bits/stl_tree.h ****       typedef _Rb_tree_const_iterator<_Tp>        _Self;
 260:/usr/include/c++/6/bits/stl_tree.h ****       typedef _Rb_tree_node_base::_Const_Base_ptr _Base_ptr;
 261:/usr/include/c++/6/bits/stl_tree.h ****       typedef const _Rb_tree_node<_Tp>*           _Link_type;
 262:/usr/include/c++/6/bits/stl_tree.h **** 
 263:/usr/include/c++/6/bits/stl_tree.h ****       _Rb_tree_const_iterator() _GLIBCXX_NOEXCEPT
 264:/usr/include/c++/6/bits/stl_tree.h ****       : _M_node() { }
 265:/usr/include/c++/6/bits/stl_tree.h **** 
 266:/usr/include/c++/6/bits/stl_tree.h ****       explicit
 267:/usr/include/c++/6/bits/stl_tree.h ****       _Rb_tree_const_iterator(_Base_ptr __x) _GLIBCXX_NOEXCEPT
 268:/usr/include/c++/6/bits/stl_tree.h ****       : _M_node(__x) { }
 269:/usr/include/c++/6/bits/stl_tree.h **** 
 270:/usr/include/c++/6/bits/stl_tree.h ****       _Rb_tree_const_iterator(const iterator& __it) _GLIBCXX_NOEXCEPT
 271:/usr/include/c++/6/bits/stl_tree.h ****       : _M_node(__it._M_node) { }
 272:/usr/include/c++/6/bits/stl_tree.h **** 
 273:/usr/include/c++/6/bits/stl_tree.h ****       iterator
 274:/usr/include/c++/6/bits/stl_tree.h ****       _M_const_cast() const _GLIBCXX_NOEXCEPT
 275:/usr/include/c++/6/bits/stl_tree.h ****       { return iterator(const_cast<typename iterator::_Base_ptr>(_M_node)); }
 276:/usr/include/c++/6/bits/stl_tree.h **** 
 277:/usr/include/c++/6/bits/stl_tree.h ****       reference
 278:/usr/include/c++/6/bits/stl_tree.h ****       operator*() const _GLIBCXX_NOEXCEPT
 279:/usr/include/c++/6/bits/stl_tree.h ****       { return *static_cast<_Link_type>(_M_node)->_M_valptr(); }
 280:/usr/include/c++/6/bits/stl_tree.h **** 
 281:/usr/include/c++/6/bits/stl_tree.h ****       pointer
 282:/usr/include/c++/6/bits/stl_tree.h ****       operator->() const _GLIBCXX_NOEXCEPT
 283:/usr/include/c++/6/bits/stl_tree.h ****       { return static_cast<_Link_type>(_M_node)->_M_valptr(); }
 284:/usr/include/c++/6/bits/stl_tree.h **** 
 285:/usr/include/c++/6/bits/stl_tree.h ****       _Self&
 286:/usr/include/c++/6/bits/stl_tree.h ****       operator++() _GLIBCXX_NOEXCEPT
 287:/usr/include/c++/6/bits/stl_tree.h ****       {
 288:/usr/include/c++/6/bits/stl_tree.h **** 	_M_node = _Rb_tree_increment(_M_node);
 289:/usr/include/c++/6/bits/stl_tree.h **** 	return *this;
 290:/usr/include/c++/6/bits/stl_tree.h ****       }
 291:/usr/include/c++/6/bits/stl_tree.h **** 
 292:/usr/include/c++/6/bits/stl_tree.h ****       _Self
GAS LISTING /tmp/ccvUPO8Q.s 			page 368


 293:/usr/include/c++/6/bits/stl_tree.h ****       operator++(int) _GLIBCXX_NOEXCEPT
 294:/usr/include/c++/6/bits/stl_tree.h ****       {
 295:/usr/include/c++/6/bits/stl_tree.h **** 	_Self __tmp = *this;
 296:/usr/include/c++/6/bits/stl_tree.h **** 	_M_node = _Rb_tree_increment(_M_node);
 297:/usr/include/c++/6/bits/stl_tree.h **** 	return __tmp;
 298:/usr/include/c++/6/bits/stl_tree.h ****       }
 299:/usr/include/c++/6/bits/stl_tree.h **** 
 300:/usr/include/c++/6/bits/stl_tree.h ****       _Self&
 301:/usr/include/c++/6/bits/stl_tree.h ****       operator--() _GLIBCXX_NOEXCEPT
 302:/usr/include/c++/6/bits/stl_tree.h ****       {
 303:/usr/include/c++/6/bits/stl_tree.h **** 	_M_node = _Rb_tree_decrement(_M_node);
 304:/usr/include/c++/6/bits/stl_tree.h **** 	return *this;
 305:/usr/include/c++/6/bits/stl_tree.h ****       }
 306:/usr/include/c++/6/bits/stl_tree.h **** 
 307:/usr/include/c++/6/bits/stl_tree.h ****       _Self
 308:/usr/include/c++/6/bits/stl_tree.h ****       operator--(int) _GLIBCXX_NOEXCEPT
 309:/usr/include/c++/6/bits/stl_tree.h ****       {
 310:/usr/include/c++/6/bits/stl_tree.h **** 	_Self __tmp = *this;
 311:/usr/include/c++/6/bits/stl_tree.h **** 	_M_node = _Rb_tree_decrement(_M_node);
 312:/usr/include/c++/6/bits/stl_tree.h **** 	return __tmp;
 313:/usr/include/c++/6/bits/stl_tree.h ****       }
 314:/usr/include/c++/6/bits/stl_tree.h **** 
 315:/usr/include/c++/6/bits/stl_tree.h ****       bool
 316:/usr/include/c++/6/bits/stl_tree.h ****       operator==(const _Self& __x) const _GLIBCXX_NOEXCEPT
 317:/usr/include/c++/6/bits/stl_tree.h ****       { return _M_node == __x._M_node; }
 318:/usr/include/c++/6/bits/stl_tree.h **** 
 319:/usr/include/c++/6/bits/stl_tree.h ****       bool
 320:/usr/include/c++/6/bits/stl_tree.h ****       operator!=(const _Self& __x) const _GLIBCXX_NOEXCEPT
 321:/usr/include/c++/6/bits/stl_tree.h ****       { return _M_node != __x._M_node; }
 322:/usr/include/c++/6/bits/stl_tree.h **** 
 323:/usr/include/c++/6/bits/stl_tree.h ****       _Base_ptr _M_node;
 324:/usr/include/c++/6/bits/stl_tree.h ****     };
 325:/usr/include/c++/6/bits/stl_tree.h **** 
 326:/usr/include/c++/6/bits/stl_tree.h ****   template<typename _Val>
 327:/usr/include/c++/6/bits/stl_tree.h ****     inline bool
 328:/usr/include/c++/6/bits/stl_tree.h ****     operator==(const _Rb_tree_iterator<_Val>& __x,
 329:/usr/include/c++/6/bits/stl_tree.h ****                const _Rb_tree_const_iterator<_Val>& __y) _GLIBCXX_NOEXCEPT
 330:/usr/include/c++/6/bits/stl_tree.h ****     { return __x._M_node == __y._M_node; }
 331:/usr/include/c++/6/bits/stl_tree.h **** 
 332:/usr/include/c++/6/bits/stl_tree.h ****   template<typename _Val>
 333:/usr/include/c++/6/bits/stl_tree.h ****     inline bool
 334:/usr/include/c++/6/bits/stl_tree.h ****     operator!=(const _Rb_tree_iterator<_Val>& __x,
 335:/usr/include/c++/6/bits/stl_tree.h ****                const _Rb_tree_const_iterator<_Val>& __y) _GLIBCXX_NOEXCEPT
 336:/usr/include/c++/6/bits/stl_tree.h ****     { return __x._M_node != __y._M_node; }
 337:/usr/include/c++/6/bits/stl_tree.h **** 
 338:/usr/include/c++/6/bits/stl_tree.h ****   void
 339:/usr/include/c++/6/bits/stl_tree.h ****   _Rb_tree_insert_and_rebalance(const bool __insert_left,
 340:/usr/include/c++/6/bits/stl_tree.h ****                                 _Rb_tree_node_base* __x,
 341:/usr/include/c++/6/bits/stl_tree.h ****                                 _Rb_tree_node_base* __p,
 342:/usr/include/c++/6/bits/stl_tree.h ****                                 _Rb_tree_node_base& __header) throw ();
 343:/usr/include/c++/6/bits/stl_tree.h **** 
 344:/usr/include/c++/6/bits/stl_tree.h ****   _Rb_tree_node_base*
 345:/usr/include/c++/6/bits/stl_tree.h ****   _Rb_tree_rebalance_for_erase(_Rb_tree_node_base* const __z,
 346:/usr/include/c++/6/bits/stl_tree.h **** 			       _Rb_tree_node_base& __header) throw ();
 347:/usr/include/c++/6/bits/stl_tree.h **** 
 348:/usr/include/c++/6/bits/stl_tree.h **** #if __cplusplus > 201103L
 349:/usr/include/c++/6/bits/stl_tree.h ****   template<typename _Cmp, typename _SfinaeType, typename = __void_t<>>
GAS LISTING /tmp/ccvUPO8Q.s 			page 369


 350:/usr/include/c++/6/bits/stl_tree.h ****     struct __has_is_transparent
 351:/usr/include/c++/6/bits/stl_tree.h ****     { };
 352:/usr/include/c++/6/bits/stl_tree.h **** 
 353:/usr/include/c++/6/bits/stl_tree.h ****   template<typename _Cmp, typename _SfinaeType>
 354:/usr/include/c++/6/bits/stl_tree.h ****     struct __has_is_transparent<_Cmp, _SfinaeType,
 355:/usr/include/c++/6/bits/stl_tree.h **** 				__void_t<typename _Cmp::is_transparent>>
 356:/usr/include/c++/6/bits/stl_tree.h ****     { typedef void type; };
 357:/usr/include/c++/6/bits/stl_tree.h **** #endif
 358:/usr/include/c++/6/bits/stl_tree.h **** 
 359:/usr/include/c++/6/bits/stl_tree.h ****   template<typename _Key, typename _Val, typename _KeyOfValue,
 360:/usr/include/c++/6/bits/stl_tree.h ****            typename _Compare, typename _Alloc = allocator<_Val> >
 361:/usr/include/c++/6/bits/stl_tree.h ****     class _Rb_tree
 362:/usr/include/c++/6/bits/stl_tree.h ****     {
 363:/usr/include/c++/6/bits/stl_tree.h ****       typedef typename __gnu_cxx::__alloc_traits<_Alloc>::template
 364:/usr/include/c++/6/bits/stl_tree.h ****         rebind<_Rb_tree_node<_Val> >::other _Node_allocator;
 365:/usr/include/c++/6/bits/stl_tree.h **** 
 366:/usr/include/c++/6/bits/stl_tree.h ****       typedef __gnu_cxx::__alloc_traits<_Node_allocator> _Alloc_traits;
 367:/usr/include/c++/6/bits/stl_tree.h **** 
 368:/usr/include/c++/6/bits/stl_tree.h ****     protected:
 369:/usr/include/c++/6/bits/stl_tree.h ****       typedef _Rb_tree_node_base* 		_Base_ptr;
 370:/usr/include/c++/6/bits/stl_tree.h ****       typedef const _Rb_tree_node_base* 	_Const_Base_ptr;
 371:/usr/include/c++/6/bits/stl_tree.h ****       typedef _Rb_tree_node<_Val>* 		_Link_type;
 372:/usr/include/c++/6/bits/stl_tree.h ****       typedef const _Rb_tree_node<_Val>*	_Const_Link_type;
 373:/usr/include/c++/6/bits/stl_tree.h **** 
 374:/usr/include/c++/6/bits/stl_tree.h ****     private:
 375:/usr/include/c++/6/bits/stl_tree.h ****       // Functor recycling a pool of nodes and using allocation once the pool
 376:/usr/include/c++/6/bits/stl_tree.h ****       // is empty.
 377:/usr/include/c++/6/bits/stl_tree.h ****       struct _Reuse_or_alloc_node
 378:/usr/include/c++/6/bits/stl_tree.h ****       {
 379:/usr/include/c++/6/bits/stl_tree.h **** 	_Reuse_or_alloc_node(_Rb_tree& __t)
 380:/usr/include/c++/6/bits/stl_tree.h **** 	  : _M_root(__t._M_root()), _M_nodes(__t._M_rightmost()), _M_t(__t)
 381:/usr/include/c++/6/bits/stl_tree.h **** 	{
 382:/usr/include/c++/6/bits/stl_tree.h **** 	  if (_M_root)
 383:/usr/include/c++/6/bits/stl_tree.h **** 	    {
 384:/usr/include/c++/6/bits/stl_tree.h **** 	      _M_root->_M_parent = 0;
 385:/usr/include/c++/6/bits/stl_tree.h **** 
 386:/usr/include/c++/6/bits/stl_tree.h **** 	      if (_M_nodes->_M_left)
 387:/usr/include/c++/6/bits/stl_tree.h **** 		_M_nodes = _M_nodes->_M_left;
 388:/usr/include/c++/6/bits/stl_tree.h **** 	    }
 389:/usr/include/c++/6/bits/stl_tree.h **** 	  else
 390:/usr/include/c++/6/bits/stl_tree.h **** 	    _M_nodes = 0;
 391:/usr/include/c++/6/bits/stl_tree.h **** 	}
 392:/usr/include/c++/6/bits/stl_tree.h **** 
 393:/usr/include/c++/6/bits/stl_tree.h **** #if __cplusplus >= 201103L
 394:/usr/include/c++/6/bits/stl_tree.h **** 	_Reuse_or_alloc_node(const _Reuse_or_alloc_node&) = delete;
 395:/usr/include/c++/6/bits/stl_tree.h **** #endif
 396:/usr/include/c++/6/bits/stl_tree.h **** 
 397:/usr/include/c++/6/bits/stl_tree.h **** 	~_Reuse_or_alloc_node()
 398:/usr/include/c++/6/bits/stl_tree.h **** 	{ _M_t._M_erase(static_cast<_Link_type>(_M_root)); }
 399:/usr/include/c++/6/bits/stl_tree.h **** 
 400:/usr/include/c++/6/bits/stl_tree.h **** 	template<typename _Arg>
 401:/usr/include/c++/6/bits/stl_tree.h **** 	  _Link_type
 402:/usr/include/c++/6/bits/stl_tree.h **** #if __cplusplus < 201103L
 403:/usr/include/c++/6/bits/stl_tree.h **** 	  operator()(const _Arg& __arg)
 404:/usr/include/c++/6/bits/stl_tree.h **** #else
 405:/usr/include/c++/6/bits/stl_tree.h **** 	  operator()(_Arg&& __arg)
 406:/usr/include/c++/6/bits/stl_tree.h **** #endif
GAS LISTING /tmp/ccvUPO8Q.s 			page 370


 407:/usr/include/c++/6/bits/stl_tree.h **** 	  {
 408:/usr/include/c++/6/bits/stl_tree.h **** 	    _Link_type __node = static_cast<_Link_type>(_M_extract());
 409:/usr/include/c++/6/bits/stl_tree.h **** 	    if (__node)
 410:/usr/include/c++/6/bits/stl_tree.h **** 	      {
 411:/usr/include/c++/6/bits/stl_tree.h **** 		_M_t._M_destroy_node(__node);
 412:/usr/include/c++/6/bits/stl_tree.h **** 		_M_t._M_construct_node(__node, _GLIBCXX_FORWARD(_Arg, __arg));
 413:/usr/include/c++/6/bits/stl_tree.h **** 		return __node;
 414:/usr/include/c++/6/bits/stl_tree.h **** 	      }
 415:/usr/include/c++/6/bits/stl_tree.h **** 
 416:/usr/include/c++/6/bits/stl_tree.h **** 	    return _M_t._M_create_node(_GLIBCXX_FORWARD(_Arg, __arg));
 417:/usr/include/c++/6/bits/stl_tree.h **** 	  }
 418:/usr/include/c++/6/bits/stl_tree.h **** 
 419:/usr/include/c++/6/bits/stl_tree.h ****       private:
 420:/usr/include/c++/6/bits/stl_tree.h **** 	_Base_ptr
 421:/usr/include/c++/6/bits/stl_tree.h **** 	_M_extract()
 422:/usr/include/c++/6/bits/stl_tree.h **** 	{
 423:/usr/include/c++/6/bits/stl_tree.h **** 	  if (!_M_nodes)
 424:/usr/include/c++/6/bits/stl_tree.h **** 	    return _M_nodes;
 425:/usr/include/c++/6/bits/stl_tree.h **** 
 426:/usr/include/c++/6/bits/stl_tree.h **** 	  _Base_ptr __node = _M_nodes;
 427:/usr/include/c++/6/bits/stl_tree.h **** 	  _M_nodes = _M_nodes->_M_parent;
 428:/usr/include/c++/6/bits/stl_tree.h **** 	  if (_M_nodes)
 429:/usr/include/c++/6/bits/stl_tree.h **** 	    {
 430:/usr/include/c++/6/bits/stl_tree.h **** 	      if (_M_nodes->_M_right == __node)
 431:/usr/include/c++/6/bits/stl_tree.h **** 		{
 432:/usr/include/c++/6/bits/stl_tree.h **** 		  _M_nodes->_M_right = 0;
 433:/usr/include/c++/6/bits/stl_tree.h **** 
 434:/usr/include/c++/6/bits/stl_tree.h **** 		  if (_M_nodes->_M_left)
 435:/usr/include/c++/6/bits/stl_tree.h **** 		    {
 436:/usr/include/c++/6/bits/stl_tree.h **** 		      _M_nodes = _M_nodes->_M_left;
 437:/usr/include/c++/6/bits/stl_tree.h **** 
 438:/usr/include/c++/6/bits/stl_tree.h **** 		      while (_M_nodes->_M_right)
 439:/usr/include/c++/6/bits/stl_tree.h **** 			_M_nodes = _M_nodes->_M_right;
 440:/usr/include/c++/6/bits/stl_tree.h **** 
 441:/usr/include/c++/6/bits/stl_tree.h **** 		      if (_M_nodes->_M_left)
 442:/usr/include/c++/6/bits/stl_tree.h **** 			_M_nodes = _M_nodes->_M_left;
 443:/usr/include/c++/6/bits/stl_tree.h **** 		    }
 444:/usr/include/c++/6/bits/stl_tree.h **** 		}
 445:/usr/include/c++/6/bits/stl_tree.h **** 	      else // __node is on the left.
 446:/usr/include/c++/6/bits/stl_tree.h **** 		_M_nodes->_M_left = 0;
 447:/usr/include/c++/6/bits/stl_tree.h **** 	    }
 448:/usr/include/c++/6/bits/stl_tree.h **** 	  else
 449:/usr/include/c++/6/bits/stl_tree.h **** 	    _M_root = 0;
 450:/usr/include/c++/6/bits/stl_tree.h **** 
 451:/usr/include/c++/6/bits/stl_tree.h **** 	  return __node;
 452:/usr/include/c++/6/bits/stl_tree.h **** 	}
 453:/usr/include/c++/6/bits/stl_tree.h **** 
 454:/usr/include/c++/6/bits/stl_tree.h **** 	_Base_ptr _M_root;
 455:/usr/include/c++/6/bits/stl_tree.h **** 	_Base_ptr _M_nodes;
 456:/usr/include/c++/6/bits/stl_tree.h **** 	_Rb_tree& _M_t;
 457:/usr/include/c++/6/bits/stl_tree.h ****       };
 458:/usr/include/c++/6/bits/stl_tree.h **** 
 459:/usr/include/c++/6/bits/stl_tree.h ****       // Functor similar to the previous one but without any pool of nodes to
 460:/usr/include/c++/6/bits/stl_tree.h ****       // recycle.
 461:/usr/include/c++/6/bits/stl_tree.h ****       struct _Alloc_node
 462:/usr/include/c++/6/bits/stl_tree.h ****       {
 463:/usr/include/c++/6/bits/stl_tree.h **** 	_Alloc_node(_Rb_tree& __t)
GAS LISTING /tmp/ccvUPO8Q.s 			page 371


 464:/usr/include/c++/6/bits/stl_tree.h **** 	  : _M_t(__t) { }
 465:/usr/include/c++/6/bits/stl_tree.h **** 
 466:/usr/include/c++/6/bits/stl_tree.h **** 	template<typename _Arg>
 467:/usr/include/c++/6/bits/stl_tree.h **** 	  _Link_type
 468:/usr/include/c++/6/bits/stl_tree.h **** #if __cplusplus < 201103L
 469:/usr/include/c++/6/bits/stl_tree.h **** 	  operator()(const _Arg& __arg) const
 470:/usr/include/c++/6/bits/stl_tree.h **** #else
 471:/usr/include/c++/6/bits/stl_tree.h **** 	  operator()(_Arg&& __arg) const
 472:/usr/include/c++/6/bits/stl_tree.h **** #endif
 473:/usr/include/c++/6/bits/stl_tree.h **** 	  { return _M_t._M_create_node(_GLIBCXX_FORWARD(_Arg, __arg)); }
 474:/usr/include/c++/6/bits/stl_tree.h **** 
 475:/usr/include/c++/6/bits/stl_tree.h ****       private:
 476:/usr/include/c++/6/bits/stl_tree.h **** 	_Rb_tree& _M_t;
 477:/usr/include/c++/6/bits/stl_tree.h ****       };
 478:/usr/include/c++/6/bits/stl_tree.h **** 
 479:/usr/include/c++/6/bits/stl_tree.h ****     public:
 480:/usr/include/c++/6/bits/stl_tree.h ****       typedef _Key 				key_type;
 481:/usr/include/c++/6/bits/stl_tree.h ****       typedef _Val 				value_type;
 482:/usr/include/c++/6/bits/stl_tree.h ****       typedef value_type* 			pointer;
 483:/usr/include/c++/6/bits/stl_tree.h ****       typedef const value_type* 		const_pointer;
 484:/usr/include/c++/6/bits/stl_tree.h ****       typedef value_type& 			reference;
 485:/usr/include/c++/6/bits/stl_tree.h ****       typedef const value_type& 		const_reference;
 486:/usr/include/c++/6/bits/stl_tree.h ****       typedef size_t 				size_type;
 487:/usr/include/c++/6/bits/stl_tree.h ****       typedef ptrdiff_t 			difference_type;
 488:/usr/include/c++/6/bits/stl_tree.h ****       typedef _Alloc 				allocator_type;
 489:/usr/include/c++/6/bits/stl_tree.h **** 
 490:/usr/include/c++/6/bits/stl_tree.h ****       _Node_allocator&
 491:/usr/include/c++/6/bits/stl_tree.h ****       _M_get_Node_allocator() _GLIBCXX_NOEXCEPT
 492:/usr/include/c++/6/bits/stl_tree.h ****       { return *static_cast<_Node_allocator*>(&this->_M_impl); }
 493:/usr/include/c++/6/bits/stl_tree.h ****       
 494:/usr/include/c++/6/bits/stl_tree.h ****       const _Node_allocator&
 495:/usr/include/c++/6/bits/stl_tree.h ****       _M_get_Node_allocator() const _GLIBCXX_NOEXCEPT
 496:/usr/include/c++/6/bits/stl_tree.h ****       { return *static_cast<const _Node_allocator*>(&this->_M_impl); }
 497:/usr/include/c++/6/bits/stl_tree.h **** 
 498:/usr/include/c++/6/bits/stl_tree.h ****       allocator_type
 499:/usr/include/c++/6/bits/stl_tree.h ****       get_allocator() const _GLIBCXX_NOEXCEPT
 500:/usr/include/c++/6/bits/stl_tree.h ****       { return allocator_type(_M_get_Node_allocator()); }
 501:/usr/include/c++/6/bits/stl_tree.h **** 
 502:/usr/include/c++/6/bits/stl_tree.h ****     protected:
 503:/usr/include/c++/6/bits/stl_tree.h ****       _Link_type
 504:/usr/include/c++/6/bits/stl_tree.h ****       _M_get_node()
 505:/usr/include/c++/6/bits/stl_tree.h ****       { return _Alloc_traits::allocate(_M_get_Node_allocator(), 1); }
 506:/usr/include/c++/6/bits/stl_tree.h **** 
 507:/usr/include/c++/6/bits/stl_tree.h ****       void
 508:/usr/include/c++/6/bits/stl_tree.h ****       _M_put_node(_Link_type __p) _GLIBCXX_NOEXCEPT
 509:/usr/include/c++/6/bits/stl_tree.h ****       { _Alloc_traits::deallocate(_M_get_Node_allocator(), __p, 1); }
 510:/usr/include/c++/6/bits/stl_tree.h **** 
 511:/usr/include/c++/6/bits/stl_tree.h **** #if __cplusplus < 201103L
 512:/usr/include/c++/6/bits/stl_tree.h ****       void
 513:/usr/include/c++/6/bits/stl_tree.h ****       _M_construct_node(_Link_type __node, const value_type& __x)
 514:/usr/include/c++/6/bits/stl_tree.h ****       {
 515:/usr/include/c++/6/bits/stl_tree.h **** 	__try
 516:/usr/include/c++/6/bits/stl_tree.h **** 	  { get_allocator().construct(__node->_M_valptr(), __x); }
 517:/usr/include/c++/6/bits/stl_tree.h **** 	__catch(...)
 518:/usr/include/c++/6/bits/stl_tree.h **** 	  {
 519:/usr/include/c++/6/bits/stl_tree.h **** 	    _M_put_node(__node);
 520:/usr/include/c++/6/bits/stl_tree.h **** 	    __throw_exception_again;
GAS LISTING /tmp/ccvUPO8Q.s 			page 372


 521:/usr/include/c++/6/bits/stl_tree.h **** 	  }
 522:/usr/include/c++/6/bits/stl_tree.h ****       }
 523:/usr/include/c++/6/bits/stl_tree.h **** 
 524:/usr/include/c++/6/bits/stl_tree.h ****       _Link_type
 525:/usr/include/c++/6/bits/stl_tree.h ****       _M_create_node(const value_type& __x)
 526:/usr/include/c++/6/bits/stl_tree.h ****       {
 527:/usr/include/c++/6/bits/stl_tree.h **** 	_Link_type __tmp = _M_get_node();
 528:/usr/include/c++/6/bits/stl_tree.h **** 	_M_construct_node(__tmp, __x);
 529:/usr/include/c++/6/bits/stl_tree.h **** 	return __tmp;
 530:/usr/include/c++/6/bits/stl_tree.h ****       }
 531:/usr/include/c++/6/bits/stl_tree.h **** 
 532:/usr/include/c++/6/bits/stl_tree.h ****       void
 533:/usr/include/c++/6/bits/stl_tree.h ****       _M_destroy_node(_Link_type __p)
 534:/usr/include/c++/6/bits/stl_tree.h ****       { get_allocator().destroy(__p->_M_valptr()); }
 535:/usr/include/c++/6/bits/stl_tree.h **** #else
 536:/usr/include/c++/6/bits/stl_tree.h ****       template<typename... _Args>
 537:/usr/include/c++/6/bits/stl_tree.h **** 	void
 538:/usr/include/c++/6/bits/stl_tree.h **** 	_M_construct_node(_Link_type __node, _Args&&... __args)
 539:/usr/include/c++/6/bits/stl_tree.h **** 	{
 540:/usr/include/c++/6/bits/stl_tree.h **** 	  __try
 541:/usr/include/c++/6/bits/stl_tree.h **** 	    {
 542:/usr/include/c++/6/bits/stl_tree.h **** 	      ::new(__node) _Rb_tree_node<_Val>;
 543:/usr/include/c++/6/bits/stl_tree.h **** 	      _Alloc_traits::construct(_M_get_Node_allocator(),
 544:/usr/include/c++/6/bits/stl_tree.h **** 				       __node->_M_valptr(),
 545:/usr/include/c++/6/bits/stl_tree.h **** 				       std::forward<_Args>(__args)...);
 546:/usr/include/c++/6/bits/stl_tree.h **** 	    }
 547:/usr/include/c++/6/bits/stl_tree.h **** 	  __catch(...)
 548:/usr/include/c++/6/bits/stl_tree.h **** 	    {
 549:/usr/include/c++/6/bits/stl_tree.h **** 	      __node->~_Rb_tree_node<_Val>();
 550:/usr/include/c++/6/bits/stl_tree.h **** 	      _M_put_node(__node);
 551:/usr/include/c++/6/bits/stl_tree.h **** 	      __throw_exception_again;
 552:/usr/include/c++/6/bits/stl_tree.h **** 	    }
 553:/usr/include/c++/6/bits/stl_tree.h **** 	}
 554:/usr/include/c++/6/bits/stl_tree.h **** 
 555:/usr/include/c++/6/bits/stl_tree.h ****       template<typename... _Args>
 556:/usr/include/c++/6/bits/stl_tree.h ****         _Link_type
 557:/usr/include/c++/6/bits/stl_tree.h ****         _M_create_node(_Args&&... __args)
 558:/usr/include/c++/6/bits/stl_tree.h **** 	{
 559:/usr/include/c++/6/bits/stl_tree.h **** 	  _Link_type __tmp = _M_get_node();
 560:/usr/include/c++/6/bits/stl_tree.h **** 	  _M_construct_node(__tmp, std::forward<_Args>(__args)...);
 561:/usr/include/c++/6/bits/stl_tree.h **** 	  return __tmp;
 562:/usr/include/c++/6/bits/stl_tree.h **** 	}
 563:/usr/include/c++/6/bits/stl_tree.h **** 
 564:/usr/include/c++/6/bits/stl_tree.h ****       void
 565:/usr/include/c++/6/bits/stl_tree.h ****       _M_destroy_node(_Link_type __p) noexcept
 566:/usr/include/c++/6/bits/stl_tree.h ****       {
 567:/usr/include/c++/6/bits/stl_tree.h **** 	_Alloc_traits::destroy(_M_get_Node_allocator(), __p->_M_valptr());
 568:/usr/include/c++/6/bits/stl_tree.h **** 	__p->~_Rb_tree_node<_Val>();
 569:/usr/include/c++/6/bits/stl_tree.h ****       }
 570:/usr/include/c++/6/bits/stl_tree.h **** #endif
 571:/usr/include/c++/6/bits/stl_tree.h **** 
 572:/usr/include/c++/6/bits/stl_tree.h ****       void
 573:/usr/include/c++/6/bits/stl_tree.h ****       _M_drop_node(_Link_type __p) _GLIBCXX_NOEXCEPT
 574:/usr/include/c++/6/bits/stl_tree.h ****       {
 575:/usr/include/c++/6/bits/stl_tree.h **** 	_M_destroy_node(__p);
 576:/usr/include/c++/6/bits/stl_tree.h **** 	_M_put_node(__p);
 577:/usr/include/c++/6/bits/stl_tree.h ****       }
GAS LISTING /tmp/ccvUPO8Q.s 			page 373


 578:/usr/include/c++/6/bits/stl_tree.h **** 
 579:/usr/include/c++/6/bits/stl_tree.h ****       template<typename _NodeGen>
 580:/usr/include/c++/6/bits/stl_tree.h **** 	_Link_type
 581:/usr/include/c++/6/bits/stl_tree.h **** 	_M_clone_node(_Const_Link_type __x, _NodeGen& __node_gen)
 582:/usr/include/c++/6/bits/stl_tree.h **** 	{
 583:/usr/include/c++/6/bits/stl_tree.h **** 	  _Link_type __tmp = __node_gen(*__x->_M_valptr());
 584:/usr/include/c++/6/bits/stl_tree.h **** 	  __tmp->_M_color = __x->_M_color;
 585:/usr/include/c++/6/bits/stl_tree.h **** 	  __tmp->_M_left = 0;
 586:/usr/include/c++/6/bits/stl_tree.h **** 	  __tmp->_M_right = 0;
 587:/usr/include/c++/6/bits/stl_tree.h **** 	  return __tmp;
 588:/usr/include/c++/6/bits/stl_tree.h **** 	}
 589:/usr/include/c++/6/bits/stl_tree.h **** 
 590:/usr/include/c++/6/bits/stl_tree.h ****     protected:
 591:/usr/include/c++/6/bits/stl_tree.h ****       // Unused _Is_pod_comparator is kept as it is part of mangled name.
 592:/usr/include/c++/6/bits/stl_tree.h ****       template<typename _Key_compare,
 593:/usr/include/c++/6/bits/stl_tree.h **** 	       bool /* _Is_pod_comparator */ = __is_pod(_Key_compare)>
 594:/usr/include/c++/6/bits/stl_tree.h ****         struct _Rb_tree_impl : public _Node_allocator
 595:/usr/include/c++/6/bits/stl_tree.h ****         {
 596:/usr/include/c++/6/bits/stl_tree.h **** 	  _Key_compare		_M_key_compare;
 597:/usr/include/c++/6/bits/stl_tree.h **** 	  _Rb_tree_node_base 	_M_header;
 598:/usr/include/c++/6/bits/stl_tree.h **** 	  size_type 		_M_node_count; // Keeps track of size of tree.
 599:/usr/include/c++/6/bits/stl_tree.h **** 
 600:/usr/include/c++/6/bits/stl_tree.h **** 	  _Rb_tree_impl()
 601:/usr/include/c++/6/bits/stl_tree.h **** 	  : _Node_allocator(), _M_key_compare(), _M_header(),
 602:/usr/include/c++/6/bits/stl_tree.h **** 	    _M_node_count(0)
 603:/usr/include/c++/6/bits/stl_tree.h **** 	  { _M_initialize(); }
 604:/usr/include/c++/6/bits/stl_tree.h **** 
 605:/usr/include/c++/6/bits/stl_tree.h **** 	  _Rb_tree_impl(const _Key_compare& __comp, const _Node_allocator& __a)
 606:/usr/include/c++/6/bits/stl_tree.h **** 	  : _Node_allocator(__a), _M_key_compare(__comp), _M_header(),
 607:/usr/include/c++/6/bits/stl_tree.h **** 	    _M_node_count(0)
 608:/usr/include/c++/6/bits/stl_tree.h **** 	  { _M_initialize(); }
 609:/usr/include/c++/6/bits/stl_tree.h **** 
 610:/usr/include/c++/6/bits/stl_tree.h **** #if __cplusplus >= 201103L
 611:/usr/include/c++/6/bits/stl_tree.h **** 	  _Rb_tree_impl(const _Key_compare& __comp, _Node_allocator&& __a)
 612:/usr/include/c++/6/bits/stl_tree.h **** 	  : _Node_allocator(std::move(__a)), _M_key_compare(__comp),
 613:/usr/include/c++/6/bits/stl_tree.h **** 	    _M_header(), _M_node_count(0)
 614:/usr/include/c++/6/bits/stl_tree.h **** 	  { _M_initialize(); }
 615:/usr/include/c++/6/bits/stl_tree.h **** #endif
 616:/usr/include/c++/6/bits/stl_tree.h **** 
 617:/usr/include/c++/6/bits/stl_tree.h **** 	  void
 618:/usr/include/c++/6/bits/stl_tree.h **** 	  _M_reset()
 619:/usr/include/c++/6/bits/stl_tree.h **** 	  {
 620:/usr/include/c++/6/bits/stl_tree.h **** 	    this->_M_header._M_parent = 0;
 621:/usr/include/c++/6/bits/stl_tree.h **** 	    this->_M_header._M_left = &this->_M_header;
 622:/usr/include/c++/6/bits/stl_tree.h **** 	    this->_M_header._M_right = &this->_M_header;
 623:/usr/include/c++/6/bits/stl_tree.h **** 	    this->_M_node_count = 0;
 624:/usr/include/c++/6/bits/stl_tree.h **** 	  }
 625:/usr/include/c++/6/bits/stl_tree.h **** 
 626:/usr/include/c++/6/bits/stl_tree.h **** 	private:
 627:/usr/include/c++/6/bits/stl_tree.h **** 	  void
 628:/usr/include/c++/6/bits/stl_tree.h **** 	  _M_initialize()
 629:/usr/include/c++/6/bits/stl_tree.h **** 	  {
 630:/usr/include/c++/6/bits/stl_tree.h **** 	    this->_M_header._M_color = _S_red;
 631:/usr/include/c++/6/bits/stl_tree.h **** 	    this->_M_header._M_parent = 0;
 632:/usr/include/c++/6/bits/stl_tree.h **** 	    this->_M_header._M_left = &this->_M_header;
 633:/usr/include/c++/6/bits/stl_tree.h **** 	    this->_M_header._M_right = &this->_M_header;
 634:/usr/include/c++/6/bits/stl_tree.h **** 	  }	    
GAS LISTING /tmp/ccvUPO8Q.s 			page 374


 635:/usr/include/c++/6/bits/stl_tree.h **** 	};
 636:/usr/include/c++/6/bits/stl_tree.h **** 
 637:/usr/include/c++/6/bits/stl_tree.h ****       _Rb_tree_impl<_Compare> _M_impl;
 638:/usr/include/c++/6/bits/stl_tree.h **** 
 639:/usr/include/c++/6/bits/stl_tree.h ****     protected:
 640:/usr/include/c++/6/bits/stl_tree.h ****       _Base_ptr&
 641:/usr/include/c++/6/bits/stl_tree.h ****       _M_root() _GLIBCXX_NOEXCEPT
 642:/usr/include/c++/6/bits/stl_tree.h ****       { return this->_M_impl._M_header._M_parent; }
 643:/usr/include/c++/6/bits/stl_tree.h **** 
 644:/usr/include/c++/6/bits/stl_tree.h ****       _Const_Base_ptr
 645:/usr/include/c++/6/bits/stl_tree.h ****       _M_root() const _GLIBCXX_NOEXCEPT
 646:/usr/include/c++/6/bits/stl_tree.h ****       { return this->_M_impl._M_header._M_parent; }
 647:/usr/include/c++/6/bits/stl_tree.h **** 
 648:/usr/include/c++/6/bits/stl_tree.h ****       _Base_ptr&
 649:/usr/include/c++/6/bits/stl_tree.h ****       _M_leftmost() _GLIBCXX_NOEXCEPT
 650:/usr/include/c++/6/bits/stl_tree.h ****       { return this->_M_impl._M_header._M_left; }
 651:/usr/include/c++/6/bits/stl_tree.h **** 
 652:/usr/include/c++/6/bits/stl_tree.h ****       _Const_Base_ptr
 653:/usr/include/c++/6/bits/stl_tree.h ****       _M_leftmost() const _GLIBCXX_NOEXCEPT
 654:/usr/include/c++/6/bits/stl_tree.h ****       { return this->_M_impl._M_header._M_left; }
 655:/usr/include/c++/6/bits/stl_tree.h **** 
 656:/usr/include/c++/6/bits/stl_tree.h ****       _Base_ptr&
 657:/usr/include/c++/6/bits/stl_tree.h ****       _M_rightmost() _GLIBCXX_NOEXCEPT
 658:/usr/include/c++/6/bits/stl_tree.h ****       { return this->_M_impl._M_header._M_right; }
 659:/usr/include/c++/6/bits/stl_tree.h **** 
 660:/usr/include/c++/6/bits/stl_tree.h ****       _Const_Base_ptr
 661:/usr/include/c++/6/bits/stl_tree.h ****       _M_rightmost() const _GLIBCXX_NOEXCEPT
 662:/usr/include/c++/6/bits/stl_tree.h ****       { return this->_M_impl._M_header._M_right; }
 663:/usr/include/c++/6/bits/stl_tree.h **** 
 664:/usr/include/c++/6/bits/stl_tree.h ****       _Link_type
 665:/usr/include/c++/6/bits/stl_tree.h ****       _M_begin() _GLIBCXX_NOEXCEPT
 8141              		.loc 27 665 0
 8142              		.cfi_startproc
 8143 0000 55       		pushq	%rbp
 8144              		.cfi_def_cfa_offset 16
 8145              		.cfi_offset 6, -16
 8146 0001 4889E5   		movq	%rsp, %rbp
 8147              		.cfi_def_cfa_register 6
 8148 0004 48897DF8 		movq	%rdi, -8(%rbp)
 666:/usr/include/c++/6/bits/stl_tree.h ****       { return static_cast<_Link_type>(this->_M_impl._M_header._M_parent); }
 8149              		.loc 27 666 0
 8150 0008 488B45F8 		movq	-8(%rbp), %rax
 8151 000c 488B4010 		movq	16(%rax), %rax
 8152 0010 5D       		popq	%rbp
 8153              		.cfi_def_cfa 7, 8
 8154 0011 C3       		ret
 8155              		.cfi_endproc
 8156              	.LFE12626:
 8158              		.section	.text._ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_St5dequeIS4_SaIS
 8159              		.align 2
 8160              		.weak	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_St5dequeIS4_SaIS4_EEESt10
 8162              	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_St5dequeIS4_SaIS4_EEESt10_Select
 8163              	.LFB12642:
 665:/usr/include/c++/6/bits/stl_tree.h ****       { return static_cast<_Link_type>(this->_M_impl._M_header._M_parent); }
 8164              		.loc 27 665 0
 8165              		.cfi_startproc
 8166 0000 55       		pushq	%rbp
GAS LISTING /tmp/ccvUPO8Q.s 			page 375


 8167              		.cfi_def_cfa_offset 16
 8168              		.cfi_offset 6, -16
 8169 0001 4889E5   		movq	%rsp, %rbp
 8170              		.cfi_def_cfa_register 6
 8171 0004 48897DF8 		movq	%rdi, -8(%rbp)
 8172              		.loc 27 666 0
 8173 0008 488B45F8 		movq	-8(%rbp), %rax
 8174 000c 488B4010 		movq	16(%rax), %rax
 8175 0010 5D       		popq	%rbp
 8176              		.cfi_def_cfa 7, 8
 8177 0011 C3       		ret
 8178              		.cfi_endproc
 8179              	.LFE12642:
 8181              		.section	.text._ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFv
 8182              		.align 2
 8183              		.weak	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt
 8185              	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt10_Sele
 8186              	.LFB12655:
 667:/usr/include/c++/6/bits/stl_tree.h **** 
 668:/usr/include/c++/6/bits/stl_tree.h ****       _Const_Link_type
 669:/usr/include/c++/6/bits/stl_tree.h ****       _M_begin() const _GLIBCXX_NOEXCEPT
 670:/usr/include/c++/6/bits/stl_tree.h ****       {
 671:/usr/include/c++/6/bits/stl_tree.h **** 	return static_cast<_Const_Link_type>
 672:/usr/include/c++/6/bits/stl_tree.h **** 	  (this->_M_impl._M_header._M_parent);
 673:/usr/include/c++/6/bits/stl_tree.h ****       }
 674:/usr/include/c++/6/bits/stl_tree.h **** 
 675:/usr/include/c++/6/bits/stl_tree.h ****       _Base_ptr
 676:/usr/include/c++/6/bits/stl_tree.h ****       _M_end() _GLIBCXX_NOEXCEPT
 677:/usr/include/c++/6/bits/stl_tree.h ****       { return &this->_M_impl._M_header; }
 678:/usr/include/c++/6/bits/stl_tree.h **** 
 679:/usr/include/c++/6/bits/stl_tree.h ****       _Const_Base_ptr
 680:/usr/include/c++/6/bits/stl_tree.h ****       _M_end() const _GLIBCXX_NOEXCEPT
 681:/usr/include/c++/6/bits/stl_tree.h ****       { return &this->_M_impl._M_header; }
 682:/usr/include/c++/6/bits/stl_tree.h **** 
 683:/usr/include/c++/6/bits/stl_tree.h ****       static const_reference
 684:/usr/include/c++/6/bits/stl_tree.h ****       _S_value(_Const_Link_type __x)
 685:/usr/include/c++/6/bits/stl_tree.h ****       { return *__x->_M_valptr(); }
 686:/usr/include/c++/6/bits/stl_tree.h **** 
 687:/usr/include/c++/6/bits/stl_tree.h ****       static const _Key&
 688:/usr/include/c++/6/bits/stl_tree.h ****       _S_key(_Const_Link_type __x)
 689:/usr/include/c++/6/bits/stl_tree.h ****       { return _KeyOfValue()(_S_value(__x)); }
 690:/usr/include/c++/6/bits/stl_tree.h **** 
 691:/usr/include/c++/6/bits/stl_tree.h ****       static _Link_type
 692:/usr/include/c++/6/bits/stl_tree.h ****       _S_left(_Base_ptr __x) _GLIBCXX_NOEXCEPT
 693:/usr/include/c++/6/bits/stl_tree.h ****       { return static_cast<_Link_type>(__x->_M_left); }
 694:/usr/include/c++/6/bits/stl_tree.h **** 
 695:/usr/include/c++/6/bits/stl_tree.h ****       static _Const_Link_type
 696:/usr/include/c++/6/bits/stl_tree.h ****       _S_left(_Const_Base_ptr __x) _GLIBCXX_NOEXCEPT
 697:/usr/include/c++/6/bits/stl_tree.h ****       { return static_cast<_Const_Link_type>(__x->_M_left); }
 698:/usr/include/c++/6/bits/stl_tree.h **** 
 699:/usr/include/c++/6/bits/stl_tree.h ****       static _Link_type
 700:/usr/include/c++/6/bits/stl_tree.h ****       _S_right(_Base_ptr __x) _GLIBCXX_NOEXCEPT
 701:/usr/include/c++/6/bits/stl_tree.h ****       { return static_cast<_Link_type>(__x->_M_right); }
 702:/usr/include/c++/6/bits/stl_tree.h **** 
 703:/usr/include/c++/6/bits/stl_tree.h ****       static _Const_Link_type
 704:/usr/include/c++/6/bits/stl_tree.h ****       _S_right(_Const_Base_ptr __x) _GLIBCXX_NOEXCEPT
 705:/usr/include/c++/6/bits/stl_tree.h ****       { return static_cast<_Const_Link_type>(__x->_M_right); }
GAS LISTING /tmp/ccvUPO8Q.s 			page 376


 706:/usr/include/c++/6/bits/stl_tree.h **** 
 707:/usr/include/c++/6/bits/stl_tree.h ****       static const_reference
 708:/usr/include/c++/6/bits/stl_tree.h ****       _S_value(_Const_Base_ptr __x)
 709:/usr/include/c++/6/bits/stl_tree.h ****       { return *static_cast<_Const_Link_type>(__x)->_M_valptr(); }
 710:/usr/include/c++/6/bits/stl_tree.h **** 
 711:/usr/include/c++/6/bits/stl_tree.h ****       static const _Key&
 712:/usr/include/c++/6/bits/stl_tree.h ****       _S_key(_Const_Base_ptr __x)
 713:/usr/include/c++/6/bits/stl_tree.h ****       { return _KeyOfValue()(_S_value(__x)); }
 714:/usr/include/c++/6/bits/stl_tree.h **** 
 715:/usr/include/c++/6/bits/stl_tree.h ****       static _Base_ptr
 716:/usr/include/c++/6/bits/stl_tree.h ****       _S_minimum(_Base_ptr __x) _GLIBCXX_NOEXCEPT
 717:/usr/include/c++/6/bits/stl_tree.h ****       { return _Rb_tree_node_base::_S_minimum(__x); }
 718:/usr/include/c++/6/bits/stl_tree.h **** 
 719:/usr/include/c++/6/bits/stl_tree.h ****       static _Const_Base_ptr
 720:/usr/include/c++/6/bits/stl_tree.h ****       _S_minimum(_Const_Base_ptr __x) _GLIBCXX_NOEXCEPT
 721:/usr/include/c++/6/bits/stl_tree.h ****       { return _Rb_tree_node_base::_S_minimum(__x); }
 722:/usr/include/c++/6/bits/stl_tree.h **** 
 723:/usr/include/c++/6/bits/stl_tree.h ****       static _Base_ptr
 724:/usr/include/c++/6/bits/stl_tree.h ****       _S_maximum(_Base_ptr __x) _GLIBCXX_NOEXCEPT
 725:/usr/include/c++/6/bits/stl_tree.h ****       { return _Rb_tree_node_base::_S_maximum(__x); }
 726:/usr/include/c++/6/bits/stl_tree.h **** 
 727:/usr/include/c++/6/bits/stl_tree.h ****       static _Const_Base_ptr
 728:/usr/include/c++/6/bits/stl_tree.h ****       _S_maximum(_Const_Base_ptr __x) _GLIBCXX_NOEXCEPT
 729:/usr/include/c++/6/bits/stl_tree.h ****       { return _Rb_tree_node_base::_S_maximum(__x); }
 730:/usr/include/c++/6/bits/stl_tree.h **** 
 731:/usr/include/c++/6/bits/stl_tree.h ****     public:
 732:/usr/include/c++/6/bits/stl_tree.h ****       typedef _Rb_tree_iterator<value_type>       iterator;
 733:/usr/include/c++/6/bits/stl_tree.h ****       typedef _Rb_tree_const_iterator<value_type> const_iterator;
 734:/usr/include/c++/6/bits/stl_tree.h **** 
 735:/usr/include/c++/6/bits/stl_tree.h ****       typedef std::reverse_iterator<iterator>       reverse_iterator;
 736:/usr/include/c++/6/bits/stl_tree.h ****       typedef std::reverse_iterator<const_iterator> const_reverse_iterator;
 737:/usr/include/c++/6/bits/stl_tree.h **** 
 738:/usr/include/c++/6/bits/stl_tree.h ****       pair<_Base_ptr, _Base_ptr>
 739:/usr/include/c++/6/bits/stl_tree.h ****       _M_get_insert_unique_pos(const key_type& __k);
 740:/usr/include/c++/6/bits/stl_tree.h **** 
 741:/usr/include/c++/6/bits/stl_tree.h ****       pair<_Base_ptr, _Base_ptr>
 742:/usr/include/c++/6/bits/stl_tree.h ****       _M_get_insert_equal_pos(const key_type& __k);
 743:/usr/include/c++/6/bits/stl_tree.h **** 
 744:/usr/include/c++/6/bits/stl_tree.h ****       pair<_Base_ptr, _Base_ptr>
 745:/usr/include/c++/6/bits/stl_tree.h ****       _M_get_insert_hint_unique_pos(const_iterator __pos,
 746:/usr/include/c++/6/bits/stl_tree.h **** 				    const key_type& __k);
 747:/usr/include/c++/6/bits/stl_tree.h **** 
 748:/usr/include/c++/6/bits/stl_tree.h ****       pair<_Base_ptr, _Base_ptr>
 749:/usr/include/c++/6/bits/stl_tree.h ****       _M_get_insert_hint_equal_pos(const_iterator __pos,
 750:/usr/include/c++/6/bits/stl_tree.h **** 				   const key_type& __k);
 751:/usr/include/c++/6/bits/stl_tree.h **** 
 752:/usr/include/c++/6/bits/stl_tree.h ****     private:
 753:/usr/include/c++/6/bits/stl_tree.h **** #if __cplusplus >= 201103L
 754:/usr/include/c++/6/bits/stl_tree.h ****       template<typename _Arg, typename _NodeGen>
 755:/usr/include/c++/6/bits/stl_tree.h ****         iterator
 756:/usr/include/c++/6/bits/stl_tree.h **** 	_M_insert_(_Base_ptr __x, _Base_ptr __y, _Arg&& __v, _NodeGen&);
 757:/usr/include/c++/6/bits/stl_tree.h **** 
 758:/usr/include/c++/6/bits/stl_tree.h ****       iterator
 759:/usr/include/c++/6/bits/stl_tree.h ****       _M_insert_node(_Base_ptr __x, _Base_ptr __y, _Link_type __z);
 760:/usr/include/c++/6/bits/stl_tree.h **** 
 761:/usr/include/c++/6/bits/stl_tree.h ****       template<typename _Arg>
 762:/usr/include/c++/6/bits/stl_tree.h ****         iterator
GAS LISTING /tmp/ccvUPO8Q.s 			page 377


 763:/usr/include/c++/6/bits/stl_tree.h ****         _M_insert_lower(_Base_ptr __y, _Arg&& __v);
 764:/usr/include/c++/6/bits/stl_tree.h **** 
 765:/usr/include/c++/6/bits/stl_tree.h ****       template<typename _Arg>
 766:/usr/include/c++/6/bits/stl_tree.h ****         iterator
 767:/usr/include/c++/6/bits/stl_tree.h ****         _M_insert_equal_lower(_Arg&& __x);
 768:/usr/include/c++/6/bits/stl_tree.h **** 
 769:/usr/include/c++/6/bits/stl_tree.h ****       iterator
 770:/usr/include/c++/6/bits/stl_tree.h ****       _M_insert_lower_node(_Base_ptr __p, _Link_type __z);
 771:/usr/include/c++/6/bits/stl_tree.h **** 
 772:/usr/include/c++/6/bits/stl_tree.h ****       iterator
 773:/usr/include/c++/6/bits/stl_tree.h ****       _M_insert_equal_lower_node(_Link_type __z);
 774:/usr/include/c++/6/bits/stl_tree.h **** #else
 775:/usr/include/c++/6/bits/stl_tree.h ****       template<typename _NodeGen>
 776:/usr/include/c++/6/bits/stl_tree.h **** 	iterator
 777:/usr/include/c++/6/bits/stl_tree.h **** 	_M_insert_(_Base_ptr __x, _Base_ptr __y,
 778:/usr/include/c++/6/bits/stl_tree.h **** 		   const value_type& __v, _NodeGen&);
 779:/usr/include/c++/6/bits/stl_tree.h **** 
 780:/usr/include/c++/6/bits/stl_tree.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 781:/usr/include/c++/6/bits/stl_tree.h ****       // 233. Insertion hints in associative containers.
 782:/usr/include/c++/6/bits/stl_tree.h ****       iterator
 783:/usr/include/c++/6/bits/stl_tree.h ****       _M_insert_lower(_Base_ptr __y, const value_type& __v);
 784:/usr/include/c++/6/bits/stl_tree.h **** 
 785:/usr/include/c++/6/bits/stl_tree.h ****       iterator
 786:/usr/include/c++/6/bits/stl_tree.h ****       _M_insert_equal_lower(const value_type& __x);
 787:/usr/include/c++/6/bits/stl_tree.h **** #endif
 788:/usr/include/c++/6/bits/stl_tree.h **** 
 789:/usr/include/c++/6/bits/stl_tree.h ****       template<typename _NodeGen>
 790:/usr/include/c++/6/bits/stl_tree.h **** 	_Link_type
 791:/usr/include/c++/6/bits/stl_tree.h **** 	_M_copy(_Const_Link_type __x, _Base_ptr __p, _NodeGen&);
 792:/usr/include/c++/6/bits/stl_tree.h **** 
 793:/usr/include/c++/6/bits/stl_tree.h ****       _Link_type
 794:/usr/include/c++/6/bits/stl_tree.h ****       _M_copy(_Const_Link_type __x, _Base_ptr __p)
 795:/usr/include/c++/6/bits/stl_tree.h ****       {
 796:/usr/include/c++/6/bits/stl_tree.h **** 	_Alloc_node __an(*this);
 797:/usr/include/c++/6/bits/stl_tree.h **** 	return _M_copy(__x, __p, __an);
 798:/usr/include/c++/6/bits/stl_tree.h ****       }
 799:/usr/include/c++/6/bits/stl_tree.h **** 
 800:/usr/include/c++/6/bits/stl_tree.h ****       void
 801:/usr/include/c++/6/bits/stl_tree.h ****       _M_erase(_Link_type __x);
 802:/usr/include/c++/6/bits/stl_tree.h **** 
 803:/usr/include/c++/6/bits/stl_tree.h ****       iterator
 804:/usr/include/c++/6/bits/stl_tree.h ****       _M_lower_bound(_Link_type __x, _Base_ptr __y,
 805:/usr/include/c++/6/bits/stl_tree.h **** 		     const _Key& __k);
 806:/usr/include/c++/6/bits/stl_tree.h **** 
 807:/usr/include/c++/6/bits/stl_tree.h ****       const_iterator
 808:/usr/include/c++/6/bits/stl_tree.h ****       _M_lower_bound(_Const_Link_type __x, _Const_Base_ptr __y,
 809:/usr/include/c++/6/bits/stl_tree.h **** 		     const _Key& __k) const;
 810:/usr/include/c++/6/bits/stl_tree.h **** 
 811:/usr/include/c++/6/bits/stl_tree.h ****       iterator
 812:/usr/include/c++/6/bits/stl_tree.h ****       _M_upper_bound(_Link_type __x, _Base_ptr __y,
 813:/usr/include/c++/6/bits/stl_tree.h **** 		     const _Key& __k);
 814:/usr/include/c++/6/bits/stl_tree.h **** 
 815:/usr/include/c++/6/bits/stl_tree.h ****       const_iterator
 816:/usr/include/c++/6/bits/stl_tree.h ****       _M_upper_bound(_Const_Link_type __x, _Const_Base_ptr __y,
 817:/usr/include/c++/6/bits/stl_tree.h **** 		     const _Key& __k) const;
 818:/usr/include/c++/6/bits/stl_tree.h **** 
 819:/usr/include/c++/6/bits/stl_tree.h ****     public:
GAS LISTING /tmp/ccvUPO8Q.s 			page 378


 820:/usr/include/c++/6/bits/stl_tree.h ****       // allocation/deallocation
 821:/usr/include/c++/6/bits/stl_tree.h ****       _Rb_tree() { }
 822:/usr/include/c++/6/bits/stl_tree.h **** 
 823:/usr/include/c++/6/bits/stl_tree.h ****       _Rb_tree(const _Compare& __comp,
 824:/usr/include/c++/6/bits/stl_tree.h **** 	       const allocator_type& __a = allocator_type())
 825:/usr/include/c++/6/bits/stl_tree.h ****       : _M_impl(__comp, _Node_allocator(__a)) { }
 826:/usr/include/c++/6/bits/stl_tree.h **** 
 827:/usr/include/c++/6/bits/stl_tree.h ****       _Rb_tree(const _Rb_tree& __x)
 828:/usr/include/c++/6/bits/stl_tree.h ****       : _M_impl(__x._M_impl._M_key_compare,
 829:/usr/include/c++/6/bits/stl_tree.h **** 	        _Alloc_traits::_S_select_on_copy(__x._M_get_Node_allocator()))
 830:/usr/include/c++/6/bits/stl_tree.h ****       {
 831:/usr/include/c++/6/bits/stl_tree.h **** 	if (__x._M_root() != 0)
 832:/usr/include/c++/6/bits/stl_tree.h **** 	  {
 833:/usr/include/c++/6/bits/stl_tree.h **** 	    _M_root() = _M_copy(__x._M_begin(), _M_end());
 834:/usr/include/c++/6/bits/stl_tree.h **** 	    _M_leftmost() = _S_minimum(_M_root());
 835:/usr/include/c++/6/bits/stl_tree.h **** 	    _M_rightmost() = _S_maximum(_M_root());
 836:/usr/include/c++/6/bits/stl_tree.h **** 	    _M_impl._M_node_count = __x._M_impl._M_node_count;
 837:/usr/include/c++/6/bits/stl_tree.h **** 	  }
 838:/usr/include/c++/6/bits/stl_tree.h ****       }
 839:/usr/include/c++/6/bits/stl_tree.h **** 
 840:/usr/include/c++/6/bits/stl_tree.h **** #if __cplusplus >= 201103L
 841:/usr/include/c++/6/bits/stl_tree.h ****       _Rb_tree(const allocator_type& __a)
 842:/usr/include/c++/6/bits/stl_tree.h ****       : _M_impl(_Compare(), _Node_allocator(__a))
 843:/usr/include/c++/6/bits/stl_tree.h ****       { }
 844:/usr/include/c++/6/bits/stl_tree.h **** 
 845:/usr/include/c++/6/bits/stl_tree.h ****       _Rb_tree(const _Rb_tree& __x, const allocator_type& __a)
 846:/usr/include/c++/6/bits/stl_tree.h ****       : _M_impl(__x._M_impl._M_key_compare, _Node_allocator(__a))
 847:/usr/include/c++/6/bits/stl_tree.h ****       {
 848:/usr/include/c++/6/bits/stl_tree.h **** 	if (__x._M_root() != nullptr)
 849:/usr/include/c++/6/bits/stl_tree.h **** 	  {
 850:/usr/include/c++/6/bits/stl_tree.h **** 	    _M_root() = _M_copy(__x._M_begin(), _M_end());
 851:/usr/include/c++/6/bits/stl_tree.h **** 	    _M_leftmost() = _S_minimum(_M_root());
 852:/usr/include/c++/6/bits/stl_tree.h **** 	    _M_rightmost() = _S_maximum(_M_root());
 853:/usr/include/c++/6/bits/stl_tree.h **** 	    _M_impl._M_node_count = __x._M_impl._M_node_count;
 854:/usr/include/c++/6/bits/stl_tree.h **** 	  }
 855:/usr/include/c++/6/bits/stl_tree.h ****       }
 856:/usr/include/c++/6/bits/stl_tree.h **** 
 857:/usr/include/c++/6/bits/stl_tree.h ****       _Rb_tree(_Rb_tree&& __x)
 858:/usr/include/c++/6/bits/stl_tree.h ****       : _M_impl(__x._M_impl._M_key_compare,
 859:/usr/include/c++/6/bits/stl_tree.h **** 		std::move(__x._M_get_Node_allocator()))
 860:/usr/include/c++/6/bits/stl_tree.h ****       {
 861:/usr/include/c++/6/bits/stl_tree.h **** 	if (__x._M_root() != 0)
 862:/usr/include/c++/6/bits/stl_tree.h **** 	  _M_move_data(__x, std::true_type());
 863:/usr/include/c++/6/bits/stl_tree.h ****       }
 864:/usr/include/c++/6/bits/stl_tree.h **** 
 865:/usr/include/c++/6/bits/stl_tree.h ****       _Rb_tree(_Rb_tree&& __x, const allocator_type& __a)
 866:/usr/include/c++/6/bits/stl_tree.h ****       : _Rb_tree(std::move(__x), _Node_allocator(__a))
 867:/usr/include/c++/6/bits/stl_tree.h ****       { }
 868:/usr/include/c++/6/bits/stl_tree.h **** 
 869:/usr/include/c++/6/bits/stl_tree.h ****       _Rb_tree(_Rb_tree&& __x, _Node_allocator&& __a);
 870:/usr/include/c++/6/bits/stl_tree.h **** #endif
 871:/usr/include/c++/6/bits/stl_tree.h **** 
 872:/usr/include/c++/6/bits/stl_tree.h ****       ~_Rb_tree() _GLIBCXX_NOEXCEPT
 873:/usr/include/c++/6/bits/stl_tree.h ****       { _M_erase(_M_begin()); }
 874:/usr/include/c++/6/bits/stl_tree.h **** 
 875:/usr/include/c++/6/bits/stl_tree.h ****       _Rb_tree&
 876:/usr/include/c++/6/bits/stl_tree.h ****       operator=(const _Rb_tree& __x);
GAS LISTING /tmp/ccvUPO8Q.s 			page 379


 877:/usr/include/c++/6/bits/stl_tree.h **** 
 878:/usr/include/c++/6/bits/stl_tree.h ****       // Accessors.
 879:/usr/include/c++/6/bits/stl_tree.h ****       _Compare
 880:/usr/include/c++/6/bits/stl_tree.h ****       key_comp() const
 881:/usr/include/c++/6/bits/stl_tree.h ****       { return _M_impl._M_key_compare; }
 882:/usr/include/c++/6/bits/stl_tree.h **** 
 883:/usr/include/c++/6/bits/stl_tree.h ****       iterator
 884:/usr/include/c++/6/bits/stl_tree.h ****       begin() _GLIBCXX_NOEXCEPT
 885:/usr/include/c++/6/bits/stl_tree.h ****       { return iterator(this->_M_impl._M_header._M_left); }
 886:/usr/include/c++/6/bits/stl_tree.h **** 
 887:/usr/include/c++/6/bits/stl_tree.h ****       const_iterator
 888:/usr/include/c++/6/bits/stl_tree.h ****       begin() const _GLIBCXX_NOEXCEPT
 889:/usr/include/c++/6/bits/stl_tree.h ****       { return const_iterator(this->_M_impl._M_header._M_left); }
 890:/usr/include/c++/6/bits/stl_tree.h **** 
 891:/usr/include/c++/6/bits/stl_tree.h ****       iterator
 892:/usr/include/c++/6/bits/stl_tree.h ****       end() _GLIBCXX_NOEXCEPT
 893:/usr/include/c++/6/bits/stl_tree.h ****       { return iterator(&this->_M_impl._M_header); }
 894:/usr/include/c++/6/bits/stl_tree.h **** 
 895:/usr/include/c++/6/bits/stl_tree.h ****       const_iterator
 896:/usr/include/c++/6/bits/stl_tree.h ****       end() const _GLIBCXX_NOEXCEPT
 897:/usr/include/c++/6/bits/stl_tree.h ****       { return const_iterator(&this->_M_impl._M_header); }
 898:/usr/include/c++/6/bits/stl_tree.h **** 
 899:/usr/include/c++/6/bits/stl_tree.h ****       reverse_iterator
 900:/usr/include/c++/6/bits/stl_tree.h ****       rbegin() _GLIBCXX_NOEXCEPT
 901:/usr/include/c++/6/bits/stl_tree.h ****       { return reverse_iterator(end()); }
 902:/usr/include/c++/6/bits/stl_tree.h **** 
 903:/usr/include/c++/6/bits/stl_tree.h ****       const_reverse_iterator
 904:/usr/include/c++/6/bits/stl_tree.h ****       rbegin() const _GLIBCXX_NOEXCEPT
 905:/usr/include/c++/6/bits/stl_tree.h ****       { return const_reverse_iterator(end()); }
 906:/usr/include/c++/6/bits/stl_tree.h **** 
 907:/usr/include/c++/6/bits/stl_tree.h ****       reverse_iterator
 908:/usr/include/c++/6/bits/stl_tree.h ****       rend() _GLIBCXX_NOEXCEPT
 909:/usr/include/c++/6/bits/stl_tree.h ****       { return reverse_iterator(begin()); }
 910:/usr/include/c++/6/bits/stl_tree.h **** 
 911:/usr/include/c++/6/bits/stl_tree.h ****       const_reverse_iterator
 912:/usr/include/c++/6/bits/stl_tree.h ****       rend() const _GLIBCXX_NOEXCEPT
 913:/usr/include/c++/6/bits/stl_tree.h ****       { return const_reverse_iterator(begin()); }
 914:/usr/include/c++/6/bits/stl_tree.h **** 
 915:/usr/include/c++/6/bits/stl_tree.h ****       bool
 916:/usr/include/c++/6/bits/stl_tree.h ****       empty() const _GLIBCXX_NOEXCEPT
 917:/usr/include/c++/6/bits/stl_tree.h ****       { return _M_impl._M_node_count == 0; }
 918:/usr/include/c++/6/bits/stl_tree.h **** 
 919:/usr/include/c++/6/bits/stl_tree.h ****       size_type
 920:/usr/include/c++/6/bits/stl_tree.h ****       size() const _GLIBCXX_NOEXCEPT 
 921:/usr/include/c++/6/bits/stl_tree.h ****       { return _M_impl._M_node_count; }
 922:/usr/include/c++/6/bits/stl_tree.h **** 
 923:/usr/include/c++/6/bits/stl_tree.h ****       size_type
 924:/usr/include/c++/6/bits/stl_tree.h ****       max_size() const _GLIBCXX_NOEXCEPT
 925:/usr/include/c++/6/bits/stl_tree.h ****       { return _Alloc_traits::max_size(_M_get_Node_allocator()); }
 926:/usr/include/c++/6/bits/stl_tree.h **** 
 927:/usr/include/c++/6/bits/stl_tree.h ****       void
 928:/usr/include/c++/6/bits/stl_tree.h ****       swap(_Rb_tree& __t)
 929:/usr/include/c++/6/bits/stl_tree.h ****       _GLIBCXX_NOEXCEPT_IF(__is_nothrow_swappable<_Compare>::value);
 930:/usr/include/c++/6/bits/stl_tree.h **** 
 931:/usr/include/c++/6/bits/stl_tree.h ****       // Insert/erase.
 932:/usr/include/c++/6/bits/stl_tree.h **** #if __cplusplus >= 201103L
 933:/usr/include/c++/6/bits/stl_tree.h ****       template<typename _Arg>
GAS LISTING /tmp/ccvUPO8Q.s 			page 380


 934:/usr/include/c++/6/bits/stl_tree.h ****         pair<iterator, bool>
 935:/usr/include/c++/6/bits/stl_tree.h ****         _M_insert_unique(_Arg&& __x);
 936:/usr/include/c++/6/bits/stl_tree.h **** 
 937:/usr/include/c++/6/bits/stl_tree.h ****       template<typename _Arg>
 938:/usr/include/c++/6/bits/stl_tree.h ****         iterator
 939:/usr/include/c++/6/bits/stl_tree.h ****         _M_insert_equal(_Arg&& __x);
 940:/usr/include/c++/6/bits/stl_tree.h **** 
 941:/usr/include/c++/6/bits/stl_tree.h ****       template<typename _Arg, typename _NodeGen>
 942:/usr/include/c++/6/bits/stl_tree.h ****         iterator
 943:/usr/include/c++/6/bits/stl_tree.h **** 	_M_insert_unique_(const_iterator __pos, _Arg&& __x, _NodeGen&);
 944:/usr/include/c++/6/bits/stl_tree.h **** 
 945:/usr/include/c++/6/bits/stl_tree.h ****       template<typename _Arg>
 946:/usr/include/c++/6/bits/stl_tree.h **** 	iterator
 947:/usr/include/c++/6/bits/stl_tree.h **** 	_M_insert_unique_(const_iterator __pos, _Arg&& __x)
 948:/usr/include/c++/6/bits/stl_tree.h **** 	{
 949:/usr/include/c++/6/bits/stl_tree.h **** 	  _Alloc_node __an(*this);
 950:/usr/include/c++/6/bits/stl_tree.h **** 	  return _M_insert_unique_(__pos, std::forward<_Arg>(__x), __an);
 951:/usr/include/c++/6/bits/stl_tree.h **** 	}
 952:/usr/include/c++/6/bits/stl_tree.h **** 
 953:/usr/include/c++/6/bits/stl_tree.h ****       template<typename _Arg, typename _NodeGen>
 954:/usr/include/c++/6/bits/stl_tree.h **** 	iterator
 955:/usr/include/c++/6/bits/stl_tree.h **** 	_M_insert_equal_(const_iterator __pos, _Arg&& __x, _NodeGen&);
 956:/usr/include/c++/6/bits/stl_tree.h **** 
 957:/usr/include/c++/6/bits/stl_tree.h ****       template<typename _Arg>
 958:/usr/include/c++/6/bits/stl_tree.h **** 	iterator
 959:/usr/include/c++/6/bits/stl_tree.h **** 	_M_insert_equal_(const_iterator __pos, _Arg&& __x)
 960:/usr/include/c++/6/bits/stl_tree.h **** 	{
 961:/usr/include/c++/6/bits/stl_tree.h **** 	  _Alloc_node __an(*this);
 962:/usr/include/c++/6/bits/stl_tree.h **** 	  return _M_insert_equal_(__pos, std::forward<_Arg>(__x), __an);
 963:/usr/include/c++/6/bits/stl_tree.h **** 	}
 964:/usr/include/c++/6/bits/stl_tree.h **** 
 965:/usr/include/c++/6/bits/stl_tree.h ****       template<typename... _Args>
 966:/usr/include/c++/6/bits/stl_tree.h **** 	pair<iterator, bool>
 967:/usr/include/c++/6/bits/stl_tree.h **** 	_M_emplace_unique(_Args&&... __args);
 968:/usr/include/c++/6/bits/stl_tree.h **** 
 969:/usr/include/c++/6/bits/stl_tree.h ****       template<typename... _Args>
 970:/usr/include/c++/6/bits/stl_tree.h **** 	iterator
 971:/usr/include/c++/6/bits/stl_tree.h **** 	_M_emplace_equal(_Args&&... __args);
 972:/usr/include/c++/6/bits/stl_tree.h **** 
 973:/usr/include/c++/6/bits/stl_tree.h ****       template<typename... _Args>
 974:/usr/include/c++/6/bits/stl_tree.h **** 	iterator
 975:/usr/include/c++/6/bits/stl_tree.h **** 	_M_emplace_hint_unique(const_iterator __pos, _Args&&... __args);
 976:/usr/include/c++/6/bits/stl_tree.h **** 
 977:/usr/include/c++/6/bits/stl_tree.h ****       template<typename... _Args>
 978:/usr/include/c++/6/bits/stl_tree.h **** 	iterator
 979:/usr/include/c++/6/bits/stl_tree.h **** 	_M_emplace_hint_equal(const_iterator __pos, _Args&&... __args);
 980:/usr/include/c++/6/bits/stl_tree.h **** #else
 981:/usr/include/c++/6/bits/stl_tree.h ****       pair<iterator, bool>
 982:/usr/include/c++/6/bits/stl_tree.h ****       _M_insert_unique(const value_type& __x);
 983:/usr/include/c++/6/bits/stl_tree.h **** 
 984:/usr/include/c++/6/bits/stl_tree.h ****       iterator
 985:/usr/include/c++/6/bits/stl_tree.h ****       _M_insert_equal(const value_type& __x);
 986:/usr/include/c++/6/bits/stl_tree.h **** 
 987:/usr/include/c++/6/bits/stl_tree.h ****       template<typename _NodeGen>
 988:/usr/include/c++/6/bits/stl_tree.h **** 	iterator
 989:/usr/include/c++/6/bits/stl_tree.h **** 	_M_insert_unique_(const_iterator __pos, const value_type& __x,
 990:/usr/include/c++/6/bits/stl_tree.h **** 			  _NodeGen&);
GAS LISTING /tmp/ccvUPO8Q.s 			page 381


 991:/usr/include/c++/6/bits/stl_tree.h **** 
 992:/usr/include/c++/6/bits/stl_tree.h ****       iterator
 993:/usr/include/c++/6/bits/stl_tree.h ****       _M_insert_unique_(const_iterator __pos, const value_type& __x)
 994:/usr/include/c++/6/bits/stl_tree.h ****       {
 995:/usr/include/c++/6/bits/stl_tree.h **** 	_Alloc_node __an(*this);
 996:/usr/include/c++/6/bits/stl_tree.h **** 	return _M_insert_unique_(__pos, __x, __an);
 997:/usr/include/c++/6/bits/stl_tree.h ****       }
 998:/usr/include/c++/6/bits/stl_tree.h **** 
 999:/usr/include/c++/6/bits/stl_tree.h ****       template<typename _NodeGen>
1000:/usr/include/c++/6/bits/stl_tree.h **** 	iterator
1001:/usr/include/c++/6/bits/stl_tree.h **** 	_M_insert_equal_(const_iterator __pos, const value_type& __x,
1002:/usr/include/c++/6/bits/stl_tree.h **** 			 _NodeGen&);
1003:/usr/include/c++/6/bits/stl_tree.h ****       iterator
1004:/usr/include/c++/6/bits/stl_tree.h ****       _M_insert_equal_(const_iterator __pos, const value_type& __x)
1005:/usr/include/c++/6/bits/stl_tree.h ****       {
1006:/usr/include/c++/6/bits/stl_tree.h **** 	_Alloc_node __an(*this);
1007:/usr/include/c++/6/bits/stl_tree.h **** 	return _M_insert_equal_(__pos, __x, __an);
1008:/usr/include/c++/6/bits/stl_tree.h ****       }
1009:/usr/include/c++/6/bits/stl_tree.h **** #endif
1010:/usr/include/c++/6/bits/stl_tree.h **** 
1011:/usr/include/c++/6/bits/stl_tree.h ****       template<typename _InputIterator>
1012:/usr/include/c++/6/bits/stl_tree.h ****         void
1013:/usr/include/c++/6/bits/stl_tree.h ****         _M_insert_unique(_InputIterator __first, _InputIterator __last);
1014:/usr/include/c++/6/bits/stl_tree.h **** 
1015:/usr/include/c++/6/bits/stl_tree.h ****       template<typename _InputIterator>
1016:/usr/include/c++/6/bits/stl_tree.h ****         void
1017:/usr/include/c++/6/bits/stl_tree.h ****         _M_insert_equal(_InputIterator __first, _InputIterator __last);
1018:/usr/include/c++/6/bits/stl_tree.h **** 
1019:/usr/include/c++/6/bits/stl_tree.h ****     private:
1020:/usr/include/c++/6/bits/stl_tree.h ****       void
1021:/usr/include/c++/6/bits/stl_tree.h ****       _M_erase_aux(const_iterator __position);
1022:/usr/include/c++/6/bits/stl_tree.h **** 
1023:/usr/include/c++/6/bits/stl_tree.h ****       void
1024:/usr/include/c++/6/bits/stl_tree.h ****       _M_erase_aux(const_iterator __first, const_iterator __last);
1025:/usr/include/c++/6/bits/stl_tree.h **** 
1026:/usr/include/c++/6/bits/stl_tree.h ****     public:
1027:/usr/include/c++/6/bits/stl_tree.h **** #if __cplusplus >= 201103L
1028:/usr/include/c++/6/bits/stl_tree.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
1029:/usr/include/c++/6/bits/stl_tree.h ****       // DR 130. Associative erase should return an iterator.
1030:/usr/include/c++/6/bits/stl_tree.h ****       _GLIBCXX_ABI_TAG_CXX11
1031:/usr/include/c++/6/bits/stl_tree.h ****       iterator
1032:/usr/include/c++/6/bits/stl_tree.h ****       erase(const_iterator __position)
1033:/usr/include/c++/6/bits/stl_tree.h ****       {
1034:/usr/include/c++/6/bits/stl_tree.h **** 	const_iterator __result = __position;
1035:/usr/include/c++/6/bits/stl_tree.h **** 	++__result;
1036:/usr/include/c++/6/bits/stl_tree.h **** 	_M_erase_aux(__position);
1037:/usr/include/c++/6/bits/stl_tree.h **** 	return __result._M_const_cast();
1038:/usr/include/c++/6/bits/stl_tree.h ****       }
1039:/usr/include/c++/6/bits/stl_tree.h **** 
1040:/usr/include/c++/6/bits/stl_tree.h ****       // LWG 2059.
1041:/usr/include/c++/6/bits/stl_tree.h ****       _GLIBCXX_ABI_TAG_CXX11
1042:/usr/include/c++/6/bits/stl_tree.h ****       iterator
1043:/usr/include/c++/6/bits/stl_tree.h ****       erase(iterator __position)
1044:/usr/include/c++/6/bits/stl_tree.h ****       {
1045:/usr/include/c++/6/bits/stl_tree.h **** 	iterator __result = __position;
1046:/usr/include/c++/6/bits/stl_tree.h **** 	++__result;
1047:/usr/include/c++/6/bits/stl_tree.h **** 	_M_erase_aux(__position);
GAS LISTING /tmp/ccvUPO8Q.s 			page 382


1048:/usr/include/c++/6/bits/stl_tree.h **** 	return __result;
1049:/usr/include/c++/6/bits/stl_tree.h ****       }
1050:/usr/include/c++/6/bits/stl_tree.h **** #else
1051:/usr/include/c++/6/bits/stl_tree.h ****       void
1052:/usr/include/c++/6/bits/stl_tree.h ****       erase(iterator __position)
1053:/usr/include/c++/6/bits/stl_tree.h ****       { _M_erase_aux(__position); }
1054:/usr/include/c++/6/bits/stl_tree.h **** 
1055:/usr/include/c++/6/bits/stl_tree.h ****       void
1056:/usr/include/c++/6/bits/stl_tree.h ****       erase(const_iterator __position)
1057:/usr/include/c++/6/bits/stl_tree.h ****       { _M_erase_aux(__position); }
1058:/usr/include/c++/6/bits/stl_tree.h **** #endif
1059:/usr/include/c++/6/bits/stl_tree.h ****       size_type
1060:/usr/include/c++/6/bits/stl_tree.h ****       erase(const key_type& __x);
1061:/usr/include/c++/6/bits/stl_tree.h **** 
1062:/usr/include/c++/6/bits/stl_tree.h **** #if __cplusplus >= 201103L
1063:/usr/include/c++/6/bits/stl_tree.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
1064:/usr/include/c++/6/bits/stl_tree.h ****       // DR 130. Associative erase should return an iterator.
1065:/usr/include/c++/6/bits/stl_tree.h ****       _GLIBCXX_ABI_TAG_CXX11
1066:/usr/include/c++/6/bits/stl_tree.h ****       iterator
1067:/usr/include/c++/6/bits/stl_tree.h ****       erase(const_iterator __first, const_iterator __last)
1068:/usr/include/c++/6/bits/stl_tree.h ****       {
1069:/usr/include/c++/6/bits/stl_tree.h **** 	_M_erase_aux(__first, __last);
1070:/usr/include/c++/6/bits/stl_tree.h **** 	return __last._M_const_cast();
1071:/usr/include/c++/6/bits/stl_tree.h ****       }
1072:/usr/include/c++/6/bits/stl_tree.h **** #else
1073:/usr/include/c++/6/bits/stl_tree.h ****       void
1074:/usr/include/c++/6/bits/stl_tree.h ****       erase(iterator __first, iterator __last)
1075:/usr/include/c++/6/bits/stl_tree.h ****       { _M_erase_aux(__first, __last); }
1076:/usr/include/c++/6/bits/stl_tree.h **** 
1077:/usr/include/c++/6/bits/stl_tree.h ****       void
1078:/usr/include/c++/6/bits/stl_tree.h ****       erase(const_iterator __first, const_iterator __last)
1079:/usr/include/c++/6/bits/stl_tree.h ****       { _M_erase_aux(__first, __last); }
1080:/usr/include/c++/6/bits/stl_tree.h **** #endif
1081:/usr/include/c++/6/bits/stl_tree.h ****       void
1082:/usr/include/c++/6/bits/stl_tree.h ****       erase(const key_type* __first, const key_type* __last);
1083:/usr/include/c++/6/bits/stl_tree.h **** 
1084:/usr/include/c++/6/bits/stl_tree.h ****       void
1085:/usr/include/c++/6/bits/stl_tree.h ****       clear() _GLIBCXX_NOEXCEPT
1086:/usr/include/c++/6/bits/stl_tree.h ****       {
1087:/usr/include/c++/6/bits/stl_tree.h ****         _M_erase(_M_begin());
1088:/usr/include/c++/6/bits/stl_tree.h **** 	_M_impl._M_reset();
1089:/usr/include/c++/6/bits/stl_tree.h ****       }
1090:/usr/include/c++/6/bits/stl_tree.h **** 
1091:/usr/include/c++/6/bits/stl_tree.h ****       // Set operations.
1092:/usr/include/c++/6/bits/stl_tree.h ****       iterator
1093:/usr/include/c++/6/bits/stl_tree.h ****       find(const key_type& __k);
1094:/usr/include/c++/6/bits/stl_tree.h **** 
1095:/usr/include/c++/6/bits/stl_tree.h ****       const_iterator
1096:/usr/include/c++/6/bits/stl_tree.h ****       find(const key_type& __k) const;
1097:/usr/include/c++/6/bits/stl_tree.h **** 
1098:/usr/include/c++/6/bits/stl_tree.h ****       size_type
1099:/usr/include/c++/6/bits/stl_tree.h ****       count(const key_type& __k) const;
1100:/usr/include/c++/6/bits/stl_tree.h **** 
1101:/usr/include/c++/6/bits/stl_tree.h ****       iterator
1102:/usr/include/c++/6/bits/stl_tree.h ****       lower_bound(const key_type& __k)
1103:/usr/include/c++/6/bits/stl_tree.h ****       { return _M_lower_bound(_M_begin(), _M_end(), __k); }
1104:/usr/include/c++/6/bits/stl_tree.h **** 
GAS LISTING /tmp/ccvUPO8Q.s 			page 383


1105:/usr/include/c++/6/bits/stl_tree.h ****       const_iterator
1106:/usr/include/c++/6/bits/stl_tree.h ****       lower_bound(const key_type& __k) const
1107:/usr/include/c++/6/bits/stl_tree.h ****       { return _M_lower_bound(_M_begin(), _M_end(), __k); }
1108:/usr/include/c++/6/bits/stl_tree.h **** 
1109:/usr/include/c++/6/bits/stl_tree.h ****       iterator
1110:/usr/include/c++/6/bits/stl_tree.h ****       upper_bound(const key_type& __k)
1111:/usr/include/c++/6/bits/stl_tree.h ****       { return _M_upper_bound(_M_begin(), _M_end(), __k); }
1112:/usr/include/c++/6/bits/stl_tree.h **** 
1113:/usr/include/c++/6/bits/stl_tree.h ****       const_iterator
1114:/usr/include/c++/6/bits/stl_tree.h ****       upper_bound(const key_type& __k) const
1115:/usr/include/c++/6/bits/stl_tree.h ****       { return _M_upper_bound(_M_begin(), _M_end(), __k); }
1116:/usr/include/c++/6/bits/stl_tree.h **** 
1117:/usr/include/c++/6/bits/stl_tree.h ****       pair<iterator, iterator>
1118:/usr/include/c++/6/bits/stl_tree.h ****       equal_range(const key_type& __k);
1119:/usr/include/c++/6/bits/stl_tree.h **** 
1120:/usr/include/c++/6/bits/stl_tree.h ****       pair<const_iterator, const_iterator>
1121:/usr/include/c++/6/bits/stl_tree.h ****       equal_range(const key_type& __k) const;
1122:/usr/include/c++/6/bits/stl_tree.h **** 
1123:/usr/include/c++/6/bits/stl_tree.h **** #if __cplusplus > 201103L
1124:/usr/include/c++/6/bits/stl_tree.h ****       template<typename _Kt,
1125:/usr/include/c++/6/bits/stl_tree.h **** 	       typename _Req =
1126:/usr/include/c++/6/bits/stl_tree.h **** 		 typename __has_is_transparent<_Compare, _Kt>::type>
1127:/usr/include/c++/6/bits/stl_tree.h **** 	iterator
1128:/usr/include/c++/6/bits/stl_tree.h **** 	_M_find_tr(const _Kt& __k)
1129:/usr/include/c++/6/bits/stl_tree.h **** 	{
1130:/usr/include/c++/6/bits/stl_tree.h **** 	  const _Rb_tree* __const_this = this;
1131:/usr/include/c++/6/bits/stl_tree.h **** 	  return __const_this->_M_find_tr(__k)._M_const_cast();
1132:/usr/include/c++/6/bits/stl_tree.h **** 	}
1133:/usr/include/c++/6/bits/stl_tree.h **** 
1134:/usr/include/c++/6/bits/stl_tree.h ****       template<typename _Kt,
1135:/usr/include/c++/6/bits/stl_tree.h **** 	       typename _Req =
1136:/usr/include/c++/6/bits/stl_tree.h **** 		 typename __has_is_transparent<_Compare, _Kt>::type>
1137:/usr/include/c++/6/bits/stl_tree.h **** 	const_iterator
1138:/usr/include/c++/6/bits/stl_tree.h **** 	_M_find_tr(const _Kt& __k) const
1139:/usr/include/c++/6/bits/stl_tree.h **** 	{
1140:/usr/include/c++/6/bits/stl_tree.h **** 	  auto __j = _M_lower_bound_tr(__k);
1141:/usr/include/c++/6/bits/stl_tree.h **** 	  if (__j != end() && _M_impl._M_key_compare(__k, _S_key(__j._M_node)))
1142:/usr/include/c++/6/bits/stl_tree.h **** 	    __j = end();
1143:/usr/include/c++/6/bits/stl_tree.h **** 	  return __j;
1144:/usr/include/c++/6/bits/stl_tree.h **** 	}
1145:/usr/include/c++/6/bits/stl_tree.h **** 
1146:/usr/include/c++/6/bits/stl_tree.h ****       template<typename _Kt,
1147:/usr/include/c++/6/bits/stl_tree.h **** 	       typename _Req =
1148:/usr/include/c++/6/bits/stl_tree.h **** 		 typename __has_is_transparent<_Compare, _Kt>::type>
1149:/usr/include/c++/6/bits/stl_tree.h **** 	size_type
1150:/usr/include/c++/6/bits/stl_tree.h **** 	_M_count_tr(const _Kt& __k) const
1151:/usr/include/c++/6/bits/stl_tree.h **** 	{
1152:/usr/include/c++/6/bits/stl_tree.h **** 	  auto __p = _M_equal_range_tr(__k);
1153:/usr/include/c++/6/bits/stl_tree.h **** 	  return std::distance(__p.first, __p.second);
1154:/usr/include/c++/6/bits/stl_tree.h **** 	}
1155:/usr/include/c++/6/bits/stl_tree.h **** 
1156:/usr/include/c++/6/bits/stl_tree.h ****       template<typename _Kt,
1157:/usr/include/c++/6/bits/stl_tree.h **** 	       typename _Req =
1158:/usr/include/c++/6/bits/stl_tree.h **** 		 typename __has_is_transparent<_Compare, _Kt>::type>
1159:/usr/include/c++/6/bits/stl_tree.h **** 	iterator
1160:/usr/include/c++/6/bits/stl_tree.h **** 	_M_lower_bound_tr(const _Kt& __k)
1161:/usr/include/c++/6/bits/stl_tree.h **** 	{
GAS LISTING /tmp/ccvUPO8Q.s 			page 384


1162:/usr/include/c++/6/bits/stl_tree.h **** 	  const _Rb_tree* __const_this = this;
1163:/usr/include/c++/6/bits/stl_tree.h **** 	  return __const_this->_M_lower_bound_tr(__k)._M_const_cast();
1164:/usr/include/c++/6/bits/stl_tree.h **** 	}
1165:/usr/include/c++/6/bits/stl_tree.h **** 
1166:/usr/include/c++/6/bits/stl_tree.h ****       template<typename _Kt,
1167:/usr/include/c++/6/bits/stl_tree.h **** 	       typename _Req =
1168:/usr/include/c++/6/bits/stl_tree.h **** 		 typename __has_is_transparent<_Compare, _Kt>::type>
1169:/usr/include/c++/6/bits/stl_tree.h **** 	const_iterator
1170:/usr/include/c++/6/bits/stl_tree.h **** 	_M_lower_bound_tr(const _Kt& __k) const
1171:/usr/include/c++/6/bits/stl_tree.h **** 	{
1172:/usr/include/c++/6/bits/stl_tree.h **** 	  auto __x = _M_begin();
1173:/usr/include/c++/6/bits/stl_tree.h **** 	  auto __y = _M_end();
1174:/usr/include/c++/6/bits/stl_tree.h **** 	  while (__x != 0)
1175:/usr/include/c++/6/bits/stl_tree.h **** 	    if (!_M_impl._M_key_compare(_S_key(__x), __k))
1176:/usr/include/c++/6/bits/stl_tree.h **** 	      {
1177:/usr/include/c++/6/bits/stl_tree.h **** 		__y = __x;
1178:/usr/include/c++/6/bits/stl_tree.h **** 		__x = _S_left(__x);
1179:/usr/include/c++/6/bits/stl_tree.h **** 	      }
1180:/usr/include/c++/6/bits/stl_tree.h **** 	    else
1181:/usr/include/c++/6/bits/stl_tree.h **** 	      __x = _S_right(__x);
1182:/usr/include/c++/6/bits/stl_tree.h **** 	  return const_iterator(__y);
1183:/usr/include/c++/6/bits/stl_tree.h **** 	}
1184:/usr/include/c++/6/bits/stl_tree.h **** 
1185:/usr/include/c++/6/bits/stl_tree.h ****       template<typename _Kt,
1186:/usr/include/c++/6/bits/stl_tree.h **** 	       typename _Req =
1187:/usr/include/c++/6/bits/stl_tree.h **** 		 typename __has_is_transparent<_Compare, _Kt>::type>
1188:/usr/include/c++/6/bits/stl_tree.h **** 	iterator
1189:/usr/include/c++/6/bits/stl_tree.h **** 	_M_upper_bound_tr(const _Kt& __k)
1190:/usr/include/c++/6/bits/stl_tree.h **** 	{
1191:/usr/include/c++/6/bits/stl_tree.h **** 	  const _Rb_tree* __const_this = this;
1192:/usr/include/c++/6/bits/stl_tree.h **** 	  return __const_this->_M_upper_bound_tr(__k)._M_const_cast();
1193:/usr/include/c++/6/bits/stl_tree.h **** 	}
1194:/usr/include/c++/6/bits/stl_tree.h **** 
1195:/usr/include/c++/6/bits/stl_tree.h ****       template<typename _Kt,
1196:/usr/include/c++/6/bits/stl_tree.h **** 	       typename _Req =
1197:/usr/include/c++/6/bits/stl_tree.h **** 		 typename __has_is_transparent<_Compare, _Kt>::type>
1198:/usr/include/c++/6/bits/stl_tree.h **** 	const_iterator
1199:/usr/include/c++/6/bits/stl_tree.h **** 	_M_upper_bound_tr(const _Kt& __k) const
1200:/usr/include/c++/6/bits/stl_tree.h **** 	{
1201:/usr/include/c++/6/bits/stl_tree.h **** 	  auto __x = _M_begin();
1202:/usr/include/c++/6/bits/stl_tree.h **** 	  auto __y = _M_end();
1203:/usr/include/c++/6/bits/stl_tree.h **** 	  while (__x != 0)
1204:/usr/include/c++/6/bits/stl_tree.h **** 	    if (_M_impl._M_key_compare(__k, _S_key(__x)))
1205:/usr/include/c++/6/bits/stl_tree.h **** 	      {
1206:/usr/include/c++/6/bits/stl_tree.h **** 		__y = __x;
1207:/usr/include/c++/6/bits/stl_tree.h **** 		__x = _S_left(__x);
1208:/usr/include/c++/6/bits/stl_tree.h **** 	      }
1209:/usr/include/c++/6/bits/stl_tree.h **** 	    else
1210:/usr/include/c++/6/bits/stl_tree.h **** 	      __x = _S_right(__x);
1211:/usr/include/c++/6/bits/stl_tree.h **** 	  return const_iterator(__y);
1212:/usr/include/c++/6/bits/stl_tree.h **** 	}
1213:/usr/include/c++/6/bits/stl_tree.h **** 
1214:/usr/include/c++/6/bits/stl_tree.h ****       template<typename _Kt,
1215:/usr/include/c++/6/bits/stl_tree.h **** 	       typename _Req =
1216:/usr/include/c++/6/bits/stl_tree.h **** 		 typename __has_is_transparent<_Compare, _Kt>::type>
1217:/usr/include/c++/6/bits/stl_tree.h **** 	pair<iterator, iterator>
1218:/usr/include/c++/6/bits/stl_tree.h **** 	_M_equal_range_tr(const _Kt& __k)
GAS LISTING /tmp/ccvUPO8Q.s 			page 385


1219:/usr/include/c++/6/bits/stl_tree.h **** 	{
1220:/usr/include/c++/6/bits/stl_tree.h **** 	  const _Rb_tree* __const_this = this;
1221:/usr/include/c++/6/bits/stl_tree.h **** 	  auto __ret = __const_this->_M_equal_range_tr(__k);
1222:/usr/include/c++/6/bits/stl_tree.h **** 	  return { __ret.first._M_const_cast(), __ret.second._M_const_cast() };
1223:/usr/include/c++/6/bits/stl_tree.h **** 	}
1224:/usr/include/c++/6/bits/stl_tree.h **** 
1225:/usr/include/c++/6/bits/stl_tree.h ****       template<typename _Kt,
1226:/usr/include/c++/6/bits/stl_tree.h **** 	       typename _Req =
1227:/usr/include/c++/6/bits/stl_tree.h **** 		 typename __has_is_transparent<_Compare, _Kt>::type>
1228:/usr/include/c++/6/bits/stl_tree.h **** 	pair<const_iterator, const_iterator>
1229:/usr/include/c++/6/bits/stl_tree.h **** 	_M_equal_range_tr(const _Kt& __k) const
1230:/usr/include/c++/6/bits/stl_tree.h **** 	{
1231:/usr/include/c++/6/bits/stl_tree.h **** 	  auto __low = _M_lower_bound_tr(__k);
1232:/usr/include/c++/6/bits/stl_tree.h **** 	  auto __high = __low;
1233:/usr/include/c++/6/bits/stl_tree.h **** 	  auto& __cmp = _M_impl._M_key_compare;
1234:/usr/include/c++/6/bits/stl_tree.h **** 	  while (__high != end() && !__cmp(__k, _S_key(__high._M_node)))
1235:/usr/include/c++/6/bits/stl_tree.h **** 	    ++__high;
1236:/usr/include/c++/6/bits/stl_tree.h **** 	  return { __low, __high };
1237:/usr/include/c++/6/bits/stl_tree.h **** 	}
1238:/usr/include/c++/6/bits/stl_tree.h **** #endif
1239:/usr/include/c++/6/bits/stl_tree.h **** 
1240:/usr/include/c++/6/bits/stl_tree.h ****       // Debugging.
1241:/usr/include/c++/6/bits/stl_tree.h ****       bool
1242:/usr/include/c++/6/bits/stl_tree.h ****       __rb_verify() const;
1243:/usr/include/c++/6/bits/stl_tree.h **** 
1244:/usr/include/c++/6/bits/stl_tree.h **** #if __cplusplus >= 201103L
1245:/usr/include/c++/6/bits/stl_tree.h ****       _Rb_tree&
1246:/usr/include/c++/6/bits/stl_tree.h ****       operator=(_Rb_tree&&)
1247:/usr/include/c++/6/bits/stl_tree.h ****       noexcept(_Alloc_traits::_S_nothrow_move()
1248:/usr/include/c++/6/bits/stl_tree.h **** 	       && is_nothrow_move_assignable<_Compare>::value);
1249:/usr/include/c++/6/bits/stl_tree.h **** 
1250:/usr/include/c++/6/bits/stl_tree.h ****       template<typename _Iterator>
1251:/usr/include/c++/6/bits/stl_tree.h **** 	void
1252:/usr/include/c++/6/bits/stl_tree.h **** 	_M_assign_unique(_Iterator, _Iterator);
1253:/usr/include/c++/6/bits/stl_tree.h **** 
1254:/usr/include/c++/6/bits/stl_tree.h ****       template<typename _Iterator>
1255:/usr/include/c++/6/bits/stl_tree.h **** 	void
1256:/usr/include/c++/6/bits/stl_tree.h **** 	_M_assign_equal(_Iterator, _Iterator);
1257:/usr/include/c++/6/bits/stl_tree.h **** 
1258:/usr/include/c++/6/bits/stl_tree.h ****     private:
1259:/usr/include/c++/6/bits/stl_tree.h ****       // Move elements from container with equal allocator.
1260:/usr/include/c++/6/bits/stl_tree.h ****       void
1261:/usr/include/c++/6/bits/stl_tree.h ****       _M_move_data(_Rb_tree&, std::true_type);
1262:/usr/include/c++/6/bits/stl_tree.h **** 
1263:/usr/include/c++/6/bits/stl_tree.h ****       // Move elements from container with possibly non-equal allocator,
1264:/usr/include/c++/6/bits/stl_tree.h ****       // which might result in a copy not a move.
1265:/usr/include/c++/6/bits/stl_tree.h ****       void
1266:/usr/include/c++/6/bits/stl_tree.h ****       _M_move_data(_Rb_tree&, std::false_type);
1267:/usr/include/c++/6/bits/stl_tree.h **** 
1268:/usr/include/c++/6/bits/stl_tree.h ****       // Move assignment from container with equal allocator.
1269:/usr/include/c++/6/bits/stl_tree.h ****       void
1270:/usr/include/c++/6/bits/stl_tree.h ****       _M_move_assign(_Rb_tree&, std::true_type);
1271:/usr/include/c++/6/bits/stl_tree.h **** 
1272:/usr/include/c++/6/bits/stl_tree.h ****       // Move assignment from container with possibly non-equal allocator,
1273:/usr/include/c++/6/bits/stl_tree.h ****       // which might result in a copy not a move.
1274:/usr/include/c++/6/bits/stl_tree.h ****       void
1275:/usr/include/c++/6/bits/stl_tree.h ****       _M_move_assign(_Rb_tree&, std::false_type);
GAS LISTING /tmp/ccvUPO8Q.s 			page 386


1276:/usr/include/c++/6/bits/stl_tree.h **** #endif
1277:/usr/include/c++/6/bits/stl_tree.h ****     };
1278:/usr/include/c++/6/bits/stl_tree.h **** 
1279:/usr/include/c++/6/bits/stl_tree.h ****   template<typename _Key, typename _Val, typename _KeyOfValue,
1280:/usr/include/c++/6/bits/stl_tree.h ****            typename _Compare, typename _Alloc>
1281:/usr/include/c++/6/bits/stl_tree.h ****     inline bool
1282:/usr/include/c++/6/bits/stl_tree.h ****     operator==(const _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>& __x,
1283:/usr/include/c++/6/bits/stl_tree.h **** 	       const _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>& __y)
1284:/usr/include/c++/6/bits/stl_tree.h ****     {
1285:/usr/include/c++/6/bits/stl_tree.h ****       return __x.size() == __y.size()
1286:/usr/include/c++/6/bits/stl_tree.h **** 	     && std::equal(__x.begin(), __x.end(), __y.begin());
1287:/usr/include/c++/6/bits/stl_tree.h ****     }
1288:/usr/include/c++/6/bits/stl_tree.h **** 
1289:/usr/include/c++/6/bits/stl_tree.h ****   template<typename _Key, typename _Val, typename _KeyOfValue,
1290:/usr/include/c++/6/bits/stl_tree.h ****            typename _Compare, typename _Alloc>
1291:/usr/include/c++/6/bits/stl_tree.h ****     inline bool
1292:/usr/include/c++/6/bits/stl_tree.h ****     operator<(const _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>& __x,
1293:/usr/include/c++/6/bits/stl_tree.h **** 	      const _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>& __y)
1294:/usr/include/c++/6/bits/stl_tree.h ****     {
1295:/usr/include/c++/6/bits/stl_tree.h ****       return std::lexicographical_compare(__x.begin(), __x.end(), 
1296:/usr/include/c++/6/bits/stl_tree.h **** 					  __y.begin(), __y.end());
1297:/usr/include/c++/6/bits/stl_tree.h ****     }
1298:/usr/include/c++/6/bits/stl_tree.h **** 
1299:/usr/include/c++/6/bits/stl_tree.h ****   template<typename _Key, typename _Val, typename _KeyOfValue,
1300:/usr/include/c++/6/bits/stl_tree.h ****            typename _Compare, typename _Alloc>
1301:/usr/include/c++/6/bits/stl_tree.h ****     inline bool
1302:/usr/include/c++/6/bits/stl_tree.h ****     operator!=(const _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>& __x,
1303:/usr/include/c++/6/bits/stl_tree.h **** 	       const _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>& __y)
1304:/usr/include/c++/6/bits/stl_tree.h ****     { return !(__x == __y); }
1305:/usr/include/c++/6/bits/stl_tree.h **** 
1306:/usr/include/c++/6/bits/stl_tree.h ****   template<typename _Key, typename _Val, typename _KeyOfValue,
1307:/usr/include/c++/6/bits/stl_tree.h ****            typename _Compare, typename _Alloc>
1308:/usr/include/c++/6/bits/stl_tree.h ****     inline bool
1309:/usr/include/c++/6/bits/stl_tree.h ****     operator>(const _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>& __x,
1310:/usr/include/c++/6/bits/stl_tree.h **** 	      const _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>& __y)
1311:/usr/include/c++/6/bits/stl_tree.h ****     { return __y < __x; }
1312:/usr/include/c++/6/bits/stl_tree.h **** 
1313:/usr/include/c++/6/bits/stl_tree.h ****   template<typename _Key, typename _Val, typename _KeyOfValue,
1314:/usr/include/c++/6/bits/stl_tree.h ****            typename _Compare, typename _Alloc>
1315:/usr/include/c++/6/bits/stl_tree.h ****     inline bool
1316:/usr/include/c++/6/bits/stl_tree.h ****     operator<=(const _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>& __x,
1317:/usr/include/c++/6/bits/stl_tree.h **** 	       const _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>& __y)
1318:/usr/include/c++/6/bits/stl_tree.h ****     { return !(__y < __x); }
1319:/usr/include/c++/6/bits/stl_tree.h **** 
1320:/usr/include/c++/6/bits/stl_tree.h ****   template<typename _Key, typename _Val, typename _KeyOfValue,
1321:/usr/include/c++/6/bits/stl_tree.h ****            typename _Compare, typename _Alloc>
1322:/usr/include/c++/6/bits/stl_tree.h ****     inline bool
1323:/usr/include/c++/6/bits/stl_tree.h ****     operator>=(const _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>& __x,
1324:/usr/include/c++/6/bits/stl_tree.h **** 	       const _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>& __y)
1325:/usr/include/c++/6/bits/stl_tree.h ****     { return !(__x < __y); }
1326:/usr/include/c++/6/bits/stl_tree.h **** 
1327:/usr/include/c++/6/bits/stl_tree.h ****   template<typename _Key, typename _Val, typename _KeyOfValue,
1328:/usr/include/c++/6/bits/stl_tree.h ****            typename _Compare, typename _Alloc>
1329:/usr/include/c++/6/bits/stl_tree.h ****     inline void
1330:/usr/include/c++/6/bits/stl_tree.h ****     swap(_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>& __x,
1331:/usr/include/c++/6/bits/stl_tree.h **** 	 _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>& __y)
1332:/usr/include/c++/6/bits/stl_tree.h ****     { __x.swap(__y); }
GAS LISTING /tmp/ccvUPO8Q.s 			page 387


1333:/usr/include/c++/6/bits/stl_tree.h **** 
1334:/usr/include/c++/6/bits/stl_tree.h **** #if __cplusplus >= 201103L
1335:/usr/include/c++/6/bits/stl_tree.h ****   template<typename _Key, typename _Val, typename _KeyOfValue,
1336:/usr/include/c++/6/bits/stl_tree.h ****            typename _Compare, typename _Alloc>
1337:/usr/include/c++/6/bits/stl_tree.h ****     _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
1338:/usr/include/c++/6/bits/stl_tree.h ****     _Rb_tree(_Rb_tree&& __x, _Node_allocator&& __a)
1339:/usr/include/c++/6/bits/stl_tree.h ****     : _M_impl(__x._M_impl._M_key_compare, std::move(__a))
1340:/usr/include/c++/6/bits/stl_tree.h ****     {
1341:/usr/include/c++/6/bits/stl_tree.h ****       using __eq = typename _Alloc_traits::is_always_equal;
1342:/usr/include/c++/6/bits/stl_tree.h ****       if (__x._M_root() != nullptr)
1343:/usr/include/c++/6/bits/stl_tree.h **** 	_M_move_data(__x, __eq());
1344:/usr/include/c++/6/bits/stl_tree.h ****     }
1345:/usr/include/c++/6/bits/stl_tree.h **** 
1346:/usr/include/c++/6/bits/stl_tree.h ****   template<typename _Key, typename _Val, typename _KeyOfValue,
1347:/usr/include/c++/6/bits/stl_tree.h ****            typename _Compare, typename _Alloc>
1348:/usr/include/c++/6/bits/stl_tree.h ****     void
1349:/usr/include/c++/6/bits/stl_tree.h ****     _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
1350:/usr/include/c++/6/bits/stl_tree.h ****     _M_move_data(_Rb_tree& __x, std::true_type)
1351:/usr/include/c++/6/bits/stl_tree.h ****     {
1352:/usr/include/c++/6/bits/stl_tree.h ****       _M_root() = __x._M_root();
1353:/usr/include/c++/6/bits/stl_tree.h ****       _M_leftmost() = __x._M_leftmost();
1354:/usr/include/c++/6/bits/stl_tree.h ****       _M_rightmost() = __x._M_rightmost();
1355:/usr/include/c++/6/bits/stl_tree.h ****       _M_root()->_M_parent = _M_end();
1356:/usr/include/c++/6/bits/stl_tree.h **** 
1357:/usr/include/c++/6/bits/stl_tree.h ****       __x._M_root() = 0;
1358:/usr/include/c++/6/bits/stl_tree.h ****       __x._M_leftmost() = __x._M_end();
1359:/usr/include/c++/6/bits/stl_tree.h ****       __x._M_rightmost() = __x._M_end();
1360:/usr/include/c++/6/bits/stl_tree.h **** 
1361:/usr/include/c++/6/bits/stl_tree.h ****       this->_M_impl._M_node_count = __x._M_impl._M_node_count;
1362:/usr/include/c++/6/bits/stl_tree.h ****       __x._M_impl._M_node_count = 0;
1363:/usr/include/c++/6/bits/stl_tree.h ****     }
1364:/usr/include/c++/6/bits/stl_tree.h **** 
1365:/usr/include/c++/6/bits/stl_tree.h ****   template<typename _Key, typename _Val, typename _KeyOfValue,
1366:/usr/include/c++/6/bits/stl_tree.h ****            typename _Compare, typename _Alloc>
1367:/usr/include/c++/6/bits/stl_tree.h ****     void
1368:/usr/include/c++/6/bits/stl_tree.h ****     _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
1369:/usr/include/c++/6/bits/stl_tree.h ****     _M_move_data(_Rb_tree& __x, std::false_type)
1370:/usr/include/c++/6/bits/stl_tree.h ****     {
1371:/usr/include/c++/6/bits/stl_tree.h ****       if (_M_get_Node_allocator() == __x._M_get_Node_allocator())
1372:/usr/include/c++/6/bits/stl_tree.h **** 	  _M_move_data(__x, std::true_type());
1373:/usr/include/c++/6/bits/stl_tree.h ****       else
1374:/usr/include/c++/6/bits/stl_tree.h **** 	{
1375:/usr/include/c++/6/bits/stl_tree.h **** 	  _Alloc_node __an(*this);
1376:/usr/include/c++/6/bits/stl_tree.h **** 	  auto __lbd =
1377:/usr/include/c++/6/bits/stl_tree.h **** 	    [&__an](const value_type& __cval)
1378:/usr/include/c++/6/bits/stl_tree.h **** 	    {
1379:/usr/include/c++/6/bits/stl_tree.h **** 	      auto& __val = const_cast<value_type&>(__cval);
1380:/usr/include/c++/6/bits/stl_tree.h **** 	      return __an(std::move_if_noexcept(__val));
1381:/usr/include/c++/6/bits/stl_tree.h **** 	    };
1382:/usr/include/c++/6/bits/stl_tree.h **** 	  _M_root() = _M_copy(__x._M_begin(), _M_end(), __lbd);
1383:/usr/include/c++/6/bits/stl_tree.h **** 	  _M_leftmost() = _S_minimum(_M_root());
1384:/usr/include/c++/6/bits/stl_tree.h **** 	  _M_rightmost() = _S_maximum(_M_root());
1385:/usr/include/c++/6/bits/stl_tree.h **** 	  _M_impl._M_node_count = __x._M_impl._M_node_count;
1386:/usr/include/c++/6/bits/stl_tree.h **** 	}
1387:/usr/include/c++/6/bits/stl_tree.h ****     }
1388:/usr/include/c++/6/bits/stl_tree.h **** 
1389:/usr/include/c++/6/bits/stl_tree.h ****   template<typename _Key, typename _Val, typename _KeyOfValue,
GAS LISTING /tmp/ccvUPO8Q.s 			page 388


1390:/usr/include/c++/6/bits/stl_tree.h ****            typename _Compare, typename _Alloc>
1391:/usr/include/c++/6/bits/stl_tree.h ****     inline void
1392:/usr/include/c++/6/bits/stl_tree.h ****     _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
1393:/usr/include/c++/6/bits/stl_tree.h ****     _M_move_assign(_Rb_tree& __x, true_type)
1394:/usr/include/c++/6/bits/stl_tree.h ****     {
1395:/usr/include/c++/6/bits/stl_tree.h ****       clear();
1396:/usr/include/c++/6/bits/stl_tree.h ****       if (__x._M_root() != nullptr)
1397:/usr/include/c++/6/bits/stl_tree.h **** 	_M_move_data(__x, std::true_type());
1398:/usr/include/c++/6/bits/stl_tree.h ****       std::__alloc_on_move(_M_get_Node_allocator(),
1399:/usr/include/c++/6/bits/stl_tree.h **** 			   __x._M_get_Node_allocator());
1400:/usr/include/c++/6/bits/stl_tree.h ****     }
1401:/usr/include/c++/6/bits/stl_tree.h **** 
1402:/usr/include/c++/6/bits/stl_tree.h ****   template<typename _Key, typename _Val, typename _KeyOfValue,
1403:/usr/include/c++/6/bits/stl_tree.h ****            typename _Compare, typename _Alloc>
1404:/usr/include/c++/6/bits/stl_tree.h ****     void
1405:/usr/include/c++/6/bits/stl_tree.h ****     _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
1406:/usr/include/c++/6/bits/stl_tree.h ****     _M_move_assign(_Rb_tree& __x, false_type)
1407:/usr/include/c++/6/bits/stl_tree.h ****     {
1408:/usr/include/c++/6/bits/stl_tree.h ****       if (_M_get_Node_allocator() == __x._M_get_Node_allocator())
1409:/usr/include/c++/6/bits/stl_tree.h **** 	return _M_move_assign(__x, true_type{});
1410:/usr/include/c++/6/bits/stl_tree.h **** 
1411:/usr/include/c++/6/bits/stl_tree.h ****       // Try to move each node reusing existing nodes and copying __x nodes
1412:/usr/include/c++/6/bits/stl_tree.h ****       // structure.
1413:/usr/include/c++/6/bits/stl_tree.h ****       _Reuse_or_alloc_node __roan(*this);
1414:/usr/include/c++/6/bits/stl_tree.h ****       _M_impl._M_reset();
1415:/usr/include/c++/6/bits/stl_tree.h ****       if (__x._M_root() != nullptr)
1416:/usr/include/c++/6/bits/stl_tree.h **** 	{
1417:/usr/include/c++/6/bits/stl_tree.h **** 	  auto __lbd =
1418:/usr/include/c++/6/bits/stl_tree.h **** 	    [&__roan](const value_type& __cval)
1419:/usr/include/c++/6/bits/stl_tree.h **** 	    {
1420:/usr/include/c++/6/bits/stl_tree.h **** 	      auto& __val = const_cast<value_type&>(__cval);
1421:/usr/include/c++/6/bits/stl_tree.h **** 	      return __roan(std::move_if_noexcept(__val));
1422:/usr/include/c++/6/bits/stl_tree.h **** 	    };
1423:/usr/include/c++/6/bits/stl_tree.h **** 	  _M_root() = _M_copy(__x._M_begin(), _M_end(), __lbd);
1424:/usr/include/c++/6/bits/stl_tree.h **** 	  _M_leftmost() = _S_minimum(_M_root());
1425:/usr/include/c++/6/bits/stl_tree.h **** 	  _M_rightmost() = _S_maximum(_M_root());
1426:/usr/include/c++/6/bits/stl_tree.h **** 	  _M_impl._M_node_count = __x._M_impl._M_node_count;
1427:/usr/include/c++/6/bits/stl_tree.h **** 	  __x.clear();
1428:/usr/include/c++/6/bits/stl_tree.h **** 	}
1429:/usr/include/c++/6/bits/stl_tree.h ****     }
1430:/usr/include/c++/6/bits/stl_tree.h **** 
1431:/usr/include/c++/6/bits/stl_tree.h ****   template<typename _Key, typename _Val, typename _KeyOfValue,
1432:/usr/include/c++/6/bits/stl_tree.h ****            typename _Compare, typename _Alloc>
1433:/usr/include/c++/6/bits/stl_tree.h ****     inline _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>&
1434:/usr/include/c++/6/bits/stl_tree.h ****     _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
1435:/usr/include/c++/6/bits/stl_tree.h ****     operator=(_Rb_tree&& __x)
1436:/usr/include/c++/6/bits/stl_tree.h ****     noexcept(_Alloc_traits::_S_nothrow_move()
1437:/usr/include/c++/6/bits/stl_tree.h **** 	     && is_nothrow_move_assignable<_Compare>::value)
1438:/usr/include/c++/6/bits/stl_tree.h ****     {
1439:/usr/include/c++/6/bits/stl_tree.h ****       _M_impl._M_key_compare = __x._M_impl._M_key_compare;
1440:/usr/include/c++/6/bits/stl_tree.h ****       constexpr bool __move_storage =
1441:/usr/include/c++/6/bits/stl_tree.h **** 	  _Alloc_traits::_S_propagate_on_move_assign()
1442:/usr/include/c++/6/bits/stl_tree.h **** 	  || _Alloc_traits::_S_always_equal();
1443:/usr/include/c++/6/bits/stl_tree.h ****       _M_move_assign(__x, __bool_constant<__move_storage>());
1444:/usr/include/c++/6/bits/stl_tree.h ****       return *this;
1445:/usr/include/c++/6/bits/stl_tree.h ****     }
1446:/usr/include/c++/6/bits/stl_tree.h **** 
GAS LISTING /tmp/ccvUPO8Q.s 			page 389


1447:/usr/include/c++/6/bits/stl_tree.h ****   template<typename _Key, typename _Val, typename _KeyOfValue,
1448:/usr/include/c++/6/bits/stl_tree.h ****            typename _Compare, typename _Alloc>
1449:/usr/include/c++/6/bits/stl_tree.h ****     template<typename _Iterator>
1450:/usr/include/c++/6/bits/stl_tree.h ****       void
1451:/usr/include/c++/6/bits/stl_tree.h ****       _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
1452:/usr/include/c++/6/bits/stl_tree.h ****       _M_assign_unique(_Iterator __first, _Iterator __last)
1453:/usr/include/c++/6/bits/stl_tree.h ****       {
1454:/usr/include/c++/6/bits/stl_tree.h **** 	_Reuse_or_alloc_node __roan(*this);
1455:/usr/include/c++/6/bits/stl_tree.h **** 	_M_impl._M_reset();
1456:/usr/include/c++/6/bits/stl_tree.h **** 	for (; __first != __last; ++__first)
1457:/usr/include/c++/6/bits/stl_tree.h **** 	  _M_insert_unique_(end(), *__first, __roan);
1458:/usr/include/c++/6/bits/stl_tree.h ****       }
1459:/usr/include/c++/6/bits/stl_tree.h **** 
1460:/usr/include/c++/6/bits/stl_tree.h ****   template<typename _Key, typename _Val, typename _KeyOfValue,
1461:/usr/include/c++/6/bits/stl_tree.h ****            typename _Compare, typename _Alloc>
1462:/usr/include/c++/6/bits/stl_tree.h ****     template<typename _Iterator>
1463:/usr/include/c++/6/bits/stl_tree.h ****       void
1464:/usr/include/c++/6/bits/stl_tree.h ****       _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
1465:/usr/include/c++/6/bits/stl_tree.h ****       _M_assign_equal(_Iterator __first, _Iterator __last)
1466:/usr/include/c++/6/bits/stl_tree.h ****       {
1467:/usr/include/c++/6/bits/stl_tree.h **** 	_Reuse_or_alloc_node __roan(*this);
1468:/usr/include/c++/6/bits/stl_tree.h **** 	_M_impl._M_reset();
1469:/usr/include/c++/6/bits/stl_tree.h **** 	for (; __first != __last; ++__first)
1470:/usr/include/c++/6/bits/stl_tree.h **** 	  _M_insert_equal_(end(), *__first, __roan);
1471:/usr/include/c++/6/bits/stl_tree.h ****       }
1472:/usr/include/c++/6/bits/stl_tree.h **** #endif
1473:/usr/include/c++/6/bits/stl_tree.h **** 
1474:/usr/include/c++/6/bits/stl_tree.h ****   template<typename _Key, typename _Val, typename _KeyOfValue,
1475:/usr/include/c++/6/bits/stl_tree.h ****            typename _Compare, typename _Alloc>
1476:/usr/include/c++/6/bits/stl_tree.h ****     _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>&
1477:/usr/include/c++/6/bits/stl_tree.h ****     _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
1478:/usr/include/c++/6/bits/stl_tree.h ****     operator=(const _Rb_tree& __x)
1479:/usr/include/c++/6/bits/stl_tree.h ****     {
1480:/usr/include/c++/6/bits/stl_tree.h ****       if (this != &__x)
1481:/usr/include/c++/6/bits/stl_tree.h **** 	{
1482:/usr/include/c++/6/bits/stl_tree.h **** 	  // Note that _Key may be a constant type.
1483:/usr/include/c++/6/bits/stl_tree.h **** #if __cplusplus >= 201103L
1484:/usr/include/c++/6/bits/stl_tree.h **** 	  if (_Alloc_traits::_S_propagate_on_copy_assign())
1485:/usr/include/c++/6/bits/stl_tree.h **** 	    {
1486:/usr/include/c++/6/bits/stl_tree.h **** 	      auto& __this_alloc = this->_M_get_Node_allocator();
1487:/usr/include/c++/6/bits/stl_tree.h **** 	      auto& __that_alloc = __x._M_get_Node_allocator();
1488:/usr/include/c++/6/bits/stl_tree.h **** 	      if (!_Alloc_traits::_S_always_equal()
1489:/usr/include/c++/6/bits/stl_tree.h **** 		  && __this_alloc != __that_alloc)
1490:/usr/include/c++/6/bits/stl_tree.h **** 		{
1491:/usr/include/c++/6/bits/stl_tree.h **** 		  // Replacement allocator cannot free existing storage, we need
1492:/usr/include/c++/6/bits/stl_tree.h **** 		  // to erase nodes first.
1493:/usr/include/c++/6/bits/stl_tree.h **** 		  clear();
1494:/usr/include/c++/6/bits/stl_tree.h **** 		  std::__alloc_on_copy(__this_alloc, __that_alloc);
1495:/usr/include/c++/6/bits/stl_tree.h **** 		}
1496:/usr/include/c++/6/bits/stl_tree.h **** 	    }
1497:/usr/include/c++/6/bits/stl_tree.h **** #endif
1498:/usr/include/c++/6/bits/stl_tree.h **** 
1499:/usr/include/c++/6/bits/stl_tree.h **** 	  _Reuse_or_alloc_node __roan(*this);
1500:/usr/include/c++/6/bits/stl_tree.h **** 	  _M_impl._M_reset();
1501:/usr/include/c++/6/bits/stl_tree.h **** 	  _M_impl._M_key_compare = __x._M_impl._M_key_compare;
1502:/usr/include/c++/6/bits/stl_tree.h **** 	  if (__x._M_root() != 0)
1503:/usr/include/c++/6/bits/stl_tree.h **** 	    {
GAS LISTING /tmp/ccvUPO8Q.s 			page 390


1504:/usr/include/c++/6/bits/stl_tree.h **** 	      _M_root() = _M_copy(__x._M_begin(), _M_end(), __roan);
1505:/usr/include/c++/6/bits/stl_tree.h **** 	      _M_leftmost() = _S_minimum(_M_root());
1506:/usr/include/c++/6/bits/stl_tree.h **** 	      _M_rightmost() = _S_maximum(_M_root());
1507:/usr/include/c++/6/bits/stl_tree.h **** 	      _M_impl._M_node_count = __x._M_impl._M_node_count;
1508:/usr/include/c++/6/bits/stl_tree.h **** 	    }
1509:/usr/include/c++/6/bits/stl_tree.h **** 	}
1510:/usr/include/c++/6/bits/stl_tree.h **** 
1511:/usr/include/c++/6/bits/stl_tree.h ****       return *this;
1512:/usr/include/c++/6/bits/stl_tree.h ****     }
1513:/usr/include/c++/6/bits/stl_tree.h **** 
1514:/usr/include/c++/6/bits/stl_tree.h ****   template<typename _Key, typename _Val, typename _KeyOfValue,
1515:/usr/include/c++/6/bits/stl_tree.h ****            typename _Compare, typename _Alloc>
1516:/usr/include/c++/6/bits/stl_tree.h **** #if __cplusplus >= 201103L
1517:/usr/include/c++/6/bits/stl_tree.h ****     template<typename _Arg, typename _NodeGen>
1518:/usr/include/c++/6/bits/stl_tree.h **** #else
1519:/usr/include/c++/6/bits/stl_tree.h ****     template<typename _NodeGen>
1520:/usr/include/c++/6/bits/stl_tree.h **** #endif
1521:/usr/include/c++/6/bits/stl_tree.h ****       typename _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::iterator
1522:/usr/include/c++/6/bits/stl_tree.h ****       _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
1523:/usr/include/c++/6/bits/stl_tree.h ****       _M_insert_(_Base_ptr __x, _Base_ptr __p,
1524:/usr/include/c++/6/bits/stl_tree.h **** #if __cplusplus >= 201103L
1525:/usr/include/c++/6/bits/stl_tree.h **** 		 _Arg&& __v,
1526:/usr/include/c++/6/bits/stl_tree.h **** #else
1527:/usr/include/c++/6/bits/stl_tree.h **** 		 const _Val& __v,
1528:/usr/include/c++/6/bits/stl_tree.h **** #endif
1529:/usr/include/c++/6/bits/stl_tree.h **** 		 _NodeGen& __node_gen)
1530:/usr/include/c++/6/bits/stl_tree.h ****       {
1531:/usr/include/c++/6/bits/stl_tree.h **** 	bool __insert_left = (__x != 0 || __p == _M_end()
1532:/usr/include/c++/6/bits/stl_tree.h **** 			      || _M_impl._M_key_compare(_KeyOfValue()(__v),
1533:/usr/include/c++/6/bits/stl_tree.h **** 							_S_key(__p)));
1534:/usr/include/c++/6/bits/stl_tree.h **** 
1535:/usr/include/c++/6/bits/stl_tree.h **** 	_Link_type __z = __node_gen(_GLIBCXX_FORWARD(_Arg, __v));
1536:/usr/include/c++/6/bits/stl_tree.h **** 
1537:/usr/include/c++/6/bits/stl_tree.h **** 	_Rb_tree_insert_and_rebalance(__insert_left, __z, __p,
1538:/usr/include/c++/6/bits/stl_tree.h **** 				      this->_M_impl._M_header);
1539:/usr/include/c++/6/bits/stl_tree.h **** 	++_M_impl._M_node_count;
1540:/usr/include/c++/6/bits/stl_tree.h **** 	return iterator(__z);
1541:/usr/include/c++/6/bits/stl_tree.h ****       }
1542:/usr/include/c++/6/bits/stl_tree.h **** 
1543:/usr/include/c++/6/bits/stl_tree.h ****   template<typename _Key, typename _Val, typename _KeyOfValue,
1544:/usr/include/c++/6/bits/stl_tree.h ****            typename _Compare, typename _Alloc>
1545:/usr/include/c++/6/bits/stl_tree.h **** #if __cplusplus >= 201103L
1546:/usr/include/c++/6/bits/stl_tree.h ****     template<typename _Arg>
1547:/usr/include/c++/6/bits/stl_tree.h **** #endif
1548:/usr/include/c++/6/bits/stl_tree.h ****     typename _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::iterator
1549:/usr/include/c++/6/bits/stl_tree.h ****     _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
1550:/usr/include/c++/6/bits/stl_tree.h **** #if __cplusplus >= 201103L
1551:/usr/include/c++/6/bits/stl_tree.h ****     _M_insert_lower(_Base_ptr __p, _Arg&& __v)
1552:/usr/include/c++/6/bits/stl_tree.h **** #else
1553:/usr/include/c++/6/bits/stl_tree.h ****     _M_insert_lower(_Base_ptr __p, const _Val& __v)
1554:/usr/include/c++/6/bits/stl_tree.h **** #endif
1555:/usr/include/c++/6/bits/stl_tree.h ****     {
1556:/usr/include/c++/6/bits/stl_tree.h ****       bool __insert_left = (__p == _M_end()
1557:/usr/include/c++/6/bits/stl_tree.h **** 			    || !_M_impl._M_key_compare(_S_key(__p),
1558:/usr/include/c++/6/bits/stl_tree.h **** 						       _KeyOfValue()(__v)));
1559:/usr/include/c++/6/bits/stl_tree.h **** 
1560:/usr/include/c++/6/bits/stl_tree.h ****       _Link_type __z = _M_create_node(_GLIBCXX_FORWARD(_Arg, __v));
GAS LISTING /tmp/ccvUPO8Q.s 			page 391


1561:/usr/include/c++/6/bits/stl_tree.h **** 
1562:/usr/include/c++/6/bits/stl_tree.h ****       _Rb_tree_insert_and_rebalance(__insert_left, __z, __p,
1563:/usr/include/c++/6/bits/stl_tree.h **** 				    this->_M_impl._M_header);
1564:/usr/include/c++/6/bits/stl_tree.h ****       ++_M_impl._M_node_count;
1565:/usr/include/c++/6/bits/stl_tree.h ****       return iterator(__z);
1566:/usr/include/c++/6/bits/stl_tree.h ****     }
1567:/usr/include/c++/6/bits/stl_tree.h **** 
1568:/usr/include/c++/6/bits/stl_tree.h ****   template<typename _Key, typename _Val, typename _KeyOfValue,
1569:/usr/include/c++/6/bits/stl_tree.h ****            typename _Compare, typename _Alloc>
1570:/usr/include/c++/6/bits/stl_tree.h **** #if __cplusplus >= 201103L
1571:/usr/include/c++/6/bits/stl_tree.h ****     template<typename _Arg>
1572:/usr/include/c++/6/bits/stl_tree.h **** #endif
1573:/usr/include/c++/6/bits/stl_tree.h ****     typename _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::iterator
1574:/usr/include/c++/6/bits/stl_tree.h ****     _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
1575:/usr/include/c++/6/bits/stl_tree.h **** #if __cplusplus >= 201103L
1576:/usr/include/c++/6/bits/stl_tree.h ****     _M_insert_equal_lower(_Arg&& __v)
1577:/usr/include/c++/6/bits/stl_tree.h **** #else
1578:/usr/include/c++/6/bits/stl_tree.h ****     _M_insert_equal_lower(const _Val& __v)
1579:/usr/include/c++/6/bits/stl_tree.h **** #endif
1580:/usr/include/c++/6/bits/stl_tree.h ****     {
1581:/usr/include/c++/6/bits/stl_tree.h ****       _Link_type __x = _M_begin();
1582:/usr/include/c++/6/bits/stl_tree.h ****       _Base_ptr __y = _M_end();
1583:/usr/include/c++/6/bits/stl_tree.h ****       while (__x != 0)
1584:/usr/include/c++/6/bits/stl_tree.h **** 	{
1585:/usr/include/c++/6/bits/stl_tree.h **** 	  __y = __x;
1586:/usr/include/c++/6/bits/stl_tree.h **** 	  __x = !_M_impl._M_key_compare(_S_key(__x), _KeyOfValue()(__v)) ?
1587:/usr/include/c++/6/bits/stl_tree.h **** 	        _S_left(__x) : _S_right(__x);
1588:/usr/include/c++/6/bits/stl_tree.h **** 	}
1589:/usr/include/c++/6/bits/stl_tree.h ****       return _M_insert_lower(__y, _GLIBCXX_FORWARD(_Arg, __v));
1590:/usr/include/c++/6/bits/stl_tree.h ****     }
1591:/usr/include/c++/6/bits/stl_tree.h **** 
1592:/usr/include/c++/6/bits/stl_tree.h ****   template<typename _Key, typename _Val, typename _KoV,
1593:/usr/include/c++/6/bits/stl_tree.h **** 	   typename _Compare, typename _Alloc>
1594:/usr/include/c++/6/bits/stl_tree.h ****     template<typename _NodeGen>
1595:/usr/include/c++/6/bits/stl_tree.h ****       typename _Rb_tree<_Key, _Val, _KoV, _Compare, _Alloc>::_Link_type
1596:/usr/include/c++/6/bits/stl_tree.h ****       _Rb_tree<_Key, _Val, _KoV, _Compare, _Alloc>::
1597:/usr/include/c++/6/bits/stl_tree.h ****       _M_copy(_Const_Link_type __x, _Base_ptr __p, _NodeGen& __node_gen)
1598:/usr/include/c++/6/bits/stl_tree.h ****       {
1599:/usr/include/c++/6/bits/stl_tree.h **** 	// Structural copy. __x and __p must be non-null.
1600:/usr/include/c++/6/bits/stl_tree.h **** 	_Link_type __top = _M_clone_node(__x, __node_gen);
1601:/usr/include/c++/6/bits/stl_tree.h **** 	__top->_M_parent = __p;
1602:/usr/include/c++/6/bits/stl_tree.h **** 
1603:/usr/include/c++/6/bits/stl_tree.h **** 	__try
1604:/usr/include/c++/6/bits/stl_tree.h **** 	  {
1605:/usr/include/c++/6/bits/stl_tree.h **** 	    if (__x->_M_right)
1606:/usr/include/c++/6/bits/stl_tree.h **** 	      __top->_M_right = _M_copy(_S_right(__x), __top, __node_gen);
1607:/usr/include/c++/6/bits/stl_tree.h **** 	    __p = __top;
1608:/usr/include/c++/6/bits/stl_tree.h **** 	    __x = _S_left(__x);
1609:/usr/include/c++/6/bits/stl_tree.h **** 
1610:/usr/include/c++/6/bits/stl_tree.h **** 	    while (__x != 0)
1611:/usr/include/c++/6/bits/stl_tree.h **** 	      {
1612:/usr/include/c++/6/bits/stl_tree.h **** 		_Link_type __y = _M_clone_node(__x, __node_gen);
1613:/usr/include/c++/6/bits/stl_tree.h **** 		__p->_M_left = __y;
1614:/usr/include/c++/6/bits/stl_tree.h **** 		__y->_M_parent = __p;
1615:/usr/include/c++/6/bits/stl_tree.h **** 		if (__x->_M_right)
1616:/usr/include/c++/6/bits/stl_tree.h **** 		  __y->_M_right = _M_copy(_S_right(__x), __y, __node_gen);
1617:/usr/include/c++/6/bits/stl_tree.h **** 		__p = __y;
GAS LISTING /tmp/ccvUPO8Q.s 			page 392


1618:/usr/include/c++/6/bits/stl_tree.h **** 		__x = _S_left(__x);
1619:/usr/include/c++/6/bits/stl_tree.h **** 	      }
1620:/usr/include/c++/6/bits/stl_tree.h **** 	  }
1621:/usr/include/c++/6/bits/stl_tree.h **** 	__catch(...)
1622:/usr/include/c++/6/bits/stl_tree.h **** 	  {
1623:/usr/include/c++/6/bits/stl_tree.h **** 	    _M_erase(__top);
1624:/usr/include/c++/6/bits/stl_tree.h **** 	    __throw_exception_again;
1625:/usr/include/c++/6/bits/stl_tree.h **** 	  }
1626:/usr/include/c++/6/bits/stl_tree.h **** 	return __top;
1627:/usr/include/c++/6/bits/stl_tree.h ****       }
1628:/usr/include/c++/6/bits/stl_tree.h **** 
1629:/usr/include/c++/6/bits/stl_tree.h ****   template<typename _Key, typename _Val, typename _KeyOfValue,
1630:/usr/include/c++/6/bits/stl_tree.h ****            typename _Compare, typename _Alloc>
1631:/usr/include/c++/6/bits/stl_tree.h ****     void
1632:/usr/include/c++/6/bits/stl_tree.h ****     _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
1633:/usr/include/c++/6/bits/stl_tree.h ****     _M_erase(_Link_type __x)
1634:/usr/include/c++/6/bits/stl_tree.h ****     {
1635:/usr/include/c++/6/bits/stl_tree.h ****       // Erase without rebalancing.
1636:/usr/include/c++/6/bits/stl_tree.h ****       while (__x != 0)
1637:/usr/include/c++/6/bits/stl_tree.h **** 	{
1638:/usr/include/c++/6/bits/stl_tree.h **** 	  _M_erase(_S_right(__x));
1639:/usr/include/c++/6/bits/stl_tree.h **** 	  _Link_type __y = _S_left(__x);
1640:/usr/include/c++/6/bits/stl_tree.h **** 	  _M_drop_node(__x);
1641:/usr/include/c++/6/bits/stl_tree.h **** 	  __x = __y;
1642:/usr/include/c++/6/bits/stl_tree.h **** 	}
1643:/usr/include/c++/6/bits/stl_tree.h ****     }
1644:/usr/include/c++/6/bits/stl_tree.h **** 
1645:/usr/include/c++/6/bits/stl_tree.h ****   template<typename _Key, typename _Val, typename _KeyOfValue,
1646:/usr/include/c++/6/bits/stl_tree.h ****            typename _Compare, typename _Alloc>
1647:/usr/include/c++/6/bits/stl_tree.h ****     typename _Rb_tree<_Key, _Val, _KeyOfValue,
1648:/usr/include/c++/6/bits/stl_tree.h **** 		      _Compare, _Alloc>::iterator
1649:/usr/include/c++/6/bits/stl_tree.h ****     _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
1650:/usr/include/c++/6/bits/stl_tree.h ****     _M_lower_bound(_Link_type __x, _Base_ptr __y,
1651:/usr/include/c++/6/bits/stl_tree.h **** 		   const _Key& __k)
1652:/usr/include/c++/6/bits/stl_tree.h ****     {
1653:/usr/include/c++/6/bits/stl_tree.h ****       while (__x != 0)
1654:/usr/include/c++/6/bits/stl_tree.h **** 	if (!_M_impl._M_key_compare(_S_key(__x), __k))
1655:/usr/include/c++/6/bits/stl_tree.h **** 	  __y = __x, __x = _S_left(__x);
1656:/usr/include/c++/6/bits/stl_tree.h **** 	else
1657:/usr/include/c++/6/bits/stl_tree.h **** 	  __x = _S_right(__x);
1658:/usr/include/c++/6/bits/stl_tree.h ****       return iterator(__y);
1659:/usr/include/c++/6/bits/stl_tree.h ****     }
1660:/usr/include/c++/6/bits/stl_tree.h **** 
1661:/usr/include/c++/6/bits/stl_tree.h ****   template<typename _Key, typename _Val, typename _KeyOfValue,
1662:/usr/include/c++/6/bits/stl_tree.h ****            typename _Compare, typename _Alloc>
1663:/usr/include/c++/6/bits/stl_tree.h ****     typename _Rb_tree<_Key, _Val, _KeyOfValue,
1664:/usr/include/c++/6/bits/stl_tree.h **** 		      _Compare, _Alloc>::const_iterator
1665:/usr/include/c++/6/bits/stl_tree.h ****     _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
1666:/usr/include/c++/6/bits/stl_tree.h ****     _M_lower_bound(_Const_Link_type __x, _Const_Base_ptr __y,
1667:/usr/include/c++/6/bits/stl_tree.h **** 		   const _Key& __k) const
1668:/usr/include/c++/6/bits/stl_tree.h ****     {
1669:/usr/include/c++/6/bits/stl_tree.h ****       while (__x != 0)
1670:/usr/include/c++/6/bits/stl_tree.h **** 	if (!_M_impl._M_key_compare(_S_key(__x), __k))
1671:/usr/include/c++/6/bits/stl_tree.h **** 	  __y = __x, __x = _S_left(__x);
1672:/usr/include/c++/6/bits/stl_tree.h **** 	else
1673:/usr/include/c++/6/bits/stl_tree.h **** 	  __x = _S_right(__x);
1674:/usr/include/c++/6/bits/stl_tree.h ****       return const_iterator(__y);
GAS LISTING /tmp/ccvUPO8Q.s 			page 393


1675:/usr/include/c++/6/bits/stl_tree.h ****     }
1676:/usr/include/c++/6/bits/stl_tree.h **** 
1677:/usr/include/c++/6/bits/stl_tree.h ****   template<typename _Key, typename _Val, typename _KeyOfValue,
1678:/usr/include/c++/6/bits/stl_tree.h ****            typename _Compare, typename _Alloc>
1679:/usr/include/c++/6/bits/stl_tree.h ****     typename _Rb_tree<_Key, _Val, _KeyOfValue,
1680:/usr/include/c++/6/bits/stl_tree.h **** 		      _Compare, _Alloc>::iterator
1681:/usr/include/c++/6/bits/stl_tree.h ****     _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
1682:/usr/include/c++/6/bits/stl_tree.h ****     _M_upper_bound(_Link_type __x, _Base_ptr __y,
1683:/usr/include/c++/6/bits/stl_tree.h **** 		   const _Key& __k)
1684:/usr/include/c++/6/bits/stl_tree.h ****     {
1685:/usr/include/c++/6/bits/stl_tree.h ****       while (__x != 0)
1686:/usr/include/c++/6/bits/stl_tree.h **** 	if (_M_impl._M_key_compare(__k, _S_key(__x)))
1687:/usr/include/c++/6/bits/stl_tree.h **** 	  __y = __x, __x = _S_left(__x);
1688:/usr/include/c++/6/bits/stl_tree.h **** 	else
1689:/usr/include/c++/6/bits/stl_tree.h **** 	  __x = _S_right(__x);
1690:/usr/include/c++/6/bits/stl_tree.h ****       return iterator(__y);
1691:/usr/include/c++/6/bits/stl_tree.h ****     }
1692:/usr/include/c++/6/bits/stl_tree.h **** 
1693:/usr/include/c++/6/bits/stl_tree.h ****   template<typename _Key, typename _Val, typename _KeyOfValue,
1694:/usr/include/c++/6/bits/stl_tree.h ****            typename _Compare, typename _Alloc>
1695:/usr/include/c++/6/bits/stl_tree.h ****     typename _Rb_tree<_Key, _Val, _KeyOfValue,
1696:/usr/include/c++/6/bits/stl_tree.h **** 		      _Compare, _Alloc>::const_iterator
1697:/usr/include/c++/6/bits/stl_tree.h ****     _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
1698:/usr/include/c++/6/bits/stl_tree.h ****     _M_upper_bound(_Const_Link_type __x, _Const_Base_ptr __y,
1699:/usr/include/c++/6/bits/stl_tree.h **** 		   const _Key& __k) const
1700:/usr/include/c++/6/bits/stl_tree.h ****     {
1701:/usr/include/c++/6/bits/stl_tree.h ****       while (__x != 0)
1702:/usr/include/c++/6/bits/stl_tree.h **** 	if (_M_impl._M_key_compare(__k, _S_key(__x)))
1703:/usr/include/c++/6/bits/stl_tree.h **** 	  __y = __x, __x = _S_left(__x);
1704:/usr/include/c++/6/bits/stl_tree.h **** 	else
1705:/usr/include/c++/6/bits/stl_tree.h **** 	  __x = _S_right(__x);
1706:/usr/include/c++/6/bits/stl_tree.h ****       return const_iterator(__y);
1707:/usr/include/c++/6/bits/stl_tree.h ****     }
1708:/usr/include/c++/6/bits/stl_tree.h **** 
1709:/usr/include/c++/6/bits/stl_tree.h ****   template<typename _Key, typename _Val, typename _KeyOfValue,
1710:/usr/include/c++/6/bits/stl_tree.h ****            typename _Compare, typename _Alloc>
1711:/usr/include/c++/6/bits/stl_tree.h ****     pair<typename _Rb_tree<_Key, _Val, _KeyOfValue,
1712:/usr/include/c++/6/bits/stl_tree.h **** 			   _Compare, _Alloc>::iterator,
1713:/usr/include/c++/6/bits/stl_tree.h **** 	 typename _Rb_tree<_Key, _Val, _KeyOfValue,
1714:/usr/include/c++/6/bits/stl_tree.h **** 			   _Compare, _Alloc>::iterator>
1715:/usr/include/c++/6/bits/stl_tree.h ****     _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
1716:/usr/include/c++/6/bits/stl_tree.h ****     equal_range(const _Key& __k)
1717:/usr/include/c++/6/bits/stl_tree.h ****     {
1718:/usr/include/c++/6/bits/stl_tree.h ****       _Link_type __x = _M_begin();
1719:/usr/include/c++/6/bits/stl_tree.h ****       _Base_ptr __y = _M_end();
1720:/usr/include/c++/6/bits/stl_tree.h ****       while (__x != 0)
1721:/usr/include/c++/6/bits/stl_tree.h **** 	{
1722:/usr/include/c++/6/bits/stl_tree.h **** 	  if (_M_impl._M_key_compare(_S_key(__x), __k))
1723:/usr/include/c++/6/bits/stl_tree.h **** 	    __x = _S_right(__x);
1724:/usr/include/c++/6/bits/stl_tree.h **** 	  else if (_M_impl._M_key_compare(__k, _S_key(__x)))
1725:/usr/include/c++/6/bits/stl_tree.h **** 	    __y = __x, __x = _S_left(__x);
1726:/usr/include/c++/6/bits/stl_tree.h **** 	  else
1727:/usr/include/c++/6/bits/stl_tree.h **** 	    {
1728:/usr/include/c++/6/bits/stl_tree.h **** 	      _Link_type __xu(__x);
1729:/usr/include/c++/6/bits/stl_tree.h **** 	      _Base_ptr __yu(__y);
1730:/usr/include/c++/6/bits/stl_tree.h **** 	      __y = __x, __x = _S_left(__x);
1731:/usr/include/c++/6/bits/stl_tree.h **** 	      __xu = _S_right(__xu);
GAS LISTING /tmp/ccvUPO8Q.s 			page 394


1732:/usr/include/c++/6/bits/stl_tree.h **** 	      return pair<iterator,
1733:/usr/include/c++/6/bits/stl_tree.h **** 		          iterator>(_M_lower_bound(__x, __y, __k),
1734:/usr/include/c++/6/bits/stl_tree.h **** 				    _M_upper_bound(__xu, __yu, __k));
1735:/usr/include/c++/6/bits/stl_tree.h **** 	    }
1736:/usr/include/c++/6/bits/stl_tree.h **** 	}
1737:/usr/include/c++/6/bits/stl_tree.h ****       return pair<iterator, iterator>(iterator(__y),
1738:/usr/include/c++/6/bits/stl_tree.h **** 				      iterator(__y));
1739:/usr/include/c++/6/bits/stl_tree.h ****     }
1740:/usr/include/c++/6/bits/stl_tree.h **** 
1741:/usr/include/c++/6/bits/stl_tree.h ****   template<typename _Key, typename _Val, typename _KeyOfValue,
1742:/usr/include/c++/6/bits/stl_tree.h ****            typename _Compare, typename _Alloc>
1743:/usr/include/c++/6/bits/stl_tree.h ****     pair<typename _Rb_tree<_Key, _Val, _KeyOfValue,
1744:/usr/include/c++/6/bits/stl_tree.h **** 			   _Compare, _Alloc>::const_iterator,
1745:/usr/include/c++/6/bits/stl_tree.h **** 	 typename _Rb_tree<_Key, _Val, _KeyOfValue,
1746:/usr/include/c++/6/bits/stl_tree.h **** 			   _Compare, _Alloc>::const_iterator>
1747:/usr/include/c++/6/bits/stl_tree.h ****     _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
1748:/usr/include/c++/6/bits/stl_tree.h ****     equal_range(const _Key& __k) const
1749:/usr/include/c++/6/bits/stl_tree.h ****     {
1750:/usr/include/c++/6/bits/stl_tree.h ****       _Const_Link_type __x = _M_begin();
1751:/usr/include/c++/6/bits/stl_tree.h ****       _Const_Base_ptr __y = _M_end();
1752:/usr/include/c++/6/bits/stl_tree.h ****       while (__x != 0)
1753:/usr/include/c++/6/bits/stl_tree.h **** 	{
1754:/usr/include/c++/6/bits/stl_tree.h **** 	  if (_M_impl._M_key_compare(_S_key(__x), __k))
1755:/usr/include/c++/6/bits/stl_tree.h **** 	    __x = _S_right(__x);
1756:/usr/include/c++/6/bits/stl_tree.h **** 	  else if (_M_impl._M_key_compare(__k, _S_key(__x)))
1757:/usr/include/c++/6/bits/stl_tree.h **** 	    __y = __x, __x = _S_left(__x);
1758:/usr/include/c++/6/bits/stl_tree.h **** 	  else
1759:/usr/include/c++/6/bits/stl_tree.h **** 	    {
1760:/usr/include/c++/6/bits/stl_tree.h **** 	      _Const_Link_type __xu(__x);
1761:/usr/include/c++/6/bits/stl_tree.h **** 	      _Const_Base_ptr __yu(__y);
1762:/usr/include/c++/6/bits/stl_tree.h **** 	      __y = __x, __x = _S_left(__x);
1763:/usr/include/c++/6/bits/stl_tree.h **** 	      __xu = _S_right(__xu);
1764:/usr/include/c++/6/bits/stl_tree.h **** 	      return pair<const_iterator,
1765:/usr/include/c++/6/bits/stl_tree.h **** 		          const_iterator>(_M_lower_bound(__x, __y, __k),
1766:/usr/include/c++/6/bits/stl_tree.h **** 					  _M_upper_bound(__xu, __yu, __k));
1767:/usr/include/c++/6/bits/stl_tree.h **** 	    }
1768:/usr/include/c++/6/bits/stl_tree.h **** 	}
1769:/usr/include/c++/6/bits/stl_tree.h ****       return pair<const_iterator, const_iterator>(const_iterator(__y),
1770:/usr/include/c++/6/bits/stl_tree.h **** 						  const_iterator(__y));
1771:/usr/include/c++/6/bits/stl_tree.h ****     }
1772:/usr/include/c++/6/bits/stl_tree.h **** 
1773:/usr/include/c++/6/bits/stl_tree.h ****   template<typename _Key, typename _Val, typename _KeyOfValue,
1774:/usr/include/c++/6/bits/stl_tree.h ****            typename _Compare, typename _Alloc>
1775:/usr/include/c++/6/bits/stl_tree.h ****     void
1776:/usr/include/c++/6/bits/stl_tree.h ****     _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
1777:/usr/include/c++/6/bits/stl_tree.h ****     swap(_Rb_tree& __t)
1778:/usr/include/c++/6/bits/stl_tree.h ****     _GLIBCXX_NOEXCEPT_IF(__is_nothrow_swappable<_Compare>::value)
1779:/usr/include/c++/6/bits/stl_tree.h ****     {
1780:/usr/include/c++/6/bits/stl_tree.h ****       if (_M_root() == 0)
1781:/usr/include/c++/6/bits/stl_tree.h **** 	{
1782:/usr/include/c++/6/bits/stl_tree.h **** 	  if (__t._M_root() != 0)
1783:/usr/include/c++/6/bits/stl_tree.h **** 	    {
1784:/usr/include/c++/6/bits/stl_tree.h **** 	      _M_root() = __t._M_root();
1785:/usr/include/c++/6/bits/stl_tree.h **** 	      _M_leftmost() = __t._M_leftmost();
1786:/usr/include/c++/6/bits/stl_tree.h **** 	      _M_rightmost() = __t._M_rightmost();
1787:/usr/include/c++/6/bits/stl_tree.h **** 	      _M_root()->_M_parent = _M_end();
1788:/usr/include/c++/6/bits/stl_tree.h **** 	      _M_impl._M_node_count = __t._M_impl._M_node_count;
GAS LISTING /tmp/ccvUPO8Q.s 			page 395


1789:/usr/include/c++/6/bits/stl_tree.h **** 	      
1790:/usr/include/c++/6/bits/stl_tree.h **** 	      __t._M_impl._M_reset();
1791:/usr/include/c++/6/bits/stl_tree.h **** 	    }
1792:/usr/include/c++/6/bits/stl_tree.h **** 	}
1793:/usr/include/c++/6/bits/stl_tree.h ****       else if (__t._M_root() == 0)
1794:/usr/include/c++/6/bits/stl_tree.h **** 	{
1795:/usr/include/c++/6/bits/stl_tree.h **** 	  __t._M_root() = _M_root();
1796:/usr/include/c++/6/bits/stl_tree.h **** 	  __t._M_leftmost() = _M_leftmost();
1797:/usr/include/c++/6/bits/stl_tree.h **** 	  __t._M_rightmost() = _M_rightmost();
1798:/usr/include/c++/6/bits/stl_tree.h **** 	  __t._M_root()->_M_parent = __t._M_end();
1799:/usr/include/c++/6/bits/stl_tree.h **** 	  __t._M_impl._M_node_count = _M_impl._M_node_count;
1800:/usr/include/c++/6/bits/stl_tree.h **** 	  
1801:/usr/include/c++/6/bits/stl_tree.h **** 	  _M_impl._M_reset();
1802:/usr/include/c++/6/bits/stl_tree.h **** 	}
1803:/usr/include/c++/6/bits/stl_tree.h ****       else
1804:/usr/include/c++/6/bits/stl_tree.h **** 	{
1805:/usr/include/c++/6/bits/stl_tree.h **** 	  std::swap(_M_root(),__t._M_root());
1806:/usr/include/c++/6/bits/stl_tree.h **** 	  std::swap(_M_leftmost(),__t._M_leftmost());
1807:/usr/include/c++/6/bits/stl_tree.h **** 	  std::swap(_M_rightmost(),__t._M_rightmost());
1808:/usr/include/c++/6/bits/stl_tree.h **** 	  
1809:/usr/include/c++/6/bits/stl_tree.h **** 	  _M_root()->_M_parent = _M_end();
1810:/usr/include/c++/6/bits/stl_tree.h **** 	  __t._M_root()->_M_parent = __t._M_end();
1811:/usr/include/c++/6/bits/stl_tree.h **** 	  std::swap(this->_M_impl._M_node_count, __t._M_impl._M_node_count);
1812:/usr/include/c++/6/bits/stl_tree.h **** 	}
1813:/usr/include/c++/6/bits/stl_tree.h ****       // No need to swap header's color as it does not change.
1814:/usr/include/c++/6/bits/stl_tree.h ****       std::swap(this->_M_impl._M_key_compare, __t._M_impl._M_key_compare);
1815:/usr/include/c++/6/bits/stl_tree.h **** 
1816:/usr/include/c++/6/bits/stl_tree.h ****       _Alloc_traits::_S_on_swap(_M_get_Node_allocator(),
1817:/usr/include/c++/6/bits/stl_tree.h **** 				__t._M_get_Node_allocator());
1818:/usr/include/c++/6/bits/stl_tree.h ****     }
1819:/usr/include/c++/6/bits/stl_tree.h **** 
1820:/usr/include/c++/6/bits/stl_tree.h ****   template<typename _Key, typename _Val, typename _KeyOfValue,
1821:/usr/include/c++/6/bits/stl_tree.h ****            typename _Compare, typename _Alloc>
1822:/usr/include/c++/6/bits/stl_tree.h ****     pair<typename _Rb_tree<_Key, _Val, _KeyOfValue,
1823:/usr/include/c++/6/bits/stl_tree.h **** 			   _Compare, _Alloc>::_Base_ptr,
1824:/usr/include/c++/6/bits/stl_tree.h **** 	 typename _Rb_tree<_Key, _Val, _KeyOfValue,
1825:/usr/include/c++/6/bits/stl_tree.h **** 			   _Compare, _Alloc>::_Base_ptr>
1826:/usr/include/c++/6/bits/stl_tree.h ****     _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
1827:/usr/include/c++/6/bits/stl_tree.h ****     _M_get_insert_unique_pos(const key_type& __k)
1828:/usr/include/c++/6/bits/stl_tree.h ****     {
1829:/usr/include/c++/6/bits/stl_tree.h ****       typedef pair<_Base_ptr, _Base_ptr> _Res;
1830:/usr/include/c++/6/bits/stl_tree.h ****       _Link_type __x = _M_begin();
1831:/usr/include/c++/6/bits/stl_tree.h ****       _Base_ptr __y = _M_end();
1832:/usr/include/c++/6/bits/stl_tree.h ****       bool __comp = true;
1833:/usr/include/c++/6/bits/stl_tree.h ****       while (__x != 0)
1834:/usr/include/c++/6/bits/stl_tree.h **** 	{
1835:/usr/include/c++/6/bits/stl_tree.h **** 	  __y = __x;
1836:/usr/include/c++/6/bits/stl_tree.h **** 	  __comp = _M_impl._M_key_compare(__k, _S_key(__x));
1837:/usr/include/c++/6/bits/stl_tree.h **** 	  __x = __comp ? _S_left(__x) : _S_right(__x);
1838:/usr/include/c++/6/bits/stl_tree.h **** 	}
1839:/usr/include/c++/6/bits/stl_tree.h ****       iterator __j = iterator(__y);
1840:/usr/include/c++/6/bits/stl_tree.h ****       if (__comp)
1841:/usr/include/c++/6/bits/stl_tree.h **** 	{
1842:/usr/include/c++/6/bits/stl_tree.h **** 	  if (__j == begin())
1843:/usr/include/c++/6/bits/stl_tree.h **** 	    return _Res(__x, __y);
1844:/usr/include/c++/6/bits/stl_tree.h **** 	  else
1845:/usr/include/c++/6/bits/stl_tree.h **** 	    --__j;
GAS LISTING /tmp/ccvUPO8Q.s 			page 396


1846:/usr/include/c++/6/bits/stl_tree.h **** 	}
1847:/usr/include/c++/6/bits/stl_tree.h ****       if (_M_impl._M_key_compare(_S_key(__j._M_node), __k))
1848:/usr/include/c++/6/bits/stl_tree.h **** 	return _Res(__x, __y);
1849:/usr/include/c++/6/bits/stl_tree.h ****       return _Res(__j._M_node, 0);
1850:/usr/include/c++/6/bits/stl_tree.h ****     }
1851:/usr/include/c++/6/bits/stl_tree.h **** 
1852:/usr/include/c++/6/bits/stl_tree.h ****   template<typename _Key, typename _Val, typename _KeyOfValue,
1853:/usr/include/c++/6/bits/stl_tree.h ****            typename _Compare, typename _Alloc>
1854:/usr/include/c++/6/bits/stl_tree.h ****     pair<typename _Rb_tree<_Key, _Val, _KeyOfValue,
1855:/usr/include/c++/6/bits/stl_tree.h **** 			   _Compare, _Alloc>::_Base_ptr,
1856:/usr/include/c++/6/bits/stl_tree.h **** 	 typename _Rb_tree<_Key, _Val, _KeyOfValue,
1857:/usr/include/c++/6/bits/stl_tree.h **** 			   _Compare, _Alloc>::_Base_ptr>
1858:/usr/include/c++/6/bits/stl_tree.h ****     _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
1859:/usr/include/c++/6/bits/stl_tree.h ****     _M_get_insert_equal_pos(const key_type& __k)
1860:/usr/include/c++/6/bits/stl_tree.h ****     {
1861:/usr/include/c++/6/bits/stl_tree.h ****       typedef pair<_Base_ptr, _Base_ptr> _Res;
1862:/usr/include/c++/6/bits/stl_tree.h ****       _Link_type __x = _M_begin();
1863:/usr/include/c++/6/bits/stl_tree.h ****       _Base_ptr __y = _M_end();
1864:/usr/include/c++/6/bits/stl_tree.h ****       while (__x != 0)
1865:/usr/include/c++/6/bits/stl_tree.h **** 	{
1866:/usr/include/c++/6/bits/stl_tree.h **** 	  __y = __x;
1867:/usr/include/c++/6/bits/stl_tree.h **** 	  __x = _M_impl._M_key_compare(__k, _S_key(__x)) ?
1868:/usr/include/c++/6/bits/stl_tree.h **** 	        _S_left(__x) : _S_right(__x);
1869:/usr/include/c++/6/bits/stl_tree.h **** 	}
1870:/usr/include/c++/6/bits/stl_tree.h ****       return _Res(__x, __y);
1871:/usr/include/c++/6/bits/stl_tree.h ****     }
1872:/usr/include/c++/6/bits/stl_tree.h **** 
1873:/usr/include/c++/6/bits/stl_tree.h ****   template<typename _Key, typename _Val, typename _KeyOfValue,
1874:/usr/include/c++/6/bits/stl_tree.h ****            typename _Compare, typename _Alloc>
1875:/usr/include/c++/6/bits/stl_tree.h **** #if __cplusplus >= 201103L
1876:/usr/include/c++/6/bits/stl_tree.h ****     template<typename _Arg>
1877:/usr/include/c++/6/bits/stl_tree.h **** #endif
1878:/usr/include/c++/6/bits/stl_tree.h ****     pair<typename _Rb_tree<_Key, _Val, _KeyOfValue,
1879:/usr/include/c++/6/bits/stl_tree.h **** 			   _Compare, _Alloc>::iterator, bool>
1880:/usr/include/c++/6/bits/stl_tree.h ****     _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
1881:/usr/include/c++/6/bits/stl_tree.h **** #if __cplusplus >= 201103L
1882:/usr/include/c++/6/bits/stl_tree.h ****     _M_insert_unique(_Arg&& __v)
1883:/usr/include/c++/6/bits/stl_tree.h **** #else
1884:/usr/include/c++/6/bits/stl_tree.h ****     _M_insert_unique(const _Val& __v)
1885:/usr/include/c++/6/bits/stl_tree.h **** #endif
1886:/usr/include/c++/6/bits/stl_tree.h ****     {
1887:/usr/include/c++/6/bits/stl_tree.h ****       typedef pair<iterator, bool> _Res;
1888:/usr/include/c++/6/bits/stl_tree.h ****       pair<_Base_ptr, _Base_ptr> __res
1889:/usr/include/c++/6/bits/stl_tree.h **** 	= _M_get_insert_unique_pos(_KeyOfValue()(__v));
1890:/usr/include/c++/6/bits/stl_tree.h **** 
1891:/usr/include/c++/6/bits/stl_tree.h ****       if (__res.second)
1892:/usr/include/c++/6/bits/stl_tree.h **** 	{
1893:/usr/include/c++/6/bits/stl_tree.h **** 	  _Alloc_node __an(*this);
1894:/usr/include/c++/6/bits/stl_tree.h **** 	  return _Res(_M_insert_(__res.first, __res.second,
1895:/usr/include/c++/6/bits/stl_tree.h **** 				 _GLIBCXX_FORWARD(_Arg, __v), __an),
1896:/usr/include/c++/6/bits/stl_tree.h **** 		      true);
1897:/usr/include/c++/6/bits/stl_tree.h **** 	}
1898:/usr/include/c++/6/bits/stl_tree.h **** 
1899:/usr/include/c++/6/bits/stl_tree.h ****       return _Res(iterator(__res.first), false);
1900:/usr/include/c++/6/bits/stl_tree.h ****     }
1901:/usr/include/c++/6/bits/stl_tree.h **** 
1902:/usr/include/c++/6/bits/stl_tree.h ****   template<typename _Key, typename _Val, typename _KeyOfValue,
GAS LISTING /tmp/ccvUPO8Q.s 			page 397


1903:/usr/include/c++/6/bits/stl_tree.h ****            typename _Compare, typename _Alloc>
1904:/usr/include/c++/6/bits/stl_tree.h **** #if __cplusplus >= 201103L
1905:/usr/include/c++/6/bits/stl_tree.h ****     template<typename _Arg>
1906:/usr/include/c++/6/bits/stl_tree.h **** #endif
1907:/usr/include/c++/6/bits/stl_tree.h ****     typename _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::iterator
1908:/usr/include/c++/6/bits/stl_tree.h ****     _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
1909:/usr/include/c++/6/bits/stl_tree.h **** #if __cplusplus >= 201103L
1910:/usr/include/c++/6/bits/stl_tree.h ****     _M_insert_equal(_Arg&& __v)
1911:/usr/include/c++/6/bits/stl_tree.h **** #else
1912:/usr/include/c++/6/bits/stl_tree.h ****     _M_insert_equal(const _Val& __v)
1913:/usr/include/c++/6/bits/stl_tree.h **** #endif
1914:/usr/include/c++/6/bits/stl_tree.h ****     {
1915:/usr/include/c++/6/bits/stl_tree.h ****       pair<_Base_ptr, _Base_ptr> __res
1916:/usr/include/c++/6/bits/stl_tree.h **** 	= _M_get_insert_equal_pos(_KeyOfValue()(__v));
1917:/usr/include/c++/6/bits/stl_tree.h ****       _Alloc_node __an(*this);
1918:/usr/include/c++/6/bits/stl_tree.h ****       return _M_insert_(__res.first, __res.second,
1919:/usr/include/c++/6/bits/stl_tree.h **** 			_GLIBCXX_FORWARD(_Arg, __v), __an);
1920:/usr/include/c++/6/bits/stl_tree.h ****     }
1921:/usr/include/c++/6/bits/stl_tree.h **** 
1922:/usr/include/c++/6/bits/stl_tree.h ****   template<typename _Key, typename _Val, typename _KeyOfValue,
1923:/usr/include/c++/6/bits/stl_tree.h ****            typename _Compare, typename _Alloc>
1924:/usr/include/c++/6/bits/stl_tree.h ****     pair<typename _Rb_tree<_Key, _Val, _KeyOfValue,
1925:/usr/include/c++/6/bits/stl_tree.h **** 			   _Compare, _Alloc>::_Base_ptr,
1926:/usr/include/c++/6/bits/stl_tree.h ****          typename _Rb_tree<_Key, _Val, _KeyOfValue,
1927:/usr/include/c++/6/bits/stl_tree.h **** 			   _Compare, _Alloc>::_Base_ptr>
1928:/usr/include/c++/6/bits/stl_tree.h ****     _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
1929:/usr/include/c++/6/bits/stl_tree.h ****     _M_get_insert_hint_unique_pos(const_iterator __position,
1930:/usr/include/c++/6/bits/stl_tree.h **** 				  const key_type& __k)
1931:/usr/include/c++/6/bits/stl_tree.h ****     {
1932:/usr/include/c++/6/bits/stl_tree.h ****       iterator __pos = __position._M_const_cast();
1933:/usr/include/c++/6/bits/stl_tree.h ****       typedef pair<_Base_ptr, _Base_ptr> _Res;
1934:/usr/include/c++/6/bits/stl_tree.h **** 
1935:/usr/include/c++/6/bits/stl_tree.h ****       // end()
1936:/usr/include/c++/6/bits/stl_tree.h ****       if (__pos._M_node == _M_end())
1937:/usr/include/c++/6/bits/stl_tree.h **** 	{
1938:/usr/include/c++/6/bits/stl_tree.h **** 	  if (size() > 0
1939:/usr/include/c++/6/bits/stl_tree.h **** 	      && _M_impl._M_key_compare(_S_key(_M_rightmost()), __k))
1940:/usr/include/c++/6/bits/stl_tree.h **** 	    return _Res(0, _M_rightmost());
1941:/usr/include/c++/6/bits/stl_tree.h **** 	  else
1942:/usr/include/c++/6/bits/stl_tree.h **** 	    return _M_get_insert_unique_pos(__k);
1943:/usr/include/c++/6/bits/stl_tree.h **** 	}
1944:/usr/include/c++/6/bits/stl_tree.h ****       else if (_M_impl._M_key_compare(__k, _S_key(__pos._M_node)))
1945:/usr/include/c++/6/bits/stl_tree.h **** 	{
1946:/usr/include/c++/6/bits/stl_tree.h **** 	  // First, try before...
1947:/usr/include/c++/6/bits/stl_tree.h **** 	  iterator __before = __pos;
1948:/usr/include/c++/6/bits/stl_tree.h **** 	  if (__pos._M_node == _M_leftmost()) // begin()
1949:/usr/include/c++/6/bits/stl_tree.h **** 	    return _Res(_M_leftmost(), _M_leftmost());
1950:/usr/include/c++/6/bits/stl_tree.h **** 	  else if (_M_impl._M_key_compare(_S_key((--__before)._M_node), __k))
1951:/usr/include/c++/6/bits/stl_tree.h **** 	    {
1952:/usr/include/c++/6/bits/stl_tree.h **** 	      if (_S_right(__before._M_node) == 0)
1953:/usr/include/c++/6/bits/stl_tree.h **** 		return _Res(0, __before._M_node);
1954:/usr/include/c++/6/bits/stl_tree.h **** 	      else
1955:/usr/include/c++/6/bits/stl_tree.h **** 		return _Res(__pos._M_node, __pos._M_node);
1956:/usr/include/c++/6/bits/stl_tree.h **** 	    }
1957:/usr/include/c++/6/bits/stl_tree.h **** 	  else
1958:/usr/include/c++/6/bits/stl_tree.h **** 	    return _M_get_insert_unique_pos(__k);
1959:/usr/include/c++/6/bits/stl_tree.h **** 	}
GAS LISTING /tmp/ccvUPO8Q.s 			page 398


1960:/usr/include/c++/6/bits/stl_tree.h ****       else if (_M_impl._M_key_compare(_S_key(__pos._M_node), __k))
1961:/usr/include/c++/6/bits/stl_tree.h **** 	{
1962:/usr/include/c++/6/bits/stl_tree.h **** 	  // ... then try after.
1963:/usr/include/c++/6/bits/stl_tree.h **** 	  iterator __after = __pos;
1964:/usr/include/c++/6/bits/stl_tree.h **** 	  if (__pos._M_node == _M_rightmost())
1965:/usr/include/c++/6/bits/stl_tree.h **** 	    return _Res(0, _M_rightmost());
1966:/usr/include/c++/6/bits/stl_tree.h **** 	  else if (_M_impl._M_key_compare(__k, _S_key((++__after)._M_node)))
1967:/usr/include/c++/6/bits/stl_tree.h **** 	    {
1968:/usr/include/c++/6/bits/stl_tree.h **** 	      if (_S_right(__pos._M_node) == 0)
1969:/usr/include/c++/6/bits/stl_tree.h **** 		return _Res(0, __pos._M_node);
1970:/usr/include/c++/6/bits/stl_tree.h **** 	      else
1971:/usr/include/c++/6/bits/stl_tree.h **** 		return _Res(__after._M_node, __after._M_node);
1972:/usr/include/c++/6/bits/stl_tree.h **** 	    }
1973:/usr/include/c++/6/bits/stl_tree.h **** 	  else
1974:/usr/include/c++/6/bits/stl_tree.h **** 	    return _M_get_insert_unique_pos(__k);
1975:/usr/include/c++/6/bits/stl_tree.h **** 	}
1976:/usr/include/c++/6/bits/stl_tree.h ****       else
1977:/usr/include/c++/6/bits/stl_tree.h **** 	// Equivalent keys.
1978:/usr/include/c++/6/bits/stl_tree.h **** 	return _Res(__pos._M_node, 0);
1979:/usr/include/c++/6/bits/stl_tree.h ****     }
1980:/usr/include/c++/6/bits/stl_tree.h **** 
1981:/usr/include/c++/6/bits/stl_tree.h ****   template<typename _Key, typename _Val, typename _KeyOfValue,
1982:/usr/include/c++/6/bits/stl_tree.h ****            typename _Compare, typename _Alloc>
1983:/usr/include/c++/6/bits/stl_tree.h **** #if __cplusplus >= 201103L
1984:/usr/include/c++/6/bits/stl_tree.h ****     template<typename _Arg, typename _NodeGen>
1985:/usr/include/c++/6/bits/stl_tree.h **** #else
1986:/usr/include/c++/6/bits/stl_tree.h ****     template<typename _NodeGen>
1987:/usr/include/c++/6/bits/stl_tree.h **** #endif
1988:/usr/include/c++/6/bits/stl_tree.h ****       typename _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::iterator
1989:/usr/include/c++/6/bits/stl_tree.h ****       _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
1990:/usr/include/c++/6/bits/stl_tree.h ****       _M_insert_unique_(const_iterator __position,
1991:/usr/include/c++/6/bits/stl_tree.h **** #if __cplusplus >= 201103L
1992:/usr/include/c++/6/bits/stl_tree.h **** 			_Arg&& __v,
1993:/usr/include/c++/6/bits/stl_tree.h **** #else
1994:/usr/include/c++/6/bits/stl_tree.h **** 			const _Val& __v,
1995:/usr/include/c++/6/bits/stl_tree.h **** #endif
1996:/usr/include/c++/6/bits/stl_tree.h **** 			_NodeGen& __node_gen)
1997:/usr/include/c++/6/bits/stl_tree.h ****     {
1998:/usr/include/c++/6/bits/stl_tree.h ****       pair<_Base_ptr, _Base_ptr> __res
1999:/usr/include/c++/6/bits/stl_tree.h **** 	= _M_get_insert_hint_unique_pos(__position, _KeyOfValue()(__v));
2000:/usr/include/c++/6/bits/stl_tree.h **** 
2001:/usr/include/c++/6/bits/stl_tree.h ****       if (__res.second)
2002:/usr/include/c++/6/bits/stl_tree.h **** 	return _M_insert_(__res.first, __res.second,
2003:/usr/include/c++/6/bits/stl_tree.h **** 			  _GLIBCXX_FORWARD(_Arg, __v),
2004:/usr/include/c++/6/bits/stl_tree.h **** 			  __node_gen);
2005:/usr/include/c++/6/bits/stl_tree.h ****       return iterator(__res.first);
2006:/usr/include/c++/6/bits/stl_tree.h ****     }
2007:/usr/include/c++/6/bits/stl_tree.h **** 
2008:/usr/include/c++/6/bits/stl_tree.h ****   template<typename _Key, typename _Val, typename _KeyOfValue,
2009:/usr/include/c++/6/bits/stl_tree.h ****            typename _Compare, typename _Alloc>
2010:/usr/include/c++/6/bits/stl_tree.h ****     pair<typename _Rb_tree<_Key, _Val, _KeyOfValue,
2011:/usr/include/c++/6/bits/stl_tree.h **** 			   _Compare, _Alloc>::_Base_ptr,
2012:/usr/include/c++/6/bits/stl_tree.h ****          typename _Rb_tree<_Key, _Val, _KeyOfValue,
2013:/usr/include/c++/6/bits/stl_tree.h **** 			   _Compare, _Alloc>::_Base_ptr>
2014:/usr/include/c++/6/bits/stl_tree.h ****     _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
2015:/usr/include/c++/6/bits/stl_tree.h ****     _M_get_insert_hint_equal_pos(const_iterator __position, const key_type& __k)
2016:/usr/include/c++/6/bits/stl_tree.h ****     {
GAS LISTING /tmp/ccvUPO8Q.s 			page 399


2017:/usr/include/c++/6/bits/stl_tree.h ****       iterator __pos = __position._M_const_cast();
2018:/usr/include/c++/6/bits/stl_tree.h ****       typedef pair<_Base_ptr, _Base_ptr> _Res;
2019:/usr/include/c++/6/bits/stl_tree.h **** 
2020:/usr/include/c++/6/bits/stl_tree.h ****       // end()
2021:/usr/include/c++/6/bits/stl_tree.h ****       if (__pos._M_node == _M_end())
2022:/usr/include/c++/6/bits/stl_tree.h **** 	{
2023:/usr/include/c++/6/bits/stl_tree.h **** 	  if (size() > 0
2024:/usr/include/c++/6/bits/stl_tree.h **** 	      && !_M_impl._M_key_compare(__k, _S_key(_M_rightmost())))
2025:/usr/include/c++/6/bits/stl_tree.h **** 	    return _Res(0, _M_rightmost());
2026:/usr/include/c++/6/bits/stl_tree.h **** 	  else
2027:/usr/include/c++/6/bits/stl_tree.h **** 	    return _M_get_insert_equal_pos(__k);
2028:/usr/include/c++/6/bits/stl_tree.h **** 	}
2029:/usr/include/c++/6/bits/stl_tree.h ****       else if (!_M_impl._M_key_compare(_S_key(__pos._M_node), __k))
2030:/usr/include/c++/6/bits/stl_tree.h **** 	{
2031:/usr/include/c++/6/bits/stl_tree.h **** 	  // First, try before...
2032:/usr/include/c++/6/bits/stl_tree.h **** 	  iterator __before = __pos;
2033:/usr/include/c++/6/bits/stl_tree.h **** 	  if (__pos._M_node == _M_leftmost()) // begin()
2034:/usr/include/c++/6/bits/stl_tree.h **** 	    return _Res(_M_leftmost(), _M_leftmost());
2035:/usr/include/c++/6/bits/stl_tree.h **** 	  else if (!_M_impl._M_key_compare(__k, _S_key((--__before)._M_node)))
2036:/usr/include/c++/6/bits/stl_tree.h **** 	    {
2037:/usr/include/c++/6/bits/stl_tree.h **** 	      if (_S_right(__before._M_node) == 0)
2038:/usr/include/c++/6/bits/stl_tree.h **** 		return _Res(0, __before._M_node);
2039:/usr/include/c++/6/bits/stl_tree.h **** 	      else
2040:/usr/include/c++/6/bits/stl_tree.h **** 		return _Res(__pos._M_node, __pos._M_node);
2041:/usr/include/c++/6/bits/stl_tree.h **** 	    }
2042:/usr/include/c++/6/bits/stl_tree.h **** 	  else
2043:/usr/include/c++/6/bits/stl_tree.h **** 	    return _M_get_insert_equal_pos(__k);
2044:/usr/include/c++/6/bits/stl_tree.h **** 	}
2045:/usr/include/c++/6/bits/stl_tree.h ****       else
2046:/usr/include/c++/6/bits/stl_tree.h **** 	{
2047:/usr/include/c++/6/bits/stl_tree.h **** 	  // ... then try after.  
2048:/usr/include/c++/6/bits/stl_tree.h **** 	  iterator __after = __pos;
2049:/usr/include/c++/6/bits/stl_tree.h **** 	  if (__pos._M_node == _M_rightmost())
2050:/usr/include/c++/6/bits/stl_tree.h **** 	    return _Res(0, _M_rightmost());
2051:/usr/include/c++/6/bits/stl_tree.h **** 	  else if (!_M_impl._M_key_compare(_S_key((++__after)._M_node), __k))
2052:/usr/include/c++/6/bits/stl_tree.h **** 	    {
2053:/usr/include/c++/6/bits/stl_tree.h **** 	      if (_S_right(__pos._M_node) == 0)
2054:/usr/include/c++/6/bits/stl_tree.h **** 		return _Res(0, __pos._M_node);
2055:/usr/include/c++/6/bits/stl_tree.h **** 	      else
2056:/usr/include/c++/6/bits/stl_tree.h **** 		return _Res(__after._M_node, __after._M_node);
2057:/usr/include/c++/6/bits/stl_tree.h **** 	    }
2058:/usr/include/c++/6/bits/stl_tree.h **** 	  else
2059:/usr/include/c++/6/bits/stl_tree.h **** 	    return _Res(0, 0);
2060:/usr/include/c++/6/bits/stl_tree.h **** 	}
2061:/usr/include/c++/6/bits/stl_tree.h ****     }
2062:/usr/include/c++/6/bits/stl_tree.h **** 
2063:/usr/include/c++/6/bits/stl_tree.h ****   template<typename _Key, typename _Val, typename _KeyOfValue,
2064:/usr/include/c++/6/bits/stl_tree.h ****            typename _Compare, typename _Alloc>
2065:/usr/include/c++/6/bits/stl_tree.h **** #if __cplusplus >= 201103L
2066:/usr/include/c++/6/bits/stl_tree.h ****     template<typename _Arg, typename _NodeGen>
2067:/usr/include/c++/6/bits/stl_tree.h **** #else
2068:/usr/include/c++/6/bits/stl_tree.h ****     template<typename _NodeGen>
2069:/usr/include/c++/6/bits/stl_tree.h **** #endif
2070:/usr/include/c++/6/bits/stl_tree.h ****       typename _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::iterator
2071:/usr/include/c++/6/bits/stl_tree.h ****       _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
2072:/usr/include/c++/6/bits/stl_tree.h ****       _M_insert_equal_(const_iterator __position,
2073:/usr/include/c++/6/bits/stl_tree.h **** #if __cplusplus >= 201103L
GAS LISTING /tmp/ccvUPO8Q.s 			page 400


2074:/usr/include/c++/6/bits/stl_tree.h **** 		       _Arg&& __v,
2075:/usr/include/c++/6/bits/stl_tree.h **** #else
2076:/usr/include/c++/6/bits/stl_tree.h **** 		       const _Val& __v,
2077:/usr/include/c++/6/bits/stl_tree.h **** #endif
2078:/usr/include/c++/6/bits/stl_tree.h **** 		       _NodeGen& __node_gen)
2079:/usr/include/c++/6/bits/stl_tree.h ****       {
2080:/usr/include/c++/6/bits/stl_tree.h **** 	pair<_Base_ptr, _Base_ptr> __res
2081:/usr/include/c++/6/bits/stl_tree.h **** 	  = _M_get_insert_hint_equal_pos(__position, _KeyOfValue()(__v));
2082:/usr/include/c++/6/bits/stl_tree.h **** 
2083:/usr/include/c++/6/bits/stl_tree.h **** 	if (__res.second)
2084:/usr/include/c++/6/bits/stl_tree.h **** 	  return _M_insert_(__res.first, __res.second,
2085:/usr/include/c++/6/bits/stl_tree.h **** 			    _GLIBCXX_FORWARD(_Arg, __v),
2086:/usr/include/c++/6/bits/stl_tree.h **** 			    __node_gen);
2087:/usr/include/c++/6/bits/stl_tree.h **** 
2088:/usr/include/c++/6/bits/stl_tree.h **** 	return _M_insert_equal_lower(_GLIBCXX_FORWARD(_Arg, __v));
2089:/usr/include/c++/6/bits/stl_tree.h ****       }
2090:/usr/include/c++/6/bits/stl_tree.h **** 
2091:/usr/include/c++/6/bits/stl_tree.h **** #if __cplusplus >= 201103L
2092:/usr/include/c++/6/bits/stl_tree.h ****   template<typename _Key, typename _Val, typename _KeyOfValue,
2093:/usr/include/c++/6/bits/stl_tree.h ****            typename _Compare, typename _Alloc>
2094:/usr/include/c++/6/bits/stl_tree.h ****     typename _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::iterator
2095:/usr/include/c++/6/bits/stl_tree.h ****     _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
2096:/usr/include/c++/6/bits/stl_tree.h ****     _M_insert_node(_Base_ptr __x, _Base_ptr __p, _Link_type __z)
2097:/usr/include/c++/6/bits/stl_tree.h ****     {
2098:/usr/include/c++/6/bits/stl_tree.h ****       bool __insert_left = (__x != 0 || __p == _M_end()
2099:/usr/include/c++/6/bits/stl_tree.h **** 			    || _M_impl._M_key_compare(_S_key(__z),
2100:/usr/include/c++/6/bits/stl_tree.h **** 						      _S_key(__p)));
2101:/usr/include/c++/6/bits/stl_tree.h **** 
2102:/usr/include/c++/6/bits/stl_tree.h ****       _Rb_tree_insert_and_rebalance(__insert_left, __z, __p,
2103:/usr/include/c++/6/bits/stl_tree.h **** 				    this->_M_impl._M_header);
2104:/usr/include/c++/6/bits/stl_tree.h ****       ++_M_impl._M_node_count;
2105:/usr/include/c++/6/bits/stl_tree.h ****       return iterator(__z);
2106:/usr/include/c++/6/bits/stl_tree.h ****     }
2107:/usr/include/c++/6/bits/stl_tree.h **** 
2108:/usr/include/c++/6/bits/stl_tree.h ****   template<typename _Key, typename _Val, typename _KeyOfValue,
2109:/usr/include/c++/6/bits/stl_tree.h ****            typename _Compare, typename _Alloc>
2110:/usr/include/c++/6/bits/stl_tree.h ****     typename _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::iterator
2111:/usr/include/c++/6/bits/stl_tree.h ****     _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
2112:/usr/include/c++/6/bits/stl_tree.h ****     _M_insert_lower_node(_Base_ptr __p, _Link_type __z)
2113:/usr/include/c++/6/bits/stl_tree.h ****     {
2114:/usr/include/c++/6/bits/stl_tree.h ****       bool __insert_left = (__p == _M_end()
2115:/usr/include/c++/6/bits/stl_tree.h **** 			    || !_M_impl._M_key_compare(_S_key(__p),
2116:/usr/include/c++/6/bits/stl_tree.h **** 						       _S_key(__z)));
2117:/usr/include/c++/6/bits/stl_tree.h **** 
2118:/usr/include/c++/6/bits/stl_tree.h ****       _Rb_tree_insert_and_rebalance(__insert_left, __z, __p,
2119:/usr/include/c++/6/bits/stl_tree.h **** 				    this->_M_impl._M_header);
2120:/usr/include/c++/6/bits/stl_tree.h ****       ++_M_impl._M_node_count;
2121:/usr/include/c++/6/bits/stl_tree.h ****       return iterator(__z);
2122:/usr/include/c++/6/bits/stl_tree.h ****     }
2123:/usr/include/c++/6/bits/stl_tree.h **** 
2124:/usr/include/c++/6/bits/stl_tree.h ****   template<typename _Key, typename _Val, typename _KeyOfValue,
2125:/usr/include/c++/6/bits/stl_tree.h ****            typename _Compare, typename _Alloc>
2126:/usr/include/c++/6/bits/stl_tree.h ****     typename _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::iterator
2127:/usr/include/c++/6/bits/stl_tree.h ****     _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
2128:/usr/include/c++/6/bits/stl_tree.h ****     _M_insert_equal_lower_node(_Link_type __z)
2129:/usr/include/c++/6/bits/stl_tree.h ****     {
2130:/usr/include/c++/6/bits/stl_tree.h ****       _Link_type __x = _M_begin();
GAS LISTING /tmp/ccvUPO8Q.s 			page 401


2131:/usr/include/c++/6/bits/stl_tree.h ****       _Base_ptr __y = _M_end();
2132:/usr/include/c++/6/bits/stl_tree.h ****       while (__x != 0)
2133:/usr/include/c++/6/bits/stl_tree.h **** 	{
2134:/usr/include/c++/6/bits/stl_tree.h **** 	  __y = __x;
2135:/usr/include/c++/6/bits/stl_tree.h **** 	  __x = !_M_impl._M_key_compare(_S_key(__x), _S_key(__z)) ?
2136:/usr/include/c++/6/bits/stl_tree.h **** 	        _S_left(__x) : _S_right(__x);
2137:/usr/include/c++/6/bits/stl_tree.h **** 	}
2138:/usr/include/c++/6/bits/stl_tree.h ****       return _M_insert_lower_node(__y, __z);
2139:/usr/include/c++/6/bits/stl_tree.h ****     }
2140:/usr/include/c++/6/bits/stl_tree.h **** 
2141:/usr/include/c++/6/bits/stl_tree.h ****   template<typename _Key, typename _Val, typename _KeyOfValue,
2142:/usr/include/c++/6/bits/stl_tree.h ****            typename _Compare, typename _Alloc>
2143:/usr/include/c++/6/bits/stl_tree.h ****     template<typename... _Args>
2144:/usr/include/c++/6/bits/stl_tree.h ****       pair<typename _Rb_tree<_Key, _Val, _KeyOfValue,
2145:/usr/include/c++/6/bits/stl_tree.h **** 			     _Compare, _Alloc>::iterator, bool>
2146:/usr/include/c++/6/bits/stl_tree.h ****       _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
2147:/usr/include/c++/6/bits/stl_tree.h ****       _M_emplace_unique(_Args&&... __args)
2148:/usr/include/c++/6/bits/stl_tree.h ****       {
2149:/usr/include/c++/6/bits/stl_tree.h **** 	_Link_type __z = _M_create_node(std::forward<_Args>(__args)...);
2150:/usr/include/c++/6/bits/stl_tree.h **** 
2151:/usr/include/c++/6/bits/stl_tree.h **** 	__try
2152:/usr/include/c++/6/bits/stl_tree.h **** 	  {
2153:/usr/include/c++/6/bits/stl_tree.h **** 	    typedef pair<iterator, bool> _Res;
2154:/usr/include/c++/6/bits/stl_tree.h **** 	    auto __res = _M_get_insert_unique_pos(_S_key(__z));
2155:/usr/include/c++/6/bits/stl_tree.h **** 	    if (__res.second)
2156:/usr/include/c++/6/bits/stl_tree.h **** 	      return _Res(_M_insert_node(__res.first, __res.second, __z), true);
2157:/usr/include/c++/6/bits/stl_tree.h **** 	
2158:/usr/include/c++/6/bits/stl_tree.h **** 	    _M_drop_node(__z);
2159:/usr/include/c++/6/bits/stl_tree.h **** 	    return _Res(iterator(__res.first), false);
2160:/usr/include/c++/6/bits/stl_tree.h **** 	  }
2161:/usr/include/c++/6/bits/stl_tree.h **** 	__catch(...)
2162:/usr/include/c++/6/bits/stl_tree.h **** 	  {
2163:/usr/include/c++/6/bits/stl_tree.h **** 	    _M_drop_node(__z);
2164:/usr/include/c++/6/bits/stl_tree.h **** 	    __throw_exception_again;
2165:/usr/include/c++/6/bits/stl_tree.h **** 	  }
2166:/usr/include/c++/6/bits/stl_tree.h ****       }
2167:/usr/include/c++/6/bits/stl_tree.h **** 
2168:/usr/include/c++/6/bits/stl_tree.h ****   template<typename _Key, typename _Val, typename _KeyOfValue,
2169:/usr/include/c++/6/bits/stl_tree.h ****            typename _Compare, typename _Alloc>
2170:/usr/include/c++/6/bits/stl_tree.h ****     template<typename... _Args>
2171:/usr/include/c++/6/bits/stl_tree.h ****       typename _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::iterator
2172:/usr/include/c++/6/bits/stl_tree.h ****       _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
2173:/usr/include/c++/6/bits/stl_tree.h ****       _M_emplace_equal(_Args&&... __args)
2174:/usr/include/c++/6/bits/stl_tree.h ****       {
2175:/usr/include/c++/6/bits/stl_tree.h **** 	_Link_type __z = _M_create_node(std::forward<_Args>(__args)...);
2176:/usr/include/c++/6/bits/stl_tree.h **** 
2177:/usr/include/c++/6/bits/stl_tree.h **** 	__try
2178:/usr/include/c++/6/bits/stl_tree.h **** 	  {
2179:/usr/include/c++/6/bits/stl_tree.h **** 	    auto __res = _M_get_insert_equal_pos(_S_key(__z));
2180:/usr/include/c++/6/bits/stl_tree.h **** 	    return _M_insert_node(__res.first, __res.second, __z);
2181:/usr/include/c++/6/bits/stl_tree.h **** 	  }
2182:/usr/include/c++/6/bits/stl_tree.h **** 	__catch(...)
2183:/usr/include/c++/6/bits/stl_tree.h **** 	  {
2184:/usr/include/c++/6/bits/stl_tree.h **** 	    _M_drop_node(__z);
2185:/usr/include/c++/6/bits/stl_tree.h **** 	    __throw_exception_again;
2186:/usr/include/c++/6/bits/stl_tree.h **** 	  }
2187:/usr/include/c++/6/bits/stl_tree.h ****       }
GAS LISTING /tmp/ccvUPO8Q.s 			page 402


2188:/usr/include/c++/6/bits/stl_tree.h **** 
2189:/usr/include/c++/6/bits/stl_tree.h ****   template<typename _Key, typename _Val, typename _KeyOfValue,
2190:/usr/include/c++/6/bits/stl_tree.h ****            typename _Compare, typename _Alloc>
2191:/usr/include/c++/6/bits/stl_tree.h ****     template<typename... _Args>
2192:/usr/include/c++/6/bits/stl_tree.h ****       typename _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::iterator
2193:/usr/include/c++/6/bits/stl_tree.h ****       _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
2194:/usr/include/c++/6/bits/stl_tree.h ****       _M_emplace_hint_unique(const_iterator __pos, _Args&&... __args)
2195:/usr/include/c++/6/bits/stl_tree.h ****       {
2196:/usr/include/c++/6/bits/stl_tree.h **** 	_Link_type __z = _M_create_node(std::forward<_Args>(__args)...);
2197:/usr/include/c++/6/bits/stl_tree.h **** 
2198:/usr/include/c++/6/bits/stl_tree.h **** 	__try
2199:/usr/include/c++/6/bits/stl_tree.h **** 	  {
2200:/usr/include/c++/6/bits/stl_tree.h **** 	    auto __res = _M_get_insert_hint_unique_pos(__pos, _S_key(__z));
2201:/usr/include/c++/6/bits/stl_tree.h **** 
2202:/usr/include/c++/6/bits/stl_tree.h **** 	    if (__res.second)
2203:/usr/include/c++/6/bits/stl_tree.h **** 	      return _M_insert_node(__res.first, __res.second, __z);
2204:/usr/include/c++/6/bits/stl_tree.h **** 
2205:/usr/include/c++/6/bits/stl_tree.h **** 	    _M_drop_node(__z);
2206:/usr/include/c++/6/bits/stl_tree.h **** 	    return iterator(__res.first);
2207:/usr/include/c++/6/bits/stl_tree.h **** 	  }
2208:/usr/include/c++/6/bits/stl_tree.h **** 	__catch(...)
2209:/usr/include/c++/6/bits/stl_tree.h **** 	  {
2210:/usr/include/c++/6/bits/stl_tree.h **** 	    _M_drop_node(__z);
2211:/usr/include/c++/6/bits/stl_tree.h **** 	    __throw_exception_again;
2212:/usr/include/c++/6/bits/stl_tree.h **** 	  }
2213:/usr/include/c++/6/bits/stl_tree.h ****       }
2214:/usr/include/c++/6/bits/stl_tree.h **** 
2215:/usr/include/c++/6/bits/stl_tree.h ****   template<typename _Key, typename _Val, typename _KeyOfValue,
2216:/usr/include/c++/6/bits/stl_tree.h ****            typename _Compare, typename _Alloc>
2217:/usr/include/c++/6/bits/stl_tree.h ****     template<typename... _Args>
2218:/usr/include/c++/6/bits/stl_tree.h ****       typename _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::iterator
2219:/usr/include/c++/6/bits/stl_tree.h ****       _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
2220:/usr/include/c++/6/bits/stl_tree.h ****       _M_emplace_hint_equal(const_iterator __pos, _Args&&... __args)
2221:/usr/include/c++/6/bits/stl_tree.h ****       {
2222:/usr/include/c++/6/bits/stl_tree.h **** 	_Link_type __z = _M_create_node(std::forward<_Args>(__args)...);
2223:/usr/include/c++/6/bits/stl_tree.h **** 
2224:/usr/include/c++/6/bits/stl_tree.h **** 	__try
2225:/usr/include/c++/6/bits/stl_tree.h **** 	  {
2226:/usr/include/c++/6/bits/stl_tree.h **** 	    auto __res = _M_get_insert_hint_equal_pos(__pos, _S_key(__z));
2227:/usr/include/c++/6/bits/stl_tree.h **** 
2228:/usr/include/c++/6/bits/stl_tree.h **** 	    if (__res.second)
2229:/usr/include/c++/6/bits/stl_tree.h **** 	      return _M_insert_node(__res.first, __res.second, __z);
2230:/usr/include/c++/6/bits/stl_tree.h **** 
2231:/usr/include/c++/6/bits/stl_tree.h **** 	    return _M_insert_equal_lower_node(__z);
2232:/usr/include/c++/6/bits/stl_tree.h **** 	  }
2233:/usr/include/c++/6/bits/stl_tree.h **** 	__catch(...)
2234:/usr/include/c++/6/bits/stl_tree.h **** 	  {
2235:/usr/include/c++/6/bits/stl_tree.h **** 	    _M_drop_node(__z);
2236:/usr/include/c++/6/bits/stl_tree.h **** 	    __throw_exception_again;
2237:/usr/include/c++/6/bits/stl_tree.h **** 	  }
2238:/usr/include/c++/6/bits/stl_tree.h ****       }
2239:/usr/include/c++/6/bits/stl_tree.h **** #endif
2240:/usr/include/c++/6/bits/stl_tree.h **** 
2241:/usr/include/c++/6/bits/stl_tree.h ****   template<typename _Key, typename _Val, typename _KoV,
2242:/usr/include/c++/6/bits/stl_tree.h ****            typename _Cmp, typename _Alloc>
2243:/usr/include/c++/6/bits/stl_tree.h ****     template<class _II>
2244:/usr/include/c++/6/bits/stl_tree.h ****       void
GAS LISTING /tmp/ccvUPO8Q.s 			page 403


2245:/usr/include/c++/6/bits/stl_tree.h ****       _Rb_tree<_Key, _Val, _KoV, _Cmp, _Alloc>::
2246:/usr/include/c++/6/bits/stl_tree.h ****       _M_insert_unique(_II __first, _II __last)
2247:/usr/include/c++/6/bits/stl_tree.h ****       {
2248:/usr/include/c++/6/bits/stl_tree.h **** 	_Alloc_node __an(*this);
2249:/usr/include/c++/6/bits/stl_tree.h **** 	for (; __first != __last; ++__first)
2250:/usr/include/c++/6/bits/stl_tree.h **** 	  _M_insert_unique_(end(), *__first, __an);
2251:/usr/include/c++/6/bits/stl_tree.h ****       }
2252:/usr/include/c++/6/bits/stl_tree.h **** 
2253:/usr/include/c++/6/bits/stl_tree.h ****   template<typename _Key, typename _Val, typename _KoV,
2254:/usr/include/c++/6/bits/stl_tree.h ****            typename _Cmp, typename _Alloc>
2255:/usr/include/c++/6/bits/stl_tree.h ****     template<class _II>
2256:/usr/include/c++/6/bits/stl_tree.h ****       void
2257:/usr/include/c++/6/bits/stl_tree.h ****       _Rb_tree<_Key, _Val, _KoV, _Cmp, _Alloc>::
2258:/usr/include/c++/6/bits/stl_tree.h ****       _M_insert_equal(_II __first, _II __last)
2259:/usr/include/c++/6/bits/stl_tree.h ****       {
2260:/usr/include/c++/6/bits/stl_tree.h **** 	_Alloc_node __an(*this);
2261:/usr/include/c++/6/bits/stl_tree.h **** 	for (; __first != __last; ++__first)
2262:/usr/include/c++/6/bits/stl_tree.h **** 	  _M_insert_equal_(end(), *__first, __an);
2263:/usr/include/c++/6/bits/stl_tree.h ****       }
2264:/usr/include/c++/6/bits/stl_tree.h **** 
2265:/usr/include/c++/6/bits/stl_tree.h ****   template<typename _Key, typename _Val, typename _KeyOfValue,
2266:/usr/include/c++/6/bits/stl_tree.h ****            typename _Compare, typename _Alloc>
2267:/usr/include/c++/6/bits/stl_tree.h ****     void
2268:/usr/include/c++/6/bits/stl_tree.h ****     _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
2269:/usr/include/c++/6/bits/stl_tree.h ****     _M_erase_aux(const_iterator __position)
2270:/usr/include/c++/6/bits/stl_tree.h ****     {
2271:/usr/include/c++/6/bits/stl_tree.h ****       _Link_type __y =
2272:/usr/include/c++/6/bits/stl_tree.h **** 	static_cast<_Link_type>(_Rb_tree_rebalance_for_erase
2273:/usr/include/c++/6/bits/stl_tree.h **** 				(const_cast<_Base_ptr>(__position._M_node),
2274:/usr/include/c++/6/bits/stl_tree.h **** 				 this->_M_impl._M_header));
2275:/usr/include/c++/6/bits/stl_tree.h ****       _M_drop_node(__y);
2276:/usr/include/c++/6/bits/stl_tree.h ****       --_M_impl._M_node_count;
2277:/usr/include/c++/6/bits/stl_tree.h ****     }
2278:/usr/include/c++/6/bits/stl_tree.h **** 
2279:/usr/include/c++/6/bits/stl_tree.h ****   template<typename _Key, typename _Val, typename _KeyOfValue,
2280:/usr/include/c++/6/bits/stl_tree.h ****            typename _Compare, typename _Alloc>
2281:/usr/include/c++/6/bits/stl_tree.h ****     void
2282:/usr/include/c++/6/bits/stl_tree.h ****     _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
2283:/usr/include/c++/6/bits/stl_tree.h ****     _M_erase_aux(const_iterator __first, const_iterator __last)
2284:/usr/include/c++/6/bits/stl_tree.h ****     {
2285:/usr/include/c++/6/bits/stl_tree.h ****       if (__first == begin() && __last == end())
2286:/usr/include/c++/6/bits/stl_tree.h **** 	clear();
2287:/usr/include/c++/6/bits/stl_tree.h ****       else
2288:/usr/include/c++/6/bits/stl_tree.h **** 	while (__first != __last)
2289:/usr/include/c++/6/bits/stl_tree.h **** 	  erase(__first++);
2290:/usr/include/c++/6/bits/stl_tree.h ****     }
2291:/usr/include/c++/6/bits/stl_tree.h **** 
2292:/usr/include/c++/6/bits/stl_tree.h ****   template<typename _Key, typename _Val, typename _KeyOfValue,
2293:/usr/include/c++/6/bits/stl_tree.h ****            typename _Compare, typename _Alloc>
2294:/usr/include/c++/6/bits/stl_tree.h ****     typename _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::size_type
2295:/usr/include/c++/6/bits/stl_tree.h ****     _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
2296:/usr/include/c++/6/bits/stl_tree.h ****     erase(const _Key& __x)
2297:/usr/include/c++/6/bits/stl_tree.h ****     {
2298:/usr/include/c++/6/bits/stl_tree.h ****       pair<iterator, iterator> __p = equal_range(__x);
2299:/usr/include/c++/6/bits/stl_tree.h ****       const size_type __old_size = size();
2300:/usr/include/c++/6/bits/stl_tree.h ****       erase(__p.first, __p.second);
2301:/usr/include/c++/6/bits/stl_tree.h ****       return __old_size - size();
GAS LISTING /tmp/ccvUPO8Q.s 			page 404


2302:/usr/include/c++/6/bits/stl_tree.h ****     }
2303:/usr/include/c++/6/bits/stl_tree.h **** 
2304:/usr/include/c++/6/bits/stl_tree.h ****   template<typename _Key, typename _Val, typename _KeyOfValue,
2305:/usr/include/c++/6/bits/stl_tree.h ****            typename _Compare, typename _Alloc>
2306:/usr/include/c++/6/bits/stl_tree.h ****     void
2307:/usr/include/c++/6/bits/stl_tree.h ****     _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
2308:/usr/include/c++/6/bits/stl_tree.h ****     erase(const _Key* __first, const _Key* __last)
2309:/usr/include/c++/6/bits/stl_tree.h ****     {
2310:/usr/include/c++/6/bits/stl_tree.h ****       while (__first != __last)
2311:/usr/include/c++/6/bits/stl_tree.h **** 	erase(*__first++);
2312:/usr/include/c++/6/bits/stl_tree.h ****     }
2313:/usr/include/c++/6/bits/stl_tree.h **** 
2314:/usr/include/c++/6/bits/stl_tree.h ****   template<typename _Key, typename _Val, typename _KeyOfValue,
2315:/usr/include/c++/6/bits/stl_tree.h ****            typename _Compare, typename _Alloc>
2316:/usr/include/c++/6/bits/stl_tree.h ****     typename _Rb_tree<_Key, _Val, _KeyOfValue,
2317:/usr/include/c++/6/bits/stl_tree.h **** 		      _Compare, _Alloc>::iterator
2318:/usr/include/c++/6/bits/stl_tree.h ****     _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 8187              		.loc 27 2318 0
 8188              		.cfi_startproc
 8189              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 8190              		.cfi_lsda 0x1b,.LLSDA12655
 8191 0000 55       		pushq	%rbp
 8192              		.cfi_def_cfa_offset 16
 8193              		.cfi_offset 6, -16
 8194 0001 4889E5   		movq	%rsp, %rbp
 8195              		.cfi_def_cfa_register 6
 8196 0004 53       		pushq	%rbx
 8197 0005 4883EC28 		subq	$40, %rsp
 8198              		.cfi_offset 3, -24
 8199 0009 48897DD8 		movq	%rdi, -40(%rbp)
 8200 000d 488975D0 		movq	%rsi, -48(%rbp)
2319:/usr/include/c++/6/bits/stl_tree.h ****     find(const _Key& __k)
2320:/usr/include/c++/6/bits/stl_tree.h ****     {
2321:/usr/include/c++/6/bits/stl_tree.h ****       iterator __j = _M_lower_bound(_M_begin(), _M_end(), __k);
 8201              		.loc 27 2321 0
 8202 0011 488B45D8 		movq	-40(%rbp), %rax
 8203 0015 4889C7   		movq	%rax, %rdi
 8204 0018 E8000000 		call	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt1
 8204      00
 8205 001d 4889C3   		movq	%rax, %rbx
 8206 0020 488B45D8 		movq	-40(%rbp), %rax
 8207 0024 4889C7   		movq	%rax, %rdi
 8208 0027 E8000000 		call	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt1
 8208      00
 8209 002c 4889C6   		movq	%rax, %rsi
 8210 002f 488B55D0 		movq	-48(%rbp), %rdx
 8211 0033 488B45D8 		movq	-40(%rbp), %rax
 8212 0037 4889D1   		movq	%rdx, %rcx
 8213 003a 4889DA   		movq	%rbx, %rdx
 8214 003d 4889C7   		movq	%rax, %rdi
 8215              	.LEHB60:
 8216 0040 E8000000 		call	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt1
 8216      00
 8217              	.LEHE60:
 8218 0045 488945E0 		movq	%rax, -32(%rbp)
2322:/usr/include/c++/6/bits/stl_tree.h ****       return (__j == end()
 8219              		.loc 27 2322 0
GAS LISTING /tmp/ccvUPO8Q.s 			page 405


 8220 0049 488B45D8 		movq	-40(%rbp), %rax
 8221 004d 4889C7   		movq	%rax, %rdi
 8222 0050 E8000000 		call	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt1
 8222      00
 8223 0055 488945E8 		movq	%rax, -24(%rbp)
2323:/usr/include/c++/6/bits/stl_tree.h **** 	      || _M_impl._M_key_compare(__k,
2324:/usr/include/c++/6/bits/stl_tree.h **** 					_S_key(__j._M_node))) ? end() : __j;
 8224              		.loc 27 2324 0
 8225 0059 BB010000 		movl	$1, %ebx
 8225      00
2322:/usr/include/c++/6/bits/stl_tree.h ****       return (__j == end()
 8226              		.loc 27 2322 0
 8227 005e 488D55E8 		leaq	-24(%rbp), %rdx
 8228 0062 488D45E0 		leaq	-32(%rbp), %rax
 8229 0066 4889D6   		movq	%rdx, %rsi
 8230 0069 4889C7   		movq	%rax, %rdi
 8231 006c E8000000 		call	_ZNKSt17_Rb_tree_iteratorISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS1_8functionIFvS5
 8231      00
 8232              		.loc 27 2324 0
 8233 0071 84C0     		testb	%al, %al
 8234 0073 7526     		jne	.L370
 8235              		.loc 27 2324 0 is_stmt 0 discriminator 2
 8236 0075 488B45E0 		movq	-32(%rbp), %rax
 8237 0079 4889C7   		movq	%rax, %rdi
 8238              	.LEHB61:
 8239 007c E8000000 		call	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt1
 8239      00
 8240 0081 4889C2   		movq	%rax, %rdx
2323:/usr/include/c++/6/bits/stl_tree.h **** 	      || _M_impl._M_key_compare(__k,
 8241              		.loc 27 2323 0 is_stmt 1 discriminator 2
 8242 0084 488B45D8 		movq	-40(%rbp), %rax
 8243 0088 488B4DD0 		movq	-48(%rbp), %rcx
 8244 008c 4889CE   		movq	%rcx, %rsi
 8245 008f 4889C7   		movq	%rax, %rdi
 8246 0092 E8000000 		call	_ZNK3pmt10comparatorclERKN5boost13intrusive_ptrINS_8pmt_baseEEES6_
 8246      00
 8247              	.LEHE61:
2323:/usr/include/c++/6/bits/stl_tree.h **** 	      || _M_impl._M_key_compare(__k,
 8248              		.loc 27 2323 0 is_stmt 0 discriminator 3
 8249 0097 84C0     		testb	%al, %al
 8250 0099 740E     		je	.L371
 8251              	.L370:
 8252              		.loc 27 2324 0 is_stmt 1 discriminator 1
 8253 009b 488B45D8 		movq	-40(%rbp), %rax
 8254 009f 4889C7   		movq	%rax, %rdi
 8255 00a2 E8000000 		call	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt1
 8255      00
 8256 00a7 EB04     		jmp	.L378
 8257              	.L371:
 8258              		.loc 27 2324 0 is_stmt 0
 8259 00a9 488B45E0 		movq	-32(%rbp), %rax
 8260              	.L378:
2322:/usr/include/c++/6/bits/stl_tree.h ****       return (__j == end()
 8261              		.loc 27 2322 0 is_stmt 1
 8262 00ad 84DB     		testb	%bl, %bl
 8263              		.loc 27 2324 0
 8264 00af EB0B     		jmp	.L379
GAS LISTING /tmp/ccvUPO8Q.s 			page 406


 8265              	.L377:
2322:/usr/include/c++/6/bits/stl_tree.h ****       return (__j == end()
 8266              		.loc 27 2322 0
 8267 00b1 84DB     		testb	%bl, %bl
 8268              		.loc 27 2324 0
 8269 00b3 90       		nop
 8270 00b4 4889C7   		movq	%rax, %rdi
 8271              	.LEHB62:
 8272 00b7 E8000000 		call	_Unwind_Resume@PLT
 8272      00
 8273              	.LEHE62:
 8274              	.L379:
2325:/usr/include/c++/6/bits/stl_tree.h ****     }
 8275              		.loc 27 2325 0
 8276 00bc 4883C428 		addq	$40, %rsp
 8277 00c0 5B       		popq	%rbx
 8278 00c1 5D       		popq	%rbp
 8279              		.cfi_def_cfa 7, 8
 8280 00c2 C3       		ret
 8281              		.cfi_endproc
 8282              	.LFE12655:
 8283              		.section	.gcc_except_table
 8284              	.LLSDA12655:
 8285 0134 FF       		.byte	0xff
 8286 0135 FF       		.byte	0xff
 8287 0136 01       		.byte	0x1
 8288 0137 0E       		.uleb128 .LLSDACSE12655-.LLSDACSB12655
 8289              	.LLSDACSB12655:
 8290 0138 40       		.uleb128 .LEHB60-.LFB12655
 8291 0139 05       		.uleb128 .LEHE60-.LEHB60
 8292 013a 00       		.uleb128 0
 8293 013b 00       		.uleb128 0
 8294 013c 7C       		.uleb128 .LEHB61-.LFB12655
 8295 013d 1B       		.uleb128 .LEHE61-.LEHB61
 8296 013e B101     		.uleb128 .L377-.LFB12655
 8297 0140 00       		.uleb128 0
 8298 0141 B701     		.uleb128 .LEHB62-.LFB12655
 8299 0143 05       		.uleb128 .LEHE62-.LEHB62
 8300 0144 00       		.uleb128 0
 8301 0145 00       		.uleb128 0
 8302              	.LLSDACSE12655:
 8303              		.section	.text._ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFv
 8305              		.section	.text._ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFv
 8306              		.align 2
 8307              		.weak	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt
 8309              	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt10_Sele
 8310              	.LFB12656:
 892:/usr/include/c++/6/bits/stl_tree.h ****       { return iterator(&this->_M_impl._M_header); }
 8311              		.loc 27 892 0
 8312              		.cfi_startproc
 8313 0000 55       		pushq	%rbp
 8314              		.cfi_def_cfa_offset 16
 8315              		.cfi_offset 6, -16
 8316 0001 4889E5   		movq	%rsp, %rbp
 8317              		.cfi_def_cfa_register 6
 8318 0004 4883EC20 		subq	$32, %rsp
 8319 0008 48897DE8 		movq	%rdi, -24(%rbp)
GAS LISTING /tmp/ccvUPO8Q.s 			page 407


 893:/usr/include/c++/6/bits/stl_tree.h **** 
 8320              		.loc 27 893 0
 8321 000c 488B45E8 		movq	-24(%rbp), %rax
 8322 0010 488D5008 		leaq	8(%rax), %rdx
 8323 0014 488D45F8 		leaq	-8(%rbp), %rax
 8324 0018 4889D6   		movq	%rdx, %rsi
 8325 001b 4889C7   		movq	%rax, %rdi
 8326 001e E8000000 		call	_ZNSt17_Rb_tree_iteratorISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS1_8functionIFvS5_
 8326      00
 8327 0023 488B45F8 		movq	-8(%rbp), %rax
 8328 0027 C9       		leave
 8329              		.cfi_def_cfa 7, 8
 8330 0028 C3       		ret
 8331              		.cfi_endproc
 8332              	.LFE12656:
 8334              		.section	.text._ZNSt3mapIN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS0_8functionIFvS4_EEENS2_10compa
 8335              		.align 2
 8336              		.weak	_ZNSt3mapIN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS0_8functionIFvS4_EEENS2_10comparatorESaI
 8338              	_ZNSt3mapIN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS0_8functionIFvS4_EEENS2_10comparatorESaISt4pair
 8339              	.LFB12657:
1081:/usr/include/c++/6/bits/stl_map.h **** 
1082:/usr/include/c++/6/bits/stl_map.h **** #if __cplusplus > 201103L
1083:/usr/include/c++/6/bits/stl_map.h ****       template<typename _Kt>
1084:/usr/include/c++/6/bits/stl_map.h **** 	auto
1085:/usr/include/c++/6/bits/stl_map.h **** 	find(const _Kt& __x) -> decltype(_M_t._M_find_tr(__x))
1086:/usr/include/c++/6/bits/stl_map.h **** 	{ return _M_t._M_find_tr(__x); }
1087:/usr/include/c++/6/bits/stl_map.h **** #endif
1088:/usr/include/c++/6/bits/stl_map.h ****       //@}
1089:/usr/include/c++/6/bits/stl_map.h **** 
1090:/usr/include/c++/6/bits/stl_map.h ****       //@{
1091:/usr/include/c++/6/bits/stl_map.h ****       /**
1092:/usr/include/c++/6/bits/stl_map.h ****        *  @brief Tries to locate an element in a %map.
1093:/usr/include/c++/6/bits/stl_map.h ****        *  @param  __x  Key of (key, value) %pair to be located.
1094:/usr/include/c++/6/bits/stl_map.h ****        *  @return  Read-only (constant) iterator pointing to sought-after
1095:/usr/include/c++/6/bits/stl_map.h ****        *           element, or end() if not found.
1096:/usr/include/c++/6/bits/stl_map.h ****        *
1097:/usr/include/c++/6/bits/stl_map.h ****        *  This function takes a key and tries to locate the element with which
1098:/usr/include/c++/6/bits/stl_map.h ****        *  the key matches.  If successful the function returns a constant
1099:/usr/include/c++/6/bits/stl_map.h ****        *  iterator pointing to the sought after %pair. If unsuccessful it
1100:/usr/include/c++/6/bits/stl_map.h ****        *  returns the past-the-end ( @c end() ) iterator.
1101:/usr/include/c++/6/bits/stl_map.h ****        */
1102:/usr/include/c++/6/bits/stl_map.h **** 
1103:/usr/include/c++/6/bits/stl_map.h ****       const_iterator
1104:/usr/include/c++/6/bits/stl_map.h ****       find(const key_type& __x) const
1105:/usr/include/c++/6/bits/stl_map.h ****       { return _M_t.find(__x); }
1106:/usr/include/c++/6/bits/stl_map.h **** 
1107:/usr/include/c++/6/bits/stl_map.h **** #if __cplusplus > 201103L
1108:/usr/include/c++/6/bits/stl_map.h ****       template<typename _Kt>
1109:/usr/include/c++/6/bits/stl_map.h **** 	auto
1110:/usr/include/c++/6/bits/stl_map.h **** 	find(const _Kt& __x) const -> decltype(_M_t._M_find_tr(__x))
1111:/usr/include/c++/6/bits/stl_map.h **** 	{ return _M_t._M_find_tr(__x); }
1112:/usr/include/c++/6/bits/stl_map.h **** #endif
1113:/usr/include/c++/6/bits/stl_map.h ****       //@}
1114:/usr/include/c++/6/bits/stl_map.h **** 
1115:/usr/include/c++/6/bits/stl_map.h ****       //@{
1116:/usr/include/c++/6/bits/stl_map.h ****       /**
1117:/usr/include/c++/6/bits/stl_map.h ****        *  @brief  Finds the number of elements with given key.
GAS LISTING /tmp/ccvUPO8Q.s 			page 408


1118:/usr/include/c++/6/bits/stl_map.h ****        *  @param  __x  Key of (key, value) pairs to be located.
1119:/usr/include/c++/6/bits/stl_map.h ****        *  @return  Number of elements with specified key.
1120:/usr/include/c++/6/bits/stl_map.h ****        *
1121:/usr/include/c++/6/bits/stl_map.h ****        *  This function only makes sense for multimaps; for map the result will
1122:/usr/include/c++/6/bits/stl_map.h ****        *  either be 0 (not present) or 1 (present).
1123:/usr/include/c++/6/bits/stl_map.h ****        */
1124:/usr/include/c++/6/bits/stl_map.h ****       size_type
1125:/usr/include/c++/6/bits/stl_map.h ****       count(const key_type& __x) const
1126:/usr/include/c++/6/bits/stl_map.h ****       { return _M_t.find(__x) == _M_t.end() ? 0 : 1; }
1127:/usr/include/c++/6/bits/stl_map.h **** 
1128:/usr/include/c++/6/bits/stl_map.h **** #if __cplusplus > 201103L
1129:/usr/include/c++/6/bits/stl_map.h ****       template<typename _Kt>
1130:/usr/include/c++/6/bits/stl_map.h **** 	auto
1131:/usr/include/c++/6/bits/stl_map.h **** 	count(const _Kt& __x) const -> decltype(_M_t._M_count_tr(__x))
1132:/usr/include/c++/6/bits/stl_map.h **** 	{ return _M_t._M_count_tr(__x); }
1133:/usr/include/c++/6/bits/stl_map.h **** #endif
1134:/usr/include/c++/6/bits/stl_map.h ****       //@}
1135:/usr/include/c++/6/bits/stl_map.h **** 
1136:/usr/include/c++/6/bits/stl_map.h ****       //@{
1137:/usr/include/c++/6/bits/stl_map.h ****       /**
1138:/usr/include/c++/6/bits/stl_map.h ****        *  @brief Finds the beginning of a subsequence matching given key.
1139:/usr/include/c++/6/bits/stl_map.h ****        *  @param  __x  Key of (key, value) pair to be located.
1140:/usr/include/c++/6/bits/stl_map.h ****        *  @return  Iterator pointing to first element equal to or greater
1141:/usr/include/c++/6/bits/stl_map.h ****        *           than key, or end().
1142:/usr/include/c++/6/bits/stl_map.h ****        *
1143:/usr/include/c++/6/bits/stl_map.h ****        *  This function returns the first element of a subsequence of elements
1144:/usr/include/c++/6/bits/stl_map.h ****        *  that matches the given key.  If unsuccessful it returns an iterator
1145:/usr/include/c++/6/bits/stl_map.h ****        *  pointing to the first element that has a greater value than given key
1146:/usr/include/c++/6/bits/stl_map.h ****        *  or end() if no such element exists.
1147:/usr/include/c++/6/bits/stl_map.h ****        */
1148:/usr/include/c++/6/bits/stl_map.h ****       iterator
1149:/usr/include/c++/6/bits/stl_map.h ****       lower_bound(const key_type& __x)
 8340              		.loc 26 1149 0
 8341              		.cfi_startproc
 8342 0000 55       		pushq	%rbp
 8343              		.cfi_def_cfa_offset 16
 8344              		.cfi_offset 6, -16
 8345 0001 4889E5   		movq	%rsp, %rbp
 8346              		.cfi_def_cfa_register 6
 8347 0004 4883EC10 		subq	$16, %rsp
 8348 0008 48897DF8 		movq	%rdi, -8(%rbp)
 8349 000c 488975F0 		movq	%rsi, -16(%rbp)
1150:/usr/include/c++/6/bits/stl_map.h ****       { return _M_t.lower_bound(__x); }
 8350              		.loc 26 1150 0
 8351 0010 488B45F8 		movq	-8(%rbp), %rax
 8352 0014 488B55F0 		movq	-16(%rbp), %rdx
 8353 0018 4889D6   		movq	%rdx, %rsi
 8354 001b 4889C7   		movq	%rax, %rdi
 8355 001e E8000000 		call	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt1
 8355      00
 8356 0023 C9       		leave
 8357              		.cfi_def_cfa 7, 8
 8358 0024 C3       		ret
 8359              		.cfi_endproc
 8360              	.LFE12657:
 8362              		.section	.text._ZNKSt17_Rb_tree_iteratorISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS1_8fun
 8363              		.align 2
GAS LISTING /tmp/ccvUPO8Q.s 			page 409


 8364              		.weak	_ZNKSt17_Rb_tree_iteratorISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS1_8functionIFvS
 8366              	_ZNKSt17_Rb_tree_iteratorISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS1_8functionIFvS5_EEEEE
 8367              	.LFB12658:
 237:/usr/include/c++/6/bits/stl_tree.h ****       { return _M_node == __x._M_node; }
 8368              		.loc 27 237 0
 8369              		.cfi_startproc
 8370 0000 55       		pushq	%rbp
 8371              		.cfi_def_cfa_offset 16
 8372              		.cfi_offset 6, -16
 8373 0001 4889E5   		movq	%rsp, %rbp
 8374              		.cfi_def_cfa_register 6
 8375 0004 48897DF8 		movq	%rdi, -8(%rbp)
 8376 0008 488975F0 		movq	%rsi, -16(%rbp)
 238:/usr/include/c++/6/bits/stl_tree.h **** 
 8377              		.loc 27 238 0
 8378 000c 488B45F8 		movq	-8(%rbp), %rax
 8379 0010 488B10   		movq	(%rax), %rdx
 8380 0013 488B45F0 		movq	-16(%rbp), %rax
 8381 0017 488B00   		movq	(%rax), %rax
 8382 001a 4839C2   		cmpq	%rax, %rdx
 8383 001d 0F94C0   		sete	%al
 8384 0020 5D       		popq	%rbp
 8385              		.cfi_def_cfa 7, 8
 8386 0021 C3       		ret
 8387              		.cfi_endproc
 8388              	.LFE12658:
 8390              		.section	.text._ZNKSt3mapIN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS0_8functionIFvS4_EEENS2_10comp
 8391              		.align 2
 8392              		.weak	_ZNKSt3mapIN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS0_8functionIFvS4_EEENS2_10comparatorESa
 8394              	_ZNKSt3mapIN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS0_8functionIFvS4_EEENS2_10comparatorESaISt4pai
 8395              	.LFB12659:
1052:/usr/include/c++/6/bits/stl_map.h ****       { return _M_t.key_comp(); }
 8396              		.loc 26 1052 0
 8397              		.cfi_startproc
 8398 0000 55       		pushq	%rbp
 8399              		.cfi_def_cfa_offset 16
 8400              		.cfi_offset 6, -16
 8401 0001 4889E5   		movq	%rsp, %rbp
 8402              		.cfi_def_cfa_register 6
 8403 0004 53       		pushq	%rbx
 8404 0005 4883EC18 		subq	$24, %rsp
 8405              		.cfi_offset 3, -24
 8406 0009 48897DE8 		movq	%rdi, -24(%rbp)
1053:/usr/include/c++/6/bits/stl_map.h **** 
 8407              		.loc 26 1053 0
 8408 000d 488B45E8 		movq	-24(%rbp), %rax
 8409 0011 4889C7   		movq	%rax, %rdi
 8410 0014 E8000000 		call	_ZNKSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt
 8410      00
 8411 0019 89D8     		movl	%ebx, %eax
 8412 001b 4883C418 		addq	$24, %rsp
 8413 001f 5B       		popq	%rbx
 8414 0020 5D       		popq	%rbp
 8415              		.cfi_def_cfa 7, 8
 8416 0021 C3       		ret
 8417              		.cfi_endproc
 8418              	.LFE12659:
GAS LISTING /tmp/ccvUPO8Q.s 			page 410


 8420              		.section	.text._ZNKSt17_Rb_tree_iteratorISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS1_8fun
 8421              		.align 2
 8422              		.weak	_ZNKSt17_Rb_tree_iteratorISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS1_8functionIFvS
 8424              	_ZNKSt17_Rb_tree_iteratorISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS1_8functionIFvS5_EEEEE
 8425              	.LFB12660:
 199:/usr/include/c++/6/bits/stl_tree.h ****       { return *static_cast<_Link_type>(_M_node)->_M_valptr(); }
 8426              		.loc 27 199 0
 8427              		.cfi_startproc
 8428 0000 55       		pushq	%rbp
 8429              		.cfi_def_cfa_offset 16
 8430              		.cfi_offset 6, -16
 8431 0001 4889E5   		movq	%rsp, %rbp
 8432              		.cfi_def_cfa_register 6
 8433 0004 4883EC10 		subq	$16, %rsp
 8434 0008 48897DF8 		movq	%rdi, -8(%rbp)
 200:/usr/include/c++/6/bits/stl_tree.h **** 
 8435              		.loc 27 200 0
 8436 000c 488B45F8 		movq	-8(%rbp), %rax
 8437 0010 488B00   		movq	(%rax), %rax
 8438 0013 4889C7   		movq	%rax, %rdi
 8439 0016 E8000000 		call	_ZNSt13_Rb_tree_nodeISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS1_8functionIFvS5_EEEE
 8439      00
 8440 001b C9       		leave
 8441              		.cfi_def_cfa 7, 8
 8442 001c C3       		ret
 8443              		.cfi_endproc
 8444              	.LFE12660:
 8446              		.section	.text._ZNSt23_Rb_tree_const_iteratorISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS1
 8447              		.align 2
 8448              		.weak	_ZNSt23_Rb_tree_const_iteratorISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS1_8functio
 8450              	_ZNSt23_Rb_tree_const_iteratorISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS1_8functionIFvS5_
 8451              	.LFB12662:
 270:/usr/include/c++/6/bits/stl_tree.h ****       : _M_node(__it._M_node) { }
 8452              		.loc 27 270 0
 8453              		.cfi_startproc
 8454 0000 55       		pushq	%rbp
 8455              		.cfi_def_cfa_offset 16
 8456              		.cfi_offset 6, -16
 8457 0001 4889E5   		movq	%rsp, %rbp
 8458              		.cfi_def_cfa_register 6
 8459 0004 48897DF8 		movq	%rdi, -8(%rbp)
 8460 0008 488975F0 		movq	%rsi, -16(%rbp)
 8461              	.LBB81:
 271:/usr/include/c++/6/bits/stl_tree.h **** 
 8462              		.loc 27 271 0
 8463 000c 488B45F0 		movq	-16(%rbp), %rax
 8464 0010 488B10   		movq	(%rax), %rdx
 8465 0013 488B45F8 		movq	-8(%rbp), %rax
 8466 0017 488910   		movq	%rdx, (%rax)
 8467              	.LBE81:
 8468 001a 90       		nop
 8469 001b 5D       		popq	%rbp
 8470              		.cfi_def_cfa 7, 8
 8471 001c C3       		ret
 8472              		.cfi_endproc
 8473              	.LFE12662:
 8475              		.weak	_ZNSt23_Rb_tree_const_iteratorISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS1_8functio
GAS LISTING /tmp/ccvUPO8Q.s 			page 411


 8476              		.set	_ZNSt23_Rb_tree_const_iteratorISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS1_8function
 8477              		.section	.text._ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE,"axG"
 8478              		.weak	_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE
 8480              	_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE:
 8481              	.LFB12665:
 8482              		.file 33 "/usr/include/c++/6/bits/move.h"
   1:/usr/include/c++/6/bits/move.h **** // Move, forward and identity for C++0x + swap -*- C++ -*-
   2:/usr/include/c++/6/bits/move.h **** 
   3:/usr/include/c++/6/bits/move.h **** // Copyright (C) 2007-2016 Free Software Foundation, Inc.
   4:/usr/include/c++/6/bits/move.h **** //
   5:/usr/include/c++/6/bits/move.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/6/bits/move.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/6/bits/move.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/6/bits/move.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/6/bits/move.h **** // any later version.
  10:/usr/include/c++/6/bits/move.h **** 
  11:/usr/include/c++/6/bits/move.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/6/bits/move.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/6/bits/move.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/6/bits/move.h **** // GNU General Public License for more details.
  15:/usr/include/c++/6/bits/move.h **** 
  16:/usr/include/c++/6/bits/move.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/6/bits/move.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/6/bits/move.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/6/bits/move.h **** 
  20:/usr/include/c++/6/bits/move.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/6/bits/move.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/6/bits/move.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/6/bits/move.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/6/bits/move.h **** 
  25:/usr/include/c++/6/bits/move.h **** /** @file bits/move.h
  26:/usr/include/c++/6/bits/move.h ****  *  This is an internal header file, included by other library headers.
  27:/usr/include/c++/6/bits/move.h ****  *  Do not attempt to use it directly. @headername{utility}
  28:/usr/include/c++/6/bits/move.h ****  */
  29:/usr/include/c++/6/bits/move.h **** 
  30:/usr/include/c++/6/bits/move.h **** #ifndef _MOVE_H
  31:/usr/include/c++/6/bits/move.h **** #define _MOVE_H 1
  32:/usr/include/c++/6/bits/move.h **** 
  33:/usr/include/c++/6/bits/move.h **** #include <bits/c++config.h>
  34:/usr/include/c++/6/bits/move.h **** #include <bits/concept_check.h>
  35:/usr/include/c++/6/bits/move.h **** 
  36:/usr/include/c++/6/bits/move.h **** namespace std _GLIBCXX_VISIBILITY(default)
  37:/usr/include/c++/6/bits/move.h **** {
  38:/usr/include/c++/6/bits/move.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  39:/usr/include/c++/6/bits/move.h **** 
  40:/usr/include/c++/6/bits/move.h ****   // Used, in C++03 mode too, by allocators, etc.
  41:/usr/include/c++/6/bits/move.h ****   /**
  42:/usr/include/c++/6/bits/move.h ****    *  @brief Same as C++11 std::addressof
  43:/usr/include/c++/6/bits/move.h ****    *  @ingroup utilities
  44:/usr/include/c++/6/bits/move.h ****    */
  45:/usr/include/c++/6/bits/move.h ****   template<typename _Tp>
  46:/usr/include/c++/6/bits/move.h ****     inline _Tp*
  47:/usr/include/c++/6/bits/move.h ****     __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
  48:/usr/include/c++/6/bits/move.h ****     {
  49:/usr/include/c++/6/bits/move.h ****       return reinterpret_cast<_Tp*>
  50:/usr/include/c++/6/bits/move.h **** 	(&const_cast<char&>(reinterpret_cast<const volatile char&>(__r)));
  51:/usr/include/c++/6/bits/move.h ****     }
GAS LISTING /tmp/ccvUPO8Q.s 			page 412


  52:/usr/include/c++/6/bits/move.h **** 
  53:/usr/include/c++/6/bits/move.h **** _GLIBCXX_END_NAMESPACE_VERSION
  54:/usr/include/c++/6/bits/move.h **** } // namespace
  55:/usr/include/c++/6/bits/move.h **** 
  56:/usr/include/c++/6/bits/move.h **** #if __cplusplus >= 201103L
  57:/usr/include/c++/6/bits/move.h **** #include <type_traits> // Brings in std::declval too.
  58:/usr/include/c++/6/bits/move.h **** 
  59:/usr/include/c++/6/bits/move.h **** namespace std _GLIBCXX_VISIBILITY(default)
  60:/usr/include/c++/6/bits/move.h **** {
  61:/usr/include/c++/6/bits/move.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  62:/usr/include/c++/6/bits/move.h **** 
  63:/usr/include/c++/6/bits/move.h ****   /**
  64:/usr/include/c++/6/bits/move.h ****    *  @addtogroup utilities
  65:/usr/include/c++/6/bits/move.h ****    *  @{
  66:/usr/include/c++/6/bits/move.h ****    */
  67:/usr/include/c++/6/bits/move.h **** 
  68:/usr/include/c++/6/bits/move.h ****   /**
  69:/usr/include/c++/6/bits/move.h ****    *  @brief  Forward an lvalue.
  70:/usr/include/c++/6/bits/move.h ****    *  @return The parameter cast to the specified type.
  71:/usr/include/c++/6/bits/move.h ****    *
  72:/usr/include/c++/6/bits/move.h ****    *  This function is used to implement "perfect forwarding".
  73:/usr/include/c++/6/bits/move.h ****    */
  74:/usr/include/c++/6/bits/move.h ****   template<typename _Tp>
  75:/usr/include/c++/6/bits/move.h ****     constexpr _Tp&&
  76:/usr/include/c++/6/bits/move.h ****     forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8483              		.loc 33 76 0
 8484              		.cfi_startproc
 8485 0000 55       		pushq	%rbp
 8486              		.cfi_def_cfa_offset 16
 8487              		.cfi_offset 6, -16
 8488 0001 4889E5   		movq	%rsp, %rbp
 8489              		.cfi_def_cfa_register 6
 8490 0004 48897DF8 		movq	%rdi, -8(%rbp)
  77:/usr/include/c++/6/bits/move.h ****     { return static_cast<_Tp&&>(__t); }
 8491              		.loc 33 77 0
 8492 0008 488B45F8 		movq	-8(%rbp), %rax
 8493 000c 5D       		popq	%rbp
 8494              		.cfi_def_cfa 7, 8
 8495 000d C3       		ret
 8496              		.cfi_endproc
 8497              	.LFE12665:
 8499              		.section	.text._ZSt7forwardISt5tupleIJRKN5boost13intrusive_ptrIN3pmt8pmt_baseEEEEEEOT_RNSt16remove
 8500              		.weak	_ZSt7forwardISt5tupleIJRKN5boost13intrusive_ptrIN3pmt8pmt_baseEEEEEEOT_RNSt16remove_referenc
 8502              	_ZSt7forwardISt5tupleIJRKN5boost13intrusive_ptrIN3pmt8pmt_baseEEEEEEOT_RNSt16remove_referenceIS9_E4
 8503              	.LFB12666:
  76:/usr/include/c++/6/bits/move.h ****     { return static_cast<_Tp&&>(__t); }
 8504              		.loc 33 76 0
 8505              		.cfi_startproc
 8506 0000 55       		pushq	%rbp
 8507              		.cfi_def_cfa_offset 16
 8508              		.cfi_offset 6, -16
 8509 0001 4889E5   		movq	%rsp, %rbp
 8510              		.cfi_def_cfa_register 6
 8511 0004 48897DF8 		movq	%rdi, -8(%rbp)
 8512              		.loc 33 77 0
 8513 0008 488B45F8 		movq	-8(%rbp), %rax
 8514 000c 5D       		popq	%rbp
GAS LISTING /tmp/ccvUPO8Q.s 			page 413


 8515              		.cfi_def_cfa 7, 8
 8516 000d C3       		ret
 8517              		.cfi_endproc
 8518              	.LFE12666:
 8520              		.section	.text._ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE,"axG",@progbits,_ZSt
 8521              		.weak	_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE
 8523              	_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE:
 8524              	.LFB12667:
  76:/usr/include/c++/6/bits/move.h ****     { return static_cast<_Tp&&>(__t); }
 8525              		.loc 33 76 0
 8526              		.cfi_startproc
 8527 0000 55       		pushq	%rbp
 8528              		.cfi_def_cfa_offset 16
 8529              		.cfi_offset 6, -16
 8530 0001 4889E5   		movq	%rsp, %rbp
 8531              		.cfi_def_cfa_register 6
 8532 0004 48897DF8 		movq	%rdi, -8(%rbp)
 8533              		.loc 33 77 0
 8534 0008 488B45F8 		movq	-8(%rbp), %rax
 8535 000c 5D       		popq	%rbp
 8536              		.cfi_def_cfa 7, 8
 8537 000d C3       		ret
 8538              		.cfi_endproc
 8539              	.LFE12667:
 8541              		.section	.text._ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFv
 8542              		.align 2
 8543              		.weak	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt
 8545              	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt10_Sele
 8546              	.LFB12664:
2193:/usr/include/c++/6/bits/stl_tree.h ****       _M_emplace_hint_unique(const_iterator __pos, _Args&&... __args)
 8547              		.loc 27 2193 0
 8548              		.cfi_startproc
 8549              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 8550              		.cfi_lsda 0x1b,.LLSDA12664
 8551 0000 55       		pushq	%rbp
 8552              		.cfi_def_cfa_offset 16
 8553              		.cfi_offset 6, -16
 8554 0001 4889E5   		movq	%rsp, %rbp
 8555              		.cfi_def_cfa_register 6
 8556 0004 4154     		pushq	%r12
 8557 0006 53       		pushq	%rbx
 8558 0007 4883EC50 		subq	$80, %rsp
 8559              		.cfi_offset 12, -24
 8560              		.cfi_offset 3, -32
 8561 000b 48897DC8 		movq	%rdi, -56(%rbp)
 8562 000f 488975C0 		movq	%rsi, -64(%rbp)
 8563 0013 488955B8 		movq	%rdx, -72(%rbp)
 8564 0017 48894DB0 		movq	%rcx, -80(%rbp)
 8565 001b 4C8945A8 		movq	%r8, -88(%rbp)
2196:/usr/include/c++/6/bits/stl_tree.h **** 
 8566              		.loc 27 2196 0
 8567 001f 488B45A8 		movq	-88(%rbp), %rax
 8568 0023 4889C7   		movq	%rax, %rdi
 8569 0026 E8000000 		call	_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE
 8569      00
 8570 002b 4989C4   		movq	%rax, %r12
 8571 002e 488B45B0 		movq	-80(%rbp), %rax
GAS LISTING /tmp/ccvUPO8Q.s 			page 414


 8572 0032 4889C7   		movq	%rax, %rdi
 8573 0035 E8000000 		call	_ZSt7forwardISt5tupleIJRKN5boost13intrusive_ptrIN3pmt8pmt_baseEEEEEEOT_RNSt16remove_reference
 8573      00
 8574 003a 4889C3   		movq	%rax, %rbx
 8575 003d 488B45B8 		movq	-72(%rbp), %rax
 8576 0041 4889C7   		movq	%rax, %rdi
 8577 0044 E8000000 		call	_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE
 8577      00
 8578 0049 4889C6   		movq	%rax, %rsi
 8579 004c 488B45C8 		movq	-56(%rbp), %rax
 8580 0050 4C89E1   		movq	%r12, %rcx
 8581 0053 4889DA   		movq	%rbx, %rdx
 8582 0056 4889C7   		movq	%rax, %rdi
 8583              	.LEHB63:
 8584 0059 E8000000 		call	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt1
 8584      00
 8585              	.LEHE63:
 8586 005e 488945E8 		movq	%rax, -24(%rbp)
 8587              	.LBB82:
2200:/usr/include/c++/6/bits/stl_tree.h **** 
 8588              		.loc 27 2200 0
 8589 0062 488B45E8 		movq	-24(%rbp), %rax
 8590 0066 4889C7   		movq	%rax, %rdi
 8591              	.LEHB64:
 8592 0069 E8000000 		call	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt1
 8592      00
 8593 006e 4889C2   		movq	%rax, %rdx
 8594 0071 488B4DC0 		movq	-64(%rbp), %rcx
 8595 0075 488B45C8 		movq	-56(%rbp), %rax
 8596 0079 4889CE   		movq	%rcx, %rsi
 8597 007c 4889C7   		movq	%rax, %rdi
 8598 007f E8000000 		call	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt1
 8598      00
2200:/usr/include/c++/6/bits/stl_tree.h **** 
 8599              		.loc 27 2200 0 is_stmt 0 discriminator 1
 8600 0084 488945D0 		movq	%rax, -48(%rbp)
 8601 0088 488955D8 		movq	%rdx, -40(%rbp)
2202:/usr/include/c++/6/bits/stl_tree.h **** 	      return _M_insert_node(__res.first, __res.second, __z);
 8602              		.loc 27 2202 0 is_stmt 1 discriminator 1
 8603 008c 488B45D8 		movq	-40(%rbp), %rax
 8604 0090 4885C0   		testq	%rax, %rax
 8605 0093 741A     		je	.L398
2203:/usr/include/c++/6/bits/stl_tree.h **** 
 8606              		.loc 27 2203 0
 8607 0095 488B55D8 		movq	-40(%rbp), %rdx
 8608 0099 488B75D0 		movq	-48(%rbp), %rsi
 8609 009d 488B4DE8 		movq	-24(%rbp), %rcx
 8610 00a1 488B45C8 		movq	-56(%rbp), %rax
 8611 00a5 4889C7   		movq	%rax, %rdi
 8612 00a8 E8000000 		call	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt1
 8612      00
 8613              	.LEHE64:
 8614 00ad EB5F     		jmp	.L405
 8615              	.L398:
2205:/usr/include/c++/6/bits/stl_tree.h **** 	    return iterator(__res.first);
 8616              		.loc 27 2205 0
 8617 00af 488B55E8 		movq	-24(%rbp), %rdx
GAS LISTING /tmp/ccvUPO8Q.s 			page 415


 8618 00b3 488B45C8 		movq	-56(%rbp), %rax
 8619 00b7 4889D6   		movq	%rdx, %rsi
 8620 00ba 4889C7   		movq	%rax, %rdi
 8621 00bd E8000000 		call	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt1
 8621      00
2206:/usr/include/c++/6/bits/stl_tree.h **** 	  }
 8622              		.loc 27 2206 0
 8623 00c2 488B55D0 		movq	-48(%rbp), %rdx
 8624 00c6 488D45E0 		leaq	-32(%rbp), %rax
 8625 00ca 4889D6   		movq	%rdx, %rsi
 8626 00cd 4889C7   		movq	%rax, %rdi
 8627 00d0 E8000000 		call	_ZNSt17_Rb_tree_iteratorISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS1_8functionIFvS5_
 8627      00
 8628 00d5 488B45E0 		movq	-32(%rbp), %rax
 8629 00d9 EB33     		jmp	.L405
 8630              	.L403:
 8631              	.LBE82:
2208:/usr/include/c++/6/bits/stl_tree.h **** 	  {
 8632              		.loc 27 2208 0
 8633 00db 4889C7   		movq	%rax, %rdi
 8634 00de E8000000 		call	__cxa_begin_catch@PLT
 8634      00
2210:/usr/include/c++/6/bits/stl_tree.h **** 	    __throw_exception_again;
 8635              		.loc 27 2210 0
 8636 00e3 488B55E8 		movq	-24(%rbp), %rdx
 8637 00e7 488B45C8 		movq	-56(%rbp), %rax
 8638 00eb 4889D6   		movq	%rdx, %rsi
 8639 00ee 4889C7   		movq	%rax, %rdi
 8640 00f1 E8000000 		call	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt1
 8640      00
 8641              	.LEHB65:
2211:/usr/include/c++/6/bits/stl_tree.h **** 	  }
 8642              		.loc 27 2211 0
 8643 00f6 E8000000 		call	__cxa_rethrow@PLT
 8643      00
 8644              	.LEHE65:
 8645              	.L404:
 8646 00fb 4889C3   		movq	%rax, %rbx
2208:/usr/include/c++/6/bits/stl_tree.h **** 	  {
 8647              		.loc 27 2208 0
 8648 00fe E8000000 		call	__cxa_end_catch@PLT
 8648      00
 8649 0103 4889D8   		movq	%rbx, %rax
 8650 0106 4889C7   		movq	%rax, %rdi
 8651              	.LEHB66:
 8652 0109 E8000000 		call	_Unwind_Resume@PLT
 8652      00
 8653              	.LEHE66:
 8654              	.L405:
2213:/usr/include/c++/6/bits/stl_tree.h **** 
 8655              		.loc 27 2213 0
 8656 010e 4883C450 		addq	$80, %rsp
 8657 0112 5B       		popq	%rbx
 8658 0113 415C     		popq	%r12
 8659 0115 5D       		popq	%rbp
 8660              		.cfi_def_cfa 7, 8
 8661 0116 C3       		ret
GAS LISTING /tmp/ccvUPO8Q.s 			page 416


 8662              		.cfi_endproc
 8663              	.LFE12664:
 8664              		.section	.gcc_except_table
 8665 0146 0000     		.align 4
 8666              	.LLSDA12664:
 8667 0148 FF       		.byte	0xff
 8668 0149 9B       		.byte	0x9b
 8669 014a 1D       		.uleb128 .LLSDATT12664-.LLSDATTD12664
 8670              	.LLSDATTD12664:
 8671 014b 01       		.byte	0x1
 8672 014c 14       		.uleb128 .LLSDACSE12664-.LLSDACSB12664
 8673              	.LLSDACSB12664:
 8674 014d 59       		.uleb128 .LEHB63-.LFB12664
 8675 014e 05       		.uleb128 .LEHE63-.LEHB63
 8676 014f 00       		.uleb128 0
 8677 0150 00       		.uleb128 0
 8678 0151 69       		.uleb128 .LEHB64-.LFB12664
 8679 0152 44       		.uleb128 .LEHE64-.LEHB64
 8680 0153 DB01     		.uleb128 .L403-.LFB12664
 8681 0155 01       		.uleb128 0x1
 8682 0156 F601     		.uleb128 .LEHB65-.LFB12664
 8683 0158 05       		.uleb128 .LEHE65-.LEHB65
 8684 0159 FB01     		.uleb128 .L404-.LFB12664
 8685 015b 00       		.uleb128 0
 8686 015c 8902     		.uleb128 .LEHB66-.LFB12664
 8687 015e 05       		.uleb128 .LEHE66-.LEHB66
 8688 015f 00       		.uleb128 0
 8689 0160 00       		.uleb128 0
 8690              	.LLSDACSE12664:
 8691 0161 01       		.byte	0x1
 8692 0162 00       		.byte	0
 8693 0163 00       		.align 4
 8694 0164 00000000 		.long	0
 8695              	
 8696              	.LLSDATT12664:
 8697              		.section	.text._ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFv
 8699              		.section	.text._ZN5boost17bad_function_callC2ERKS0_,"axG",@progbits,_ZN5boost17bad_function_callC5
 8700              		.align 2
 8701              		.weak	_ZN5boost17bad_function_callC2ERKS0_
 8703              	_ZN5boost17bad_function_callC2ERKS0_:
 8704              	.LFB12676:
 696:/usr/include/boost/function/function_base.hpp **** {
 8705              		.loc 13 696 0
 8706              		.cfi_startproc
 8707 0000 55       		pushq	%rbp
 8708              		.cfi_def_cfa_offset 16
 8709              		.cfi_offset 6, -16
 8710 0001 4889E5   		movq	%rsp, %rbp
 8711              		.cfi_def_cfa_register 6
 8712 0004 4883EC10 		subq	$16, %rsp
 8713 0008 48897DF8 		movq	%rdi, -8(%rbp)
 8714 000c 488975F0 		movq	%rsi, -16(%rbp)
 8715              	.LBB83:
 696:/usr/include/boost/function/function_base.hpp **** {
 8716              		.loc 13 696 0
 8717 0010 488B55F0 		movq	-16(%rbp), %rdx
 8718 0014 488B45F8 		movq	-8(%rbp), %rax
GAS LISTING /tmp/ccvUPO8Q.s 			page 417


 8719 0018 4889D6   		movq	%rdx, %rsi
 8720 001b 4889C7   		movq	%rax, %rdi
 8721 001e E8000000 		call	_ZNSt13runtime_errorC2ERKS_@PLT
 8721      00
 8722 0023 488D1500 		leaq	16+_ZTVN5boost17bad_function_callE(%rip), %rdx
 8722      000000
 8723 002a 488B45F8 		movq	-8(%rbp), %rax
 8724 002e 488910   		movq	%rdx, (%rax)
 8725              	.LBE83:
 8726 0031 90       		nop
 8727 0032 C9       		leave
 8728              		.cfi_def_cfa 7, 8
 8729 0033 C3       		ret
 8730              		.cfi_endproc
 8731              	.LFE12676:
 8733              		.weak	_ZN5boost17bad_function_callC1ERKS0_
 8734              		.set	_ZN5boost17bad_function_callC1ERKS0_,_ZN5boost17bad_function_callC2ERKS0_
 8735              		.section	.text._ZN5boost16exception_detail19error_info_injectorINS_17bad_function_callEEC2ERKS3_,"
 8736              		.align 2
 8737              		.weak	_ZN5boost16exception_detail19error_info_injectorINS_17bad_function_callEEC2ERKS3_
 8739              	_ZN5boost16exception_detail19error_info_injectorINS_17bad_function_callEEC2ERKS3_:
 8740              	.LFB12678:
 343:/usr/include/boost/exception/exception.hpp ****             public T,
 8741              		.loc 3 343 0
 8742              		.cfi_startproc
 8743              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 8744              		.cfi_lsda 0x1b,.LLSDA12678
 8745 0000 55       		pushq	%rbp
 8746              		.cfi_def_cfa_offset 16
 8747              		.cfi_offset 6, -16
 8748 0001 4889E5   		movq	%rsp, %rbp
 8749              		.cfi_def_cfa_register 6
 8750 0004 53       		pushq	%rbx
 8751 0005 4883EC18 		subq	$24, %rsp
 8752              		.cfi_offset 3, -24
 8753 0009 48897DE8 		movq	%rdi, -24(%rbp)
 8754 000d 488975E0 		movq	%rsi, -32(%rbp)
 8755              	.LBB84:
 343:/usr/include/boost/exception/exception.hpp ****             public T,
 8756              		.loc 3 343 0
 8757 0011 488B55E0 		movq	-32(%rbp), %rdx
 8758 0015 488B45E8 		movq	-24(%rbp), %rax
 8759 0019 4889D6   		movq	%rdx, %rsi
 8760 001c 4889C7   		movq	%rax, %rdi
 8761 001f E8000000 		call	_ZN5boost17bad_function_callC2ERKS0_
 8761      00
 8762 0024 488B45E0 		movq	-32(%rbp), %rax
 8763 0028 488D5010 		leaq	16(%rax), %rdx
 8764 002c 488B45E8 		movq	-24(%rbp), %rax
 8765 0030 4883C010 		addq	$16, %rax
 8766 0034 4889D6   		movq	%rdx, %rsi
 8767 0037 4889C7   		movq	%rax, %rdi
 8768              	.LEHB67:
 8769 003a E8000000 		call	_ZN5boost9exceptionC2ERKS0_
 8769      00
 8770              	.LEHE67:
 343:/usr/include/boost/exception/exception.hpp ****             public T,
GAS LISTING /tmp/ccvUPO8Q.s 			page 418


 8771              		.loc 3 343 0 is_stmt 0 discriminator 2
 8772 003f 488D1500 		leaq	16+_ZTVN5boost16exception_detail19error_info_injectorINS_17bad_function_callEEE(%rip), %rdx
 8772      000000
 8773 0046 488B45E8 		movq	-24(%rbp), %rax
 8774 004a 488910   		movq	%rdx, (%rax)
 8775 004d 488D1500 		leaq	56+_ZTVN5boost16exception_detail19error_info_injectorINS_17bad_function_callEEE(%rip), %rdx
 8775      000000
 8776 0054 488B45E8 		movq	-24(%rbp), %rax
 8777 0058 48895010 		movq	%rdx, 16(%rax)
 8778              	.LBE84:
 8779 005c EB1A     		jmp	.L410
 8780              	.L409:
 8781 005e 4889C3   		movq	%rax, %rbx
 8782              	.LBB85:
 343:/usr/include/boost/exception/exception.hpp ****             public T,
 8783              		.loc 3 343 0
 8784 0061 488B45E8 		movq	-24(%rbp), %rax
 8785 0065 4889C7   		movq	%rax, %rdi
 8786 0068 E8000000 		call	_ZN5boost17bad_function_callD2Ev
 8786      00
 8787 006d 4889D8   		movq	%rbx, %rax
 8788 0070 4889C7   		movq	%rax, %rdi
 8789              	.LEHB68:
 8790 0073 E8000000 		call	_Unwind_Resume@PLT
 8790      00
 8791              	.LEHE68:
 8792              	.L410:
 8793              	.LBE85:
 8794 0078 4883C418 		addq	$24, %rsp
 8795 007c 5B       		popq	%rbx
 8796 007d 5D       		popq	%rbp
 8797              		.cfi_def_cfa 7, 8
 8798 007e C3       		ret
 8799              		.cfi_endproc
 8800              	.LFE12678:
 8801              		.section	.gcc_except_table
 8802              	.LLSDA12678:
 8803 0168 FF       		.byte	0xff
 8804 0169 FF       		.byte	0xff
 8805 016a 01       		.byte	0x1
 8806 016b 08       		.uleb128 .LLSDACSE12678-.LLSDACSB12678
 8807              	.LLSDACSB12678:
 8808 016c 3A       		.uleb128 .LEHB67-.LFB12678
 8809 016d 05       		.uleb128 .LEHE67-.LEHB67
 8810 016e 5E       		.uleb128 .L409-.LFB12678
 8811 016f 00       		.uleb128 0
 8812 0170 73       		.uleb128 .LEHB68-.LFB12678
 8813 0171 05       		.uleb128 .LEHE68-.LEHB68
 8814 0172 00       		.uleb128 0
 8815 0173 00       		.uleb128 0
 8816              	.LLSDACSE12678:
 8817              		.section	.text._ZN5boost16exception_detail19error_info_injectorINS_17bad_function_callEEC2ERKS3_,"
 8819              		.weak	_ZN5boost16exception_detail19error_info_injectorINS_17bad_function_callEEC1ERKS3_
 8820              		.set	_ZN5boost16exception_detail19error_info_injectorINS_17bad_function_callEEC1ERKS3_,_ZN5boost16
 8821              		.section	.text._ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function
 8822              		.align 2
 8823              		.weak	_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEE
GAS LISTING /tmp/ccvUPO8Q.s 			page 419


 8825              	_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEEC1ERKS5
 8826              	.LFB12681:
 8827              		.loc 3 459 0 is_stmt 1
 8828              		.cfi_startproc
 8829              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 8830              		.cfi_lsda 0x1b,.LLSDA12681
 8831 0000 55       		pushq	%rbp
 8832              		.cfi_def_cfa_offset 16
 8833              		.cfi_offset 6, -16
 8834 0001 4889E5   		movq	%rsp, %rbp
 8835              		.cfi_def_cfa_register 6
 8836 0004 53       		pushq	%rbx
 8837 0005 4883EC18 		subq	$24, %rsp
 8838              		.cfi_offset 3, -24
 8839 0009 48897DE8 		movq	%rdi, -24(%rbp)
 8840 000d 488975E0 		movq	%rsi, -32(%rbp)
 8841              	.LBB86:
 8842              		.loc 3 459 0
 8843 0011 488B45E0 		movq	-32(%rbp), %rax
 8844 0015 488B00   		movq	(%rax), %rax
 8845 0018 4883E818 		subq	$24, %rax
 8846 001c 488B00   		movq	(%rax), %rax
 8847 001f 4889C2   		movq	%rax, %rdx
 8848 0022 488B45E0 		movq	-32(%rbp), %rax
 8849 0026 4801C2   		addq	%rax, %rdx
 8850 0029 488B45E8 		movq	-24(%rbp), %rax
 8851 002d 4883C038 		addq	$56, %rax
 8852 0031 4889D6   		movq	%rdx, %rsi
 8853 0034 4889C7   		movq	%rax, %rdi
 8854 0037 E8000000 		call	_ZN5boost16exception_detail10clone_baseC2ERKS1_
 8854      00
 8855 003c 488B55E0 		movq	-32(%rbp), %rdx
 8856 0040 488B45E8 		movq	-24(%rbp), %rax
 8857 0044 4889D6   		movq	%rdx, %rsi
 8858 0047 4889C7   		movq	%rax, %rdi
 8859              	.LEHB69:
 8860 004a E8000000 		call	_ZN5boost16exception_detail19error_info_injectorINS_17bad_function_callEEC2ERKS3_
 8860      00
 8861              	.LEHE69:
 8862              		.loc 3 459 0 is_stmt 0 discriminator 8
 8863 004f 488D1500 		leaq	24+_ZTVN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_call
 8863      000000
 8864 0056 488B45E8 		movq	-24(%rbp), %rax
 8865 005a 488910   		movq	%rdx, (%rax)
 8866 005d 488D1500 		leaq	80+_ZTVN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_call
 8866      000000
 8867 0064 488B45E8 		movq	-24(%rbp), %rax
 8868 0068 48895010 		movq	%rdx, 16(%rax)
 8869 006c 488B45E8 		movq	-24(%rbp), %rax
 8870 0070 488D5038 		leaq	56(%rax), %rdx
 8871 0074 488D0500 		leaq	136+_ZTVN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_cal
 8871      000000
 8872 007b 488902   		movq	%rax, (%rdx)
 8873              	.LBE86:
 8874 007e EB1E     		jmp	.L414
 8875              	.L413:
 8876 0080 4889C3   		movq	%rax, %rbx
GAS LISTING /tmp/ccvUPO8Q.s 			page 420


 8877              	.LBB87:
 8878              		.loc 3 459 0
 8879 0083 488B45E8 		movq	-24(%rbp), %rax
 8880 0087 4883C038 		addq	$56, %rax
 8881 008b 4889C7   		movq	%rax, %rdi
 8882 008e E8000000 		call	_ZN5boost16exception_detail10clone_baseD2Ev
 8882      00
 8883 0093 4889D8   		movq	%rbx, %rax
 8884 0096 4889C7   		movq	%rax, %rdi
 8885              	.LEHB70:
 8886 0099 E8000000 		call	_Unwind_Resume@PLT
 8886      00
 8887              	.LEHE70:
 8888              	.L414:
 8889              	.LBE87:
 8890 009e 4883C418 		addq	$24, %rsp
 8891 00a2 5B       		popq	%rbx
 8892 00a3 5D       		popq	%rbp
 8893              		.cfi_def_cfa 7, 8
 8894 00a4 C3       		ret
 8895              		.cfi_endproc
 8896              	.LFE12681:
 8897              		.section	.gcc_except_table
 8898              	.LLSDA12681:
 8899 0174 FF       		.byte	0xff
 8900 0175 FF       		.byte	0xff
 8901 0176 01       		.byte	0x1
 8902 0177 0A       		.uleb128 .LLSDACSE12681-.LLSDACSB12681
 8903              	.LLSDACSB12681:
 8904 0178 4A       		.uleb128 .LEHB69-.LFB12681
 8905 0179 05       		.uleb128 .LEHE69-.LEHB69
 8906 017a 8001     		.uleb128 .L413-.LFB12681
 8907 017c 00       		.uleb128 0
 8908 017d 9901     		.uleb128 .LEHB70-.LFB12681
 8909 017f 05       		.uleb128 .LEHE70-.LEHB70
 8910 0180 00       		.uleb128 0
 8911 0181 00       		.uleb128 0
 8912              	.LLSDACSE12681:
 8913              		.section	.text._ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function
 8915              		.section	.text._ZN5boost15throw_exceptionINS_17bad_function_callEEEvRKT_,"axG",@progbits,_ZN5boost
 8916              		.weak	_ZN5boost15throw_exceptionINS_17bad_function_callEEEvRKT_
 8918              	_ZN5boost15throw_exceptionINS_17bad_function_callEEEvRKT_:
 8919              	.LFB12672:
  61:/usr/include/boost/throw_exception.hpp **** 
  62:/usr/include/boost/throw_exception.hpp **** template<class E> BOOST_NORETURN inline void throw_exception( E const & e )
 8920              		.loc 4 62 0 is_stmt 1
 8921              		.cfi_startproc
 8922              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 8923              		.cfi_lsda 0x1b,.LLSDA12672
 8924 0000 55       		pushq	%rbp
 8925              		.cfi_def_cfa_offset 16
 8926              		.cfi_offset 6, -16
 8927 0001 4889E5   		movq	%rsp, %rbp
 8928              		.cfi_def_cfa_register 6
 8929 0004 4154     		pushq	%r12
 8930 0006 53       		pushq	%rbx
 8931 0007 4883EC50 		subq	$80, %rsp
GAS LISTING /tmp/ccvUPO8Q.s 			page 421


 8932              		.cfi_offset 12, -24
 8933              		.cfi_offset 3, -32
 8934 000b 48897DA8 		movq	%rdi, -88(%rbp)
  63:/usr/include/boost/throw_exception.hpp **** {
  64:/usr/include/boost/throw_exception.hpp ****     //All boost exceptions are required to derive from std::exception,
  65:/usr/include/boost/throw_exception.hpp ****     //to ensure compatibility with BOOST_NO_EXCEPTIONS.
  66:/usr/include/boost/throw_exception.hpp ****     throw_exception_assert_compatibility(e);
 8935              		.loc 4 66 0
 8936 000f 488B45A8 		movq	-88(%rbp), %rax
 8937 0013 4889C7   		movq	%rax, %rdi
 8938 0016 E8000000 		call	_ZN5boost36throw_exception_assert_compatibilityERKSt9exception
 8938      00
  67:/usr/include/boost/throw_exception.hpp **** 
  68:/usr/include/boost/throw_exception.hpp **** #ifndef BOOST_EXCEPTION_DISABLE
  69:/usr/include/boost/throw_exception.hpp ****     throw enable_current_exception(enable_error_info(e));
 8939              		.loc 4 69 0
 8940 001b BF400000 		movl	$64, %edi
 8940      00
 8941 0020 E8000000 		call	__cxa_allocate_exception@PLT
 8941      00
 8942 0025 4889C3   		movq	%rax, %rbx
 8943 0028 488D45B0 		leaq	-80(%rbp), %rax
 8944 002c 488B55A8 		movq	-88(%rbp), %rdx
 8945 0030 4889D6   		movq	%rdx, %rsi
 8946 0033 4889C7   		movq	%rax, %rdi
 8947              	.LEHB71:
 8948 0036 E8000000 		call	_ZN5boost17enable_error_infoINS_17bad_function_callEEENS_16exception_detail29enable_error_inf
 8948      00
 8949              	.LEHE71:
 8950              		.loc 4 69 0 is_stmt 0 discriminator 2
 8951 003b 488D45B0 		leaq	-80(%rbp), %rax
 8952 003f 4889C6   		movq	%rax, %rsi
 8953 0042 4889DF   		movq	%rbx, %rdi
 8954              	.LEHB72:
 8955 0045 E8000000 		call	_ZN5boost24enable_current_exceptionINS_16exception_detail19error_info_injectorINS_17bad_funct
 8955      00
 8956              	.LEHE72:
 8957              		.loc 4 69 0 discriminator 4
 8958 004a 488D45B0 		leaq	-80(%rbp), %rax
 8959 004e 4889C7   		movq	%rax, %rdi
 8960 0051 E8000000 		call	_ZN5boost16exception_detail19error_info_injectorINS_17bad_function_callEED1Ev
 8960      00
 8961 0056 488D1500 		leaq	_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEED
 8961      000000
 8962 005d 488D3500 		leaq	_ZTIN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEE
 8962      000000
 8963 0064 4889DF   		movq	%rbx, %rdi
 8964              	.LEHB73:
 8965 0067 E8000000 		call	__cxa_throw@PLT
 8965      00
 8966              	.L419:
 8967 006c 4989C4   		movq	%rax, %r12
 8968              		.loc 4 69 0
 8969 006f 488D45B0 		leaq	-80(%rbp), %rax
 8970 0073 4889C7   		movq	%rax, %rdi
 8971 0076 E8000000 		call	_ZN5boost16exception_detail19error_info_injectorINS_17bad_function_callEED1Ev
 8971      00
GAS LISTING /tmp/ccvUPO8Q.s 			page 422


 8972 007b EB03     		jmp	.L417
 8973              	.L418:
 8974 007d 4989C4   		movq	%rax, %r12
 8975              	.L417:
 8976              		.loc 4 69 0 discriminator 1
 8977 0080 4889DF   		movq	%rbx, %rdi
 8978 0083 E8000000 		call	__cxa_free_exception@PLT
 8978      00
 8979 0088 4C89E0   		movq	%r12, %rax
 8980 008b 4889C7   		movq	%rax, %rdi
 8981 008e E8000000 		call	_Unwind_Resume@PLT
 8981      00
 8982              	.LEHE73:
 8983              		.cfi_endproc
 8984              	.LFE12672:
 8985              		.section	.gcc_except_table
 8986              	.LLSDA12672:
 8987 0182 FF       		.byte	0xff
 8988 0183 FF       		.byte	0xff
 8989 0184 01       		.byte	0x1
 8990 0185 0C       		.uleb128 .LLSDACSE12672-.LLSDACSB12672
 8991              	.LLSDACSB12672:
 8992 0186 36       		.uleb128 .LEHB71-.LFB12672
 8993 0187 05       		.uleb128 .LEHE71-.LEHB71
 8994 0188 7D       		.uleb128 .L418-.LFB12672
 8995 0189 00       		.uleb128 0
 8996 018a 45       		.uleb128 .LEHB72-.LFB12672
 8997 018b 05       		.uleb128 .LEHE72-.LEHB72
 8998 018c 6C       		.uleb128 .L419-.LFB12672
 8999 018d 00       		.uleb128 0
 9000 018e 67       		.uleb128 .LEHB73-.LFB12672
 9001 018f 2C       		.uleb128 .LEHE73-.LEHB73
 9002 0190 00       		.uleb128 0
 9003 0191 00       		.uleb128 0
 9004              	.LLSDACSE12672:
 9005              		.section	.text._ZN5boost15throw_exceptionINS_17bad_function_callEEEvRKT_,"axG",@progbits,_ZN5boost
 9007              		.section	.text._ZNK5boost9function1IvNS_13intrusive_ptrIN3pmt8pmt_baseEEEE10get_vtableEv,"axG",@pr
 9008              		.align 2
 9009              		.weak	_ZNK5boost9function1IvNS_13intrusive_ptrIN3pmt8pmt_baseEEEE10get_vtableEv
 9011              	_ZNK5boost9function1IvNS_13intrusive_ptrIN3pmt8pmt_baseEEEE10get_vtableEv:
 9012              	.LFB12682:
 684:/usr/include/boost/function/function_template.hpp ****       return reinterpret_cast<vtable_type*>(
 9013              		.loc 29 684 0 is_stmt 1
 9014              		.cfi_startproc
 9015 0000 55       		pushq	%rbp
 9016              		.cfi_def_cfa_offset 16
 9017              		.cfi_offset 6, -16
 9018 0001 4889E5   		movq	%rsp, %rbp
 9019              		.cfi_def_cfa_register 6
 9020 0004 48897DF8 		movq	%rdi, -8(%rbp)
 686:/usr/include/boost/function/function_template.hpp ****     }
 9021              		.loc 29 686 0
 9022 0008 488B45F8 		movq	-8(%rbp), %rax
 9023 000c 488B00   		movq	(%rax), %rax
 9024 000f 4883E0FE 		andq	$-2, %rax
 687:/usr/include/boost/function/function_template.hpp **** 
 9025              		.loc 29 687 0
GAS LISTING /tmp/ccvUPO8Q.s 			page 423


 9026 0013 5D       		popq	%rbp
 9027              		.cfi_def_cfa 7, 8
 9028 0014 C3       		ret
 9029              		.cfi_endproc
 9030              	.LFE12682:
 9032              		.section	.text._ZN5boost7forwardINS_13intrusive_ptrIN3pmt8pmt_baseEEEEEOT_RNS_11move_detail16remov
 9033              		.weak	_ZN5boost7forwardINS_13intrusive_ptrIN3pmt8pmt_baseEEEEEOT_RNS_11move_detail16remove_referen
 9035              	_ZN5boost7forwardINS_13intrusive_ptrIN3pmt8pmt_baseEEEEEOT_RNS_11move_detail16remove_referenceIS5_E
 9036              	.LFB12683:
 9037              		.file 34 "/usr/include/boost/move/utility_core.hpp"
   1:/usr/include/boost/move/utility_core.hpp **** //////////////////////////////////////////////////////////////////////////////
   2:/usr/include/boost/move/utility_core.hpp **** //
   3:/usr/include/boost/move/utility_core.hpp **** // (C) Copyright Ion Gaztanaga 2012-2012.
   4:/usr/include/boost/move/utility_core.hpp **** // Distributed under the Boost Software License, Version 1.0.
   5:/usr/include/boost/move/utility_core.hpp **** // (See accompanying file LICENSE_1_0.txt or copy at
   6:/usr/include/boost/move/utility_core.hpp **** // http://www.boost.org/LICENSE_1_0.txt)
   7:/usr/include/boost/move/utility_core.hpp **** //
   8:/usr/include/boost/move/utility_core.hpp **** // See http://www.boost.org/libs/move for documentation.
   9:/usr/include/boost/move/utility_core.hpp **** //
  10:/usr/include/boost/move/utility_core.hpp **** //////////////////////////////////////////////////////////////////////////////
  11:/usr/include/boost/move/utility_core.hpp **** 
  12:/usr/include/boost/move/utility_core.hpp **** //! \file
  13:/usr/include/boost/move/utility_core.hpp **** //! This header defines core utilities to ease the development
  14:/usr/include/boost/move/utility_core.hpp **** //! of move-aware functions. This header minimizes dependencies
  15:/usr/include/boost/move/utility_core.hpp **** //! from other libraries.
  16:/usr/include/boost/move/utility_core.hpp **** 
  17:/usr/include/boost/move/utility_core.hpp **** #ifndef BOOST_MOVE_MOVE_UTILITY_CORE_HPP
  18:/usr/include/boost/move/utility_core.hpp **** #define BOOST_MOVE_MOVE_UTILITY_CORE_HPP
  19:/usr/include/boost/move/utility_core.hpp **** 
  20:/usr/include/boost/move/utility_core.hpp **** #ifndef BOOST_CONFIG_HPP
  21:/usr/include/boost/move/utility_core.hpp **** #  include <boost/config.hpp>
  22:/usr/include/boost/move/utility_core.hpp **** #endif
  23:/usr/include/boost/move/utility_core.hpp **** #
  24:/usr/include/boost/move/utility_core.hpp **** #if defined(BOOST_HAS_PRAGMA_ONCE)
  25:/usr/include/boost/move/utility_core.hpp **** #  pragma once
  26:/usr/include/boost/move/utility_core.hpp **** #endif
  27:/usr/include/boost/move/utility_core.hpp **** 
  28:/usr/include/boost/move/utility_core.hpp **** #include <boost/move/detail/config_begin.hpp>
  29:/usr/include/boost/move/utility_core.hpp **** #include <boost/move/detail/workaround.hpp>  //forceinline
  30:/usr/include/boost/move/utility_core.hpp **** #include <boost/move/core.hpp>
  31:/usr/include/boost/move/utility_core.hpp **** #include <boost/move/detail/meta_utils.hpp>
  32:/usr/include/boost/move/utility_core.hpp **** #include <boost/static_assert.hpp>
  33:/usr/include/boost/move/utility_core.hpp **** 
  34:/usr/include/boost/move/utility_core.hpp **** #if defined(BOOST_NO_CXX11_RVALUE_REFERENCES) && !defined(BOOST_MOVE_DOXYGEN_INVOKED)
  35:/usr/include/boost/move/utility_core.hpp **** 
  36:/usr/include/boost/move/utility_core.hpp ****    namespace boost {
  37:/usr/include/boost/move/utility_core.hpp **** 
  38:/usr/include/boost/move/utility_core.hpp ****    template<class T>
  39:/usr/include/boost/move/utility_core.hpp ****    struct enable_move_utility_emulation
  40:/usr/include/boost/move/utility_core.hpp ****    {
  41:/usr/include/boost/move/utility_core.hpp ****       static const bool value = true;
  42:/usr/include/boost/move/utility_core.hpp ****    };
  43:/usr/include/boost/move/utility_core.hpp ****     
  44:/usr/include/boost/move/utility_core.hpp ****    //////////////////////////////////////////////////////////////////////////////
  45:/usr/include/boost/move/utility_core.hpp ****    //
  46:/usr/include/boost/move/utility_core.hpp ****    //                            move()
  47:/usr/include/boost/move/utility_core.hpp ****    //
GAS LISTING /tmp/ccvUPO8Q.s 			page 424


  48:/usr/include/boost/move/utility_core.hpp ****    //////////////////////////////////////////////////////////////////////////////
  49:/usr/include/boost/move/utility_core.hpp **** 
  50:/usr/include/boost/move/utility_core.hpp ****    template <class T>
  51:/usr/include/boost/move/utility_core.hpp ****    BOOST_MOVE_FORCEINLINE typename ::boost::move_detail::enable_if_and
  52:/usr/include/boost/move/utility_core.hpp ****       < T &
  53:/usr/include/boost/move/utility_core.hpp ****       , enable_move_utility_emulation<T>
  54:/usr/include/boost/move/utility_core.hpp ****       , has_move_emulation_disabled<T>
  55:/usr/include/boost/move/utility_core.hpp ****       >::type
  56:/usr/include/boost/move/utility_core.hpp ****          move(T& x) BOOST_NOEXCEPT
  57:/usr/include/boost/move/utility_core.hpp ****    {
  58:/usr/include/boost/move/utility_core.hpp ****       return x;
  59:/usr/include/boost/move/utility_core.hpp ****    }
  60:/usr/include/boost/move/utility_core.hpp **** 
  61:/usr/include/boost/move/utility_core.hpp ****    template <class T>
  62:/usr/include/boost/move/utility_core.hpp ****    BOOST_MOVE_FORCEINLINE typename ::boost::move_detail::enable_if_and
  63:/usr/include/boost/move/utility_core.hpp ****       < rv<T>&
  64:/usr/include/boost/move/utility_core.hpp ****       , enable_move_utility_emulation<T>
  65:/usr/include/boost/move/utility_core.hpp ****       , has_move_emulation_enabled<T>
  66:/usr/include/boost/move/utility_core.hpp ****       >::type
  67:/usr/include/boost/move/utility_core.hpp ****          move(T& x) BOOST_NOEXCEPT
  68:/usr/include/boost/move/utility_core.hpp ****    {
  69:/usr/include/boost/move/utility_core.hpp ****       return *BOOST_MOVE_TO_RV_CAST(::boost::rv<T>*, ::boost::move_detail::addressof(x) );
  70:/usr/include/boost/move/utility_core.hpp ****    }
  71:/usr/include/boost/move/utility_core.hpp **** 
  72:/usr/include/boost/move/utility_core.hpp ****    template <class T>
  73:/usr/include/boost/move/utility_core.hpp ****    BOOST_MOVE_FORCEINLINE typename ::boost::move_detail::enable_if_and
  74:/usr/include/boost/move/utility_core.hpp ****       < rv<T>&
  75:/usr/include/boost/move/utility_core.hpp ****       , enable_move_utility_emulation<T>
  76:/usr/include/boost/move/utility_core.hpp ****       , has_move_emulation_enabled<T>
  77:/usr/include/boost/move/utility_core.hpp ****       >::type
  78:/usr/include/boost/move/utility_core.hpp ****          move(rv<T>& x) BOOST_NOEXCEPT
  79:/usr/include/boost/move/utility_core.hpp ****    {
  80:/usr/include/boost/move/utility_core.hpp ****       return x;
  81:/usr/include/boost/move/utility_core.hpp ****    }
  82:/usr/include/boost/move/utility_core.hpp **** 
  83:/usr/include/boost/move/utility_core.hpp ****    //////////////////////////////////////////////////////////////////////////////
  84:/usr/include/boost/move/utility_core.hpp ****    //
  85:/usr/include/boost/move/utility_core.hpp ****    //                            forward()
  86:/usr/include/boost/move/utility_core.hpp ****    //
  87:/usr/include/boost/move/utility_core.hpp ****    //////////////////////////////////////////////////////////////////////////////
  88:/usr/include/boost/move/utility_core.hpp **** 
  89:/usr/include/boost/move/utility_core.hpp ****    template <class T>
  90:/usr/include/boost/move/utility_core.hpp ****    BOOST_MOVE_FORCEINLINE typename ::boost::move_detail::enable_if_and
  91:/usr/include/boost/move/utility_core.hpp ****       < T &
  92:/usr/include/boost/move/utility_core.hpp ****       , enable_move_utility_emulation<T>
  93:/usr/include/boost/move/utility_core.hpp ****       , ::boost::move_detail::is_rv<T>
  94:/usr/include/boost/move/utility_core.hpp ****       >::type
  95:/usr/include/boost/move/utility_core.hpp ****          forward(const typename ::boost::move_detail::identity<T>::type &x) BOOST_NOEXCEPT
  96:/usr/include/boost/move/utility_core.hpp ****    {
  97:/usr/include/boost/move/utility_core.hpp ****       return const_cast<T&>(x);
  98:/usr/include/boost/move/utility_core.hpp ****    }
  99:/usr/include/boost/move/utility_core.hpp **** 
 100:/usr/include/boost/move/utility_core.hpp ****    template <class T>
 101:/usr/include/boost/move/utility_core.hpp ****    BOOST_MOVE_FORCEINLINE typename ::boost::move_detail::enable_if_and
 102:/usr/include/boost/move/utility_core.hpp ****       < const T &
 103:/usr/include/boost/move/utility_core.hpp ****       , enable_move_utility_emulation<T>
 104:/usr/include/boost/move/utility_core.hpp ****       , ::boost::move_detail::is_not_rv<T>
GAS LISTING /tmp/ccvUPO8Q.s 			page 425


 105:/usr/include/boost/move/utility_core.hpp ****       >::type
 106:/usr/include/boost/move/utility_core.hpp ****          forward(const typename ::boost::move_detail::identity<T>::type &x) BOOST_NOEXCEPT
 107:/usr/include/boost/move/utility_core.hpp ****    {
 108:/usr/include/boost/move/utility_core.hpp ****       return x;
 109:/usr/include/boost/move/utility_core.hpp ****    }
 110:/usr/include/boost/move/utility_core.hpp **** 
 111:/usr/include/boost/move/utility_core.hpp ****    //////////////////////////////////////////////////////////////////////////////
 112:/usr/include/boost/move/utility_core.hpp ****    //
 113:/usr/include/boost/move/utility_core.hpp ****    //                        move_if_not_lvalue_reference()
 114:/usr/include/boost/move/utility_core.hpp ****    //
 115:/usr/include/boost/move/utility_core.hpp ****    //////////////////////////////////////////////////////////////////////////////
 116:/usr/include/boost/move/utility_core.hpp **** 
 117:/usr/include/boost/move/utility_core.hpp ****    template <class T>
 118:/usr/include/boost/move/utility_core.hpp ****    BOOST_MOVE_FORCEINLINE typename ::boost::move_detail::enable_if_and
 119:/usr/include/boost/move/utility_core.hpp ****       < T &
 120:/usr/include/boost/move/utility_core.hpp ****       , enable_move_utility_emulation<T>
 121:/usr/include/boost/move/utility_core.hpp ****       , ::boost::move_detail::is_rv<T>
 122:/usr/include/boost/move/utility_core.hpp ****       >::type
 123:/usr/include/boost/move/utility_core.hpp ****          move_if_not_lvalue_reference(const typename ::boost::move_detail::identity<T>::type &x) BO
 124:/usr/include/boost/move/utility_core.hpp ****    {
 125:/usr/include/boost/move/utility_core.hpp ****       return const_cast<T&>(x);
 126:/usr/include/boost/move/utility_core.hpp ****    }
 127:/usr/include/boost/move/utility_core.hpp **** 
 128:/usr/include/boost/move/utility_core.hpp ****    template <class T>
 129:/usr/include/boost/move/utility_core.hpp ****    BOOST_MOVE_FORCEINLINE typename ::boost::move_detail::enable_if_and
 130:/usr/include/boost/move/utility_core.hpp ****       < typename ::boost::move_detail::add_lvalue_reference<T>::type
 131:/usr/include/boost/move/utility_core.hpp ****       , enable_move_utility_emulation<T>
 132:/usr/include/boost/move/utility_core.hpp ****       , ::boost::move_detail::is_not_rv<T>
 133:/usr/include/boost/move/utility_core.hpp ****       , ::boost::move_detail::or_
 134:/usr/include/boost/move/utility_core.hpp ****          < ::boost::move_detail::is_lvalue_reference<T>
 135:/usr/include/boost/move/utility_core.hpp ****          , has_move_emulation_disabled<T>
 136:/usr/include/boost/move/utility_core.hpp ****          >
 137:/usr/include/boost/move/utility_core.hpp ****       >::type
 138:/usr/include/boost/move/utility_core.hpp ****          move_if_not_lvalue_reference(typename ::boost::move_detail::remove_reference<T>::type &x) 
 139:/usr/include/boost/move/utility_core.hpp ****    {
 140:/usr/include/boost/move/utility_core.hpp ****       return x;
 141:/usr/include/boost/move/utility_core.hpp ****    }
 142:/usr/include/boost/move/utility_core.hpp **** 
 143:/usr/include/boost/move/utility_core.hpp ****    template <class T>
 144:/usr/include/boost/move/utility_core.hpp ****    BOOST_MOVE_FORCEINLINE typename ::boost::move_detail::enable_if_and
 145:/usr/include/boost/move/utility_core.hpp ****       < rv<T>&
 146:/usr/include/boost/move/utility_core.hpp ****       , enable_move_utility_emulation<T>
 147:/usr/include/boost/move/utility_core.hpp ****       , ::boost::move_detail::is_not_rv<T>
 148:/usr/include/boost/move/utility_core.hpp ****       , ::boost::move_detail::and_
 149:/usr/include/boost/move/utility_core.hpp ****          < ::boost::move_detail::not_< ::boost::move_detail::is_lvalue_reference<T> >
 150:/usr/include/boost/move/utility_core.hpp ****          , has_move_emulation_enabled<T>
 151:/usr/include/boost/move/utility_core.hpp ****          >
 152:/usr/include/boost/move/utility_core.hpp ****       >::type
 153:/usr/include/boost/move/utility_core.hpp ****          move_if_not_lvalue_reference(typename ::boost::move_detail::remove_reference<T>::type &x) 
 154:/usr/include/boost/move/utility_core.hpp ****    {
 155:/usr/include/boost/move/utility_core.hpp ****       return move(x);
 156:/usr/include/boost/move/utility_core.hpp ****    }
 157:/usr/include/boost/move/utility_core.hpp **** 
 158:/usr/include/boost/move/utility_core.hpp ****    }  //namespace boost
 159:/usr/include/boost/move/utility_core.hpp **** 
 160:/usr/include/boost/move/utility_core.hpp **** #else    //#if defined(BOOST_NO_CXX11_RVALUE_REFERENCES) && !defined(BOOST_MOVE_DOXYGEN_INVOKED)
 161:/usr/include/boost/move/utility_core.hpp **** 
GAS LISTING /tmp/ccvUPO8Q.s 			page 426


 162:/usr/include/boost/move/utility_core.hpp ****    #if defined(BOOST_MOVE_USE_STANDARD_LIBRARY_MOVE)
 163:/usr/include/boost/move/utility_core.hpp ****       #include <utility>
 164:/usr/include/boost/move/utility_core.hpp **** 
 165:/usr/include/boost/move/utility_core.hpp ****       namespace boost{
 166:/usr/include/boost/move/utility_core.hpp **** 
 167:/usr/include/boost/move/utility_core.hpp ****       using ::std::move;
 168:/usr/include/boost/move/utility_core.hpp ****       using ::std::forward;
 169:/usr/include/boost/move/utility_core.hpp **** 
 170:/usr/include/boost/move/utility_core.hpp ****       }  //namespace boost
 171:/usr/include/boost/move/utility_core.hpp **** 
 172:/usr/include/boost/move/utility_core.hpp ****    #else //!BOOST_MOVE_USE_STANDARD_LIBRARY_MOVE
 173:/usr/include/boost/move/utility_core.hpp **** 
 174:/usr/include/boost/move/utility_core.hpp ****       namespace boost {
 175:/usr/include/boost/move/utility_core.hpp **** 
 176:/usr/include/boost/move/utility_core.hpp ****       //! This trait's internal boolean `value` is false in compilers with rvalue references
 177:/usr/include/boost/move/utility_core.hpp ****       //! and true in compilers without rvalue references.
 178:/usr/include/boost/move/utility_core.hpp ****       //!
 179:/usr/include/boost/move/utility_core.hpp ****       //! A user can specialize this trait for a type T to false to SFINAE out `move` and `forward`
 180:/usr/include/boost/move/utility_core.hpp ****       //! so that the user can define a different move emulation for that type in namespace boost
 181:/usr/include/boost/move/utility_core.hpp ****       //! (e.g. another Boost library for its types) and avoid any overload ambiguity.
 182:/usr/include/boost/move/utility_core.hpp ****       template<class T>
 183:/usr/include/boost/move/utility_core.hpp ****       struct enable_move_utility_emulation
 184:/usr/include/boost/move/utility_core.hpp ****       {
 185:/usr/include/boost/move/utility_core.hpp ****          static const bool value = false;
 186:/usr/include/boost/move/utility_core.hpp ****       };
 187:/usr/include/boost/move/utility_core.hpp **** 
 188:/usr/include/boost/move/utility_core.hpp ****       //////////////////////////////////////////////////////////////////////////////
 189:/usr/include/boost/move/utility_core.hpp ****       //
 190:/usr/include/boost/move/utility_core.hpp ****       //                                  move
 191:/usr/include/boost/move/utility_core.hpp ****       //
 192:/usr/include/boost/move/utility_core.hpp ****       //////////////////////////////////////////////////////////////////////////////
 193:/usr/include/boost/move/utility_core.hpp **** 
 194:/usr/include/boost/move/utility_core.hpp ****       #if defined(BOOST_MOVE_DOXYGEN_INVOKED)
 195:/usr/include/boost/move/utility_core.hpp ****          //! This function provides a way to convert a reference into a rvalue reference
 196:/usr/include/boost/move/utility_core.hpp ****          //! in compilers with rvalue references. For other compilers if `T` is Boost.Move
 197:/usr/include/boost/move/utility_core.hpp ****          //! enabled type then it converts `T&` into <tt>::boost::rv<T> &</tt> so that
 198:/usr/include/boost/move/utility_core.hpp ****          //! move emulation is activated, else it returns `T &`.
 199:/usr/include/boost/move/utility_core.hpp ****          template <class T>
 200:/usr/include/boost/move/utility_core.hpp ****          rvalue_reference move(input_reference) noexcept;
 201:/usr/include/boost/move/utility_core.hpp **** 
 202:/usr/include/boost/move/utility_core.hpp ****       #elif defined(BOOST_MOVE_OLD_RVALUE_REF_BINDING_RULES)
 203:/usr/include/boost/move/utility_core.hpp **** 
 204:/usr/include/boost/move/utility_core.hpp ****          //Old move approach, lvalues could bind to rvalue references
 205:/usr/include/boost/move/utility_core.hpp ****          template <class T>
 206:/usr/include/boost/move/utility_core.hpp ****          BOOST_MOVE_FORCEINLINE typename ::boost::move_detail::remove_reference<T>::type && move(T&
 207:/usr/include/boost/move/utility_core.hpp ****          {  return t;   }
 208:/usr/include/boost/move/utility_core.hpp **** 
 209:/usr/include/boost/move/utility_core.hpp ****       #else //BOOST_MOVE_OLD_RVALUE_REF_BINDING_RULES
 210:/usr/include/boost/move/utility_core.hpp **** 
 211:/usr/include/boost/move/utility_core.hpp ****          template <class T>
 212:/usr/include/boost/move/utility_core.hpp ****          BOOST_MOVE_FORCEINLINE typename ::boost::move_detail::remove_reference<T>::type && move(T&
 213:/usr/include/boost/move/utility_core.hpp ****          { return static_cast<typename ::boost::move_detail::remove_reference<T>::type &&>(t); }
 214:/usr/include/boost/move/utility_core.hpp **** 
 215:/usr/include/boost/move/utility_core.hpp ****       #endif   //BOOST_MOVE_OLD_RVALUE_REF_BINDING_RULES
 216:/usr/include/boost/move/utility_core.hpp **** 
 217:/usr/include/boost/move/utility_core.hpp ****       //////////////////////////////////////////////////////////////////////////////
 218:/usr/include/boost/move/utility_core.hpp ****       //
GAS LISTING /tmp/ccvUPO8Q.s 			page 427


 219:/usr/include/boost/move/utility_core.hpp ****       //                                  forward
 220:/usr/include/boost/move/utility_core.hpp ****       //
 221:/usr/include/boost/move/utility_core.hpp ****       //////////////////////////////////////////////////////////////////////////////
 222:/usr/include/boost/move/utility_core.hpp **** 
 223:/usr/include/boost/move/utility_core.hpp **** 
 224:/usr/include/boost/move/utility_core.hpp ****       #if defined(BOOST_MOVE_DOXYGEN_INVOKED)
 225:/usr/include/boost/move/utility_core.hpp ****          //! This function provides limited form of forwarding that is usually enough for
 226:/usr/include/boost/move/utility_core.hpp ****          //! in-place construction and avoids the exponential overloading for
 227:/usr/include/boost/move/utility_core.hpp ****          //! achieve the limited forwarding in C++03.
 228:/usr/include/boost/move/utility_core.hpp ****          //!
 229:/usr/include/boost/move/utility_core.hpp ****          //! For compilers with rvalue references this function provides perfect forwarding.
 230:/usr/include/boost/move/utility_core.hpp ****          //!
 231:/usr/include/boost/move/utility_core.hpp ****          //! Otherwise:
 232:/usr/include/boost/move/utility_core.hpp ****          //! * If input_reference binds to const ::boost::rv<T> & then it output_reference is
 233:/usr/include/boost/move/utility_core.hpp ****          //!   ::boost::rv<T> &
 234:/usr/include/boost/move/utility_core.hpp ****          //!
 235:/usr/include/boost/move/utility_core.hpp ****          //! * Else, output_reference is equal to input_reference.
 236:/usr/include/boost/move/utility_core.hpp ****          template <class T> output_reference forward(input_reference) noexcept;
 237:/usr/include/boost/move/utility_core.hpp ****       #elif defined(BOOST_MOVE_OLD_RVALUE_REF_BINDING_RULES)
 238:/usr/include/boost/move/utility_core.hpp **** 
 239:/usr/include/boost/move/utility_core.hpp ****          //Old move approach, lvalues could bind to rvalue references
 240:/usr/include/boost/move/utility_core.hpp **** 
 241:/usr/include/boost/move/utility_core.hpp ****          template <class T>
 242:/usr/include/boost/move/utility_core.hpp ****          BOOST_MOVE_FORCEINLINE T&& forward(typename ::boost::move_detail::identity<T>::type&& t) B
 243:/usr/include/boost/move/utility_core.hpp ****          {  return t;   }
 244:/usr/include/boost/move/utility_core.hpp **** 
 245:/usr/include/boost/move/utility_core.hpp ****       #else //Old move
 246:/usr/include/boost/move/utility_core.hpp **** 
 247:/usr/include/boost/move/utility_core.hpp ****          template <class T>
 248:/usr/include/boost/move/utility_core.hpp ****          BOOST_MOVE_FORCEINLINE T&& forward(typename ::boost::move_detail::remove_reference<T>::typ
 9038              		.loc 34 248 0
 9039              		.cfi_startproc
 9040 0000 55       		pushq	%rbp
 9041              		.cfi_def_cfa_offset 16
 9042              		.cfi_offset 6, -16
 9043 0001 4889E5   		movq	%rsp, %rbp
 9044              		.cfi_def_cfa_register 6
 9045 0004 48897DF8 		movq	%rdi, -8(%rbp)
 249:/usr/include/boost/move/utility_core.hpp ****          {  return static_cast<T&&>(t);   }
 9046              		.loc 34 249 0
 9047 0008 488B45F8 		movq	-8(%rbp), %rax
 9048 000c 5D       		popq	%rbp
 9049              		.cfi_def_cfa 7, 8
 9050 000d C3       		ret
 9051              		.cfi_endproc
 9052              	.LFE12683:
 9054              		.section	.text._ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_St5dequeIS4_SaIS
 9055              		.align 2
 9056              		.weak	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_St5dequeIS4_SaIS4_EEESt10
 9058              	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_St5dequeIS4_SaIS4_EEESt10_Select
 9059              	.LFB12687:
2318:/usr/include/c++/6/bits/stl_tree.h ****     find(const _Key& __k)
 9060              		.loc 27 2318 0
 9061              		.cfi_startproc
 9062              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 9063              		.cfi_lsda 0x1b,.LLSDA12687
 9064 0000 55       		pushq	%rbp
GAS LISTING /tmp/ccvUPO8Q.s 			page 428


 9065              		.cfi_def_cfa_offset 16
 9066              		.cfi_offset 6, -16
 9067 0001 4889E5   		movq	%rsp, %rbp
 9068              		.cfi_def_cfa_register 6
 9069 0004 53       		pushq	%rbx
 9070 0005 4883EC28 		subq	$40, %rsp
 9071              		.cfi_offset 3, -24
 9072 0009 48897DD8 		movq	%rdi, -40(%rbp)
 9073 000d 488975D0 		movq	%rsi, -48(%rbp)
2321:/usr/include/c++/6/bits/stl_tree.h ****       return (__j == end()
 9074              		.loc 27 2321 0
 9075 0011 488B45D8 		movq	-40(%rbp), %rax
 9076 0015 4889C7   		movq	%rax, %rdi
 9077 0018 E8000000 		call	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_St5dequeIS4_SaIS4_EEESt10_
 9077      00
 9078 001d 4889C3   		movq	%rax, %rbx
 9079 0020 488B45D8 		movq	-40(%rbp), %rax
 9080 0024 4889C7   		movq	%rax, %rdi
 9081 0027 E8000000 		call	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_St5dequeIS4_SaIS4_EEESt10_
 9081      00
 9082 002c 4889C6   		movq	%rax, %rsi
 9083 002f 488B55D0 		movq	-48(%rbp), %rdx
 9084 0033 488B45D8 		movq	-40(%rbp), %rax
 9085 0037 4889D1   		movq	%rdx, %rcx
 9086 003a 4889DA   		movq	%rbx, %rdx
 9087 003d 4889C7   		movq	%rax, %rdi
 9088              	.LEHB74:
 9089 0040 E8000000 		call	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_St5dequeIS4_SaIS4_EEESt10_
 9089      00
 9090              	.LEHE74:
 9091 0045 488945E0 		movq	%rax, -32(%rbp)
2322:/usr/include/c++/6/bits/stl_tree.h **** 	      || _M_impl._M_key_compare(__k,
 9092              		.loc 27 2322 0
 9093 0049 488B45D8 		movq	-40(%rbp), %rax
 9094 004d 4889C7   		movq	%rax, %rdi
 9095 0050 E8000000 		call	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_St5dequeIS4_SaIS4_EEESt10_
 9095      00
 9096 0055 488945E8 		movq	%rax, -24(%rbp)
2324:/usr/include/c++/6/bits/stl_tree.h ****     }
 9097              		.loc 27 2324 0
 9098 0059 BB010000 		movl	$1, %ebx
 9098      00
2322:/usr/include/c++/6/bits/stl_tree.h **** 	      || _M_impl._M_key_compare(__k,
 9099              		.loc 27 2322 0
 9100 005e 488D55E8 		leaq	-24(%rbp), %rdx
 9101 0062 488D45E0 		leaq	-32(%rbp), %rax
 9102 0066 4889D6   		movq	%rdx, %rsi
 9103 0069 4889C7   		movq	%rax, %rdi
 9104 006c E8000000 		call	_ZNKSt17_Rb_tree_iteratorISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt5dequeIS5_SaIS5_
 9104      00
2324:/usr/include/c++/6/bits/stl_tree.h ****     }
 9105              		.loc 27 2324 0
 9106 0071 84C0     		testb	%al, %al
 9107 0073 7526     		jne	.L425
2324:/usr/include/c++/6/bits/stl_tree.h ****     }
 9108              		.loc 27 2324 0 is_stmt 0 discriminator 2
 9109 0075 488B45E0 		movq	-32(%rbp), %rax
GAS LISTING /tmp/ccvUPO8Q.s 			page 429


 9110 0079 4889C7   		movq	%rax, %rdi
 9111              	.LEHB75:
 9112 007c E8000000 		call	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_St5dequeIS4_SaIS4_EEESt10_
 9112      00
 9113 0081 4889C2   		movq	%rax, %rdx
2323:/usr/include/c++/6/bits/stl_tree.h **** 					_S_key(__j._M_node))) ? end() : __j;
 9114              		.loc 27 2323 0 is_stmt 1 discriminator 2
 9115 0084 488B45D8 		movq	-40(%rbp), %rax
 9116 0088 488B4DD0 		movq	-48(%rbp), %rcx
 9117 008c 4889CE   		movq	%rcx, %rsi
 9118 008f 4889C7   		movq	%rax, %rdi
 9119 0092 E8000000 		call	_ZNK3pmt10comparatorclERKN5boost13intrusive_ptrINS_8pmt_baseEEES6_
 9119      00
 9120              	.LEHE75:
2323:/usr/include/c++/6/bits/stl_tree.h **** 					_S_key(__j._M_node))) ? end() : __j;
 9121              		.loc 27 2323 0 is_stmt 0 discriminator 3
 9122 0097 84C0     		testb	%al, %al
 9123 0099 740E     		je	.L426
 9124              	.L425:
2324:/usr/include/c++/6/bits/stl_tree.h ****     }
 9125              		.loc 27 2324 0 is_stmt 1 discriminator 1
 9126 009b 488B45D8 		movq	-40(%rbp), %rax
 9127 009f 4889C7   		movq	%rax, %rdi
 9128 00a2 E8000000 		call	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_St5dequeIS4_SaIS4_EEESt10_
 9128      00
 9129 00a7 EB04     		jmp	.L433
 9130              	.L426:
2324:/usr/include/c++/6/bits/stl_tree.h ****     }
 9131              		.loc 27 2324 0 is_stmt 0
 9132 00a9 488B45E0 		movq	-32(%rbp), %rax
 9133              	.L433:
2322:/usr/include/c++/6/bits/stl_tree.h **** 	      || _M_impl._M_key_compare(__k,
 9134              		.loc 27 2322 0 is_stmt 1
 9135 00ad 84DB     		testb	%bl, %bl
2324:/usr/include/c++/6/bits/stl_tree.h ****     }
 9136              		.loc 27 2324 0
 9137 00af EB0B     		jmp	.L434
 9138              	.L432:
2322:/usr/include/c++/6/bits/stl_tree.h **** 	      || _M_impl._M_key_compare(__k,
 9139              		.loc 27 2322 0
 9140 00b1 84DB     		testb	%bl, %bl
2324:/usr/include/c++/6/bits/stl_tree.h ****     }
 9141              		.loc 27 2324 0
 9142 00b3 90       		nop
 9143 00b4 4889C7   		movq	%rax, %rdi
 9144              	.LEHB76:
 9145 00b7 E8000000 		call	_Unwind_Resume@PLT
 9145      00
 9146              	.LEHE76:
 9147              	.L434:
 9148              		.loc 27 2325 0
 9149 00bc 4883C428 		addq	$40, %rsp
 9150 00c0 5B       		popq	%rbx
 9151 00c1 5D       		popq	%rbp
 9152              		.cfi_def_cfa 7, 8
 9153 00c2 C3       		ret
 9154              		.cfi_endproc
GAS LISTING /tmp/ccvUPO8Q.s 			page 430


 9155              	.LFE12687:
 9156              		.section	.gcc_except_table
 9157              	.LLSDA12687:
 9158 0192 FF       		.byte	0xff
 9159 0193 FF       		.byte	0xff
 9160 0194 01       		.byte	0x1
 9161 0195 0E       		.uleb128 .LLSDACSE12687-.LLSDACSB12687
 9162              	.LLSDACSB12687:
 9163 0196 40       		.uleb128 .LEHB74-.LFB12687
 9164 0197 05       		.uleb128 .LEHE74-.LEHB74
 9165 0198 00       		.uleb128 0
 9166 0199 00       		.uleb128 0
 9167 019a 7C       		.uleb128 .LEHB75-.LFB12687
 9168 019b 1B       		.uleb128 .LEHE75-.LEHB75
 9169 019c B101     		.uleb128 .L432-.LFB12687
 9170 019e 00       		.uleb128 0
 9171 019f B701     		.uleb128 .LEHB76-.LFB12687
 9172 01a1 05       		.uleb128 .LEHE76-.LEHB76
 9173 01a2 00       		.uleb128 0
 9174 01a3 00       		.uleb128 0
 9175              	.LLSDACSE12687:
 9176              		.section	.text._ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_St5dequeIS4_SaIS
 9178              		.section	.text._ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_St5dequeIS4_SaIS
 9179              		.align 2
 9180              		.weak	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_St5dequeIS4_SaIS4_EEESt10
 9182              	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_St5dequeIS4_SaIS4_EEESt10_Select
 9183              	.LFB12688:
 892:/usr/include/c++/6/bits/stl_tree.h ****       { return iterator(&this->_M_impl._M_header); }
 9184              		.loc 27 892 0
 9185              		.cfi_startproc
 9186 0000 55       		pushq	%rbp
 9187              		.cfi_def_cfa_offset 16
 9188              		.cfi_offset 6, -16
 9189 0001 4889E5   		movq	%rsp, %rbp
 9190              		.cfi_def_cfa_register 6
 9191 0004 4883EC20 		subq	$32, %rsp
 9192 0008 48897DE8 		movq	%rdi, -24(%rbp)
 893:/usr/include/c++/6/bits/stl_tree.h **** 
 9193              		.loc 27 893 0
 9194 000c 488B45E8 		movq	-24(%rbp), %rax
 9195 0010 488D5008 		leaq	8(%rax), %rdx
 9196 0014 488D45F8 		leaq	-8(%rbp), %rax
 9197 0018 4889D6   		movq	%rdx, %rsi
 9198 001b 4889C7   		movq	%rax, %rdi
 9199 001e E8000000 		call	_ZNSt17_Rb_tree_iteratorISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt5dequeIS5_SaIS5_E
 9199      00
 9200 0023 488B45F8 		movq	-8(%rbp), %rax
 9201 0027 C9       		leave
 9202              		.cfi_def_cfa 7, 8
 9203 0028 C3       		ret
 9204              		.cfi_endproc
 9205              	.LFE12688:
 9207              		.section	.text._ZNSt12_Vector_baseIlSaIlEE12_Vector_implD2Ev,"axG",@progbits,_ZNSt12_Vector_baseIl
 9208              		.align 2
 9209              		.weak	_ZNSt12_Vector_baseIlSaIlEE12_Vector_implD2Ev
 9211              	_ZNSt12_Vector_baseIlSaIlEE12_Vector_implD2Ev:
 9212              	.LFB12718:
GAS LISTING /tmp/ccvUPO8Q.s 			page 431


  79:/usr/include/c++/6/bits/stl_vector.h ****       : public _Tp_alloc_type
 9213              		.loc 30 79 0
 9214              		.cfi_startproc
 9215 0000 55       		pushq	%rbp
 9216              		.cfi_def_cfa_offset 16
 9217              		.cfi_offset 6, -16
 9218 0001 4889E5   		movq	%rsp, %rbp
 9219              		.cfi_def_cfa_register 6
 9220 0004 4883EC10 		subq	$16, %rsp
 9221 0008 48897DF8 		movq	%rdi, -8(%rbp)
 9222              	.LBB88:
  79:/usr/include/c++/6/bits/stl_vector.h ****       : public _Tp_alloc_type
 9223              		.loc 30 79 0
 9224 000c 488B45F8 		movq	-8(%rbp), %rax
 9225 0010 4889C7   		movq	%rax, %rdi
 9226 0013 E8000000 		call	_ZNSaIlED2Ev
 9226      00
 9227              	.LBE88:
 9228 0018 90       		nop
 9229 0019 C9       		leave
 9230              		.cfi_def_cfa 7, 8
 9231 001a C3       		ret
 9232              		.cfi_endproc
 9233              	.LFE12718:
 9235              		.weak	_ZNSt12_Vector_baseIlSaIlEE12_Vector_implD1Ev
 9236              		.set	_ZNSt12_Vector_baseIlSaIlEE12_Vector_implD1Ev,_ZNSt12_Vector_baseIlSaIlEE12_Vector_implD2Ev
 9237              		.section	.text._ZNSt12_Vector_baseIlSaIlEED2Ev,"axG",@progbits,_ZNSt12_Vector_baseIlSaIlEED5Ev,com
 9238              		.align 2
 9239              		.weak	_ZNSt12_Vector_baseIlSaIlEED2Ev
 9241              	_ZNSt12_Vector_baseIlSaIlEED2Ev:
 9242              	.LFB12723:
 159:/usr/include/c++/6/bits/stl_vector.h ****       { _M_deallocate(this->_M_impl._M_start, this->_M_impl._M_end_of_storage
 9243              		.loc 30 159 0
 9244              		.cfi_startproc
 9245              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 9246              		.cfi_lsda 0x1b,.LLSDA12723
 9247 0000 55       		pushq	%rbp
 9248              		.cfi_def_cfa_offset 16
 9249              		.cfi_offset 6, -16
 9250 0001 4889E5   		movq	%rsp, %rbp
 9251              		.cfi_def_cfa_register 6
 9252 0004 4883EC10 		subq	$16, %rsp
 9253 0008 48897DF8 		movq	%rdi, -8(%rbp)
 9254              	.LBB89:
 160:/usr/include/c++/6/bits/stl_vector.h **** 		      - this->_M_impl._M_start); }
 9255              		.loc 30 160 0
 9256 000c 488B45F8 		movq	-8(%rbp), %rax
 9257 0010 488B4010 		movq	16(%rax), %rax
 161:/usr/include/c++/6/bits/stl_vector.h **** 
 9258              		.loc 30 161 0
 9259 0014 4889C2   		movq	%rax, %rdx
 9260 0017 488B45F8 		movq	-8(%rbp), %rax
 9261 001b 488B00   		movq	(%rax), %rax
 9262 001e 4829C2   		subq	%rax, %rdx
 9263 0021 4889D0   		movq	%rdx, %rax
 160:/usr/include/c++/6/bits/stl_vector.h **** 		      - this->_M_impl._M_start); }
 9264              		.loc 30 160 0
GAS LISTING /tmp/ccvUPO8Q.s 			page 432


 9265 0024 48C1F803 		sarq	$3, %rax
 9266 0028 4889C2   		movq	%rax, %rdx
 9267 002b 488B45F8 		movq	-8(%rbp), %rax
 9268 002f 488B08   		movq	(%rax), %rcx
 9269 0032 488B45F8 		movq	-8(%rbp), %rax
 9270 0036 4889CE   		movq	%rcx, %rsi
 9271 0039 4889C7   		movq	%rax, %rdi
 9272 003c E8000000 		call	_ZNSt12_Vector_baseIlSaIlEE13_M_deallocateEPlm
 9272      00
 161:/usr/include/c++/6/bits/stl_vector.h **** 
 9273              		.loc 30 161 0
 9274 0041 488B45F8 		movq	-8(%rbp), %rax
 9275 0045 4889C7   		movq	%rax, %rdi
 9276 0048 E8000000 		call	_ZNSt12_Vector_baseIlSaIlEE12_Vector_implD1Ev
 9276      00
 9277              	.LBE89:
 9278 004d 90       		nop
 9279 004e C9       		leave
 9280              		.cfi_def_cfa 7, 8
 9281 004f C3       		ret
 9282              		.cfi_endproc
 9283              	.LFE12723:
 9284              		.section	.gcc_except_table
 9285              	.LLSDA12723:
 9286 01a4 FF       		.byte	0xff
 9287 01a5 FF       		.byte	0xff
 9288 01a6 01       		.byte	0x1
 9289 01a7 00       		.uleb128 .LLSDACSE12723-.LLSDACSB12723
 9290              	.LLSDACSB12723:
 9291              	.LLSDACSE12723:
 9292              		.section	.text._ZNSt12_Vector_baseIlSaIlEED2Ev,"axG",@progbits,_ZNSt12_Vector_baseIlSaIlEED5Ev,com
 9294              		.weak	_ZNSt12_Vector_baseIlSaIlEED1Ev
 9295              		.set	_ZNSt12_Vector_baseIlSaIlEED1Ev,_ZNSt12_Vector_baseIlSaIlEED2Ev
 9296              		.section	.text._ZNSt12_Vector_baseIlSaIlEE19_M_get_Tp_allocatorEv,"axG",@progbits,_ZNSt12_Vector_b
 9297              		.align 2
 9298              		.weak	_ZNSt12_Vector_baseIlSaIlEE19_M_get_Tp_allocatorEv
 9300              	_ZNSt12_Vector_baseIlSaIlEE19_M_get_Tp_allocatorEv:
 9301              	.LFB12725:
 113:/usr/include/c++/6/bits/stl_vector.h ****       { return *static_cast<_Tp_alloc_type*>(&this->_M_impl); }
 9302              		.loc 30 113 0
 9303              		.cfi_startproc
 9304 0000 55       		pushq	%rbp
 9305              		.cfi_def_cfa_offset 16
 9306              		.cfi_offset 6, -16
 9307 0001 4889E5   		movq	%rsp, %rbp
 9308              		.cfi_def_cfa_register 6
 9309 0004 48897DF8 		movq	%rdi, -8(%rbp)
 114:/usr/include/c++/6/bits/stl_vector.h **** 
 9310              		.loc 30 114 0
 9311 0008 488B45F8 		movq	-8(%rbp), %rax
 9312 000c 5D       		popq	%rbp
 9313              		.cfi_def_cfa 7, 8
 9314 000d C3       		ret
 9315              		.cfi_endproc
 9316              	.LFE12725:
 9318              		.section	.text._ZSt8_DestroyIPllEvT_S1_RSaIT0_E,"axG",@progbits,_ZSt8_DestroyIPllEvT_S1_RSaIT0_E,c
 9319              		.weak	_ZSt8_DestroyIPllEvT_S1_RSaIT0_E
GAS LISTING /tmp/ccvUPO8Q.s 			page 433


 9321              	_ZSt8_DestroyIPllEvT_S1_RSaIT0_E:
 9322              	.LFB12726:
 9323              		.file 35 "/usr/include/c++/6/bits/stl_construct.h"
   1:/usr/include/c++/6/bits/stl_construct.h **** // nonstandard construct and destroy functions -*- C++ -*-
   2:/usr/include/c++/6/bits/stl_construct.h **** 
   3:/usr/include/c++/6/bits/stl_construct.h **** // Copyright (C) 2001-2016 Free Software Foundation, Inc.
   4:/usr/include/c++/6/bits/stl_construct.h **** //
   5:/usr/include/c++/6/bits/stl_construct.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/6/bits/stl_construct.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/6/bits/stl_construct.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/6/bits/stl_construct.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/6/bits/stl_construct.h **** // any later version.
  10:/usr/include/c++/6/bits/stl_construct.h **** 
  11:/usr/include/c++/6/bits/stl_construct.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/6/bits/stl_construct.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/6/bits/stl_construct.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/6/bits/stl_construct.h **** // GNU General Public License for more details.
  15:/usr/include/c++/6/bits/stl_construct.h **** 
  16:/usr/include/c++/6/bits/stl_construct.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/6/bits/stl_construct.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/6/bits/stl_construct.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/6/bits/stl_construct.h **** 
  20:/usr/include/c++/6/bits/stl_construct.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/6/bits/stl_construct.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/6/bits/stl_construct.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/6/bits/stl_construct.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/6/bits/stl_construct.h **** 
  25:/usr/include/c++/6/bits/stl_construct.h **** /*
  26:/usr/include/c++/6/bits/stl_construct.h ****  *
  27:/usr/include/c++/6/bits/stl_construct.h ****  * Copyright (c) 1994
  28:/usr/include/c++/6/bits/stl_construct.h ****  * Hewlett-Packard Company
  29:/usr/include/c++/6/bits/stl_construct.h ****  *
  30:/usr/include/c++/6/bits/stl_construct.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:/usr/include/c++/6/bits/stl_construct.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:/usr/include/c++/6/bits/stl_construct.h ****  * provided that the above copyright notice appear in all copies and
  33:/usr/include/c++/6/bits/stl_construct.h ****  * that both that copyright notice and this permission notice appear
  34:/usr/include/c++/6/bits/stl_construct.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:/usr/include/c++/6/bits/stl_construct.h ****  * representations about the suitability of this software for any
  36:/usr/include/c++/6/bits/stl_construct.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:/usr/include/c++/6/bits/stl_construct.h ****  *
  38:/usr/include/c++/6/bits/stl_construct.h ****  *
  39:/usr/include/c++/6/bits/stl_construct.h ****  * Copyright (c) 1996,1997
  40:/usr/include/c++/6/bits/stl_construct.h ****  * Silicon Graphics Computer Systems, Inc.
  41:/usr/include/c++/6/bits/stl_construct.h ****  *
  42:/usr/include/c++/6/bits/stl_construct.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:/usr/include/c++/6/bits/stl_construct.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:/usr/include/c++/6/bits/stl_construct.h ****  * provided that the above copyright notice appear in all copies and
  45:/usr/include/c++/6/bits/stl_construct.h ****  * that both that copyright notice and this permission notice appear
  46:/usr/include/c++/6/bits/stl_construct.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:/usr/include/c++/6/bits/stl_construct.h ****  * representations about the suitability of this software for any
  48:/usr/include/c++/6/bits/stl_construct.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:/usr/include/c++/6/bits/stl_construct.h ****  */
  50:/usr/include/c++/6/bits/stl_construct.h **** 
  51:/usr/include/c++/6/bits/stl_construct.h **** /** @file bits/stl_construct.h
  52:/usr/include/c++/6/bits/stl_construct.h ****  *  This is an internal header file, included by other library headers.
  53:/usr/include/c++/6/bits/stl_construct.h ****  *  Do not attempt to use it directly. @headername{memory}
  54:/usr/include/c++/6/bits/stl_construct.h ****  */
GAS LISTING /tmp/ccvUPO8Q.s 			page 434


  55:/usr/include/c++/6/bits/stl_construct.h **** 
  56:/usr/include/c++/6/bits/stl_construct.h **** #ifndef _STL_CONSTRUCT_H
  57:/usr/include/c++/6/bits/stl_construct.h **** #define _STL_CONSTRUCT_H 1
  58:/usr/include/c++/6/bits/stl_construct.h **** 
  59:/usr/include/c++/6/bits/stl_construct.h **** #include <new>
  60:/usr/include/c++/6/bits/stl_construct.h **** #include <bits/move.h>
  61:/usr/include/c++/6/bits/stl_construct.h **** #include <ext/alloc_traits.h>
  62:/usr/include/c++/6/bits/stl_construct.h **** 
  63:/usr/include/c++/6/bits/stl_construct.h **** namespace std _GLIBCXX_VISIBILITY(default)
  64:/usr/include/c++/6/bits/stl_construct.h **** {
  65:/usr/include/c++/6/bits/stl_construct.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  66:/usr/include/c++/6/bits/stl_construct.h **** 
  67:/usr/include/c++/6/bits/stl_construct.h ****   /**
  68:/usr/include/c++/6/bits/stl_construct.h ****    * Constructs an object in existing memory by invoking an allocated
  69:/usr/include/c++/6/bits/stl_construct.h ****    * object's constructor with an initializer.
  70:/usr/include/c++/6/bits/stl_construct.h ****    */
  71:/usr/include/c++/6/bits/stl_construct.h **** #if __cplusplus >= 201103L
  72:/usr/include/c++/6/bits/stl_construct.h ****   template<typename _T1, typename... _Args>
  73:/usr/include/c++/6/bits/stl_construct.h ****     inline void
  74:/usr/include/c++/6/bits/stl_construct.h ****     _Construct(_T1* __p, _Args&&... __args)
  75:/usr/include/c++/6/bits/stl_construct.h ****     { ::new(static_cast<void*>(__p)) _T1(std::forward<_Args>(__args)...); }
  76:/usr/include/c++/6/bits/stl_construct.h **** #else
  77:/usr/include/c++/6/bits/stl_construct.h ****   template<typename _T1, typename _T2>
  78:/usr/include/c++/6/bits/stl_construct.h ****     inline void
  79:/usr/include/c++/6/bits/stl_construct.h ****     _Construct(_T1* __p, const _T2& __value)
  80:/usr/include/c++/6/bits/stl_construct.h ****     {
  81:/usr/include/c++/6/bits/stl_construct.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
  82:/usr/include/c++/6/bits/stl_construct.h ****       // 402. wrong new expression in [some_]allocator::construct
  83:/usr/include/c++/6/bits/stl_construct.h ****       ::new(static_cast<void*>(__p)) _T1(__value);
  84:/usr/include/c++/6/bits/stl_construct.h ****     }
  85:/usr/include/c++/6/bits/stl_construct.h **** #endif
  86:/usr/include/c++/6/bits/stl_construct.h **** 
  87:/usr/include/c++/6/bits/stl_construct.h ****   /**
  88:/usr/include/c++/6/bits/stl_construct.h ****    * Destroy the object pointed to by a pointer type.
  89:/usr/include/c++/6/bits/stl_construct.h ****    */
  90:/usr/include/c++/6/bits/stl_construct.h ****   template<typename _Tp>
  91:/usr/include/c++/6/bits/stl_construct.h ****     inline void
  92:/usr/include/c++/6/bits/stl_construct.h ****     _Destroy(_Tp* __pointer)
  93:/usr/include/c++/6/bits/stl_construct.h ****     { __pointer->~_Tp(); }
  94:/usr/include/c++/6/bits/stl_construct.h **** 
  95:/usr/include/c++/6/bits/stl_construct.h ****   template<bool>
  96:/usr/include/c++/6/bits/stl_construct.h ****     struct _Destroy_aux
  97:/usr/include/c++/6/bits/stl_construct.h ****     {
  98:/usr/include/c++/6/bits/stl_construct.h ****       template<typename _ForwardIterator>
  99:/usr/include/c++/6/bits/stl_construct.h ****         static void
 100:/usr/include/c++/6/bits/stl_construct.h ****         __destroy(_ForwardIterator __first, _ForwardIterator __last)
 101:/usr/include/c++/6/bits/stl_construct.h **** 	{
 102:/usr/include/c++/6/bits/stl_construct.h **** 	  for (; __first != __last; ++__first)
 103:/usr/include/c++/6/bits/stl_construct.h **** 	    std::_Destroy(std::__addressof(*__first));
 104:/usr/include/c++/6/bits/stl_construct.h **** 	}
 105:/usr/include/c++/6/bits/stl_construct.h ****     };
 106:/usr/include/c++/6/bits/stl_construct.h **** 
 107:/usr/include/c++/6/bits/stl_construct.h ****   template<>
 108:/usr/include/c++/6/bits/stl_construct.h ****     struct _Destroy_aux<true>
 109:/usr/include/c++/6/bits/stl_construct.h ****     {
 110:/usr/include/c++/6/bits/stl_construct.h ****       template<typename _ForwardIterator>
 111:/usr/include/c++/6/bits/stl_construct.h ****         static void
GAS LISTING /tmp/ccvUPO8Q.s 			page 435


 112:/usr/include/c++/6/bits/stl_construct.h ****         __destroy(_ForwardIterator, _ForwardIterator) { }
 113:/usr/include/c++/6/bits/stl_construct.h ****     };
 114:/usr/include/c++/6/bits/stl_construct.h **** 
 115:/usr/include/c++/6/bits/stl_construct.h ****   /**
 116:/usr/include/c++/6/bits/stl_construct.h ****    * Destroy a range of objects.  If the value_type of the object has
 117:/usr/include/c++/6/bits/stl_construct.h ****    * a trivial destructor, the compiler should optimize all of this
 118:/usr/include/c++/6/bits/stl_construct.h ****    * away, otherwise the objects' destructors must be invoked.
 119:/usr/include/c++/6/bits/stl_construct.h ****    */
 120:/usr/include/c++/6/bits/stl_construct.h ****   template<typename _ForwardIterator>
 121:/usr/include/c++/6/bits/stl_construct.h ****     inline void
 122:/usr/include/c++/6/bits/stl_construct.h ****     _Destroy(_ForwardIterator __first, _ForwardIterator __last)
 123:/usr/include/c++/6/bits/stl_construct.h ****     {
 124:/usr/include/c++/6/bits/stl_construct.h ****       typedef typename iterator_traits<_ForwardIterator>::value_type
 125:/usr/include/c++/6/bits/stl_construct.h ****                        _Value_type;
 126:/usr/include/c++/6/bits/stl_construct.h ****       std::_Destroy_aux<__has_trivial_destructor(_Value_type)>::
 127:/usr/include/c++/6/bits/stl_construct.h **** 	__destroy(__first, __last);
 128:/usr/include/c++/6/bits/stl_construct.h ****     }
 129:/usr/include/c++/6/bits/stl_construct.h **** 
 130:/usr/include/c++/6/bits/stl_construct.h ****   /**
 131:/usr/include/c++/6/bits/stl_construct.h ****    * Destroy a range of objects using the supplied allocator.  For
 132:/usr/include/c++/6/bits/stl_construct.h ****    * nondefault allocators we do not optimize away invocation of 
 133:/usr/include/c++/6/bits/stl_construct.h ****    * destroy() even if _Tp has a trivial destructor.
 134:/usr/include/c++/6/bits/stl_construct.h ****    */
 135:/usr/include/c++/6/bits/stl_construct.h **** 
 136:/usr/include/c++/6/bits/stl_construct.h ****   template<typename _ForwardIterator, typename _Allocator>
 137:/usr/include/c++/6/bits/stl_construct.h ****     void
 138:/usr/include/c++/6/bits/stl_construct.h ****     _Destroy(_ForwardIterator __first, _ForwardIterator __last,
 139:/usr/include/c++/6/bits/stl_construct.h **** 	     _Allocator& __alloc)
 140:/usr/include/c++/6/bits/stl_construct.h ****     {
 141:/usr/include/c++/6/bits/stl_construct.h ****       typedef __gnu_cxx::__alloc_traits<_Allocator> __traits;
 142:/usr/include/c++/6/bits/stl_construct.h ****       for (; __first != __last; ++__first)
 143:/usr/include/c++/6/bits/stl_construct.h **** 	__traits::destroy(__alloc, std::__addressof(*__first));
 144:/usr/include/c++/6/bits/stl_construct.h ****     }
 145:/usr/include/c++/6/bits/stl_construct.h **** 
 146:/usr/include/c++/6/bits/stl_construct.h ****   template<typename _ForwardIterator, typename _Tp>
 147:/usr/include/c++/6/bits/stl_construct.h ****     inline void
 148:/usr/include/c++/6/bits/stl_construct.h ****     _Destroy(_ForwardIterator __first, _ForwardIterator __last,
 9324              		.loc 35 148 0
 9325              		.cfi_startproc
 9326 0000 55       		pushq	%rbp
 9327              		.cfi_def_cfa_offset 16
 9328              		.cfi_offset 6, -16
 9329 0001 4889E5   		movq	%rsp, %rbp
 9330              		.cfi_def_cfa_register 6
 9331 0004 4883EC20 		subq	$32, %rsp
 9332 0008 48897DF8 		movq	%rdi, -8(%rbp)
 9333 000c 488975F0 		movq	%rsi, -16(%rbp)
 9334 0010 488955E8 		movq	%rdx, -24(%rbp)
 149:/usr/include/c++/6/bits/stl_construct.h **** 	     allocator<_Tp>&)
 150:/usr/include/c++/6/bits/stl_construct.h ****     {
 151:/usr/include/c++/6/bits/stl_construct.h ****       _Destroy(__first, __last);
 9335              		.loc 35 151 0
 9336 0014 488B55F0 		movq	-16(%rbp), %rdx
 9337 0018 488B45F8 		movq	-8(%rbp), %rax
 9338 001c 4889D6   		movq	%rdx, %rsi
 9339 001f 4889C7   		movq	%rax, %rdi
 9340 0022 E8000000 		call	_ZSt8_DestroyIPlEvT_S1_
GAS LISTING /tmp/ccvUPO8Q.s 			page 436


 9340      00
 152:/usr/include/c++/6/bits/stl_construct.h ****     }
 9341              		.loc 35 152 0
 9342 0027 90       		nop
 9343 0028 C9       		leave
 9344              		.cfi_def_cfa 7, 8
 9345 0029 C3       		ret
 9346              		.cfi_endproc
 9347              	.LFE12726:
 9349              		.section	.text._ZN5boost13intrusive_ptrIN3pmt8pmt_baseEE4swapERS3_,"axG",@progbits,_ZN5boost13intr
 9350              		.align 2
 9351              		.weak	_ZN5boost13intrusive_ptrIN3pmt8pmt_baseEE4swapERS3_
 9353              	_ZN5boost13intrusive_ptrIN3pmt8pmt_baseEE4swapERS3_:
 9354              	.LFB12727:
 182:/usr/include/boost/smart_ptr/intrusive_ptr.hpp **** 
 183:/usr/include/boost/smart_ptr/intrusive_ptr.hpp ****     T * detach() BOOST_NOEXCEPT
 184:/usr/include/boost/smart_ptr/intrusive_ptr.hpp ****     {
 185:/usr/include/boost/smart_ptr/intrusive_ptr.hpp ****         T * ret = px;
 186:/usr/include/boost/smart_ptr/intrusive_ptr.hpp ****         px = 0;
 187:/usr/include/boost/smart_ptr/intrusive_ptr.hpp ****         return ret;
 188:/usr/include/boost/smart_ptr/intrusive_ptr.hpp ****     }
 189:/usr/include/boost/smart_ptr/intrusive_ptr.hpp **** 
 190:/usr/include/boost/smart_ptr/intrusive_ptr.hpp ****     T & operator*() const
 191:/usr/include/boost/smart_ptr/intrusive_ptr.hpp ****     {
 192:/usr/include/boost/smart_ptr/intrusive_ptr.hpp ****         BOOST_ASSERT( px != 0 );
 193:/usr/include/boost/smart_ptr/intrusive_ptr.hpp ****         return *px;
 194:/usr/include/boost/smart_ptr/intrusive_ptr.hpp ****     }
 195:/usr/include/boost/smart_ptr/intrusive_ptr.hpp **** 
 196:/usr/include/boost/smart_ptr/intrusive_ptr.hpp ****     T * operator->() const
 197:/usr/include/boost/smart_ptr/intrusive_ptr.hpp ****     {
 198:/usr/include/boost/smart_ptr/intrusive_ptr.hpp ****         BOOST_ASSERT( px != 0 );
 199:/usr/include/boost/smart_ptr/intrusive_ptr.hpp ****         return px;
 200:/usr/include/boost/smart_ptr/intrusive_ptr.hpp ****     }
 201:/usr/include/boost/smart_ptr/intrusive_ptr.hpp **** 
 202:/usr/include/boost/smart_ptr/intrusive_ptr.hpp **** // implicit conversion to "bool"
 203:/usr/include/boost/smart_ptr/intrusive_ptr.hpp **** #include <boost/smart_ptr/detail/operator_bool.hpp>
 204:/usr/include/boost/smart_ptr/intrusive_ptr.hpp **** 
 205:/usr/include/boost/smart_ptr/intrusive_ptr.hpp ****     void swap(intrusive_ptr & rhs) BOOST_NOEXCEPT
 9355              		.loc 25 205 0
 9356              		.cfi_startproc
 9357 0000 55       		pushq	%rbp
 9358              		.cfi_def_cfa_offset 16
 9359              		.cfi_offset 6, -16
 9360 0001 4889E5   		movq	%rsp, %rbp
 9361              		.cfi_def_cfa_register 6
 9362 0004 48897DE8 		movq	%rdi, -24(%rbp)
 9363 0008 488975E0 		movq	%rsi, -32(%rbp)
 206:/usr/include/boost/smart_ptr/intrusive_ptr.hpp ****     {
 207:/usr/include/boost/smart_ptr/intrusive_ptr.hpp ****         T * tmp = px;
 9364              		.loc 25 207 0
 9365 000c 488B45E8 		movq	-24(%rbp), %rax
 9366 0010 488B00   		movq	(%rax), %rax
 9367 0013 488945F8 		movq	%rax, -8(%rbp)
 208:/usr/include/boost/smart_ptr/intrusive_ptr.hpp ****         px = rhs.px;
 9368              		.loc 25 208 0
 9369 0017 488B45E0 		movq	-32(%rbp), %rax
 9370 001b 488B10   		movq	(%rax), %rdx
GAS LISTING /tmp/ccvUPO8Q.s 			page 437


 9371 001e 488B45E8 		movq	-24(%rbp), %rax
 9372 0022 488910   		movq	%rdx, (%rax)
 209:/usr/include/boost/smart_ptr/intrusive_ptr.hpp ****         rhs.px = tmp;
 9373              		.loc 25 209 0
 9374 0025 488B45E0 		movq	-32(%rbp), %rax
 9375 0029 488B55F8 		movq	-8(%rbp), %rdx
 9376 002d 488910   		movq	%rdx, (%rax)
 210:/usr/include/boost/smart_ptr/intrusive_ptr.hpp ****     }
 9377              		.loc 25 210 0
 9378 0030 90       		nop
 9379 0031 5D       		popq	%rbp
 9380              		.cfi_def_cfa 7, 8
 9381 0032 C3       		ret
 9382              		.cfi_endproc
 9383              	.LFE12727:
 9385              		.section	.text._ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEE7add_refEv,"a
 9386              		.align 2
 9387              		.weak	_ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEE7add_refEv
 9389              	_ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEE7add_refEv:
 9390              	.LFB12913:
  69:/usr/include/boost/exception/exception.hpp ****                 {
 9391              		.loc 3 69 0
 9392              		.cfi_startproc
 9393 0000 55       		pushq	%rbp
 9394              		.cfi_def_cfa_offset 16
 9395              		.cfi_offset 6, -16
 9396 0001 4889E5   		movq	%rsp, %rbp
 9397              		.cfi_def_cfa_register 6
 9398 0004 4883EC10 		subq	$16, %rsp
 9399 0008 48897DF8 		movq	%rdi, -8(%rbp)
  71:/usr/include/boost/exception/exception.hpp ****                     px_->add_ref();
 9400              		.loc 3 71 0
 9401 000c 488B45F8 		movq	-8(%rbp), %rax
 9402 0010 488B00   		movq	(%rax), %rax
 9403 0013 4885C0   		testq	%rax, %rax
 9404 0016 741D     		je	.L445
  72:/usr/include/boost/exception/exception.hpp ****                 }
 9405              		.loc 3 72 0
 9406 0018 488B45F8 		movq	-8(%rbp), %rax
 9407 001c 488B00   		movq	(%rax), %rax
 9408 001f 488B00   		movq	(%rax), %rax
 9409 0022 4883C018 		addq	$24, %rax
 9410 0026 488B00   		movq	(%rax), %rax
 9411 0029 488B55F8 		movq	-8(%rbp), %rdx
 9412 002d 488B12   		movq	(%rdx), %rdx
 9413 0030 4889D7   		movq	%rdx, %rdi
 9414 0033 FFD0     		call	*%rax
 9415              	.LVL9:
 9416              	.L445:
  73:/usr/include/boost/exception/exception.hpp **** 
 9417              		.loc 3 73 0
 9418 0035 90       		nop
 9419 0036 C9       		leave
 9420              		.cfi_def_cfa 7, 8
 9421 0037 C3       		ret
 9422              		.cfi_endproc
 9423              	.LFE12913:
GAS LISTING /tmp/ccvUPO8Q.s 			page 438


 9425              		.section	.text._ZN5boost16exception_detail10clone_baseC2Ev,"axG",@progbits,_ZN5boost16exception_de
 9426              		.align 2
 9427              		.weak	_ZN5boost16exception_detail10clone_baseC2Ev
 9429              	_ZN5boost16exception_detail10clone_baseC2Ev:
 9430              	.LFB12937:
 415:/usr/include/boost/exception/exception.hpp ****             {
 9431              		.loc 3 415 0
 9432              		.cfi_startproc
 9433 0000 55       		pushq	%rbp
 9434              		.cfi_def_cfa_offset 16
 9435              		.cfi_offset 6, -16
 9436 0001 4889E5   		movq	%rsp, %rbp
 9437              		.cfi_def_cfa_register 6
 9438 0004 48897DF8 		movq	%rdi, -8(%rbp)
 9439              	.LBB90:
 415:/usr/include/boost/exception/exception.hpp ****             {
 9440              		.loc 3 415 0
 9441 0008 488D1500 		leaq	16+_ZTVN5boost16exception_detail10clone_baseE(%rip), %rdx
 9441      000000
 9442 000f 488B45F8 		movq	-8(%rbp), %rax
 9443 0013 488910   		movq	%rdx, (%rax)
 9444              	.LBE90:
 9445 0016 90       		nop
 9446 0017 5D       		popq	%rbp
 9447              		.cfi_def_cfa 7, 8
 9448 0018 C3       		ret
 9449              		.cfi_endproc
 9450              	.LFE12937:
 9452              		.weak	_ZN5boost16exception_detail10clone_baseC1Ev
 9453              		.set	_ZN5boost16exception_detail10clone_baseC1Ev,_ZN5boost16exception_detail10clone_baseC2Ev
 9454              		.section	.text._ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EEC1ERKS2_,"axG",@progbits,
 9455              		.align 2
 9456              		.weak	_ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EEC1ERKS2_
 9458              	_ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EEC1ERKS2_:
 9459              	.LFB12940:
 460:/usr/include/boost/exception/exception.hpp ****             public T,
 461:/usr/include/boost/exception/exception.hpp ****             public virtual clone_base
 462:/usr/include/boost/exception/exception.hpp ****             {
 463:/usr/include/boost/exception/exception.hpp ****             struct clone_tag { };
 464:/usr/include/boost/exception/exception.hpp ****             clone_impl( clone_impl const & x, clone_tag ):
 465:/usr/include/boost/exception/exception.hpp ****                 T(x)
 466:/usr/include/boost/exception/exception.hpp ****                 {
 467:/usr/include/boost/exception/exception.hpp ****                 copy_boost_exception(this,&x);
 468:/usr/include/boost/exception/exception.hpp ****                 }
 469:/usr/include/boost/exception/exception.hpp **** 
 470:/usr/include/boost/exception/exception.hpp ****             public:
 471:/usr/include/boost/exception/exception.hpp **** 
 472:/usr/include/boost/exception/exception.hpp ****             explicit
 473:/usr/include/boost/exception/exception.hpp ****             clone_impl( T const & x ):
 9460              		.loc 3 473 0
 9461              		.cfi_startproc
 9462              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 9463              		.cfi_lsda 0x1b,.LLSDA12940
 9464 0000 55       		pushq	%rbp
 9465              		.cfi_def_cfa_offset 16
 9466              		.cfi_offset 6, -16
 9467 0001 4889E5   		movq	%rsp, %rbp
GAS LISTING /tmp/ccvUPO8Q.s 			page 439


 9468              		.cfi_def_cfa_register 6
 9469 0004 53       		pushq	%rbx
 9470 0005 4883EC18 		subq	$24, %rsp
 9471              		.cfi_offset 3, -24
 9472 0009 48897DE8 		movq	%rdi, -24(%rbp)
 9473 000d 488975E0 		movq	%rsi, -32(%rbp)
 9474              	.LBB91:
 474:/usr/include/boost/exception/exception.hpp ****                 T(x)
 9475              		.loc 3 474 0
 9476 0011 488B45E8 		movq	-24(%rbp), %rax
 9477 0015 4883C030 		addq	$48, %rax
 9478 0019 4889C7   		movq	%rax, %rdi
 9479 001c E8000000 		call	_ZN5boost16exception_detail10clone_baseC2Ev
 9479      00
 9480 0021 488B45E8 		movq	-24(%rbp), %rax
 9481 0025 488B55E0 		movq	-32(%rbp), %rdx
 9482 0029 4889D6   		movq	%rdx, %rsi
 9483 002c 4889C7   		movq	%rax, %rdi
 9484              	.LEHB77:
 9485 002f E8000000 		call	_ZN5boost16exception_detail10bad_alloc_C2ERKS1_
 9485      00
 9486              	.LEHE77:
 9487              		.loc 3 474 0 is_stmt 0 discriminator 5
 9488 0034 488D1500 		leaq	24+_ZTVN5boost16exception_detail10clone_implINS0_10bad_alloc_EEE(%rip), %rdx
 9488      000000
 9489 003b 488B45E8 		movq	-24(%rbp), %rax
 9490 003f 488910   		movq	%rdx, (%rax)
 9491 0042 488D1500 		leaq	72+_ZTVN5boost16exception_detail10clone_implINS0_10bad_alloc_EEE(%rip), %rdx
 9491      000000
 9492 0049 488B45E8 		movq	-24(%rbp), %rax
 9493 004d 48895028 		movq	%rdx, 40(%rax)
 9494 0051 488B45E8 		movq	-24(%rbp), %rax
 9495 0055 488D5030 		leaq	48(%rax), %rdx
 9496 0059 488D0500 		leaq	136+_ZTVN5boost16exception_detail10clone_implINS0_10bad_alloc_EEE(%rip), %rax
 9496      000000
 9497 0060 488902   		movq	%rax, (%rdx)
 475:/usr/include/boost/exception/exception.hpp ****                 {
 476:/usr/include/boost/exception/exception.hpp ****                 copy_boost_exception(this,&x);
 9498              		.loc 3 476 0 is_stmt 1 discriminator 5
 9499 0063 488B55E0 		movq	-32(%rbp), %rdx
 9500 0067 488B45E8 		movq	-24(%rbp), %rax
 9501 006b 4889D6   		movq	%rdx, %rsi
 9502 006e 4889C7   		movq	%rax, %rdi
 9503              	.LEHB78:
 9504 0071 E8000000 		call	_ZN5boost16exception_detail20copy_boost_exceptionEPNS_9exceptionEPKS1_
 9504      00
 9505              	.LEHE78:
 9506              	.LBE91:
 477:/usr/include/boost/exception/exception.hpp ****                 }
 9507              		.loc 3 477 0
 9508 0076 EB2F     		jmp	.L453
 9509              	.L451:
 9510 0078 4889C3   		movq	%rax, %rbx
 9511              	.LBB92:
 474:/usr/include/boost/exception/exception.hpp ****                 T(x)
 9512              		.loc 3 474 0
 9513 007b 488B45E8 		movq	-24(%rbp), %rax
GAS LISTING /tmp/ccvUPO8Q.s 			page 440


 9514 007f 4889C7   		movq	%rax, %rdi
 9515 0082 E8000000 		call	_ZN5boost16exception_detail10bad_alloc_D2Ev
 9515      00
 9516 0087 EB03     		jmp	.L452
 9517              	.L450:
 9518 0089 4889C3   		movq	%rax, %rbx
 9519              	.L452:
 474:/usr/include/boost/exception/exception.hpp ****                 T(x)
 9520              		.loc 3 474 0 is_stmt 0 discriminator 6
 9521 008c 488B45E8 		movq	-24(%rbp), %rax
 9522 0090 4883C030 		addq	$48, %rax
 9523 0094 4889C7   		movq	%rax, %rdi
 9524 0097 E8000000 		call	_ZN5boost16exception_detail10clone_baseD2Ev
 9524      00
 9525 009c 4889D8   		movq	%rbx, %rax
 9526 009f 4889C7   		movq	%rax, %rdi
 9527              	.LEHB79:
 9528 00a2 E8000000 		call	_Unwind_Resume@PLT
 9528      00
 9529              	.LEHE79:
 9530              	.L453:
 9531              	.LBE92:
 9532              		.loc 3 477 0 is_stmt 1
 9533 00a7 4883C418 		addq	$24, %rsp
 9534 00ab 5B       		popq	%rbx
 9535 00ac 5D       		popq	%rbp
 9536              		.cfi_def_cfa 7, 8
 9537 00ad C3       		ret
 9538              		.cfi_endproc
 9539              	.LFE12940:
 9540              		.section	.gcc_except_table
 9541              	.LLSDA12940:
 9542 01a8 FF       		.byte	0xff
 9543 01a9 FF       		.byte	0xff
 9544 01aa 01       		.byte	0x1
 9545 01ab 0E       		.uleb128 .LLSDACSE12940-.LLSDACSB12940
 9546              	.LLSDACSB12940:
 9547 01ac 2F       		.uleb128 .LEHB77-.LFB12940
 9548 01ad 05       		.uleb128 .LEHE77-.LEHB77
 9549 01ae 8901     		.uleb128 .L450-.LFB12940
 9550 01b0 00       		.uleb128 0
 9551 01b1 71       		.uleb128 .LEHB78-.LFB12940
 9552 01b2 05       		.uleb128 .LEHE78-.LEHB78
 9553 01b3 78       		.uleb128 .L451-.LFB12940
 9554 01b4 00       		.uleb128 0
 9555 01b5 A201     		.uleb128 .LEHB79-.LFB12940
 9556 01b7 05       		.uleb128 .LEHE79-.LEHB79
 9557 01b8 00       		.uleb128 0
 9558 01b9 00       		.uleb128 0
 9559              	.LLSDACSE12940:
 9560              		.section	.text._ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EEC1ERKS2_,"axG",@progbits,
 9562              		.section	.text._ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EED1Ev,"axG",@progbits,_ZN5
 9563              		.align 2
 9564              		.weak	_ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EED1Ev
 9566              	_ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EED1Ev:
 9567              	.LFB12943:
 478:/usr/include/boost/exception/exception.hpp **** 
GAS LISTING /tmp/ccvUPO8Q.s 			page 441


 479:/usr/include/boost/exception/exception.hpp ****             ~clone_impl() throw()
 9568              		.loc 3 479 0
 9569              		.cfi_startproc
 9570 0000 55       		pushq	%rbp
 9571              		.cfi_def_cfa_offset 16
 9572              		.cfi_offset 6, -16
 9573 0001 4889E5   		movq	%rsp, %rbp
 9574              		.cfi_def_cfa_register 6
 9575 0004 4883EC10 		subq	$16, %rsp
 9576 0008 48897DF8 		movq	%rdi, -8(%rbp)
 9577              	.LBB93:
 480:/usr/include/boost/exception/exception.hpp ****                 {
 481:/usr/include/boost/exception/exception.hpp ****                 }
 9578              		.loc 3 481 0
 9579 000c 488D1500 		leaq	24+_ZTVN5boost16exception_detail10clone_implINS0_10bad_alloc_EEE(%rip), %rdx
 9579      000000
 9580 0013 488B45F8 		movq	-8(%rbp), %rax
 9581 0017 488910   		movq	%rdx, (%rax)
 9582 001a 488D1500 		leaq	72+_ZTVN5boost16exception_detail10clone_implINS0_10bad_alloc_EEE(%rip), %rdx
 9582      000000
 9583 0021 488B45F8 		movq	-8(%rbp), %rax
 9584 0025 48895028 		movq	%rdx, 40(%rax)
 9585 0029 488B45F8 		movq	-8(%rbp), %rax
 9586 002d 488D5030 		leaq	48(%rax), %rdx
 9587 0031 488D0500 		leaq	136+_ZTVN5boost16exception_detail10clone_implINS0_10bad_alloc_EEE(%rip), %rax
 9587      000000
 9588 0038 488902   		movq	%rax, (%rdx)
 9589 003b 488B45F8 		movq	-8(%rbp), %rax
 9590 003f 4889C7   		movq	%rax, %rdi
 9591 0042 E8000000 		call	_ZN5boost16exception_detail10bad_alloc_D2Ev
 9591      00
 9592 0047 488B45F8 		movq	-8(%rbp), %rax
 9593 004b 4883C030 		addq	$48, %rax
 9594 004f 4889C7   		movq	%rax, %rdi
 9595 0052 E8000000 		call	_ZN5boost16exception_detail10clone_baseD2Ev
 9595      00
 9596              	.LBE93:
 9597 0057 90       		nop
 9598 0058 C9       		leave
 9599              		.cfi_def_cfa 7, 8
 9600 0059 C3       		ret
 9601              		.cfi_endproc
 9602              	.LFE12943:
 9604              		.set	.LTHUNK69,_ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EED1Ev
 9605              		.weak	_ZThn40_N5boost16exception_detail10clone_implINS0_10bad_alloc_EED1Ev
 9607              	_ZThn40_N5boost16exception_detail10clone_implINS0_10bad_alloc_EED1Ev:
 9608              	.LFB15697:
 479:/usr/include/boost/exception/exception.hpp ****                 {
 9609              		.loc 3 479 0
 9610              		.cfi_startproc
 9611 005a 4883EF28 		subq	$40, %rdi
 9612 005e EBA0     		jmp	.LTHUNK69
 9613              		.cfi_endproc
 9614              	.LFE15697:
 9616              		.set	.LTHUNK68,_ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EED1Ev
 9617              		.weak	_ZTv0_n40_N5boost16exception_detail10clone_implINS0_10bad_alloc_EED1Ev
 9619              	_ZTv0_n40_N5boost16exception_detail10clone_implINS0_10bad_alloc_EED1Ev:
GAS LISTING /tmp/ccvUPO8Q.s 			page 442


 9620              	.LFB15698:
 479:/usr/include/boost/exception/exception.hpp ****                 {
 9621              		.loc 3 479 0
 9622              		.cfi_startproc
 9623 0060 4C8B17   		movq	(%rdi), %r10
 9624 0063 49037AD8 		addq	-40(%r10), %rdi
 9625 0067 EB97     		jmp	.LTHUNK68
 9626              		.cfi_endproc
 9627              	.LFE15698:
 9629              		.section	.text._ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EED0Ev,"axG",@progbits,_ZN5
 9630              		.align 2
 9631              		.weak	_ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EED0Ev
 9633              	_ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EED0Ev:
 9634              	.LFB12944:
 479:/usr/include/boost/exception/exception.hpp ****                 {
 9635              		.loc 3 479 0
 9636              		.cfi_startproc
 9637 0000 55       		pushq	%rbp
 9638              		.cfi_def_cfa_offset 16
 9639              		.cfi_offset 6, -16
 9640 0001 4889E5   		movq	%rsp, %rbp
 9641              		.cfi_def_cfa_register 6
 9642 0004 4883EC10 		subq	$16, %rsp
 9643 0008 48897DF8 		movq	%rdi, -8(%rbp)
 9644              		.loc 3 481 0
 9645 000c 488B45F8 		movq	-8(%rbp), %rax
 9646 0010 4889C7   		movq	%rax, %rdi
 9647 0013 E8000000 		call	_ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EED1Ev
 9647      00
 9648 0018 488B45F8 		movq	-8(%rbp), %rax
 9649 001c BE380000 		movl	$56, %esi
 9649      00
 9650 0021 4889C7   		movq	%rax, %rdi
 9651 0024 E8000000 		call	_ZdlPvm@PLT
 9651      00
 9652 0029 C9       		leave
 9653              		.cfi_def_cfa 7, 8
 9654 002a C3       		ret
 9655              		.cfi_endproc
 9656              	.LFE12944:
 9658              		.set	.LTHUNK71,_ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EED0Ev
 9659              		.weak	_ZThn40_N5boost16exception_detail10clone_implINS0_10bad_alloc_EED0Ev
 9661              	_ZThn40_N5boost16exception_detail10clone_implINS0_10bad_alloc_EED0Ev:
 9662              	.LFB15699:
 479:/usr/include/boost/exception/exception.hpp ****                 {
 9663              		.loc 3 479 0
 9664              		.cfi_startproc
 9665 002b 4883EF28 		subq	$40, %rdi
 9666 002f EBCF     		jmp	.LTHUNK71
 9667              		.cfi_endproc
 9668              	.LFE15699:
 9670              		.set	.LTHUNK70,_ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EED0Ev
 9671              		.weak	_ZTv0_n40_N5boost16exception_detail10clone_implINS0_10bad_alloc_EED0Ev
 9673              	_ZTv0_n40_N5boost16exception_detail10clone_implINS0_10bad_alloc_EED0Ev:
 9674              	.LFB15700:
 479:/usr/include/boost/exception/exception.hpp ****                 {
 9675              		.loc 3 479 0
GAS LISTING /tmp/ccvUPO8Q.s 			page 443


 9676              		.cfi_startproc
 9677 0031 4C8B17   		movq	(%rdi), %r10
 9678 0034 49037AD8 		addq	-40(%r10), %rdi
 9679 0038 EBC6     		jmp	.LTHUNK70
 9680              		.cfi_endproc
 9681              	.LFE15700:
 9683              		.section	.text._ZSt4moveIRN5boost10error_infoINS0_15throw_function_EPKcEEEONSt16remove_referenceIT
 9684              		.weak	_ZSt4moveIRN5boost10error_infoINS0_15throw_function_EPKcEEEONSt16remove_referenceIT_E4typeEO
 9686              	_ZSt4moveIRN5boost10error_infoINS0_15throw_function_EPKcEEEONSt16remove_referenceIT_E4typeEOS8_:
 9687              	.LFB12946:
  78:/usr/include/c++/6/bits/move.h **** 
  79:/usr/include/c++/6/bits/move.h ****   /**
  80:/usr/include/c++/6/bits/move.h ****    *  @brief  Forward an rvalue.
  81:/usr/include/c++/6/bits/move.h ****    *  @return The parameter cast to the specified type.
  82:/usr/include/c++/6/bits/move.h ****    *
  83:/usr/include/c++/6/bits/move.h ****    *  This function is used to implement "perfect forwarding".
  84:/usr/include/c++/6/bits/move.h ****    */
  85:/usr/include/c++/6/bits/move.h ****   template<typename _Tp>
  86:/usr/include/c++/6/bits/move.h ****     constexpr _Tp&&
  87:/usr/include/c++/6/bits/move.h ****     forward(typename std::remove_reference<_Tp>::type&& __t) noexcept
  88:/usr/include/c++/6/bits/move.h ****     {
  89:/usr/include/c++/6/bits/move.h ****       static_assert(!std::is_lvalue_reference<_Tp>::value, "template argument"
  90:/usr/include/c++/6/bits/move.h **** 		    " substituting _Tp is an lvalue reference type");
  91:/usr/include/c++/6/bits/move.h ****       return static_cast<_Tp&&>(__t);
  92:/usr/include/c++/6/bits/move.h ****     }
  93:/usr/include/c++/6/bits/move.h **** 
  94:/usr/include/c++/6/bits/move.h ****   /**
  95:/usr/include/c++/6/bits/move.h ****    *  @brief  Convert a value to an rvalue.
  96:/usr/include/c++/6/bits/move.h ****    *  @param  __t  A thing of arbitrary type.
  97:/usr/include/c++/6/bits/move.h ****    *  @return The parameter cast to an rvalue-reference to allow moving it.
  98:/usr/include/c++/6/bits/move.h ****   */
  99:/usr/include/c++/6/bits/move.h ****   template<typename _Tp>
 100:/usr/include/c++/6/bits/move.h ****     constexpr typename std::remove_reference<_Tp>::type&&
 101:/usr/include/c++/6/bits/move.h ****     move(_Tp&& __t) noexcept
 9688              		.loc 33 101 0
 9689              		.cfi_startproc
 9690 0000 55       		pushq	%rbp
 9691              		.cfi_def_cfa_offset 16
 9692              		.cfi_offset 6, -16
 9693 0001 4889E5   		movq	%rsp, %rbp
 9694              		.cfi_def_cfa_register 6
 9695 0004 48897DF8 		movq	%rdi, -8(%rbp)
 102:/usr/include/c++/6/bits/move.h ****     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 9696              		.loc 33 102 0
 9697 0008 488B45F8 		movq	-8(%rbp), %rax
 9698 000c 5D       		popq	%rbp
 9699              		.cfi_def_cfa 7, 8
 9700 000d C3       		ret
 9701              		.cfi_endproc
 9702              	.LFE12946:
 9704              		.section	.text._ZN5boostlsINS_16exception_detail10clone_implINS1_10bad_alloc_EEENS_15throw_functio
 9705              		.weak	_ZN5boostlsINS_16exception_detail10clone_implINS1_10bad_alloc_EEENS_15throw_function_EPKcEEN
 9707              	_ZN5boostlsINS_16exception_detail10clone_implINS1_10bad_alloc_EEENS_15throw_function_EPKcEENS_9enab
 9708              	.LFB12945:
 9709              		.file 36 "/usr/include/boost/exception/info.hpp"
   1:/usr/include/boost/exception/info.hpp **** //Copyright (c) 2006-2010 Emil Dotchevski and Reverge Studios, Inc.
   2:/usr/include/boost/exception/info.hpp **** 
GAS LISTING /tmp/ccvUPO8Q.s 			page 444


   3:/usr/include/boost/exception/info.hpp **** //Distributed under the Boost Software License, Version 1.0. (See accompanying
   4:/usr/include/boost/exception/info.hpp **** //file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
   5:/usr/include/boost/exception/info.hpp **** 
   6:/usr/include/boost/exception/info.hpp **** #ifndef UUID_8D22C4CA9CC811DCAA9133D256D89593
   7:/usr/include/boost/exception/info.hpp **** #define UUID_8D22C4CA9CC811DCAA9133D256D89593
   8:/usr/include/boost/exception/info.hpp **** #if (__GNUC__*100+__GNUC_MINOR__>301) && !defined(BOOST_EXCEPTION_ENABLE_WARNINGS)
   9:/usr/include/boost/exception/info.hpp **** #pragma GCC system_header
  10:/usr/include/boost/exception/info.hpp **** #endif
  11:/usr/include/boost/exception/info.hpp **** #if defined(_MSC_VER) && !defined(BOOST_EXCEPTION_ENABLE_WARNINGS)
  12:/usr/include/boost/exception/info.hpp **** #pragma warning(push,1)
  13:/usr/include/boost/exception/info.hpp **** #endif
  14:/usr/include/boost/exception/info.hpp **** 
  15:/usr/include/boost/exception/info.hpp **** #include <boost/exception/exception.hpp>
  16:/usr/include/boost/exception/info.hpp **** #include <boost/exception/to_string_stub.hpp>
  17:/usr/include/boost/exception/info.hpp **** #include <boost/exception/detail/error_info_impl.hpp>
  18:/usr/include/boost/exception/info.hpp **** #include <boost/shared_ptr.hpp>
  19:/usr/include/boost/exception/info.hpp **** #include <boost/config.hpp>
  20:/usr/include/boost/exception/info.hpp **** #include <map>
  21:/usr/include/boost/exception/info.hpp **** 
  22:/usr/include/boost/exception/info.hpp **** namespace
  23:/usr/include/boost/exception/info.hpp **** boost
  24:/usr/include/boost/exception/info.hpp ****     {
  25:/usr/include/boost/exception/info.hpp ****     template <class Tag,class T>
  26:/usr/include/boost/exception/info.hpp ****     inline
  27:/usr/include/boost/exception/info.hpp ****     std::string
  28:/usr/include/boost/exception/info.hpp ****     error_info_name( error_info<Tag,T> const & x )
  29:/usr/include/boost/exception/info.hpp ****         {
  30:/usr/include/boost/exception/info.hpp ****         return tag_type_name<Tag>();
  31:/usr/include/boost/exception/info.hpp ****         }
  32:/usr/include/boost/exception/info.hpp **** 
  33:/usr/include/boost/exception/info.hpp ****     template <class Tag,class T>
  34:/usr/include/boost/exception/info.hpp ****     inline
  35:/usr/include/boost/exception/info.hpp ****     std::string
  36:/usr/include/boost/exception/info.hpp ****     to_string( error_info<Tag,T> const & x )
  37:/usr/include/boost/exception/info.hpp ****         {
  38:/usr/include/boost/exception/info.hpp ****         return '[' + error_info_name(x) + "] = " + to_string_stub(x.value()) + '\n';
  39:/usr/include/boost/exception/info.hpp ****         }
  40:/usr/include/boost/exception/info.hpp **** 
  41:/usr/include/boost/exception/info.hpp ****     template <class Tag,class T>
  42:/usr/include/boost/exception/info.hpp ****     inline
  43:/usr/include/boost/exception/info.hpp ****     error_info<Tag,T>::
  44:/usr/include/boost/exception/info.hpp ****     error_info( value_type const & value ):
  45:/usr/include/boost/exception/info.hpp ****         value_(value)
  46:/usr/include/boost/exception/info.hpp ****         {
  47:/usr/include/boost/exception/info.hpp ****         }
  48:/usr/include/boost/exception/info.hpp **** 
  49:/usr/include/boost/exception/info.hpp **** #ifndef BOOST_NO_CXX11_RVALUE_REFERENCES
  50:/usr/include/boost/exception/info.hpp **** 	template <class Tag,class T>
  51:/usr/include/boost/exception/info.hpp ****     inline
  52:/usr/include/boost/exception/info.hpp ****     error_info<Tag,T>::
  53:/usr/include/boost/exception/info.hpp **** 	error_info( error_info const & x ):
  54:/usr/include/boost/exception/info.hpp **** 		value_(x.value_)
  55:/usr/include/boost/exception/info.hpp **** 		{
  56:/usr/include/boost/exception/info.hpp **** 		}
  57:/usr/include/boost/exception/info.hpp ****     template <class Tag,class T>
  58:/usr/include/boost/exception/info.hpp ****     inline
  59:/usr/include/boost/exception/info.hpp ****     error_info<Tag,T>::
GAS LISTING /tmp/ccvUPO8Q.s 			page 445


  60:/usr/include/boost/exception/info.hpp **** 	error_info( value_type && value ) BOOST_NOEXCEPT_IF(BOOST_NOEXCEPT_EXPR(value_type(std::move(value
  61:/usr/include/boost/exception/info.hpp **** 		value_(std::move(value))
  62:/usr/include/boost/exception/info.hpp **** 		{
  63:/usr/include/boost/exception/info.hpp **** 		}
  64:/usr/include/boost/exception/info.hpp **** 	template <class Tag,class T>
  65:/usr/include/boost/exception/info.hpp ****     inline
  66:/usr/include/boost/exception/info.hpp ****     error_info<Tag,T>::
  67:/usr/include/boost/exception/info.hpp **** 	error_info( error_info && x ) BOOST_NOEXCEPT_IF(BOOST_NOEXCEPT_EXPR(value_type(std::move(x.value_)
  68:/usr/include/boost/exception/info.hpp **** 		value_(std::move(x.value_))
  69:/usr/include/boost/exception/info.hpp **** 		{
  70:/usr/include/boost/exception/info.hpp **** 		}
  71:/usr/include/boost/exception/info.hpp **** #endif
  72:/usr/include/boost/exception/info.hpp **** 
  73:/usr/include/boost/exception/info.hpp ****     template <class Tag,class T>
  74:/usr/include/boost/exception/info.hpp ****     inline
  75:/usr/include/boost/exception/info.hpp ****     error_info<Tag,T>::
  76:/usr/include/boost/exception/info.hpp ****     ~error_info() throw()
  77:/usr/include/boost/exception/info.hpp ****         {
  78:/usr/include/boost/exception/info.hpp ****         }
  79:/usr/include/boost/exception/info.hpp **** 
  80:/usr/include/boost/exception/info.hpp ****     template <class Tag,class T>
  81:/usr/include/boost/exception/info.hpp ****     inline
  82:/usr/include/boost/exception/info.hpp ****     std::string
  83:/usr/include/boost/exception/info.hpp ****     error_info<Tag,T>::
  84:/usr/include/boost/exception/info.hpp ****     name_value_string() const
  85:/usr/include/boost/exception/info.hpp ****         {
  86:/usr/include/boost/exception/info.hpp ****         return to_string_stub(*this);
  87:/usr/include/boost/exception/info.hpp ****         }
  88:/usr/include/boost/exception/info.hpp **** 
  89:/usr/include/boost/exception/info.hpp ****     namespace
  90:/usr/include/boost/exception/info.hpp ****     exception_detail
  91:/usr/include/boost/exception/info.hpp ****         {
  92:/usr/include/boost/exception/info.hpp ****         class
  93:/usr/include/boost/exception/info.hpp ****         error_info_container_impl:
  94:/usr/include/boost/exception/info.hpp ****             public error_info_container
  95:/usr/include/boost/exception/info.hpp ****             {
  96:/usr/include/boost/exception/info.hpp ****             public:
  97:/usr/include/boost/exception/info.hpp **** 
  98:/usr/include/boost/exception/info.hpp ****             error_info_container_impl():
  99:/usr/include/boost/exception/info.hpp ****                 count_(0)
 100:/usr/include/boost/exception/info.hpp ****                 {
 101:/usr/include/boost/exception/info.hpp ****                 }
 102:/usr/include/boost/exception/info.hpp **** 
 103:/usr/include/boost/exception/info.hpp ****             ~error_info_container_impl() throw()
 104:/usr/include/boost/exception/info.hpp ****                 {
 105:/usr/include/boost/exception/info.hpp ****                 }
 106:/usr/include/boost/exception/info.hpp **** 
 107:/usr/include/boost/exception/info.hpp ****             void
 108:/usr/include/boost/exception/info.hpp ****             set( shared_ptr<error_info_base> const & x, type_info_ const & typeid_ )
 109:/usr/include/boost/exception/info.hpp ****                 {
 110:/usr/include/boost/exception/info.hpp ****                 BOOST_ASSERT(x);
 111:/usr/include/boost/exception/info.hpp ****                 info_[typeid_] = x;
 112:/usr/include/boost/exception/info.hpp ****                 diagnostic_info_str_.clear();
 113:/usr/include/boost/exception/info.hpp ****                 }
 114:/usr/include/boost/exception/info.hpp **** 
 115:/usr/include/boost/exception/info.hpp ****             shared_ptr<error_info_base>
 116:/usr/include/boost/exception/info.hpp ****             get( type_info_ const & ti ) const
GAS LISTING /tmp/ccvUPO8Q.s 			page 446


 117:/usr/include/boost/exception/info.hpp ****                 {
 118:/usr/include/boost/exception/info.hpp ****                 error_info_map::const_iterator i=info_.find(ti);
 119:/usr/include/boost/exception/info.hpp ****                 if( info_.end()!=i )
 120:/usr/include/boost/exception/info.hpp ****                     {
 121:/usr/include/boost/exception/info.hpp ****                     shared_ptr<error_info_base> const & p = i->second;
 122:/usr/include/boost/exception/info.hpp **** #ifndef BOOST_NO_RTTI
 123:/usr/include/boost/exception/info.hpp ****                     BOOST_ASSERT( *BOOST_EXCEPTION_DYNAMIC_TYPEID(*p).type_==*ti.type_ );
 124:/usr/include/boost/exception/info.hpp **** #endif
 125:/usr/include/boost/exception/info.hpp ****                     return p;
 126:/usr/include/boost/exception/info.hpp ****                     }
 127:/usr/include/boost/exception/info.hpp ****                 return shared_ptr<error_info_base>();
 128:/usr/include/boost/exception/info.hpp ****                 }
 129:/usr/include/boost/exception/info.hpp **** 
 130:/usr/include/boost/exception/info.hpp ****             char const *
 131:/usr/include/boost/exception/info.hpp ****             diagnostic_information( char const * header ) const
 132:/usr/include/boost/exception/info.hpp ****                 {
 133:/usr/include/boost/exception/info.hpp ****                 if( header )
 134:/usr/include/boost/exception/info.hpp ****                     {
 135:/usr/include/boost/exception/info.hpp ****                     std::ostringstream tmp;
 136:/usr/include/boost/exception/info.hpp ****                     tmp << header;
 137:/usr/include/boost/exception/info.hpp ****                     for( error_info_map::const_iterator i=info_.begin(),end=info_.end(); i!=end; ++
 138:/usr/include/boost/exception/info.hpp ****                         {
 139:/usr/include/boost/exception/info.hpp ****                         error_info_base const & x = *i->second;
 140:/usr/include/boost/exception/info.hpp ****                         tmp << x.name_value_string();
 141:/usr/include/boost/exception/info.hpp ****                         }
 142:/usr/include/boost/exception/info.hpp ****                     tmp.str().swap(diagnostic_info_str_);
 143:/usr/include/boost/exception/info.hpp ****                     }
 144:/usr/include/boost/exception/info.hpp ****                 return diagnostic_info_str_.c_str();
 145:/usr/include/boost/exception/info.hpp ****                 }
 146:/usr/include/boost/exception/info.hpp **** 
 147:/usr/include/boost/exception/info.hpp ****             private:
 148:/usr/include/boost/exception/info.hpp **** 
 149:/usr/include/boost/exception/info.hpp ****             friend class boost::exception;
 150:/usr/include/boost/exception/info.hpp **** 
 151:/usr/include/boost/exception/info.hpp ****             typedef std::map< type_info_, shared_ptr<error_info_base> > error_info_map;
 152:/usr/include/boost/exception/info.hpp ****             error_info_map info_;
 153:/usr/include/boost/exception/info.hpp ****             mutable std::string diagnostic_info_str_;
 154:/usr/include/boost/exception/info.hpp ****             mutable int count_;
 155:/usr/include/boost/exception/info.hpp **** 
 156:/usr/include/boost/exception/info.hpp ****             error_info_container_impl( error_info_container_impl const & );
 157:/usr/include/boost/exception/info.hpp ****             error_info_container_impl & operator=( error_info_container const & );
 158:/usr/include/boost/exception/info.hpp **** 
 159:/usr/include/boost/exception/info.hpp ****             void
 160:/usr/include/boost/exception/info.hpp ****             add_ref() const
 161:/usr/include/boost/exception/info.hpp ****                 {
 162:/usr/include/boost/exception/info.hpp ****                 ++count_;
 163:/usr/include/boost/exception/info.hpp ****                 }
 164:/usr/include/boost/exception/info.hpp **** 
 165:/usr/include/boost/exception/info.hpp ****             bool
 166:/usr/include/boost/exception/info.hpp ****             release() const
 167:/usr/include/boost/exception/info.hpp ****                 {
 168:/usr/include/boost/exception/info.hpp ****                 if( --count_ )
 169:/usr/include/boost/exception/info.hpp ****                     return false;
 170:/usr/include/boost/exception/info.hpp ****                 else
 171:/usr/include/boost/exception/info.hpp ****                     {
 172:/usr/include/boost/exception/info.hpp ****                     delete this;
 173:/usr/include/boost/exception/info.hpp ****                     return true;
GAS LISTING /tmp/ccvUPO8Q.s 			page 447


 174:/usr/include/boost/exception/info.hpp ****                     }
 175:/usr/include/boost/exception/info.hpp ****                 }
 176:/usr/include/boost/exception/info.hpp **** 
 177:/usr/include/boost/exception/info.hpp ****             refcount_ptr<error_info_container>
 178:/usr/include/boost/exception/info.hpp ****             clone() const
 179:/usr/include/boost/exception/info.hpp ****                 {
 180:/usr/include/boost/exception/info.hpp ****                 refcount_ptr<error_info_container> p;
 181:/usr/include/boost/exception/info.hpp ****                 error_info_container_impl * c=new error_info_container_impl;
 182:/usr/include/boost/exception/info.hpp ****                 p.adopt(c);
 183:/usr/include/boost/exception/info.hpp ****                 c->info_ = info_;
 184:/usr/include/boost/exception/info.hpp ****                 return p;
 185:/usr/include/boost/exception/info.hpp ****                 }
 186:/usr/include/boost/exception/info.hpp ****             };
 187:/usr/include/boost/exception/info.hpp **** 
 188:/usr/include/boost/exception/info.hpp ****         template <class E,class Tag,class T>
 189:/usr/include/boost/exception/info.hpp ****         inline
 190:/usr/include/boost/exception/info.hpp ****         E const &
 191:/usr/include/boost/exception/info.hpp ****         set_info( E const & x, error_info<Tag,T> const & v )
 192:/usr/include/boost/exception/info.hpp ****             {
 193:/usr/include/boost/exception/info.hpp ****             typedef error_info<Tag,T> error_info_tag_t;
 194:/usr/include/boost/exception/info.hpp ****             shared_ptr<error_info_tag_t> p( new error_info_tag_t(v) );
 195:/usr/include/boost/exception/info.hpp ****             exception_detail::error_info_container * c=x.data_.get();
 196:/usr/include/boost/exception/info.hpp ****             if( !c )
 197:/usr/include/boost/exception/info.hpp ****                 x.data_.adopt(c=new exception_detail::error_info_container_impl);
 198:/usr/include/boost/exception/info.hpp ****             c->set(p,BOOST_EXCEPTION_STATIC_TYPEID(error_info_tag_t));
 199:/usr/include/boost/exception/info.hpp ****             return x;
 200:/usr/include/boost/exception/info.hpp ****             }
 201:/usr/include/boost/exception/info.hpp **** 
 202:/usr/include/boost/exception/info.hpp **** #ifndef BOOST_NO_CXX11_RVALUE_REFERENCES
 203:/usr/include/boost/exception/info.hpp ****         template <class E,class Tag,class T>
 204:/usr/include/boost/exception/info.hpp ****         E const & set_info( E const &, error_info<Tag,T> && );
 205:/usr/include/boost/exception/info.hpp **** 		template <class T>
 206:/usr/include/boost/exception/info.hpp **** 		class set_info_rv;
 207:/usr/include/boost/exception/info.hpp **** 		template <class Tag,class T>
 208:/usr/include/boost/exception/info.hpp **** 		class
 209:/usr/include/boost/exception/info.hpp **** 		set_info_rv<error_info<Tag,T> >
 210:/usr/include/boost/exception/info.hpp **** 			{
 211:/usr/include/boost/exception/info.hpp **** 			template <class E,class Tag1,class T1>
 212:/usr/include/boost/exception/info.hpp **** 			friend E const & set_info( E const &, error_info<Tag1,T1> && );
 213:/usr/include/boost/exception/info.hpp **** 			template <class E>
 214:/usr/include/boost/exception/info.hpp **** 			static
 215:/usr/include/boost/exception/info.hpp **** 			E const &
 216:/usr/include/boost/exception/info.hpp **** 			set( E const & x, error_info<Tag,T> && v )
 217:/usr/include/boost/exception/info.hpp **** 				{
 218:/usr/include/boost/exception/info.hpp **** 				typedef error_info<Tag,T> error_info_tag_t;
 219:/usr/include/boost/exception/info.hpp **** 				shared_ptr<error_info_tag_t> p( new error_info_tag_t(std::move(v)) );
 220:/usr/include/boost/exception/info.hpp **** 				exception_detail::error_info_container * c=x.data_.get();
 221:/usr/include/boost/exception/info.hpp **** 				if( !c )
 222:/usr/include/boost/exception/info.hpp **** 					x.data_.adopt(c=new exception_detail::error_info_container_impl);
 223:/usr/include/boost/exception/info.hpp **** 				c->set(p,BOOST_EXCEPTION_STATIC_TYPEID(error_info_tag_t));
 224:/usr/include/boost/exception/info.hpp **** 				return x;
 225:/usr/include/boost/exception/info.hpp **** 				}
 226:/usr/include/boost/exception/info.hpp **** 			};
 227:/usr/include/boost/exception/info.hpp **** 		template <>
 228:/usr/include/boost/exception/info.hpp **** 		class
 229:/usr/include/boost/exception/info.hpp **** 		set_info_rv<throw_function>
 230:/usr/include/boost/exception/info.hpp **** 			{
GAS LISTING /tmp/ccvUPO8Q.s 			page 448


 231:/usr/include/boost/exception/info.hpp **** 			template <class E,class Tag1,class T1>
 232:/usr/include/boost/exception/info.hpp **** 			friend E const & set_info( E const &, error_info<Tag1,T1> && );
 233:/usr/include/boost/exception/info.hpp **** 			template <class E>
 234:/usr/include/boost/exception/info.hpp **** 			static
 235:/usr/include/boost/exception/info.hpp **** 			E const &
 236:/usr/include/boost/exception/info.hpp **** 			set( E const & x, throw_function && y )
 237:/usr/include/boost/exception/info.hpp **** 				{
 238:/usr/include/boost/exception/info.hpp **** 				x.throw_function_=y.v_;
 239:/usr/include/boost/exception/info.hpp **** 				return x;
 240:/usr/include/boost/exception/info.hpp **** 				}
 241:/usr/include/boost/exception/info.hpp **** 			};
 242:/usr/include/boost/exception/info.hpp **** 		template <>
 243:/usr/include/boost/exception/info.hpp **** 		class
 244:/usr/include/boost/exception/info.hpp **** 		set_info_rv<throw_file>
 245:/usr/include/boost/exception/info.hpp **** 			{
 246:/usr/include/boost/exception/info.hpp **** 			template <class E,class Tag1,class T1>
 247:/usr/include/boost/exception/info.hpp **** 			friend E const & set_info( E const &, error_info<Tag1,T1> && );
 248:/usr/include/boost/exception/info.hpp **** 			template <class E>
 249:/usr/include/boost/exception/info.hpp **** 			static
 250:/usr/include/boost/exception/info.hpp **** 			E const &
 251:/usr/include/boost/exception/info.hpp **** 			set( E const & x, throw_file && y )
 252:/usr/include/boost/exception/info.hpp **** 				{
 253:/usr/include/boost/exception/info.hpp **** 				x.throw_file_=y.v_;
 254:/usr/include/boost/exception/info.hpp **** 				return x;
 255:/usr/include/boost/exception/info.hpp **** 				}
 256:/usr/include/boost/exception/info.hpp **** 			};
 257:/usr/include/boost/exception/info.hpp **** 		template <>
 258:/usr/include/boost/exception/info.hpp **** 		class
 259:/usr/include/boost/exception/info.hpp **** 		set_info_rv<throw_line>
 260:/usr/include/boost/exception/info.hpp **** 			{
 261:/usr/include/boost/exception/info.hpp **** 			template <class E,class Tag1,class T1>
 262:/usr/include/boost/exception/info.hpp **** 			friend E const & set_info( E const &, error_info<Tag1,T1> && );
 263:/usr/include/boost/exception/info.hpp **** 			template <class E>
 264:/usr/include/boost/exception/info.hpp **** 			static
 265:/usr/include/boost/exception/info.hpp **** 			E const &
 266:/usr/include/boost/exception/info.hpp **** 			set( E const & x, throw_line && y )
 267:/usr/include/boost/exception/info.hpp **** 				{
 268:/usr/include/boost/exception/info.hpp **** 				x.throw_line_=y.v_;
 269:/usr/include/boost/exception/info.hpp **** 				return x;
 270:/usr/include/boost/exception/info.hpp **** 				}
 271:/usr/include/boost/exception/info.hpp **** 			};
 272:/usr/include/boost/exception/info.hpp ****         template <class E,class Tag,class T>
 273:/usr/include/boost/exception/info.hpp ****         inline
 274:/usr/include/boost/exception/info.hpp ****         E const &
 275:/usr/include/boost/exception/info.hpp ****         set_info( E const & x, error_info<Tag,T> && v )
 276:/usr/include/boost/exception/info.hpp ****             {
 277:/usr/include/boost/exception/info.hpp **** 			return set_info_rv<error_info<Tag,T> >::template set<E>(x,std::move(v));
 278:/usr/include/boost/exception/info.hpp ****             }
 279:/usr/include/boost/exception/info.hpp **** #endif
 280:/usr/include/boost/exception/info.hpp **** 
 281:/usr/include/boost/exception/info.hpp ****         template <class T>
 282:/usr/include/boost/exception/info.hpp ****         struct
 283:/usr/include/boost/exception/info.hpp ****         derives_boost_exception
 284:/usr/include/boost/exception/info.hpp ****             {
 285:/usr/include/boost/exception/info.hpp ****             enum e { value = (sizeof(dispatch_boost_exception((T*)0))==sizeof(large_size)) };
 286:/usr/include/boost/exception/info.hpp ****             };
 287:/usr/include/boost/exception/info.hpp ****         }
GAS LISTING /tmp/ccvUPO8Q.s 			page 449


 288:/usr/include/boost/exception/info.hpp **** 
 289:/usr/include/boost/exception/info.hpp ****     template <class E,class Tag,class T>
 290:/usr/include/boost/exception/info.hpp ****     inline
 291:/usr/include/boost/exception/info.hpp ****     typename enable_if<exception_detail::derives_boost_exception<E>,E const &>::type
 292:/usr/include/boost/exception/info.hpp ****     operator<<( E const & x, error_info<Tag,T> const & v )
 293:/usr/include/boost/exception/info.hpp ****         {
 294:/usr/include/boost/exception/info.hpp ****         return exception_detail::set_info(x,v);
 295:/usr/include/boost/exception/info.hpp ****         }
 296:/usr/include/boost/exception/info.hpp **** 
 297:/usr/include/boost/exception/info.hpp **** #ifndef BOOST_NO_CXX11_RVALUE_REFERENCES
 298:/usr/include/boost/exception/info.hpp ****     template <class E,class Tag,class T>
 299:/usr/include/boost/exception/info.hpp ****     inline
 300:/usr/include/boost/exception/info.hpp ****     typename enable_if<exception_detail::derives_boost_exception<E>,E const &>::type
 301:/usr/include/boost/exception/info.hpp ****     operator<<( E const & x, error_info<Tag,T> && v )
 9710              		.loc 36 301 0
 9711              		.cfi_startproc
 9712 0000 55       		pushq	%rbp
 9713              		.cfi_def_cfa_offset 16
 9714              		.cfi_offset 6, -16
 9715 0001 4889E5   		movq	%rsp, %rbp
 9716              		.cfi_def_cfa_register 6
 9717 0004 4883EC10 		subq	$16, %rsp
 9718 0008 48897DF8 		movq	%rdi, -8(%rbp)
 9719 000c 488975F0 		movq	%rsi, -16(%rbp)
 302:/usr/include/boost/exception/info.hpp ****         {
 303:/usr/include/boost/exception/info.hpp ****         return exception_detail::set_info(x,std::move(v));
 9720              		.loc 36 303 0
 9721 0010 488B45F0 		movq	-16(%rbp), %rax
 9722 0014 4889C7   		movq	%rax, %rdi
 9723 0017 E8000000 		call	_ZSt4moveIRN5boost10error_infoINS0_15throw_function_EPKcEEEONSt16remove_referenceIT_E4typeEOS
 9723      00
 9724 001c 4889C2   		movq	%rax, %rdx
 9725 001f 488B45F8 		movq	-8(%rbp), %rax
 9726 0023 4889D6   		movq	%rdx, %rsi
 9727 0026 4889C7   		movq	%rax, %rdi
 9728 0029 E8000000 		call	_ZN5boost16exception_detail8set_infoINS0_10clone_implINS0_10bad_alloc_EEENS_15throw_function_
 9728      00
 304:/usr/include/boost/exception/info.hpp ****         }
 9729              		.loc 36 304 0
 9730 002e C9       		leave
 9731              		.cfi_def_cfa 7, 8
 9732 002f C3       		ret
 9733              		.cfi_endproc
 9734              	.LFE12945:
 9736              		.section	.text._ZSt4moveIRN5boost10error_infoINS0_11throw_file_EPKcEEEONSt16remove_referenceIT_E4t
 9737              		.weak	_ZSt4moveIRN5boost10error_infoINS0_11throw_file_EPKcEEEONSt16remove_referenceIT_E4typeEOS8_
 9739              	_ZSt4moveIRN5boost10error_infoINS0_11throw_file_EPKcEEEONSt16remove_referenceIT_E4typeEOS8_:
 9740              	.LFB12948:
 101:/usr/include/c++/6/bits/move.h ****     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 9741              		.loc 33 101 0
 9742              		.cfi_startproc
 9743 0000 55       		pushq	%rbp
 9744              		.cfi_def_cfa_offset 16
 9745              		.cfi_offset 6, -16
 9746 0001 4889E5   		movq	%rsp, %rbp
 9747              		.cfi_def_cfa_register 6
 9748 0004 48897DF8 		movq	%rdi, -8(%rbp)
GAS LISTING /tmp/ccvUPO8Q.s 			page 450


 9749              		.loc 33 102 0
 9750 0008 488B45F8 		movq	-8(%rbp), %rax
 9751 000c 5D       		popq	%rbp
 9752              		.cfi_def_cfa 7, 8
 9753 000d C3       		ret
 9754              		.cfi_endproc
 9755              	.LFE12948:
 9757              		.section	.text._ZN5boostlsINS_16exception_detail10clone_implINS1_10bad_alloc_EEENS_11throw_file_EP
 9758              		.weak	_ZN5boostlsINS_16exception_detail10clone_implINS1_10bad_alloc_EEENS_11throw_file_EPKcEENS_9e
 9760              	_ZN5boostlsINS_16exception_detail10clone_implINS1_10bad_alloc_EEENS_11throw_file_EPKcEENS_9enable_i
 9761              	.LFB12947:
 301:/usr/include/boost/exception/info.hpp ****         {
 9762              		.loc 36 301 0
 9763              		.cfi_startproc
 9764 0000 55       		pushq	%rbp
 9765              		.cfi_def_cfa_offset 16
 9766              		.cfi_offset 6, -16
 9767 0001 4889E5   		movq	%rsp, %rbp
 9768              		.cfi_def_cfa_register 6
 9769 0004 4883EC10 		subq	$16, %rsp
 9770 0008 48897DF8 		movq	%rdi, -8(%rbp)
 9771 000c 488975F0 		movq	%rsi, -16(%rbp)
 303:/usr/include/boost/exception/info.hpp ****         }
 9772              		.loc 36 303 0
 9773 0010 488B45F0 		movq	-16(%rbp), %rax
 9774 0014 4889C7   		movq	%rax, %rdi
 9775 0017 E8000000 		call	_ZSt4moveIRN5boost10error_infoINS0_11throw_file_EPKcEEEONSt16remove_referenceIT_E4typeEOS8_
 9775      00
 9776 001c 4889C2   		movq	%rax, %rdx
 9777 001f 488B45F8 		movq	-8(%rbp), %rax
 9778 0023 4889D6   		movq	%rdx, %rsi
 9779 0026 4889C7   		movq	%rax, %rdi
 9780 0029 E8000000 		call	_ZN5boost16exception_detail8set_infoINS0_10clone_implINS0_10bad_alloc_EEENS_11throw_file_EPKc
 9780      00
 9781              		.loc 36 304 0
 9782 002e C9       		leave
 9783              		.cfi_def_cfa 7, 8
 9784 002f C3       		ret
 9785              		.cfi_endproc
 9786              	.LFE12947:
 9788              		.section	.text._ZSt4moveIRN5boost10error_infoINS0_11throw_line_EiEEEONSt16remove_referenceIT_E4typ
 9789              		.weak	_ZSt4moveIRN5boost10error_infoINS0_11throw_line_EiEEEONSt16remove_referenceIT_E4typeEOS6_
 9791              	_ZSt4moveIRN5boost10error_infoINS0_11throw_line_EiEEEONSt16remove_referenceIT_E4typeEOS6_:
 9792              	.LFB12950:
 101:/usr/include/c++/6/bits/move.h ****     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 9793              		.loc 33 101 0
 9794              		.cfi_startproc
 9795 0000 55       		pushq	%rbp
 9796              		.cfi_def_cfa_offset 16
 9797              		.cfi_offset 6, -16
 9798 0001 4889E5   		movq	%rsp, %rbp
 9799              		.cfi_def_cfa_register 6
 9800 0004 48897DF8 		movq	%rdi, -8(%rbp)
 9801              		.loc 33 102 0
 9802 0008 488B45F8 		movq	-8(%rbp), %rax
 9803 000c 5D       		popq	%rbp
 9804              		.cfi_def_cfa 7, 8
GAS LISTING /tmp/ccvUPO8Q.s 			page 451


 9805 000d C3       		ret
 9806              		.cfi_endproc
 9807              	.LFE12950:
 9809              		.section	.text._ZN5boostlsINS_16exception_detail10clone_implINS1_10bad_alloc_EEENS_11throw_line_Ei
 9810              		.weak	_ZN5boostlsINS_16exception_detail10clone_implINS1_10bad_alloc_EEENS_11throw_line_EiEENS_9ena
 9812              	_ZN5boostlsINS_16exception_detail10clone_implINS1_10bad_alloc_EEENS_11throw_line_EiEENS_9enable_ifI
 9813              	.LFB12949:
 301:/usr/include/boost/exception/info.hpp ****         {
 9814              		.loc 36 301 0
 9815              		.cfi_startproc
 9816 0000 55       		pushq	%rbp
 9817              		.cfi_def_cfa_offset 16
 9818              		.cfi_offset 6, -16
 9819 0001 4889E5   		movq	%rsp, %rbp
 9820              		.cfi_def_cfa_register 6
 9821 0004 4883EC10 		subq	$16, %rsp
 9822 0008 48897DF8 		movq	%rdi, -8(%rbp)
 9823 000c 488975F0 		movq	%rsi, -16(%rbp)
 303:/usr/include/boost/exception/info.hpp ****         }
 9824              		.loc 36 303 0
 9825 0010 488B45F0 		movq	-16(%rbp), %rax
 9826 0014 4889C7   		movq	%rax, %rdi
 9827 0017 E8000000 		call	_ZSt4moveIRN5boost10error_infoINS0_11throw_line_EiEEEONSt16remove_referenceIT_E4typeEOS6_
 9827      00
 9828 001c 4889C2   		movq	%rax, %rdx
 9829 001f 488B45F8 		movq	-8(%rbp), %rax
 9830 0023 4889D6   		movq	%rdx, %rsi
 9831 0026 4889C7   		movq	%rax, %rdi
 9832 0029 E8000000 		call	_ZN5boost16exception_detail8set_infoINS0_10clone_implINS0_10bad_alloc_EEENS_11throw_line_EiEE
 9832      00
 9833              		.loc 36 304 0
 9834 002e C9       		leave
 9835              		.cfi_def_cfa 7, 8
 9836 002f C3       		ret
 9837              		.cfi_endproc
 9838              	.LFE12949:
 9840              		.section	.text._ZN5boost10shared_ptrIKNS_16exception_detail10clone_baseEEC2INS1_10clone_implINS1_1
 9841              		.align 2
 9842              		.weak	_ZN5boost10shared_ptrIKNS_16exception_detail10clone_baseEEC2INS1_10clone_implINS1_10bad_allo
 9844              	_ZN5boost10shared_ptrIKNS_16exception_detail10clone_baseEEC2INS1_10clone_implINS1_10bad_alloc_EEEEE
 9845              	.LFB12952:
 360:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     {
 9846              		.loc 7 360 0
 9847              		.cfi_startproc
 9848              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 9849              		.cfi_lsda 0x1b,.LLSDA12952
 9850 0000 55       		pushq	%rbp
 9851              		.cfi_def_cfa_offset 16
 9852              		.cfi_offset 6, -16
 9853 0001 4889E5   		movq	%rsp, %rbp
 9854              		.cfi_def_cfa_register 6
 9855 0004 53       		pushq	%rbx
 9856 0005 4883EC18 		subq	$24, %rsp
 9857              		.cfi_offset 3, -24
 9858 0009 48897DE8 		movq	%rdi, -24(%rbp)
 9859 000d 488975E0 		movq	%rsi, -32(%rbp)
 9860              	.LBB94:
GAS LISTING /tmp/ccvUPO8Q.s 			page 452


 360:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     {
 9861              		.loc 7 360 0
 9862 0011 48837DE0 		cmpq	$0, -32(%rbp)
 9862      00
 9863 0016 741A     		je	.L469
 360:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     {
 9864              		.loc 7 360 0 is_stmt 0 discriminator 1
 9865 0018 488B45E0 		movq	-32(%rbp), %rax
 9866 001c 488B00   		movq	(%rax), %rax
 9867 001f 4883E818 		subq	$24, %rax
 9868 0023 488B00   		movq	(%rax), %rax
 9869 0026 4889C2   		movq	%rax, %rdx
 9870 0029 488B45E0 		movq	-32(%rbp), %rax
 9871 002d 4801C2   		addq	%rax, %rdx
 9872 0030 EB05     		jmp	.L470
 9873              	.L469:
 360:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     {
 9874              		.loc 7 360 0 discriminator 2
 9875 0032 BA000000 		movl	$0, %edx
 9875      00
 9876              	.L470:
 360:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     {
 9877              		.loc 7 360 0 discriminator 4
 9878 0037 488B45E8 		movq	-24(%rbp), %rax
 9879 003b 488910   		movq	%rdx, (%rax)
 9880 003e 488B45E8 		movq	-24(%rbp), %rax
 9881 0042 4883C008 		addq	$8, %rax
 9882 0046 4889C7   		movq	%rax, %rdi
 9883 0049 E8000000 		call	_ZN5boost6detail12shared_countC1Ev
 9883      00
 362:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     }
 9884              		.loc 7 362 0 is_stmt 1 discriminator 4
 9885 004e 488B45E8 		movq	-24(%rbp), %rax
 9886 0052 488D5008 		leaq	8(%rax), %rdx
 9887 0056 488B4DE0 		movq	-32(%rbp), %rcx
 9888 005a 488B45E8 		movq	-24(%rbp), %rax
 9889 005e 4889CE   		movq	%rcx, %rsi
 9890 0061 4889C7   		movq	%rax, %rdi
 9891              	.LEHB80:
 9892 0064 E8000000 		call	_ZN5boost6detail20sp_pointer_constructIKNS_16exception_detail10clone_baseENS2_10clone_implINS
 9892      00
 9893              	.LEHE80:
 9894              	.LBE94:
 363:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 9895              		.loc 7 363 0
 9896 0069 EB1E     		jmp	.L473
 9897              	.L472:
 9898 006b 4889C3   		movq	%rax, %rbx
 9899              	.LBB95:
 360:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     {
 9900              		.loc 7 360 0
 9901 006e 488B45E8 		movq	-24(%rbp), %rax
 9902 0072 4883C008 		addq	$8, %rax
 9903 0076 4889C7   		movq	%rax, %rdi
 9904 0079 E8000000 		call	_ZN5boost6detail12shared_countD1Ev
 9904      00
 9905 007e 4889D8   		movq	%rbx, %rax
GAS LISTING /tmp/ccvUPO8Q.s 			page 453


 9906 0081 4889C7   		movq	%rax, %rdi
 9907              	.LEHB81:
 9908 0084 E8000000 		call	_Unwind_Resume@PLT
 9908      00
 9909              	.LEHE81:
 9910              	.L473:
 9911              	.LBE95:
 363:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 9912              		.loc 7 363 0
 9913 0089 4883C418 		addq	$24, %rsp
 9914 008d 5B       		popq	%rbx
 9915 008e 5D       		popq	%rbp
 9916              		.cfi_def_cfa 7, 8
 9917 008f C3       		ret
 9918              		.cfi_endproc
 9919              	.LFE12952:
 9920              		.section	.gcc_except_table
 9921              	.LLSDA12952:
 9922 01ba FF       		.byte	0xff
 9923 01bb FF       		.byte	0xff
 9924 01bc 01       		.byte	0x1
 9925 01bd 09       		.uleb128 .LLSDACSE12952-.LLSDACSB12952
 9926              	.LLSDACSB12952:
 9927 01be 64       		.uleb128 .LEHB80-.LFB12952
 9928 01bf 05       		.uleb128 .LEHE80-.LEHB80
 9929 01c0 6B       		.uleb128 .L472-.LFB12952
 9930 01c1 00       		.uleb128 0
 9931 01c2 8401     		.uleb128 .LEHB81-.LFB12952
 9932 01c4 05       		.uleb128 .LEHE81-.LEHB81
 9933 01c5 00       		.uleb128 0
 9934 01c6 00       		.uleb128 0
 9935              	.LLSDACSE12952:
 9936              		.section	.text._ZN5boost10shared_ptrIKNS_16exception_detail10clone_baseEEC2INS1_10clone_implINS1_1
 9938              		.weak	_ZN5boost10shared_ptrIKNS_16exception_detail10clone_baseEEC1INS1_10clone_implINS1_10bad_allo
 9939              		.set	_ZN5boost10shared_ptrIKNS_16exception_detail10clone_baseEEC1INS1_10clone_implINS1_10bad_alloc
 9940              		.section	.text._ZN5boost16exception_detail10clone_implINS0_14bad_exception_EEC1ERKS2_,"axG",@progb
 9941              		.align 2
 9942              		.weak	_ZN5boost16exception_detail10clone_implINS0_14bad_exception_EEC1ERKS2_
 9944              	_ZN5boost16exception_detail10clone_implINS0_14bad_exception_EEC1ERKS2_:
 9945              	.LFB12956:
 473:/usr/include/boost/exception/exception.hpp ****                 T(x)
 9946              		.loc 3 473 0
 9947              		.cfi_startproc
 9948              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 9949              		.cfi_lsda 0x1b,.LLSDA12956
 9950 0000 55       		pushq	%rbp
 9951              		.cfi_def_cfa_offset 16
 9952              		.cfi_offset 6, -16
 9953 0001 4889E5   		movq	%rsp, %rbp
 9954              		.cfi_def_cfa_register 6
 9955 0004 53       		pushq	%rbx
 9956 0005 4883EC18 		subq	$24, %rsp
 9957              		.cfi_offset 3, -24
 9958 0009 48897DE8 		movq	%rdi, -24(%rbp)
 9959 000d 488975E0 		movq	%rsi, -32(%rbp)
 9960              	.LBB96:
 474:/usr/include/boost/exception/exception.hpp ****                 {
GAS LISTING /tmp/ccvUPO8Q.s 			page 454


 9961              		.loc 3 474 0
 9962 0011 488B45E8 		movq	-24(%rbp), %rax
 9963 0015 4883C030 		addq	$48, %rax
 9964 0019 4889C7   		movq	%rax, %rdi
 9965 001c E8000000 		call	_ZN5boost16exception_detail10clone_baseC2Ev
 9965      00
 9966 0021 488B45E8 		movq	-24(%rbp), %rax
 9967 0025 488B55E0 		movq	-32(%rbp), %rdx
 9968 0029 4889D6   		movq	%rdx, %rsi
 9969 002c 4889C7   		movq	%rax, %rdi
 9970              	.LEHB82:
 9971 002f E8000000 		call	_ZN5boost16exception_detail14bad_exception_C2ERKS1_
 9971      00
 9972              	.LEHE82:
 474:/usr/include/boost/exception/exception.hpp ****                 {
 9973              		.loc 3 474 0 is_stmt 0 discriminator 5
 9974 0034 488D1500 		leaq	24+_ZTVN5boost16exception_detail10clone_implINS0_14bad_exception_EEE(%rip), %rdx
 9974      000000
 9975 003b 488B45E8 		movq	-24(%rbp), %rax
 9976 003f 488910   		movq	%rdx, (%rax)
 9977 0042 488D1500 		leaq	72+_ZTVN5boost16exception_detail10clone_implINS0_14bad_exception_EEE(%rip), %rdx
 9977      000000
 9978 0049 488B45E8 		movq	-24(%rbp), %rax
 9979 004d 48895028 		movq	%rdx, 40(%rax)
 9980 0051 488B45E8 		movq	-24(%rbp), %rax
 9981 0055 488D5030 		leaq	48(%rax), %rdx
 9982 0059 488D0500 		leaq	136+_ZTVN5boost16exception_detail10clone_implINS0_14bad_exception_EEE(%rip), %rax
 9982      000000
 9983 0060 488902   		movq	%rax, (%rdx)
 476:/usr/include/boost/exception/exception.hpp ****                 }
 9984              		.loc 3 476 0 is_stmt 1 discriminator 5
 9985 0063 488B55E0 		movq	-32(%rbp), %rdx
 9986 0067 488B45E8 		movq	-24(%rbp), %rax
 9987 006b 4889D6   		movq	%rdx, %rsi
 9988 006e 4889C7   		movq	%rax, %rdi
 9989              	.LEHB83:
 9990 0071 E8000000 		call	_ZN5boost16exception_detail20copy_boost_exceptionEPNS_9exceptionEPKS1_
 9990      00
 9991              	.LEHE83:
 9992              	.LBE96:
 477:/usr/include/boost/exception/exception.hpp **** 
 9993              		.loc 3 477 0
 9994 0076 EB2F     		jmp	.L480
 9995              	.L478:
 9996 0078 4889C3   		movq	%rax, %rbx
 9997              	.LBB97:
 474:/usr/include/boost/exception/exception.hpp ****                 {
 9998              		.loc 3 474 0
 9999 007b 488B45E8 		movq	-24(%rbp), %rax
 10000 007f 4889C7   		movq	%rax, %rdi
 10001 0082 E8000000 		call	_ZN5boost16exception_detail14bad_exception_D2Ev
 10001      00
 10002 0087 EB03     		jmp	.L479
 10003              	.L477:
 10004 0089 4889C3   		movq	%rax, %rbx
 10005              	.L479:
 474:/usr/include/boost/exception/exception.hpp ****                 {
GAS LISTING /tmp/ccvUPO8Q.s 			page 455


 10006              		.loc 3 474 0 is_stmt 0 discriminator 6
 10007 008c 488B45E8 		movq	-24(%rbp), %rax
 10008 0090 4883C030 		addq	$48, %rax
 10009 0094 4889C7   		movq	%rax, %rdi
 10010 0097 E8000000 		call	_ZN5boost16exception_detail10clone_baseD2Ev
 10010      00
 10011 009c 4889D8   		movq	%rbx, %rax
 10012 009f 4889C7   		movq	%rax, %rdi
 10013              	.LEHB84:
 10014 00a2 E8000000 		call	_Unwind_Resume@PLT
 10014      00
 10015              	.LEHE84:
 10016              	.L480:
 10017              	.LBE97:
 477:/usr/include/boost/exception/exception.hpp **** 
 10018              		.loc 3 477 0 is_stmt 1
 10019 00a7 4883C418 		addq	$24, %rsp
 10020 00ab 5B       		popq	%rbx
 10021 00ac 5D       		popq	%rbp
 10022              		.cfi_def_cfa 7, 8
 10023 00ad C3       		ret
 10024              		.cfi_endproc
 10025              	.LFE12956:
 10026              		.section	.gcc_except_table
 10027              	.LLSDA12956:
 10028 01c7 FF       		.byte	0xff
 10029 01c8 FF       		.byte	0xff
 10030 01c9 01       		.byte	0x1
 10031 01ca 0E       		.uleb128 .LLSDACSE12956-.LLSDACSB12956
 10032              	.LLSDACSB12956:
 10033 01cb 2F       		.uleb128 .LEHB82-.LFB12956
 10034 01cc 05       		.uleb128 .LEHE82-.LEHB82
 10035 01cd 8901     		.uleb128 .L477-.LFB12956
 10036 01cf 00       		.uleb128 0
 10037 01d0 71       		.uleb128 .LEHB83-.LFB12956
 10038 01d1 05       		.uleb128 .LEHE83-.LEHB83
 10039 01d2 78       		.uleb128 .L478-.LFB12956
 10040 01d3 00       		.uleb128 0
 10041 01d4 A201     		.uleb128 .LEHB84-.LFB12956
 10042 01d6 05       		.uleb128 .LEHE84-.LEHB84
 10043 01d7 00       		.uleb128 0
 10044 01d8 00       		.uleb128 0
 10045              	.LLSDACSE12956:
 10046              		.section	.text._ZN5boost16exception_detail10clone_implINS0_14bad_exception_EEC1ERKS2_,"axG",@progb
 10048              		.section	.text._ZN5boost16exception_detail10clone_implINS0_14bad_exception_EED1Ev,"axG",@progbits,
 10049              		.align 2
 10050              		.weak	_ZN5boost16exception_detail10clone_implINS0_14bad_exception_EED1Ev
 10052              	_ZN5boost16exception_detail10clone_implINS0_14bad_exception_EED1Ev:
 10053              	.LFB12959:
 479:/usr/include/boost/exception/exception.hpp ****                 {
 10054              		.loc 3 479 0
 10055              		.cfi_startproc
 10056 0000 55       		pushq	%rbp
 10057              		.cfi_def_cfa_offset 16
 10058              		.cfi_offset 6, -16
 10059 0001 4889E5   		movq	%rsp, %rbp
 10060              		.cfi_def_cfa_register 6
GAS LISTING /tmp/ccvUPO8Q.s 			page 456


 10061 0004 4883EC10 		subq	$16, %rsp
 10062 0008 48897DF8 		movq	%rdi, -8(%rbp)
 10063              	.LBB98:
 10064              		.loc 3 481 0
 10065 000c 488D1500 		leaq	24+_ZTVN5boost16exception_detail10clone_implINS0_14bad_exception_EEE(%rip), %rdx
 10065      000000
 10066 0013 488B45F8 		movq	-8(%rbp), %rax
 10067 0017 488910   		movq	%rdx, (%rax)
 10068 001a 488D1500 		leaq	72+_ZTVN5boost16exception_detail10clone_implINS0_14bad_exception_EEE(%rip), %rdx
 10068      000000
 10069 0021 488B45F8 		movq	-8(%rbp), %rax
 10070 0025 48895028 		movq	%rdx, 40(%rax)
 10071 0029 488B45F8 		movq	-8(%rbp), %rax
 10072 002d 488D5030 		leaq	48(%rax), %rdx
 10073 0031 488D0500 		leaq	136+_ZTVN5boost16exception_detail10clone_implINS0_14bad_exception_EEE(%rip), %rax
 10073      000000
 10074 0038 488902   		movq	%rax, (%rdx)
 10075 003b 488B45F8 		movq	-8(%rbp), %rax
 10076 003f 4889C7   		movq	%rax, %rdi
 10077 0042 E8000000 		call	_ZN5boost16exception_detail14bad_exception_D2Ev
 10077      00
 10078 0047 488B45F8 		movq	-8(%rbp), %rax
 10079 004b 4883C030 		addq	$48, %rax
 10080 004f 4889C7   		movq	%rax, %rdi
 10081 0052 E8000000 		call	_ZN5boost16exception_detail10clone_baseD2Ev
 10081      00
 10082              	.LBE98:
 10083 0057 90       		nop
 10084 0058 C9       		leave
 10085              		.cfi_def_cfa 7, 8
 10086 0059 C3       		ret
 10087              		.cfi_endproc
 10088              	.LFE12959:
 10090              		.set	.LTHUNK73,_ZN5boost16exception_detail10clone_implINS0_14bad_exception_EED1Ev
 10091              		.weak	_ZThn40_N5boost16exception_detail10clone_implINS0_14bad_exception_EED1Ev
 10093              	_ZThn40_N5boost16exception_detail10clone_implINS0_14bad_exception_EED1Ev:
 10094              	.LFB15701:
 479:/usr/include/boost/exception/exception.hpp ****                 {
 10095              		.loc 3 479 0
 10096              		.cfi_startproc
 10097 005a 4883EF28 		subq	$40, %rdi
 10098 005e EBA0     		jmp	.LTHUNK73
 10099              		.cfi_endproc
 10100              	.LFE15701:
 10102              		.set	.LTHUNK72,_ZN5boost16exception_detail10clone_implINS0_14bad_exception_EED1Ev
 10103              		.weak	_ZTv0_n40_N5boost16exception_detail10clone_implINS0_14bad_exception_EED1Ev
 10105              	_ZTv0_n40_N5boost16exception_detail10clone_implINS0_14bad_exception_EED1Ev:
 10106              	.LFB15702:
 479:/usr/include/boost/exception/exception.hpp ****                 {
 10107              		.loc 3 479 0
 10108              		.cfi_startproc
 10109 0060 4C8B17   		movq	(%rdi), %r10
 10110 0063 49037AD8 		addq	-40(%r10), %rdi
 10111 0067 EB97     		jmp	.LTHUNK72
 10112              		.cfi_endproc
 10113              	.LFE15702:
 10115              		.section	.text._ZN5boost16exception_detail10clone_implINS0_14bad_exception_EED0Ev,"axG",@progbits,
GAS LISTING /tmp/ccvUPO8Q.s 			page 457


 10116              		.align 2
 10117              		.weak	_ZN5boost16exception_detail10clone_implINS0_14bad_exception_EED0Ev
 10119              	_ZN5boost16exception_detail10clone_implINS0_14bad_exception_EED0Ev:
 10120              	.LFB12960:
 479:/usr/include/boost/exception/exception.hpp ****                 {
 10121              		.loc 3 479 0
 10122              		.cfi_startproc
 10123 0000 55       		pushq	%rbp
 10124              		.cfi_def_cfa_offset 16
 10125              		.cfi_offset 6, -16
 10126 0001 4889E5   		movq	%rsp, %rbp
 10127              		.cfi_def_cfa_register 6
 10128 0004 4883EC10 		subq	$16, %rsp
 10129 0008 48897DF8 		movq	%rdi, -8(%rbp)
 10130              		.loc 3 481 0
 10131 000c 488B45F8 		movq	-8(%rbp), %rax
 10132 0010 4889C7   		movq	%rax, %rdi
 10133 0013 E8000000 		call	_ZN5boost16exception_detail10clone_implINS0_14bad_exception_EED1Ev
 10133      00
 10134 0018 488B45F8 		movq	-8(%rbp), %rax
 10135 001c BE380000 		movl	$56, %esi
 10135      00
 10136 0021 4889C7   		movq	%rax, %rdi
 10137 0024 E8000000 		call	_ZdlPvm@PLT
 10137      00
 10138 0029 C9       		leave
 10139              		.cfi_def_cfa 7, 8
 10140 002a C3       		ret
 10141              		.cfi_endproc
 10142              	.LFE12960:
 10144              		.set	.LTHUNK75,_ZN5boost16exception_detail10clone_implINS0_14bad_exception_EED0Ev
 10145              		.weak	_ZThn40_N5boost16exception_detail10clone_implINS0_14bad_exception_EED0Ev
 10147              	_ZThn40_N5boost16exception_detail10clone_implINS0_14bad_exception_EED0Ev:
 10148              	.LFB15703:
 479:/usr/include/boost/exception/exception.hpp ****                 {
 10149              		.loc 3 479 0
 10150              		.cfi_startproc
 10151 002b 4883EF28 		subq	$40, %rdi
 10152 002f EBCF     		jmp	.LTHUNK75
 10153              		.cfi_endproc
 10154              	.LFE15703:
 10156              		.set	.LTHUNK74,_ZN5boost16exception_detail10clone_implINS0_14bad_exception_EED0Ev
 10157              		.weak	_ZTv0_n40_N5boost16exception_detail10clone_implINS0_14bad_exception_EED0Ev
 10159              	_ZTv0_n40_N5boost16exception_detail10clone_implINS0_14bad_exception_EED0Ev:
 10160              	.LFB15704:
 479:/usr/include/boost/exception/exception.hpp ****                 {
 10161              		.loc 3 479 0
 10162              		.cfi_startproc
 10163 0031 4C8B17   		movq	(%rdi), %r10
 10164 0034 49037AD8 		addq	-40(%r10), %rdi
 10165 0038 EBC6     		jmp	.LTHUNK74
 10166              		.cfi_endproc
 10167              	.LFE15704:
 10169              		.section	.text._ZN5boostlsINS_16exception_detail10clone_implINS1_14bad_exception_EEENS_15throw_fun
 10170              		.weak	_ZN5boostlsINS_16exception_detail10clone_implINS1_14bad_exception_EEENS_15throw_function_EPK
 10172              	_ZN5boostlsINS_16exception_detail10clone_implINS1_14bad_exception_EEENS_15throw_function_EPKcEENS_9
 10173              	.LFB12961:
GAS LISTING /tmp/ccvUPO8Q.s 			page 458


 301:/usr/include/boost/exception/info.hpp ****         {
 10174              		.loc 36 301 0
 10175              		.cfi_startproc
 10176 0000 55       		pushq	%rbp
 10177              		.cfi_def_cfa_offset 16
 10178              		.cfi_offset 6, -16
 10179 0001 4889E5   		movq	%rsp, %rbp
 10180              		.cfi_def_cfa_register 6
 10181 0004 4883EC10 		subq	$16, %rsp
 10182 0008 48897DF8 		movq	%rdi, -8(%rbp)
 10183 000c 488975F0 		movq	%rsi, -16(%rbp)
 303:/usr/include/boost/exception/info.hpp ****         }
 10184              		.loc 36 303 0
 10185 0010 488B45F0 		movq	-16(%rbp), %rax
 10186 0014 4889C7   		movq	%rax, %rdi
 10187 0017 E8000000 		call	_ZSt4moveIRN5boost10error_infoINS0_15throw_function_EPKcEEEONSt16remove_referenceIT_E4typeEOS
 10187      00
 10188 001c 4889C2   		movq	%rax, %rdx
 10189 001f 488B45F8 		movq	-8(%rbp), %rax
 10190 0023 4889D6   		movq	%rdx, %rsi
 10191 0026 4889C7   		movq	%rax, %rdi
 10192 0029 E8000000 		call	_ZN5boost16exception_detail8set_infoINS0_10clone_implINS0_14bad_exception_EEENS_15throw_funct
 10192      00
 10193              		.loc 36 304 0
 10194 002e C9       		leave
 10195              		.cfi_def_cfa 7, 8
 10196 002f C3       		ret
 10197              		.cfi_endproc
 10198              	.LFE12961:
 10200              		.section	.text._ZN5boostlsINS_16exception_detail10clone_implINS1_14bad_exception_EEENS_11throw_fil
 10201              		.weak	_ZN5boostlsINS_16exception_detail10clone_implINS1_14bad_exception_EEENS_11throw_file_EPKcEEN
 10203              	_ZN5boostlsINS_16exception_detail10clone_implINS1_14bad_exception_EEENS_11throw_file_EPKcEENS_9enab
 10204              	.LFB12962:
 301:/usr/include/boost/exception/info.hpp ****         {
 10205              		.loc 36 301 0
 10206              		.cfi_startproc
 10207 0000 55       		pushq	%rbp
 10208              		.cfi_def_cfa_offset 16
 10209              		.cfi_offset 6, -16
 10210 0001 4889E5   		movq	%rsp, %rbp
 10211              		.cfi_def_cfa_register 6
 10212 0004 4883EC10 		subq	$16, %rsp
 10213 0008 48897DF8 		movq	%rdi, -8(%rbp)
 10214 000c 488975F0 		movq	%rsi, -16(%rbp)
 303:/usr/include/boost/exception/info.hpp ****         }
 10215              		.loc 36 303 0
 10216 0010 488B45F0 		movq	-16(%rbp), %rax
 10217 0014 4889C7   		movq	%rax, %rdi
 10218 0017 E8000000 		call	_ZSt4moveIRN5boost10error_infoINS0_11throw_file_EPKcEEEONSt16remove_referenceIT_E4typeEOS8_
 10218      00
 10219 001c 4889C2   		movq	%rax, %rdx
 10220 001f 488B45F8 		movq	-8(%rbp), %rax
 10221 0023 4889D6   		movq	%rdx, %rsi
 10222 0026 4889C7   		movq	%rax, %rdi
 10223 0029 E8000000 		call	_ZN5boost16exception_detail8set_infoINS0_10clone_implINS0_14bad_exception_EEENS_11throw_file_
 10223      00
 10224              		.loc 36 304 0
GAS LISTING /tmp/ccvUPO8Q.s 			page 459


 10225 002e C9       		leave
 10226              		.cfi_def_cfa 7, 8
 10227 002f C3       		ret
 10228              		.cfi_endproc
 10229              	.LFE12962:
 10231              		.section	.text._ZN5boostlsINS_16exception_detail10clone_implINS1_14bad_exception_EEENS_11throw_lin
 10232              		.weak	_ZN5boostlsINS_16exception_detail10clone_implINS1_14bad_exception_EEENS_11throw_line_EiEENS_
 10234              	_ZN5boostlsINS_16exception_detail10clone_implINS1_14bad_exception_EEENS_11throw_line_EiEENS_9enable
 10235              	.LFB12963:
 301:/usr/include/boost/exception/info.hpp ****         {
 10236              		.loc 36 301 0
 10237              		.cfi_startproc
 10238 0000 55       		pushq	%rbp
 10239              		.cfi_def_cfa_offset 16
 10240              		.cfi_offset 6, -16
 10241 0001 4889E5   		movq	%rsp, %rbp
 10242              		.cfi_def_cfa_register 6
 10243 0004 4883EC10 		subq	$16, %rsp
 10244 0008 48897DF8 		movq	%rdi, -8(%rbp)
 10245 000c 488975F0 		movq	%rsi, -16(%rbp)
 303:/usr/include/boost/exception/info.hpp ****         }
 10246              		.loc 36 303 0
 10247 0010 488B45F0 		movq	-16(%rbp), %rax
 10248 0014 4889C7   		movq	%rax, %rdi
 10249 0017 E8000000 		call	_ZSt4moveIRN5boost10error_infoINS0_11throw_line_EiEEEONSt16remove_referenceIT_E4typeEOS6_
 10249      00
 10250 001c 4889C2   		movq	%rax, %rdx
 10251 001f 488B45F8 		movq	-8(%rbp), %rax
 10252 0023 4889D6   		movq	%rdx, %rsi
 10253 0026 4889C7   		movq	%rax, %rdi
 10254 0029 E8000000 		call	_ZN5boost16exception_detail8set_infoINS0_10clone_implINS0_14bad_exception_EEENS_11throw_line_
 10254      00
 10255              		.loc 36 304 0
 10256 002e C9       		leave
 10257              		.cfi_def_cfa 7, 8
 10258 002f C3       		ret
 10259              		.cfi_endproc
 10260              	.LFE12963:
 10262              		.section	.text._ZN5boost10shared_ptrIKNS_16exception_detail10clone_baseEEC2INS1_10clone_implINS1_1
 10263              		.align 2
 10264              		.weak	_ZN5boost10shared_ptrIKNS_16exception_detail10clone_baseEEC2INS1_10clone_implINS1_14bad_exce
 10266              	_ZN5boost10shared_ptrIKNS_16exception_detail10clone_baseEEC2INS1_10clone_implINS1_14bad_exception_E
 10267              	.LFB12965:
 360:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     {
 10268              		.loc 7 360 0
 10269              		.cfi_startproc
 10270              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 10271              		.cfi_lsda 0x1b,.LLSDA12965
 10272 0000 55       		pushq	%rbp
 10273              		.cfi_def_cfa_offset 16
 10274              		.cfi_offset 6, -16
 10275 0001 4889E5   		movq	%rsp, %rbp
 10276              		.cfi_def_cfa_register 6
 10277 0004 53       		pushq	%rbx
 10278 0005 4883EC18 		subq	$24, %rsp
 10279              		.cfi_offset 3, -24
 10280 0009 48897DE8 		movq	%rdi, -24(%rbp)
GAS LISTING /tmp/ccvUPO8Q.s 			page 460


 10281 000d 488975E0 		movq	%rsi, -32(%rbp)
 10282              	.LBB99:
 360:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     {
 10283              		.loc 7 360 0
 10284 0011 48837DE0 		cmpq	$0, -32(%rbp)
 10284      00
 10285 0016 741A     		je	.L490
 360:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     {
 10286              		.loc 7 360 0 is_stmt 0 discriminator 1
 10287 0018 488B45E0 		movq	-32(%rbp), %rax
 10288 001c 488B00   		movq	(%rax), %rax
 10289 001f 4883E818 		subq	$24, %rax
 10290 0023 488B00   		movq	(%rax), %rax
 10291 0026 4889C2   		movq	%rax, %rdx
 10292 0029 488B45E0 		movq	-32(%rbp), %rax
 10293 002d 4801C2   		addq	%rax, %rdx
 10294 0030 EB05     		jmp	.L491
 10295              	.L490:
 360:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     {
 10296              		.loc 7 360 0 discriminator 2
 10297 0032 BA000000 		movl	$0, %edx
 10297      00
 10298              	.L491:
 360:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     {
 10299              		.loc 7 360 0 discriminator 4
 10300 0037 488B45E8 		movq	-24(%rbp), %rax
 10301 003b 488910   		movq	%rdx, (%rax)
 10302 003e 488B45E8 		movq	-24(%rbp), %rax
 10303 0042 4883C008 		addq	$8, %rax
 10304 0046 4889C7   		movq	%rax, %rdi
 10305 0049 E8000000 		call	_ZN5boost6detail12shared_countC1Ev
 10305      00
 362:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     }
 10306              		.loc 7 362 0 is_stmt 1 discriminator 4
 10307 004e 488B45E8 		movq	-24(%rbp), %rax
 10308 0052 488D5008 		leaq	8(%rax), %rdx
 10309 0056 488B4DE0 		movq	-32(%rbp), %rcx
 10310 005a 488B45E8 		movq	-24(%rbp), %rax
 10311 005e 4889CE   		movq	%rcx, %rsi
 10312 0061 4889C7   		movq	%rax, %rdi
 10313              	.LEHB85:
 10314 0064 E8000000 		call	_ZN5boost6detail20sp_pointer_constructIKNS_16exception_detail10clone_baseENS2_10clone_implINS
 10314      00
 10315              	.LEHE85:
 10316              	.LBE99:
 363:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 10317              		.loc 7 363 0
 10318 0069 EB1E     		jmp	.L494
 10319              	.L493:
 10320 006b 4889C3   		movq	%rax, %rbx
 10321              	.LBB100:
 360:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     {
 10322              		.loc 7 360 0
 10323 006e 488B45E8 		movq	-24(%rbp), %rax
 10324 0072 4883C008 		addq	$8, %rax
 10325 0076 4889C7   		movq	%rax, %rdi
 10326 0079 E8000000 		call	_ZN5boost6detail12shared_countD1Ev
GAS LISTING /tmp/ccvUPO8Q.s 			page 461


 10326      00
 10327 007e 4889D8   		movq	%rbx, %rax
 10328 0081 4889C7   		movq	%rax, %rdi
 10329              	.LEHB86:
 10330 0084 E8000000 		call	_Unwind_Resume@PLT
 10330      00
 10331              	.LEHE86:
 10332              	.L494:
 10333              	.LBE100:
 363:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 10334              		.loc 7 363 0
 10335 0089 4883C418 		addq	$24, %rsp
 10336 008d 5B       		popq	%rbx
 10337 008e 5D       		popq	%rbp
 10338              		.cfi_def_cfa 7, 8
 10339 008f C3       		ret
 10340              		.cfi_endproc
 10341              	.LFE12965:
 10342              		.section	.gcc_except_table
 10343              	.LLSDA12965:
 10344 01d9 FF       		.byte	0xff
 10345 01da FF       		.byte	0xff
 10346 01db 01       		.byte	0x1
 10347 01dc 09       		.uleb128 .LLSDACSE12965-.LLSDACSB12965
 10348              	.LLSDACSB12965:
 10349 01dd 64       		.uleb128 .LEHB85-.LFB12965
 10350 01de 05       		.uleb128 .LEHE85-.LEHB85
 10351 01df 6B       		.uleb128 .L493-.LFB12965
 10352 01e0 00       		.uleb128 0
 10353 01e1 8401     		.uleb128 .LEHB86-.LFB12965
 10354 01e3 05       		.uleb128 .LEHE86-.LEHB86
 10355 01e4 00       		.uleb128 0
 10356 01e5 00       		.uleb128 0
 10357              	.LLSDACSE12965:
 10358              		.section	.text._ZN5boost10shared_ptrIKNS_16exception_detail10clone_baseEEC2INS1_10clone_implINS1_1
 10360              		.weak	_ZN5boost10shared_ptrIKNS_16exception_detail10clone_baseEEC1INS1_10clone_implINS1_14bad_exce
 10361              		.set	_ZN5boost10shared_ptrIKNS_16exception_detail10clone_baseEEC1INS1_10clone_implINS1_14bad_excep
 10362              		.section	.text._ZNKSt6vectorIiSaIiEE4sizeEv,"axG",@progbits,_ZNKSt6vectorIiSaIiEE4sizeEv,comdat
 10363              		.align 2
 10364              		.weak	_ZNKSt6vectorIiSaIiEE4sizeEv
 10366              	_ZNKSt6vectorIiSaIiEE4sizeEv:
 10367              	.LFB13386:
 655:/usr/include/c++/6/bits/stl_vector.h ****       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 10368              		.loc 30 655 0
 10369              		.cfi_startproc
 10370 0000 55       		pushq	%rbp
 10371              		.cfi_def_cfa_offset 16
 10372              		.cfi_offset 6, -16
 10373 0001 4889E5   		movq	%rsp, %rbp
 10374              		.cfi_def_cfa_register 6
 10375 0004 48897DF8 		movq	%rdi, -8(%rbp)
 656:/usr/include/c++/6/bits/stl_vector.h **** 
 10376              		.loc 30 656 0
 10377 0008 488B45F8 		movq	-8(%rbp), %rax
 10378 000c 488B4008 		movq	8(%rax), %rax
 10379 0010 4889C2   		movq	%rax, %rdx
 10380 0013 488B45F8 		movq	-8(%rbp), %rax
GAS LISTING /tmp/ccvUPO8Q.s 			page 462


 10381 0017 488B00   		movq	(%rax), %rax
 10382 001a 4829C2   		subq	%rax, %rdx
 10383 001d 4889D0   		movq	%rdx, %rax
 10384 0020 48C1F802 		sarq	$2, %rax
 10385 0024 5D       		popq	%rbp
 10386              		.cfi_def_cfa 7, 8
 10387 0025 C3       		ret
 10388              		.cfi_endproc
 10389              	.LFE13386:
 10391              		.section	.text._ZN9__gnu_cxx14__alloc_traitsISaIiEE17_S_select_on_copyERKS1_,"axG",@progbits,_ZN9_
 10392              		.weak	_ZN9__gnu_cxx14__alloc_traitsISaIiEE17_S_select_on_copyERKS1_
 10394              	_ZN9__gnu_cxx14__alloc_traitsISaIiEE17_S_select_on_copyERKS1_:
 10395              	.LFB13387:
 10396              		.file 37 "/usr/include/c++/6/ext/alloc_traits.h"
   1:/usr/include/c++/6/ext/alloc_traits.h **** // Allocator traits -*- C++ -*-
   2:/usr/include/c++/6/ext/alloc_traits.h **** 
   3:/usr/include/c++/6/ext/alloc_traits.h **** // Copyright (C) 2011-2016 Free Software Foundation, Inc.
   4:/usr/include/c++/6/ext/alloc_traits.h **** //
   5:/usr/include/c++/6/ext/alloc_traits.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/6/ext/alloc_traits.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/6/ext/alloc_traits.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/6/ext/alloc_traits.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/6/ext/alloc_traits.h **** // any later version.
  10:/usr/include/c++/6/ext/alloc_traits.h **** 
  11:/usr/include/c++/6/ext/alloc_traits.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/6/ext/alloc_traits.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/6/ext/alloc_traits.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/6/ext/alloc_traits.h **** // GNU General Public License for more details.
  15:/usr/include/c++/6/ext/alloc_traits.h **** 
  16:/usr/include/c++/6/ext/alloc_traits.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/6/ext/alloc_traits.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/6/ext/alloc_traits.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/6/ext/alloc_traits.h **** 
  20:/usr/include/c++/6/ext/alloc_traits.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/6/ext/alloc_traits.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/6/ext/alloc_traits.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/6/ext/alloc_traits.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/6/ext/alloc_traits.h **** 
  25:/usr/include/c++/6/ext/alloc_traits.h **** /** @file ext/alloc_traits.h
  26:/usr/include/c++/6/ext/alloc_traits.h ****  *  This file is a GNU extension to the Standard C++ Library.
  27:/usr/include/c++/6/ext/alloc_traits.h ****  */
  28:/usr/include/c++/6/ext/alloc_traits.h **** 
  29:/usr/include/c++/6/ext/alloc_traits.h **** #ifndef _EXT_ALLOC_TRAITS_H
  30:/usr/include/c++/6/ext/alloc_traits.h **** #define _EXT_ALLOC_TRAITS_H 1
  31:/usr/include/c++/6/ext/alloc_traits.h **** 
  32:/usr/include/c++/6/ext/alloc_traits.h **** #pragma GCC system_header
  33:/usr/include/c++/6/ext/alloc_traits.h **** 
  34:/usr/include/c++/6/ext/alloc_traits.h **** #if __cplusplus >= 201103L
  35:/usr/include/c++/6/ext/alloc_traits.h **** # include <bits/move.h>
  36:/usr/include/c++/6/ext/alloc_traits.h **** # include <bits/alloc_traits.h>
  37:/usr/include/c++/6/ext/alloc_traits.h **** #else
  38:/usr/include/c++/6/ext/alloc_traits.h **** # include <bits/allocator.h>  // for __alloc_swap
  39:/usr/include/c++/6/ext/alloc_traits.h **** #endif
  40:/usr/include/c++/6/ext/alloc_traits.h **** 
  41:/usr/include/c++/6/ext/alloc_traits.h **** namespace __gnu_cxx _GLIBCXX_VISIBILITY(default)
  42:/usr/include/c++/6/ext/alloc_traits.h **** {
  43:/usr/include/c++/6/ext/alloc_traits.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
GAS LISTING /tmp/ccvUPO8Q.s 			page 463


  44:/usr/include/c++/6/ext/alloc_traits.h **** 
  45:/usr/include/c++/6/ext/alloc_traits.h **** /**
  46:/usr/include/c++/6/ext/alloc_traits.h ****  * @brief  Uniform interface to C++98 and C++11 allocators.
  47:/usr/include/c++/6/ext/alloc_traits.h ****  * @ingroup allocators
  48:/usr/include/c++/6/ext/alloc_traits.h **** */
  49:/usr/include/c++/6/ext/alloc_traits.h **** template<typename _Alloc>
  50:/usr/include/c++/6/ext/alloc_traits.h ****   struct __alloc_traits
  51:/usr/include/c++/6/ext/alloc_traits.h **** #if __cplusplus >= 201103L
  52:/usr/include/c++/6/ext/alloc_traits.h ****   : std::allocator_traits<_Alloc>
  53:/usr/include/c++/6/ext/alloc_traits.h **** #endif
  54:/usr/include/c++/6/ext/alloc_traits.h ****   {
  55:/usr/include/c++/6/ext/alloc_traits.h ****     typedef _Alloc allocator_type;
  56:/usr/include/c++/6/ext/alloc_traits.h **** #if __cplusplus >= 201103L
  57:/usr/include/c++/6/ext/alloc_traits.h ****     typedef std::allocator_traits<_Alloc>           _Base_type;
  58:/usr/include/c++/6/ext/alloc_traits.h ****     typedef typename _Base_type::value_type         value_type;
  59:/usr/include/c++/6/ext/alloc_traits.h ****     typedef typename _Base_type::pointer            pointer;
  60:/usr/include/c++/6/ext/alloc_traits.h ****     typedef typename _Base_type::const_pointer      const_pointer;
  61:/usr/include/c++/6/ext/alloc_traits.h ****     typedef typename _Base_type::size_type          size_type;
  62:/usr/include/c++/6/ext/alloc_traits.h ****     typedef typename _Base_type::difference_type    difference_type;
  63:/usr/include/c++/6/ext/alloc_traits.h ****     // C++11 allocators do not define reference or const_reference
  64:/usr/include/c++/6/ext/alloc_traits.h ****     typedef value_type&                             reference;
  65:/usr/include/c++/6/ext/alloc_traits.h ****     typedef const value_type&                       const_reference;
  66:/usr/include/c++/6/ext/alloc_traits.h ****     using _Base_type::allocate;
  67:/usr/include/c++/6/ext/alloc_traits.h ****     using _Base_type::deallocate;
  68:/usr/include/c++/6/ext/alloc_traits.h ****     using _Base_type::construct;
  69:/usr/include/c++/6/ext/alloc_traits.h ****     using _Base_type::destroy;
  70:/usr/include/c++/6/ext/alloc_traits.h ****     using _Base_type::max_size;
  71:/usr/include/c++/6/ext/alloc_traits.h **** 
  72:/usr/include/c++/6/ext/alloc_traits.h ****   private:
  73:/usr/include/c++/6/ext/alloc_traits.h ****     template<typename _Ptr>
  74:/usr/include/c++/6/ext/alloc_traits.h ****       using __is_custom_pointer
  75:/usr/include/c++/6/ext/alloc_traits.h **** 	= std::__and_<std::is_same<pointer, _Ptr>,
  76:/usr/include/c++/6/ext/alloc_traits.h **** 		      std::__not_<std::is_pointer<_Ptr>>>;
  77:/usr/include/c++/6/ext/alloc_traits.h **** 
  78:/usr/include/c++/6/ext/alloc_traits.h ****   public:
  79:/usr/include/c++/6/ext/alloc_traits.h ****     // overload construct for non-standard pointer types
  80:/usr/include/c++/6/ext/alloc_traits.h ****     template<typename _Ptr, typename... _Args>
  81:/usr/include/c++/6/ext/alloc_traits.h ****       static typename std::enable_if<__is_custom_pointer<_Ptr>::value>::type
  82:/usr/include/c++/6/ext/alloc_traits.h ****       construct(_Alloc& __a, _Ptr __p, _Args&&... __args)
  83:/usr/include/c++/6/ext/alloc_traits.h ****       {
  84:/usr/include/c++/6/ext/alloc_traits.h **** 	_Base_type::construct(__a, std::addressof(*__p),
  85:/usr/include/c++/6/ext/alloc_traits.h **** 			      std::forward<_Args>(__args)...);
  86:/usr/include/c++/6/ext/alloc_traits.h ****       }
  87:/usr/include/c++/6/ext/alloc_traits.h **** 
  88:/usr/include/c++/6/ext/alloc_traits.h ****     // overload destroy for non-standard pointer types
  89:/usr/include/c++/6/ext/alloc_traits.h ****     template<typename _Ptr>
  90:/usr/include/c++/6/ext/alloc_traits.h ****       static typename std::enable_if<__is_custom_pointer<_Ptr>::value>::type
  91:/usr/include/c++/6/ext/alloc_traits.h ****       destroy(_Alloc& __a, _Ptr __p)
  92:/usr/include/c++/6/ext/alloc_traits.h ****       { _Base_type::destroy(__a, std::addressof(*__p)); }
  93:/usr/include/c++/6/ext/alloc_traits.h **** 
  94:/usr/include/c++/6/ext/alloc_traits.h ****     static _Alloc _S_select_on_copy(const _Alloc& __a)
 10397              		.loc 37 94 0
 10398              		.cfi_startproc
 10399 0000 55       		pushq	%rbp
 10400              		.cfi_def_cfa_offset 16
 10401              		.cfi_offset 6, -16
 10402 0001 4889E5   		movq	%rsp, %rbp
GAS LISTING /tmp/ccvUPO8Q.s 			page 464


 10403              		.cfi_def_cfa_register 6
 10404 0004 4883EC10 		subq	$16, %rsp
 10405 0008 48897DF8 		movq	%rdi, -8(%rbp)
 10406 000c 488975F0 		movq	%rsi, -16(%rbp)
  95:/usr/include/c++/6/ext/alloc_traits.h ****     { return _Base_type::select_on_container_copy_construction(__a); }
 10407              		.loc 37 95 0
 10408 0010 488B45F8 		movq	-8(%rbp), %rax
 10409 0014 488B55F0 		movq	-16(%rbp), %rdx
 10410 0018 4889D6   		movq	%rdx, %rsi
 10411 001b 4889C7   		movq	%rax, %rdi
 10412 001e E8000000 		call	_ZNSt16allocator_traitsISaIiEE37select_on_container_copy_constructionERKS0_
 10412      00
 10413 0023 488B45F8 		movq	-8(%rbp), %rax
 10414 0027 C9       		leave
 10415              		.cfi_def_cfa 7, 8
 10416 0028 C3       		ret
 10417              		.cfi_endproc
 10418              	.LFE13387:
 10420              		.section	.text._ZNKSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv,"axG",@progbits,_ZNKSt12_Vector
 10421              		.align 2
 10422              		.weak	_ZNKSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv
 10424              	_ZNKSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv:
 10425              	.LFB13388:
 117:/usr/include/c++/6/bits/stl_vector.h ****       { return *static_cast<const _Tp_alloc_type*>(&this->_M_impl); }
 10426              		.loc 30 117 0
 10427              		.cfi_startproc
 10428 0000 55       		pushq	%rbp
 10429              		.cfi_def_cfa_offset 16
 10430              		.cfi_offset 6, -16
 10431 0001 4889E5   		movq	%rsp, %rbp
 10432              		.cfi_def_cfa_register 6
 10433 0004 48897DF8 		movq	%rdi, -8(%rbp)
 118:/usr/include/c++/6/bits/stl_vector.h **** 
 10434              		.loc 30 118 0
 10435 0008 488B45F8 		movq	-8(%rbp), %rax
 10436 000c 5D       		popq	%rbp
 10437              		.cfi_def_cfa 7, 8
 10438 000d C3       		ret
 10439              		.cfi_endproc
 10440              	.LFE13388:
 10442              		.section	.text._ZNSaIiED2Ev,"axG",@progbits,_ZNSaIiED5Ev,comdat
 10443              		.align 2
 10444              		.weak	_ZNSaIiED2Ev
 10446              	_ZNSaIiED2Ev:
 10447              	.LFB13390:
 10448              		.file 38 "/usr/include/c++/6/bits/allocator.h"
   1:/usr/include/c++/6/bits/allocator.h **** // Allocators -*- C++ -*-
   2:/usr/include/c++/6/bits/allocator.h **** 
   3:/usr/include/c++/6/bits/allocator.h **** // Copyright (C) 2001-2016 Free Software Foundation, Inc.
   4:/usr/include/c++/6/bits/allocator.h **** //
   5:/usr/include/c++/6/bits/allocator.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/6/bits/allocator.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/6/bits/allocator.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/6/bits/allocator.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/6/bits/allocator.h **** // any later version.
  10:/usr/include/c++/6/bits/allocator.h **** 
  11:/usr/include/c++/6/bits/allocator.h **** // This library is distributed in the hope that it will be useful,
GAS LISTING /tmp/ccvUPO8Q.s 			page 465


  12:/usr/include/c++/6/bits/allocator.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/6/bits/allocator.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/6/bits/allocator.h **** // GNU General Public License for more details.
  15:/usr/include/c++/6/bits/allocator.h **** 
  16:/usr/include/c++/6/bits/allocator.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/6/bits/allocator.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/6/bits/allocator.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/6/bits/allocator.h **** 
  20:/usr/include/c++/6/bits/allocator.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/6/bits/allocator.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/6/bits/allocator.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/6/bits/allocator.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/6/bits/allocator.h **** 
  25:/usr/include/c++/6/bits/allocator.h **** /*
  26:/usr/include/c++/6/bits/allocator.h ****  * Copyright (c) 1996-1997
  27:/usr/include/c++/6/bits/allocator.h ****  * Silicon Graphics Computer Systems, Inc.
  28:/usr/include/c++/6/bits/allocator.h ****  *
  29:/usr/include/c++/6/bits/allocator.h ****  * Permission to use, copy, modify, distribute and sell this software
  30:/usr/include/c++/6/bits/allocator.h ****  * and its documentation for any purpose is hereby granted without fee,
  31:/usr/include/c++/6/bits/allocator.h ****  * provided that the above copyright notice appear in all copies and
  32:/usr/include/c++/6/bits/allocator.h ****  * that both that copyright notice and this permission notice appear
  33:/usr/include/c++/6/bits/allocator.h ****  * in supporting documentation.  Silicon Graphics makes no
  34:/usr/include/c++/6/bits/allocator.h ****  * representations about the suitability of this software for any
  35:/usr/include/c++/6/bits/allocator.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  36:/usr/include/c++/6/bits/allocator.h ****  */
  37:/usr/include/c++/6/bits/allocator.h **** 
  38:/usr/include/c++/6/bits/allocator.h **** /** @file bits/allocator.h
  39:/usr/include/c++/6/bits/allocator.h ****  *  This is an internal header file, included by other library headers.
  40:/usr/include/c++/6/bits/allocator.h ****  *  Do not attempt to use it directly. @headername{memory}
  41:/usr/include/c++/6/bits/allocator.h ****  */
  42:/usr/include/c++/6/bits/allocator.h **** 
  43:/usr/include/c++/6/bits/allocator.h **** #ifndef _ALLOCATOR_H
  44:/usr/include/c++/6/bits/allocator.h **** #define _ALLOCATOR_H 1
  45:/usr/include/c++/6/bits/allocator.h **** 
  46:/usr/include/c++/6/bits/allocator.h **** #include <bits/c++allocator.h> // Define the base class to std::allocator.
  47:/usr/include/c++/6/bits/allocator.h **** #include <bits/memoryfwd.h>
  48:/usr/include/c++/6/bits/allocator.h **** #if __cplusplus >= 201103L
  49:/usr/include/c++/6/bits/allocator.h **** #include <type_traits>
  50:/usr/include/c++/6/bits/allocator.h **** #endif
  51:/usr/include/c++/6/bits/allocator.h **** 
  52:/usr/include/c++/6/bits/allocator.h **** #define __cpp_lib_incomplete_container_elements 201505
  53:/usr/include/c++/6/bits/allocator.h **** #if __cplusplus >= 201103L
  54:/usr/include/c++/6/bits/allocator.h **** # define __cpp_lib_allocator_is_always_equal 201411
  55:/usr/include/c++/6/bits/allocator.h **** #endif
  56:/usr/include/c++/6/bits/allocator.h **** 
  57:/usr/include/c++/6/bits/allocator.h **** namespace std _GLIBCXX_VISIBILITY(default)
  58:/usr/include/c++/6/bits/allocator.h **** {
  59:/usr/include/c++/6/bits/allocator.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  60:/usr/include/c++/6/bits/allocator.h **** 
  61:/usr/include/c++/6/bits/allocator.h ****   /**
  62:/usr/include/c++/6/bits/allocator.h ****    *  @addtogroup allocators
  63:/usr/include/c++/6/bits/allocator.h ****    *  @{
  64:/usr/include/c++/6/bits/allocator.h ****    */
  65:/usr/include/c++/6/bits/allocator.h **** 
  66:/usr/include/c++/6/bits/allocator.h ****   /// allocator<void> specialization.
  67:/usr/include/c++/6/bits/allocator.h ****   template<>
  68:/usr/include/c++/6/bits/allocator.h ****     class allocator<void>
GAS LISTING /tmp/ccvUPO8Q.s 			page 466


  69:/usr/include/c++/6/bits/allocator.h ****     {
  70:/usr/include/c++/6/bits/allocator.h ****     public:
  71:/usr/include/c++/6/bits/allocator.h ****       typedef size_t      size_type;
  72:/usr/include/c++/6/bits/allocator.h ****       typedef ptrdiff_t   difference_type;
  73:/usr/include/c++/6/bits/allocator.h ****       typedef void*       pointer;
  74:/usr/include/c++/6/bits/allocator.h ****       typedef const void* const_pointer;
  75:/usr/include/c++/6/bits/allocator.h ****       typedef void        value_type;
  76:/usr/include/c++/6/bits/allocator.h **** 
  77:/usr/include/c++/6/bits/allocator.h ****       template<typename _Tp1>
  78:/usr/include/c++/6/bits/allocator.h ****         struct rebind
  79:/usr/include/c++/6/bits/allocator.h ****         { typedef allocator<_Tp1> other; };
  80:/usr/include/c++/6/bits/allocator.h **** 
  81:/usr/include/c++/6/bits/allocator.h **** #if __cplusplus >= 201103L
  82:/usr/include/c++/6/bits/allocator.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
  83:/usr/include/c++/6/bits/allocator.h ****       // 2103. std::allocator propagate_on_container_move_assignment
  84:/usr/include/c++/6/bits/allocator.h ****       typedef true_type propagate_on_container_move_assignment;
  85:/usr/include/c++/6/bits/allocator.h **** 
  86:/usr/include/c++/6/bits/allocator.h ****       typedef true_type is_always_equal;
  87:/usr/include/c++/6/bits/allocator.h **** 
  88:/usr/include/c++/6/bits/allocator.h ****       template<typename _Up, typename... _Args>
  89:/usr/include/c++/6/bits/allocator.h **** 	void
  90:/usr/include/c++/6/bits/allocator.h **** 	construct(_Up* __p, _Args&&... __args)
  91:/usr/include/c++/6/bits/allocator.h **** 	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
  92:/usr/include/c++/6/bits/allocator.h **** 
  93:/usr/include/c++/6/bits/allocator.h ****       template<typename _Up>
  94:/usr/include/c++/6/bits/allocator.h **** 	void
  95:/usr/include/c++/6/bits/allocator.h **** 	destroy(_Up* __p) { __p->~_Up(); }
  96:/usr/include/c++/6/bits/allocator.h **** #endif
  97:/usr/include/c++/6/bits/allocator.h ****     };
  98:/usr/include/c++/6/bits/allocator.h **** 
  99:/usr/include/c++/6/bits/allocator.h ****   /**
 100:/usr/include/c++/6/bits/allocator.h ****    * @brief  The @a standard allocator, as per [20.4].
 101:/usr/include/c++/6/bits/allocator.h ****    *
 102:/usr/include/c++/6/bits/allocator.h ****    *  See https://gcc.gnu.org/onlinedocs/libstdc++/manual/memory.html#std.util.memory.allocator
 103:/usr/include/c++/6/bits/allocator.h ****    *  for further details.
 104:/usr/include/c++/6/bits/allocator.h ****    *
 105:/usr/include/c++/6/bits/allocator.h ****    *  @tparam  _Tp  Type of allocated object.
 106:/usr/include/c++/6/bits/allocator.h ****    */
 107:/usr/include/c++/6/bits/allocator.h ****   template<typename _Tp>
 108:/usr/include/c++/6/bits/allocator.h ****     class allocator: public __allocator_base<_Tp>
 109:/usr/include/c++/6/bits/allocator.h ****     {
 110:/usr/include/c++/6/bits/allocator.h ****    public:
 111:/usr/include/c++/6/bits/allocator.h ****       typedef size_t     size_type;
 112:/usr/include/c++/6/bits/allocator.h ****       typedef ptrdiff_t  difference_type;
 113:/usr/include/c++/6/bits/allocator.h ****       typedef _Tp*       pointer;
 114:/usr/include/c++/6/bits/allocator.h ****       typedef const _Tp* const_pointer;
 115:/usr/include/c++/6/bits/allocator.h ****       typedef _Tp&       reference;
 116:/usr/include/c++/6/bits/allocator.h ****       typedef const _Tp& const_reference;
 117:/usr/include/c++/6/bits/allocator.h ****       typedef _Tp        value_type;
 118:/usr/include/c++/6/bits/allocator.h **** 
 119:/usr/include/c++/6/bits/allocator.h ****       template<typename _Tp1>
 120:/usr/include/c++/6/bits/allocator.h ****         struct rebind
 121:/usr/include/c++/6/bits/allocator.h ****         { typedef allocator<_Tp1> other; };
 122:/usr/include/c++/6/bits/allocator.h **** 
 123:/usr/include/c++/6/bits/allocator.h **** #if __cplusplus >= 201103L
 124:/usr/include/c++/6/bits/allocator.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 125:/usr/include/c++/6/bits/allocator.h ****       // 2103. std::allocator propagate_on_container_move_assignment
GAS LISTING /tmp/ccvUPO8Q.s 			page 467


 126:/usr/include/c++/6/bits/allocator.h ****       typedef true_type propagate_on_container_move_assignment;
 127:/usr/include/c++/6/bits/allocator.h **** 
 128:/usr/include/c++/6/bits/allocator.h ****       typedef true_type is_always_equal;
 129:/usr/include/c++/6/bits/allocator.h **** #endif
 130:/usr/include/c++/6/bits/allocator.h **** 
 131:/usr/include/c++/6/bits/allocator.h ****       allocator() throw() { }
 132:/usr/include/c++/6/bits/allocator.h **** 
 133:/usr/include/c++/6/bits/allocator.h ****       allocator(const allocator& __a) throw()
 134:/usr/include/c++/6/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 135:/usr/include/c++/6/bits/allocator.h **** 
 136:/usr/include/c++/6/bits/allocator.h ****       template<typename _Tp1>
 137:/usr/include/c++/6/bits/allocator.h ****         allocator(const allocator<_Tp1>&) throw() { }
 138:/usr/include/c++/6/bits/allocator.h **** 
 139:/usr/include/c++/6/bits/allocator.h ****       ~allocator() throw() { }
 10449              		.loc 38 139 0
 10450              		.cfi_startproc
 10451 0000 55       		pushq	%rbp
 10452              		.cfi_def_cfa_offset 16
 10453              		.cfi_offset 6, -16
 10454 0001 4889E5   		movq	%rsp, %rbp
 10455              		.cfi_def_cfa_register 6
 10456 0004 4883EC10 		subq	$16, %rsp
 10457 0008 48897DF8 		movq	%rdi, -8(%rbp)
 10458              	.LBB101:
 10459              		.loc 38 139 0
 10460 000c 488B45F8 		movq	-8(%rbp), %rax
 10461 0010 4889C7   		movq	%rax, %rdi
 10462 0013 E8000000 		call	_ZN9__gnu_cxx13new_allocatorIiED2Ev
 10462      00
 10463              	.LBE101:
 10464 0018 90       		nop
 10465 0019 C9       		leave
 10466              		.cfi_def_cfa 7, 8
 10467 001a C3       		ret
 10468              		.cfi_endproc
 10469              	.LFE13390:
 10471              		.weak	_ZNSaIiED1Ev
 10472              		.set	_ZNSaIiED1Ev,_ZNSaIiED2Ev
 10473              		.section	.text._ZNSt12_Vector_baseIiSaIiEE12_Vector_implD2Ev,"axG",@progbits,_ZNSt12_Vector_baseIi
 10474              		.align 2
 10475              		.weak	_ZNSt12_Vector_baseIiSaIiEE12_Vector_implD2Ev
 10477              	_ZNSt12_Vector_baseIiSaIiEE12_Vector_implD2Ev:
 10478              	.LFB13394:
  79:/usr/include/c++/6/bits/stl_vector.h ****       : public _Tp_alloc_type
 10479              		.loc 30 79 0
 10480              		.cfi_startproc
 10481 0000 55       		pushq	%rbp
 10482              		.cfi_def_cfa_offset 16
 10483              		.cfi_offset 6, -16
 10484 0001 4889E5   		movq	%rsp, %rbp
 10485              		.cfi_def_cfa_register 6
 10486 0004 4883EC10 		subq	$16, %rsp
 10487 0008 48897DF8 		movq	%rdi, -8(%rbp)
 10488              	.LBB102:
  79:/usr/include/c++/6/bits/stl_vector.h ****       : public _Tp_alloc_type
 10489              		.loc 30 79 0
 10490 000c 488B45F8 		movq	-8(%rbp), %rax
GAS LISTING /tmp/ccvUPO8Q.s 			page 468


 10491 0010 4889C7   		movq	%rax, %rdi
 10492 0013 E8000000 		call	_ZNSaIiED2Ev
 10492      00
 10493              	.LBE102:
 10494 0018 90       		nop
 10495 0019 C9       		leave
 10496              		.cfi_def_cfa 7, 8
 10497 001a C3       		ret
 10498              		.cfi_endproc
 10499              	.LFE13394:
 10501              		.weak	_ZNSt12_Vector_baseIiSaIiEE12_Vector_implD1Ev
 10502              		.set	_ZNSt12_Vector_baseIiSaIiEE12_Vector_implD1Ev,_ZNSt12_Vector_baseIiSaIiEE12_Vector_implD2Ev
 10503              		.section	.text._ZNSt12_Vector_baseIiSaIiEEC2EmRKS0_,"axG",@progbits,_ZNSt12_Vector_baseIiSaIiEEC5E
 10504              		.align 2
 10505              		.weak	_ZNSt12_Vector_baseIiSaIiEEC2EmRKS0_
 10507              	_ZNSt12_Vector_baseIiSaIiEEC2EmRKS0_:
 10508              	.LFB13396:
 134:/usr/include/c++/6/bits/stl_vector.h ****       : _M_impl(__a)
 10509              		.loc 30 134 0
 10510              		.cfi_startproc
 10511              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 10512              		.cfi_lsda 0x1b,.LLSDA13396
 10513 0000 55       		pushq	%rbp
 10514              		.cfi_def_cfa_offset 16
 10515              		.cfi_offset 6, -16
 10516 0001 4889E5   		movq	%rsp, %rbp
 10517              		.cfi_def_cfa_register 6
 10518 0004 53       		pushq	%rbx
 10519 0005 4883EC28 		subq	$40, %rsp
 10520              		.cfi_offset 3, -24
 10521 0009 48897DE8 		movq	%rdi, -24(%rbp)
 10522 000d 488975E0 		movq	%rsi, -32(%rbp)
 10523 0011 488955D8 		movq	%rdx, -40(%rbp)
 10524              	.LBB103:
 135:/usr/include/c++/6/bits/stl_vector.h ****       { _M_create_storage(__n); }
 10525              		.loc 30 135 0
 10526 0015 488B45E8 		movq	-24(%rbp), %rax
 10527 0019 488B55D8 		movq	-40(%rbp), %rdx
 10528 001d 4889D6   		movq	%rdx, %rsi
 10529 0020 4889C7   		movq	%rax, %rdi
 10530 0023 E8000000 		call	_ZNSt12_Vector_baseIiSaIiEE12_Vector_implC1ERKS0_
 10530      00
 136:/usr/include/c++/6/bits/stl_vector.h **** 
 10531              		.loc 30 136 0
 10532 0028 488B55E0 		movq	-32(%rbp), %rdx
 10533 002c 488B45E8 		movq	-24(%rbp), %rax
 10534 0030 4889D6   		movq	%rdx, %rsi
 10535 0033 4889C7   		movq	%rax, %rdi
 10536              	.LEHB87:
 10537 0036 E8000000 		call	_ZNSt12_Vector_baseIiSaIiEE17_M_create_storageEm
 10537      00
 10538              	.LEHE87:
 10539              	.LBE103:
 10540 003b EB1A     		jmp	.L506
 10541              	.L505:
 10542 003d 4889C3   		movq	%rax, %rbx
 10543              	.LBB104:
GAS LISTING /tmp/ccvUPO8Q.s 			page 469


 135:/usr/include/c++/6/bits/stl_vector.h ****       { _M_create_storage(__n); }
 10544              		.loc 30 135 0
 10545 0040 488B45E8 		movq	-24(%rbp), %rax
 10546 0044 4889C7   		movq	%rax, %rdi
 10547 0047 E8000000 		call	_ZNSt12_Vector_baseIiSaIiEE12_Vector_implD1Ev
 10547      00
 10548 004c 4889D8   		movq	%rbx, %rax
 10549 004f 4889C7   		movq	%rax, %rdi
 10550              	.LEHB88:
 10551 0052 E8000000 		call	_Unwind_Resume@PLT
 10551      00
 10552              	.LEHE88:
 10553              	.L506:
 10554              	.LBE104:
 136:/usr/include/c++/6/bits/stl_vector.h **** 
 10555              		.loc 30 136 0
 10556 0057 4883C428 		addq	$40, %rsp
 10557 005b 5B       		popq	%rbx
 10558 005c 5D       		popq	%rbp
 10559              		.cfi_def_cfa 7, 8
 10560 005d C3       		ret
 10561              		.cfi_endproc
 10562              	.LFE13396:
 10563              		.section	.gcc_except_table
 10564              	.LLSDA13396:
 10565 01e6 FF       		.byte	0xff
 10566 01e7 FF       		.byte	0xff
 10567 01e8 01       		.byte	0x1
 10568 01e9 08       		.uleb128 .LLSDACSE13396-.LLSDACSB13396
 10569              	.LLSDACSB13396:
 10570 01ea 36       		.uleb128 .LEHB87-.LFB13396
 10571 01eb 05       		.uleb128 .LEHE87-.LEHB87
 10572 01ec 3D       		.uleb128 .L505-.LFB13396
 10573 01ed 00       		.uleb128 0
 10574 01ee 52       		.uleb128 .LEHB88-.LFB13396
 10575 01ef 05       		.uleb128 .LEHE88-.LEHB88
 10576 01f0 00       		.uleb128 0
 10577 01f1 00       		.uleb128 0
 10578              	.LLSDACSE13396:
 10579              		.section	.text._ZNSt12_Vector_baseIiSaIiEEC2EmRKS0_,"axG",@progbits,_ZNSt12_Vector_baseIiSaIiEEC5E
 10581              		.weak	_ZNSt12_Vector_baseIiSaIiEEC1EmRKS0_
 10582              		.set	_ZNSt12_Vector_baseIiSaIiEEC1EmRKS0_,_ZNSt12_Vector_baseIiSaIiEEC2EmRKS0_
 10583              		.section	.text._ZNSt12_Vector_baseIiSaIiEED2Ev,"axG",@progbits,_ZNSt12_Vector_baseIiSaIiEED5Ev,com
 10584              		.align 2
 10585              		.weak	_ZNSt12_Vector_baseIiSaIiEED2Ev
 10587              	_ZNSt12_Vector_baseIiSaIiEED2Ev:
 10588              	.LFB13399:
 159:/usr/include/c++/6/bits/stl_vector.h ****       { _M_deallocate(this->_M_impl._M_start, this->_M_impl._M_end_of_storage
 10589              		.loc 30 159 0
 10590              		.cfi_startproc
 10591              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 10592              		.cfi_lsda 0x1b,.LLSDA13399
 10593 0000 55       		pushq	%rbp
 10594              		.cfi_def_cfa_offset 16
 10595              		.cfi_offset 6, -16
 10596 0001 4889E5   		movq	%rsp, %rbp
 10597              		.cfi_def_cfa_register 6
GAS LISTING /tmp/ccvUPO8Q.s 			page 470


 10598 0004 4883EC10 		subq	$16, %rsp
 10599 0008 48897DF8 		movq	%rdi, -8(%rbp)
 10600              	.LBB105:
 160:/usr/include/c++/6/bits/stl_vector.h **** 		      - this->_M_impl._M_start); }
 10601              		.loc 30 160 0
 10602 000c 488B45F8 		movq	-8(%rbp), %rax
 10603 0010 488B4010 		movq	16(%rax), %rax
 161:/usr/include/c++/6/bits/stl_vector.h **** 
 10604              		.loc 30 161 0
 10605 0014 4889C2   		movq	%rax, %rdx
 10606 0017 488B45F8 		movq	-8(%rbp), %rax
 10607 001b 488B00   		movq	(%rax), %rax
 10608 001e 4829C2   		subq	%rax, %rdx
 10609 0021 4889D0   		movq	%rdx, %rax
 160:/usr/include/c++/6/bits/stl_vector.h **** 		      - this->_M_impl._M_start); }
 10610              		.loc 30 160 0
 10611 0024 48C1F802 		sarq	$2, %rax
 10612 0028 4889C2   		movq	%rax, %rdx
 10613 002b 488B45F8 		movq	-8(%rbp), %rax
 10614 002f 488B08   		movq	(%rax), %rcx
 10615 0032 488B45F8 		movq	-8(%rbp), %rax
 10616 0036 4889CE   		movq	%rcx, %rsi
 10617 0039 4889C7   		movq	%rax, %rdi
 10618 003c E8000000 		call	_ZNSt12_Vector_baseIiSaIiEE13_M_deallocateEPim
 10618      00
 161:/usr/include/c++/6/bits/stl_vector.h **** 
 10619              		.loc 30 161 0
 10620 0041 488B45F8 		movq	-8(%rbp), %rax
 10621 0045 4889C7   		movq	%rax, %rdi
 10622 0048 E8000000 		call	_ZNSt12_Vector_baseIiSaIiEE12_Vector_implD1Ev
 10622      00
 10623              	.LBE105:
 10624 004d 90       		nop
 10625 004e C9       		leave
 10626              		.cfi_def_cfa 7, 8
 10627 004f C3       		ret
 10628              		.cfi_endproc
 10629              	.LFE13399:
 10630              		.section	.gcc_except_table
 10631              	.LLSDA13399:
 10632 01f2 FF       		.byte	0xff
 10633 01f3 FF       		.byte	0xff
 10634 01f4 01       		.byte	0x1
 10635 01f5 00       		.uleb128 .LLSDACSE13399-.LLSDACSB13399
 10636              	.LLSDACSB13399:
 10637              	.LLSDACSE13399:
 10638              		.section	.text._ZNSt12_Vector_baseIiSaIiEED2Ev,"axG",@progbits,_ZNSt12_Vector_baseIiSaIiEED5Ev,com
 10640              		.weak	_ZNSt12_Vector_baseIiSaIiEED1Ev
 10641              		.set	_ZNSt12_Vector_baseIiSaIiEED1Ev,_ZNSt12_Vector_baseIiSaIiEED2Ev
 10642              		.section	.text._ZNKSt6vectorIiSaIiEE5beginEv,"axG",@progbits,_ZNKSt6vectorIiSaIiEE5beginEv,comdat
 10643              		.align 2
 10644              		.weak	_ZNKSt6vectorIiSaIiEE5beginEv
 10646              	_ZNKSt6vectorIiSaIiEE5beginEv:
 10647              	.LFB13401:
 557:/usr/include/c++/6/bits/stl_vector.h ****       { return const_iterator(this->_M_impl._M_start); }
 10648              		.loc 30 557 0
 10649              		.cfi_startproc
GAS LISTING /tmp/ccvUPO8Q.s 			page 471


 10650 0000 55       		pushq	%rbp
 10651              		.cfi_def_cfa_offset 16
 10652              		.cfi_offset 6, -16
 10653 0001 4889E5   		movq	%rsp, %rbp
 10654              		.cfi_def_cfa_register 6
 10655 0004 4883EC20 		subq	$32, %rsp
 10656 0008 48897DE8 		movq	%rdi, -24(%rbp)
 558:/usr/include/c++/6/bits/stl_vector.h **** 
 10657              		.loc 30 558 0
 10658 000c 488B45E8 		movq	-24(%rbp), %rax
 10659 0010 488B00   		movq	(%rax), %rax
 10660 0013 488945F8 		movq	%rax, -8(%rbp)
 10661 0017 488D55F8 		leaq	-8(%rbp), %rdx
 10662 001b 488D45F0 		leaq	-16(%rbp), %rax
 10663 001f 4889D6   		movq	%rdx, %rsi
 10664 0022 4889C7   		movq	%rax, %rdi
 10665 0025 E8000000 		call	_ZN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEC1ERKS2_
 10665      00
 10666 002a 488B45F0 		movq	-16(%rbp), %rax
 10667 002e C9       		leave
 10668              		.cfi_def_cfa 7, 8
 10669 002f C3       		ret
 10670              		.cfi_endproc
 10671              	.LFE13401:
 10673              		.section	.text._ZNKSt6vectorIiSaIiEE3endEv,"axG",@progbits,_ZNKSt6vectorIiSaIiEE3endEv,comdat
 10674              		.align 2
 10675              		.weak	_ZNKSt6vectorIiSaIiEE3endEv
 10677              	_ZNKSt6vectorIiSaIiEE3endEv:
 10678              	.LFB13402:
 575:/usr/include/c++/6/bits/stl_vector.h ****       { return const_iterator(this->_M_impl._M_finish); }
 10679              		.loc 30 575 0
 10680              		.cfi_startproc
 10681 0000 55       		pushq	%rbp
 10682              		.cfi_def_cfa_offset 16
 10683              		.cfi_offset 6, -16
 10684 0001 4889E5   		movq	%rsp, %rbp
 10685              		.cfi_def_cfa_register 6
 10686 0004 4883EC20 		subq	$32, %rsp
 10687 0008 48897DE8 		movq	%rdi, -24(%rbp)
 576:/usr/include/c++/6/bits/stl_vector.h **** 
 10688              		.loc 30 576 0
 10689 000c 488B45E8 		movq	-24(%rbp), %rax
 10690 0010 488B4008 		movq	8(%rax), %rax
 10691 0014 488945F8 		movq	%rax, -8(%rbp)
 10692 0018 488D55F8 		leaq	-8(%rbp), %rdx
 10693 001c 488D45F0 		leaq	-16(%rbp), %rax
 10694 0020 4889D6   		movq	%rdx, %rsi
 10695 0023 4889C7   		movq	%rax, %rdi
 10696 0026 E8000000 		call	_ZN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEC1ERKS2_
 10696      00
 10697 002b 488B45F0 		movq	-16(%rbp), %rax
 10698 002f C9       		leave
 10699              		.cfi_def_cfa 7, 8
 10700 0030 C3       		ret
 10701              		.cfi_endproc
 10702              	.LFE13402:
 10704              		.section	.text._ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv,"axG",@progbits,_ZNSt12_Vector_b
GAS LISTING /tmp/ccvUPO8Q.s 			page 472


 10705              		.align 2
 10706              		.weak	_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv
 10708              	_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv:
 10709              	.LFB13403:
 113:/usr/include/c++/6/bits/stl_vector.h ****       { return *static_cast<_Tp_alloc_type*>(&this->_M_impl); }
 10710              		.loc 30 113 0
 10711              		.cfi_startproc
 10712 0000 55       		pushq	%rbp
 10713              		.cfi_def_cfa_offset 16
 10714              		.cfi_offset 6, -16
 10715 0001 4889E5   		movq	%rsp, %rbp
 10716              		.cfi_def_cfa_register 6
 10717 0004 48897DF8 		movq	%rdi, -8(%rbp)
 114:/usr/include/c++/6/bits/stl_vector.h **** 
 10718              		.loc 30 114 0
 10719 0008 488B45F8 		movq	-8(%rbp), %rax
 10720 000c 5D       		popq	%rbp
 10721              		.cfi_def_cfa 7, 8
 10722 000d C3       		ret
 10723              		.cfi_endproc
 10724              	.LFE13403:
 10726              		.section	.text._ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEP
 10727              		.weak	_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEPiiET0_T_S
 10729              	_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEPiiET0_T_SA_S9_RS
 10730              	.LFB13404:
 10731              		.file 39 "/usr/include/c++/6/bits/stl_uninitialized.h"
   1:/usr/include/c++/6/bits/stl_uninitialized.h **** // Raw memory manipulators -*- C++ -*-
   2:/usr/include/c++/6/bits/stl_uninitialized.h **** 
   3:/usr/include/c++/6/bits/stl_uninitialized.h **** // Copyright (C) 2001-2016 Free Software Foundation, Inc.
   4:/usr/include/c++/6/bits/stl_uninitialized.h **** //
   5:/usr/include/c++/6/bits/stl_uninitialized.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/6/bits/stl_uninitialized.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/6/bits/stl_uninitialized.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/6/bits/stl_uninitialized.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/6/bits/stl_uninitialized.h **** // any later version.
  10:/usr/include/c++/6/bits/stl_uninitialized.h **** 
  11:/usr/include/c++/6/bits/stl_uninitialized.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/6/bits/stl_uninitialized.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/6/bits/stl_uninitialized.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/6/bits/stl_uninitialized.h **** // GNU General Public License for more details.
  15:/usr/include/c++/6/bits/stl_uninitialized.h **** 
  16:/usr/include/c++/6/bits/stl_uninitialized.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/6/bits/stl_uninitialized.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/6/bits/stl_uninitialized.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/6/bits/stl_uninitialized.h **** 
  20:/usr/include/c++/6/bits/stl_uninitialized.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/6/bits/stl_uninitialized.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/6/bits/stl_uninitialized.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/6/bits/stl_uninitialized.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/6/bits/stl_uninitialized.h **** 
  25:/usr/include/c++/6/bits/stl_uninitialized.h **** /*
  26:/usr/include/c++/6/bits/stl_uninitialized.h ****  *
  27:/usr/include/c++/6/bits/stl_uninitialized.h ****  * Copyright (c) 1994
  28:/usr/include/c++/6/bits/stl_uninitialized.h ****  * Hewlett-Packard Company
  29:/usr/include/c++/6/bits/stl_uninitialized.h ****  *
  30:/usr/include/c++/6/bits/stl_uninitialized.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:/usr/include/c++/6/bits/stl_uninitialized.h ****  * and its documentation for any purpose is hereby granted without fee,
GAS LISTING /tmp/ccvUPO8Q.s 			page 473


  32:/usr/include/c++/6/bits/stl_uninitialized.h ****  * provided that the above copyright notice appear in all copies and
  33:/usr/include/c++/6/bits/stl_uninitialized.h ****  * that both that copyright notice and this permission notice appear
  34:/usr/include/c++/6/bits/stl_uninitialized.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:/usr/include/c++/6/bits/stl_uninitialized.h ****  * representations about the suitability of this software for any
  36:/usr/include/c++/6/bits/stl_uninitialized.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:/usr/include/c++/6/bits/stl_uninitialized.h ****  *
  38:/usr/include/c++/6/bits/stl_uninitialized.h ****  *
  39:/usr/include/c++/6/bits/stl_uninitialized.h ****  * Copyright (c) 1996,1997
  40:/usr/include/c++/6/bits/stl_uninitialized.h ****  * Silicon Graphics Computer Systems, Inc.
  41:/usr/include/c++/6/bits/stl_uninitialized.h ****  *
  42:/usr/include/c++/6/bits/stl_uninitialized.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:/usr/include/c++/6/bits/stl_uninitialized.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:/usr/include/c++/6/bits/stl_uninitialized.h ****  * provided that the above copyright notice appear in all copies and
  45:/usr/include/c++/6/bits/stl_uninitialized.h ****  * that both that copyright notice and this permission notice appear
  46:/usr/include/c++/6/bits/stl_uninitialized.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:/usr/include/c++/6/bits/stl_uninitialized.h ****  * representations about the suitability of this software for any
  48:/usr/include/c++/6/bits/stl_uninitialized.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:/usr/include/c++/6/bits/stl_uninitialized.h ****  */
  50:/usr/include/c++/6/bits/stl_uninitialized.h **** 
  51:/usr/include/c++/6/bits/stl_uninitialized.h **** /** @file bits/stl_uninitialized.h
  52:/usr/include/c++/6/bits/stl_uninitialized.h ****  *  This is an internal header file, included by other library headers.
  53:/usr/include/c++/6/bits/stl_uninitialized.h ****  *  Do not attempt to use it directly. @headername{memory}
  54:/usr/include/c++/6/bits/stl_uninitialized.h ****  */
  55:/usr/include/c++/6/bits/stl_uninitialized.h **** 
  56:/usr/include/c++/6/bits/stl_uninitialized.h **** #ifndef _STL_UNINITIALIZED_H
  57:/usr/include/c++/6/bits/stl_uninitialized.h **** #define _STL_UNINITIALIZED_H 1
  58:/usr/include/c++/6/bits/stl_uninitialized.h **** 
  59:/usr/include/c++/6/bits/stl_uninitialized.h **** namespace std _GLIBCXX_VISIBILITY(default)
  60:/usr/include/c++/6/bits/stl_uninitialized.h **** {
  61:/usr/include/c++/6/bits/stl_uninitialized.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  62:/usr/include/c++/6/bits/stl_uninitialized.h **** 
  63:/usr/include/c++/6/bits/stl_uninitialized.h ****   template<bool _TrivialValueTypes>
  64:/usr/include/c++/6/bits/stl_uninitialized.h ****     struct __uninitialized_copy
  65:/usr/include/c++/6/bits/stl_uninitialized.h ****     {
  66:/usr/include/c++/6/bits/stl_uninitialized.h ****       template<typename _InputIterator, typename _ForwardIterator>
  67:/usr/include/c++/6/bits/stl_uninitialized.h ****         static _ForwardIterator
  68:/usr/include/c++/6/bits/stl_uninitialized.h ****         __uninit_copy(_InputIterator __first, _InputIterator __last,
  69:/usr/include/c++/6/bits/stl_uninitialized.h **** 		      _ForwardIterator __result)
  70:/usr/include/c++/6/bits/stl_uninitialized.h ****         {
  71:/usr/include/c++/6/bits/stl_uninitialized.h **** 	  _ForwardIterator __cur = __result;
  72:/usr/include/c++/6/bits/stl_uninitialized.h **** 	  __try
  73:/usr/include/c++/6/bits/stl_uninitialized.h **** 	    {
  74:/usr/include/c++/6/bits/stl_uninitialized.h **** 	      for (; __first != __last; ++__first, (void)++__cur)
  75:/usr/include/c++/6/bits/stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur), *__first);
  76:/usr/include/c++/6/bits/stl_uninitialized.h **** 	      return __cur;
  77:/usr/include/c++/6/bits/stl_uninitialized.h **** 	    }
  78:/usr/include/c++/6/bits/stl_uninitialized.h **** 	  __catch(...)
  79:/usr/include/c++/6/bits/stl_uninitialized.h **** 	    {
  80:/usr/include/c++/6/bits/stl_uninitialized.h **** 	      std::_Destroy(__result, __cur);
  81:/usr/include/c++/6/bits/stl_uninitialized.h **** 	      __throw_exception_again;
  82:/usr/include/c++/6/bits/stl_uninitialized.h **** 	    }
  83:/usr/include/c++/6/bits/stl_uninitialized.h **** 	}
  84:/usr/include/c++/6/bits/stl_uninitialized.h ****     };
  85:/usr/include/c++/6/bits/stl_uninitialized.h **** 
  86:/usr/include/c++/6/bits/stl_uninitialized.h ****   template<>
  87:/usr/include/c++/6/bits/stl_uninitialized.h ****     struct __uninitialized_copy<true>
  88:/usr/include/c++/6/bits/stl_uninitialized.h ****     {
GAS LISTING /tmp/ccvUPO8Q.s 			page 474


  89:/usr/include/c++/6/bits/stl_uninitialized.h ****       template<typename _InputIterator, typename _ForwardIterator>
  90:/usr/include/c++/6/bits/stl_uninitialized.h ****         static _ForwardIterator
  91:/usr/include/c++/6/bits/stl_uninitialized.h ****         __uninit_copy(_InputIterator __first, _InputIterator __last,
  92:/usr/include/c++/6/bits/stl_uninitialized.h **** 		      _ForwardIterator __result)
  93:/usr/include/c++/6/bits/stl_uninitialized.h ****         { return std::copy(__first, __last, __result); }
  94:/usr/include/c++/6/bits/stl_uninitialized.h ****     };
  95:/usr/include/c++/6/bits/stl_uninitialized.h **** 
  96:/usr/include/c++/6/bits/stl_uninitialized.h ****   /**
  97:/usr/include/c++/6/bits/stl_uninitialized.h ****    *  @brief Copies the range [first,last) into result.
  98:/usr/include/c++/6/bits/stl_uninitialized.h ****    *  @param  __first  An input iterator.
  99:/usr/include/c++/6/bits/stl_uninitialized.h ****    *  @param  __last   An input iterator.
 100:/usr/include/c++/6/bits/stl_uninitialized.h ****    *  @param  __result An output iterator.
 101:/usr/include/c++/6/bits/stl_uninitialized.h ****    *  @return   __result + (__first - __last)
 102:/usr/include/c++/6/bits/stl_uninitialized.h ****    *
 103:/usr/include/c++/6/bits/stl_uninitialized.h ****    *  Like copy(), but does not require an initialized output range.
 104:/usr/include/c++/6/bits/stl_uninitialized.h ****   */
 105:/usr/include/c++/6/bits/stl_uninitialized.h ****   template<typename _InputIterator, typename _ForwardIterator>
 106:/usr/include/c++/6/bits/stl_uninitialized.h ****     inline _ForwardIterator
 107:/usr/include/c++/6/bits/stl_uninitialized.h ****     uninitialized_copy(_InputIterator __first, _InputIterator __last,
 108:/usr/include/c++/6/bits/stl_uninitialized.h **** 		       _ForwardIterator __result)
 109:/usr/include/c++/6/bits/stl_uninitialized.h ****     {
 110:/usr/include/c++/6/bits/stl_uninitialized.h ****       typedef typename iterator_traits<_InputIterator>::value_type
 111:/usr/include/c++/6/bits/stl_uninitialized.h **** 	_ValueType1;
 112:/usr/include/c++/6/bits/stl_uninitialized.h ****       typedef typename iterator_traits<_ForwardIterator>::value_type
 113:/usr/include/c++/6/bits/stl_uninitialized.h **** 	_ValueType2;
 114:/usr/include/c++/6/bits/stl_uninitialized.h **** #if __cplusplus < 201103L
 115:/usr/include/c++/6/bits/stl_uninitialized.h ****       const bool __assignable = true;
 116:/usr/include/c++/6/bits/stl_uninitialized.h **** #else
 117:/usr/include/c++/6/bits/stl_uninitialized.h ****       // trivial types can have deleted assignment
 118:/usr/include/c++/6/bits/stl_uninitialized.h ****       typedef typename iterator_traits<_InputIterator>::reference _RefType1;
 119:/usr/include/c++/6/bits/stl_uninitialized.h ****       typedef typename iterator_traits<_ForwardIterator>::reference _RefType2;
 120:/usr/include/c++/6/bits/stl_uninitialized.h ****       const bool __assignable = is_assignable<_RefType2, _RefType1>::value;
 121:/usr/include/c++/6/bits/stl_uninitialized.h **** #endif
 122:/usr/include/c++/6/bits/stl_uninitialized.h **** 
 123:/usr/include/c++/6/bits/stl_uninitialized.h ****       return std::__uninitialized_copy<__is_trivial(_ValueType1)
 124:/usr/include/c++/6/bits/stl_uninitialized.h **** 				       && __is_trivial(_ValueType2)
 125:/usr/include/c++/6/bits/stl_uninitialized.h **** 				       && __assignable>::
 126:/usr/include/c++/6/bits/stl_uninitialized.h **** 	__uninit_copy(__first, __last, __result);
 127:/usr/include/c++/6/bits/stl_uninitialized.h ****     }
 128:/usr/include/c++/6/bits/stl_uninitialized.h **** 
 129:/usr/include/c++/6/bits/stl_uninitialized.h **** 
 130:/usr/include/c++/6/bits/stl_uninitialized.h ****   template<bool _TrivialValueType>
 131:/usr/include/c++/6/bits/stl_uninitialized.h ****     struct __uninitialized_fill
 132:/usr/include/c++/6/bits/stl_uninitialized.h ****     {
 133:/usr/include/c++/6/bits/stl_uninitialized.h ****       template<typename _ForwardIterator, typename _Tp>
 134:/usr/include/c++/6/bits/stl_uninitialized.h ****         static void
 135:/usr/include/c++/6/bits/stl_uninitialized.h ****         __uninit_fill(_ForwardIterator __first, _ForwardIterator __last,
 136:/usr/include/c++/6/bits/stl_uninitialized.h **** 		      const _Tp& __x)
 137:/usr/include/c++/6/bits/stl_uninitialized.h ****         {
 138:/usr/include/c++/6/bits/stl_uninitialized.h **** 	  _ForwardIterator __cur = __first;
 139:/usr/include/c++/6/bits/stl_uninitialized.h **** 	  __try
 140:/usr/include/c++/6/bits/stl_uninitialized.h **** 	    {
 141:/usr/include/c++/6/bits/stl_uninitialized.h **** 	      for (; __cur != __last; ++__cur)
 142:/usr/include/c++/6/bits/stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur), __x);
 143:/usr/include/c++/6/bits/stl_uninitialized.h **** 	    }
 144:/usr/include/c++/6/bits/stl_uninitialized.h **** 	  __catch(...)
 145:/usr/include/c++/6/bits/stl_uninitialized.h **** 	    {
GAS LISTING /tmp/ccvUPO8Q.s 			page 475


 146:/usr/include/c++/6/bits/stl_uninitialized.h **** 	      std::_Destroy(__first, __cur);
 147:/usr/include/c++/6/bits/stl_uninitialized.h **** 	      __throw_exception_again;
 148:/usr/include/c++/6/bits/stl_uninitialized.h **** 	    }
 149:/usr/include/c++/6/bits/stl_uninitialized.h **** 	}
 150:/usr/include/c++/6/bits/stl_uninitialized.h ****     };
 151:/usr/include/c++/6/bits/stl_uninitialized.h **** 
 152:/usr/include/c++/6/bits/stl_uninitialized.h ****   template<>
 153:/usr/include/c++/6/bits/stl_uninitialized.h ****     struct __uninitialized_fill<true>
 154:/usr/include/c++/6/bits/stl_uninitialized.h ****     {
 155:/usr/include/c++/6/bits/stl_uninitialized.h ****       template<typename _ForwardIterator, typename _Tp>
 156:/usr/include/c++/6/bits/stl_uninitialized.h ****         static void
 157:/usr/include/c++/6/bits/stl_uninitialized.h ****         __uninit_fill(_ForwardIterator __first, _ForwardIterator __last,
 158:/usr/include/c++/6/bits/stl_uninitialized.h **** 		      const _Tp& __x)
 159:/usr/include/c++/6/bits/stl_uninitialized.h ****         { std::fill(__first, __last, __x); }
 160:/usr/include/c++/6/bits/stl_uninitialized.h ****     };
 161:/usr/include/c++/6/bits/stl_uninitialized.h **** 
 162:/usr/include/c++/6/bits/stl_uninitialized.h ****   /**
 163:/usr/include/c++/6/bits/stl_uninitialized.h ****    *  @brief Copies the value x into the range [first,last).
 164:/usr/include/c++/6/bits/stl_uninitialized.h ****    *  @param  __first  An input iterator.
 165:/usr/include/c++/6/bits/stl_uninitialized.h ****    *  @param  __last   An input iterator.
 166:/usr/include/c++/6/bits/stl_uninitialized.h ****    *  @param  __x      The source value.
 167:/usr/include/c++/6/bits/stl_uninitialized.h ****    *  @return   Nothing.
 168:/usr/include/c++/6/bits/stl_uninitialized.h ****    *
 169:/usr/include/c++/6/bits/stl_uninitialized.h ****    *  Like fill(), but does not require an initialized output range.
 170:/usr/include/c++/6/bits/stl_uninitialized.h ****   */
 171:/usr/include/c++/6/bits/stl_uninitialized.h ****   template<typename _ForwardIterator, typename _Tp>
 172:/usr/include/c++/6/bits/stl_uninitialized.h ****     inline void
 173:/usr/include/c++/6/bits/stl_uninitialized.h ****     uninitialized_fill(_ForwardIterator __first, _ForwardIterator __last,
 174:/usr/include/c++/6/bits/stl_uninitialized.h **** 		       const _Tp& __x)
 175:/usr/include/c++/6/bits/stl_uninitialized.h ****     {
 176:/usr/include/c++/6/bits/stl_uninitialized.h ****       typedef typename iterator_traits<_ForwardIterator>::value_type
 177:/usr/include/c++/6/bits/stl_uninitialized.h **** 	_ValueType;
 178:/usr/include/c++/6/bits/stl_uninitialized.h **** #if __cplusplus < 201103L
 179:/usr/include/c++/6/bits/stl_uninitialized.h ****       const bool __assignable = true;
 180:/usr/include/c++/6/bits/stl_uninitialized.h **** #else
 181:/usr/include/c++/6/bits/stl_uninitialized.h ****       // trivial types can have deleted assignment
 182:/usr/include/c++/6/bits/stl_uninitialized.h ****       const bool __assignable = is_copy_assignable<_ValueType>::value;
 183:/usr/include/c++/6/bits/stl_uninitialized.h **** #endif
 184:/usr/include/c++/6/bits/stl_uninitialized.h **** 
 185:/usr/include/c++/6/bits/stl_uninitialized.h ****       std::__uninitialized_fill<__is_trivial(_ValueType) && __assignable>::
 186:/usr/include/c++/6/bits/stl_uninitialized.h **** 	__uninit_fill(__first, __last, __x);
 187:/usr/include/c++/6/bits/stl_uninitialized.h ****     }
 188:/usr/include/c++/6/bits/stl_uninitialized.h **** 
 189:/usr/include/c++/6/bits/stl_uninitialized.h **** 
 190:/usr/include/c++/6/bits/stl_uninitialized.h ****   template<bool _TrivialValueType>
 191:/usr/include/c++/6/bits/stl_uninitialized.h ****     struct __uninitialized_fill_n
 192:/usr/include/c++/6/bits/stl_uninitialized.h ****     {
 193:/usr/include/c++/6/bits/stl_uninitialized.h ****       template<typename _ForwardIterator, typename _Size, typename _Tp>
 194:/usr/include/c++/6/bits/stl_uninitialized.h ****         static _ForwardIterator
 195:/usr/include/c++/6/bits/stl_uninitialized.h ****         __uninit_fill_n(_ForwardIterator __first, _Size __n,
 196:/usr/include/c++/6/bits/stl_uninitialized.h **** 			const _Tp& __x)
 197:/usr/include/c++/6/bits/stl_uninitialized.h ****         {
 198:/usr/include/c++/6/bits/stl_uninitialized.h **** 	  _ForwardIterator __cur = __first;
 199:/usr/include/c++/6/bits/stl_uninitialized.h **** 	  __try
 200:/usr/include/c++/6/bits/stl_uninitialized.h **** 	    {
 201:/usr/include/c++/6/bits/stl_uninitialized.h **** 	      for (; __n > 0; --__n, ++__cur)
 202:/usr/include/c++/6/bits/stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur), __x);
GAS LISTING /tmp/ccvUPO8Q.s 			page 476


 203:/usr/include/c++/6/bits/stl_uninitialized.h **** 	      return __cur;
 204:/usr/include/c++/6/bits/stl_uninitialized.h **** 	    }
 205:/usr/include/c++/6/bits/stl_uninitialized.h **** 	  __catch(...)
 206:/usr/include/c++/6/bits/stl_uninitialized.h **** 	    {
 207:/usr/include/c++/6/bits/stl_uninitialized.h **** 	      std::_Destroy(__first, __cur);
 208:/usr/include/c++/6/bits/stl_uninitialized.h **** 	      __throw_exception_again;
 209:/usr/include/c++/6/bits/stl_uninitialized.h **** 	    }
 210:/usr/include/c++/6/bits/stl_uninitialized.h **** 	}
 211:/usr/include/c++/6/bits/stl_uninitialized.h ****     };
 212:/usr/include/c++/6/bits/stl_uninitialized.h **** 
 213:/usr/include/c++/6/bits/stl_uninitialized.h ****   template<>
 214:/usr/include/c++/6/bits/stl_uninitialized.h ****     struct __uninitialized_fill_n<true>
 215:/usr/include/c++/6/bits/stl_uninitialized.h ****     {
 216:/usr/include/c++/6/bits/stl_uninitialized.h ****       template<typename _ForwardIterator, typename _Size, typename _Tp>
 217:/usr/include/c++/6/bits/stl_uninitialized.h ****         static _ForwardIterator
 218:/usr/include/c++/6/bits/stl_uninitialized.h ****         __uninit_fill_n(_ForwardIterator __first, _Size __n,
 219:/usr/include/c++/6/bits/stl_uninitialized.h **** 			const _Tp& __x)
 220:/usr/include/c++/6/bits/stl_uninitialized.h ****         { return std::fill_n(__first, __n, __x); }
 221:/usr/include/c++/6/bits/stl_uninitialized.h ****     };
 222:/usr/include/c++/6/bits/stl_uninitialized.h **** 
 223:/usr/include/c++/6/bits/stl_uninitialized.h ****    // _GLIBCXX_RESOLVE_LIB_DEFECTS
 224:/usr/include/c++/6/bits/stl_uninitialized.h ****    // DR 1339. uninitialized_fill_n should return the end of its range
 225:/usr/include/c++/6/bits/stl_uninitialized.h ****   /**
 226:/usr/include/c++/6/bits/stl_uninitialized.h ****    *  @brief Copies the value x into the range [first,first+n).
 227:/usr/include/c++/6/bits/stl_uninitialized.h ****    *  @param  __first  An input iterator.
 228:/usr/include/c++/6/bits/stl_uninitialized.h ****    *  @param  __n      The number of copies to make.
 229:/usr/include/c++/6/bits/stl_uninitialized.h ****    *  @param  __x      The source value.
 230:/usr/include/c++/6/bits/stl_uninitialized.h ****    *  @return   Nothing.
 231:/usr/include/c++/6/bits/stl_uninitialized.h ****    *
 232:/usr/include/c++/6/bits/stl_uninitialized.h ****    *  Like fill_n(), but does not require an initialized output range.
 233:/usr/include/c++/6/bits/stl_uninitialized.h ****   */
 234:/usr/include/c++/6/bits/stl_uninitialized.h ****   template<typename _ForwardIterator, typename _Size, typename _Tp>
 235:/usr/include/c++/6/bits/stl_uninitialized.h ****     inline _ForwardIterator
 236:/usr/include/c++/6/bits/stl_uninitialized.h ****     uninitialized_fill_n(_ForwardIterator __first, _Size __n, const _Tp& __x)
 237:/usr/include/c++/6/bits/stl_uninitialized.h ****     {
 238:/usr/include/c++/6/bits/stl_uninitialized.h ****       typedef typename iterator_traits<_ForwardIterator>::value_type
 239:/usr/include/c++/6/bits/stl_uninitialized.h **** 	_ValueType;
 240:/usr/include/c++/6/bits/stl_uninitialized.h **** #if __cplusplus < 201103L
 241:/usr/include/c++/6/bits/stl_uninitialized.h ****       const bool __assignable = true;
 242:/usr/include/c++/6/bits/stl_uninitialized.h **** #else
 243:/usr/include/c++/6/bits/stl_uninitialized.h ****       // trivial types can have deleted assignment
 244:/usr/include/c++/6/bits/stl_uninitialized.h ****       const bool __assignable = is_copy_assignable<_ValueType>::value;
 245:/usr/include/c++/6/bits/stl_uninitialized.h **** #endif
 246:/usr/include/c++/6/bits/stl_uninitialized.h ****       return __uninitialized_fill_n<__is_trivial(_ValueType) && __assignable>::
 247:/usr/include/c++/6/bits/stl_uninitialized.h **** 	__uninit_fill_n(__first, __n, __x);
 248:/usr/include/c++/6/bits/stl_uninitialized.h ****     }
 249:/usr/include/c++/6/bits/stl_uninitialized.h **** 
 250:/usr/include/c++/6/bits/stl_uninitialized.h ****   // Extensions: versions of uninitialized_copy, uninitialized_fill,
 251:/usr/include/c++/6/bits/stl_uninitialized.h ****   //  and uninitialized_fill_n that take an allocator parameter.
 252:/usr/include/c++/6/bits/stl_uninitialized.h ****   //  We dispatch back to the standard versions when we're given the
 253:/usr/include/c++/6/bits/stl_uninitialized.h ****   //  default allocator.  For nondefault allocators we do not use 
 254:/usr/include/c++/6/bits/stl_uninitialized.h ****   //  any of the POD optimizations.
 255:/usr/include/c++/6/bits/stl_uninitialized.h **** 
 256:/usr/include/c++/6/bits/stl_uninitialized.h ****   template<typename _InputIterator, typename _ForwardIterator,
 257:/usr/include/c++/6/bits/stl_uninitialized.h **** 	   typename _Allocator>
 258:/usr/include/c++/6/bits/stl_uninitialized.h ****     _ForwardIterator
 259:/usr/include/c++/6/bits/stl_uninitialized.h ****     __uninitialized_copy_a(_InputIterator __first, _InputIterator __last,
GAS LISTING /tmp/ccvUPO8Q.s 			page 477


 260:/usr/include/c++/6/bits/stl_uninitialized.h **** 			   _ForwardIterator __result, _Allocator& __alloc)
 261:/usr/include/c++/6/bits/stl_uninitialized.h ****     {
 262:/usr/include/c++/6/bits/stl_uninitialized.h ****       _ForwardIterator __cur = __result;
 263:/usr/include/c++/6/bits/stl_uninitialized.h ****       __try
 264:/usr/include/c++/6/bits/stl_uninitialized.h **** 	{
 265:/usr/include/c++/6/bits/stl_uninitialized.h **** 	  typedef __gnu_cxx::__alloc_traits<_Allocator> __traits;
 266:/usr/include/c++/6/bits/stl_uninitialized.h **** 	  for (; __first != __last; ++__first, (void)++__cur)
 267:/usr/include/c++/6/bits/stl_uninitialized.h **** 	    __traits::construct(__alloc, std::__addressof(*__cur), *__first);
 268:/usr/include/c++/6/bits/stl_uninitialized.h **** 	  return __cur;
 269:/usr/include/c++/6/bits/stl_uninitialized.h **** 	}
 270:/usr/include/c++/6/bits/stl_uninitialized.h ****       __catch(...)
 271:/usr/include/c++/6/bits/stl_uninitialized.h **** 	{
 272:/usr/include/c++/6/bits/stl_uninitialized.h **** 	  std::_Destroy(__result, __cur, __alloc);
 273:/usr/include/c++/6/bits/stl_uninitialized.h **** 	  __throw_exception_again;
 274:/usr/include/c++/6/bits/stl_uninitialized.h **** 	}
 275:/usr/include/c++/6/bits/stl_uninitialized.h ****     }
 276:/usr/include/c++/6/bits/stl_uninitialized.h **** 
 277:/usr/include/c++/6/bits/stl_uninitialized.h ****   template<typename _InputIterator, typename _ForwardIterator, typename _Tp>
 278:/usr/include/c++/6/bits/stl_uninitialized.h ****     inline _ForwardIterator
 279:/usr/include/c++/6/bits/stl_uninitialized.h ****     __uninitialized_copy_a(_InputIterator __first, _InputIterator __last,
 10732              		.loc 39 279 0
 10733              		.cfi_startproc
 10734 0000 55       		pushq	%rbp
 10735              		.cfi_def_cfa_offset 16
 10736              		.cfi_offset 6, -16
 10737 0001 4889E5   		movq	%rsp, %rbp
 10738              		.cfi_def_cfa_register 6
 10739 0004 4883EC20 		subq	$32, %rsp
 10740 0008 48897DF8 		movq	%rdi, -8(%rbp)
 10741 000c 488975F0 		movq	%rsi, -16(%rbp)
 10742 0010 488955E8 		movq	%rdx, -24(%rbp)
 10743 0014 48894DE0 		movq	%rcx, -32(%rbp)
 280:/usr/include/c++/6/bits/stl_uninitialized.h **** 			   _ForwardIterator __result, allocator<_Tp>&)
 281:/usr/include/c++/6/bits/stl_uninitialized.h ****     { return std::uninitialized_copy(__first, __last, __result); }
 10744              		.loc 39 281 0
 10745 0018 488B55E8 		movq	-24(%rbp), %rdx
 10746 001c 488B4DF0 		movq	-16(%rbp), %rcx
 10747 0020 488B45F8 		movq	-8(%rbp), %rax
 10748 0024 4889CE   		movq	%rcx, %rsi
 10749 0027 4889C7   		movq	%rax, %rdi
 10750 002a E8000000 		call	_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEPiET0_T_SA_S9_
 10750      00
 10751 002f C9       		leave
 10752              		.cfi_def_cfa 7, 8
 10753 0030 C3       		ret
 10754              		.cfi_endproc
 10755              	.LFE13404:
 10757              		.section	.text._ZNK5boost10shared_ptrIN2gr11basic_blockEE3getEv,"axG",@progbits,_ZNK5boost10shared
 10758              		.align 2
 10759              		.weak	_ZNK5boost10shared_ptrIN2gr11basic_blockEE3getEv
 10761              	_ZNK5boost10shared_ptrIN2gr11basic_blockEE3getEv:
 10762              	.LFB13410:
 631:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 632:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     shared_ptr & operator=( shared_ptr && r ) BOOST_NOEXCEPT
 633:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     {
 634:/usr/include/boost/smart_ptr/shared_ptr.hpp ****         this_type( static_cast< shared_ptr && >( r ) ).swap( *this );
 635:/usr/include/boost/smart_ptr/shared_ptr.hpp ****         return *this;
GAS LISTING /tmp/ccvUPO8Q.s 			page 478


 636:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     }
 637:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 638:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     template<class Y>
 639:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     shared_ptr & operator=( shared_ptr<Y> && r ) BOOST_NOEXCEPT
 640:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     {
 641:/usr/include/boost/smart_ptr/shared_ptr.hpp ****         this_type( static_cast< shared_ptr<Y> && >( r ) ).swap( *this );
 642:/usr/include/boost/smart_ptr/shared_ptr.hpp ****         return *this;
 643:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     }
 644:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 645:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     // aliasing move
 646:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     template<class Y>
 647:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     shared_ptr( shared_ptr<Y> && r, element_type * p ) BOOST_NOEXCEPT : px( p ), pn()
 648:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     {
 649:/usr/include/boost/smart_ptr/shared_ptr.hpp ****         pn.swap( r.pn );
 650:/usr/include/boost/smart_ptr/shared_ptr.hpp ****         r.px = 0;
 651:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     }
 652:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 653:/usr/include/boost/smart_ptr/shared_ptr.hpp **** #endif
 654:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 655:/usr/include/boost/smart_ptr/shared_ptr.hpp **** #if !defined( BOOST_NO_CXX11_NULLPTR )
 656:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 657:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     shared_ptr & operator=( boost::detail::sp_nullptr_t ) BOOST_NOEXCEPT // never throws
 658:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     {
 659:/usr/include/boost/smart_ptr/shared_ptr.hpp ****         this_type().swap(*this);
 660:/usr/include/boost/smart_ptr/shared_ptr.hpp ****         return *this;
 661:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     }
 662:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 663:/usr/include/boost/smart_ptr/shared_ptr.hpp **** #endif
 664:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 665:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     void reset() BOOST_NOEXCEPT // never throws in 1.30+
 666:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     {
 667:/usr/include/boost/smart_ptr/shared_ptr.hpp ****         this_type().swap(*this);
 668:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     }
 669:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 670:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     template<class Y> void reset( Y * p ) // Y must be complete
 671:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     {
 672:/usr/include/boost/smart_ptr/shared_ptr.hpp ****         BOOST_ASSERT( p == 0 || p != px ); // catch self-reset errors
 673:/usr/include/boost/smart_ptr/shared_ptr.hpp ****         this_type( p ).swap( *this );
 674:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     }
 675:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 676:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     template<class Y, class D> void reset( Y * p, D d )
 677:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     {
 678:/usr/include/boost/smart_ptr/shared_ptr.hpp ****         this_type( p, d ).swap( *this );
 679:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     }
 680:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 681:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     template<class Y, class D, class A> void reset( Y * p, D d, A a )
 682:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     {
 683:/usr/include/boost/smart_ptr/shared_ptr.hpp ****         this_type( p, d, a ).swap( *this );
 684:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     }
 685:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 686:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     template<class Y> void reset( shared_ptr<Y> const & r, element_type * p )
 687:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     {
 688:/usr/include/boost/smart_ptr/shared_ptr.hpp ****         this_type( r, p ).swap( *this );
 689:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     }
 690:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 691:/usr/include/boost/smart_ptr/shared_ptr.hpp **** #if !defined( BOOST_NO_CXX11_RVALUE_REFERENCES )
 692:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
GAS LISTING /tmp/ccvUPO8Q.s 			page 479


 693:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     template<class Y> void reset( shared_ptr<Y> && r, element_type * p )
 694:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     {
 695:/usr/include/boost/smart_ptr/shared_ptr.hpp ****         this_type( static_cast< shared_ptr<Y> && >( r ), p ).swap( *this );
 696:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     }
 697:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 698:/usr/include/boost/smart_ptr/shared_ptr.hpp **** #endif
 699:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 700:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     // never throws (but has a BOOST_ASSERT in it, so not marked with BOOST_NOEXCEPT)
 701:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     typename boost::detail::sp_dereference< T >::type operator* () const
 702:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     {
 703:/usr/include/boost/smart_ptr/shared_ptr.hpp ****         BOOST_ASSERT( px != 0 );
 704:/usr/include/boost/smart_ptr/shared_ptr.hpp ****         return *px;
 705:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     }
 706:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     
 707:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     // never throws (but has a BOOST_ASSERT in it, so not marked with BOOST_NOEXCEPT)
 708:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     typename boost::detail::sp_member_access< T >::type operator-> () const 
 709:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     {
 710:/usr/include/boost/smart_ptr/shared_ptr.hpp ****         BOOST_ASSERT( px != 0 );
 711:/usr/include/boost/smart_ptr/shared_ptr.hpp ****         return px;
 712:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     }
 713:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     
 714:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     // never throws (but has a BOOST_ASSERT in it, so not marked with BOOST_NOEXCEPT)
 715:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     typename boost::detail::sp_array_access< T >::type operator[] ( std::ptrdiff_t i ) const
 716:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     {
 717:/usr/include/boost/smart_ptr/shared_ptr.hpp ****         BOOST_ASSERT( px != 0 );
 718:/usr/include/boost/smart_ptr/shared_ptr.hpp ****         BOOST_ASSERT( i >= 0 && ( i < boost::detail::sp_extent< T >::value || boost::detail::sp_ext
 719:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 720:/usr/include/boost/smart_ptr/shared_ptr.hpp ****         return static_cast< typename boost::detail::sp_array_access< T >::type >( px[ i ] );
 721:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     }
 722:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 723:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     element_type * get() const BOOST_NOEXCEPT
 10763              		.loc 7 723 0
 10764              		.cfi_startproc
 10765 0000 55       		pushq	%rbp
 10766              		.cfi_def_cfa_offset 16
 10767              		.cfi_offset 6, -16
 10768 0001 4889E5   		movq	%rsp, %rbp
 10769              		.cfi_def_cfa_register 6
 10770 0004 48897DF8 		movq	%rdi, -8(%rbp)
 724:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     {
 725:/usr/include/boost/smart_ptr/shared_ptr.hpp ****         return px;
 10771              		.loc 7 725 0
 10772 0008 488B45F8 		movq	-8(%rbp), %rax
 10773 000c 488B00   		movq	(%rax), %rax
 726:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     }
 10774              		.loc 7 726 0
 10775 000f 5D       		popq	%rbp
 10776              		.cfi_def_cfa 7, 8
 10777 0010 C3       		ret
 10778              		.cfi_endproc
 10779              	.LFE13410:
 10781              		.section	.text._ZN5boost20dynamic_pointer_castIN2gr5lfast12costas2_implENS1_11basic_blockEEENS_10s
 10782              		.weak	_ZN5boost20dynamic_pointer_castIN2gr5lfast12costas2_implENS1_11basic_blockEEENS_10shared_ptr
 10784              	_ZN5boost20dynamic_pointer_castIN2gr5lfast12costas2_implENS1_11basic_blockEEENS_10shared_ptrIT_EERK
 10785              	.LFB13417:
 727:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 728:/usr/include/boost/smart_ptr/shared_ptr.hpp **** // implicit conversion to "bool"
GAS LISTING /tmp/ccvUPO8Q.s 			page 480


 729:/usr/include/boost/smart_ptr/shared_ptr.hpp **** #include <boost/smart_ptr/detail/operator_bool.hpp>
 730:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 731:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     bool unique() const BOOST_NOEXCEPT
 732:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     {
 733:/usr/include/boost/smart_ptr/shared_ptr.hpp ****         return pn.unique();
 734:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     }
 735:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 736:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     long use_count() const BOOST_NOEXCEPT
 737:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     {
 738:/usr/include/boost/smart_ptr/shared_ptr.hpp ****         return pn.use_count();
 739:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     }
 740:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 741:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     void swap( shared_ptr & other ) BOOST_NOEXCEPT
 742:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     {
 743:/usr/include/boost/smart_ptr/shared_ptr.hpp ****         std::swap(px, other.px);
 744:/usr/include/boost/smart_ptr/shared_ptr.hpp ****         pn.swap(other.pn);
 745:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     }
 746:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 747:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     template<class Y> bool owner_before( shared_ptr<Y> const & rhs ) const BOOST_NOEXCEPT
 748:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     {
 749:/usr/include/boost/smart_ptr/shared_ptr.hpp ****         return pn < rhs.pn;
 750:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     }
 751:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 752:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     template<class Y> bool owner_before( weak_ptr<Y> const & rhs ) const BOOST_NOEXCEPT
 753:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     {
 754:/usr/include/boost/smart_ptr/shared_ptr.hpp ****         return pn < rhs.pn;
 755:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     }
 756:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 757:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     void * _internal_get_deleter( boost::detail::sp_typeinfo const & ti ) const BOOST_NOEXCEPT
 758:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     {
 759:/usr/include/boost/smart_ptr/shared_ptr.hpp ****         return pn.get_deleter( ti );
 760:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     }
 761:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 762:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     void * _internal_get_untyped_deleter() const BOOST_NOEXCEPT
 763:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     {
 764:/usr/include/boost/smart_ptr/shared_ptr.hpp ****         return pn.get_untyped_deleter();
 765:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     }
 766:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 767:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     bool _internal_equiv( shared_ptr const & r ) const BOOST_NOEXCEPT
 768:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     {
 769:/usr/include/boost/smart_ptr/shared_ptr.hpp ****         return px == r.px && pn == r.pn;
 770:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     }
 771:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 772:/usr/include/boost/smart_ptr/shared_ptr.hpp **** // Tasteless as this may seem, making all members public allows member templates
 773:/usr/include/boost/smart_ptr/shared_ptr.hpp **** // to work in the absence of member template friends. (Matthew Langston)
 774:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 775:/usr/include/boost/smart_ptr/shared_ptr.hpp **** #ifndef BOOST_NO_MEMBER_TEMPLATE_FRIENDS
 776:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 777:/usr/include/boost/smart_ptr/shared_ptr.hpp **** private:
 778:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 779:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     template<class Y> friend class shared_ptr;
 780:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     template<class Y> friend class weak_ptr;
 781:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 782:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 783:/usr/include/boost/smart_ptr/shared_ptr.hpp **** #endif
 784:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 785:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     element_type * px;                 // contained pointer
GAS LISTING /tmp/ccvUPO8Q.s 			page 481


 786:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     boost::detail::shared_count pn;    // reference counter
 787:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 788:/usr/include/boost/smart_ptr/shared_ptr.hpp **** };  // shared_ptr
 789:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 790:/usr/include/boost/smart_ptr/shared_ptr.hpp **** template<class T, class U> inline bool operator==(shared_ptr<T> const & a, shared_ptr<U> const & b)
 791:/usr/include/boost/smart_ptr/shared_ptr.hpp **** {
 792:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     return a.get() == b.get();
 793:/usr/include/boost/smart_ptr/shared_ptr.hpp **** }
 794:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 795:/usr/include/boost/smart_ptr/shared_ptr.hpp **** template<class T, class U> inline bool operator!=(shared_ptr<T> const & a, shared_ptr<U> const & b)
 796:/usr/include/boost/smart_ptr/shared_ptr.hpp **** {
 797:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     return a.get() != b.get();
 798:/usr/include/boost/smart_ptr/shared_ptr.hpp **** }
 799:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 800:/usr/include/boost/smart_ptr/shared_ptr.hpp **** #if __GNUC__ == 2 && __GNUC_MINOR__ <= 96
 801:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 802:/usr/include/boost/smart_ptr/shared_ptr.hpp **** // Resolve the ambiguity between our op!= and the one in rel_ops
 803:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 804:/usr/include/boost/smart_ptr/shared_ptr.hpp **** template<class T> inline bool operator!=(shared_ptr<T> const & a, shared_ptr<T> const & b) BOOST_NO
 805:/usr/include/boost/smart_ptr/shared_ptr.hpp **** {
 806:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     return a.get() != b.get();
 807:/usr/include/boost/smart_ptr/shared_ptr.hpp **** }
 808:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 809:/usr/include/boost/smart_ptr/shared_ptr.hpp **** #endif
 810:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 811:/usr/include/boost/smart_ptr/shared_ptr.hpp **** #if !defined( BOOST_NO_CXX11_NULLPTR )
 812:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 813:/usr/include/boost/smart_ptr/shared_ptr.hpp **** template<class T> inline bool operator==( shared_ptr<T> const & p, boost::detail::sp_nullptr_t ) BO
 814:/usr/include/boost/smart_ptr/shared_ptr.hpp **** {
 815:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     return p.get() == 0;
 816:/usr/include/boost/smart_ptr/shared_ptr.hpp **** }
 817:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 818:/usr/include/boost/smart_ptr/shared_ptr.hpp **** template<class T> inline bool operator==( boost::detail::sp_nullptr_t, shared_ptr<T> const & p ) BO
 819:/usr/include/boost/smart_ptr/shared_ptr.hpp **** {
 820:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     return p.get() == 0;
 821:/usr/include/boost/smart_ptr/shared_ptr.hpp **** }
 822:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 823:/usr/include/boost/smart_ptr/shared_ptr.hpp **** template<class T> inline bool operator!=( shared_ptr<T> const & p, boost::detail::sp_nullptr_t ) BO
 824:/usr/include/boost/smart_ptr/shared_ptr.hpp **** {
 825:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     return p.get() != 0;
 826:/usr/include/boost/smart_ptr/shared_ptr.hpp **** }
 827:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 828:/usr/include/boost/smart_ptr/shared_ptr.hpp **** template<class T> inline bool operator!=( boost::detail::sp_nullptr_t, shared_ptr<T> const & p ) BO
 829:/usr/include/boost/smart_ptr/shared_ptr.hpp **** {
 830:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     return p.get() != 0;
 831:/usr/include/boost/smart_ptr/shared_ptr.hpp **** }
 832:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 833:/usr/include/boost/smart_ptr/shared_ptr.hpp **** #endif
 834:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 835:/usr/include/boost/smart_ptr/shared_ptr.hpp **** template<class T, class U> inline bool operator<(shared_ptr<T> const & a, shared_ptr<U> const & b) 
 836:/usr/include/boost/smart_ptr/shared_ptr.hpp **** {
 837:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     return a.owner_before( b );
 838:/usr/include/boost/smart_ptr/shared_ptr.hpp **** }
 839:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 840:/usr/include/boost/smart_ptr/shared_ptr.hpp **** template<class T> inline void swap(shared_ptr<T> & a, shared_ptr<T> & b) BOOST_NOEXCEPT
 841:/usr/include/boost/smart_ptr/shared_ptr.hpp **** {
 842:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     a.swap(b);
GAS LISTING /tmp/ccvUPO8Q.s 			page 482


 843:/usr/include/boost/smart_ptr/shared_ptr.hpp **** }
 844:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 845:/usr/include/boost/smart_ptr/shared_ptr.hpp **** template<class T, class U> shared_ptr<T> static_pointer_cast( shared_ptr<U> const & r ) BOOST_NOEXC
 846:/usr/include/boost/smart_ptr/shared_ptr.hpp **** {
 847:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     (void) static_cast< T* >( static_cast< U* >( 0 ) );
 848:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 849:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     typedef typename shared_ptr<T>::element_type E;
 850:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 851:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     E * p = static_cast< E* >( r.get() );
 852:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     return shared_ptr<T>( r, p );
 853:/usr/include/boost/smart_ptr/shared_ptr.hpp **** }
 854:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 855:/usr/include/boost/smart_ptr/shared_ptr.hpp **** template<class T, class U> shared_ptr<T> const_pointer_cast( shared_ptr<U> const & r ) BOOST_NOEXCE
 856:/usr/include/boost/smart_ptr/shared_ptr.hpp **** {
 857:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     (void) const_cast< T* >( static_cast< U* >( 0 ) );
 858:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 859:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     typedef typename shared_ptr<T>::element_type E;
 860:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 861:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     E * p = const_cast< E* >( r.get() );
 862:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     return shared_ptr<T>( r, p );
 863:/usr/include/boost/smart_ptr/shared_ptr.hpp **** }
 864:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 865:/usr/include/boost/smart_ptr/shared_ptr.hpp **** template<class T, class U> shared_ptr<T> dynamic_pointer_cast( shared_ptr<U> const & r ) BOOST_NOEX
 10786              		.loc 7 865 0
 10787              		.cfi_startproc
 10788 0000 55       		pushq	%rbp
 10789              		.cfi_def_cfa_offset 16
 10790              		.cfi_offset 6, -16
 10791 0001 4889E5   		movq	%rsp, %rbp
 10792              		.cfi_def_cfa_register 6
 10793 0004 4883EC20 		subq	$32, %rsp
 10794 0008 48897DE8 		movq	%rdi, -24(%rbp)
 10795 000c 488975E0 		movq	%rsi, -32(%rbp)
 866:/usr/include/boost/smart_ptr/shared_ptr.hpp **** {
 867:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     (void) dynamic_cast< T* >( static_cast< U* >( 0 ) );
 868:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 869:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     typedef typename shared_ptr<T>::element_type E;
 870:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 871:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     E * p = dynamic_cast< E* >( r.get() );
 10796              		.loc 7 871 0
 10797 0010 488B45E0 		movq	-32(%rbp), %rax
 10798 0014 4889C7   		movq	%rax, %rdi
 10799 0017 E8000000 		call	_ZNK5boost10shared_ptrIN2gr11basic_blockEE3getEv
 10799      00
 10800 001c 4885C0   		testq	%rax, %rax
 10801 001f 741F     		je	.L519
 10802              		.loc 7 871 0 is_stmt 0 discriminator 1
 10803 0021 48C7C1FF 		movq	$-1, %rcx
 10803      FFFFFF
 10804 0028 488D1500 		leaq	_ZTIN2gr5lfast12costas2_implE(%rip), %rdx
 10804      000000
 10805 002f 488D3500 		leaq	_ZTIN2gr11basic_blockE(%rip), %rsi
 10805      000000
 10806 0036 4889C7   		movq	%rax, %rdi
 10807 0039 E8000000 		call	__dynamic_cast@PLT
 10807      00
 10808 003e EB05     		jmp	.L520
GAS LISTING /tmp/ccvUPO8Q.s 			page 483


 10809              	.L519:
 10810              		.loc 7 871 0 discriminator 2
 10811 0040 B8000000 		movl	$0, %eax
 10811      00
 10812              	.L520:
 10813              		.loc 7 871 0 discriminator 4
 10814 0045 488945F8 		movq	%rax, -8(%rbp)
 872:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     return p? shared_ptr<T>( r, p ): shared_ptr<T>();
 10815              		.loc 7 872 0 is_stmt 1 discriminator 4
 10816 0049 48837DF8 		cmpq	$0, -8(%rbp)
 10816      00
 10817 004e 7419     		je	.L521
 10818              		.loc 7 872 0 is_stmt 0 discriminator 1
 10819 0050 488B55F8 		movq	-8(%rbp), %rdx
 10820 0054 488B4DE0 		movq	-32(%rbp), %rcx
 10821 0058 488B45E8 		movq	-24(%rbp), %rax
 10822 005c 4889CE   		movq	%rcx, %rsi
 10823 005f 4889C7   		movq	%rax, %rdi
 10824 0062 E8000000 		call	_ZN5boost10shared_ptrIN2gr5lfast12costas2_implEEC1INS1_11basic_blockEEERKNS0_IT_EEPS3_
 10824      00
 10825 0067 EB0C     		jmp	.L518
 10826              	.L521:
 10827              		.loc 7 872 0 discriminator 2
 10828 0069 488B45E8 		movq	-24(%rbp), %rax
 10829 006d 4889C7   		movq	%rax, %rdi
 10830 0070 E8000000 		call	_ZN5boost10shared_ptrIN2gr5lfast12costas2_implEEC1Ev
 10830      00
 10831              	.L518:
 873:/usr/include/boost/smart_ptr/shared_ptr.hpp **** }
 10832              		.loc 7 873 0 is_stmt 1
 10833 0075 488B45E8 		movq	-24(%rbp), %rax
 10834 0079 C9       		leave
 10835              		.cfi_def_cfa 7, 8
 10836 007a C3       		ret
 10837              		.cfi_endproc
 10838              	.LFE13417:
 10840              		.section	.text._ZN5boost6detail21sp_assert_convertibleIN2gr5lfast12costas2_implENS3_7costas2EEEvv,
 10841              		.weak	_ZN5boost6detail21sp_assert_convertibleIN2gr5lfast12costas2_implENS3_7costas2EEEvv
 10843              	_ZN5boost6detail21sp_assert_convertibleIN2gr5lfast12costas2_implENS3_7costas2EEEvv:
 10844              	.LFB13421:
 264:/usr/include/boost/smart_ptr/shared_ptr.hpp **** {
 10845              		.loc 7 264 0
 10846              		.cfi_startproc
 10847 0000 55       		pushq	%rbp
 10848              		.cfi_def_cfa_offset 16
 10849              		.cfi_offset 6, -16
 10850 0001 4889E5   		movq	%rsp, %rbp
 10851              		.cfi_def_cfa_register 6
 278:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 10852              		.loc 7 278 0
 10853 0004 90       		nop
 10854 0005 5D       		popq	%rbp
 10855              		.cfi_def_cfa 7, 8
 10856 0006 C3       		ret
 10857              		.cfi_endproc
 10858              	.LFE13421:
 10860              		.section	.text._ZNSt12_Vector_baseIN2gr5tag_tESaIS1_EE12_Vector_implD2Ev,"axG",@progbits,_ZNSt12_V
GAS LISTING /tmp/ccvUPO8Q.s 			page 484


 10861              		.align 2
 10862              		.weak	_ZNSt12_Vector_baseIN2gr5tag_tESaIS1_EE12_Vector_implD2Ev
 10864              	_ZNSt12_Vector_baseIN2gr5tag_tESaIS1_EE12_Vector_implD2Ev:
 10865              	.LFB13424:
  79:/usr/include/c++/6/bits/stl_vector.h ****       : public _Tp_alloc_type
 10866              		.loc 30 79 0
 10867              		.cfi_startproc
 10868 0000 55       		pushq	%rbp
 10869              		.cfi_def_cfa_offset 16
 10870              		.cfi_offset 6, -16
 10871 0001 4889E5   		movq	%rsp, %rbp
 10872              		.cfi_def_cfa_register 6
 10873 0004 4883EC10 		subq	$16, %rsp
 10874 0008 48897DF8 		movq	%rdi, -8(%rbp)
 10875              	.LBB106:
  79:/usr/include/c++/6/bits/stl_vector.h ****       : public _Tp_alloc_type
 10876              		.loc 30 79 0
 10877 000c 488B45F8 		movq	-8(%rbp), %rax
 10878 0010 4889C7   		movq	%rax, %rdi
 10879 0013 E8000000 		call	_ZNSaIN2gr5tag_tEED2Ev
 10879      00
 10880              	.LBE106:
 10881 0018 90       		nop
 10882 0019 C9       		leave
 10883              		.cfi_def_cfa 7, 8
 10884 001a C3       		ret
 10885              		.cfi_endproc
 10886              	.LFE13424:
 10888              		.weak	_ZNSt12_Vector_baseIN2gr5tag_tESaIS1_EE12_Vector_implD1Ev
 10889              		.set	_ZNSt12_Vector_baseIN2gr5tag_tESaIS1_EE12_Vector_implD1Ev,_ZNSt12_Vector_baseIN2gr5tag_tESaIS
 10890              		.section	.text._ZNSt12_Vector_baseIN2gr5tag_tESaIS1_EEC2Ev,"axG",@progbits,_ZNSt12_Vector_baseIN2g
 10891              		.align 2
 10892              		.weak	_ZNSt12_Vector_baseIN2gr5tag_tESaIS1_EEC2Ev
 10894              	_ZNSt12_Vector_baseIN2gr5tag_tESaIS1_EEC2Ev:
 10895              	.LFB13426:
 124:/usr/include/c++/6/bits/stl_vector.h ****       : _M_impl() { }
 10896              		.loc 30 124 0
 10897              		.cfi_startproc
 10898 0000 55       		pushq	%rbp
 10899              		.cfi_def_cfa_offset 16
 10900              		.cfi_offset 6, -16
 10901 0001 4889E5   		movq	%rsp, %rbp
 10902              		.cfi_def_cfa_register 6
 10903 0004 4883EC10 		subq	$16, %rsp
 10904 0008 48897DF8 		movq	%rdi, -8(%rbp)
 10905              	.LBB107:
 125:/usr/include/c++/6/bits/stl_vector.h **** 
 10906              		.loc 30 125 0
 10907 000c 488B45F8 		movq	-8(%rbp), %rax
 10908 0010 4889C7   		movq	%rax, %rdi
 10909 0013 E8000000 		call	_ZNSt12_Vector_baseIN2gr5tag_tESaIS1_EE12_Vector_implC1Ev
 10909      00
 10910              	.LBE107:
 10911 0018 90       		nop
 10912 0019 C9       		leave
 10913              		.cfi_def_cfa 7, 8
 10914 001a C3       		ret
GAS LISTING /tmp/ccvUPO8Q.s 			page 485


 10915              		.cfi_endproc
 10916              	.LFE13426:
 10918              		.weak	_ZNSt12_Vector_baseIN2gr5tag_tESaIS1_EEC1Ev
 10919              		.set	_ZNSt12_Vector_baseIN2gr5tag_tESaIS1_EEC1Ev,_ZNSt12_Vector_baseIN2gr5tag_tESaIS1_EEC2Ev
 10920              		.section	.text._ZNSt12_Vector_baseIN2gr5tag_tESaIS1_EED2Ev,"axG",@progbits,_ZNSt12_Vector_baseIN2g
 10921              		.align 2
 10922              		.weak	_ZNSt12_Vector_baseIN2gr5tag_tESaIS1_EED2Ev
 10924              	_ZNSt12_Vector_baseIN2gr5tag_tESaIS1_EED2Ev:
 10925              	.LFB13429:
 159:/usr/include/c++/6/bits/stl_vector.h ****       { _M_deallocate(this->_M_impl._M_start, this->_M_impl._M_end_of_storage
 10926              		.loc 30 159 0
 10927              		.cfi_startproc
 10928              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 10929              		.cfi_lsda 0x1b,.LLSDA13429
 10930 0000 55       		pushq	%rbp
 10931              		.cfi_def_cfa_offset 16
 10932              		.cfi_offset 6, -16
 10933 0001 4889E5   		movq	%rsp, %rbp
 10934              		.cfi_def_cfa_register 6
 10935 0004 4883EC10 		subq	$16, %rsp
 10936 0008 48897DF8 		movq	%rdi, -8(%rbp)
 10937              	.LBB108:
 160:/usr/include/c++/6/bits/stl_vector.h **** 		      - this->_M_impl._M_start); }
 10938              		.loc 30 160 0
 10939 000c 488B45F8 		movq	-8(%rbp), %rax
 10940 0010 488B4010 		movq	16(%rax), %rax
 161:/usr/include/c++/6/bits/stl_vector.h **** 
 10941              		.loc 30 161 0
 10942 0014 4889C2   		movq	%rax, %rdx
 10943 0017 488B45F8 		movq	-8(%rbp), %rax
 10944 001b 488B00   		movq	(%rax), %rax
 10945 001e 4829C2   		subq	%rax, %rdx
 10946 0021 4889D0   		movq	%rdx, %rax
 160:/usr/include/c++/6/bits/stl_vector.h **** 		      - this->_M_impl._M_start); }
 10947              		.loc 30 160 0
 10948 0024 48C1F803 		sarq	$3, %rax
 10949 0028 4889C2   		movq	%rax, %rdx
 10950 002b 48B8B76D 		movabsq	$7905747460161236407, %rax
 10950      DBB66DDB 
 10950      B66D
 10951 0035 480FAFC2 		imulq	%rdx, %rax
 10952 0039 4889C2   		movq	%rax, %rdx
 10953 003c 488B45F8 		movq	-8(%rbp), %rax
 10954 0040 488B08   		movq	(%rax), %rcx
 10955 0043 488B45F8 		movq	-8(%rbp), %rax
 10956 0047 4889CE   		movq	%rcx, %rsi
 10957 004a 4889C7   		movq	%rax, %rdi
 10958 004d E8000000 		call	_ZNSt12_Vector_baseIN2gr5tag_tESaIS1_EE13_M_deallocateEPS1_m
 10958      00
 161:/usr/include/c++/6/bits/stl_vector.h **** 
 10959              		.loc 30 161 0
 10960 0052 488B45F8 		movq	-8(%rbp), %rax
 10961 0056 4889C7   		movq	%rax, %rdi
 10962 0059 E8000000 		call	_ZNSt12_Vector_baseIN2gr5tag_tESaIS1_EE12_Vector_implD1Ev
 10962      00
 10963              	.LBE108:
 10964 005e 90       		nop
GAS LISTING /tmp/ccvUPO8Q.s 			page 486


 10965 005f C9       		leave
 10966              		.cfi_def_cfa 7, 8
 10967 0060 C3       		ret
 10968              		.cfi_endproc
 10969              	.LFE13429:
 10970              		.section	.gcc_except_table
 10971              	.LLSDA13429:
 10972 01f6 FF       		.byte	0xff
 10973 01f7 FF       		.byte	0xff
 10974 01f8 01       		.byte	0x1
 10975 01f9 00       		.uleb128 .LLSDACSE13429-.LLSDACSB13429
 10976              	.LLSDACSB13429:
 10977              	.LLSDACSE13429:
 10978              		.section	.text._ZNSt12_Vector_baseIN2gr5tag_tESaIS1_EED2Ev,"axG",@progbits,_ZNSt12_Vector_baseIN2g
 10980              		.weak	_ZNSt12_Vector_baseIN2gr5tag_tESaIS1_EED1Ev
 10981              		.set	_ZNSt12_Vector_baseIN2gr5tag_tESaIS1_EED1Ev,_ZNSt12_Vector_baseIN2gr5tag_tESaIS1_EED2Ev
 10982              		.section	.text._ZNSt12_Vector_baseIN2gr5tag_tESaIS1_EE19_M_get_Tp_allocatorEv,"axG",@progbits,_ZNS
 10983              		.align 2
 10984              		.weak	_ZNSt12_Vector_baseIN2gr5tag_tESaIS1_EE19_M_get_Tp_allocatorEv
 10986              	_ZNSt12_Vector_baseIN2gr5tag_tESaIS1_EE19_M_get_Tp_allocatorEv:
 10987              	.LFB13431:
 113:/usr/include/c++/6/bits/stl_vector.h ****       { return *static_cast<_Tp_alloc_type*>(&this->_M_impl); }
 10988              		.loc 30 113 0
 10989              		.cfi_startproc
 10990 0000 55       		pushq	%rbp
 10991              		.cfi_def_cfa_offset 16
 10992              		.cfi_offset 6, -16
 10993 0001 4889E5   		movq	%rsp, %rbp
 10994              		.cfi_def_cfa_register 6
 10995 0004 48897DF8 		movq	%rdi, -8(%rbp)
 114:/usr/include/c++/6/bits/stl_vector.h **** 
 10996              		.loc 30 114 0
 10997 0008 488B45F8 		movq	-8(%rbp), %rax
 10998 000c 5D       		popq	%rbp
 10999              		.cfi_def_cfa 7, 8
 11000 000d C3       		ret
 11001              		.cfi_endproc
 11002              	.LFE13431:
 11004              		.section	.text._ZSt8_DestroyIPN2gr5tag_tES1_EvT_S3_RSaIT0_E,"axG",@progbits,_ZSt8_DestroyIPN2gr5ta
 11005              		.weak	_ZSt8_DestroyIPN2gr5tag_tES1_EvT_S3_RSaIT0_E
 11007              	_ZSt8_DestroyIPN2gr5tag_tES1_EvT_S3_RSaIT0_E:
 11008              	.LFB13432:
 148:/usr/include/c++/6/bits/stl_construct.h **** 	     allocator<_Tp>&)
 11009              		.loc 35 148 0
 11010              		.cfi_startproc
 11011 0000 55       		pushq	%rbp
 11012              		.cfi_def_cfa_offset 16
 11013              		.cfi_offset 6, -16
 11014 0001 4889E5   		movq	%rsp, %rbp
 11015              		.cfi_def_cfa_register 6
 11016 0004 4883EC20 		subq	$32, %rsp
 11017 0008 48897DF8 		movq	%rdi, -8(%rbp)
 11018 000c 488975F0 		movq	%rsi, -16(%rbp)
 11019 0010 488955E8 		movq	%rdx, -24(%rbp)
 151:/usr/include/c++/6/bits/stl_construct.h ****     }
 11020              		.loc 35 151 0
 11021 0014 488B55F0 		movq	-16(%rbp), %rdx
GAS LISTING /tmp/ccvUPO8Q.s 			page 487


 11022 0018 488B45F8 		movq	-8(%rbp), %rax
 11023 001c 4889D6   		movq	%rdx, %rsi
 11024 001f 4889C7   		movq	%rax, %rdi
 11025 0022 E8000000 		call	_ZSt8_DestroyIPN2gr5tag_tEEvT_S3_
 11025      00
 11026              		.loc 35 152 0
 11027 0027 90       		nop
 11028 0028 C9       		leave
 11029              		.cfi_def_cfa 7, 8
 11030 0029 C3       		ret
 11031              		.cfi_endproc
 11032              	.LFE13432:
 11034              		.section	.text._ZN9__gnu_cxx17__normal_iteratorIPN2gr5tag_tESt6vectorIS2_SaIS2_EEEC2ERKS3_,"axG",@
 11035              		.align 2
 11036              		.weak	_ZN9__gnu_cxx17__normal_iteratorIPN2gr5tag_tESt6vectorIS2_SaIS2_EEEC2ERKS3_
 11038              	_ZN9__gnu_cxx17__normal_iteratorIPN2gr5tag_tESt6vectorIS2_SaIS2_EEEC2ERKS3_:
 11039              	.LFB13434:
 776:/usr/include/c++/6/bits/stl_iterator.h ****       : _M_current(__i) { }
 11040              		.loc 32 776 0
 11041              		.cfi_startproc
 11042 0000 55       		pushq	%rbp
 11043              		.cfi_def_cfa_offset 16
 11044              		.cfi_offset 6, -16
 11045 0001 4889E5   		movq	%rsp, %rbp
 11046              		.cfi_def_cfa_register 6
 11047 0004 48897DF8 		movq	%rdi, -8(%rbp)
 11048 0008 488975F0 		movq	%rsi, -16(%rbp)
 11049              	.LBB109:
 777:/usr/include/c++/6/bits/stl_iterator.h **** 
 11050              		.loc 32 777 0
 11051 000c 488B45F0 		movq	-16(%rbp), %rax
 11052 0010 488B10   		movq	(%rax), %rdx
 11053 0013 488B45F8 		movq	-8(%rbp), %rax
 11054 0017 488910   		movq	%rdx, (%rax)
 11055              	.LBE109:
 11056 001a 90       		nop
 11057 001b 5D       		popq	%rbp
 11058              		.cfi_def_cfa 7, 8
 11059 001c C3       		ret
 11060              		.cfi_endproc
 11061              	.LFE13434:
 11063              		.weak	_ZN9__gnu_cxx17__normal_iteratorIPN2gr5tag_tESt6vectorIS2_SaIS2_EEEC1ERKS3_
 11064              		.set	_ZN9__gnu_cxx17__normal_iteratorIPN2gr5tag_tESt6vectorIS2_SaIS2_EEEC1ERKS3_,_ZN9__gnu_cxx17__
 11065              		.section	.text._ZNK9__gnu_cxx17__normal_iteratorIPN2gr5tag_tESt6vectorIS2_SaIS2_EEE4baseEv,"axG",@
 11066              		.align 2
 11067              		.weak	_ZNK9__gnu_cxx17__normal_iteratorIPN2gr5tag_tESt6vectorIS2_SaIS2_EEE4baseEv
 11069              	_ZNK9__gnu_cxx17__normal_iteratorIPN2gr5tag_tESt6vectorIS2_SaIS2_EEE4baseEv:
 11070              	.LFB13436:
 786:/usr/include/c++/6/bits/stl_iterator.h **** 
 787:/usr/include/c++/6/bits/stl_iterator.h ****       // Forward iterator requirements
 788:/usr/include/c++/6/bits/stl_iterator.h ****       reference
 789:/usr/include/c++/6/bits/stl_iterator.h ****       operator*() const _GLIBCXX_NOEXCEPT
 790:/usr/include/c++/6/bits/stl_iterator.h ****       { return *_M_current; }
 791:/usr/include/c++/6/bits/stl_iterator.h **** 
 792:/usr/include/c++/6/bits/stl_iterator.h ****       pointer
 793:/usr/include/c++/6/bits/stl_iterator.h ****       operator->() const _GLIBCXX_NOEXCEPT
 794:/usr/include/c++/6/bits/stl_iterator.h ****       { return _M_current; }
GAS LISTING /tmp/ccvUPO8Q.s 			page 488


 795:/usr/include/c++/6/bits/stl_iterator.h **** 
 796:/usr/include/c++/6/bits/stl_iterator.h ****       __normal_iterator&
 797:/usr/include/c++/6/bits/stl_iterator.h ****       operator++() _GLIBCXX_NOEXCEPT
 798:/usr/include/c++/6/bits/stl_iterator.h ****       {
 799:/usr/include/c++/6/bits/stl_iterator.h **** 	++_M_current;
 800:/usr/include/c++/6/bits/stl_iterator.h **** 	return *this;
 801:/usr/include/c++/6/bits/stl_iterator.h ****       }
 802:/usr/include/c++/6/bits/stl_iterator.h **** 
 803:/usr/include/c++/6/bits/stl_iterator.h ****       __normal_iterator
 804:/usr/include/c++/6/bits/stl_iterator.h ****       operator++(int) _GLIBCXX_NOEXCEPT
 805:/usr/include/c++/6/bits/stl_iterator.h ****       { return __normal_iterator(_M_current++); }
 806:/usr/include/c++/6/bits/stl_iterator.h **** 
 807:/usr/include/c++/6/bits/stl_iterator.h ****       // Bidirectional iterator requirements
 808:/usr/include/c++/6/bits/stl_iterator.h ****       __normal_iterator&
 809:/usr/include/c++/6/bits/stl_iterator.h ****       operator--() _GLIBCXX_NOEXCEPT
 810:/usr/include/c++/6/bits/stl_iterator.h ****       {
 811:/usr/include/c++/6/bits/stl_iterator.h **** 	--_M_current;
 812:/usr/include/c++/6/bits/stl_iterator.h **** 	return *this;
 813:/usr/include/c++/6/bits/stl_iterator.h ****       }
 814:/usr/include/c++/6/bits/stl_iterator.h **** 
 815:/usr/include/c++/6/bits/stl_iterator.h ****       __normal_iterator
 816:/usr/include/c++/6/bits/stl_iterator.h ****       operator--(int) _GLIBCXX_NOEXCEPT
 817:/usr/include/c++/6/bits/stl_iterator.h ****       { return __normal_iterator(_M_current--); }
 818:/usr/include/c++/6/bits/stl_iterator.h **** 
 819:/usr/include/c++/6/bits/stl_iterator.h ****       // Random access iterator requirements
 820:/usr/include/c++/6/bits/stl_iterator.h ****       reference
 821:/usr/include/c++/6/bits/stl_iterator.h ****       operator[](difference_type __n) const _GLIBCXX_NOEXCEPT
 822:/usr/include/c++/6/bits/stl_iterator.h ****       { return _M_current[__n]; }
 823:/usr/include/c++/6/bits/stl_iterator.h **** 
 824:/usr/include/c++/6/bits/stl_iterator.h ****       __normal_iterator&
 825:/usr/include/c++/6/bits/stl_iterator.h ****       operator+=(difference_type __n) _GLIBCXX_NOEXCEPT
 826:/usr/include/c++/6/bits/stl_iterator.h ****       { _M_current += __n; return *this; }
 827:/usr/include/c++/6/bits/stl_iterator.h **** 
 828:/usr/include/c++/6/bits/stl_iterator.h ****       __normal_iterator
 829:/usr/include/c++/6/bits/stl_iterator.h ****       operator+(difference_type __n) const _GLIBCXX_NOEXCEPT
 830:/usr/include/c++/6/bits/stl_iterator.h ****       { return __normal_iterator(_M_current + __n); }
 831:/usr/include/c++/6/bits/stl_iterator.h **** 
 832:/usr/include/c++/6/bits/stl_iterator.h ****       __normal_iterator&
 833:/usr/include/c++/6/bits/stl_iterator.h ****       operator-=(difference_type __n) _GLIBCXX_NOEXCEPT
 834:/usr/include/c++/6/bits/stl_iterator.h ****       { _M_current -= __n; return *this; }
 835:/usr/include/c++/6/bits/stl_iterator.h **** 
 836:/usr/include/c++/6/bits/stl_iterator.h ****       __normal_iterator
 837:/usr/include/c++/6/bits/stl_iterator.h ****       operator-(difference_type __n) const _GLIBCXX_NOEXCEPT
 838:/usr/include/c++/6/bits/stl_iterator.h ****       { return __normal_iterator(_M_current - __n); }
 839:/usr/include/c++/6/bits/stl_iterator.h **** 
 840:/usr/include/c++/6/bits/stl_iterator.h ****       const _Iterator&
 841:/usr/include/c++/6/bits/stl_iterator.h ****       base() const _GLIBCXX_NOEXCEPT
 11071              		.loc 32 841 0
 11072              		.cfi_startproc
 11073 0000 55       		pushq	%rbp
 11074              		.cfi_def_cfa_offset 16
 11075              		.cfi_offset 6, -16
 11076 0001 4889E5   		movq	%rsp, %rbp
 11077              		.cfi_def_cfa_register 6
 11078 0004 48897DF8 		movq	%rdi, -8(%rbp)
 842:/usr/include/c++/6/bits/stl_iterator.h ****       { return _M_current; }
 11079              		.loc 32 842 0
GAS LISTING /tmp/ccvUPO8Q.s 			page 489


 11080 0008 488B45F8 		movq	-8(%rbp), %rax
 11081 000c 5D       		popq	%rbp
 11082              		.cfi_def_cfa 7, 8
 11083 000d C3       		ret
 11084              		.cfi_endproc
 11085              	.LFE13436:
 11087              		.section	.text._ZNKSt6vectorIN2gr5tag_tESaIS1_EE6cbeginEv,"axG",@progbits,_ZNKSt6vectorIN2gr5tag_t
 11088              		.align 2
 11089              		.weak	_ZNKSt6vectorIN2gr5tag_tESaIS1_EE6cbeginEv
 11091              	_ZNKSt6vectorIN2gr5tag_tESaIS1_EE6cbeginEv:
 11092              	.LFB13437:
 621:/usr/include/c++/6/bits/stl_vector.h ****       { return const_iterator(this->_M_impl._M_start); }
 11093              		.loc 30 621 0
 11094              		.cfi_startproc
 11095 0000 55       		pushq	%rbp
 11096              		.cfi_def_cfa_offset 16
 11097              		.cfi_offset 6, -16
 11098 0001 4889E5   		movq	%rsp, %rbp
 11099              		.cfi_def_cfa_register 6
 11100 0004 4883EC20 		subq	$32, %rsp
 11101 0008 48897DE8 		movq	%rdi, -24(%rbp)
 622:/usr/include/c++/6/bits/stl_vector.h **** 
 11102              		.loc 30 622 0
 11103 000c 488B45E8 		movq	-24(%rbp), %rax
 11104 0010 488B00   		movq	(%rax), %rax
 11105 0013 488945F8 		movq	%rax, -8(%rbp)
 11106 0017 488D55F8 		leaq	-8(%rbp), %rdx
 11107 001b 488D45F0 		leaq	-16(%rbp), %rax
 11108 001f 4889D6   		movq	%rdx, %rsi
 11109 0022 4889C7   		movq	%rax, %rdi
 11110 0025 E8000000 		call	_ZN9__gnu_cxx17__normal_iteratorIPKN2gr5tag_tESt6vectorIS2_SaIS2_EEEC1ERKS4_
 11110      00
 11111 002a 488B45F0 		movq	-16(%rbp), %rax
 11112 002e C9       		leave
 11113              		.cfi_def_cfa 7, 8
 11114 002f C3       		ret
 11115              		.cfi_endproc
 11116              	.LFE13437:
 11118              		.section	.text._ZN9__gnu_cxxmiIPKN2gr5tag_tESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15
 11119              		.weak	_ZN9__gnu_cxxmiIPKN2gr5tag_tESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15differenc
 11121              	_ZN9__gnu_cxxmiIPKN2gr5tag_tESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeE
 11122              	.LFB13438:
 843:/usr/include/c++/6/bits/stl_iterator.h ****     };
 844:/usr/include/c++/6/bits/stl_iterator.h **** 
 845:/usr/include/c++/6/bits/stl_iterator.h ****   // Note: In what follows, the left- and right-hand-side iterators are
 846:/usr/include/c++/6/bits/stl_iterator.h ****   // allowed to vary in types (conceptually in cv-qualification) so that
 847:/usr/include/c++/6/bits/stl_iterator.h ****   // comparison between cv-qualified and non-cv-qualified iterators be
 848:/usr/include/c++/6/bits/stl_iterator.h ****   // valid.  However, the greedy and unfriendly operators in std::rel_ops
 849:/usr/include/c++/6/bits/stl_iterator.h ****   // will make overload resolution ambiguous (when in scope) if we don't
 850:/usr/include/c++/6/bits/stl_iterator.h ****   // provide overloads whose operands are of the same type.  Can someone
 851:/usr/include/c++/6/bits/stl_iterator.h ****   // remind me what generic programming is about? -- Gaby
 852:/usr/include/c++/6/bits/stl_iterator.h **** 
 853:/usr/include/c++/6/bits/stl_iterator.h ****   // Forward iterator requirements
 854:/usr/include/c++/6/bits/stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR, typename _Container>
 855:/usr/include/c++/6/bits/stl_iterator.h ****     inline bool
 856:/usr/include/c++/6/bits/stl_iterator.h ****     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,
 857:/usr/include/c++/6/bits/stl_iterator.h **** 	       const __normal_iterator<_IteratorR, _Container>& __rhs)
GAS LISTING /tmp/ccvUPO8Q.s 			page 490


 858:/usr/include/c++/6/bits/stl_iterator.h ****     _GLIBCXX_NOEXCEPT
 859:/usr/include/c++/6/bits/stl_iterator.h ****     { return __lhs.base() == __rhs.base(); }
 860:/usr/include/c++/6/bits/stl_iterator.h **** 
 861:/usr/include/c++/6/bits/stl_iterator.h ****   template<typename _Iterator, typename _Container>
 862:/usr/include/c++/6/bits/stl_iterator.h ****     inline bool
 863:/usr/include/c++/6/bits/stl_iterator.h ****     operator==(const __normal_iterator<_Iterator, _Container>& __lhs,
 864:/usr/include/c++/6/bits/stl_iterator.h **** 	       const __normal_iterator<_Iterator, _Container>& __rhs)
 865:/usr/include/c++/6/bits/stl_iterator.h ****     _GLIBCXX_NOEXCEPT
 866:/usr/include/c++/6/bits/stl_iterator.h ****     { return __lhs.base() == __rhs.base(); }
 867:/usr/include/c++/6/bits/stl_iterator.h **** 
 868:/usr/include/c++/6/bits/stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR, typename _Container>
 869:/usr/include/c++/6/bits/stl_iterator.h ****     inline bool
 870:/usr/include/c++/6/bits/stl_iterator.h ****     operator!=(const __normal_iterator<_IteratorL, _Container>& __lhs,
 871:/usr/include/c++/6/bits/stl_iterator.h **** 	       const __normal_iterator<_IteratorR, _Container>& __rhs)
 872:/usr/include/c++/6/bits/stl_iterator.h ****     _GLIBCXX_NOEXCEPT
 873:/usr/include/c++/6/bits/stl_iterator.h ****     { return __lhs.base() != __rhs.base(); }
 874:/usr/include/c++/6/bits/stl_iterator.h **** 
 875:/usr/include/c++/6/bits/stl_iterator.h ****   template<typename _Iterator, typename _Container>
 876:/usr/include/c++/6/bits/stl_iterator.h ****     inline bool
 877:/usr/include/c++/6/bits/stl_iterator.h ****     operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
 878:/usr/include/c++/6/bits/stl_iterator.h **** 	       const __normal_iterator<_Iterator, _Container>& __rhs)
 879:/usr/include/c++/6/bits/stl_iterator.h ****     _GLIBCXX_NOEXCEPT
 880:/usr/include/c++/6/bits/stl_iterator.h ****     { return __lhs.base() != __rhs.base(); }
 881:/usr/include/c++/6/bits/stl_iterator.h **** 
 882:/usr/include/c++/6/bits/stl_iterator.h ****   // Random access iterator requirements
 883:/usr/include/c++/6/bits/stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR, typename _Container>
 884:/usr/include/c++/6/bits/stl_iterator.h ****     inline bool
 885:/usr/include/c++/6/bits/stl_iterator.h ****     operator<(const __normal_iterator<_IteratorL, _Container>& __lhs,
 886:/usr/include/c++/6/bits/stl_iterator.h **** 	      const __normal_iterator<_IteratorR, _Container>& __rhs)
 887:/usr/include/c++/6/bits/stl_iterator.h ****     _GLIBCXX_NOEXCEPT
 888:/usr/include/c++/6/bits/stl_iterator.h ****     { return __lhs.base() < __rhs.base(); }
 889:/usr/include/c++/6/bits/stl_iterator.h **** 
 890:/usr/include/c++/6/bits/stl_iterator.h ****   template<typename _Iterator, typename _Container>
 891:/usr/include/c++/6/bits/stl_iterator.h ****     inline bool
 892:/usr/include/c++/6/bits/stl_iterator.h ****     operator<(const __normal_iterator<_Iterator, _Container>& __lhs,
 893:/usr/include/c++/6/bits/stl_iterator.h **** 	      const __normal_iterator<_Iterator, _Container>& __rhs)
 894:/usr/include/c++/6/bits/stl_iterator.h ****     _GLIBCXX_NOEXCEPT
 895:/usr/include/c++/6/bits/stl_iterator.h ****     { return __lhs.base() < __rhs.base(); }
 896:/usr/include/c++/6/bits/stl_iterator.h **** 
 897:/usr/include/c++/6/bits/stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR, typename _Container>
 898:/usr/include/c++/6/bits/stl_iterator.h ****     inline bool
 899:/usr/include/c++/6/bits/stl_iterator.h ****     operator>(const __normal_iterator<_IteratorL, _Container>& __lhs,
 900:/usr/include/c++/6/bits/stl_iterator.h **** 	      const __normal_iterator<_IteratorR, _Container>& __rhs)
 901:/usr/include/c++/6/bits/stl_iterator.h ****     _GLIBCXX_NOEXCEPT
 902:/usr/include/c++/6/bits/stl_iterator.h ****     { return __lhs.base() > __rhs.base(); }
 903:/usr/include/c++/6/bits/stl_iterator.h **** 
 904:/usr/include/c++/6/bits/stl_iterator.h ****   template<typename _Iterator, typename _Container>
 905:/usr/include/c++/6/bits/stl_iterator.h ****     inline bool
 906:/usr/include/c++/6/bits/stl_iterator.h ****     operator>(const __normal_iterator<_Iterator, _Container>& __lhs,
 907:/usr/include/c++/6/bits/stl_iterator.h **** 	      const __normal_iterator<_Iterator, _Container>& __rhs)
 908:/usr/include/c++/6/bits/stl_iterator.h ****     _GLIBCXX_NOEXCEPT
 909:/usr/include/c++/6/bits/stl_iterator.h ****     { return __lhs.base() > __rhs.base(); }
 910:/usr/include/c++/6/bits/stl_iterator.h **** 
 911:/usr/include/c++/6/bits/stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR, typename _Container>
 912:/usr/include/c++/6/bits/stl_iterator.h ****     inline bool
 913:/usr/include/c++/6/bits/stl_iterator.h ****     operator<=(const __normal_iterator<_IteratorL, _Container>& __lhs,
 914:/usr/include/c++/6/bits/stl_iterator.h **** 	       const __normal_iterator<_IteratorR, _Container>& __rhs)
GAS LISTING /tmp/ccvUPO8Q.s 			page 491


 915:/usr/include/c++/6/bits/stl_iterator.h ****     _GLIBCXX_NOEXCEPT
 916:/usr/include/c++/6/bits/stl_iterator.h ****     { return __lhs.base() <= __rhs.base(); }
 917:/usr/include/c++/6/bits/stl_iterator.h **** 
 918:/usr/include/c++/6/bits/stl_iterator.h ****   template<typename _Iterator, typename _Container>
 919:/usr/include/c++/6/bits/stl_iterator.h ****     inline bool
 920:/usr/include/c++/6/bits/stl_iterator.h ****     operator<=(const __normal_iterator<_Iterator, _Container>& __lhs,
 921:/usr/include/c++/6/bits/stl_iterator.h **** 	       const __normal_iterator<_Iterator, _Container>& __rhs)
 922:/usr/include/c++/6/bits/stl_iterator.h ****     _GLIBCXX_NOEXCEPT
 923:/usr/include/c++/6/bits/stl_iterator.h ****     { return __lhs.base() <= __rhs.base(); }
 924:/usr/include/c++/6/bits/stl_iterator.h **** 
 925:/usr/include/c++/6/bits/stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR, typename _Container>
 926:/usr/include/c++/6/bits/stl_iterator.h ****     inline bool
 927:/usr/include/c++/6/bits/stl_iterator.h ****     operator>=(const __normal_iterator<_IteratorL, _Container>& __lhs,
 928:/usr/include/c++/6/bits/stl_iterator.h **** 	       const __normal_iterator<_IteratorR, _Container>& __rhs)
 929:/usr/include/c++/6/bits/stl_iterator.h ****     _GLIBCXX_NOEXCEPT
 930:/usr/include/c++/6/bits/stl_iterator.h ****     { return __lhs.base() >= __rhs.base(); }
 931:/usr/include/c++/6/bits/stl_iterator.h **** 
 932:/usr/include/c++/6/bits/stl_iterator.h ****   template<typename _Iterator, typename _Container>
 933:/usr/include/c++/6/bits/stl_iterator.h ****     inline bool
 934:/usr/include/c++/6/bits/stl_iterator.h ****     operator>=(const __normal_iterator<_Iterator, _Container>& __lhs,
 935:/usr/include/c++/6/bits/stl_iterator.h **** 	       const __normal_iterator<_Iterator, _Container>& __rhs)
 936:/usr/include/c++/6/bits/stl_iterator.h ****     _GLIBCXX_NOEXCEPT
 937:/usr/include/c++/6/bits/stl_iterator.h ****     { return __lhs.base() >= __rhs.base(); }
 938:/usr/include/c++/6/bits/stl_iterator.h **** 
 939:/usr/include/c++/6/bits/stl_iterator.h ****   // _GLIBCXX_RESOLVE_LIB_DEFECTS
 940:/usr/include/c++/6/bits/stl_iterator.h ****   // According to the resolution of DR179 not only the various comparison
 941:/usr/include/c++/6/bits/stl_iterator.h ****   // operators but also operator- must accept mixed iterator/const_iterator
 942:/usr/include/c++/6/bits/stl_iterator.h ****   // parameters.
 943:/usr/include/c++/6/bits/stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR, typename _Container>
 944:/usr/include/c++/6/bits/stl_iterator.h **** #if __cplusplus >= 201103L
 945:/usr/include/c++/6/bits/stl_iterator.h ****     // DR 685.
 946:/usr/include/c++/6/bits/stl_iterator.h ****     inline auto
 947:/usr/include/c++/6/bits/stl_iterator.h ****     operator-(const __normal_iterator<_IteratorL, _Container>& __lhs,
 948:/usr/include/c++/6/bits/stl_iterator.h **** 	      const __normal_iterator<_IteratorR, _Container>& __rhs) noexcept
 949:/usr/include/c++/6/bits/stl_iterator.h ****     -> decltype(__lhs.base() - __rhs.base())
 950:/usr/include/c++/6/bits/stl_iterator.h **** #else
 951:/usr/include/c++/6/bits/stl_iterator.h ****     inline typename __normal_iterator<_IteratorL, _Container>::difference_type
 952:/usr/include/c++/6/bits/stl_iterator.h ****     operator-(const __normal_iterator<_IteratorL, _Container>& __lhs,
 953:/usr/include/c++/6/bits/stl_iterator.h **** 	      const __normal_iterator<_IteratorR, _Container>& __rhs)
 954:/usr/include/c++/6/bits/stl_iterator.h **** #endif
 955:/usr/include/c++/6/bits/stl_iterator.h ****     { return __lhs.base() - __rhs.base(); }
 956:/usr/include/c++/6/bits/stl_iterator.h **** 
 957:/usr/include/c++/6/bits/stl_iterator.h ****   template<typename _Iterator, typename _Container>
 958:/usr/include/c++/6/bits/stl_iterator.h ****     inline typename __normal_iterator<_Iterator, _Container>::difference_type
 959:/usr/include/c++/6/bits/stl_iterator.h ****     operator-(const __normal_iterator<_Iterator, _Container>& __lhs,
 11123              		.loc 32 959 0
 11124              		.cfi_startproc
 11125 0000 55       		pushq	%rbp
 11126              		.cfi_def_cfa_offset 16
 11127              		.cfi_offset 6, -16
 11128 0001 4889E5   		movq	%rsp, %rbp
 11129              		.cfi_def_cfa_register 6
 11130 0004 53       		pushq	%rbx
 11131 0005 4883EC18 		subq	$24, %rsp
 11132              		.cfi_offset 3, -24
 11133 0009 48897DE8 		movq	%rdi, -24(%rbp)
 11134 000d 488975E0 		movq	%rsi, -32(%rbp)
GAS LISTING /tmp/ccvUPO8Q.s 			page 492


 960:/usr/include/c++/6/bits/stl_iterator.h **** 	      const __normal_iterator<_Iterator, _Container>& __rhs)
 961:/usr/include/c++/6/bits/stl_iterator.h ****     _GLIBCXX_NOEXCEPT
 962:/usr/include/c++/6/bits/stl_iterator.h ****     { return __lhs.base() - __rhs.base(); }
 11135              		.loc 32 962 0
 11136 0011 488B45E8 		movq	-24(%rbp), %rax
 11137 0015 4889C7   		movq	%rax, %rdi
 11138 0018 E8000000 		call	_ZNK9__gnu_cxx17__normal_iteratorIPKN2gr5tag_tESt6vectorIS2_SaIS2_EEE4baseEv
 11138      00
 11139 001d 488B00   		movq	(%rax), %rax
 11140 0020 4889C3   		movq	%rax, %rbx
 11141 0023 488B45E0 		movq	-32(%rbp), %rax
 11142 0027 4889C7   		movq	%rax, %rdi
 11143 002a E8000000 		call	_ZNK9__gnu_cxx17__normal_iteratorIPKN2gr5tag_tESt6vectorIS2_SaIS2_EEE4baseEv
 11143      00
 11144 002f 488B00   		movq	(%rax), %rax
 11145 0032 4829C3   		subq	%rax, %rbx
 11146 0035 4889D8   		movq	%rbx, %rax
 11147 0038 48C1F803 		sarq	$3, %rax
 11148 003c 4889C2   		movq	%rax, %rdx
 11149 003f 48B8B76D 		movabsq	$7905747460161236407, %rax
 11149      DBB66DDB 
 11149      B66D
 11150 0049 480FAFC2 		imulq	%rdx, %rax
 11151 004d 4883C418 		addq	$24, %rsp
 11152 0051 5B       		popq	%rbx
 11153 0052 5D       		popq	%rbp
 11154              		.cfi_def_cfa 7, 8
 11155 0053 C3       		ret
 11156              		.cfi_endproc
 11157              	.LFE13438:
 11159              		.section	.text._ZNK9__gnu_cxx17__normal_iteratorIPN2gr5tag_tESt6vectorIS2_SaIS2_EEEplEl,"axG",@pro
 11160              		.align 2
 11161              		.weak	_ZNK9__gnu_cxx17__normal_iteratorIPN2gr5tag_tESt6vectorIS2_SaIS2_EEEplEl
 11163              	_ZNK9__gnu_cxx17__normal_iteratorIPN2gr5tag_tESt6vectorIS2_SaIS2_EEEplEl:
 11164              	.LFB13439:
 829:/usr/include/c++/6/bits/stl_iterator.h ****       { return __normal_iterator(_M_current + __n); }
 11165              		.loc 32 829 0
 11166              		.cfi_startproc
 11167 0000 55       		pushq	%rbp
 11168              		.cfi_def_cfa_offset 16
 11169              		.cfi_offset 6, -16
 11170 0001 4889E5   		movq	%rsp, %rbp
 11171              		.cfi_def_cfa_register 6
 11172 0004 4883EC20 		subq	$32, %rsp
 11173 0008 48897DE8 		movq	%rdi, -24(%rbp)
 11174 000c 488975E0 		movq	%rsi, -32(%rbp)
 830:/usr/include/c++/6/bits/stl_iterator.h **** 
 11175              		.loc 32 830 0
 11176 0010 488B45E8 		movq	-24(%rbp), %rax
 11177 0014 488B08   		movq	(%rax), %rcx
 11178 0017 488B55E0 		movq	-32(%rbp), %rdx
 11179 001b 4889D0   		movq	%rdx, %rax
 11180 001e 48C1E003 		salq	$3, %rax
 11181 0022 4829D0   		subq	%rdx, %rax
 11182 0025 48C1E003 		salq	$3, %rax
 11183 0029 4801C8   		addq	%rcx, %rax
 11184 002c 488945F8 		movq	%rax, -8(%rbp)
GAS LISTING /tmp/ccvUPO8Q.s 			page 493


 11185 0030 488D55F8 		leaq	-8(%rbp), %rdx
 11186 0034 488D45F0 		leaq	-16(%rbp), %rax
 11187 0038 4889D6   		movq	%rdx, %rsi
 11188 003b 4889C7   		movq	%rax, %rdi
 11189 003e E8000000 		call	_ZN9__gnu_cxx17__normal_iteratorIPN2gr5tag_tESt6vectorIS2_SaIS2_EEEC1ERKS3_
 11189      00
 11190 0043 488B45F0 		movq	-16(%rbp), %rax
 11191 0047 C9       		leave
 11192              		.cfi_def_cfa 7, 8
 11193 0048 C3       		ret
 11194              		.cfi_endproc
 11195              	.LFE13439:
 11197              		.section	.text._ZNSt6vectorIN2gr5tag_tESaIS1_EE8_M_eraseEN9__gnu_cxx17__normal_iteratorIPS1_S3_EE,
 11198              		.align 2
 11199              		.weak	_ZNSt6vectorIN2gr5tag_tESaIS1_EE8_M_eraseEN9__gnu_cxx17__normal_iteratorIPS1_S3_EE
 11201              	_ZNSt6vectorIN2gr5tag_tESaIS1_EE8_M_eraseEN9__gnu_cxx17__normal_iteratorIPS1_S3_EE:
 11202              	.LFB13440:
 11203              		.file 40 "/usr/include/c++/6/bits/vector.tcc"
   1:/usr/include/c++/6/bits/vector.tcc **** // Vector implementation (out of line) -*- C++ -*-
   2:/usr/include/c++/6/bits/vector.tcc **** 
   3:/usr/include/c++/6/bits/vector.tcc **** // Copyright (C) 2001-2016 Free Software Foundation, Inc.
   4:/usr/include/c++/6/bits/vector.tcc **** //
   5:/usr/include/c++/6/bits/vector.tcc **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/6/bits/vector.tcc **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/6/bits/vector.tcc **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/6/bits/vector.tcc **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/6/bits/vector.tcc **** // any later version.
  10:/usr/include/c++/6/bits/vector.tcc **** 
  11:/usr/include/c++/6/bits/vector.tcc **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/6/bits/vector.tcc **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/6/bits/vector.tcc **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/6/bits/vector.tcc **** // GNU General Public License for more details.
  15:/usr/include/c++/6/bits/vector.tcc **** 
  16:/usr/include/c++/6/bits/vector.tcc **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/6/bits/vector.tcc **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/6/bits/vector.tcc **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/6/bits/vector.tcc **** 
  20:/usr/include/c++/6/bits/vector.tcc **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/6/bits/vector.tcc **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/6/bits/vector.tcc **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/6/bits/vector.tcc **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/6/bits/vector.tcc **** 
  25:/usr/include/c++/6/bits/vector.tcc **** /*
  26:/usr/include/c++/6/bits/vector.tcc ****  *
  27:/usr/include/c++/6/bits/vector.tcc ****  * Copyright (c) 1994
  28:/usr/include/c++/6/bits/vector.tcc ****  * Hewlett-Packard Company
  29:/usr/include/c++/6/bits/vector.tcc ****  *
  30:/usr/include/c++/6/bits/vector.tcc ****  * Permission to use, copy, modify, distribute and sell this software
  31:/usr/include/c++/6/bits/vector.tcc ****  * and its documentation for any purpose is hereby granted without fee,
  32:/usr/include/c++/6/bits/vector.tcc ****  * provided that the above copyright notice appear in all copies and
  33:/usr/include/c++/6/bits/vector.tcc ****  * that both that copyright notice and this permission notice appear
  34:/usr/include/c++/6/bits/vector.tcc ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:/usr/include/c++/6/bits/vector.tcc ****  * representations about the suitability of this software for any
  36:/usr/include/c++/6/bits/vector.tcc ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:/usr/include/c++/6/bits/vector.tcc ****  *
  38:/usr/include/c++/6/bits/vector.tcc ****  *
  39:/usr/include/c++/6/bits/vector.tcc ****  * Copyright (c) 1996
GAS LISTING /tmp/ccvUPO8Q.s 			page 494


  40:/usr/include/c++/6/bits/vector.tcc ****  * Silicon Graphics Computer Systems, Inc.
  41:/usr/include/c++/6/bits/vector.tcc ****  *
  42:/usr/include/c++/6/bits/vector.tcc ****  * Permission to use, copy, modify, distribute and sell this software
  43:/usr/include/c++/6/bits/vector.tcc ****  * and its documentation for any purpose is hereby granted without fee,
  44:/usr/include/c++/6/bits/vector.tcc ****  * provided that the above copyright notice appear in all copies and
  45:/usr/include/c++/6/bits/vector.tcc ****  * that both that copyright notice and this permission notice appear
  46:/usr/include/c++/6/bits/vector.tcc ****  * in supporting documentation.  Silicon Graphics makes no
  47:/usr/include/c++/6/bits/vector.tcc ****  * representations about the suitability of this  software for any
  48:/usr/include/c++/6/bits/vector.tcc ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:/usr/include/c++/6/bits/vector.tcc ****  */
  50:/usr/include/c++/6/bits/vector.tcc **** 
  51:/usr/include/c++/6/bits/vector.tcc **** /** @file bits/vector.tcc
  52:/usr/include/c++/6/bits/vector.tcc ****  *  This is an internal header file, included by other library headers.
  53:/usr/include/c++/6/bits/vector.tcc ****  *  Do not attempt to use it directly. @headername{vector}
  54:/usr/include/c++/6/bits/vector.tcc ****  */
  55:/usr/include/c++/6/bits/vector.tcc **** 
  56:/usr/include/c++/6/bits/vector.tcc **** #ifndef _VECTOR_TCC
  57:/usr/include/c++/6/bits/vector.tcc **** #define _VECTOR_TCC 1
  58:/usr/include/c++/6/bits/vector.tcc **** 
  59:/usr/include/c++/6/bits/vector.tcc **** namespace std _GLIBCXX_VISIBILITY(default)
  60:/usr/include/c++/6/bits/vector.tcc **** {
  61:/usr/include/c++/6/bits/vector.tcc **** _GLIBCXX_BEGIN_NAMESPACE_CONTAINER
  62:/usr/include/c++/6/bits/vector.tcc **** 
  63:/usr/include/c++/6/bits/vector.tcc ****   template<typename _Tp, typename _Alloc>
  64:/usr/include/c++/6/bits/vector.tcc ****     void
  65:/usr/include/c++/6/bits/vector.tcc ****     vector<_Tp, _Alloc>::
  66:/usr/include/c++/6/bits/vector.tcc ****     reserve(size_type __n)
  67:/usr/include/c++/6/bits/vector.tcc ****     {
  68:/usr/include/c++/6/bits/vector.tcc ****       if (__n > this->max_size())
  69:/usr/include/c++/6/bits/vector.tcc **** 	__throw_length_error(__N("vector::reserve"));
  70:/usr/include/c++/6/bits/vector.tcc ****       if (this->capacity() < __n)
  71:/usr/include/c++/6/bits/vector.tcc **** 	{
  72:/usr/include/c++/6/bits/vector.tcc **** 	  const size_type __old_size = size();
  73:/usr/include/c++/6/bits/vector.tcc **** 	  pointer __tmp = _M_allocate_and_copy(__n,
  74:/usr/include/c++/6/bits/vector.tcc **** 	    _GLIBCXX_MAKE_MOVE_IF_NOEXCEPT_ITERATOR(this->_M_impl._M_start),
  75:/usr/include/c++/6/bits/vector.tcc **** 	    _GLIBCXX_MAKE_MOVE_IF_NOEXCEPT_ITERATOR(this->_M_impl._M_finish));
  76:/usr/include/c++/6/bits/vector.tcc **** 	  std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
  77:/usr/include/c++/6/bits/vector.tcc **** 			_M_get_Tp_allocator());
  78:/usr/include/c++/6/bits/vector.tcc **** 	  _M_deallocate(this->_M_impl._M_start,
  79:/usr/include/c++/6/bits/vector.tcc **** 			this->_M_impl._M_end_of_storage
  80:/usr/include/c++/6/bits/vector.tcc **** 			- this->_M_impl._M_start);
  81:/usr/include/c++/6/bits/vector.tcc **** 	  this->_M_impl._M_start = __tmp;
  82:/usr/include/c++/6/bits/vector.tcc **** 	  this->_M_impl._M_finish = __tmp + __old_size;
  83:/usr/include/c++/6/bits/vector.tcc **** 	  this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
  84:/usr/include/c++/6/bits/vector.tcc **** 	}
  85:/usr/include/c++/6/bits/vector.tcc ****     }
  86:/usr/include/c++/6/bits/vector.tcc **** 
  87:/usr/include/c++/6/bits/vector.tcc **** #if __cplusplus >= 201103L
  88:/usr/include/c++/6/bits/vector.tcc ****   template<typename _Tp, typename _Alloc>
  89:/usr/include/c++/6/bits/vector.tcc ****     template<typename... _Args>
  90:/usr/include/c++/6/bits/vector.tcc ****       void
  91:/usr/include/c++/6/bits/vector.tcc ****       vector<_Tp, _Alloc>::
  92:/usr/include/c++/6/bits/vector.tcc ****       emplace_back(_Args&&... __args)
  93:/usr/include/c++/6/bits/vector.tcc ****       {
  94:/usr/include/c++/6/bits/vector.tcc **** 	if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
  95:/usr/include/c++/6/bits/vector.tcc **** 	  {
  96:/usr/include/c++/6/bits/vector.tcc **** 	    _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish,
GAS LISTING /tmp/ccvUPO8Q.s 			page 495


  97:/usr/include/c++/6/bits/vector.tcc **** 				     std::forward<_Args>(__args)...);
  98:/usr/include/c++/6/bits/vector.tcc **** 	    ++this->_M_impl._M_finish;
  99:/usr/include/c++/6/bits/vector.tcc **** 	  }
 100:/usr/include/c++/6/bits/vector.tcc **** 	else
 101:/usr/include/c++/6/bits/vector.tcc **** 	  _M_emplace_back_aux(std::forward<_Args>(__args)...);
 102:/usr/include/c++/6/bits/vector.tcc ****       }
 103:/usr/include/c++/6/bits/vector.tcc **** #endif
 104:/usr/include/c++/6/bits/vector.tcc **** 
 105:/usr/include/c++/6/bits/vector.tcc ****   template<typename _Tp, typename _Alloc>
 106:/usr/include/c++/6/bits/vector.tcc ****     typename vector<_Tp, _Alloc>::iterator
 107:/usr/include/c++/6/bits/vector.tcc ****     vector<_Tp, _Alloc>::
 108:/usr/include/c++/6/bits/vector.tcc **** #if __cplusplus >= 201103L
 109:/usr/include/c++/6/bits/vector.tcc ****     insert(const_iterator __position, const value_type& __x)
 110:/usr/include/c++/6/bits/vector.tcc **** #else
 111:/usr/include/c++/6/bits/vector.tcc ****     insert(iterator __position, const value_type& __x)
 112:/usr/include/c++/6/bits/vector.tcc **** #endif
 113:/usr/include/c++/6/bits/vector.tcc ****     {
 114:/usr/include/c++/6/bits/vector.tcc ****       const size_type __n = __position - begin();
 115:/usr/include/c++/6/bits/vector.tcc ****       if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage
 116:/usr/include/c++/6/bits/vector.tcc **** 	  && __position == end())
 117:/usr/include/c++/6/bits/vector.tcc **** 	{
 118:/usr/include/c++/6/bits/vector.tcc **** 	  _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish, __x);
 119:/usr/include/c++/6/bits/vector.tcc **** 	  ++this->_M_impl._M_finish;
 120:/usr/include/c++/6/bits/vector.tcc **** 	}
 121:/usr/include/c++/6/bits/vector.tcc ****       else
 122:/usr/include/c++/6/bits/vector.tcc **** 	{
 123:/usr/include/c++/6/bits/vector.tcc **** #if __cplusplus >= 201103L
 124:/usr/include/c++/6/bits/vector.tcc **** 	  const auto __pos = begin() + (__position - cbegin());
 125:/usr/include/c++/6/bits/vector.tcc **** 	  if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
 126:/usr/include/c++/6/bits/vector.tcc **** 	    {
 127:/usr/include/c++/6/bits/vector.tcc **** 	      _Tp __x_copy = __x;
 128:/usr/include/c++/6/bits/vector.tcc **** 	      _M_insert_aux(__pos, std::move(__x_copy));
 129:/usr/include/c++/6/bits/vector.tcc **** 	    }
 130:/usr/include/c++/6/bits/vector.tcc **** 	  else
 131:/usr/include/c++/6/bits/vector.tcc **** 	    _M_insert_aux(__pos, __x);
 132:/usr/include/c++/6/bits/vector.tcc **** #else
 133:/usr/include/c++/6/bits/vector.tcc **** 	    _M_insert_aux(__position, __x);
 134:/usr/include/c++/6/bits/vector.tcc **** #endif
 135:/usr/include/c++/6/bits/vector.tcc **** 	}
 136:/usr/include/c++/6/bits/vector.tcc ****       return iterator(this->_M_impl._M_start + __n);
 137:/usr/include/c++/6/bits/vector.tcc ****     }
 138:/usr/include/c++/6/bits/vector.tcc **** 
 139:/usr/include/c++/6/bits/vector.tcc ****   template<typename _Tp, typename _Alloc>
 140:/usr/include/c++/6/bits/vector.tcc ****     typename vector<_Tp, _Alloc>::iterator
 141:/usr/include/c++/6/bits/vector.tcc ****     vector<_Tp, _Alloc>::
 11204              		.loc 40 141 0
 11205              		.cfi_startproc
 11206 0000 55       		pushq	%rbp
 11207              		.cfi_def_cfa_offset 16
 11208              		.cfi_offset 6, -16
 11209 0001 4889E5   		movq	%rsp, %rbp
 11210              		.cfi_def_cfa_register 6
 11211 0004 53       		pushq	%rbx
 11212 0005 4883EC28 		subq	$40, %rsp
 11213              		.cfi_offset 3, -24
 11214 0009 48897DD8 		movq	%rdi, -40(%rbp)
 11215 000d 488975D0 		movq	%rsi, -48(%rbp)
GAS LISTING /tmp/ccvUPO8Q.s 			page 496


 142:/usr/include/c++/6/bits/vector.tcc ****     _M_erase(iterator __position)
 143:/usr/include/c++/6/bits/vector.tcc ****     {
 144:/usr/include/c++/6/bits/vector.tcc ****       if (__position + 1 != end())
 11216              		.loc 40 144 0
 11217 0011 488B45D8 		movq	-40(%rbp), %rax
 11218 0015 4889C7   		movq	%rax, %rdi
 11219 0018 E8000000 		call	_ZNSt6vectorIN2gr5tag_tESaIS1_EE3endEv
 11219      00
 11220 001d 488945E0 		movq	%rax, -32(%rbp)
 11221 0021 488D45D0 		leaq	-48(%rbp), %rax
 11222 0025 BE010000 		movl	$1, %esi
 11222      00
 11223 002a 4889C7   		movq	%rax, %rdi
 11224 002d E8000000 		call	_ZNK9__gnu_cxx17__normal_iteratorIPN2gr5tag_tESt6vectorIS2_SaIS2_EEEplEl
 11224      00
 11225 0032 488945E8 		movq	%rax, -24(%rbp)
 11226 0036 488D55E0 		leaq	-32(%rbp), %rdx
 11227 003a 488D45E8 		leaq	-24(%rbp), %rax
 11228 003e 4889D6   		movq	%rdx, %rsi
 11229 0041 4889C7   		movq	%rax, %rdi
 11230 0044 E8000000 		call	_ZN9__gnu_cxxneIPN2gr5tag_tESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_
 11230      00
 11231 0049 84C0     		testb	%al, %al
 11232 004b 7435     		je	.L541
 145:/usr/include/c++/6/bits/vector.tcc **** 	_GLIBCXX_MOVE3(__position + 1, end(), __position);
 11233              		.loc 40 145 0
 11234 004d 488B45D8 		movq	-40(%rbp), %rax
 11235 0051 4889C7   		movq	%rax, %rdi
 11236 0054 E8000000 		call	_ZNSt6vectorIN2gr5tag_tESaIS1_EE3endEv
 11236      00
 11237 0059 4889C3   		movq	%rax, %rbx
 11238 005c 488D45D0 		leaq	-48(%rbp), %rax
 11239 0060 BE010000 		movl	$1, %esi
 11239      00
 11240 0065 4889C7   		movq	%rax, %rdi
 11241 0068 E8000000 		call	_ZNK9__gnu_cxx17__normal_iteratorIPN2gr5tag_tESt6vectorIS2_SaIS2_EEEplEl
 11241      00
 11242 006d 4889C1   		movq	%rax, %rcx
 11243 0070 488B45D0 		movq	-48(%rbp), %rax
 11244 0074 4889C2   		movq	%rax, %rdx
 11245 0077 4889DE   		movq	%rbx, %rsi
 11246 007a 4889CF   		movq	%rcx, %rdi
 11247 007d E8000000 		call	_ZSt4moveIN9__gnu_cxx17__normal_iteratorIPN2gr5tag_tESt6vectorIS3_SaIS3_EEEES8_ET0_T_SA_S9_
 11247      00
 11248              	.L541:
 146:/usr/include/c++/6/bits/vector.tcc ****       --this->_M_impl._M_finish;
 11249              		.loc 40 146 0
 11250 0082 488B45D8 		movq	-40(%rbp), %rax
 11251 0086 488B4008 		movq	8(%rax), %rax
 11252 008a 488D50C8 		leaq	-56(%rax), %rdx
 11253 008e 488B45D8 		movq	-40(%rbp), %rax
 11254 0092 48895008 		movq	%rdx, 8(%rax)
 147:/usr/include/c++/6/bits/vector.tcc ****       _Alloc_traits::destroy(this->_M_impl, this->_M_impl._M_finish);
 11255              		.loc 40 147 0
 11256 0096 488B45D8 		movq	-40(%rbp), %rax
 11257 009a 488B5008 		movq	8(%rax), %rdx
 11258 009e 488B45D8 		movq	-40(%rbp), %rax
GAS LISTING /tmp/ccvUPO8Q.s 			page 497


 11259 00a2 4889D6   		movq	%rdx, %rsi
 11260 00a5 4889C7   		movq	%rax, %rdi
 11261 00a8 E8000000 		call	_ZNSt16allocator_traitsISaIN2gr5tag_tEEE7destroyIS1_EEvRS2_PT_
 11261      00
 148:/usr/include/c++/6/bits/vector.tcc ****       return __position;
 11262              		.loc 40 148 0
 11263 00ad 488B45D0 		movq	-48(%rbp), %rax
 149:/usr/include/c++/6/bits/vector.tcc ****     }
 11264              		.loc 40 149 0
 11265 00b1 4883C428 		addq	$40, %rsp
 11266 00b5 5B       		popq	%rbx
 11267 00b6 5D       		popq	%rbp
 11268              		.cfi_def_cfa 7, 8
 11269 00b7 C3       		ret
 11270              		.cfi_endproc
 11271              	.LFE13440:
 11273              		.section	.text._ZNSt7complexIfEmLIfEERS0_RKS_IT_E,"axG",@progbits,_ZNSt7complexIfEmLIfEERS0_RKS_IT
 11274              		.align 2
 11275              		.weak	_ZNSt7complexIfEmLIfEERS0_RKS_IT_E
 11277              	_ZNSt7complexIfEmLIfEERS0_RKS_IT_E:
 11278              	.LFB13441:
1081:/usr/include/c++/6/complex **** #else
1082:/usr/include/c++/6/complex ****       float& 
1083:/usr/include/c++/6/complex ****       real() { return __real__ _M_value; }
1084:/usr/include/c++/6/complex **** 
1085:/usr/include/c++/6/complex ****       const float& 
1086:/usr/include/c++/6/complex ****       real() const { return __real__ _M_value; }      
1087:/usr/include/c++/6/complex **** 
1088:/usr/include/c++/6/complex ****       float& 
1089:/usr/include/c++/6/complex ****       imag() { return __imag__ _M_value; }
1090:/usr/include/c++/6/complex **** 
1091:/usr/include/c++/6/complex ****       const float& 
1092:/usr/include/c++/6/complex ****       imag() const { return __imag__ _M_value; }
1093:/usr/include/c++/6/complex **** #endif
1094:/usr/include/c++/6/complex **** 
1095:/usr/include/c++/6/complex ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
1096:/usr/include/c++/6/complex ****       // DR 387. std::complex over-encapsulated.
1097:/usr/include/c++/6/complex ****       void 
1098:/usr/include/c++/6/complex ****       real(float __val) { __real__ _M_value = __val; }
1099:/usr/include/c++/6/complex **** 
1100:/usr/include/c++/6/complex ****       void 
1101:/usr/include/c++/6/complex ****       imag(float __val) { __imag__ _M_value = __val; }
1102:/usr/include/c++/6/complex **** 
1103:/usr/include/c++/6/complex ****       complex&
1104:/usr/include/c++/6/complex ****       operator=(float __f)
1105:/usr/include/c++/6/complex ****       {
1106:/usr/include/c++/6/complex **** 	_M_value = __f;
1107:/usr/include/c++/6/complex **** 	return *this;
1108:/usr/include/c++/6/complex ****       }
1109:/usr/include/c++/6/complex **** 
1110:/usr/include/c++/6/complex ****       complex&
1111:/usr/include/c++/6/complex ****       operator+=(float __f)
1112:/usr/include/c++/6/complex ****       {
1113:/usr/include/c++/6/complex **** 	_M_value += __f;
1114:/usr/include/c++/6/complex **** 	return *this;
1115:/usr/include/c++/6/complex ****       }
1116:/usr/include/c++/6/complex **** 
GAS LISTING /tmp/ccvUPO8Q.s 			page 498


1117:/usr/include/c++/6/complex ****       complex&
1118:/usr/include/c++/6/complex ****       operator-=(float __f)
1119:/usr/include/c++/6/complex ****       {
1120:/usr/include/c++/6/complex **** 	_M_value -= __f;
1121:/usr/include/c++/6/complex **** 	return *this;
1122:/usr/include/c++/6/complex ****       }
1123:/usr/include/c++/6/complex **** 
1124:/usr/include/c++/6/complex ****       complex&
1125:/usr/include/c++/6/complex ****       operator*=(float __f)
1126:/usr/include/c++/6/complex ****       {
1127:/usr/include/c++/6/complex **** 	_M_value *= __f;
1128:/usr/include/c++/6/complex **** 	return *this;
1129:/usr/include/c++/6/complex ****       }
1130:/usr/include/c++/6/complex **** 
1131:/usr/include/c++/6/complex ****       complex&
1132:/usr/include/c++/6/complex ****       operator/=(float __f)
1133:/usr/include/c++/6/complex ****       {
1134:/usr/include/c++/6/complex **** 	_M_value /= __f;
1135:/usr/include/c++/6/complex **** 	return *this;
1136:/usr/include/c++/6/complex ****       }
1137:/usr/include/c++/6/complex **** 
1138:/usr/include/c++/6/complex ****       // Let the compiler synthesize the copy and assignment
1139:/usr/include/c++/6/complex ****       // operator.  It always does a pretty good job.
1140:/usr/include/c++/6/complex ****       // complex& operator=(const complex&);
1141:/usr/include/c++/6/complex **** 
1142:/usr/include/c++/6/complex ****       template<typename _Tp>
1143:/usr/include/c++/6/complex ****         complex&
1144:/usr/include/c++/6/complex ****         operator=(const complex<_Tp>&  __z)
1145:/usr/include/c++/6/complex **** 	{
1146:/usr/include/c++/6/complex **** 	  __real__ _M_value = __z.real();
1147:/usr/include/c++/6/complex **** 	  __imag__ _M_value = __z.imag();
1148:/usr/include/c++/6/complex **** 	  return *this;
1149:/usr/include/c++/6/complex **** 	}
1150:/usr/include/c++/6/complex **** 
1151:/usr/include/c++/6/complex ****       template<typename _Tp>
1152:/usr/include/c++/6/complex ****         complex&
1153:/usr/include/c++/6/complex ****         operator+=(const complex<_Tp>& __z)
1154:/usr/include/c++/6/complex **** 	{
1155:/usr/include/c++/6/complex **** 	  __real__ _M_value += __z.real();
1156:/usr/include/c++/6/complex **** 	  __imag__ _M_value += __z.imag();
1157:/usr/include/c++/6/complex **** 	  return *this;
1158:/usr/include/c++/6/complex **** 	}
1159:/usr/include/c++/6/complex **** 
1160:/usr/include/c++/6/complex ****       template<class _Tp>
1161:/usr/include/c++/6/complex ****         complex&
1162:/usr/include/c++/6/complex ****         operator-=(const complex<_Tp>& __z)
1163:/usr/include/c++/6/complex **** 	{
1164:/usr/include/c++/6/complex **** 	  __real__ _M_value -= __z.real();
1165:/usr/include/c++/6/complex **** 	  __imag__ _M_value -= __z.imag();
1166:/usr/include/c++/6/complex **** 	  return *this;
1167:/usr/include/c++/6/complex **** 	}
1168:/usr/include/c++/6/complex **** 
1169:/usr/include/c++/6/complex ****       template<class _Tp>
1170:/usr/include/c++/6/complex ****         complex&
1171:/usr/include/c++/6/complex ****         operator*=(const complex<_Tp>& __z)
 11279              		.loc 9 1171 0
 11280              		.cfi_startproc
GAS LISTING /tmp/ccvUPO8Q.s 			page 499


 11281 0000 55       		pushq	%rbp
 11282              		.cfi_def_cfa_offset 16
 11283              		.cfi_offset 6, -16
 11284 0001 4889E5   		movq	%rsp, %rbp
 11285              		.cfi_def_cfa_register 6
 11286 0004 4883EC30 		subq	$48, %rsp
 11287 0008 48897DE8 		movq	%rdi, -24(%rbp)
 11288 000c 488975E0 		movq	%rsi, -32(%rbp)
1172:/usr/include/c++/6/complex **** 	{
1173:/usr/include/c++/6/complex **** 	  _ComplexT __t;
1174:/usr/include/c++/6/complex **** 	  __real__ __t = __z.real();
 11289              		.loc 9 1174 0
 11290 0010 488B45E0 		movq	-32(%rbp), %rax
 11291 0014 4889C7   		movq	%rax, %rdi
 11292 0017 E8000000 		call	_ZNKSt7complexIfE4realB5cxx11Ev
 11292      00
 11293 001c C5F97EC0 		vmovd	%xmm0, %eax
 11294 0020 8945FC   		movl	%eax, -4(%rbp)
 11295 0023 C5FA1045 		vmovss	-8(%rbp), %xmm0
 11295      F8
 11296 0028 C5FA104D 		vmovss	-4(%rbp), %xmm1
 11296      FC
 11297 002d C5FA114D 		vmovss	%xmm1, -16(%rbp)
 11297      F0
 11298 0032 C5FA1145 		vmovss	%xmm0, -12(%rbp)
 11298      F4
1175:/usr/include/c++/6/complex **** 	  __imag__ __t = __z.imag();
 11299              		.loc 9 1175 0
 11300 0037 488B45E0 		movq	-32(%rbp), %rax
 11301 003b 4889C7   		movq	%rax, %rdi
 11302 003e E8000000 		call	_ZNKSt7complexIfE4imagB5cxx11Ev
 11302      00
 11303 0043 C5F97EC0 		vmovd	%xmm0, %eax
 11304 0047 8945F8   		movl	%eax, -8(%rbp)
 11305 004a C5FA1045 		vmovss	-8(%rbp), %xmm0
 11305      F8
 11306 004f C5FA104D 		vmovss	-4(%rbp), %xmm1
 11306      FC
 11307 0054 C5FA114D 		vmovss	%xmm1, -16(%rbp)
 11307      F0
 11308 0059 C5FA1145 		vmovss	%xmm0, -12(%rbp)
 11308      F4
 11309 005e 488B45E8 		movq	-24(%rbp), %rax
 11310 0062 8B00     		movl	(%rax), %eax
 11311 0064 488B55E8 		movq	-24(%rbp), %rdx
 11312 0068 C5FA1042 		vmovss	4(%rdx), %xmm0
 11312      04
1176:/usr/include/c++/6/complex **** 	  _M_value *= __t;
 11313              		.loc 9 1176 0
 11314 006d C5FA1055 		vmovss	-8(%rbp), %xmm2
 11314      F8
 11315 0072 C5FA104D 		vmovss	-4(%rbp), %xmm1
 11315      FC
 11316 0077 C5F828DA 		vmovaps	%xmm2, %xmm3
 11317 007b C5F828D1 		vmovaps	%xmm1, %xmm2
 11318 007f C5F828C8 		vmovaps	%xmm0, %xmm1
 11319 0083 8945D4   		movl	%eax, -44(%rbp)
GAS LISTING /tmp/ccvUPO8Q.s 			page 500


 11320 0086 C5FA1045 		vmovss	-44(%rbp), %xmm0
 11320      D4
 11321 008b E8000000 		call	__mulsc3@PLT
 11321      00
 11322 0090 C4E1F97E 		vmovq	%xmm0, %rax
 11322      C0
 11323 0095 488945D8 		movq	%rax, -40(%rbp)
 11324 0099 C5FA104D 		vmovss	-40(%rbp), %xmm1
 11324      D8
 11325 009e C5FA1045 		vmovss	-36(%rbp), %xmm0
 11325      DC
 11326 00a3 488B45E8 		movq	-24(%rbp), %rax
 11327 00a7 C5FA1108 		vmovss	%xmm1, (%rax)
 11328 00ab 488B45E8 		movq	-24(%rbp), %rax
 11329 00af C5FA1140 		vmovss	%xmm0, 4(%rax)
 11329      04
1177:/usr/include/c++/6/complex **** 	  return *this;
 11330              		.loc 9 1177 0
 11331 00b4 488B45E8 		movq	-24(%rbp), %rax
1178:/usr/include/c++/6/complex **** 	}
 11332              		.loc 9 1178 0
 11333 00b8 C9       		leave
 11334              		.cfi_def_cfa 7, 8
 11335 00b9 C3       		ret
 11336              		.cfi_endproc
 11337              	.LFE13441:
 11339              		.section	.text._ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFv
 11340              		.weak	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt
 11342              	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt10_Sele
 11343              	.LFB13677:
 700:/usr/include/c++/6/bits/stl_tree.h ****       { return static_cast<_Link_type>(__x->_M_right); }
 11344              		.loc 27 700 0
 11345              		.cfi_startproc
 11346 0000 55       		pushq	%rbp
 11347              		.cfi_def_cfa_offset 16
 11348              		.cfi_offset 6, -16
 11349 0001 4889E5   		movq	%rsp, %rbp
 11350              		.cfi_def_cfa_register 6
 11351 0004 48897DF8 		movq	%rdi, -8(%rbp)
 701:/usr/include/c++/6/bits/stl_tree.h **** 
 11352              		.loc 27 701 0
 11353 0008 488B45F8 		movq	-8(%rbp), %rax
 11354 000c 488B4018 		movq	24(%rax), %rax
 11355 0010 5D       		popq	%rbp
 11356              		.cfi_def_cfa 7, 8
 11357 0011 C3       		ret
 11358              		.cfi_endproc
 11359              	.LFE13677:
 11361              		.section	.text._ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFv
 11362              		.weak	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt
 11364              	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt10_Sele
 11365              	.LFB13678:
 692:/usr/include/c++/6/bits/stl_tree.h ****       { return static_cast<_Link_type>(__x->_M_left); }
 11366              		.loc 27 692 0
 11367              		.cfi_startproc
 11368 0000 55       		pushq	%rbp
 11369              		.cfi_def_cfa_offset 16
GAS LISTING /tmp/ccvUPO8Q.s 			page 501


 11370              		.cfi_offset 6, -16
 11371 0001 4889E5   		movq	%rsp, %rbp
 11372              		.cfi_def_cfa_register 6
 11373 0004 48897DF8 		movq	%rdi, -8(%rbp)
 693:/usr/include/c++/6/bits/stl_tree.h **** 
 11374              		.loc 27 693 0
 11375 0008 488B45F8 		movq	-8(%rbp), %rax
 11376 000c 488B4010 		movq	16(%rax), %rax
 11377 0010 5D       		popq	%rbp
 11378              		.cfi_def_cfa 7, 8
 11379 0011 C3       		ret
 11380              		.cfi_endproc
 11381              	.LFE13678:
 11383              		.section	.text._ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFv
 11384              		.align 2
 11385              		.weak	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt
 11387              	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt10_Sele
 11388              	.LFB13679:
 573:/usr/include/c++/6/bits/stl_tree.h ****       {
 11389              		.loc 27 573 0
 11390              		.cfi_startproc
 11391 0000 55       		pushq	%rbp
 11392              		.cfi_def_cfa_offset 16
 11393              		.cfi_offset 6, -16
 11394 0001 4889E5   		movq	%rsp, %rbp
 11395              		.cfi_def_cfa_register 6
 11396 0004 4883EC10 		subq	$16, %rsp
 11397 0008 48897DF8 		movq	%rdi, -8(%rbp)
 11398 000c 488975F0 		movq	%rsi, -16(%rbp)
 575:/usr/include/c++/6/bits/stl_tree.h **** 	_M_put_node(__p);
 11399              		.loc 27 575 0
 11400 0010 488B55F0 		movq	-16(%rbp), %rdx
 11401 0014 488B45F8 		movq	-8(%rbp), %rax
 11402 0018 4889D6   		movq	%rdx, %rsi
 11403 001b 4889C7   		movq	%rax, %rdi
 11404 001e E8000000 		call	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt1
 11404      00
 576:/usr/include/c++/6/bits/stl_tree.h ****       }
 11405              		.loc 27 576 0
 11406 0023 488B55F0 		movq	-16(%rbp), %rdx
 11407 0027 488B45F8 		movq	-8(%rbp), %rax
 11408 002b 4889D6   		movq	%rdx, %rsi
 11409 002e 4889C7   		movq	%rax, %rdi
 11410 0031 E8000000 		call	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt1
 11410      00
 577:/usr/include/c++/6/bits/stl_tree.h **** 
 11411              		.loc 27 577 0
 11412 0036 90       		nop
 11413 0037 C9       		leave
 11414              		.cfi_def_cfa 7, 8
 11415 0038 C3       		ret
 11416              		.cfi_endproc
 11417              	.LFE13679:
 11419              		.section	.text._ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_St5dequeIS4_SaIS
 11420              		.weak	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_St5dequeIS4_SaIS4_EEESt10
 11422              	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_St5dequeIS4_SaIS4_EEESt10_Select
 11423              	.LFB13695:
GAS LISTING /tmp/ccvUPO8Q.s 			page 502


 700:/usr/include/c++/6/bits/stl_tree.h ****       { return static_cast<_Link_type>(__x->_M_right); }
 11424              		.loc 27 700 0
 11425              		.cfi_startproc
 11426 0000 55       		pushq	%rbp
 11427              		.cfi_def_cfa_offset 16
 11428              		.cfi_offset 6, -16
 11429 0001 4889E5   		movq	%rsp, %rbp
 11430              		.cfi_def_cfa_register 6
 11431 0004 48897DF8 		movq	%rdi, -8(%rbp)
 701:/usr/include/c++/6/bits/stl_tree.h **** 
 11432              		.loc 27 701 0
 11433 0008 488B45F8 		movq	-8(%rbp), %rax
 11434 000c 488B4018 		movq	24(%rax), %rax
 11435 0010 5D       		popq	%rbp
 11436              		.cfi_def_cfa 7, 8
 11437 0011 C3       		ret
 11438              		.cfi_endproc
 11439              	.LFE13695:
 11441              		.section	.text._ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_St5dequeIS4_SaIS
 11442              		.weak	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_St5dequeIS4_SaIS4_EEESt10
 11444              	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_St5dequeIS4_SaIS4_EEESt10_Select
 11445              	.LFB13696:
 692:/usr/include/c++/6/bits/stl_tree.h ****       { return static_cast<_Link_type>(__x->_M_left); }
 11446              		.loc 27 692 0
 11447              		.cfi_startproc
 11448 0000 55       		pushq	%rbp
 11449              		.cfi_def_cfa_offset 16
 11450              		.cfi_offset 6, -16
 11451 0001 4889E5   		movq	%rsp, %rbp
 11452              		.cfi_def_cfa_register 6
 11453 0004 48897DF8 		movq	%rdi, -8(%rbp)
 693:/usr/include/c++/6/bits/stl_tree.h **** 
 11454              		.loc 27 693 0
 11455 0008 488B45F8 		movq	-8(%rbp), %rax
 11456 000c 488B4010 		movq	16(%rax), %rax
 11457 0010 5D       		popq	%rbp
 11458              		.cfi_def_cfa 7, 8
 11459 0011 C3       		ret
 11460              		.cfi_endproc
 11461              	.LFE13696:
 11463              		.section	.text._ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFv
 11464              		.align 2
 11465              		.weak	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt
 11467              	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt10_Sele
 11468              	.LFB13708:
 676:/usr/include/c++/6/bits/stl_tree.h ****       { return &this->_M_impl._M_header; }
 11469              		.loc 27 676 0
 11470              		.cfi_startproc
 11471 0000 55       		pushq	%rbp
 11472              		.cfi_def_cfa_offset 16
 11473              		.cfi_offset 6, -16
 11474 0001 4889E5   		movq	%rsp, %rbp
 11475              		.cfi_def_cfa_register 6
 11476 0004 48897DF8 		movq	%rdi, -8(%rbp)
 677:/usr/include/c++/6/bits/stl_tree.h **** 
 11477              		.loc 27 677 0
 11478 0008 488B45F8 		movq	-8(%rbp), %rax
GAS LISTING /tmp/ccvUPO8Q.s 			page 503


 11479 000c 4883C008 		addq	$8, %rax
 11480 0010 5D       		popq	%rbp
 11481              		.cfi_def_cfa 7, 8
 11482 0011 C3       		ret
 11483              		.cfi_endproc
 11484              	.LFE13708:
 11486              		.section	.text._ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFv
 11487              		.align 2
 11488              		.weak	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt
 11490              	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt10_Sele
 11491              	.LFB13709:
1649:/usr/include/c++/6/bits/stl_tree.h ****     _M_lower_bound(_Link_type __x, _Base_ptr __y,
 11492              		.loc 27 1649 0
 11493              		.cfi_startproc
 11494 0000 55       		pushq	%rbp
 11495              		.cfi_def_cfa_offset 16
 11496              		.cfi_offset 6, -16
 11497 0001 4889E5   		movq	%rsp, %rbp
 11498              		.cfi_def_cfa_register 6
 11499 0004 4883EC30 		subq	$48, %rsp
 11500 0008 48897DE8 		movq	%rdi, -24(%rbp)
 11501 000c 488975E0 		movq	%rsi, -32(%rbp)
 11502 0010 488955D8 		movq	%rdx, -40(%rbp)
 11503 0014 48894DD0 		movq	%rcx, -48(%rbp)
 11504              	.L560:
1653:/usr/include/c++/6/bits/stl_tree.h **** 	if (!_M_impl._M_key_compare(_S_key(__x), __k))
 11505              		.loc 27 1653 0
 11506 0018 48837DE0 		cmpq	$0, -32(%rbp)
 11506      00
 11507 001d 7455     		je	.L557
1654:/usr/include/c++/6/bits/stl_tree.h **** 	  __y = __x, __x = _S_left(__x);
 11508              		.loc 27 1654 0
 11509 001f 488B45E0 		movq	-32(%rbp), %rax
 11510 0023 4889C7   		movq	%rax, %rdi
 11511 0026 E8000000 		call	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt1
 11511      00
 11512 002b 4889C1   		movq	%rax, %rcx
 11513 002e 488B45E8 		movq	-24(%rbp), %rax
 11514 0032 488B55D0 		movq	-48(%rbp), %rdx
 11515 0036 4889CE   		movq	%rcx, %rsi
 11516 0039 4889C7   		movq	%rax, %rdi
 11517 003c E8000000 		call	_ZNK3pmt10comparatorclERKN5boost13intrusive_ptrINS_8pmt_baseEEES6_
 11517      00
 11518 0041 83F001   		xorl	$1, %eax
 11519 0044 84C0     		testb	%al, %al
 11520 0046 741A     		je	.L558
1655:/usr/include/c++/6/bits/stl_tree.h **** 	else
 11521              		.loc 27 1655 0
 11522 0048 488B45E0 		movq	-32(%rbp), %rax
 11523 004c 488945D8 		movq	%rax, -40(%rbp)
 11524 0050 488B45E0 		movq	-32(%rbp), %rax
 11525 0054 4889C7   		movq	%rax, %rdi
 11526 0057 E8000000 		call	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt1
 11526      00
 11527 005c 488945E0 		movq	%rax, -32(%rbp)
 11528 0060 EBB6     		jmp	.L560
 11529              	.L558:
GAS LISTING /tmp/ccvUPO8Q.s 			page 504


1657:/usr/include/c++/6/bits/stl_tree.h ****       return iterator(__y);
 11530              		.loc 27 1657 0
 11531 0062 488B45E0 		movq	-32(%rbp), %rax
 11532 0066 4889C7   		movq	%rax, %rdi
 11533 0069 E8000000 		call	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt1
 11533      00
 11534 006e 488945E0 		movq	%rax, -32(%rbp)
1653:/usr/include/c++/6/bits/stl_tree.h **** 	if (!_M_impl._M_key_compare(_S_key(__x), __k))
 11535              		.loc 27 1653 0
 11536 0072 EBA4     		jmp	.L560
 11537              	.L557:
1658:/usr/include/c++/6/bits/stl_tree.h ****     }
 11538              		.loc 27 1658 0
 11539 0074 488B55D8 		movq	-40(%rbp), %rdx
 11540 0078 488D45F8 		leaq	-8(%rbp), %rax
 11541 007c 4889D6   		movq	%rdx, %rsi
 11542 007f 4889C7   		movq	%rax, %rdi
 11543 0082 E8000000 		call	_ZNSt17_Rb_tree_iteratorISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS1_8functionIFvS5_
 11543      00
 11544 0087 488B45F8 		movq	-8(%rbp), %rax
1659:/usr/include/c++/6/bits/stl_tree.h **** 
 11545              		.loc 27 1659 0
 11546 008b C9       		leave
 11547              		.cfi_def_cfa 7, 8
 11548 008c C3       		ret
 11549              		.cfi_endproc
 11550              	.LFE13709:
 11552              		.section	.text._ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFv
 11553              		.weak	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt
 11555              	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt10_Sele
 11556              	.LFB13710:
 712:/usr/include/c++/6/bits/stl_tree.h ****       { return _KeyOfValue()(_S_value(__x)); }
 11557              		.loc 27 712 0
 11558              		.cfi_startproc
 11559 0000 55       		pushq	%rbp
 11560              		.cfi_def_cfa_offset 16
 11561              		.cfi_offset 6, -16
 11562 0001 4889E5   		movq	%rsp, %rbp
 11563              		.cfi_def_cfa_register 6
 11564 0004 4883EC20 		subq	$32, %rsp
 11565 0008 48897DE8 		movq	%rdi, -24(%rbp)
 713:/usr/include/c++/6/bits/stl_tree.h **** 
 11566              		.loc 27 713 0
 11567 000c 488B45E8 		movq	-24(%rbp), %rax
 11568 0010 4889C7   		movq	%rax, %rdi
 11569 0013 E8000000 		call	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt1
 11569      00
 11570 0018 4889C2   		movq	%rax, %rdx
 11571 001b 488D45FF 		leaq	-1(%rbp), %rax
 11572 001f 4889D6   		movq	%rdx, %rsi
 11573 0022 4889C7   		movq	%rax, %rdi
 11574 0025 E8000000 		call	_ZNKSt10_Select1stISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS1_8functionIFvS5_EEEEEc
 11574      00
 11575 002a C9       		leave
 11576              		.cfi_def_cfa 7, 8
 11577 002b C3       		ret
 11578              		.cfi_endproc
GAS LISTING /tmp/ccvUPO8Q.s 			page 505


 11579              	.LFE13710:
 11581              		.section	.text._ZNSt17_Rb_tree_iteratorISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS1_8func
 11582              		.align 2
 11583              		.weak	_ZNSt17_Rb_tree_iteratorISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS1_8functionIFvS5
 11585              	_ZNSt17_Rb_tree_iteratorISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS1_8functionIFvS5_EEEEEC
 11586              	.LFB13712:
 195:/usr/include/c++/6/bits/stl_tree.h ****       : _M_node(__x) { }
 11587              		.loc 27 195 0
 11588              		.cfi_startproc
 11589 0000 55       		pushq	%rbp
 11590              		.cfi_def_cfa_offset 16
 11591              		.cfi_offset 6, -16
 11592 0001 4889E5   		movq	%rsp, %rbp
 11593              		.cfi_def_cfa_register 6
 11594 0004 48897DF8 		movq	%rdi, -8(%rbp)
 11595 0008 488975F0 		movq	%rsi, -16(%rbp)
 11596              	.LBB110:
 196:/usr/include/c++/6/bits/stl_tree.h **** 
 11597              		.loc 27 196 0
 11598 000c 488B45F8 		movq	-8(%rbp), %rax
 11599 0010 488B55F0 		movq	-16(%rbp), %rdx
 11600 0014 488910   		movq	%rdx, (%rax)
 11601              	.LBE110:
 11602 0017 90       		nop
 11603 0018 5D       		popq	%rbp
 11604              		.cfi_def_cfa 7, 8
 11605 0019 C3       		ret
 11606              		.cfi_endproc
 11607              	.LFE13712:
 11609              		.weak	_ZNSt17_Rb_tree_iteratorISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS1_8functionIFvS5
 11610              		.set	_ZNSt17_Rb_tree_iteratorISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS1_8functionIFvS5_
 11611              		.section	.text._ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFv
 11612              		.align 2
 11613              		.weak	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt
 11615              	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt10_Sele
 11616              	.LFB13714:
1102:/usr/include/c++/6/bits/stl_tree.h ****       { return _M_lower_bound(_M_begin(), _M_end(), __k); }
 11617              		.loc 27 1102 0
 11618              		.cfi_startproc
 11619 0000 55       		pushq	%rbp
 11620              		.cfi_def_cfa_offset 16
 11621              		.cfi_offset 6, -16
 11622 0001 4889E5   		movq	%rsp, %rbp
 11623              		.cfi_def_cfa_register 6
 11624 0004 53       		pushq	%rbx
 11625 0005 4883EC18 		subq	$24, %rsp
 11626              		.cfi_offset 3, -24
 11627 0009 48897DE8 		movq	%rdi, -24(%rbp)
 11628 000d 488975E0 		movq	%rsi, -32(%rbp)
1103:/usr/include/c++/6/bits/stl_tree.h **** 
 11629              		.loc 27 1103 0
 11630 0011 488B45E8 		movq	-24(%rbp), %rax
 11631 0015 4889C7   		movq	%rax, %rdi
 11632 0018 E8000000 		call	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt1
 11632      00
 11633 001d 4889C3   		movq	%rax, %rbx
 11634 0020 488B45E8 		movq	-24(%rbp), %rax
GAS LISTING /tmp/ccvUPO8Q.s 			page 506


 11635 0024 4889C7   		movq	%rax, %rdi
 11636 0027 E8000000 		call	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt1
 11636      00
 11637 002c 4889C6   		movq	%rax, %rsi
 11638 002f 488B55E0 		movq	-32(%rbp), %rdx
 11639 0033 488B45E8 		movq	-24(%rbp), %rax
 11640 0037 4889D1   		movq	%rdx, %rcx
 11641 003a 4889DA   		movq	%rbx, %rdx
 11642 003d 4889C7   		movq	%rax, %rdi
 11643 0040 E8000000 		call	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt1
 11643      00
 11644 0045 4883C418 		addq	$24, %rsp
 11645 0049 5B       		popq	%rbx
 11646 004a 5D       		popq	%rbp
 11647              		.cfi_def_cfa 7, 8
 11648 004b C3       		ret
 11649              		.cfi_endproc
 11650              	.LFE13714:
 11652              		.section	.text._ZNKSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIF
 11653              		.align 2
 11654              		.weak	_ZNKSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEES
 11656              	_ZNKSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt10_Sel
 11657              	.LFB13715:
 880:/usr/include/c++/6/bits/stl_tree.h ****       { return _M_impl._M_key_compare; }
 11658              		.loc 27 880 0
 11659              		.cfi_startproc
 11660 0000 55       		pushq	%rbp
 11661              		.cfi_def_cfa_offset 16
 11662              		.cfi_offset 6, -16
 11663 0001 4889E5   		movq	%rsp, %rbp
 11664              		.cfi_def_cfa_register 6
 11665 0004 48897DF8 		movq	%rdi, -8(%rbp)
 881:/usr/include/c++/6/bits/stl_tree.h **** 
 11666              		.loc 27 881 0
 11667 0008 5D       		popq	%rbp
 11668              		.cfi_def_cfa 7, 8
 11669 0009 C3       		ret
 11670              		.cfi_endproc
 11671              	.LFE13715:
 11673              		.section	.text._ZNSt13_Rb_tree_nodeISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS1_8function
 11674              		.align 2
 11675              		.weak	_ZNSt13_Rb_tree_nodeISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS1_8functionIFvS5_EEE
 11677              	_ZNSt13_Rb_tree_nodeISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS1_8functionIFvS5_EEEEE9_M_v
 11678              	.LFB13716:
 156:/usr/include/c++/6/bits/stl_tree.h ****       { return _M_storage._M_ptr(); }
 11679              		.loc 27 156 0
 11680              		.cfi_startproc
 11681 0000 55       		pushq	%rbp
 11682              		.cfi_def_cfa_offset 16
 11683              		.cfi_offset 6, -16
 11684 0001 4889E5   		movq	%rsp, %rbp
 11685              		.cfi_def_cfa_register 6
 11686 0004 4883EC10 		subq	$16, %rsp
 11687 0008 48897DF8 		movq	%rdi, -8(%rbp)
 157:/usr/include/c++/6/bits/stl_tree.h **** 
 11688              		.loc 27 157 0
 11689 000c 488B45F8 		movq	-8(%rbp), %rax
GAS LISTING /tmp/ccvUPO8Q.s 			page 507


 11690 0010 4883C020 		addq	$32, %rax
 11691 0014 4889C7   		movq	%rax, %rdi
 11692 0017 E8000000 		call	_ZN9__gnu_cxx16__aligned_membufISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS2_8functio
 11692      00
 11693 001c C9       		leave
 11694              		.cfi_def_cfa 7, 8
 11695 001d C3       		ret
 11696              		.cfi_endproc
 11697              	.LFE13716:
 11699              		.section	.text._ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFv
 11700              		.align 2
 11701              		.weak	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt
 11703              	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt10_Sele
 11704              	.LFB13717:
 557:/usr/include/c++/6/bits/stl_tree.h **** 	{
 11705              		.loc 27 557 0
 11706              		.cfi_startproc
 11707 0000 55       		pushq	%rbp
 11708              		.cfi_def_cfa_offset 16
 11709              		.cfi_offset 6, -16
 11710 0001 4889E5   		movq	%rsp, %rbp
 11711              		.cfi_def_cfa_register 6
 11712 0004 4154     		pushq	%r12
 11713 0006 53       		pushq	%rbx
 11714 0007 4883EC30 		subq	$48, %rsp
 11715              		.cfi_offset 12, -24
 11716              		.cfi_offset 3, -32
 11717 000b 48897DD8 		movq	%rdi, -40(%rbp)
 11718 000f 488975D0 		movq	%rsi, -48(%rbp)
 11719 0013 488955C8 		movq	%rdx, -56(%rbp)
 11720 0017 48894DC0 		movq	%rcx, -64(%rbp)
 559:/usr/include/c++/6/bits/stl_tree.h **** 	  _M_construct_node(__tmp, std::forward<_Args>(__args)...);
 11721              		.loc 27 559 0
 11722 001b 488B45D8 		movq	-40(%rbp), %rax
 11723 001f 4889C7   		movq	%rax, %rdi
 11724 0022 E8000000 		call	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt1
 11724      00
 11725 0027 488945E8 		movq	%rax, -24(%rbp)
 560:/usr/include/c++/6/bits/stl_tree.h **** 	  return __tmp;
 11726              		.loc 27 560 0
 11727 002b 488B45C0 		movq	-64(%rbp), %rax
 11728 002f 4889C7   		movq	%rax, %rdi
 11729 0032 E8000000 		call	_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE
 11729      00
 11730 0037 4989C4   		movq	%rax, %r12
 11731 003a 488B45C8 		movq	-56(%rbp), %rax
 11732 003e 4889C7   		movq	%rax, %rdi
 11733 0041 E8000000 		call	_ZSt7forwardISt5tupleIJRKN5boost13intrusive_ptrIN3pmt8pmt_baseEEEEEEOT_RNSt16remove_reference
 11733      00
 11734 0046 4889C3   		movq	%rax, %rbx
 11735 0049 488B45D0 		movq	-48(%rbp), %rax
 11736 004d 4889C7   		movq	%rax, %rdi
 11737 0050 E8000000 		call	_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE
 11737      00
 11738 0055 4889C2   		movq	%rax, %rdx
 11739 0058 488B75E8 		movq	-24(%rbp), %rsi
 11740 005c 488B45D8 		movq	-40(%rbp), %rax
GAS LISTING /tmp/ccvUPO8Q.s 			page 508


 11741 0060 4D89E0   		movq	%r12, %r8
 11742 0063 4889D9   		movq	%rbx, %rcx
 11743 0066 4889C7   		movq	%rax, %rdi
 11744 0069 E8000000 		call	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt1
 11744      00
 561:/usr/include/c++/6/bits/stl_tree.h **** 	}
 11745              		.loc 27 561 0
 11746 006e 488B45E8 		movq	-24(%rbp), %rax
 562:/usr/include/c++/6/bits/stl_tree.h **** 
 11747              		.loc 27 562 0
 11748 0072 4883C430 		addq	$48, %rsp
 11749 0076 5B       		popq	%rbx
 11750 0077 415C     		popq	%r12
 11751 0079 5D       		popq	%rbp
 11752              		.cfi_def_cfa 7, 8
 11753 007a C3       		ret
 11754              		.cfi_endproc
 11755              	.LFE13717:
 11757              		.section	.text._ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE,"axG",@p
 11758              		.weak	_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE
 11760              	_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE:
 11761              	.LFB13728:
  76:/usr/include/c++/6/bits/move.h ****     { return static_cast<_Tp&&>(__t); }
 11762              		.loc 33 76 0
 11763              		.cfi_startproc
 11764 0000 55       		pushq	%rbp
 11765              		.cfi_def_cfa_offset 16
 11766              		.cfi_offset 6, -16
 11767 0001 4889E5   		movq	%rsp, %rbp
 11768              		.cfi_def_cfa_register 6
 11769 0004 48897DF8 		movq	%rdi, -8(%rbp)
  77:/usr/include/c++/6/bits/move.h **** 
 11770              		.loc 33 77 0
 11771 0008 488B45F8 		movq	-8(%rbp), %rax
 11772 000c 5D       		popq	%rbp
 11773              		.cfi_def_cfa 7, 8
 11774 000d C3       		ret
 11775              		.cfi_endproc
 11776              	.LFE13728:
 11778              		.section	.text._ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_Lb1EEERKS1_OT_,"axG",@progbits,_ZNSt4p
 11779              		.align 2
 11780              		.weak	_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_Lb1EEERKS1_OT_
 11782              	_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_Lb1EEERKS1_OT_:
 11783              	.LFB13729:
 11784              		.file 41 "/usr/include/c++/6/bits/stl_pair.h"
   1:/usr/include/c++/6/bits/stl_pair.h **** // Pair implementation -*- C++ -*-
   2:/usr/include/c++/6/bits/stl_pair.h **** 
   3:/usr/include/c++/6/bits/stl_pair.h **** // Copyright (C) 2001-2016 Free Software Foundation, Inc.
   4:/usr/include/c++/6/bits/stl_pair.h **** //
   5:/usr/include/c++/6/bits/stl_pair.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/6/bits/stl_pair.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/6/bits/stl_pair.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/6/bits/stl_pair.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/6/bits/stl_pair.h **** // any later version.
  10:/usr/include/c++/6/bits/stl_pair.h **** 
  11:/usr/include/c++/6/bits/stl_pair.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/6/bits/stl_pair.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
GAS LISTING /tmp/ccvUPO8Q.s 			page 509


  13:/usr/include/c++/6/bits/stl_pair.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/6/bits/stl_pair.h **** // GNU General Public License for more details.
  15:/usr/include/c++/6/bits/stl_pair.h **** 
  16:/usr/include/c++/6/bits/stl_pair.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/6/bits/stl_pair.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/6/bits/stl_pair.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/6/bits/stl_pair.h **** 
  20:/usr/include/c++/6/bits/stl_pair.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/6/bits/stl_pair.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/6/bits/stl_pair.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/6/bits/stl_pair.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/6/bits/stl_pair.h **** 
  25:/usr/include/c++/6/bits/stl_pair.h **** /*
  26:/usr/include/c++/6/bits/stl_pair.h ****  *
  27:/usr/include/c++/6/bits/stl_pair.h ****  * Copyright (c) 1994
  28:/usr/include/c++/6/bits/stl_pair.h ****  * Hewlett-Packard Company
  29:/usr/include/c++/6/bits/stl_pair.h ****  *
  30:/usr/include/c++/6/bits/stl_pair.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:/usr/include/c++/6/bits/stl_pair.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:/usr/include/c++/6/bits/stl_pair.h ****  * provided that the above copyright notice appear in all copies and
  33:/usr/include/c++/6/bits/stl_pair.h ****  * that both that copyright notice and this permission notice appear
  34:/usr/include/c++/6/bits/stl_pair.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:/usr/include/c++/6/bits/stl_pair.h ****  * representations about the suitability of this software for any
  36:/usr/include/c++/6/bits/stl_pair.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:/usr/include/c++/6/bits/stl_pair.h ****  *
  38:/usr/include/c++/6/bits/stl_pair.h ****  *
  39:/usr/include/c++/6/bits/stl_pair.h ****  * Copyright (c) 1996,1997
  40:/usr/include/c++/6/bits/stl_pair.h ****  * Silicon Graphics Computer Systems, Inc.
  41:/usr/include/c++/6/bits/stl_pair.h ****  *
  42:/usr/include/c++/6/bits/stl_pair.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:/usr/include/c++/6/bits/stl_pair.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:/usr/include/c++/6/bits/stl_pair.h ****  * provided that the above copyright notice appear in all copies and
  45:/usr/include/c++/6/bits/stl_pair.h ****  * that both that copyright notice and this permission notice appear
  46:/usr/include/c++/6/bits/stl_pair.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:/usr/include/c++/6/bits/stl_pair.h ****  * representations about the suitability of this software for any
  48:/usr/include/c++/6/bits/stl_pair.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:/usr/include/c++/6/bits/stl_pair.h ****  */
  50:/usr/include/c++/6/bits/stl_pair.h **** 
  51:/usr/include/c++/6/bits/stl_pair.h **** /** @file bits/stl_pair.h
  52:/usr/include/c++/6/bits/stl_pair.h ****  *  This is an internal header file, included by other library headers.
  53:/usr/include/c++/6/bits/stl_pair.h ****  *  Do not attempt to use it directly. @headername{utility}
  54:/usr/include/c++/6/bits/stl_pair.h ****  */
  55:/usr/include/c++/6/bits/stl_pair.h **** 
  56:/usr/include/c++/6/bits/stl_pair.h **** #ifndef _STL_PAIR_H
  57:/usr/include/c++/6/bits/stl_pair.h **** #define _STL_PAIR_H 1
  58:/usr/include/c++/6/bits/stl_pair.h **** 
  59:/usr/include/c++/6/bits/stl_pair.h **** #include <bits/move.h> // for std::move / std::forward, and std::swap
  60:/usr/include/c++/6/bits/stl_pair.h **** 
  61:/usr/include/c++/6/bits/stl_pair.h **** #if __cplusplus >= 201103L
  62:/usr/include/c++/6/bits/stl_pair.h **** #include <type_traits> // for std::__decay_and_strip too
  63:/usr/include/c++/6/bits/stl_pair.h **** #endif
  64:/usr/include/c++/6/bits/stl_pair.h **** 
  65:/usr/include/c++/6/bits/stl_pair.h **** namespace std _GLIBCXX_VISIBILITY(default)
  66:/usr/include/c++/6/bits/stl_pair.h **** {
  67:/usr/include/c++/6/bits/stl_pair.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  68:/usr/include/c++/6/bits/stl_pair.h **** 
  69:/usr/include/c++/6/bits/stl_pair.h ****   /**
GAS LISTING /tmp/ccvUPO8Q.s 			page 510


  70:/usr/include/c++/6/bits/stl_pair.h ****    *  @addtogroup utilities
  71:/usr/include/c++/6/bits/stl_pair.h ****    *  @{
  72:/usr/include/c++/6/bits/stl_pair.h ****    */
  73:/usr/include/c++/6/bits/stl_pair.h **** 
  74:/usr/include/c++/6/bits/stl_pair.h **** #if __cplusplus >= 201103L
  75:/usr/include/c++/6/bits/stl_pair.h ****   /// piecewise_construct_t
  76:/usr/include/c++/6/bits/stl_pair.h ****   struct piecewise_construct_t { explicit piecewise_construct_t() = default; };
  77:/usr/include/c++/6/bits/stl_pair.h **** 
  78:/usr/include/c++/6/bits/stl_pair.h ****   /// piecewise_construct
  79:/usr/include/c++/6/bits/stl_pair.h ****   constexpr piecewise_construct_t piecewise_construct = piecewise_construct_t();
  80:/usr/include/c++/6/bits/stl_pair.h **** 
  81:/usr/include/c++/6/bits/stl_pair.h ****   // Forward declarations.
  82:/usr/include/c++/6/bits/stl_pair.h ****   template<typename...>
  83:/usr/include/c++/6/bits/stl_pair.h ****     class tuple;
  84:/usr/include/c++/6/bits/stl_pair.h **** 
  85:/usr/include/c++/6/bits/stl_pair.h ****   template<std::size_t...>
  86:/usr/include/c++/6/bits/stl_pair.h ****     struct _Index_tuple;
  87:/usr/include/c++/6/bits/stl_pair.h **** 
  88:/usr/include/c++/6/bits/stl_pair.h ****   // Concept utility functions, reused in conditionally-explicit
  89:/usr/include/c++/6/bits/stl_pair.h ****   // constructors.
  90:/usr/include/c++/6/bits/stl_pair.h ****   // See PR 70437, don't look at is_constructible or
  91:/usr/include/c++/6/bits/stl_pair.h ****   // is_convertible if the types are the same to
  92:/usr/include/c++/6/bits/stl_pair.h ****   // avoid querying those properties for incomplete types.
  93:/usr/include/c++/6/bits/stl_pair.h ****   template <bool, typename _T1, typename _T2>
  94:/usr/include/c++/6/bits/stl_pair.h ****     struct _PCC
  95:/usr/include/c++/6/bits/stl_pair.h ****     {
  96:/usr/include/c++/6/bits/stl_pair.h ****       template <typename _U1, typename _U2>
  97:/usr/include/c++/6/bits/stl_pair.h ****       static constexpr bool _ConstructiblePair()
  98:/usr/include/c++/6/bits/stl_pair.h ****       {
  99:/usr/include/c++/6/bits/stl_pair.h **** 	return __and_<is_constructible<_T1, const _U1&>,
 100:/usr/include/c++/6/bits/stl_pair.h **** 		      is_constructible<_T2, const _U2&>>::value;
 101:/usr/include/c++/6/bits/stl_pair.h ****       }
 102:/usr/include/c++/6/bits/stl_pair.h **** 
 103:/usr/include/c++/6/bits/stl_pair.h ****       template <typename _U1, typename _U2>
 104:/usr/include/c++/6/bits/stl_pair.h ****       static constexpr bool _ImplicitlyConvertiblePair()
 105:/usr/include/c++/6/bits/stl_pair.h ****       {
 106:/usr/include/c++/6/bits/stl_pair.h **** 	return __and_<is_convertible<const _U1&, _T1>,
 107:/usr/include/c++/6/bits/stl_pair.h **** 		      is_convertible<const _U2&, _T2>>::value;
 108:/usr/include/c++/6/bits/stl_pair.h ****       }
 109:/usr/include/c++/6/bits/stl_pair.h **** 
 110:/usr/include/c++/6/bits/stl_pair.h ****       template <typename _U1, typename _U2>
 111:/usr/include/c++/6/bits/stl_pair.h ****       static constexpr bool _MoveConstructiblePair()
 112:/usr/include/c++/6/bits/stl_pair.h ****       {
 113:/usr/include/c++/6/bits/stl_pair.h **** 	return __and_<is_constructible<_T1, _U1&&>,
 114:/usr/include/c++/6/bits/stl_pair.h **** 		      is_constructible<_T2, _U2&&>>::value;
 115:/usr/include/c++/6/bits/stl_pair.h ****       }
 116:/usr/include/c++/6/bits/stl_pair.h **** 
 117:/usr/include/c++/6/bits/stl_pair.h ****       template <typename _U1, typename _U2>
 118:/usr/include/c++/6/bits/stl_pair.h ****       static constexpr bool _ImplicitlyMoveConvertiblePair()
 119:/usr/include/c++/6/bits/stl_pair.h ****       {
 120:/usr/include/c++/6/bits/stl_pair.h **** 	return __and_<is_convertible<_U1&&, _T1>,
 121:/usr/include/c++/6/bits/stl_pair.h **** 		      is_convertible<_U2&&, _T2>>::value;
 122:/usr/include/c++/6/bits/stl_pair.h ****       }
 123:/usr/include/c++/6/bits/stl_pair.h **** 
 124:/usr/include/c++/6/bits/stl_pair.h ****       template <bool __implicit, typename _U1, typename _U2>
 125:/usr/include/c++/6/bits/stl_pair.h ****       static constexpr bool _CopyMovePair()
 126:/usr/include/c++/6/bits/stl_pair.h ****       {
GAS LISTING /tmp/ccvUPO8Q.s 			page 511


 127:/usr/include/c++/6/bits/stl_pair.h **** 	using __do_converts = __and_<is_convertible<const _U1&, _T1>,
 128:/usr/include/c++/6/bits/stl_pair.h **** 				  is_convertible<_U2&&, _T2>>;
 129:/usr/include/c++/6/bits/stl_pair.h **** 	using __converts = typename conditional<__implicit,
 130:/usr/include/c++/6/bits/stl_pair.h **** 				       __do_converts,
 131:/usr/include/c++/6/bits/stl_pair.h **** 				       __not_<__do_converts>>::type;
 132:/usr/include/c++/6/bits/stl_pair.h **** 	return __and_<is_constructible<_T1, const _U1&>,
 133:/usr/include/c++/6/bits/stl_pair.h **** 		      is_constructible<_T2, _U2&&>,
 134:/usr/include/c++/6/bits/stl_pair.h **** 		      __converts
 135:/usr/include/c++/6/bits/stl_pair.h **** 		      >::value;
 136:/usr/include/c++/6/bits/stl_pair.h ****       }
 137:/usr/include/c++/6/bits/stl_pair.h **** 
 138:/usr/include/c++/6/bits/stl_pair.h ****       template <bool __implicit, typename _U1, typename _U2>
 139:/usr/include/c++/6/bits/stl_pair.h ****       static constexpr bool _MoveCopyPair()
 140:/usr/include/c++/6/bits/stl_pair.h ****       {
 141:/usr/include/c++/6/bits/stl_pair.h **** 	using __do_converts = __and_<is_convertible<_U1&&, _T1>,
 142:/usr/include/c++/6/bits/stl_pair.h **** 				  is_convertible<const _U2&, _T2>>;
 143:/usr/include/c++/6/bits/stl_pair.h **** 	using __converts = typename conditional<__implicit,
 144:/usr/include/c++/6/bits/stl_pair.h **** 				       __do_converts,
 145:/usr/include/c++/6/bits/stl_pair.h **** 				       __not_<__do_converts>>::type;
 146:/usr/include/c++/6/bits/stl_pair.h **** 	return __and_<is_constructible<_T1, _U1&&>,
 147:/usr/include/c++/6/bits/stl_pair.h **** 		      is_constructible<_T2, const _U2&&>,
 148:/usr/include/c++/6/bits/stl_pair.h **** 		      __converts
 149:/usr/include/c++/6/bits/stl_pair.h **** 		      >::value;
 150:/usr/include/c++/6/bits/stl_pair.h ****       }
 151:/usr/include/c++/6/bits/stl_pair.h ****   };
 152:/usr/include/c++/6/bits/stl_pair.h **** 
 153:/usr/include/c++/6/bits/stl_pair.h ****   template <typename _T1, typename _T2>
 154:/usr/include/c++/6/bits/stl_pair.h ****     struct _PCC<false, _T1, _T2>
 155:/usr/include/c++/6/bits/stl_pair.h ****     {
 156:/usr/include/c++/6/bits/stl_pair.h ****       template <typename _U1, typename _U2>
 157:/usr/include/c++/6/bits/stl_pair.h ****       static constexpr bool _ConstructiblePair()
 158:/usr/include/c++/6/bits/stl_pair.h ****       {
 159:/usr/include/c++/6/bits/stl_pair.h **** 	return false;
 160:/usr/include/c++/6/bits/stl_pair.h ****       }
 161:/usr/include/c++/6/bits/stl_pair.h **** 
 162:/usr/include/c++/6/bits/stl_pair.h ****       template <typename _U1, typename _U2>
 163:/usr/include/c++/6/bits/stl_pair.h ****       static constexpr bool _ImplicitlyConvertiblePair()
 164:/usr/include/c++/6/bits/stl_pair.h ****       {
 165:/usr/include/c++/6/bits/stl_pair.h **** 	return false;
 166:/usr/include/c++/6/bits/stl_pair.h ****       }
 167:/usr/include/c++/6/bits/stl_pair.h **** 
 168:/usr/include/c++/6/bits/stl_pair.h ****       template <typename _U1, typename _U2>
 169:/usr/include/c++/6/bits/stl_pair.h ****       static constexpr bool _MoveConstructiblePair()
 170:/usr/include/c++/6/bits/stl_pair.h ****       {
 171:/usr/include/c++/6/bits/stl_pair.h **** 	return false;
 172:/usr/include/c++/6/bits/stl_pair.h ****       }
 173:/usr/include/c++/6/bits/stl_pair.h **** 
 174:/usr/include/c++/6/bits/stl_pair.h ****       template <typename _U1, typename _U2>
 175:/usr/include/c++/6/bits/stl_pair.h ****       static constexpr bool _ImplicitlyMoveConvertiblePair()
 176:/usr/include/c++/6/bits/stl_pair.h ****       {
 177:/usr/include/c++/6/bits/stl_pair.h **** 	return false;
 178:/usr/include/c++/6/bits/stl_pair.h ****       }
 179:/usr/include/c++/6/bits/stl_pair.h ****   };
 180:/usr/include/c++/6/bits/stl_pair.h **** 
 181:/usr/include/c++/6/bits/stl_pair.h ****   struct __wrap_nonesuch : std::__nonesuch {
 182:/usr/include/c++/6/bits/stl_pair.h ****     explicit __wrap_nonesuch(const __nonesuch&) = delete;
 183:/usr/include/c++/6/bits/stl_pair.h ****   };
GAS LISTING /tmp/ccvUPO8Q.s 			page 512


 184:/usr/include/c++/6/bits/stl_pair.h ****   
 185:/usr/include/c++/6/bits/stl_pair.h **** #endif
 186:/usr/include/c++/6/bits/stl_pair.h **** 
 187:/usr/include/c++/6/bits/stl_pair.h ****  /**
 188:/usr/include/c++/6/bits/stl_pair.h ****    *  @brief Struct holding two objects of arbitrary type.
 189:/usr/include/c++/6/bits/stl_pair.h ****    *
 190:/usr/include/c++/6/bits/stl_pair.h ****    *  @tparam _T1  Type of first object.
 191:/usr/include/c++/6/bits/stl_pair.h ****    *  @tparam _T2  Type of second object.
 192:/usr/include/c++/6/bits/stl_pair.h ****    */
 193:/usr/include/c++/6/bits/stl_pair.h ****   template<typename _T1, typename _T2>
 194:/usr/include/c++/6/bits/stl_pair.h ****     struct pair
 195:/usr/include/c++/6/bits/stl_pair.h ****     {
 196:/usr/include/c++/6/bits/stl_pair.h ****       typedef _T1 first_type;    /// @c first_type is the first bound type
 197:/usr/include/c++/6/bits/stl_pair.h ****       typedef _T2 second_type;   /// @c second_type is the second bound type
 198:/usr/include/c++/6/bits/stl_pair.h **** 
 199:/usr/include/c++/6/bits/stl_pair.h ****       _T1 first;                 /// @c first is a copy of the first object
 200:/usr/include/c++/6/bits/stl_pair.h ****       _T2 second;                /// @c second is a copy of the second object
 201:/usr/include/c++/6/bits/stl_pair.h **** 
 202:/usr/include/c++/6/bits/stl_pair.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 203:/usr/include/c++/6/bits/stl_pair.h ****       // 265.  std::pair::pair() effects overly restrictive
 204:/usr/include/c++/6/bits/stl_pair.h ****       /** The default constructor creates @c first and @c second using their
 205:/usr/include/c++/6/bits/stl_pair.h ****        *  respective default constructors.  */
 206:/usr/include/c++/6/bits/stl_pair.h **** #if __cplusplus >= 201103L
 207:/usr/include/c++/6/bits/stl_pair.h ****       template <typename _U1 = _T1,
 208:/usr/include/c++/6/bits/stl_pair.h ****                 typename _U2 = _T2,
 209:/usr/include/c++/6/bits/stl_pair.h ****                 typename enable_if<__and_<
 210:/usr/include/c++/6/bits/stl_pair.h ****                                      __is_implicitly_default_constructible<_U1>,
 211:/usr/include/c++/6/bits/stl_pair.h ****                                      __is_implicitly_default_constructible<_U2>>
 212:/usr/include/c++/6/bits/stl_pair.h ****                                    ::value, bool>::type = true>
 213:/usr/include/c++/6/bits/stl_pair.h **** #endif
 214:/usr/include/c++/6/bits/stl_pair.h ****       _GLIBCXX_CONSTEXPR pair()
 215:/usr/include/c++/6/bits/stl_pair.h ****       : first(), second() { }
 216:/usr/include/c++/6/bits/stl_pair.h **** 
 217:/usr/include/c++/6/bits/stl_pair.h **** #if __cplusplus >= 201103L
 218:/usr/include/c++/6/bits/stl_pair.h ****       template <typename _U1 = _T1,
 219:/usr/include/c++/6/bits/stl_pair.h ****                 typename _U2 = _T2,
 220:/usr/include/c++/6/bits/stl_pair.h ****                 typename enable_if<__and_<
 221:/usr/include/c++/6/bits/stl_pair.h ****                        is_default_constructible<_U1>,
 222:/usr/include/c++/6/bits/stl_pair.h ****                        is_default_constructible<_U2>,
 223:/usr/include/c++/6/bits/stl_pair.h ****                        __not_<
 224:/usr/include/c++/6/bits/stl_pair.h ****                          __and_<__is_implicitly_default_constructible<_U1>,
 225:/usr/include/c++/6/bits/stl_pair.h ****                                 __is_implicitly_default_constructible<_U2>>>>
 226:/usr/include/c++/6/bits/stl_pair.h ****                                    ::value, bool>::type = false>
 227:/usr/include/c++/6/bits/stl_pair.h ****       explicit constexpr pair()
 228:/usr/include/c++/6/bits/stl_pair.h ****       : first(), second() { }
 229:/usr/include/c++/6/bits/stl_pair.h **** #endif
 230:/usr/include/c++/6/bits/stl_pair.h **** 
 231:/usr/include/c++/6/bits/stl_pair.h ****       /** Two objects may be passed to a @c pair constructor to be copied.  */
 232:/usr/include/c++/6/bits/stl_pair.h **** #if __cplusplus < 201103L
 233:/usr/include/c++/6/bits/stl_pair.h ****       pair(const _T1& __a, const _T2& __b)
 234:/usr/include/c++/6/bits/stl_pair.h ****       : first(__a), second(__b) { }
 235:/usr/include/c++/6/bits/stl_pair.h **** #else
 236:/usr/include/c++/6/bits/stl_pair.h ****       // Shortcut for constraining the templates that don't take pairs.
 237:/usr/include/c++/6/bits/stl_pair.h ****       using _PCCP = _PCC<true, _T1, _T2>;
 238:/usr/include/c++/6/bits/stl_pair.h **** 
 239:/usr/include/c++/6/bits/stl_pair.h ****       template<typename _U1 = _T1, typename _U2=_T2, typename
 240:/usr/include/c++/6/bits/stl_pair.h **** 	       enable_if<_PCCP::template
GAS LISTING /tmp/ccvUPO8Q.s 			page 513


 241:/usr/include/c++/6/bits/stl_pair.h **** 			   _ConstructiblePair<_U1, _U2>()
 242:/usr/include/c++/6/bits/stl_pair.h **** 	                 && _PCCP::template
 243:/usr/include/c++/6/bits/stl_pair.h **** 			   _ImplicitlyConvertiblePair<_U1, _U2>(),
 244:/usr/include/c++/6/bits/stl_pair.h ****                          bool>::type=true>
 245:/usr/include/c++/6/bits/stl_pair.h ****       constexpr pair(const _T1& __a, const _T2& __b)
 246:/usr/include/c++/6/bits/stl_pair.h ****       : first(__a), second(__b) { }
 247:/usr/include/c++/6/bits/stl_pair.h **** 
 248:/usr/include/c++/6/bits/stl_pair.h ****        template<typename _U1 = _T1, typename _U2=_T2, typename
 249:/usr/include/c++/6/bits/stl_pair.h **** 		enable_if<_PCCP::template
 250:/usr/include/c++/6/bits/stl_pair.h **** 			    _ConstructiblePair<_U1, _U2>()
 251:/usr/include/c++/6/bits/stl_pair.h **** 	                  && !_PCCP::template
 252:/usr/include/c++/6/bits/stl_pair.h **** 			    _ImplicitlyConvertiblePair<_U1, _U2>(),
 253:/usr/include/c++/6/bits/stl_pair.h ****                          bool>::type=false>
 254:/usr/include/c++/6/bits/stl_pair.h ****       explicit constexpr pair(const _T1& __a, const _T2& __b)
 255:/usr/include/c++/6/bits/stl_pair.h ****       : first(__a), second(__b) { }
 256:/usr/include/c++/6/bits/stl_pair.h **** #endif
 257:/usr/include/c++/6/bits/stl_pair.h **** 
 258:/usr/include/c++/6/bits/stl_pair.h ****       /** There is also a templated copy ctor for the @c pair class itself.  */
 259:/usr/include/c++/6/bits/stl_pair.h **** #if __cplusplus < 201103L
 260:/usr/include/c++/6/bits/stl_pair.h ****       template<typename _U1, typename _U2>
 261:/usr/include/c++/6/bits/stl_pair.h **** 	pair(const pair<_U1, _U2>& __p)
 262:/usr/include/c++/6/bits/stl_pair.h **** 	: first(__p.first), second(__p.second) { }
 263:/usr/include/c++/6/bits/stl_pair.h **** #else
 264:/usr/include/c++/6/bits/stl_pair.h ****       // Shortcut for constraining the templates that take pairs.
 265:/usr/include/c++/6/bits/stl_pair.h ****       template <typename _U1, typename _U2>
 266:/usr/include/c++/6/bits/stl_pair.h ****         using _PCCFP = _PCC<!is_same<_T1, _U1>::value
 267:/usr/include/c++/6/bits/stl_pair.h **** 			    || !is_same<_T2, _U2>::value,
 268:/usr/include/c++/6/bits/stl_pair.h **** 			    _T1, _T2>;
 269:/usr/include/c++/6/bits/stl_pair.h **** 
 270:/usr/include/c++/6/bits/stl_pair.h ****       template<typename _U1, typename _U2, typename
 271:/usr/include/c++/6/bits/stl_pair.h **** 	       enable_if<_PCCFP<_U1, _U2>::template
 272:/usr/include/c++/6/bits/stl_pair.h **** 			   _ConstructiblePair<_U1, _U2>()
 273:/usr/include/c++/6/bits/stl_pair.h **** 	                 && _PCCFP<_U1, _U2>::template
 274:/usr/include/c++/6/bits/stl_pair.h **** 			   _ImplicitlyConvertiblePair<_U1, _U2>(),
 275:/usr/include/c++/6/bits/stl_pair.h **** 			  bool>::type=true>
 276:/usr/include/c++/6/bits/stl_pair.h ****         constexpr pair(const pair<_U1, _U2>& __p)
 277:/usr/include/c++/6/bits/stl_pair.h ****         : first(__p.first), second(__p.second) { }
 278:/usr/include/c++/6/bits/stl_pair.h **** 
 279:/usr/include/c++/6/bits/stl_pair.h ****       template<typename _U1, typename _U2, typename
 280:/usr/include/c++/6/bits/stl_pair.h **** 	       enable_if<_PCCFP<_U1, _U2>::template
 281:/usr/include/c++/6/bits/stl_pair.h **** 			   _ConstructiblePair<_U1, _U2>()
 282:/usr/include/c++/6/bits/stl_pair.h **** 			 && !_PCCFP<_U1, _U2>::template
 283:/usr/include/c++/6/bits/stl_pair.h **** 			   _ImplicitlyConvertiblePair<_U1, _U2>(),
 284:/usr/include/c++/6/bits/stl_pair.h ****                          bool>::type=false>
 285:/usr/include/c++/6/bits/stl_pair.h **** 	explicit constexpr pair(const pair<_U1, _U2>& __p)
 286:/usr/include/c++/6/bits/stl_pair.h **** 	: first(__p.first), second(__p.second) { }
 287:/usr/include/c++/6/bits/stl_pair.h **** 
 288:/usr/include/c++/6/bits/stl_pair.h ****       constexpr pair(const pair&) = default;
 289:/usr/include/c++/6/bits/stl_pair.h ****       constexpr pair(pair&&) = default;
 290:/usr/include/c++/6/bits/stl_pair.h **** 
 291:/usr/include/c++/6/bits/stl_pair.h ****       // DR 811.
 292:/usr/include/c++/6/bits/stl_pair.h ****       template<typename _U1, typename
 293:/usr/include/c++/6/bits/stl_pair.h **** 	       enable_if<_PCCP::template
 294:/usr/include/c++/6/bits/stl_pair.h **** 			   _MoveCopyPair<true, _U1, _T2>(),
 295:/usr/include/c++/6/bits/stl_pair.h ****                          bool>::type=true>
 296:/usr/include/c++/6/bits/stl_pair.h ****        constexpr pair(_U1&& __x, const _T2& __y)
 297:/usr/include/c++/6/bits/stl_pair.h ****        : first(std::forward<_U1>(__x)), second(__y) { }
GAS LISTING /tmp/ccvUPO8Q.s 			page 514


 298:/usr/include/c++/6/bits/stl_pair.h **** 
 299:/usr/include/c++/6/bits/stl_pair.h ****       template<typename _U1, typename
 300:/usr/include/c++/6/bits/stl_pair.h **** 	       enable_if<_PCCP::template
 301:/usr/include/c++/6/bits/stl_pair.h **** 			   _MoveCopyPair<false, _U1, _T2>(),
 302:/usr/include/c++/6/bits/stl_pair.h ****                          bool>::type=false>
 303:/usr/include/c++/6/bits/stl_pair.h ****        explicit constexpr pair(_U1&& __x, const _T2& __y)
 304:/usr/include/c++/6/bits/stl_pair.h ****        : first(std::forward<_U1>(__x)), second(__y) { }
 305:/usr/include/c++/6/bits/stl_pair.h **** 
 306:/usr/include/c++/6/bits/stl_pair.h ****       template<typename _U2, typename
 307:/usr/include/c++/6/bits/stl_pair.h **** 	       enable_if<_PCCP::template
 308:/usr/include/c++/6/bits/stl_pair.h **** 			   _CopyMovePair<true, _T1, _U2>(),
 309:/usr/include/c++/6/bits/stl_pair.h ****                          bool>::type=true>
 310:/usr/include/c++/6/bits/stl_pair.h ****        constexpr pair(const _T1& __x, _U2&& __y)
 11785              		.loc 41 310 0
 11786              		.cfi_startproc
 11787 0000 55       		pushq	%rbp
 11788              		.cfi_def_cfa_offset 16
 11789              		.cfi_offset 6, -16
 11790 0001 4889E5   		movq	%rsp, %rbp
 11791              		.cfi_def_cfa_register 6
 11792 0004 4883EC20 		subq	$32, %rsp
 11793 0008 48897DF8 		movq	%rdi, -8(%rbp)
 11794 000c 488975F0 		movq	%rsi, -16(%rbp)
 11795 0010 488955E8 		movq	%rdx, -24(%rbp)
 11796              	.LBB111:
 311:/usr/include/c++/6/bits/stl_pair.h ****        : first(__x), second(std::forward<_U2>(__y)) { }
 11797              		.loc 41 311 0
 11798 0014 488B45F0 		movq	-16(%rbp), %rax
 11799 0018 488B10   		movq	(%rax), %rdx
 11800 001b 488B45F8 		movq	-8(%rbp), %rax
 11801 001f 488910   		movq	%rdx, (%rax)
 11802 0022 488B45E8 		movq	-24(%rbp), %rax
 11803 0026 4889C7   		movq	%rax, %rdi
 11804 0029 E8000000 		call	_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE
 11804      00
 11805 002e 488B10   		movq	(%rax), %rdx
 11806 0031 488B45F8 		movq	-8(%rbp), %rax
 11807 0035 48895008 		movq	%rdx, 8(%rax)
 11808              	.LBE111:
 11809 0039 90       		nop
 11810 003a C9       		leave
 11811              		.cfi_def_cfa 7, 8
 11812 003b C3       		ret
 11813              		.cfi_endproc
 11814              	.LFE13729:
 11816              		.weak	_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_Lb1EEERKS1_OT_
 11817              		.set	_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_Lb1EEERKS1_OT_,_ZNSt4pairIPSt18_Rb_tree_node_bas
 11818              		.section	.text._ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_S4_Lb1EEEOT_OT0_,"axG",@progbits,_ZNSt
 11819              		.align 2
 11820              		.weak	_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_S4_Lb1EEEOT_OT0_
 11822              	_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_S4_Lb1EEEOT_OT0_:
 11823              	.LFB13736:
 312:/usr/include/c++/6/bits/stl_pair.h **** 
 313:/usr/include/c++/6/bits/stl_pair.h ****       template<typename _U2, typename
 314:/usr/include/c++/6/bits/stl_pair.h **** 	       enable_if<_PCCP::template
 315:/usr/include/c++/6/bits/stl_pair.h **** 			   _CopyMovePair<false, _T1, _U2>(),
 316:/usr/include/c++/6/bits/stl_pair.h ****                          bool>::type=false>
GAS LISTING /tmp/ccvUPO8Q.s 			page 515


 317:/usr/include/c++/6/bits/stl_pair.h ****        explicit pair(const _T1& __x, _U2&& __y)
 318:/usr/include/c++/6/bits/stl_pair.h ****        : first(__x), second(std::forward<_U2>(__y)) { }
 319:/usr/include/c++/6/bits/stl_pair.h **** 
 320:/usr/include/c++/6/bits/stl_pair.h ****       template<typename _U1, typename _U2, typename
 321:/usr/include/c++/6/bits/stl_pair.h **** 	       enable_if<_PCCP::template
 322:/usr/include/c++/6/bits/stl_pair.h **** 			   _MoveConstructiblePair<_U1, _U2>()
 323:/usr/include/c++/6/bits/stl_pair.h **** 			  && _PCCP::template
 324:/usr/include/c++/6/bits/stl_pair.h **** 			   _ImplicitlyMoveConvertiblePair<_U1, _U2>(),
 325:/usr/include/c++/6/bits/stl_pair.h ****                          bool>::type=true>
 326:/usr/include/c++/6/bits/stl_pair.h **** 	constexpr pair(_U1&& __x, _U2&& __y)
 11824              		.loc 41 326 0
 11825              		.cfi_startproc
 11826 0000 55       		pushq	%rbp
 11827              		.cfi_def_cfa_offset 16
 11828              		.cfi_offset 6, -16
 11829 0001 4889E5   		movq	%rsp, %rbp
 11830              		.cfi_def_cfa_register 6
 11831 0004 4883EC20 		subq	$32, %rsp
 11832 0008 48897DF8 		movq	%rdi, -8(%rbp)
 11833 000c 488975F0 		movq	%rsi, -16(%rbp)
 11834 0010 488955E8 		movq	%rdx, -24(%rbp)
 11835              	.LBB112:
 327:/usr/include/c++/6/bits/stl_pair.h **** 	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
 11836              		.loc 41 327 0
 11837 0014 488B45F0 		movq	-16(%rbp), %rax
 11838 0018 4889C7   		movq	%rax, %rdi
 11839 001b E8000000 		call	_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE
 11839      00
 11840 0020 488B10   		movq	(%rax), %rdx
 11841 0023 488B45F8 		movq	-8(%rbp), %rax
 11842 0027 488910   		movq	%rdx, (%rax)
 11843 002a 488B45E8 		movq	-24(%rbp), %rax
 11844 002e 4889C7   		movq	%rax, %rdi
 11845 0031 E8000000 		call	_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE
 11845      00
 11846 0036 488B10   		movq	(%rax), %rdx
 11847 0039 488B45F8 		movq	-8(%rbp), %rax
 11848 003d 48895008 		movq	%rdx, 8(%rax)
 11849              	.LBE112:
 11850 0041 90       		nop
 11851 0042 C9       		leave
 11852              		.cfi_def_cfa 7, 8
 11853 0043 C3       		ret
 11854              		.cfi_endproc
 11855              	.LFE13736:
 11857              		.weak	_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_S4_Lb1EEEOT_OT0_
 11858              		.set	_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_S4_Lb1EEEOT_OT0_,_ZNSt4pairIPSt18_Rb_tree_node_b
 11859              		.section	.text._ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_Lb1EEEOT_RKS1_,"axG",@progbits,_ZNSt4p
 11860              		.align 2
 11861              		.weak	_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_Lb1EEEOT_RKS1_
 11863              	_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_Lb1EEEOT_RKS1_:
 11864              	.LFB13743:
 296:/usr/include/c++/6/bits/stl_pair.h ****        : first(std::forward<_U1>(__x)), second(__y) { }
 11865              		.loc 41 296 0
 11866              		.cfi_startproc
 11867 0000 55       		pushq	%rbp
 11868              		.cfi_def_cfa_offset 16
GAS LISTING /tmp/ccvUPO8Q.s 			page 516


 11869              		.cfi_offset 6, -16
 11870 0001 4889E5   		movq	%rsp, %rbp
 11871              		.cfi_def_cfa_register 6
 11872 0004 4883EC20 		subq	$32, %rsp
 11873 0008 48897DF8 		movq	%rdi, -8(%rbp)
 11874 000c 488975F0 		movq	%rsi, -16(%rbp)
 11875 0010 488955E8 		movq	%rdx, -24(%rbp)
 11876              	.LBB113:
 297:/usr/include/c++/6/bits/stl_pair.h **** 
 11877              		.loc 41 297 0
 11878 0014 488B45F0 		movq	-16(%rbp), %rax
 11879 0018 4889C7   		movq	%rax, %rdi
 11880 001b E8000000 		call	_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE
 11880      00
 11881 0020 488B10   		movq	(%rax), %rdx
 11882 0023 488B45F8 		movq	-8(%rbp), %rax
 11883 0027 488910   		movq	%rdx, (%rax)
 11884 002a 488B45E8 		movq	-24(%rbp), %rax
 11885 002e 488B10   		movq	(%rax), %rdx
 11886 0031 488B45F8 		movq	-8(%rbp), %rax
 11887 0035 48895008 		movq	%rdx, 8(%rax)
 11888              	.LBE113:
 11889 0039 90       		nop
 11890 003a C9       		leave
 11891              		.cfi_def_cfa 7, 8
 11892 003b C3       		ret
 11893              		.cfi_endproc
 11894              	.LFE13743:
 11896              		.weak	_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_Lb1EEEOT_RKS1_
 11897              		.set	_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_Lb1EEEOT_RKS1_,_ZNSt4pairIPSt18_Rb_tree_node_bas
 11898              		.section	.text._ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFv
 11899              		.align 2
 11900              		.weak	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt
 11902              	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt10_Sele
 11903              	.LFB13718:
1928:/usr/include/c++/6/bits/stl_tree.h ****     _M_get_insert_hint_unique_pos(const_iterator __position,
 11904              		.loc 27 1928 0
 11905              		.cfi_startproc
 11906 0000 55       		pushq	%rbp
 11907              		.cfi_def_cfa_offset 16
 11908              		.cfi_offset 6, -16
 11909 0001 4889E5   		movq	%rsp, %rbp
 11910              		.cfi_def_cfa_register 6
 11911 0004 53       		pushq	%rbx
 11912 0005 4881EC18 		subq	$280, %rsp
 11912      010000
 11913              		.cfi_offset 3, -24
 11914 000c 4889BDF8 		movq	%rdi, -264(%rbp)
 11914      FEFFFF
 11915 0013 4889B5F0 		movq	%rsi, -272(%rbp)
 11915      FEFFFF
 11916 001a 488995E8 		movq	%rdx, -280(%rbp)
 11916      FEFFFF
1932:/usr/include/c++/6/bits/stl_tree.h ****       typedef pair<_Base_ptr, _Base_ptr> _Res;
 11917              		.loc 27 1932 0
 11918 0021 488D85F0 		leaq	-272(%rbp), %rax
 11918      FEFFFF
GAS LISTING /tmp/ccvUPO8Q.s 			page 517


 11919 0028 4889C7   		movq	%rax, %rdi
 11920 002b E8000000 		call	_ZNKSt23_Rb_tree_const_iteratorISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS1_8functio
 11920      00
 11921 0030 48898518 		movq	%rax, -232(%rbp)
 11921      FFFFFF
 11922              	.LBB114:
1936:/usr/include/c++/6/bits/stl_tree.h **** 	{
 11923              		.loc 27 1936 0
 11924 0037 488B9D18 		movq	-232(%rbp), %rbx
 11924      FFFFFF
 11925 003e 488B85F8 		movq	-264(%rbp), %rax
 11925      FEFFFF
 11926 0045 4889C7   		movq	%rax, %rdi
 11927 0048 E8000000 		call	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt1
 11927      00
 11928 004d 4839C3   		cmpq	%rax, %rbx
 11929 0050 0F94C0   		sete	%al
 11930 0053 84C0     		testb	%al, %al
 11931 0055 0F84C500 		je	.L579
 11931      0000
1938:/usr/include/c++/6/bits/stl_tree.h **** 	      && _M_impl._M_key_compare(_S_key(_M_rightmost()), __k))
 11932              		.loc 27 1938 0
 11933 005b 488B85F8 		movq	-264(%rbp), %rax
 11933      FEFFFF
 11934 0062 4889C7   		movq	%rax, %rdi
 11935 0065 E8000000 		call	_ZNKSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt
 11935      00
1939:/usr/include/c++/6/bits/stl_tree.h **** 	    return _Res(0, _M_rightmost());
 11936              		.loc 27 1939 0
 11937 006a 4885C0   		testq	%rax, %rax
 11938 006d 7441     		je	.L580
1939:/usr/include/c++/6/bits/stl_tree.h **** 	    return _Res(0, _M_rightmost());
 11939              		.loc 27 1939 0 is_stmt 0 discriminator 1
 11940 006f 488B85F8 		movq	-264(%rbp), %rax
 11940      FEFFFF
 11941 0076 4889C7   		movq	%rax, %rdi
 11942 0079 E8000000 		call	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt1
 11942      00
 11943 007e 488B00   		movq	(%rax), %rax
 11944 0081 4889C7   		movq	%rax, %rdi
 11945 0084 E8000000 		call	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt1
 11945      00
 11946 0089 4889C1   		movq	%rax, %rcx
 11947 008c 488B85F8 		movq	-264(%rbp), %rax
 11947      FEFFFF
 11948 0093 488B95E8 		movq	-280(%rbp), %rdx
 11948      FEFFFF
 11949 009a 4889CE   		movq	%rcx, %rsi
 11950 009d 4889C7   		movq	%rax, %rdi
 11951 00a0 E8000000 		call	_ZNK3pmt10comparatorclERKN5boost13intrusive_ptrINS_8pmt_baseEEES6_
 11951      00
 11952 00a5 84C0     		testb	%al, %al
 11953 00a7 7407     		je	.L580
1939:/usr/include/c++/6/bits/stl_tree.h **** 	    return _Res(0, _M_rightmost());
 11954              		.loc 27 1939 0 discriminator 5
 11955 00a9 B8010000 		movl	$1, %eax
 11955      00
GAS LISTING /tmp/ccvUPO8Q.s 			page 518


 11956 00ae EB05     		jmp	.L581
 11957              	.L580:
1939:/usr/include/c++/6/bits/stl_tree.h **** 	    return _Res(0, _M_rightmost());
 11958              		.loc 27 1939 0 discriminator 6
 11959 00b0 B8000000 		movl	$0, %eax
 11959      00
 11960              	.L581:
1938:/usr/include/c++/6/bits/stl_tree.h **** 	      && _M_impl._M_key_compare(_S_key(_M_rightmost()), __k))
 11961              		.loc 27 1938 0 is_stmt 1
 11962 00b5 84C0     		testb	%al, %al
 11963 00b7 7449     		je	.L582
1940:/usr/include/c++/6/bits/stl_tree.h **** 	  else
 11964              		.loc 27 1940 0
 11965 00b9 488B85F8 		movq	-264(%rbp), %rax
 11965      FEFFFF
 11966 00c0 4889C7   		movq	%rax, %rdi
 11967 00c3 E8000000 		call	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt1
 11967      00
 11968 00c8 4889C2   		movq	%rax, %rdx
 11969 00cb 48C78538 		movq	$0, -200(%rbp)
 11969      FFFFFF00 
 11969      000000
 11970 00d6 488D8D38 		leaq	-200(%rbp), %rcx
 11970      FFFFFF
 11971 00dd 488D8520 		leaq	-224(%rbp), %rax
 11971      FFFFFF
 11972 00e4 4889CE   		movq	%rcx, %rsi
 11973 00e7 4889C7   		movq	%rax, %rdi
 11974 00ea E8000000 		call	_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_Lb1EEERKS1_OT_
 11974      00
 11975 00ef 488B8520 		movq	-224(%rbp), %rax
 11975      FFFFFF
 11976 00f6 488B9528 		movq	-216(%rbp), %rdx
 11976      FFFFFF
 11977 00fd E93D0300 		jmp	.L594
 11977      00
 11978              	.L582:
1942:/usr/include/c++/6/bits/stl_tree.h **** 	}
 11979              		.loc 27 1942 0
 11980 0102 488B95E8 		movq	-280(%rbp), %rdx
 11980      FEFFFF
 11981 0109 488B85F8 		movq	-264(%rbp), %rax
 11981      FEFFFF
 11982 0110 4889D6   		movq	%rdx, %rsi
 11983 0113 4889C7   		movq	%rax, %rdi
 11984 0116 E8000000 		call	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt1
 11984      00
 11985 011b E91F0300 		jmp	.L594
 11985      00
 11986              	.L579:
 11987              	.LBB115:
 11988              	.LBB116:
1944:/usr/include/c++/6/bits/stl_tree.h **** 	{
 11989              		.loc 27 1944 0
 11990 0120 488B8518 		movq	-232(%rbp), %rax
 11990      FFFFFF
 11991 0127 4889C7   		movq	%rax, %rdi
GAS LISTING /tmp/ccvUPO8Q.s 			page 519


 11992 012a E8000000 		call	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt1
 11992      00
 11993 012f 4889C2   		movq	%rax, %rdx
 11994 0132 488B85F8 		movq	-264(%rbp), %rax
 11994      FEFFFF
 11995 0139 488B8DE8 		movq	-280(%rbp), %rcx
 11995      FEFFFF
 11996 0140 4889CE   		movq	%rcx, %rsi
 11997 0143 4889C7   		movq	%rax, %rdi
 11998 0146 E8000000 		call	_ZNK3pmt10comparatorclERKN5boost13intrusive_ptrINS_8pmt_baseEEES6_
 11998      00
 11999 014b 84C0     		testb	%al, %al
 12000 014d 0F846301 		je	.L584
 12000      0000
 12001              	.LBB117:
1947:/usr/include/c++/6/bits/stl_tree.h **** 	  if (__pos._M_node == _M_leftmost()) // begin()
 12002              		.loc 27 1947 0
 12003 0153 488B8518 		movq	-232(%rbp), %rax
 12003      FFFFFF
 12004 015a 48898510 		movq	%rax, -240(%rbp)
 12004      FFFFFF
1948:/usr/include/c++/6/bits/stl_tree.h **** 	    return _Res(_M_leftmost(), _M_leftmost());
 12005              		.loc 27 1948 0
 12006 0161 488B9D18 		movq	-232(%rbp), %rbx
 12006      FFFFFF
 12007 0168 488B85F8 		movq	-264(%rbp), %rax
 12007      FEFFFF
 12008 016f 4889C7   		movq	%rax, %rdi
 12009 0172 E8000000 		call	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt1
 12009      00
 12010 0177 488B00   		movq	(%rax), %rax
 12011 017a 4839C3   		cmpq	%rax, %rbx
 12012 017d 0F94C0   		sete	%al
 12013 0180 84C0     		testb	%al, %al
 12014 0182 744C     		je	.L585
1949:/usr/include/c++/6/bits/stl_tree.h **** 	  else if (_M_impl._M_key_compare(_S_key((--__before)._M_node), __k))
 12015              		.loc 27 1949 0
 12016 0184 488B85F8 		movq	-264(%rbp), %rax
 12016      FEFFFF
 12017 018b 4889C7   		movq	%rax, %rdi
 12018 018e E8000000 		call	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt1
 12018      00
 12019 0193 4889C3   		movq	%rax, %rbx
 12020 0196 488B85F8 		movq	-264(%rbp), %rax
 12020      FEFFFF
 12021 019d 4889C7   		movq	%rax, %rdi
 12022 01a0 E8000000 		call	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt1
 12022      00
 12023 01a5 4889C1   		movq	%rax, %rcx
 12024 01a8 488D8540 		leaq	-192(%rbp), %rax
 12024      FFFFFF
 12025 01af 4889DA   		movq	%rbx, %rdx
 12026 01b2 4889CE   		movq	%rcx, %rsi
 12027 01b5 4889C7   		movq	%rax, %rdi
 12028 01b8 E8000000 		call	_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_S4_Lb1EEEOT_OT0_
 12028      00
 12029 01bd 488B8540 		movq	-192(%rbp), %rax
GAS LISTING /tmp/ccvUPO8Q.s 			page 520


 12029      FFFFFF
 12030 01c4 488B9548 		movq	-184(%rbp), %rdx
 12030      FFFFFF
 12031 01cb E96F0200 		jmp	.L594
 12031      00
 12032              	.L585:
1950:/usr/include/c++/6/bits/stl_tree.h **** 	    {
 12033              		.loc 27 1950 0
 12034 01d0 488D8510 		leaq	-240(%rbp), %rax
 12034      FFFFFF
 12035 01d7 4889C7   		movq	%rax, %rdi
 12036 01da E8000000 		call	_ZNSt17_Rb_tree_iteratorISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS1_8functionIFvS5_
 12036      00
 12037 01df 488B00   		movq	(%rax), %rax
 12038 01e2 4889C7   		movq	%rax, %rdi
 12039 01e5 E8000000 		call	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt1
 12039      00
 12040 01ea 4889C1   		movq	%rax, %rcx
 12041 01ed 488B85F8 		movq	-264(%rbp), %rax
 12041      FEFFFF
 12042 01f4 488B95E8 		movq	-280(%rbp), %rdx
 12042      FEFFFF
 12043 01fb 4889CE   		movq	%rcx, %rsi
 12044 01fe 4889C7   		movq	%rax, %rdi
 12045 0201 E8000000 		call	_ZNK3pmt10comparatorclERKN5boost13intrusive_ptrINS_8pmt_baseEEES6_
 12045      00
 12046 0206 84C0     		testb	%al, %al
 12047 0208 0F848A00 		je	.L587
 12047      0000
1952:/usr/include/c++/6/bits/stl_tree.h **** 		return _Res(0, __before._M_node);
 12048              		.loc 27 1952 0
 12049 020e 488B8510 		movq	-240(%rbp), %rax
 12049      FFFFFF
 12050 0215 4889C7   		movq	%rax, %rdi
 12051 0218 E8000000 		call	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt1
 12051      00
 12052 021d 4885C0   		testq	%rax, %rax
 12053 0220 0F94C0   		sete	%al
 12054 0223 84C0     		testb	%al, %al
 12055 0225 743E     		je	.L588
1953:/usr/include/c++/6/bits/stl_tree.h **** 	      else
 12056              		.loc 27 1953 0
 12057 0227 48C78568 		movq	$0, -152(%rbp)
 12057      FFFFFF00 
 12057      000000
 12058 0232 488D9510 		leaq	-240(%rbp), %rdx
 12058      FFFFFF
 12059 0239 488D8D68 		leaq	-152(%rbp), %rcx
 12059      FFFFFF
 12060 0240 488D8550 		leaq	-176(%rbp), %rax
 12060      FFFFFF
 12061 0247 4889CE   		movq	%rcx, %rsi
 12062 024a 4889C7   		movq	%rax, %rdi
 12063 024d E8000000 		call	_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_Lb1EEERKS1_OT_
 12063      00
 12064 0252 488B8550 		movq	-176(%rbp), %rax
 12064      FFFFFF
GAS LISTING /tmp/ccvUPO8Q.s 			page 521


 12065 0259 488B9558 		movq	-168(%rbp), %rdx
 12065      FFFFFF
 12066 0260 E9DA0100 		jmp	.L594
 12066      00
 12067              	.L588:
1955:/usr/include/c++/6/bits/stl_tree.h **** 	    }
 12068              		.loc 27 1955 0
 12069 0265 488D9518 		leaq	-232(%rbp), %rdx
 12069      FFFFFF
 12070 026c 488D8D18 		leaq	-232(%rbp), %rcx
 12070      FFFFFF
 12071 0273 488D8570 		leaq	-144(%rbp), %rax
 12071      FFFFFF
 12072 027a 4889CE   		movq	%rcx, %rsi
 12073 027d 4889C7   		movq	%rax, %rdi
 12074 0280 E8000000 		call	_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_S4_Lb1EEEOT_OT0_
 12074      00
 12075 0285 488B8570 		movq	-144(%rbp), %rax
 12075      FFFFFF
 12076 028c 488B9578 		movq	-136(%rbp), %rdx
 12076      FFFFFF
 12077 0293 E9A70100 		jmp	.L594
 12077      00
 12078              	.L587:
1958:/usr/include/c++/6/bits/stl_tree.h **** 	}
 12079              		.loc 27 1958 0
 12080 0298 488B95E8 		movq	-280(%rbp), %rdx
 12080      FEFFFF
 12081 029f 488B85F8 		movq	-264(%rbp), %rax
 12081      FEFFFF
 12082 02a6 4889D6   		movq	%rdx, %rsi
 12083 02a9 4889C7   		movq	%rax, %rdi
 12084 02ac E8000000 		call	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt1
 12084      00
 12085 02b1 E9890100 		jmp	.L594
 12085      00
 12086              	.L584:
 12087              	.LBE117:
 12088              	.LBB118:
 12089              	.LBB119:
1960:/usr/include/c++/6/bits/stl_tree.h **** 	{
 12090              		.loc 27 1960 0
 12091 02b6 488B8518 		movq	-232(%rbp), %rax
 12091      FFFFFF
 12092 02bd 4889C7   		movq	%rax, %rdi
 12093 02c0 E8000000 		call	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt1
 12093      00
 12094 02c5 4889C1   		movq	%rax, %rcx
 12095 02c8 488B85F8 		movq	-264(%rbp), %rax
 12095      FEFFFF
 12096 02cf 488B95E8 		movq	-280(%rbp), %rdx
 12096      FEFFFF
 12097 02d6 4889CE   		movq	%rcx, %rsi
 12098 02d9 4889C7   		movq	%rax, %rdi
 12099 02dc E8000000 		call	_ZNK3pmt10comparatorclERKN5boost13intrusive_ptrINS_8pmt_baseEEES6_
 12099      00
 12100 02e1 84C0     		testb	%al, %al
GAS LISTING /tmp/ccvUPO8Q.s 			page 522


 12101 02e3 0F842C01 		je	.L589
 12101      0000
 12102              	.LBB120:
1963:/usr/include/c++/6/bits/stl_tree.h **** 	  if (__pos._M_node == _M_rightmost())
 12103              		.loc 27 1963 0
 12104 02e9 488B8518 		movq	-232(%rbp), %rax
 12104      FFFFFF
 12105 02f0 48898508 		movq	%rax, -248(%rbp)
 12105      FFFFFF
1964:/usr/include/c++/6/bits/stl_tree.h **** 	    return _Res(0, _M_rightmost());
 12106              		.loc 27 1964 0
 12107 02f7 488B9D18 		movq	-232(%rbp), %rbx
 12107      FFFFFF
 12108 02fe 488B85F8 		movq	-264(%rbp), %rax
 12108      FEFFFF
 12109 0305 4889C7   		movq	%rax, %rdi
 12110 0308 E8000000 		call	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt1
 12110      00
 12111 030d 488B00   		movq	(%rax), %rax
 12112 0310 4839C3   		cmpq	%rax, %rbx
 12113 0313 0F94C0   		sete	%al
 12114 0316 84C0     		testb	%al, %al
 12115 0318 743A     		je	.L590
1965:/usr/include/c++/6/bits/stl_tree.h **** 	  else if (_M_impl._M_key_compare(__k, _S_key((++__after)._M_node)))
 12116              		.loc 27 1965 0
 12117 031a 488B85F8 		movq	-264(%rbp), %rax
 12117      FEFFFF
 12118 0321 4889C7   		movq	%rax, %rdi
 12119 0324 E8000000 		call	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt1
 12119      00
 12120 0329 4889C2   		movq	%rax, %rdx
 12121 032c 48C74598 		movq	$0, -104(%rbp)
 12121      00000000 
 12122 0334 488D4D98 		leaq	-104(%rbp), %rcx
 12123 0338 488D4580 		leaq	-128(%rbp), %rax
 12124 033c 4889CE   		movq	%rcx, %rsi
 12125 033f 4889C7   		movq	%rax, %rdi
 12126 0342 E8000000 		call	_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_Lb1EEERKS1_OT_
 12126      00
 12127 0347 488B4580 		movq	-128(%rbp), %rax
 12128 034b 488B5588 		movq	-120(%rbp), %rdx
 12129 034f E9EB0000 		jmp	.L594
 12129      00
 12130              	.L590:
1966:/usr/include/c++/6/bits/stl_tree.h **** 	    {
 12131              		.loc 27 1966 0
 12132 0354 488D8508 		leaq	-248(%rbp), %rax
 12132      FFFFFF
 12133 035b 4889C7   		movq	%rax, %rdi
 12134 035e E8000000 		call	_ZNSt17_Rb_tree_iteratorISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS1_8functionIFvS5_
 12134      00
 12135 0363 488B00   		movq	(%rax), %rax
 12136 0366 4889C7   		movq	%rax, %rdi
 12137 0369 E8000000 		call	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt1
 12137      00
 12138 036e 4889C2   		movq	%rax, %rdx
 12139 0371 488B85F8 		movq	-264(%rbp), %rax
GAS LISTING /tmp/ccvUPO8Q.s 			page 523


 12139      FEFFFF
 12140 0378 488B8DE8 		movq	-280(%rbp), %rcx
 12140      FEFFFF
 12141 037f 4889CE   		movq	%rcx, %rsi
 12142 0382 4889C7   		movq	%rax, %rdi
 12143 0385 E8000000 		call	_ZNK3pmt10comparatorclERKN5boost13intrusive_ptrINS_8pmt_baseEEES6_
 12143      00
 12144 038a 84C0     		testb	%al, %al
 12145 038c 746C     		je	.L592
1968:/usr/include/c++/6/bits/stl_tree.h **** 		return _Res(0, __pos._M_node);
 12146              		.loc 27 1968 0
 12147 038e 488B8518 		movq	-232(%rbp), %rax
 12147      FFFFFF
 12148 0395 4889C7   		movq	%rax, %rdi
 12149 0398 E8000000 		call	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt1
 12149      00
 12150 039d 4885C0   		testq	%rax, %rax
 12151 03a0 0F94C0   		sete	%al
 12152 03a3 84C0     		testb	%al, %al
 12153 03a5 742C     		je	.L593
1969:/usr/include/c++/6/bits/stl_tree.h **** 	      else
 12154              		.loc 27 1969 0
 12155 03a7 48C745B8 		movq	$0, -72(%rbp)
 12155      00000000 
 12156 03af 488D9518 		leaq	-232(%rbp), %rdx
 12156      FFFFFF
 12157 03b6 488D4DB8 		leaq	-72(%rbp), %rcx
 12158 03ba 488D45A0 		leaq	-96(%rbp), %rax
 12159 03be 4889CE   		movq	%rcx, %rsi
 12160 03c1 4889C7   		movq	%rax, %rdi
 12161 03c4 E8000000 		call	_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_Lb1EEERKS1_OT_
 12161      00
 12162 03c9 488B45A0 		movq	-96(%rbp), %rax
 12163 03cd 488B55A8 		movq	-88(%rbp), %rdx
 12164 03d1 EB6C     		jmp	.L594
 12165              	.L593:
1971:/usr/include/c++/6/bits/stl_tree.h **** 	    }
 12166              		.loc 27 1971 0
 12167 03d3 488D9508 		leaq	-248(%rbp), %rdx
 12167      FFFFFF
 12168 03da 488D8D08 		leaq	-248(%rbp), %rcx
 12168      FFFFFF
 12169 03e1 488D45C0 		leaq	-64(%rbp), %rax
 12170 03e5 4889CE   		movq	%rcx, %rsi
 12171 03e8 4889C7   		movq	%rax, %rdi
 12172 03eb E8000000 		call	_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_S4_Lb1EEEOT_OT0_
 12172      00
 12173 03f0 488B45C0 		movq	-64(%rbp), %rax
 12174 03f4 488B55C8 		movq	-56(%rbp), %rdx
 12175 03f8 EB45     		jmp	.L594
 12176              	.L592:
1974:/usr/include/c++/6/bits/stl_tree.h **** 	}
 12177              		.loc 27 1974 0
 12178 03fa 488B95E8 		movq	-280(%rbp), %rdx
 12178      FEFFFF
 12179 0401 488B85F8 		movq	-264(%rbp), %rax
 12179      FEFFFF
GAS LISTING /tmp/ccvUPO8Q.s 			page 524


 12180 0408 4889D6   		movq	%rdx, %rsi
 12181 040b 4889C7   		movq	%rax, %rdi
 12182 040e E8000000 		call	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt1
 12182      00
 12183 0413 EB2A     		jmp	.L594
 12184              	.L589:
 12185              	.LBE120:
1978:/usr/include/c++/6/bits/stl_tree.h ****     }
 12186              		.loc 27 1978 0
 12187 0415 48C745E8 		movq	$0, -24(%rbp)
 12187      00000000 
 12188 041d 488D55E8 		leaq	-24(%rbp), %rdx
 12189 0421 488D8D18 		leaq	-232(%rbp), %rcx
 12189      FFFFFF
 12190 0428 488D45D0 		leaq	-48(%rbp), %rax
 12191 042c 4889CE   		movq	%rcx, %rsi
 12192 042f 4889C7   		movq	%rax, %rdi
 12193 0432 E8000000 		call	_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_Lb1EEEOT_RKS1_
 12193      00
 12194 0437 488B45D0 		movq	-48(%rbp), %rax
 12195 043b 488B55D8 		movq	-40(%rbp), %rdx
 12196              	.L594:
 12197              	.LBE119:
 12198              	.LBE118:
 12199              	.LBE116:
 12200              	.LBE115:
 12201              	.LBE114:
1979:/usr/include/c++/6/bits/stl_tree.h **** 
 12202              		.loc 27 1979 0 discriminator 3
 12203 043f 4881C418 		addq	$280, %rsp
 12203      010000
 12204 0446 5B       		popq	%rbx
 12205 0447 5D       		popq	%rbp
 12206              		.cfi_def_cfa 7, 8
 12207 0448 C3       		ret
 12208              		.cfi_endproc
 12209              	.LFE13718:
 12211              		.section	.text._ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFv
 12212              		.weak	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt
 12214              	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt10_Sele
 12215              	.LFB13745:
 688:/usr/include/c++/6/bits/stl_tree.h ****       { return _KeyOfValue()(_S_value(__x)); }
 12216              		.loc 27 688 0
 12217              		.cfi_startproc
 12218 0000 55       		pushq	%rbp
 12219              		.cfi_def_cfa_offset 16
 12220              		.cfi_offset 6, -16
 12221 0001 4889E5   		movq	%rsp, %rbp
 12222              		.cfi_def_cfa_register 6
 12223 0004 4883EC20 		subq	$32, %rsp
 12224 0008 48897DE8 		movq	%rdi, -24(%rbp)
 689:/usr/include/c++/6/bits/stl_tree.h **** 
 12225              		.loc 27 689 0
 12226 000c 488B45E8 		movq	-24(%rbp), %rax
 12227 0010 4889C7   		movq	%rax, %rdi
 12228 0013 E8000000 		call	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt1
 12228      00
GAS LISTING /tmp/ccvUPO8Q.s 			page 525


 12229 0018 4889C2   		movq	%rax, %rdx
 12230 001b 488D45FF 		leaq	-1(%rbp), %rax
 12231 001f 4889D6   		movq	%rdx, %rsi
 12232 0022 4889C7   		movq	%rax, %rdi
 12233 0025 E8000000 		call	_ZNKSt10_Select1stISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS1_8functionIFvS5_EEEEEc
 12233      00
 12234 002a C9       		leave
 12235              		.cfi_def_cfa 7, 8
 12236 002b C3       		ret
 12237              		.cfi_endproc
 12238              	.LFE13745:
 12240              		.section	.text._ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFv
 12241              		.align 2
 12242              		.weak	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt
 12244              	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt10_Sele
 12245              	.LFB13746:
2095:/usr/include/c++/6/bits/stl_tree.h ****     _M_insert_node(_Base_ptr __x, _Base_ptr __p, _Link_type __z)
 12246              		.loc 27 2095 0
 12247              		.cfi_startproc
 12248 0000 55       		pushq	%rbp
 12249              		.cfi_def_cfa_offset 16
 12250              		.cfi_offset 6, -16
 12251 0001 4889E5   		movq	%rsp, %rbp
 12252              		.cfi_def_cfa_register 6
 12253 0004 53       		pushq	%rbx
 12254 0005 4883EC38 		subq	$56, %rsp
 12255              		.cfi_offset 3, -24
 12256 0009 48897DD8 		movq	%rdi, -40(%rbp)
 12257 000d 488975D0 		movq	%rsi, -48(%rbp)
 12258 0011 488955C8 		movq	%rdx, -56(%rbp)
 12259 0015 48894DC0 		movq	%rcx, -64(%rbp)
2099:/usr/include/c++/6/bits/stl_tree.h **** 						      _S_key(__p)));
 12260              		.loc 27 2099 0
 12261 0019 48837DD0 		cmpq	$0, -48(%rbp)
 12261      00
 12262 001e 7546     		jne	.L598
2098:/usr/include/c++/6/bits/stl_tree.h **** 			    || _M_impl._M_key_compare(_S_key(__z),
 12263              		.loc 27 2098 0
 12264 0020 488B45D8 		movq	-40(%rbp), %rax
 12265 0024 4889C7   		movq	%rax, %rdi
 12266 0027 E8000000 		call	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt1
 12266      00
 12267 002c 483B45C8 		cmpq	-56(%rbp), %rax
 12268 0030 7434     		je	.L598
2100:/usr/include/c++/6/bits/stl_tree.h **** 
 12269              		.loc 27 2100 0 discriminator 2
 12270 0032 488B45C8 		movq	-56(%rbp), %rax
 12271 0036 4889C7   		movq	%rax, %rdi
 12272 0039 E8000000 		call	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt1
 12272      00
 12273 003e 4889C3   		movq	%rax, %rbx
2099:/usr/include/c++/6/bits/stl_tree.h **** 						      _S_key(__p)));
 12274              		.loc 27 2099 0 discriminator 2
 12275 0041 488B45C0 		movq	-64(%rbp), %rax
 12276 0045 4889C7   		movq	%rax, %rdi
 12277 0048 E8000000 		call	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt1
 12277      00
GAS LISTING /tmp/ccvUPO8Q.s 			page 526


 12278 004d 4889C1   		movq	%rax, %rcx
 12279 0050 488B45D8 		movq	-40(%rbp), %rax
 12280 0054 4889DA   		movq	%rbx, %rdx
 12281 0057 4889CE   		movq	%rcx, %rsi
 12282 005a 4889C7   		movq	%rax, %rdi
 12283 005d E8000000 		call	_ZNK3pmt10comparatorclERKN5boost13intrusive_ptrINS_8pmt_baseEEES6_
 12283      00
 12284 0062 84C0     		testb	%al, %al
 12285 0064 7407     		je	.L599
 12286              	.L598:
2099:/usr/include/c++/6/bits/stl_tree.h **** 						      _S_key(__p)));
 12287              		.loc 27 2099 0 is_stmt 0 discriminator 1
 12288 0066 B8010000 		movl	$1, %eax
 12288      00
 12289 006b EB05     		jmp	.L600
 12290              	.L599:
2099:/usr/include/c++/6/bits/stl_tree.h **** 						      _S_key(__p)));
 12291              		.loc 27 2099 0 discriminator 3
 12292 006d B8000000 		movl	$0, %eax
 12292      00
 12293              	.L600:
2100:/usr/include/c++/6/bits/stl_tree.h **** 
 12294              		.loc 27 2100 0 is_stmt 1
 12295 0072 8845EF   		movb	%al, -17(%rbp)
2102:/usr/include/c++/6/bits/stl_tree.h **** 				    this->_M_impl._M_header);
 12296              		.loc 27 2102 0
 12297 0075 488B45D8 		movq	-40(%rbp), %rax
 12298 0079 488D4808 		leaq	8(%rax), %rcx
 12299 007d 0FB645EF 		movzbl	-17(%rbp), %eax
 12300 0081 488B55C8 		movq	-56(%rbp), %rdx
 12301 0085 488B75C0 		movq	-64(%rbp), %rsi
 12302 0089 89C7     		movl	%eax, %edi
 12303 008b E8000000 		call	_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_@PLT
 12303      00
2104:/usr/include/c++/6/bits/stl_tree.h ****       return iterator(__z);
 12304              		.loc 27 2104 0
 12305 0090 488B45D8 		movq	-40(%rbp), %rax
 12306 0094 488B4028 		movq	40(%rax), %rax
 12307 0098 488D5001 		leaq	1(%rax), %rdx
 12308 009c 488B45D8 		movq	-40(%rbp), %rax
 12309 00a0 48895028 		movq	%rdx, 40(%rax)
2105:/usr/include/c++/6/bits/stl_tree.h ****     }
 12310              		.loc 27 2105 0
 12311 00a4 488B55C0 		movq	-64(%rbp), %rdx
 12312 00a8 488D45E0 		leaq	-32(%rbp), %rax
 12313 00ac 4889D6   		movq	%rdx, %rsi
 12314 00af 4889C7   		movq	%rax, %rdi
 12315 00b2 E8000000 		call	_ZNSt17_Rb_tree_iteratorISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS1_8functionIFvS5_
 12315      00
 12316 00b7 488B45E0 		movq	-32(%rbp), %rax
2106:/usr/include/c++/6/bits/stl_tree.h **** 
 12317              		.loc 27 2106 0
 12318 00bb 4883C438 		addq	$56, %rsp
 12319 00bf 5B       		popq	%rbx
 12320 00c0 5D       		popq	%rbp
 12321              		.cfi_def_cfa 7, 8
 12322 00c1 C3       		ret
GAS LISTING /tmp/ccvUPO8Q.s 			page 527


 12323              		.cfi_endproc
 12324              	.LFE13746:
 12326              		.section	.text._ZN5boost17enable_error_infoINS_17bad_function_callEEENS_16exception_detail29enable
 12327              		.weak	_ZN5boost17enable_error_infoINS_17bad_function_callEEENS_16exception_detail29enable_error_in
 12329              	_ZN5boost17enable_error_infoINS_17bad_function_callEEENS_16exception_detail29enable_error_info_retu
 12330              	.LFB13747:
 398:/usr/include/boost/exception/exception.hpp ****         {
 12331              		.loc 3 398 0
 12332              		.cfi_startproc
 12333 0000 55       		pushq	%rbp
 12334              		.cfi_def_cfa_offset 16
 12335              		.cfi_offset 6, -16
 12336 0001 4889E5   		movq	%rsp, %rbp
 12337              		.cfi_def_cfa_register 6
 12338 0004 4883EC10 		subq	$16, %rsp
 12339 0008 48897DF8 		movq	%rdi, -8(%rbp)
 12340 000c 488975F0 		movq	%rsi, -16(%rbp)
 401:/usr/include/boost/exception/exception.hpp ****         }
 12341              		.loc 3 401 0
 12342 0010 488B55F0 		movq	-16(%rbp), %rdx
 12343 0014 488B45F8 		movq	-8(%rbp), %rax
 12344 0018 4889D6   		movq	%rdx, %rsi
 12345 001b 4889C7   		movq	%rax, %rdi
 12346 001e E8000000 		call	_ZN5boost16exception_detail19error_info_injectorINS_17bad_function_callEEC1ERKS2_
 12346      00
 402:/usr/include/boost/exception/exception.hpp **** 
 12347              		.loc 3 402 0
 12348 0023 488B45F8 		movq	-8(%rbp), %rax
 12349 0027 C9       		leave
 12350              		.cfi_def_cfa 7, 8
 12351 0028 C3       		ret
 12352              		.cfi_endproc
 12353              	.LFE13747:
 12355              		.section	.text._ZN5boost16exception_detail19error_info_injectorINS_17bad_function_callEED2Ev,"axG"
 12356              		.align 2
 12357              		.weak	_ZN5boost16exception_detail19error_info_injectorINS_17bad_function_callEED2Ev
 12359              	_ZN5boost16exception_detail19error_info_injectorINS_17bad_function_callEED2Ev:
 12360              	.LFB13749:
 353:/usr/include/boost/exception/exception.hpp ****                 {
 12361              		.loc 3 353 0
 12362              		.cfi_startproc
 12363 0000 55       		pushq	%rbp
 12364              		.cfi_def_cfa_offset 16
 12365              		.cfi_offset 6, -16
 12366 0001 4889E5   		movq	%rsp, %rbp
 12367              		.cfi_def_cfa_register 6
 12368 0004 4883EC10 		subq	$16, %rsp
 12369 0008 48897DF8 		movq	%rdi, -8(%rbp)
 12370              	.LBB121:
 355:/usr/include/boost/exception/exception.hpp ****             };
 12371              		.loc 3 355 0
 12372 000c 488D1500 		leaq	16+_ZTVN5boost16exception_detail19error_info_injectorINS_17bad_function_callEEE(%rip), %rdx
 12372      000000
 12373 0013 488B45F8 		movq	-8(%rbp), %rax
 12374 0017 488910   		movq	%rdx, (%rax)
 12375 001a 488D1500 		leaq	56+_ZTVN5boost16exception_detail19error_info_injectorINS_17bad_function_callEEE(%rip), %rdx
 12375      000000
GAS LISTING /tmp/ccvUPO8Q.s 			page 528


 12376 0021 488B45F8 		movq	-8(%rbp), %rax
 12377 0025 48895010 		movq	%rdx, 16(%rax)
 12378 0029 488B45F8 		movq	-8(%rbp), %rax
 12379 002d 4883C010 		addq	$16, %rax
 12380 0031 4889C7   		movq	%rax, %rdi
 12381 0034 E8000000 		call	_ZN5boost9exceptionD2Ev
 12381      00
 12382 0039 488B45F8 		movq	-8(%rbp), %rax
 12383 003d 4889C7   		movq	%rax, %rdi
 12384 0040 E8000000 		call	_ZN5boost17bad_function_callD2Ev
 12384      00
 12385              	.LBE121:
 12386 0045 90       		nop
 12387 0046 C9       		leave
 12388              		.cfi_def_cfa 7, 8
 12389 0047 C3       		ret
 12390              		.cfi_endproc
 12391              	.LFE13749:
 12393              		.weak	_ZN5boost16exception_detail19error_info_injectorINS_17bad_function_callEED1Ev
 12394              		.set	_ZN5boost16exception_detail19error_info_injectorINS_17bad_function_callEED1Ev,_ZN5boost16exce
 12395              		.set	.LTHUNK130,_ZN5boost16exception_detail19error_info_injectorINS_17bad_function_callEED1Ev
 12396              		.weak	_ZThn16_N5boost16exception_detail19error_info_injectorINS_17bad_function_callEED1Ev
 12398              	_ZThn16_N5boost16exception_detail19error_info_injectorINS_17bad_function_callEED1Ev:
 12399              	.LFB15705:
 353:/usr/include/boost/exception/exception.hpp ****                 {
 12400              		.loc 3 353 0
 12401              		.cfi_startproc
 12402 0048 4883EF10 		subq	$16, %rdi
 12403 004c EBB2     		jmp	.LTHUNK130
 12404              		.cfi_endproc
 12405              	.LFE15705:
 12407              		.section	.text._ZN5boost16exception_detail19error_info_injectorINS_17bad_function_callEED0Ev,"axG"
 12408              		.align 2
 12409              		.weak	_ZN5boost16exception_detail19error_info_injectorINS_17bad_function_callEED0Ev
 12411              	_ZN5boost16exception_detail19error_info_injectorINS_17bad_function_callEED0Ev:
 12412              	.LFB13751:
 353:/usr/include/boost/exception/exception.hpp ****                 {
 12413              		.loc 3 353 0
 12414              		.cfi_startproc
 12415 0000 55       		pushq	%rbp
 12416              		.cfi_def_cfa_offset 16
 12417              		.cfi_offset 6, -16
 12418 0001 4889E5   		movq	%rsp, %rbp
 12419              		.cfi_def_cfa_register 6
 12420 0004 4883EC10 		subq	$16, %rsp
 12421 0008 48897DF8 		movq	%rdi, -8(%rbp)
 355:/usr/include/boost/exception/exception.hpp ****             };
 12422              		.loc 3 355 0
 12423 000c 488B45F8 		movq	-8(%rbp), %rax
 12424 0010 4889C7   		movq	%rax, %rdi
 12425 0013 E8000000 		call	_ZN5boost16exception_detail19error_info_injectorINS_17bad_function_callEED1Ev
 12425      00
 12426 0018 488B45F8 		movq	-8(%rbp), %rax
 12427 001c BE380000 		movl	$56, %esi
 12427      00
 12428 0021 4889C7   		movq	%rax, %rdi
 12429 0024 E8000000 		call	_ZdlPvm@PLT
GAS LISTING /tmp/ccvUPO8Q.s 			page 529


 12429      00
 12430 0029 C9       		leave
 12431              		.cfi_def_cfa 7, 8
 12432 002a C3       		ret
 12433              		.cfi_endproc
 12434              	.LFE13751:
 12436              		.set	.LTHUNK131,_ZN5boost16exception_detail19error_info_injectorINS_17bad_function_callEED0Ev
 12437              		.weak	_ZThn16_N5boost16exception_detail19error_info_injectorINS_17bad_function_callEED0Ev
 12439              	_ZThn16_N5boost16exception_detail19error_info_injectorINS_17bad_function_callEED0Ev:
 12440              	.LFB15706:
 353:/usr/include/boost/exception/exception.hpp ****                 {
 12441              		.loc 3 353 0
 12442              		.cfi_startproc
 12443 002b 4883EF10 		subq	$16, %rdi
 12444 002f EBCF     		jmp	.LTHUNK131
 12445              		.cfi_endproc
 12446              	.LFE15706:
 12448              		.section	.text._ZN5boost24enable_current_exceptionINS_16exception_detail19error_info_injectorINS_1
 12449              		.weak	_ZN5boost24enable_current_exceptionINS_16exception_detail19error_info_injectorINS_17bad_func
 12451              	_ZN5boost24enable_current_exceptionINS_16exception_detail19error_info_injectorINS_17bad_function_ca
 12452              	.LFB13752:
 482:/usr/include/boost/exception/exception.hpp **** 
 483:/usr/include/boost/exception/exception.hpp ****             private:
 484:/usr/include/boost/exception/exception.hpp **** 
 485:/usr/include/boost/exception/exception.hpp ****             clone_base const *
 486:/usr/include/boost/exception/exception.hpp ****             clone() const
 487:/usr/include/boost/exception/exception.hpp ****                 {
 488:/usr/include/boost/exception/exception.hpp ****                 return new clone_impl(*this,clone_tag());
 489:/usr/include/boost/exception/exception.hpp ****                 }
 490:/usr/include/boost/exception/exception.hpp **** 
 491:/usr/include/boost/exception/exception.hpp ****             void
 492:/usr/include/boost/exception/exception.hpp ****             rethrow() const
 493:/usr/include/boost/exception/exception.hpp ****                 {
 494:/usr/include/boost/exception/exception.hpp ****                 throw*this;
 495:/usr/include/boost/exception/exception.hpp ****                 }
 496:/usr/include/boost/exception/exception.hpp ****             };
 497:/usr/include/boost/exception/exception.hpp ****         }
 498:/usr/include/boost/exception/exception.hpp **** #if defined(__GNUC__)
 499:/usr/include/boost/exception/exception.hpp **** # if (__GNUC__ == 4 && __GNUC_MINOR__ >= 1) || (__GNUC__ > 4)
 500:/usr/include/boost/exception/exception.hpp **** #  pragma GCC visibility pop
 501:/usr/include/boost/exception/exception.hpp **** # endif
 502:/usr/include/boost/exception/exception.hpp **** #endif
 503:/usr/include/boost/exception/exception.hpp **** 
 504:/usr/include/boost/exception/exception.hpp ****     template <class T>
 505:/usr/include/boost/exception/exception.hpp ****     inline
 506:/usr/include/boost/exception/exception.hpp ****     exception_detail::clone_impl<T>
 507:/usr/include/boost/exception/exception.hpp ****     enable_current_exception( T const & x )
 12453              		.loc 3 507 0
 12454              		.cfi_startproc
 12455 0000 55       		pushq	%rbp
 12456              		.cfi_def_cfa_offset 16
 12457              		.cfi_offset 6, -16
 12458 0001 4889E5   		movq	%rsp, %rbp
 12459              		.cfi_def_cfa_register 6
 12460 0004 4883EC10 		subq	$16, %rsp
 12461 0008 48897DF8 		movq	%rdi, -8(%rbp)
 12462 000c 488975F0 		movq	%rsi, -16(%rbp)
GAS LISTING /tmp/ccvUPO8Q.s 			page 530


 508:/usr/include/boost/exception/exception.hpp ****         {
 509:/usr/include/boost/exception/exception.hpp ****         return exception_detail::clone_impl<T>(x);
 12463              		.loc 3 509 0
 12464 0010 488B55F0 		movq	-16(%rbp), %rdx
 12465 0014 488B45F8 		movq	-8(%rbp), %rax
 12466 0018 4889D6   		movq	%rdx, %rsi
 12467 001b 4889C7   		movq	%rax, %rdi
 12468 001e E8000000 		call	_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEEC
 12468      00
 510:/usr/include/boost/exception/exception.hpp ****         }
 12469              		.loc 3 510 0
 12470 0023 488B45F8 		movq	-8(%rbp), %rax
 12471 0027 C9       		leave
 12472              		.cfi_def_cfa 7, 8
 12473 0028 C3       		ret
 12474              		.cfi_endproc
 12475              	.LFE13752:
 12477              		.section	.text._ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function
 12478              		.align 2
 12479              		.weak	_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEE
 12481              	_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEED1Ev:
 12482              	.LFB13755:
 479:/usr/include/boost/exception/exception.hpp ****                 {
 12483              		.loc 3 479 0
 12484              		.cfi_startproc
 12485 0000 55       		pushq	%rbp
 12486              		.cfi_def_cfa_offset 16
 12487              		.cfi_offset 6, -16
 12488 0001 4889E5   		movq	%rsp, %rbp
 12489              		.cfi_def_cfa_register 6
 12490 0004 4883EC10 		subq	$16, %rsp
 12491 0008 48897DF8 		movq	%rdi, -8(%rbp)
 12492              	.LBB122:
 481:/usr/include/boost/exception/exception.hpp **** 
 12493              		.loc 3 481 0
 12494 000c 488D1500 		leaq	24+_ZTVN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_call
 12494      000000
 12495 0013 488B45F8 		movq	-8(%rbp), %rax
 12496 0017 488910   		movq	%rdx, (%rax)
 12497 001a 488D1500 		leaq	80+_ZTVN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_call
 12497      000000
 12498 0021 488B45F8 		movq	-8(%rbp), %rax
 12499 0025 48895010 		movq	%rdx, 16(%rax)
 12500 0029 488B45F8 		movq	-8(%rbp), %rax
 12501 002d 488D5038 		leaq	56(%rax), %rdx
 12502 0031 488D0500 		leaq	136+_ZTVN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_cal
 12502      000000
 12503 0038 488902   		movq	%rax, (%rdx)
 12504 003b 488B45F8 		movq	-8(%rbp), %rax
 12505 003f 4889C7   		movq	%rax, %rdi
 12506 0042 E8000000 		call	_ZN5boost16exception_detail19error_info_injectorINS_17bad_function_callEED2Ev
 12506      00
 12507 0047 488B45F8 		movq	-8(%rbp), %rax
 12508 004b 4883C038 		addq	$56, %rax
 12509 004f 4889C7   		movq	%rax, %rdi
 12510 0052 E8000000 		call	_ZN5boost16exception_detail10clone_baseD2Ev
 12510      00
GAS LISTING /tmp/ccvUPO8Q.s 			page 531


 12511              	.LBE122:
 12512 0057 90       		nop
 12513 0058 C9       		leave
 12514              		.cfi_def_cfa 7, 8
 12515 0059 C3       		ret
 12516              		.cfi_endproc
 12517              	.LFE13755:
 12519              		.set	.LTHUNK133,_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_functio
 12520              		.weak	_ZThn16_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_ca
 12522              	_ZThn16_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEED
 12523              	.LFB15707:
 479:/usr/include/boost/exception/exception.hpp ****                 {
 12524              		.loc 3 479 0
 12525              		.cfi_startproc
 12526 005a 4883EF10 		subq	$16, %rdi
 12527 005e EBA0     		jmp	.LTHUNK133
 12528              		.cfi_endproc
 12529              	.LFE15707:
 12531              		.set	.LTHUNK132,_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_functio
 12532              		.weak	_ZTv0_n40_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_
 12534              	_ZTv0_n40_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEE
 12535              	.LFB15708:
 479:/usr/include/boost/exception/exception.hpp ****                 {
 12536              		.loc 3 479 0
 12537              		.cfi_startproc
 12538 0060 4C8B17   		movq	(%rdi), %r10
 12539 0063 49037AD8 		addq	-40(%r10), %rdi
 12540 0067 EB97     		jmp	.LTHUNK132
 12541              		.cfi_endproc
 12542              	.LFE15708:
 12544              		.section	.text._ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function
 12545              		.align 2
 12546              		.weak	_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEE
 12548              	_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEED0Ev:
 12549              	.LFB13756:
 479:/usr/include/boost/exception/exception.hpp ****                 {
 12550              		.loc 3 479 0
 12551              		.cfi_startproc
 12552 0000 55       		pushq	%rbp
 12553              		.cfi_def_cfa_offset 16
 12554              		.cfi_offset 6, -16
 12555 0001 4889E5   		movq	%rsp, %rbp
 12556              		.cfi_def_cfa_register 6
 12557 0004 4883EC10 		subq	$16, %rsp
 12558 0008 48897DF8 		movq	%rdi, -8(%rbp)
 481:/usr/include/boost/exception/exception.hpp **** 
 12559              		.loc 3 481 0
 12560 000c 488B45F8 		movq	-8(%rbp), %rax
 12561 0010 4889C7   		movq	%rax, %rdi
 12562 0013 E8000000 		call	_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEED
 12562      00
 12563 0018 488B45F8 		movq	-8(%rbp), %rax
 12564 001c BE400000 		movl	$64, %esi
 12564      00
 12565 0021 4889C7   		movq	%rax, %rdi
 12566 0024 E8000000 		call	_ZdlPvm@PLT
 12566      00
GAS LISTING /tmp/ccvUPO8Q.s 			page 532


 12567 0029 C9       		leave
 12568              		.cfi_def_cfa 7, 8
 12569 002a C3       		ret
 12570              		.cfi_endproc
 12571              	.LFE13756:
 12573              		.set	.LTHUNK135,_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_functio
 12574              		.weak	_ZThn16_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_ca
 12576              	_ZThn16_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEED
 12577              	.LFB15709:
 479:/usr/include/boost/exception/exception.hpp ****                 {
 12578              		.loc 3 479 0
 12579              		.cfi_startproc
 12580 002b 4883EF10 		subq	$16, %rdi
 12581 002f EBCF     		jmp	.LTHUNK135
 12582              		.cfi_endproc
 12583              	.LFE15709:
 12585              		.set	.LTHUNK134,_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_functio
 12586              		.weak	_ZTv0_n40_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_
 12588              	_ZTv0_n40_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEE
 12589              	.LFB15710:
 479:/usr/include/boost/exception/exception.hpp ****                 {
 12590              		.loc 3 479 0
 12591              		.cfi_startproc
 12592 0031 4C8B17   		movq	(%rdi), %r10
 12593 0034 49037AD8 		addq	-40(%r10), %rdi
 12594 0038 EBC6     		jmp	.LTHUNK134
 12595              		.cfi_endproc
 12596              	.LFE15710:
 12598              		.section	.text._ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_St5dequeIS4_SaIS
 12599              		.align 2
 12600              		.weak	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_St5dequeIS4_SaIS4_EEESt10
 12602              	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_St5dequeIS4_SaIS4_EEESt10_Select
 12603              	.LFB13759:
 676:/usr/include/c++/6/bits/stl_tree.h ****       { return &this->_M_impl._M_header; }
 12604              		.loc 27 676 0
 12605              		.cfi_startproc
 12606 0000 55       		pushq	%rbp
 12607              		.cfi_def_cfa_offset 16
 12608              		.cfi_offset 6, -16
 12609 0001 4889E5   		movq	%rsp, %rbp
 12610              		.cfi_def_cfa_register 6
 12611 0004 48897DF8 		movq	%rdi, -8(%rbp)
 677:/usr/include/c++/6/bits/stl_tree.h **** 
 12612              		.loc 27 677 0
 12613 0008 488B45F8 		movq	-8(%rbp), %rax
 12614 000c 4883C008 		addq	$8, %rax
 12615 0010 5D       		popq	%rbp
 12616              		.cfi_def_cfa 7, 8
 12617 0011 C3       		ret
 12618              		.cfi_endproc
 12619              	.LFE13759:
 12621              		.section	.text._ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_St5dequeIS4_SaIS
 12622              		.align 2
 12623              		.weak	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_St5dequeIS4_SaIS4_EEESt10
 12625              	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_St5dequeIS4_SaIS4_EEESt10_Select
 12626              	.LFB13760:
1649:/usr/include/c++/6/bits/stl_tree.h ****     _M_lower_bound(_Link_type __x, _Base_ptr __y,
GAS LISTING /tmp/ccvUPO8Q.s 			page 533


 12627              		.loc 27 1649 0
 12628              		.cfi_startproc
 12629 0000 55       		pushq	%rbp
 12630              		.cfi_def_cfa_offset 16
 12631              		.cfi_offset 6, -16
 12632 0001 4889E5   		movq	%rsp, %rbp
 12633              		.cfi_def_cfa_register 6
 12634 0004 4883EC30 		subq	$48, %rsp
 12635 0008 48897DE8 		movq	%rdi, -24(%rbp)
 12636 000c 488975E0 		movq	%rsi, -32(%rbp)
 12637 0010 488955D8 		movq	%rdx, -40(%rbp)
 12638 0014 48894DD0 		movq	%rcx, -48(%rbp)
 12639              	.L616:
1653:/usr/include/c++/6/bits/stl_tree.h **** 	if (!_M_impl._M_key_compare(_S_key(__x), __k))
 12640              		.loc 27 1653 0
 12641 0018 48837DE0 		cmpq	$0, -32(%rbp)
 12641      00
 12642 001d 7455     		je	.L613
1654:/usr/include/c++/6/bits/stl_tree.h **** 	  __y = __x, __x = _S_left(__x);
 12643              		.loc 27 1654 0
 12644 001f 488B45E0 		movq	-32(%rbp), %rax
 12645 0023 4889C7   		movq	%rax, %rdi
 12646 0026 E8000000 		call	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_St5dequeIS4_SaIS4_EEESt10_
 12646      00
 12647 002b 4889C1   		movq	%rax, %rcx
 12648 002e 488B45E8 		movq	-24(%rbp), %rax
 12649 0032 488B55D0 		movq	-48(%rbp), %rdx
 12650 0036 4889CE   		movq	%rcx, %rsi
 12651 0039 4889C7   		movq	%rax, %rdi
 12652 003c E8000000 		call	_ZNK3pmt10comparatorclERKN5boost13intrusive_ptrINS_8pmt_baseEEES6_
 12652      00
 12653 0041 83F001   		xorl	$1, %eax
 12654 0044 84C0     		testb	%al, %al
 12655 0046 741A     		je	.L614
1655:/usr/include/c++/6/bits/stl_tree.h **** 	else
 12656              		.loc 27 1655 0
 12657 0048 488B45E0 		movq	-32(%rbp), %rax
 12658 004c 488945D8 		movq	%rax, -40(%rbp)
 12659 0050 488B45E0 		movq	-32(%rbp), %rax
 12660 0054 4889C7   		movq	%rax, %rdi
 12661 0057 E8000000 		call	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_St5dequeIS4_SaIS4_EEESt10_
 12661      00
 12662 005c 488945E0 		movq	%rax, -32(%rbp)
 12663 0060 EBB6     		jmp	.L616
 12664              	.L614:
1657:/usr/include/c++/6/bits/stl_tree.h ****       return iterator(__y);
 12665              		.loc 27 1657 0
 12666 0062 488B45E0 		movq	-32(%rbp), %rax
 12667 0066 4889C7   		movq	%rax, %rdi
 12668 0069 E8000000 		call	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_St5dequeIS4_SaIS4_EEESt10_
 12668      00
 12669 006e 488945E0 		movq	%rax, -32(%rbp)
1653:/usr/include/c++/6/bits/stl_tree.h **** 	if (!_M_impl._M_key_compare(_S_key(__x), __k))
 12670              		.loc 27 1653 0
 12671 0072 EBA4     		jmp	.L616
 12672              	.L613:
1658:/usr/include/c++/6/bits/stl_tree.h ****     }
GAS LISTING /tmp/ccvUPO8Q.s 			page 534


 12673              		.loc 27 1658 0
 12674 0074 488B55D8 		movq	-40(%rbp), %rdx
 12675 0078 488D45F8 		leaq	-8(%rbp), %rax
 12676 007c 4889D6   		movq	%rdx, %rsi
 12677 007f 4889C7   		movq	%rax, %rdi
 12678 0082 E8000000 		call	_ZNSt17_Rb_tree_iteratorISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt5dequeIS5_SaIS5_E
 12678      00
 12679 0087 488B45F8 		movq	-8(%rbp), %rax
1659:/usr/include/c++/6/bits/stl_tree.h **** 
 12680              		.loc 27 1659 0
 12681 008b C9       		leave
 12682              		.cfi_def_cfa 7, 8
 12683 008c C3       		ret
 12684              		.cfi_endproc
 12685              	.LFE13760:
 12687              		.section	.text._ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_St5dequeIS4_SaIS
 12688              		.weak	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_St5dequeIS4_SaIS4_EEESt10
 12690              	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_St5dequeIS4_SaIS4_EEESt10_Select
 12691              	.LFB13761:
 712:/usr/include/c++/6/bits/stl_tree.h ****       { return _KeyOfValue()(_S_value(__x)); }
 12692              		.loc 27 712 0
 12693              		.cfi_startproc
 12694 0000 55       		pushq	%rbp
 12695              		.cfi_def_cfa_offset 16
 12696              		.cfi_offset 6, -16
 12697 0001 4889E5   		movq	%rsp, %rbp
 12698              		.cfi_def_cfa_register 6
 12699 0004 4883EC20 		subq	$32, %rsp
 12700 0008 48897DE8 		movq	%rdi, -24(%rbp)
 713:/usr/include/c++/6/bits/stl_tree.h **** 
 12701              		.loc 27 713 0
 12702 000c 488B45E8 		movq	-24(%rbp), %rax
 12703 0010 4889C7   		movq	%rax, %rdi
 12704 0013 E8000000 		call	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_St5dequeIS4_SaIS4_EEESt10_
 12704      00
 12705 0018 4889C2   		movq	%rax, %rdx
 12706 001b 488D45FF 		leaq	-1(%rbp), %rax
 12707 001f 4889D6   		movq	%rdx, %rsi
 12708 0022 4889C7   		movq	%rax, %rdi
 12709 0025 E8000000 		call	_ZNKSt10_Select1stISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt5dequeIS5_SaIS5_EEEEclE
 12709      00
 12710 002a C9       		leave
 12711              		.cfi_def_cfa 7, 8
 12712 002b C3       		ret
 12713              		.cfi_endproc
 12714              	.LFE13761:
 12716              		.section	.text._ZNSt17_Rb_tree_iteratorISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt5dequeI
 12717              		.align 2
 12718              		.weak	_ZNSt17_Rb_tree_iteratorISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt5dequeIS5_SaIS5_
 12720              	_ZNSt17_Rb_tree_iteratorISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt5dequeIS5_SaIS5_EEEEC2E
 12721              	.LFB13763:
 195:/usr/include/c++/6/bits/stl_tree.h ****       : _M_node(__x) { }
 12722              		.loc 27 195 0
 12723              		.cfi_startproc
 12724 0000 55       		pushq	%rbp
 12725              		.cfi_def_cfa_offset 16
 12726              		.cfi_offset 6, -16
GAS LISTING /tmp/ccvUPO8Q.s 			page 535


 12727 0001 4889E5   		movq	%rsp, %rbp
 12728              		.cfi_def_cfa_register 6
 12729 0004 48897DF8 		movq	%rdi, -8(%rbp)
 12730 0008 488975F0 		movq	%rsi, -16(%rbp)
 12731              	.LBB123:
 196:/usr/include/c++/6/bits/stl_tree.h **** 
 12732              		.loc 27 196 0
 12733 000c 488B45F8 		movq	-8(%rbp), %rax
 12734 0010 488B55F0 		movq	-16(%rbp), %rdx
 12735 0014 488910   		movq	%rdx, (%rax)
 12736              	.LBE123:
 12737 0017 90       		nop
 12738 0018 5D       		popq	%rbp
 12739              		.cfi_def_cfa 7, 8
 12740 0019 C3       		ret
 12741              		.cfi_endproc
 12742              	.LFE13763:
 12744              		.weak	_ZNSt17_Rb_tree_iteratorISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt5dequeIS5_SaIS5_
 12745              		.set	_ZNSt17_Rb_tree_iteratorISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt5dequeIS5_SaIS5_E
 12746              		.section	.text._ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_St5dequeIS4_SaIS
 12747              		.weak	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_St5dequeIS4_SaIS4_EEESt10
 12749              	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_St5dequeIS4_SaIS4_EEESt10_Select
 12750              	.LFB13770:
 688:/usr/include/c++/6/bits/stl_tree.h ****       { return _KeyOfValue()(_S_value(__x)); }
 12751              		.loc 27 688 0
 12752              		.cfi_startproc
 12753 0000 55       		pushq	%rbp
 12754              		.cfi_def_cfa_offset 16
 12755              		.cfi_offset 6, -16
 12756 0001 4889E5   		movq	%rsp, %rbp
 12757              		.cfi_def_cfa_register 6
 12758 0004 4883EC20 		subq	$32, %rsp
 12759 0008 48897DE8 		movq	%rdi, -24(%rbp)
 689:/usr/include/c++/6/bits/stl_tree.h **** 
 12760              		.loc 27 689 0
 12761 000c 488B45E8 		movq	-24(%rbp), %rax
 12762 0010 4889C7   		movq	%rax, %rdi
 12763 0013 E8000000 		call	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_St5dequeIS4_SaIS4_EEESt10_
 12763      00
 12764 0018 4889C2   		movq	%rax, %rdx
 12765 001b 488D45FF 		leaq	-1(%rbp), %rax
 12766 001f 4889D6   		movq	%rdx, %rsi
 12767 0022 4889C7   		movq	%rax, %rdi
 12768 0025 E8000000 		call	_ZNKSt10_Select1stISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt5dequeIS5_SaIS5_EEEEclE
 12768      00
 12769 002a C9       		leave
 12770              		.cfi_def_cfa 7, 8
 12771 002b C3       		ret
 12772              		.cfi_endproc
 12773              	.LFE13770:
 12775              		.section	.text._ZNSaIlED2Ev,"axG",@progbits,_ZNSaIlED5Ev,comdat
 12776              		.align 2
 12777              		.weak	_ZNSaIlED2Ev
 12779              	_ZNSaIlED2Ev:
 12780              	.LFB13796:
 12781              		.loc 38 139 0
 12782              		.cfi_startproc
GAS LISTING /tmp/ccvUPO8Q.s 			page 536


 12783 0000 55       		pushq	%rbp
 12784              		.cfi_def_cfa_offset 16
 12785              		.cfi_offset 6, -16
 12786 0001 4889E5   		movq	%rsp, %rbp
 12787              		.cfi_def_cfa_register 6
 12788 0004 4883EC10 		subq	$16, %rsp
 12789 0008 48897DF8 		movq	%rdi, -8(%rbp)
 12790              	.LBB124:
 12791              		.loc 38 139 0
 12792 000c 488B45F8 		movq	-8(%rbp), %rax
 12793 0010 4889C7   		movq	%rax, %rdi
 12794 0013 E8000000 		call	_ZN9__gnu_cxx13new_allocatorIlED2Ev
 12794      00
 12795              	.LBE124:
 12796 0018 90       		nop
 12797 0019 C9       		leave
 12798              		.cfi_def_cfa 7, 8
 12799 001a C3       		ret
 12800              		.cfi_endproc
 12801              	.LFE13796:
 12803              		.weak	_ZNSaIlED1Ev
 12804              		.set	_ZNSaIlED1Ev,_ZNSaIlED2Ev
 12805              		.section	.text._ZNSt12_Vector_baseIlSaIlEE13_M_deallocateEPlm,"axG",@progbits,_ZNSt12_Vector_baseI
 12806              		.align 2
 12807              		.weak	_ZNSt12_Vector_baseIlSaIlEE13_M_deallocateEPlm
 12809              	_ZNSt12_Vector_baseIlSaIlEE13_M_deallocateEPlm:
 12810              	.LFB13798:
 174:/usr/include/c++/6/bits/stl_vector.h ****       {
 12811              		.loc 30 174 0
 12812              		.cfi_startproc
 12813 0000 55       		pushq	%rbp
 12814              		.cfi_def_cfa_offset 16
 12815              		.cfi_offset 6, -16
 12816 0001 4889E5   		movq	%rsp, %rbp
 12817              		.cfi_def_cfa_register 6
 12818 0004 4883EC20 		subq	$32, %rsp
 12819 0008 48897DF8 		movq	%rdi, -8(%rbp)
 12820 000c 488975F0 		movq	%rsi, -16(%rbp)
 12821 0010 488955E8 		movq	%rdx, -24(%rbp)
 177:/usr/include/c++/6/bits/stl_vector.h **** 	  _Tr::deallocate(_M_impl, __p, __n);
 12822              		.loc 30 177 0
 12823 0014 48837DF0 		cmpq	$0, -16(%rbp)
 12823      00
 12824 0019 7417     		je	.L626
 178:/usr/include/c++/6/bits/stl_vector.h ****       }
 12825              		.loc 30 178 0
 12826 001b 488B45F8 		movq	-8(%rbp), %rax
 12827 001f 488B55E8 		movq	-24(%rbp), %rdx
 12828 0023 488B4DF0 		movq	-16(%rbp), %rcx
 12829 0027 4889CE   		movq	%rcx, %rsi
 12830 002a 4889C7   		movq	%rax, %rdi
 12831 002d E8000000 		call	_ZNSt16allocator_traitsISaIlEE10deallocateERS0_Plm
 12831      00
 12832              	.L626:
 179:/usr/include/c++/6/bits/stl_vector.h **** 
 12833              		.loc 30 179 0
 12834 0032 90       		nop
GAS LISTING /tmp/ccvUPO8Q.s 			page 537


 12835 0033 C9       		leave
 12836              		.cfi_def_cfa 7, 8
 12837 0034 C3       		ret
 12838              		.cfi_endproc
 12839              	.LFE13798:
 12841              		.section	.text._ZSt8_DestroyIPlEvT_S1_,"axG",@progbits,_ZSt8_DestroyIPlEvT_S1_,comdat
 12842              		.weak	_ZSt8_DestroyIPlEvT_S1_
 12844              	_ZSt8_DestroyIPlEvT_S1_:
 12845              	.LFB13799:
 122:/usr/include/c++/6/bits/stl_construct.h ****     {
 12846              		.loc 35 122 0
 12847              		.cfi_startproc
 12848 0000 55       		pushq	%rbp
 12849              		.cfi_def_cfa_offset 16
 12850              		.cfi_offset 6, -16
 12851 0001 4889E5   		movq	%rsp, %rbp
 12852              		.cfi_def_cfa_register 6
 12853 0004 4883EC10 		subq	$16, %rsp
 12854 0008 48897DF8 		movq	%rdi, -8(%rbp)
 12855 000c 488975F0 		movq	%rsi, -16(%rbp)
 126:/usr/include/c++/6/bits/stl_construct.h **** 	__destroy(__first, __last);
 12856              		.loc 35 126 0
 12857 0010 488B55F0 		movq	-16(%rbp), %rdx
 12858 0014 488B45F8 		movq	-8(%rbp), %rax
 12859 0018 4889D6   		movq	%rdx, %rsi
 12860 001b 4889C7   		movq	%rax, %rdi
 12861 001e E8000000 		call	_ZNSt12_Destroy_auxILb1EE9__destroyIPlEEvT_S3_
 12861      00
 128:/usr/include/c++/6/bits/stl_construct.h **** 
 12862              		.loc 35 128 0
 12863 0023 90       		nop
 12864 0024 C9       		leave
 12865              		.cfi_def_cfa 7, 8
 12866 0025 C3       		ret
 12867              		.cfi_endproc
 12868              	.LFE13799:
 12870              		.section	.text._ZN5boost16exception_detail8set_infoINS0_10clone_implINS0_10bad_alloc_EEENS_15throw
 12871              		.weak	_ZN5boost16exception_detail8set_infoINS0_10clone_implINS0_10bad_alloc_EEENS_15throw_function
 12873              	_ZN5boost16exception_detail8set_infoINS0_10clone_implINS0_10bad_alloc_EEENS_15throw_function_EPKcEE
 12874              	.LFB13971:
 275:/usr/include/boost/exception/info.hpp ****             {
 12875              		.loc 36 275 0
 12876              		.cfi_startproc
 12877 0000 55       		pushq	%rbp
 12878              		.cfi_def_cfa_offset 16
 12879              		.cfi_offset 6, -16
 12880 0001 4889E5   		movq	%rsp, %rbp
 12881              		.cfi_def_cfa_register 6
 12882 0004 4883EC10 		subq	$16, %rsp
 12883 0008 48897DF8 		movq	%rdi, -8(%rbp)
 12884 000c 488975F0 		movq	%rsi, -16(%rbp)
 277:/usr/include/boost/exception/info.hpp ****             }
 12885              		.loc 36 277 0
 12886 0010 488B45F0 		movq	-16(%rbp), %rax
 12887 0014 4889C7   		movq	%rax, %rdi
 12888 0017 E8000000 		call	_ZSt4moveIRN5boost10error_infoINS0_15throw_function_EPKcEEEONSt16remove_referenceIT_E4typeEOS
 12888      00
GAS LISTING /tmp/ccvUPO8Q.s 			page 538


 12889 001c 4889C2   		movq	%rax, %rdx
 12890 001f 488B45F8 		movq	-8(%rbp), %rax
 12891 0023 4889D6   		movq	%rdx, %rsi
 12892 0026 4889C7   		movq	%rax, %rdi
 12893 0029 E8000000 		call	_ZN5boost16exception_detail11set_info_rvINS_10error_infoINS_15throw_function_EPKcEEE3setINS0_
 12893      00
 278:/usr/include/boost/exception/info.hpp **** #endif
 12894              		.loc 36 278 0
 12895 002e C9       		leave
 12896              		.cfi_def_cfa 7, 8
 12897 002f C3       		ret
 12898              		.cfi_endproc
 12899              	.LFE13971:
 12901              		.section	.text._ZN5boost16exception_detail8set_infoINS0_10clone_implINS0_10bad_alloc_EEENS_11throw
 12902              		.weak	_ZN5boost16exception_detail8set_infoINS0_10clone_implINS0_10bad_alloc_EEENS_11throw_file_EPK
 12904              	_ZN5boost16exception_detail8set_infoINS0_10clone_implINS0_10bad_alloc_EEENS_11throw_file_EPKcEERKT_
 12905              	.LFB13972:
 275:/usr/include/boost/exception/info.hpp ****             {
 12906              		.loc 36 275 0
 12907              		.cfi_startproc
 12908 0000 55       		pushq	%rbp
 12909              		.cfi_def_cfa_offset 16
 12910              		.cfi_offset 6, -16
 12911 0001 4889E5   		movq	%rsp, %rbp
 12912              		.cfi_def_cfa_register 6
 12913 0004 4883EC10 		subq	$16, %rsp
 12914 0008 48897DF8 		movq	%rdi, -8(%rbp)
 12915 000c 488975F0 		movq	%rsi, -16(%rbp)
 277:/usr/include/boost/exception/info.hpp ****             }
 12916              		.loc 36 277 0
 12917 0010 488B45F0 		movq	-16(%rbp), %rax
 12918 0014 4889C7   		movq	%rax, %rdi
 12919 0017 E8000000 		call	_ZSt4moveIRN5boost10error_infoINS0_11throw_file_EPKcEEEONSt16remove_referenceIT_E4typeEOS8_
 12919      00
 12920 001c 4889C2   		movq	%rax, %rdx
 12921 001f 488B45F8 		movq	-8(%rbp), %rax
 12922 0023 4889D6   		movq	%rdx, %rsi
 12923 0026 4889C7   		movq	%rax, %rdi
 12924 0029 E8000000 		call	_ZN5boost16exception_detail11set_info_rvINS_10error_infoINS_11throw_file_EPKcEEE3setINS0_10cl
 12924      00
 278:/usr/include/boost/exception/info.hpp **** #endif
 12925              		.loc 36 278 0
 12926 002e C9       		leave
 12927              		.cfi_def_cfa 7, 8
 12928 002f C3       		ret
 12929              		.cfi_endproc
 12930              	.LFE13972:
 12932              		.section	.text._ZN5boost16exception_detail8set_infoINS0_10clone_implINS0_10bad_alloc_EEENS_11throw
 12933              		.weak	_ZN5boost16exception_detail8set_infoINS0_10clone_implINS0_10bad_alloc_EEENS_11throw_line_EiE
 12935              	_ZN5boost16exception_detail8set_infoINS0_10clone_implINS0_10bad_alloc_EEENS_11throw_line_EiEERKT_S8
 12936              	.LFB13973:
 275:/usr/include/boost/exception/info.hpp ****             {
 12937              		.loc 36 275 0
 12938              		.cfi_startproc
 12939 0000 55       		pushq	%rbp
 12940              		.cfi_def_cfa_offset 16
 12941              		.cfi_offset 6, -16
GAS LISTING /tmp/ccvUPO8Q.s 			page 539


 12942 0001 4889E5   		movq	%rsp, %rbp
 12943              		.cfi_def_cfa_register 6
 12944 0004 4883EC10 		subq	$16, %rsp
 12945 0008 48897DF8 		movq	%rdi, -8(%rbp)
 12946 000c 488975F0 		movq	%rsi, -16(%rbp)
 277:/usr/include/boost/exception/info.hpp ****             }
 12947              		.loc 36 277 0
 12948 0010 488B45F0 		movq	-16(%rbp), %rax
 12949 0014 4889C7   		movq	%rax, %rdi
 12950 0017 E8000000 		call	_ZSt4moveIRN5boost10error_infoINS0_11throw_line_EiEEEONSt16remove_referenceIT_E4typeEOS6_
 12950      00
 12951 001c 4889C2   		movq	%rax, %rdx
 12952 001f 488B45F8 		movq	-8(%rbp), %rax
 12953 0023 4889D6   		movq	%rdx, %rsi
 12954 0026 4889C7   		movq	%rax, %rdi
 12955 0029 E8000000 		call	_ZN5boost16exception_detail11set_info_rvINS_10error_infoINS_11throw_line_EiEEE3setINS0_10clon
 12955      00
 278:/usr/include/boost/exception/info.hpp **** #endif
 12956              		.loc 36 278 0
 12957 002e C9       		leave
 12958              		.cfi_def_cfa 7, 8
 12959 002f C3       		ret
 12960              		.cfi_endproc
 12961              	.LFE13973:
 12963              		.section	.text._ZN5boost6detail20sp_pointer_constructIKNS_16exception_detail10clone_baseENS2_10clo
 12964              		.weak	_ZN5boost6detail20sp_pointer_constructIKNS_16exception_detail10clone_baseENS2_10clone_implIN
 12966              	_ZN5boost6detail20sp_pointer_constructIKNS_16exception_detail10clone_baseENS2_10clone_implINS2_10ba
 12967              	.LFB13974:
 282:/usr/include/boost/smart_ptr/shared_ptr.hpp **** {
 12968              		.loc 7 282 0
 12969              		.cfi_startproc
 12970 0000 55       		pushq	%rbp
 12971              		.cfi_def_cfa_offset 16
 12972              		.cfi_offset 6, -16
 12973 0001 4889E5   		movq	%rsp, %rbp
 12974              		.cfi_def_cfa_register 6
 12975 0004 4883EC30 		subq	$48, %rsp
 12976 0008 48897DE8 		movq	%rdi, -24(%rbp)
 12977 000c 488975E0 		movq	%rsi, -32(%rbp)
 12978 0010 488955D8 		movq	%rdx, -40(%rbp)
 284:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     boost::detail::sp_enable_shared_from_this( ppx, p, p );
 12979              		.loc 7 284 0
 12980 0014 488B55E0 		movq	-32(%rbp), %rdx
 12981 0018 488D45F8 		leaq	-8(%rbp), %rax
 12982 001c 4889D6   		movq	%rdx, %rsi
 12983 001f 4889C7   		movq	%rax, %rdi
 12984 0022 E8000000 		call	_ZN5boost6detail12shared_countC1INS_16exception_detail10clone_implINS3_10bad_alloc_EEEEEPT_
 12984      00
 12985 0027 488B55D8 		movq	-40(%rbp), %rdx
 12986 002b 488D45F8 		leaq	-8(%rbp), %rax
 12987 002f 4889D6   		movq	%rdx, %rsi
 12988 0032 4889C7   		movq	%rax, %rdi
 12989 0035 E8000000 		call	_ZN5boost6detail12shared_count4swapERS1_
 12989      00
 12990 003a 488D45F8 		leaq	-8(%rbp), %rax
 12991 003e 4889C7   		movq	%rax, %rdi
 12992 0041 E8000000 		call	_ZN5boost6detail12shared_countD1Ev
GAS LISTING /tmp/ccvUPO8Q.s 			page 540


 12992      00
 285:/usr/include/boost/smart_ptr/shared_ptr.hpp **** }
 12993              		.loc 7 285 0
 12994 0046 488B55E0 		movq	-32(%rbp), %rdx
 12995 004a 488B4DE0 		movq	-32(%rbp), %rcx
 12996 004e 488B45E8 		movq	-24(%rbp), %rax
 12997 0052 4889CE   		movq	%rcx, %rsi
 12998 0055 4889C7   		movq	%rax, %rdi
 12999 0058 B8000000 		movl	$0, %eax
 12999      00
 13000 005d E8000000 		call	_ZN5boost6detail26sp_enable_shared_from_thisEz
 13000      00
 286:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 13001              		.loc 7 286 0
 13002 0062 90       		nop
 13003 0063 C9       		leave
 13004              		.cfi_def_cfa 7, 8
 13005 0064 C3       		ret
 13006              		.cfi_endproc
 13007              	.LFE13974:
 13009              		.section	.text._ZN5boost16exception_detail8set_infoINS0_10clone_implINS0_14bad_exception_EEENS_15t
 13010              		.weak	_ZN5boost16exception_detail8set_infoINS0_10clone_implINS0_14bad_exception_EEENS_15throw_func
 13012              	_ZN5boost16exception_detail8set_infoINS0_10clone_implINS0_14bad_exception_EEENS_15throw_function_EP
 13013              	.LFB13975:
 275:/usr/include/boost/exception/info.hpp ****             {
 13014              		.loc 36 275 0
 13015              		.cfi_startproc
 13016 0000 55       		pushq	%rbp
 13017              		.cfi_def_cfa_offset 16
 13018              		.cfi_offset 6, -16
 13019 0001 4889E5   		movq	%rsp, %rbp
 13020              		.cfi_def_cfa_register 6
 13021 0004 4883EC10 		subq	$16, %rsp
 13022 0008 48897DF8 		movq	%rdi, -8(%rbp)
 13023 000c 488975F0 		movq	%rsi, -16(%rbp)
 277:/usr/include/boost/exception/info.hpp ****             }
 13024              		.loc 36 277 0
 13025 0010 488B45F0 		movq	-16(%rbp), %rax
 13026 0014 4889C7   		movq	%rax, %rdi
 13027 0017 E8000000 		call	_ZSt4moveIRN5boost10error_infoINS0_15throw_function_EPKcEEEONSt16remove_referenceIT_E4typeEOS
 13027      00
 13028 001c 4889C2   		movq	%rax, %rdx
 13029 001f 488B45F8 		movq	-8(%rbp), %rax
 13030 0023 4889D6   		movq	%rdx, %rsi
 13031 0026 4889C7   		movq	%rax, %rdi
 13032 0029 E8000000 		call	_ZN5boost16exception_detail11set_info_rvINS_10error_infoINS_15throw_function_EPKcEEE3setINS0_
 13032      00
 278:/usr/include/boost/exception/info.hpp **** #endif
 13033              		.loc 36 278 0
 13034 002e C9       		leave
 13035              		.cfi_def_cfa 7, 8
 13036 002f C3       		ret
 13037              		.cfi_endproc
 13038              	.LFE13975:
 13040              		.section	.text._ZN5boost16exception_detail8set_infoINS0_10clone_implINS0_14bad_exception_EEENS_11t
 13041              		.weak	_ZN5boost16exception_detail8set_infoINS0_10clone_implINS0_14bad_exception_EEENS_11throw_file
 13043              	_ZN5boost16exception_detail8set_infoINS0_10clone_implINS0_14bad_exception_EEENS_11throw_file_EPKcEE
GAS LISTING /tmp/ccvUPO8Q.s 			page 541


 13044              	.LFB13976:
 275:/usr/include/boost/exception/info.hpp ****             {
 13045              		.loc 36 275 0
 13046              		.cfi_startproc
 13047 0000 55       		pushq	%rbp
 13048              		.cfi_def_cfa_offset 16
 13049              		.cfi_offset 6, -16
 13050 0001 4889E5   		movq	%rsp, %rbp
 13051              		.cfi_def_cfa_register 6
 13052 0004 4883EC10 		subq	$16, %rsp
 13053 0008 48897DF8 		movq	%rdi, -8(%rbp)
 13054 000c 488975F0 		movq	%rsi, -16(%rbp)
 277:/usr/include/boost/exception/info.hpp ****             }
 13055              		.loc 36 277 0
 13056 0010 488B45F0 		movq	-16(%rbp), %rax
 13057 0014 4889C7   		movq	%rax, %rdi
 13058 0017 E8000000 		call	_ZSt4moveIRN5boost10error_infoINS0_11throw_file_EPKcEEEONSt16remove_referenceIT_E4typeEOS8_
 13058      00
 13059 001c 4889C2   		movq	%rax, %rdx
 13060 001f 488B45F8 		movq	-8(%rbp), %rax
 13061 0023 4889D6   		movq	%rdx, %rsi
 13062 0026 4889C7   		movq	%rax, %rdi
 13063 0029 E8000000 		call	_ZN5boost16exception_detail11set_info_rvINS_10error_infoINS_11throw_file_EPKcEEE3setINS0_10cl
 13063      00
 278:/usr/include/boost/exception/info.hpp **** #endif
 13064              		.loc 36 278 0
 13065 002e C9       		leave
 13066              		.cfi_def_cfa 7, 8
 13067 002f C3       		ret
 13068              		.cfi_endproc
 13069              	.LFE13976:
 13071              		.section	.text._ZN5boost16exception_detail8set_infoINS0_10clone_implINS0_14bad_exception_EEENS_11t
 13072              		.weak	_ZN5boost16exception_detail8set_infoINS0_10clone_implINS0_14bad_exception_EEENS_11throw_line
 13074              	_ZN5boost16exception_detail8set_infoINS0_10clone_implINS0_14bad_exception_EEENS_11throw_line_EiEERK
 13075              	.LFB13977:
 275:/usr/include/boost/exception/info.hpp ****             {
 13076              		.loc 36 275 0
 13077              		.cfi_startproc
 13078 0000 55       		pushq	%rbp
 13079              		.cfi_def_cfa_offset 16
 13080              		.cfi_offset 6, -16
 13081 0001 4889E5   		movq	%rsp, %rbp
 13082              		.cfi_def_cfa_register 6
 13083 0004 4883EC10 		subq	$16, %rsp
 13084 0008 48897DF8 		movq	%rdi, -8(%rbp)
 13085 000c 488975F0 		movq	%rsi, -16(%rbp)
 277:/usr/include/boost/exception/info.hpp ****             }
 13086              		.loc 36 277 0
 13087 0010 488B45F0 		movq	-16(%rbp), %rax
 13088 0014 4889C7   		movq	%rax, %rdi
 13089 0017 E8000000 		call	_ZSt4moveIRN5boost10error_infoINS0_11throw_line_EiEEEONSt16remove_referenceIT_E4typeEOS6_
 13089      00
 13090 001c 4889C2   		movq	%rax, %rdx
 13091 001f 488B45F8 		movq	-8(%rbp), %rax
 13092 0023 4889D6   		movq	%rdx, %rsi
 13093 0026 4889C7   		movq	%rax, %rdi
 13094 0029 E8000000 		call	_ZN5boost16exception_detail11set_info_rvINS_10error_infoINS_11throw_line_EiEEE3setINS0_10clon
GAS LISTING /tmp/ccvUPO8Q.s 			page 542


 13094      00
 278:/usr/include/boost/exception/info.hpp **** #endif
 13095              		.loc 36 278 0
 13096 002e C9       		leave
 13097              		.cfi_def_cfa 7, 8
 13098 002f C3       		ret
 13099              		.cfi_endproc
 13100              	.LFE13977:
 13102              		.section	.text._ZN5boost6detail20sp_pointer_constructIKNS_16exception_detail10clone_baseENS2_10clo
 13103              		.weak	_ZN5boost6detail20sp_pointer_constructIKNS_16exception_detail10clone_baseENS2_10clone_implIN
 13105              	_ZN5boost6detail20sp_pointer_constructIKNS_16exception_detail10clone_baseENS2_10clone_implINS2_14ba
 13106              	.LFB13978:
 282:/usr/include/boost/smart_ptr/shared_ptr.hpp **** {
 13107              		.loc 7 282 0
 13108              		.cfi_startproc
 13109 0000 55       		pushq	%rbp
 13110              		.cfi_def_cfa_offset 16
 13111              		.cfi_offset 6, -16
 13112 0001 4889E5   		movq	%rsp, %rbp
 13113              		.cfi_def_cfa_register 6
 13114 0004 4883EC30 		subq	$48, %rsp
 13115 0008 48897DE8 		movq	%rdi, -24(%rbp)
 13116 000c 488975E0 		movq	%rsi, -32(%rbp)
 13117 0010 488955D8 		movq	%rdx, -40(%rbp)
 284:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     boost::detail::sp_enable_shared_from_this( ppx, p, p );
 13118              		.loc 7 284 0
 13119 0014 488B55E0 		movq	-32(%rbp), %rdx
 13120 0018 488D45F8 		leaq	-8(%rbp), %rax
 13121 001c 4889D6   		movq	%rdx, %rsi
 13122 001f 4889C7   		movq	%rax, %rdi
 13123 0022 E8000000 		call	_ZN5boost6detail12shared_countC1INS_16exception_detail10clone_implINS3_14bad_exception_EEEEEP
 13123      00
 13124 0027 488B55D8 		movq	-40(%rbp), %rdx
 13125 002b 488D45F8 		leaq	-8(%rbp), %rax
 13126 002f 4889D6   		movq	%rdx, %rsi
 13127 0032 4889C7   		movq	%rax, %rdi
 13128 0035 E8000000 		call	_ZN5boost6detail12shared_count4swapERS1_
 13128      00
 13129 003a 488D45F8 		leaq	-8(%rbp), %rax
 13130 003e 4889C7   		movq	%rax, %rdi
 13131 0041 E8000000 		call	_ZN5boost6detail12shared_countD1Ev
 13131      00
 285:/usr/include/boost/smart_ptr/shared_ptr.hpp **** }
 13132              		.loc 7 285 0
 13133 0046 488B55E0 		movq	-32(%rbp), %rdx
 13134 004a 488B4DE0 		movq	-32(%rbp), %rcx
 13135 004e 488B45E8 		movq	-24(%rbp), %rax
 13136 0052 4889CE   		movq	%rcx, %rsi
 13137 0055 4889C7   		movq	%rax, %rdi
 13138 0058 B8000000 		movl	$0, %eax
 13138      00
 13139 005d E8000000 		call	_ZN5boost6detail26sp_enable_shared_from_thisEz
 13139      00
 286:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 13140              		.loc 7 286 0
 13141 0062 90       		nop
 13142 0063 C9       		leave
GAS LISTING /tmp/ccvUPO8Q.s 			page 543


 13143              		.cfi_def_cfa 7, 8
 13144 0064 C3       		ret
 13145              		.cfi_endproc
 13146              	.LFE13978:
 13148              		.section	.text._ZNSt16allocator_traitsISaIiEE37select_on_container_copy_constructionERKS0_,"axG",@
 13149              		.weak	_ZNSt16allocator_traitsISaIiEE37select_on_container_copy_constructionERKS0_
 13151              	_ZNSt16allocator_traitsISaIiEE37select_on_container_copy_constructionERKS0_:
 13152              	.LFB14144:
 13153              		.file 42 "/usr/include/c++/6/bits/alloc_traits.h"
   1:/usr/include/c++/6/bits/alloc_traits.h **** // Allocator traits -*- C++ -*-
   2:/usr/include/c++/6/bits/alloc_traits.h **** 
   3:/usr/include/c++/6/bits/alloc_traits.h **** // Copyright (C) 2011-2016 Free Software Foundation, Inc.
   4:/usr/include/c++/6/bits/alloc_traits.h **** //
   5:/usr/include/c++/6/bits/alloc_traits.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/6/bits/alloc_traits.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/6/bits/alloc_traits.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/6/bits/alloc_traits.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/6/bits/alloc_traits.h **** // any later version.
  10:/usr/include/c++/6/bits/alloc_traits.h **** 
  11:/usr/include/c++/6/bits/alloc_traits.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/6/bits/alloc_traits.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/6/bits/alloc_traits.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/6/bits/alloc_traits.h **** // GNU General Public License for more details.
  15:/usr/include/c++/6/bits/alloc_traits.h **** 
  16:/usr/include/c++/6/bits/alloc_traits.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/6/bits/alloc_traits.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/6/bits/alloc_traits.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/6/bits/alloc_traits.h **** 
  20:/usr/include/c++/6/bits/alloc_traits.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/6/bits/alloc_traits.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/6/bits/alloc_traits.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/6/bits/alloc_traits.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/6/bits/alloc_traits.h **** 
  25:/usr/include/c++/6/bits/alloc_traits.h **** /** @file bits/alloc_traits.h
  26:/usr/include/c++/6/bits/alloc_traits.h ****  *  This is an internal header file, included by other library headers.
  27:/usr/include/c++/6/bits/alloc_traits.h ****  *  Do not attempt to use it directly. @headername{memory}
  28:/usr/include/c++/6/bits/alloc_traits.h ****  */
  29:/usr/include/c++/6/bits/alloc_traits.h **** 
  30:/usr/include/c++/6/bits/alloc_traits.h **** #ifndef _ALLOC_TRAITS_H
  31:/usr/include/c++/6/bits/alloc_traits.h **** #define _ALLOC_TRAITS_H 1
  32:/usr/include/c++/6/bits/alloc_traits.h **** 
  33:/usr/include/c++/6/bits/alloc_traits.h **** #if __cplusplus >= 201103L
  34:/usr/include/c++/6/bits/alloc_traits.h **** 
  35:/usr/include/c++/6/bits/alloc_traits.h **** #include <bits/memoryfwd.h>
  36:/usr/include/c++/6/bits/alloc_traits.h **** #include <bits/ptr_traits.h>
  37:/usr/include/c++/6/bits/alloc_traits.h **** #include <ext/numeric_traits.h>
  38:/usr/include/c++/6/bits/alloc_traits.h **** 
  39:/usr/include/c++/6/bits/alloc_traits.h **** #define __cpp_lib_allocator_traits_is_always_equal 201411
  40:/usr/include/c++/6/bits/alloc_traits.h **** 
  41:/usr/include/c++/6/bits/alloc_traits.h **** namespace std _GLIBCXX_VISIBILITY(default)
  42:/usr/include/c++/6/bits/alloc_traits.h **** {
  43:/usr/include/c++/6/bits/alloc_traits.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  44:/usr/include/c++/6/bits/alloc_traits.h **** 
  45:/usr/include/c++/6/bits/alloc_traits.h ****   struct __allocator_traits_base
  46:/usr/include/c++/6/bits/alloc_traits.h ****   {
  47:/usr/include/c++/6/bits/alloc_traits.h ****     template<typename _Tp, typename _Up, typename = void>
  48:/usr/include/c++/6/bits/alloc_traits.h ****       struct __rebind : __replace_first_arg<_Tp, _Up> { };
GAS LISTING /tmp/ccvUPO8Q.s 			page 544


  49:/usr/include/c++/6/bits/alloc_traits.h **** 
  50:/usr/include/c++/6/bits/alloc_traits.h ****     template<typename _Tp, typename _Up>
  51:/usr/include/c++/6/bits/alloc_traits.h ****       struct __rebind<_Tp, _Up,
  52:/usr/include/c++/6/bits/alloc_traits.h **** 		      __void_t<typename _Tp::template rebind<_Up>::other>>
  53:/usr/include/c++/6/bits/alloc_traits.h ****       { using type = typename _Tp::template rebind<_Up>::other; };
  54:/usr/include/c++/6/bits/alloc_traits.h **** 
  55:/usr/include/c++/6/bits/alloc_traits.h ****   protected:
  56:/usr/include/c++/6/bits/alloc_traits.h ****     template<typename _Tp>
  57:/usr/include/c++/6/bits/alloc_traits.h ****       using __pointer = typename _Tp::pointer;
  58:/usr/include/c++/6/bits/alloc_traits.h ****     template<typename _Tp>
  59:/usr/include/c++/6/bits/alloc_traits.h ****       using __c_pointer = typename _Tp::const_pointer;
  60:/usr/include/c++/6/bits/alloc_traits.h ****     template<typename _Tp>
  61:/usr/include/c++/6/bits/alloc_traits.h ****       using __v_pointer = typename _Tp::void_pointer;
  62:/usr/include/c++/6/bits/alloc_traits.h ****     template<typename _Tp>
  63:/usr/include/c++/6/bits/alloc_traits.h ****       using __cv_pointer = typename _Tp::const_void_pointer;
  64:/usr/include/c++/6/bits/alloc_traits.h ****     template<typename _Tp>
  65:/usr/include/c++/6/bits/alloc_traits.h ****       using __pocca = typename _Tp::propagate_on_container_copy_assignment;
  66:/usr/include/c++/6/bits/alloc_traits.h ****     template<typename _Tp>
  67:/usr/include/c++/6/bits/alloc_traits.h ****       using __pocma = typename _Tp::propagate_on_container_move_assignment;
  68:/usr/include/c++/6/bits/alloc_traits.h ****     template<typename _Tp>
  69:/usr/include/c++/6/bits/alloc_traits.h ****       using __pocs = typename _Tp::propagate_on_container_swap;
  70:/usr/include/c++/6/bits/alloc_traits.h ****     template<typename _Tp>
  71:/usr/include/c++/6/bits/alloc_traits.h ****       using __equal = typename _Tp::is_always_equal;
  72:/usr/include/c++/6/bits/alloc_traits.h ****   };
  73:/usr/include/c++/6/bits/alloc_traits.h **** 
  74:/usr/include/c++/6/bits/alloc_traits.h ****   template<typename _Alloc, typename _Up>
  75:/usr/include/c++/6/bits/alloc_traits.h ****     using __alloc_rebind
  76:/usr/include/c++/6/bits/alloc_traits.h ****       = typename __allocator_traits_base::template __rebind<_Alloc, _Up>::type;
  77:/usr/include/c++/6/bits/alloc_traits.h **** 
  78:/usr/include/c++/6/bits/alloc_traits.h ****   /**
  79:/usr/include/c++/6/bits/alloc_traits.h ****    * @brief  Uniform interface to all allocator types.
  80:/usr/include/c++/6/bits/alloc_traits.h ****    * @ingroup allocators
  81:/usr/include/c++/6/bits/alloc_traits.h ****   */
  82:/usr/include/c++/6/bits/alloc_traits.h ****   template<typename _Alloc>
  83:/usr/include/c++/6/bits/alloc_traits.h ****     struct allocator_traits : __allocator_traits_base
  84:/usr/include/c++/6/bits/alloc_traits.h ****     {
  85:/usr/include/c++/6/bits/alloc_traits.h ****       /// The allocator type
  86:/usr/include/c++/6/bits/alloc_traits.h ****       typedef _Alloc allocator_type;
  87:/usr/include/c++/6/bits/alloc_traits.h ****       /// The allocated type
  88:/usr/include/c++/6/bits/alloc_traits.h ****       typedef typename _Alloc::value_type value_type;
  89:/usr/include/c++/6/bits/alloc_traits.h **** 
  90:/usr/include/c++/6/bits/alloc_traits.h ****       /**
  91:/usr/include/c++/6/bits/alloc_traits.h ****        * @brief   The allocator's pointer type.
  92:/usr/include/c++/6/bits/alloc_traits.h ****        *
  93:/usr/include/c++/6/bits/alloc_traits.h ****        * @c Alloc::pointer if that type exists, otherwise @c value_type*
  94:/usr/include/c++/6/bits/alloc_traits.h ****       */
  95:/usr/include/c++/6/bits/alloc_traits.h ****       using pointer = __detected_or_t<value_type*, __pointer, _Alloc>;
  96:/usr/include/c++/6/bits/alloc_traits.h **** 
  97:/usr/include/c++/6/bits/alloc_traits.h ****     private:
  98:/usr/include/c++/6/bits/alloc_traits.h ****       // Select _Func<_Alloc> or pointer_traits<pointer>::rebind<_Tp>
  99:/usr/include/c++/6/bits/alloc_traits.h ****       template<template<typename> class _Func, typename _Tp, typename = void>
 100:/usr/include/c++/6/bits/alloc_traits.h **** 	struct _Ptr
 101:/usr/include/c++/6/bits/alloc_traits.h **** 	{
 102:/usr/include/c++/6/bits/alloc_traits.h **** 	  using type = typename pointer_traits<pointer>::template rebind<_Tp>;
 103:/usr/include/c++/6/bits/alloc_traits.h **** 	};
 104:/usr/include/c++/6/bits/alloc_traits.h **** 
 105:/usr/include/c++/6/bits/alloc_traits.h ****       template<template<typename> class _Func, typename _Tp>
GAS LISTING /tmp/ccvUPO8Q.s 			page 545


 106:/usr/include/c++/6/bits/alloc_traits.h **** 	struct _Ptr<_Func, _Tp, __void_t<_Func<_Alloc>>>
 107:/usr/include/c++/6/bits/alloc_traits.h **** 	{
 108:/usr/include/c++/6/bits/alloc_traits.h **** 	  using type = _Func<_Alloc>;
 109:/usr/include/c++/6/bits/alloc_traits.h **** 	};
 110:/usr/include/c++/6/bits/alloc_traits.h **** 
 111:/usr/include/c++/6/bits/alloc_traits.h ****       // Select _A2::difference_type or pointer_traits<_Ptr>::difference_type
 112:/usr/include/c++/6/bits/alloc_traits.h ****       template<typename _A2, typename _PtrT, typename = void>
 113:/usr/include/c++/6/bits/alloc_traits.h **** 	struct _Diff
 114:/usr/include/c++/6/bits/alloc_traits.h **** 	{ using type = typename pointer_traits<_PtrT>::difference_type; };
 115:/usr/include/c++/6/bits/alloc_traits.h **** 
 116:/usr/include/c++/6/bits/alloc_traits.h ****       template<typename _A2, typename _PtrT>
 117:/usr/include/c++/6/bits/alloc_traits.h **** 	struct _Diff<_A2, _PtrT, __void_t<typename _A2::difference_type>>
 118:/usr/include/c++/6/bits/alloc_traits.h **** 	{ using type = typename _A2::difference_type; };
 119:/usr/include/c++/6/bits/alloc_traits.h **** 
 120:/usr/include/c++/6/bits/alloc_traits.h ****       // Select _A2::size_type or make_unsigned<_DiffT>::type
 121:/usr/include/c++/6/bits/alloc_traits.h ****       template<typename _A2, typename _DiffT, typename = void>
 122:/usr/include/c++/6/bits/alloc_traits.h **** 	struct _Size : make_unsigned<_DiffT> { };
 123:/usr/include/c++/6/bits/alloc_traits.h **** 
 124:/usr/include/c++/6/bits/alloc_traits.h ****       template<typename _A2, typename _DiffT>
 125:/usr/include/c++/6/bits/alloc_traits.h **** 	struct _Size<_A2, _DiffT, __void_t<typename _A2::size_type>>
 126:/usr/include/c++/6/bits/alloc_traits.h **** 	{ using type = typename _A2::size_type; };
 127:/usr/include/c++/6/bits/alloc_traits.h **** 
 128:/usr/include/c++/6/bits/alloc_traits.h ****     public:
 129:/usr/include/c++/6/bits/alloc_traits.h ****       /**
 130:/usr/include/c++/6/bits/alloc_traits.h ****        * @brief   The allocator's const pointer type.
 131:/usr/include/c++/6/bits/alloc_traits.h ****        *
 132:/usr/include/c++/6/bits/alloc_traits.h ****        * @c Alloc::const_pointer if that type exists, otherwise
 133:/usr/include/c++/6/bits/alloc_traits.h ****        * <tt> pointer_traits<pointer>::rebind<const value_type> </tt>
 134:/usr/include/c++/6/bits/alloc_traits.h ****       */
 135:/usr/include/c++/6/bits/alloc_traits.h ****       using const_pointer = typename _Ptr<__c_pointer, const value_type>::type;
 136:/usr/include/c++/6/bits/alloc_traits.h **** 
 137:/usr/include/c++/6/bits/alloc_traits.h ****       /**
 138:/usr/include/c++/6/bits/alloc_traits.h ****        * @brief   The allocator's void pointer type.
 139:/usr/include/c++/6/bits/alloc_traits.h ****        *
 140:/usr/include/c++/6/bits/alloc_traits.h ****        * @c Alloc::void_pointer if that type exists, otherwise
 141:/usr/include/c++/6/bits/alloc_traits.h ****        * <tt> pointer_traits<pointer>::rebind<void> </tt>
 142:/usr/include/c++/6/bits/alloc_traits.h ****       */
 143:/usr/include/c++/6/bits/alloc_traits.h ****       using void_pointer = typename _Ptr<__v_pointer, void>::type;
 144:/usr/include/c++/6/bits/alloc_traits.h **** 
 145:/usr/include/c++/6/bits/alloc_traits.h ****       /**
 146:/usr/include/c++/6/bits/alloc_traits.h ****        * @brief   The allocator's const void pointer type.
 147:/usr/include/c++/6/bits/alloc_traits.h ****        *
 148:/usr/include/c++/6/bits/alloc_traits.h ****        * @c Alloc::const_void_pointer if that type exists, otherwise
 149:/usr/include/c++/6/bits/alloc_traits.h ****        * <tt> pointer_traits<pointer>::rebind<const void> </tt>
 150:/usr/include/c++/6/bits/alloc_traits.h ****       */
 151:/usr/include/c++/6/bits/alloc_traits.h ****       using const_void_pointer = typename _Ptr<__cv_pointer, const void>::type;
 152:/usr/include/c++/6/bits/alloc_traits.h **** 
 153:/usr/include/c++/6/bits/alloc_traits.h ****       /**
 154:/usr/include/c++/6/bits/alloc_traits.h ****        * @brief   The allocator's difference type
 155:/usr/include/c++/6/bits/alloc_traits.h ****        *
 156:/usr/include/c++/6/bits/alloc_traits.h ****        * @c Alloc::difference_type if that type exists, otherwise
 157:/usr/include/c++/6/bits/alloc_traits.h ****        * <tt> pointer_traits<pointer>::difference_type </tt>
 158:/usr/include/c++/6/bits/alloc_traits.h ****       */
 159:/usr/include/c++/6/bits/alloc_traits.h ****       using difference_type = typename _Diff<_Alloc, pointer>::type;
 160:/usr/include/c++/6/bits/alloc_traits.h **** 
 161:/usr/include/c++/6/bits/alloc_traits.h ****       /**
 162:/usr/include/c++/6/bits/alloc_traits.h ****        * @brief   The allocator's size type
GAS LISTING /tmp/ccvUPO8Q.s 			page 546


 163:/usr/include/c++/6/bits/alloc_traits.h ****        *
 164:/usr/include/c++/6/bits/alloc_traits.h ****        * @c Alloc::size_type if that type exists, otherwise
 165:/usr/include/c++/6/bits/alloc_traits.h ****        * <tt> make_unsigned<difference_type>::type </tt>
 166:/usr/include/c++/6/bits/alloc_traits.h ****       */
 167:/usr/include/c++/6/bits/alloc_traits.h ****       using size_type = typename _Size<_Alloc, difference_type>::type;
 168:/usr/include/c++/6/bits/alloc_traits.h **** 
 169:/usr/include/c++/6/bits/alloc_traits.h ****       /**
 170:/usr/include/c++/6/bits/alloc_traits.h ****        * @brief   How the allocator is propagated on copy assignment
 171:/usr/include/c++/6/bits/alloc_traits.h ****        *
 172:/usr/include/c++/6/bits/alloc_traits.h ****        * @c Alloc::propagate_on_container_copy_assignment if that type exists,
 173:/usr/include/c++/6/bits/alloc_traits.h ****        * otherwise @c false_type
 174:/usr/include/c++/6/bits/alloc_traits.h ****       */
 175:/usr/include/c++/6/bits/alloc_traits.h ****       using propagate_on_container_copy_assignment
 176:/usr/include/c++/6/bits/alloc_traits.h **** 	= __detected_or_t<false_type, __pocca, _Alloc>;
 177:/usr/include/c++/6/bits/alloc_traits.h **** 
 178:/usr/include/c++/6/bits/alloc_traits.h ****       /**
 179:/usr/include/c++/6/bits/alloc_traits.h ****        * @brief   How the allocator is propagated on move assignment
 180:/usr/include/c++/6/bits/alloc_traits.h ****        *
 181:/usr/include/c++/6/bits/alloc_traits.h ****        * @c Alloc::propagate_on_container_move_assignment if that type exists,
 182:/usr/include/c++/6/bits/alloc_traits.h ****        * otherwise @c false_type
 183:/usr/include/c++/6/bits/alloc_traits.h ****       */
 184:/usr/include/c++/6/bits/alloc_traits.h ****       using propagate_on_container_move_assignment
 185:/usr/include/c++/6/bits/alloc_traits.h **** 	= __detected_or_t<false_type, __pocma, _Alloc>;
 186:/usr/include/c++/6/bits/alloc_traits.h **** 
 187:/usr/include/c++/6/bits/alloc_traits.h ****       /**
 188:/usr/include/c++/6/bits/alloc_traits.h ****        * @brief   How the allocator is propagated on swap
 189:/usr/include/c++/6/bits/alloc_traits.h ****        *
 190:/usr/include/c++/6/bits/alloc_traits.h ****        * @c Alloc::propagate_on_container_swap if that type exists,
 191:/usr/include/c++/6/bits/alloc_traits.h ****        * otherwise @c false_type
 192:/usr/include/c++/6/bits/alloc_traits.h ****       */
 193:/usr/include/c++/6/bits/alloc_traits.h ****       using propagate_on_container_swap
 194:/usr/include/c++/6/bits/alloc_traits.h **** 	= __detected_or_t<false_type, __pocs, _Alloc>;
 195:/usr/include/c++/6/bits/alloc_traits.h **** 
 196:/usr/include/c++/6/bits/alloc_traits.h ****       /**
 197:/usr/include/c++/6/bits/alloc_traits.h ****        * @brief   Whether all instances of the allocator type compare equal.
 198:/usr/include/c++/6/bits/alloc_traits.h ****        *
 199:/usr/include/c++/6/bits/alloc_traits.h ****        * @c Alloc::is_always_equal if that type exists,
 200:/usr/include/c++/6/bits/alloc_traits.h ****        * otherwise @c is_empty<Alloc>::type
 201:/usr/include/c++/6/bits/alloc_traits.h ****       */
 202:/usr/include/c++/6/bits/alloc_traits.h ****       using is_always_equal
 203:/usr/include/c++/6/bits/alloc_traits.h **** 	= __detected_or_t<typename is_empty<_Alloc>::type, __equal, _Alloc>;
 204:/usr/include/c++/6/bits/alloc_traits.h **** 
 205:/usr/include/c++/6/bits/alloc_traits.h ****       template<typename _Tp>
 206:/usr/include/c++/6/bits/alloc_traits.h **** 	using rebind_alloc = __alloc_rebind<_Alloc, _Tp>;
 207:/usr/include/c++/6/bits/alloc_traits.h ****       template<typename _Tp>
 208:/usr/include/c++/6/bits/alloc_traits.h **** 	using rebind_traits = allocator_traits<rebind_alloc<_Tp>>;
 209:/usr/include/c++/6/bits/alloc_traits.h **** 
 210:/usr/include/c++/6/bits/alloc_traits.h ****     private:
 211:/usr/include/c++/6/bits/alloc_traits.h ****       template<typename _Alloc2>
 212:/usr/include/c++/6/bits/alloc_traits.h **** 	static auto
 213:/usr/include/c++/6/bits/alloc_traits.h **** 	_S_allocate(_Alloc2& __a, size_type __n, const_void_pointer __hint, int)
 214:/usr/include/c++/6/bits/alloc_traits.h **** 	-> decltype(__a.allocate(__n, __hint))
 215:/usr/include/c++/6/bits/alloc_traits.h **** 	{ return __a.allocate(__n, __hint); }
 216:/usr/include/c++/6/bits/alloc_traits.h **** 
 217:/usr/include/c++/6/bits/alloc_traits.h ****       template<typename _Alloc2>
 218:/usr/include/c++/6/bits/alloc_traits.h **** 	static pointer
 219:/usr/include/c++/6/bits/alloc_traits.h **** 	_S_allocate(_Alloc2& __a, size_type __n, const_void_pointer, ...)
GAS LISTING /tmp/ccvUPO8Q.s 			page 547


 220:/usr/include/c++/6/bits/alloc_traits.h **** 	{ return __a.allocate(__n); }
 221:/usr/include/c++/6/bits/alloc_traits.h **** 
 222:/usr/include/c++/6/bits/alloc_traits.h ****       template<typename _Tp, typename... _Args>
 223:/usr/include/c++/6/bits/alloc_traits.h **** 	struct __construct_helper
 224:/usr/include/c++/6/bits/alloc_traits.h **** 	{
 225:/usr/include/c++/6/bits/alloc_traits.h **** 	  template<typename _Alloc2,
 226:/usr/include/c++/6/bits/alloc_traits.h **** 	    typename = decltype(std::declval<_Alloc2*>()->construct(
 227:/usr/include/c++/6/bits/alloc_traits.h **** 		  std::declval<_Tp*>(), std::declval<_Args>()...))>
 228:/usr/include/c++/6/bits/alloc_traits.h **** 	    static true_type __test(int);
 229:/usr/include/c++/6/bits/alloc_traits.h **** 
 230:/usr/include/c++/6/bits/alloc_traits.h **** 	  template<typename>
 231:/usr/include/c++/6/bits/alloc_traits.h **** 	    static false_type __test(...);
 232:/usr/include/c++/6/bits/alloc_traits.h **** 
 233:/usr/include/c++/6/bits/alloc_traits.h **** 	  using type = decltype(__test<_Alloc>(0));
 234:/usr/include/c++/6/bits/alloc_traits.h **** 	};
 235:/usr/include/c++/6/bits/alloc_traits.h **** 
 236:/usr/include/c++/6/bits/alloc_traits.h ****       template<typename _Tp, typename... _Args>
 237:/usr/include/c++/6/bits/alloc_traits.h **** 	using __has_construct
 238:/usr/include/c++/6/bits/alloc_traits.h **** 	  = typename __construct_helper<_Tp, _Args...>::type;
 239:/usr/include/c++/6/bits/alloc_traits.h **** 
 240:/usr/include/c++/6/bits/alloc_traits.h ****       template<typename _Tp, typename... _Args>
 241:/usr/include/c++/6/bits/alloc_traits.h **** 	static _Require<__has_construct<_Tp, _Args...>>
 242:/usr/include/c++/6/bits/alloc_traits.h **** 	_S_construct(_Alloc& __a, _Tp* __p, _Args&&... __args)
 243:/usr/include/c++/6/bits/alloc_traits.h **** 	{ __a.construct(__p, std::forward<_Args>(__args)...); }
 244:/usr/include/c++/6/bits/alloc_traits.h **** 
 245:/usr/include/c++/6/bits/alloc_traits.h ****       template<typename _Tp, typename... _Args>
 246:/usr/include/c++/6/bits/alloc_traits.h **** 	static
 247:/usr/include/c++/6/bits/alloc_traits.h **** 	_Require<__and_<__not_<__has_construct<_Tp, _Args...>>,
 248:/usr/include/c++/6/bits/alloc_traits.h **** 			       is_constructible<_Tp, _Args...>>>
 249:/usr/include/c++/6/bits/alloc_traits.h **** 	_S_construct(_Alloc&, _Tp* __p, _Args&&... __args)
 250:/usr/include/c++/6/bits/alloc_traits.h **** 	{ ::new((void*)__p) _Tp(std::forward<_Args>(__args)...); }
 251:/usr/include/c++/6/bits/alloc_traits.h **** 
 252:/usr/include/c++/6/bits/alloc_traits.h ****       template<typename _Alloc2, typename _Tp>
 253:/usr/include/c++/6/bits/alloc_traits.h **** 	static auto
 254:/usr/include/c++/6/bits/alloc_traits.h **** 	_S_destroy(_Alloc2& __a, _Tp* __p, int)
 255:/usr/include/c++/6/bits/alloc_traits.h **** 	-> decltype(__a.destroy(__p))
 256:/usr/include/c++/6/bits/alloc_traits.h **** 	{ __a.destroy(__p); }
 257:/usr/include/c++/6/bits/alloc_traits.h **** 
 258:/usr/include/c++/6/bits/alloc_traits.h ****       template<typename _Alloc2, typename _Tp>
 259:/usr/include/c++/6/bits/alloc_traits.h **** 	static void
 260:/usr/include/c++/6/bits/alloc_traits.h **** 	_S_destroy(_Alloc2&, _Tp* __p, ...)
 261:/usr/include/c++/6/bits/alloc_traits.h **** 	{ __p->~_Tp(); }
 262:/usr/include/c++/6/bits/alloc_traits.h **** 
 263:/usr/include/c++/6/bits/alloc_traits.h ****       template<typename _Alloc2>
 264:/usr/include/c++/6/bits/alloc_traits.h **** 	static auto
 265:/usr/include/c++/6/bits/alloc_traits.h **** 	_S_max_size(_Alloc2& __a, int)
 266:/usr/include/c++/6/bits/alloc_traits.h **** 	-> decltype(__a.max_size())
 267:/usr/include/c++/6/bits/alloc_traits.h **** 	{ return __a.max_size(); }
 268:/usr/include/c++/6/bits/alloc_traits.h **** 
 269:/usr/include/c++/6/bits/alloc_traits.h ****       template<typename _Alloc2>
 270:/usr/include/c++/6/bits/alloc_traits.h **** 	static size_type
 271:/usr/include/c++/6/bits/alloc_traits.h **** 	_S_max_size(_Alloc2&, ...)
 272:/usr/include/c++/6/bits/alloc_traits.h **** 	{
 273:/usr/include/c++/6/bits/alloc_traits.h **** 	  // _GLIBCXX_RESOLVE_LIB_DEFECTS
 274:/usr/include/c++/6/bits/alloc_traits.h **** 	  // 2466. allocator_traits::max_size() default behavior is incorrect
 275:/usr/include/c++/6/bits/alloc_traits.h **** 	  return __gnu_cxx::__numeric_traits<size_type>::__max
 276:/usr/include/c++/6/bits/alloc_traits.h **** 	    / sizeof(value_type);
GAS LISTING /tmp/ccvUPO8Q.s 			page 548


 277:/usr/include/c++/6/bits/alloc_traits.h **** 	}
 278:/usr/include/c++/6/bits/alloc_traits.h **** 
 279:/usr/include/c++/6/bits/alloc_traits.h ****       template<typename _Alloc2>
 280:/usr/include/c++/6/bits/alloc_traits.h **** 	static auto
 281:/usr/include/c++/6/bits/alloc_traits.h **** 	_S_select(_Alloc2& __a, int)
 282:/usr/include/c++/6/bits/alloc_traits.h **** 	-> decltype(__a.select_on_container_copy_construction())
 283:/usr/include/c++/6/bits/alloc_traits.h **** 	{ return __a.select_on_container_copy_construction(); }
 284:/usr/include/c++/6/bits/alloc_traits.h **** 
 285:/usr/include/c++/6/bits/alloc_traits.h ****       template<typename _Alloc2>
 286:/usr/include/c++/6/bits/alloc_traits.h **** 	static _Alloc2
 287:/usr/include/c++/6/bits/alloc_traits.h **** 	_S_select(_Alloc2& __a, ...)
 288:/usr/include/c++/6/bits/alloc_traits.h **** 	{ return __a; }
 289:/usr/include/c++/6/bits/alloc_traits.h **** 
 290:/usr/include/c++/6/bits/alloc_traits.h ****     public:
 291:/usr/include/c++/6/bits/alloc_traits.h **** 
 292:/usr/include/c++/6/bits/alloc_traits.h ****       /**
 293:/usr/include/c++/6/bits/alloc_traits.h ****        *  @brief  Allocate memory.
 294:/usr/include/c++/6/bits/alloc_traits.h ****        *  @param  __a  An allocator.
 295:/usr/include/c++/6/bits/alloc_traits.h ****        *  @param  __n  The number of objects to allocate space for.
 296:/usr/include/c++/6/bits/alloc_traits.h ****        *
 297:/usr/include/c++/6/bits/alloc_traits.h ****        *  Calls @c a.allocate(n)
 298:/usr/include/c++/6/bits/alloc_traits.h ****       */
 299:/usr/include/c++/6/bits/alloc_traits.h ****       static pointer
 300:/usr/include/c++/6/bits/alloc_traits.h ****       allocate(_Alloc& __a, size_type __n)
 301:/usr/include/c++/6/bits/alloc_traits.h ****       { return __a.allocate(__n); }
 302:/usr/include/c++/6/bits/alloc_traits.h **** 
 303:/usr/include/c++/6/bits/alloc_traits.h ****       /**
 304:/usr/include/c++/6/bits/alloc_traits.h ****        *  @brief  Allocate memory.
 305:/usr/include/c++/6/bits/alloc_traits.h ****        *  @param  __a  An allocator.
 306:/usr/include/c++/6/bits/alloc_traits.h ****        *  @param  __n  The number of objects to allocate space for.
 307:/usr/include/c++/6/bits/alloc_traits.h ****        *  @param  __hint Aid to locality.
 308:/usr/include/c++/6/bits/alloc_traits.h ****        *  @return Memory of suitable size and alignment for @a n objects
 309:/usr/include/c++/6/bits/alloc_traits.h ****        *          of type @c value_type
 310:/usr/include/c++/6/bits/alloc_traits.h ****        *
 311:/usr/include/c++/6/bits/alloc_traits.h ****        *  Returns <tt> a.allocate(n, hint) </tt> if that expression is
 312:/usr/include/c++/6/bits/alloc_traits.h ****        *  well-formed, otherwise returns @c a.allocate(n)
 313:/usr/include/c++/6/bits/alloc_traits.h ****       */
 314:/usr/include/c++/6/bits/alloc_traits.h ****       static pointer
 315:/usr/include/c++/6/bits/alloc_traits.h ****       allocate(_Alloc& __a, size_type __n, const_void_pointer __hint)
 316:/usr/include/c++/6/bits/alloc_traits.h ****       { return _S_allocate(__a, __n, __hint, 0); }
 317:/usr/include/c++/6/bits/alloc_traits.h **** 
 318:/usr/include/c++/6/bits/alloc_traits.h ****       /**
 319:/usr/include/c++/6/bits/alloc_traits.h ****        *  @brief  Deallocate memory.
 320:/usr/include/c++/6/bits/alloc_traits.h ****        *  @param  __a  An allocator.
 321:/usr/include/c++/6/bits/alloc_traits.h ****        *  @param  __p  Pointer to the memory to deallocate.
 322:/usr/include/c++/6/bits/alloc_traits.h ****        *  @param  __n  The number of objects space was allocated for.
 323:/usr/include/c++/6/bits/alloc_traits.h ****        *
 324:/usr/include/c++/6/bits/alloc_traits.h ****        *  Calls <tt> a.deallocate(p, n) </tt>
 325:/usr/include/c++/6/bits/alloc_traits.h ****       */
 326:/usr/include/c++/6/bits/alloc_traits.h ****       static void
 327:/usr/include/c++/6/bits/alloc_traits.h ****       deallocate(_Alloc& __a, pointer __p, size_type __n)
 328:/usr/include/c++/6/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 329:/usr/include/c++/6/bits/alloc_traits.h **** 
 330:/usr/include/c++/6/bits/alloc_traits.h ****       /**
 331:/usr/include/c++/6/bits/alloc_traits.h ****        *  @brief  Construct an object of type @a _Tp
 332:/usr/include/c++/6/bits/alloc_traits.h ****        *  @param  __a  An allocator.
 333:/usr/include/c++/6/bits/alloc_traits.h ****        *  @param  __p  Pointer to memory of suitable size and alignment for Tp
GAS LISTING /tmp/ccvUPO8Q.s 			page 549


 334:/usr/include/c++/6/bits/alloc_traits.h ****        *  @param  __args Constructor arguments.
 335:/usr/include/c++/6/bits/alloc_traits.h ****        *
 336:/usr/include/c++/6/bits/alloc_traits.h ****        *  Calls <tt> __a.construct(__p, std::forward<Args>(__args)...) </tt>
 337:/usr/include/c++/6/bits/alloc_traits.h ****        *  if that expression is well-formed, otherwise uses placement-new
 338:/usr/include/c++/6/bits/alloc_traits.h ****        *  to construct an object of type @a _Tp at location @a __p from the
 339:/usr/include/c++/6/bits/alloc_traits.h ****        *  arguments @a __args...
 340:/usr/include/c++/6/bits/alloc_traits.h ****       */
 341:/usr/include/c++/6/bits/alloc_traits.h ****       template<typename _Tp, typename... _Args>
 342:/usr/include/c++/6/bits/alloc_traits.h **** 	static auto construct(_Alloc& __a, _Tp* __p, _Args&&... __args)
 343:/usr/include/c++/6/bits/alloc_traits.h **** 	-> decltype(_S_construct(__a, __p, std::forward<_Args>(__args)...))
 344:/usr/include/c++/6/bits/alloc_traits.h **** 	{ _S_construct(__a, __p, std::forward<_Args>(__args)...); }
 345:/usr/include/c++/6/bits/alloc_traits.h **** 
 346:/usr/include/c++/6/bits/alloc_traits.h ****       /**
 347:/usr/include/c++/6/bits/alloc_traits.h ****        *  @brief  Destroy an object of type @a _Tp
 348:/usr/include/c++/6/bits/alloc_traits.h ****        *  @param  __a  An allocator.
 349:/usr/include/c++/6/bits/alloc_traits.h ****        *  @param  __p  Pointer to the object to destroy
 350:/usr/include/c++/6/bits/alloc_traits.h ****        *
 351:/usr/include/c++/6/bits/alloc_traits.h ****        *  Calls @c __a.destroy(__p) if that expression is well-formed,
 352:/usr/include/c++/6/bits/alloc_traits.h ****        *  otherwise calls @c __p->~_Tp()
 353:/usr/include/c++/6/bits/alloc_traits.h ****       */
 354:/usr/include/c++/6/bits/alloc_traits.h ****       template<typename _Tp>
 355:/usr/include/c++/6/bits/alloc_traits.h **** 	static void destroy(_Alloc& __a, _Tp* __p)
 356:/usr/include/c++/6/bits/alloc_traits.h **** 	{ _S_destroy(__a, __p, 0); }
 357:/usr/include/c++/6/bits/alloc_traits.h **** 
 358:/usr/include/c++/6/bits/alloc_traits.h ****       /**
 359:/usr/include/c++/6/bits/alloc_traits.h ****        *  @brief  The maximum supported allocation size
 360:/usr/include/c++/6/bits/alloc_traits.h ****        *  @param  __a  An allocator.
 361:/usr/include/c++/6/bits/alloc_traits.h ****        *  @return @c __a.max_size() or @c numeric_limits<size_type>::max()
 362:/usr/include/c++/6/bits/alloc_traits.h ****        *
 363:/usr/include/c++/6/bits/alloc_traits.h ****        *  Returns @c __a.max_size() if that expression is well-formed,
 364:/usr/include/c++/6/bits/alloc_traits.h ****        *  otherwise returns @c numeric_limits<size_type>::max()
 365:/usr/include/c++/6/bits/alloc_traits.h ****       */
 366:/usr/include/c++/6/bits/alloc_traits.h ****       static size_type max_size(const _Alloc& __a) noexcept
 367:/usr/include/c++/6/bits/alloc_traits.h ****       { return _S_max_size(__a, 0); }
 368:/usr/include/c++/6/bits/alloc_traits.h **** 
 369:/usr/include/c++/6/bits/alloc_traits.h ****       /**
 370:/usr/include/c++/6/bits/alloc_traits.h ****        *  @brief  Obtain an allocator to use when copying a container.
 371:/usr/include/c++/6/bits/alloc_traits.h ****        *  @param  __rhs  An allocator.
 372:/usr/include/c++/6/bits/alloc_traits.h ****        *  @return @c __rhs.select_on_container_copy_construction() or @a __rhs
 373:/usr/include/c++/6/bits/alloc_traits.h ****        *
 374:/usr/include/c++/6/bits/alloc_traits.h ****        *  Returns @c __rhs.select_on_container_copy_construction() if that
 375:/usr/include/c++/6/bits/alloc_traits.h ****        *  expression is well-formed, otherwise returns @a __rhs
 376:/usr/include/c++/6/bits/alloc_traits.h ****       */
 377:/usr/include/c++/6/bits/alloc_traits.h ****       static _Alloc
 378:/usr/include/c++/6/bits/alloc_traits.h ****       select_on_container_copy_construction(const _Alloc& __rhs)
 379:/usr/include/c++/6/bits/alloc_traits.h ****       { return _S_select(__rhs, 0); }
 380:/usr/include/c++/6/bits/alloc_traits.h ****     };
 381:/usr/include/c++/6/bits/alloc_traits.h **** 
 382:/usr/include/c++/6/bits/alloc_traits.h ****   /// Partial specialization for std::allocator.
 383:/usr/include/c++/6/bits/alloc_traits.h ****   template<typename _Tp>
 384:/usr/include/c++/6/bits/alloc_traits.h ****     struct allocator_traits<allocator<_Tp>>
 385:/usr/include/c++/6/bits/alloc_traits.h ****     {
 386:/usr/include/c++/6/bits/alloc_traits.h ****       /// The allocator type
 387:/usr/include/c++/6/bits/alloc_traits.h ****       using allocator_type = allocator<_Tp>;
 388:/usr/include/c++/6/bits/alloc_traits.h ****       /// The allocated type
 389:/usr/include/c++/6/bits/alloc_traits.h ****       using value_type = _Tp;
 390:/usr/include/c++/6/bits/alloc_traits.h **** 
GAS LISTING /tmp/ccvUPO8Q.s 			page 550


 391:/usr/include/c++/6/bits/alloc_traits.h ****       /// The allocator's pointer type.
 392:/usr/include/c++/6/bits/alloc_traits.h ****       using pointer = _Tp*;
 393:/usr/include/c++/6/bits/alloc_traits.h **** 
 394:/usr/include/c++/6/bits/alloc_traits.h ****       /// The allocator's const pointer type.
 395:/usr/include/c++/6/bits/alloc_traits.h ****       using const_pointer = const _Tp*;
 396:/usr/include/c++/6/bits/alloc_traits.h **** 
 397:/usr/include/c++/6/bits/alloc_traits.h ****       /// The allocator's void pointer type.
 398:/usr/include/c++/6/bits/alloc_traits.h ****       using void_pointer = void*;
 399:/usr/include/c++/6/bits/alloc_traits.h **** 
 400:/usr/include/c++/6/bits/alloc_traits.h ****       /// The allocator's const void pointer type.
 401:/usr/include/c++/6/bits/alloc_traits.h ****       using const_void_pointer = const void*;
 402:/usr/include/c++/6/bits/alloc_traits.h **** 
 403:/usr/include/c++/6/bits/alloc_traits.h ****       /// The allocator's difference type
 404:/usr/include/c++/6/bits/alloc_traits.h ****       using difference_type = std::ptrdiff_t;
 405:/usr/include/c++/6/bits/alloc_traits.h **** 
 406:/usr/include/c++/6/bits/alloc_traits.h ****       /// The allocator's size type
 407:/usr/include/c++/6/bits/alloc_traits.h ****       using size_type = std::size_t;
 408:/usr/include/c++/6/bits/alloc_traits.h **** 
 409:/usr/include/c++/6/bits/alloc_traits.h ****       /// How the allocator is propagated on copy assignment
 410:/usr/include/c++/6/bits/alloc_traits.h ****       using propagate_on_container_copy_assignment = false_type;
 411:/usr/include/c++/6/bits/alloc_traits.h **** 
 412:/usr/include/c++/6/bits/alloc_traits.h ****       /// How the allocator is propagated on move assignment
 413:/usr/include/c++/6/bits/alloc_traits.h ****       using propagate_on_container_move_assignment = true_type;
 414:/usr/include/c++/6/bits/alloc_traits.h **** 
 415:/usr/include/c++/6/bits/alloc_traits.h ****       /// How the allocator is propagated on swap
 416:/usr/include/c++/6/bits/alloc_traits.h ****       using propagate_on_container_swap = false_type;
 417:/usr/include/c++/6/bits/alloc_traits.h **** 
 418:/usr/include/c++/6/bits/alloc_traits.h ****       /// Whether all instances of the allocator type compare equal.
 419:/usr/include/c++/6/bits/alloc_traits.h ****       using is_always_equal = true_type;
 420:/usr/include/c++/6/bits/alloc_traits.h **** 
 421:/usr/include/c++/6/bits/alloc_traits.h ****       template<typename _Up>
 422:/usr/include/c++/6/bits/alloc_traits.h **** 	using rebind_alloc = allocator<_Up>;
 423:/usr/include/c++/6/bits/alloc_traits.h **** 
 424:/usr/include/c++/6/bits/alloc_traits.h ****       template<typename _Up>
 425:/usr/include/c++/6/bits/alloc_traits.h **** 	using rebind_traits = allocator_traits<allocator<_Up>>;
 426:/usr/include/c++/6/bits/alloc_traits.h **** 
 427:/usr/include/c++/6/bits/alloc_traits.h ****       /**
 428:/usr/include/c++/6/bits/alloc_traits.h ****        *  @brief  Allocate memory.
 429:/usr/include/c++/6/bits/alloc_traits.h ****        *  @param  __a  An allocator.
 430:/usr/include/c++/6/bits/alloc_traits.h ****        *  @param  __n  The number of objects to allocate space for.
 431:/usr/include/c++/6/bits/alloc_traits.h ****        *
 432:/usr/include/c++/6/bits/alloc_traits.h ****        *  Calls @c a.allocate(n)
 433:/usr/include/c++/6/bits/alloc_traits.h ****       */
 434:/usr/include/c++/6/bits/alloc_traits.h ****       static pointer
 435:/usr/include/c++/6/bits/alloc_traits.h ****       allocate(allocator_type& __a, size_type __n)
 436:/usr/include/c++/6/bits/alloc_traits.h ****       { return __a.allocate(__n); }
 437:/usr/include/c++/6/bits/alloc_traits.h **** 
 438:/usr/include/c++/6/bits/alloc_traits.h ****       /**
 439:/usr/include/c++/6/bits/alloc_traits.h ****        *  @brief  Allocate memory.
 440:/usr/include/c++/6/bits/alloc_traits.h ****        *  @param  __a  An allocator.
 441:/usr/include/c++/6/bits/alloc_traits.h ****        *  @param  __n  The number of objects to allocate space for.
 442:/usr/include/c++/6/bits/alloc_traits.h ****        *  @param  __hint Aid to locality.
 443:/usr/include/c++/6/bits/alloc_traits.h ****        *  @return Memory of suitable size and alignment for @a n objects
 444:/usr/include/c++/6/bits/alloc_traits.h ****        *          of type @c value_type
 445:/usr/include/c++/6/bits/alloc_traits.h ****        *
 446:/usr/include/c++/6/bits/alloc_traits.h ****        *  Returns <tt> a.allocate(n, hint) </tt>
 447:/usr/include/c++/6/bits/alloc_traits.h ****       */
GAS LISTING /tmp/ccvUPO8Q.s 			page 551


 448:/usr/include/c++/6/bits/alloc_traits.h ****       static pointer
 449:/usr/include/c++/6/bits/alloc_traits.h ****       allocate(allocator_type& __a, size_type __n, const_void_pointer __hint)
 450:/usr/include/c++/6/bits/alloc_traits.h ****       { return __a.allocate(__n, __hint); }
 451:/usr/include/c++/6/bits/alloc_traits.h **** 
 452:/usr/include/c++/6/bits/alloc_traits.h ****       /**
 453:/usr/include/c++/6/bits/alloc_traits.h ****        *  @brief  Deallocate memory.
 454:/usr/include/c++/6/bits/alloc_traits.h ****        *  @param  __a  An allocator.
 455:/usr/include/c++/6/bits/alloc_traits.h ****        *  @param  __p  Pointer to the memory to deallocate.
 456:/usr/include/c++/6/bits/alloc_traits.h ****        *  @param  __n  The number of objects space was allocated for.
 457:/usr/include/c++/6/bits/alloc_traits.h ****        *
 458:/usr/include/c++/6/bits/alloc_traits.h ****        *  Calls <tt> a.deallocate(p, n) </tt>
 459:/usr/include/c++/6/bits/alloc_traits.h ****       */
 460:/usr/include/c++/6/bits/alloc_traits.h ****       static void
 461:/usr/include/c++/6/bits/alloc_traits.h ****       deallocate(allocator_type& __a, pointer __p, size_type __n)
 462:/usr/include/c++/6/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 463:/usr/include/c++/6/bits/alloc_traits.h **** 
 464:/usr/include/c++/6/bits/alloc_traits.h ****       /**
 465:/usr/include/c++/6/bits/alloc_traits.h ****        *  @brief  Construct an object of type @a _Up
 466:/usr/include/c++/6/bits/alloc_traits.h ****        *  @param  __a  An allocator.
 467:/usr/include/c++/6/bits/alloc_traits.h ****        *  @param  __p  Pointer to memory of suitable size and alignment for Tp
 468:/usr/include/c++/6/bits/alloc_traits.h ****        *  @param  __args Constructor arguments.
 469:/usr/include/c++/6/bits/alloc_traits.h ****        *
 470:/usr/include/c++/6/bits/alloc_traits.h ****        *  Calls <tt> __a.construct(__p, std::forward<Args>(__args)...) </tt>
 471:/usr/include/c++/6/bits/alloc_traits.h ****       */
 472:/usr/include/c++/6/bits/alloc_traits.h ****       template<typename _Up, typename... _Args>
 473:/usr/include/c++/6/bits/alloc_traits.h **** 	static void
 474:/usr/include/c++/6/bits/alloc_traits.h **** 	construct(allocator_type& __a, _Up* __p, _Args&&... __args)
 475:/usr/include/c++/6/bits/alloc_traits.h **** 	{ __a.construct(__p, std::forward<_Args>(__args)...); }
 476:/usr/include/c++/6/bits/alloc_traits.h **** 
 477:/usr/include/c++/6/bits/alloc_traits.h ****       /**
 478:/usr/include/c++/6/bits/alloc_traits.h ****        *  @brief  Destroy an object of type @a _Up
 479:/usr/include/c++/6/bits/alloc_traits.h ****        *  @param  __a  An allocator.
 480:/usr/include/c++/6/bits/alloc_traits.h ****        *  @param  __p  Pointer to the object to destroy
 481:/usr/include/c++/6/bits/alloc_traits.h ****        *
 482:/usr/include/c++/6/bits/alloc_traits.h ****        *  Calls @c __a.destroy(__p).
 483:/usr/include/c++/6/bits/alloc_traits.h ****       */
 484:/usr/include/c++/6/bits/alloc_traits.h ****       template<typename _Up>
 485:/usr/include/c++/6/bits/alloc_traits.h **** 	static void
 486:/usr/include/c++/6/bits/alloc_traits.h **** 	destroy(allocator_type& __a, _Up* __p)
 487:/usr/include/c++/6/bits/alloc_traits.h **** 	{ __a.destroy(__p); }
 488:/usr/include/c++/6/bits/alloc_traits.h **** 
 489:/usr/include/c++/6/bits/alloc_traits.h ****       /**
 490:/usr/include/c++/6/bits/alloc_traits.h ****        *  @brief  The maximum supported allocation size
 491:/usr/include/c++/6/bits/alloc_traits.h ****        *  @param  __a  An allocator.
 492:/usr/include/c++/6/bits/alloc_traits.h ****        *  @return @c __a.max_size()
 493:/usr/include/c++/6/bits/alloc_traits.h ****       */
 494:/usr/include/c++/6/bits/alloc_traits.h ****       static size_type
 495:/usr/include/c++/6/bits/alloc_traits.h ****       max_size(const allocator_type& __a) noexcept
 496:/usr/include/c++/6/bits/alloc_traits.h ****       { return __a.max_size(); }
 497:/usr/include/c++/6/bits/alloc_traits.h **** 
 498:/usr/include/c++/6/bits/alloc_traits.h ****       /**
 499:/usr/include/c++/6/bits/alloc_traits.h ****        *  @brief  Obtain an allocator to use when copying a container.
 500:/usr/include/c++/6/bits/alloc_traits.h ****        *  @param  __rhs  An allocator.
 501:/usr/include/c++/6/bits/alloc_traits.h ****        *  @return @c __rhs
 502:/usr/include/c++/6/bits/alloc_traits.h ****       */
 503:/usr/include/c++/6/bits/alloc_traits.h ****       static allocator_type
 504:/usr/include/c++/6/bits/alloc_traits.h ****       select_on_container_copy_construction(const allocator_type& __rhs)
GAS LISTING /tmp/ccvUPO8Q.s 			page 552


 13154              		.loc 42 504 0
 13155              		.cfi_startproc
 13156 0000 55       		pushq	%rbp
 13157              		.cfi_def_cfa_offset 16
 13158              		.cfi_offset 6, -16
 13159 0001 4889E5   		movq	%rsp, %rbp
 13160              		.cfi_def_cfa_register 6
 13161 0004 4883EC10 		subq	$16, %rsp
 13162 0008 48897DF8 		movq	%rdi, -8(%rbp)
 13163 000c 488975F0 		movq	%rsi, -16(%rbp)
 505:/usr/include/c++/6/bits/alloc_traits.h ****       { return __rhs; }
 13164              		.loc 42 505 0
 13165 0010 488B55F0 		movq	-16(%rbp), %rdx
 13166 0014 488B45F8 		movq	-8(%rbp), %rax
 13167 0018 4889D6   		movq	%rdx, %rsi
 13168 001b 4889C7   		movq	%rax, %rdi
 13169 001e E8000000 		call	_ZNSaIiEC1ERKS_
 13169      00
 13170 0023 488B45F8 		movq	-8(%rbp), %rax
 13171 0027 C9       		leave
 13172              		.cfi_def_cfa 7, 8
 13173 0028 C3       		ret
 13174              		.cfi_endproc
 13175              	.LFE14144:
 13177              		.section	.text._ZNSaIiEC2ERKS_,"axG",@progbits,_ZNSaIiEC5ERKS_,comdat
 13178              		.align 2
 13179              		.weak	_ZNSaIiEC2ERKS_
 13181              	_ZNSaIiEC2ERKS_:
 13182              	.LFB14146:
 133:/usr/include/c++/6/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 13183              		.loc 38 133 0
 13184              		.cfi_startproc
 13185 0000 55       		pushq	%rbp
 13186              		.cfi_def_cfa_offset 16
 13187              		.cfi_offset 6, -16
 13188 0001 4889E5   		movq	%rsp, %rbp
 13189              		.cfi_def_cfa_register 6
 13190 0004 4883EC10 		subq	$16, %rsp
 13191 0008 48897DF8 		movq	%rdi, -8(%rbp)
 13192 000c 488975F0 		movq	%rsi, -16(%rbp)
 13193              	.LBB125:
 134:/usr/include/c++/6/bits/allocator.h **** 
 13194              		.loc 38 134 0
 13195 0010 488B55F0 		movq	-16(%rbp), %rdx
 13196 0014 488B45F8 		movq	-8(%rbp), %rax
 13197 0018 4889D6   		movq	%rdx, %rsi
 13198 001b 4889C7   		movq	%rax, %rdi
 13199 001e E8000000 		call	_ZN9__gnu_cxx13new_allocatorIiEC2ERKS1_
 13199      00
 13200              	.LBE125:
 13201 0023 90       		nop
 13202 0024 C9       		leave
 13203              		.cfi_def_cfa 7, 8
 13204 0025 C3       		ret
 13205              		.cfi_endproc
 13206              	.LFE14146:
 13208              		.weak	_ZNSaIiEC1ERKS_
GAS LISTING /tmp/ccvUPO8Q.s 			page 553


 13209              		.set	_ZNSaIiEC1ERKS_,_ZNSaIiEC2ERKS_
 13210              		.section	.text._ZN9__gnu_cxx13new_allocatorIiED2Ev,"axG",@progbits,_ZN9__gnu_cxx13new_allocatorIiE
 13211              		.align 2
 13212              		.weak	_ZN9__gnu_cxx13new_allocatorIiED2Ev
 13214              	_ZN9__gnu_cxx13new_allocatorIiED2Ev:
 13215              	.LFB14149:
 13216              		.file 43 "/usr/include/c++/6/ext/new_allocator.h"
   1:/usr/include/c++/6/ext/new_allocator.h **** // Allocator that wraps operator new -*- C++ -*-
   2:/usr/include/c++/6/ext/new_allocator.h **** 
   3:/usr/include/c++/6/ext/new_allocator.h **** // Copyright (C) 2001-2016 Free Software Foundation, Inc.
   4:/usr/include/c++/6/ext/new_allocator.h **** //
   5:/usr/include/c++/6/ext/new_allocator.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/6/ext/new_allocator.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/6/ext/new_allocator.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/6/ext/new_allocator.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/6/ext/new_allocator.h **** // any later version.
  10:/usr/include/c++/6/ext/new_allocator.h **** 
  11:/usr/include/c++/6/ext/new_allocator.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/6/ext/new_allocator.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/6/ext/new_allocator.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/6/ext/new_allocator.h **** // GNU General Public License for more details.
  15:/usr/include/c++/6/ext/new_allocator.h **** 
  16:/usr/include/c++/6/ext/new_allocator.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/6/ext/new_allocator.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/6/ext/new_allocator.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/6/ext/new_allocator.h **** 
  20:/usr/include/c++/6/ext/new_allocator.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/6/ext/new_allocator.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/6/ext/new_allocator.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/6/ext/new_allocator.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/6/ext/new_allocator.h **** 
  25:/usr/include/c++/6/ext/new_allocator.h **** /** @file ext/new_allocator.h
  26:/usr/include/c++/6/ext/new_allocator.h ****  *  This file is a GNU extension to the Standard C++ Library.
  27:/usr/include/c++/6/ext/new_allocator.h ****  */
  28:/usr/include/c++/6/ext/new_allocator.h **** 
  29:/usr/include/c++/6/ext/new_allocator.h **** #ifndef _NEW_ALLOCATOR_H
  30:/usr/include/c++/6/ext/new_allocator.h **** #define _NEW_ALLOCATOR_H 1
  31:/usr/include/c++/6/ext/new_allocator.h **** 
  32:/usr/include/c++/6/ext/new_allocator.h **** #include <bits/c++config.h>
  33:/usr/include/c++/6/ext/new_allocator.h **** #include <new>
  34:/usr/include/c++/6/ext/new_allocator.h **** #include <bits/functexcept.h>
  35:/usr/include/c++/6/ext/new_allocator.h **** #include <bits/move.h>
  36:/usr/include/c++/6/ext/new_allocator.h **** #if __cplusplus >= 201103L
  37:/usr/include/c++/6/ext/new_allocator.h **** #include <type_traits>
  38:/usr/include/c++/6/ext/new_allocator.h **** #endif
  39:/usr/include/c++/6/ext/new_allocator.h **** 
  40:/usr/include/c++/6/ext/new_allocator.h **** namespace __gnu_cxx _GLIBCXX_VISIBILITY(default)
  41:/usr/include/c++/6/ext/new_allocator.h **** {
  42:/usr/include/c++/6/ext/new_allocator.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  43:/usr/include/c++/6/ext/new_allocator.h **** 
  44:/usr/include/c++/6/ext/new_allocator.h ****   using std::size_t;
  45:/usr/include/c++/6/ext/new_allocator.h ****   using std::ptrdiff_t;
  46:/usr/include/c++/6/ext/new_allocator.h **** 
  47:/usr/include/c++/6/ext/new_allocator.h ****   /**
  48:/usr/include/c++/6/ext/new_allocator.h ****    *  @brief  An allocator that uses global new, as per [20.4].
  49:/usr/include/c++/6/ext/new_allocator.h ****    *  @ingroup allocators
  50:/usr/include/c++/6/ext/new_allocator.h ****    *
GAS LISTING /tmp/ccvUPO8Q.s 			page 554


  51:/usr/include/c++/6/ext/new_allocator.h ****    *  This is precisely the allocator defined in the C++ Standard. 
  52:/usr/include/c++/6/ext/new_allocator.h ****    *    - all allocation calls operator new
  53:/usr/include/c++/6/ext/new_allocator.h ****    *    - all deallocation calls operator delete
  54:/usr/include/c++/6/ext/new_allocator.h ****    *
  55:/usr/include/c++/6/ext/new_allocator.h ****    *  @tparam  _Tp  Type of allocated object.
  56:/usr/include/c++/6/ext/new_allocator.h ****    */
  57:/usr/include/c++/6/ext/new_allocator.h ****   template<typename _Tp>
  58:/usr/include/c++/6/ext/new_allocator.h ****     class new_allocator
  59:/usr/include/c++/6/ext/new_allocator.h ****     {
  60:/usr/include/c++/6/ext/new_allocator.h ****     public:
  61:/usr/include/c++/6/ext/new_allocator.h ****       typedef size_t     size_type;
  62:/usr/include/c++/6/ext/new_allocator.h ****       typedef ptrdiff_t  difference_type;
  63:/usr/include/c++/6/ext/new_allocator.h ****       typedef _Tp*       pointer;
  64:/usr/include/c++/6/ext/new_allocator.h ****       typedef const _Tp* const_pointer;
  65:/usr/include/c++/6/ext/new_allocator.h ****       typedef _Tp&       reference;
  66:/usr/include/c++/6/ext/new_allocator.h ****       typedef const _Tp& const_reference;
  67:/usr/include/c++/6/ext/new_allocator.h ****       typedef _Tp        value_type;
  68:/usr/include/c++/6/ext/new_allocator.h **** 
  69:/usr/include/c++/6/ext/new_allocator.h ****       template<typename _Tp1>
  70:/usr/include/c++/6/ext/new_allocator.h ****         struct rebind
  71:/usr/include/c++/6/ext/new_allocator.h ****         { typedef new_allocator<_Tp1> other; };
  72:/usr/include/c++/6/ext/new_allocator.h **** 
  73:/usr/include/c++/6/ext/new_allocator.h **** #if __cplusplus >= 201103L
  74:/usr/include/c++/6/ext/new_allocator.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
  75:/usr/include/c++/6/ext/new_allocator.h ****       // 2103. propagate_on_container_move_assignment
  76:/usr/include/c++/6/ext/new_allocator.h ****       typedef std::true_type propagate_on_container_move_assignment;
  77:/usr/include/c++/6/ext/new_allocator.h **** #endif
  78:/usr/include/c++/6/ext/new_allocator.h **** 
  79:/usr/include/c++/6/ext/new_allocator.h ****       new_allocator() _GLIBCXX_USE_NOEXCEPT { }
  80:/usr/include/c++/6/ext/new_allocator.h **** 
  81:/usr/include/c++/6/ext/new_allocator.h ****       new_allocator(const new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
  82:/usr/include/c++/6/ext/new_allocator.h **** 
  83:/usr/include/c++/6/ext/new_allocator.h ****       template<typename _Tp1>
  84:/usr/include/c++/6/ext/new_allocator.h ****         new_allocator(const new_allocator<_Tp1>&) _GLIBCXX_USE_NOEXCEPT { }
  85:/usr/include/c++/6/ext/new_allocator.h **** 
  86:/usr/include/c++/6/ext/new_allocator.h ****       ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
 13217              		.loc 43 86 0
 13218              		.cfi_startproc
 13219 0000 55       		pushq	%rbp
 13220              		.cfi_def_cfa_offset 16
 13221              		.cfi_offset 6, -16
 13222 0001 4889E5   		movq	%rsp, %rbp
 13223              		.cfi_def_cfa_register 6
 13224 0004 48897DF8 		movq	%rdi, -8(%rbp)
 13225              		.loc 43 86 0
 13226 0008 90       		nop
 13227 0009 5D       		popq	%rbp
 13228              		.cfi_def_cfa 7, 8
 13229 000a C3       		ret
 13230              		.cfi_endproc
 13231              	.LFE14149:
 13233              		.weak	_ZN9__gnu_cxx13new_allocatorIiED1Ev
 13234              		.set	_ZN9__gnu_cxx13new_allocatorIiED1Ev,_ZN9__gnu_cxx13new_allocatorIiED2Ev
 13235              		.section	.text._ZNSt12_Vector_baseIiSaIiEE12_Vector_implC2ERKS0_,"axG",@progbits,_ZNSt12_Vector_ba
 13236              		.align 2
 13237              		.weak	_ZNSt12_Vector_baseIiSaIiEE12_Vector_implC2ERKS0_
 13239              	_ZNSt12_Vector_baseIiSaIiEE12_Vector_implC2ERKS0_:
GAS LISTING /tmp/ccvUPO8Q.s 			page 555


 13240              	.LFB14152:
  90:/usr/include/c++/6/bits/stl_vector.h **** 	: _Tp_alloc_type(__a), _M_start(), _M_finish(), _M_end_of_storage()
 13241              		.loc 30 90 0
 13242              		.cfi_startproc
 13243 0000 55       		pushq	%rbp
 13244              		.cfi_def_cfa_offset 16
 13245              		.cfi_offset 6, -16
 13246 0001 4889E5   		movq	%rsp, %rbp
 13247              		.cfi_def_cfa_register 6
 13248 0004 4883EC10 		subq	$16, %rsp
 13249 0008 48897DF8 		movq	%rdi, -8(%rbp)
 13250 000c 488975F0 		movq	%rsi, -16(%rbp)
 13251              	.LBB126:
  91:/usr/include/c++/6/bits/stl_vector.h **** 	{ }
 13252              		.loc 30 91 0
 13253 0010 488B55F0 		movq	-16(%rbp), %rdx
 13254 0014 488B45F8 		movq	-8(%rbp), %rax
 13255 0018 4889D6   		movq	%rdx, %rsi
 13256 001b 4889C7   		movq	%rax, %rdi
 13257 001e E8000000 		call	_ZNSaIiEC2ERKS_
 13257      00
 13258 0023 488B45F8 		movq	-8(%rbp), %rax
 13259 0027 48C70000 		movq	$0, (%rax)
 13259      000000
 13260 002e 488B45F8 		movq	-8(%rbp), %rax
 13261 0032 48C74008 		movq	$0, 8(%rax)
 13261      00000000 
 13262 003a 488B45F8 		movq	-8(%rbp), %rax
 13263 003e 48C74010 		movq	$0, 16(%rax)
 13263      00000000 
 13264              	.LBE126:
  92:/usr/include/c++/6/bits/stl_vector.h **** 
 13265              		.loc 30 92 0
 13266 0046 90       		nop
 13267 0047 C9       		leave
 13268              		.cfi_def_cfa 7, 8
 13269 0048 C3       		ret
 13270              		.cfi_endproc
 13271              	.LFE14152:
 13273              		.weak	_ZNSt12_Vector_baseIiSaIiEE12_Vector_implC1ERKS0_
 13274              		.set	_ZNSt12_Vector_baseIiSaIiEE12_Vector_implC1ERKS0_,_ZNSt12_Vector_baseIiSaIiEE12_Vector_implC2
 13275              		.section	.text._ZNSt12_Vector_baseIiSaIiEE17_M_create_storageEm,"axG",@progbits,_ZNSt12_Vector_bas
 13276              		.align 2
 13277              		.weak	_ZNSt12_Vector_baseIiSaIiEE17_M_create_storageEm
 13279              	_ZNSt12_Vector_baseIiSaIiEE17_M_create_storageEm:
 13280              	.LFB14154:
 183:/usr/include/c++/6/bits/stl_vector.h ****       {
 13281              		.loc 30 183 0
 13282              		.cfi_startproc
 13283 0000 55       		pushq	%rbp
 13284              		.cfi_def_cfa_offset 16
 13285              		.cfi_offset 6, -16
 13286 0001 4889E5   		movq	%rsp, %rbp
 13287              		.cfi_def_cfa_register 6
 13288 0004 4883EC10 		subq	$16, %rsp
 13289 0008 48897DF8 		movq	%rdi, -8(%rbp)
 13290 000c 488975F0 		movq	%rsi, -16(%rbp)
GAS LISTING /tmp/ccvUPO8Q.s 			page 556


 185:/usr/include/c++/6/bits/stl_vector.h **** 	this->_M_impl._M_finish = this->_M_impl._M_start;
 13291              		.loc 30 185 0
 13292 0010 488B55F0 		movq	-16(%rbp), %rdx
 13293 0014 488B45F8 		movq	-8(%rbp), %rax
 13294 0018 4889D6   		movq	%rdx, %rsi
 13295 001b 4889C7   		movq	%rax, %rdi
 13296 001e E8000000 		call	_ZNSt12_Vector_baseIiSaIiEE11_M_allocateEm
 13296      00
 13297 0023 4889C2   		movq	%rax, %rdx
 13298 0026 488B45F8 		movq	-8(%rbp), %rax
 13299 002a 488910   		movq	%rdx, (%rax)
 186:/usr/include/c++/6/bits/stl_vector.h **** 	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
 13300              		.loc 30 186 0
 13301 002d 488B45F8 		movq	-8(%rbp), %rax
 13302 0031 488B10   		movq	(%rax), %rdx
 13303 0034 488B45F8 		movq	-8(%rbp), %rax
 13304 0038 48895008 		movq	%rdx, 8(%rax)
 187:/usr/include/c++/6/bits/stl_vector.h ****       }
 13305              		.loc 30 187 0
 13306 003c 488B45F8 		movq	-8(%rbp), %rax
 13307 0040 488B00   		movq	(%rax), %rax
 13308 0043 488B55F0 		movq	-16(%rbp), %rdx
 13309 0047 48C1E202 		salq	$2, %rdx
 13310 004b 4801C2   		addq	%rax, %rdx
 13311 004e 488B45F8 		movq	-8(%rbp), %rax
 13312 0052 48895010 		movq	%rdx, 16(%rax)
 188:/usr/include/c++/6/bits/stl_vector.h ****     };
 13313              		.loc 30 188 0
 13314 0056 90       		nop
 13315 0057 C9       		leave
 13316              		.cfi_def_cfa 7, 8
 13317 0058 C3       		ret
 13318              		.cfi_endproc
 13319              	.LFE14154:
 13321              		.section	.text._ZNSt12_Vector_baseIiSaIiEE13_M_deallocateEPim,"axG",@progbits,_ZNSt12_Vector_baseI
 13322              		.align 2
 13323              		.weak	_ZNSt12_Vector_baseIiSaIiEE13_M_deallocateEPim
 13325              	_ZNSt12_Vector_baseIiSaIiEE13_M_deallocateEPim:
 13326              	.LFB14155:
 174:/usr/include/c++/6/bits/stl_vector.h ****       {
 13327              		.loc 30 174 0
 13328              		.cfi_startproc
 13329 0000 55       		pushq	%rbp
 13330              		.cfi_def_cfa_offset 16
 13331              		.cfi_offset 6, -16
 13332 0001 4889E5   		movq	%rsp, %rbp
 13333              		.cfi_def_cfa_register 6
 13334 0004 4883EC20 		subq	$32, %rsp
 13335 0008 48897DF8 		movq	%rdi, -8(%rbp)
 13336 000c 488975F0 		movq	%rsi, -16(%rbp)
 13337 0010 488955E8 		movq	%rdx, -24(%rbp)
 177:/usr/include/c++/6/bits/stl_vector.h **** 	  _Tr::deallocate(_M_impl, __p, __n);
 13338              		.loc 30 177 0
 13339 0014 48837DF0 		cmpq	$0, -16(%rbp)
 13339      00
 13340 0019 7417     		je	.L650
 178:/usr/include/c++/6/bits/stl_vector.h ****       }
GAS LISTING /tmp/ccvUPO8Q.s 			page 557


 13341              		.loc 30 178 0
 13342 001b 488B45F8 		movq	-8(%rbp), %rax
 13343 001f 488B55E8 		movq	-24(%rbp), %rdx
 13344 0023 488B4DF0 		movq	-16(%rbp), %rcx
 13345 0027 4889CE   		movq	%rcx, %rsi
 13346 002a 4889C7   		movq	%rax, %rdi
 13347 002d E8000000 		call	_ZNSt16allocator_traitsISaIiEE10deallocateERS0_Pim
 13347      00
 13348              	.L650:
 179:/usr/include/c++/6/bits/stl_vector.h **** 
 13349              		.loc 30 179 0
 13350 0032 90       		nop
 13351 0033 C9       		leave
 13352              		.cfi_def_cfa 7, 8
 13353 0034 C3       		ret
 13354              		.cfi_endproc
 13355              	.LFE14155:
 13357              		.section	.text._ZN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEC2ERKS2_,"axG",@progbits,_ZN9
 13358              		.align 2
 13359              		.weak	_ZN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEC2ERKS2_
 13361              	_ZN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEC2ERKS2_:
 13362              	.LFB14157:
 776:/usr/include/c++/6/bits/stl_iterator.h ****       : _M_current(__i) { }
 13363              		.loc 32 776 0
 13364              		.cfi_startproc
 13365 0000 55       		pushq	%rbp
 13366              		.cfi_def_cfa_offset 16
 13367              		.cfi_offset 6, -16
 13368 0001 4889E5   		movq	%rsp, %rbp
 13369              		.cfi_def_cfa_register 6
 13370 0004 48897DF8 		movq	%rdi, -8(%rbp)
 13371 0008 488975F0 		movq	%rsi, -16(%rbp)
 13372              	.LBB127:
 777:/usr/include/c++/6/bits/stl_iterator.h **** 
 13373              		.loc 32 777 0
 13374 000c 488B45F0 		movq	-16(%rbp), %rax
 13375 0010 488B10   		movq	(%rax), %rdx
 13376 0013 488B45F8 		movq	-8(%rbp), %rax
 13377 0017 488910   		movq	%rdx, (%rax)
 13378              	.LBE127:
 13379 001a 90       		nop
 13380 001b 5D       		popq	%rbp
 13381              		.cfi_def_cfa 7, 8
 13382 001c C3       		ret
 13383              		.cfi_endproc
 13384              	.LFE14157:
 13386              		.weak	_ZN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEC1ERKS2_
 13387              		.set	_ZN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEC1ERKS2_,_ZN9__gnu_cxx17__normal_iterat
 13388              		.section	.text._ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEPiET0
 13389              		.weak	_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEPiET0_T_SA_S9_
 13391              	_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEPiET0_T_SA_S9_:
 13392              	.LFB14159:
 107:/usr/include/c++/6/bits/stl_uninitialized.h **** 		       _ForwardIterator __result)
 13393              		.loc 39 107 0
 13394              		.cfi_startproc
 13395 0000 55       		pushq	%rbp
 13396              		.cfi_def_cfa_offset 16
GAS LISTING /tmp/ccvUPO8Q.s 			page 558


 13397              		.cfi_offset 6, -16
 13398 0001 4889E5   		movq	%rsp, %rbp
 13399              		.cfi_def_cfa_register 6
 13400 0004 4883EC30 		subq	$48, %rsp
 13401 0008 48897DE8 		movq	%rdi, -24(%rbp)
 13402 000c 488975E0 		movq	%rsi, -32(%rbp)
 13403 0010 488955D8 		movq	%rdx, -40(%rbp)
 120:/usr/include/c++/6/bits/stl_uninitialized.h **** #endif
 13404              		.loc 39 120 0
 13405 0014 C645FF01 		movb	$1, -1(%rbp)
 126:/usr/include/c++/6/bits/stl_uninitialized.h ****     }
 13406              		.loc 39 126 0
 13407 0018 488B55D8 		movq	-40(%rbp), %rdx
 13408 001c 488B4DE0 		movq	-32(%rbp), %rcx
 13409 0020 488B45E8 		movq	-24(%rbp), %rax
 13410 0024 4889CE   		movq	%rcx, %rsi
 13411 0027 4889C7   		movq	%rax, %rdi
 13412 002a E8000000 		call	_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorI
 13412      00
 127:/usr/include/c++/6/bits/stl_uninitialized.h **** 
 13413              		.loc 39 127 0
 13414 002f C9       		leave
 13415              		.cfi_def_cfa 7, 8
 13416 0030 C3       		ret
 13417              		.cfi_endproc
 13418              	.LFE14159:
 13420              		.section	.text._ZN5boost10shared_ptrIN2gr5lfast12costas2_implEEC2INS1_11basic_blockEEERKNS0_IT_EEP
 13421              		.align 2
 13422              		.weak	_ZN5boost10shared_ptrIN2gr5lfast12costas2_implEEC2INS1_11basic_blockEEERKNS0_IT_EEPS3_
 13424              	_ZN5boost10shared_ptrIN2gr5lfast12costas2_implEEC2INS1_11basic_blockEEERKNS0_IT_EEPS3_:
 13425              	.LFB14167:
 447:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     {
 13426              		.loc 7 447 0
 13427              		.cfi_startproc
 13428 0000 55       		pushq	%rbp
 13429              		.cfi_def_cfa_offset 16
 13430              		.cfi_offset 6, -16
 13431 0001 4889E5   		movq	%rsp, %rbp
 13432              		.cfi_def_cfa_register 6
 13433 0004 4883EC20 		subq	$32, %rsp
 13434 0008 48897DF8 		movq	%rdi, -8(%rbp)
 13435 000c 488975F0 		movq	%rsi, -16(%rbp)
 13436 0010 488955E8 		movq	%rdx, -24(%rbp)
 13437              	.LBB128:
 447:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     {
 13438              		.loc 7 447 0
 13439 0014 488B45F8 		movq	-8(%rbp), %rax
 13440 0018 488B55E8 		movq	-24(%rbp), %rdx
 13441 001c 488910   		movq	%rdx, (%rax)
 13442 001f 488B45F0 		movq	-16(%rbp), %rax
 13443 0023 488D5008 		leaq	8(%rax), %rdx
 13444 0027 488B45F8 		movq	-8(%rbp), %rax
 13445 002b 4883C008 		addq	$8, %rax
 13446 002f 4889D6   		movq	%rdx, %rsi
 13447 0032 4889C7   		movq	%rax, %rdi
 13448 0035 E8000000 		call	_ZN5boost6detail12shared_countC1ERKS1_
 13448      00
GAS LISTING /tmp/ccvUPO8Q.s 			page 559


 13449              	.LBE128:
 449:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 13450              		.loc 7 449 0
 13451 003a 90       		nop
 13452 003b C9       		leave
 13453              		.cfi_def_cfa 7, 8
 13454 003c C3       		ret
 13455              		.cfi_endproc
 13456              	.LFE14167:
 13458              		.weak	_ZN5boost10shared_ptrIN2gr5lfast12costas2_implEEC1INS1_11basic_blockEEERKNS0_IT_EEPS3_
 13459              		.set	_ZN5boost10shared_ptrIN2gr5lfast12costas2_implEEC1INS1_11basic_blockEEERKNS0_IT_EEPS3_,_ZN5bo
 13460              		.section	.text._ZN5boost10shared_ptrIN2gr5lfast12costas2_implEEC2Ev,"axG",@progbits,_ZN5boost10sha
 13461              		.align 2
 13462              		.weak	_ZN5boost10shared_ptrIN2gr5lfast12costas2_implEEC2Ev
 13464              	_ZN5boost10shared_ptrIN2gr5lfast12costas2_implEEC2Ev:
 13465              	.LFB14170:
 347:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     {
 13466              		.loc 7 347 0
 13467              		.cfi_startproc
 13468 0000 55       		pushq	%rbp
 13469              		.cfi_def_cfa_offset 16
 13470              		.cfi_offset 6, -16
 13471 0001 4889E5   		movq	%rsp, %rbp
 13472              		.cfi_def_cfa_register 6
 13473 0004 4883EC10 		subq	$16, %rsp
 13474 0008 48897DF8 		movq	%rdi, -8(%rbp)
 13475              	.LBB129:
 347:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     {
 13476              		.loc 7 347 0
 13477 000c 488B45F8 		movq	-8(%rbp), %rax
 13478 0010 48C70000 		movq	$0, (%rax)
 13478      000000
 13479 0017 488B45F8 		movq	-8(%rbp), %rax
 13480 001b 4883C008 		addq	$8, %rax
 13481 001f 4889C7   		movq	%rax, %rdi
 13482 0022 E8000000 		call	_ZN5boost6detail12shared_countC1Ev
 13482      00
 13483              	.LBE129:
 349:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 13484              		.loc 7 349 0
 13485 0027 90       		nop
 13486 0028 C9       		leave
 13487              		.cfi_def_cfa 7, 8
 13488 0029 C3       		ret
 13489              		.cfi_endproc
 13490              	.LFE14170:
 13492              		.weak	_ZN5boost10shared_ptrIN2gr5lfast12costas2_implEEC1Ev
 13493              		.set	_ZN5boost10shared_ptrIN2gr5lfast12costas2_implEEC1Ev,_ZN5boost10shared_ptrIN2gr5lfast12costas
 13494              		.section	.text._ZNSt12_Vector_baseIN2gr5tag_tESaIS1_EE12_Vector_implC2Ev,"axG",@progbits,_ZNSt12_V
 13495              		.align 2
 13496              		.weak	_ZNSt12_Vector_baseIN2gr5tag_tESaIS1_EE12_Vector_implC2Ev
 13498              	_ZNSt12_Vector_baseIN2gr5tag_tESaIS1_EE12_Vector_implC2Ev:
 13499              	.LFB14173:
  86:/usr/include/c++/6/bits/stl_vector.h **** 	: _Tp_alloc_type(), _M_start(), _M_finish(), _M_end_of_storage()
 13500              		.loc 30 86 0
 13501              		.cfi_startproc
 13502 0000 55       		pushq	%rbp
GAS LISTING /tmp/ccvUPO8Q.s 			page 560


 13503              		.cfi_def_cfa_offset 16
 13504              		.cfi_offset 6, -16
 13505 0001 4889E5   		movq	%rsp, %rbp
 13506              		.cfi_def_cfa_register 6
 13507 0004 4883EC10 		subq	$16, %rsp
 13508 0008 48897DF8 		movq	%rdi, -8(%rbp)
 13509              	.LBB130:
  87:/usr/include/c++/6/bits/stl_vector.h **** 	{ }
 13510              		.loc 30 87 0
 13511 000c 488B45F8 		movq	-8(%rbp), %rax
 13512 0010 4889C7   		movq	%rax, %rdi
 13513 0013 E8000000 		call	_ZNSaIN2gr5tag_tEEC2Ev
 13513      00
 13514 0018 488B45F8 		movq	-8(%rbp), %rax
 13515 001c 48C70000 		movq	$0, (%rax)
 13515      000000
 13516 0023 488B45F8 		movq	-8(%rbp), %rax
 13517 0027 48C74008 		movq	$0, 8(%rax)
 13517      00000000 
 13518 002f 488B45F8 		movq	-8(%rbp), %rax
 13519 0033 48C74010 		movq	$0, 16(%rax)
 13519      00000000 
 13520              	.LBE130:
  88:/usr/include/c++/6/bits/stl_vector.h **** 
 13521              		.loc 30 88 0
 13522 003b 90       		nop
 13523 003c C9       		leave
 13524              		.cfi_def_cfa 7, 8
 13525 003d C3       		ret
 13526              		.cfi_endproc
 13527              	.LFE14173:
 13529              		.weak	_ZNSt12_Vector_baseIN2gr5tag_tESaIS1_EE12_Vector_implC1Ev
 13530              		.set	_ZNSt12_Vector_baseIN2gr5tag_tESaIS1_EE12_Vector_implC1Ev,_ZNSt12_Vector_baseIN2gr5tag_tESaIS
 13531              		.section	.text._ZNSaIN2gr5tag_tEED2Ev,"axG",@progbits,_ZNSaIN2gr5tag_tEED5Ev,comdat
 13532              		.align 2
 13533              		.weak	_ZNSaIN2gr5tag_tEED2Ev
 13535              	_ZNSaIN2gr5tag_tEED2Ev:
 13536              	.LFB14176:
 13537              		.loc 38 139 0
 13538              		.cfi_startproc
 13539 0000 55       		pushq	%rbp
 13540              		.cfi_def_cfa_offset 16
 13541              		.cfi_offset 6, -16
 13542 0001 4889E5   		movq	%rsp, %rbp
 13543              		.cfi_def_cfa_register 6
 13544 0004 4883EC10 		subq	$16, %rsp
 13545 0008 48897DF8 		movq	%rdi, -8(%rbp)
 13546              	.LBB131:
 13547              		.loc 38 139 0
 13548 000c 488B45F8 		movq	-8(%rbp), %rax
 13549 0010 4889C7   		movq	%rax, %rdi
 13550 0013 E8000000 		call	_ZN9__gnu_cxx13new_allocatorIN2gr5tag_tEED2Ev
 13550      00
 13551              	.LBE131:
 13552 0018 90       		nop
 13553 0019 C9       		leave
 13554              		.cfi_def_cfa 7, 8
GAS LISTING /tmp/ccvUPO8Q.s 			page 561


 13555 001a C3       		ret
 13556              		.cfi_endproc
 13557              	.LFE14176:
 13559              		.weak	_ZNSaIN2gr5tag_tEED1Ev
 13560              		.set	_ZNSaIN2gr5tag_tEED1Ev,_ZNSaIN2gr5tag_tEED2Ev
 13561              		.section	.text._ZNSt12_Vector_baseIN2gr5tag_tESaIS1_EE13_M_deallocateEPS1_m,"axG",@progbits,_ZNSt1
 13562              		.align 2
 13563              		.weak	_ZNSt12_Vector_baseIN2gr5tag_tESaIS1_EE13_M_deallocateEPS1_m
 13565              	_ZNSt12_Vector_baseIN2gr5tag_tESaIS1_EE13_M_deallocateEPS1_m:
 13566              	.LFB14178:
 174:/usr/include/c++/6/bits/stl_vector.h ****       {
 13567              		.loc 30 174 0
 13568              		.cfi_startproc
 13569 0000 55       		pushq	%rbp
 13570              		.cfi_def_cfa_offset 16
 13571              		.cfi_offset 6, -16
 13572 0001 4889E5   		movq	%rsp, %rbp
 13573              		.cfi_def_cfa_register 6
 13574 0004 4883EC20 		subq	$32, %rsp
 13575 0008 48897DF8 		movq	%rdi, -8(%rbp)
 13576 000c 488975F0 		movq	%rsi, -16(%rbp)
 13577 0010 488955E8 		movq	%rdx, -24(%rbp)
 177:/usr/include/c++/6/bits/stl_vector.h **** 	  _Tr::deallocate(_M_impl, __p, __n);
 13578              		.loc 30 177 0
 13579 0014 48837DF0 		cmpq	$0, -16(%rbp)
 13579      00
 13580 0019 7417     		je	.L660
 178:/usr/include/c++/6/bits/stl_vector.h ****       }
 13581              		.loc 30 178 0
 13582 001b 488B45F8 		movq	-8(%rbp), %rax
 13583 001f 488B55E8 		movq	-24(%rbp), %rdx
 13584 0023 488B4DF0 		movq	-16(%rbp), %rcx
 13585 0027 4889CE   		movq	%rcx, %rsi
 13586 002a 4889C7   		movq	%rax, %rdi
 13587 002d E8000000 		call	_ZNSt16allocator_traitsISaIN2gr5tag_tEEE10deallocateERS2_PS1_m
 13587      00
 13588              	.L660:
 179:/usr/include/c++/6/bits/stl_vector.h **** 
 13589              		.loc 30 179 0
 13590 0032 90       		nop
 13591 0033 C9       		leave
 13592              		.cfi_def_cfa 7, 8
 13593 0034 C3       		ret
 13594              		.cfi_endproc
 13595              	.LFE14178:
 13597              		.section	.text._ZSt8_DestroyIPN2gr5tag_tEEvT_S3_,"axG",@progbits,_ZSt8_DestroyIPN2gr5tag_tEEvT_S3_
 13598              		.weak	_ZSt8_DestroyIPN2gr5tag_tEEvT_S3_
 13600              	_ZSt8_DestroyIPN2gr5tag_tEEvT_S3_:
 13601              	.LFB14179:
 122:/usr/include/c++/6/bits/stl_construct.h ****     {
 13602              		.loc 35 122 0
 13603              		.cfi_startproc
 13604 0000 55       		pushq	%rbp
 13605              		.cfi_def_cfa_offset 16
 13606              		.cfi_offset 6, -16
 13607 0001 4889E5   		movq	%rsp, %rbp
 13608              		.cfi_def_cfa_register 6
GAS LISTING /tmp/ccvUPO8Q.s 			page 562


 13609 0004 4883EC10 		subq	$16, %rsp
 13610 0008 48897DF8 		movq	%rdi, -8(%rbp)
 13611 000c 488975F0 		movq	%rsi, -16(%rbp)
 126:/usr/include/c++/6/bits/stl_construct.h **** 	__destroy(__first, __last);
 13612              		.loc 35 126 0
 13613 0010 488B55F0 		movq	-16(%rbp), %rdx
 13614 0014 488B45F8 		movq	-8(%rbp), %rax
 13615 0018 4889D6   		movq	%rdx, %rsi
 13616 001b 4889C7   		movq	%rax, %rdi
 13617 001e E8000000 		call	_ZNSt12_Destroy_auxILb0EE9__destroyIPN2gr5tag_tEEEvT_S5_
 13617      00
 128:/usr/include/c++/6/bits/stl_construct.h **** 
 13618              		.loc 35 128 0
 13619 0023 90       		nop
 13620 0024 C9       		leave
 13621              		.cfi_def_cfa 7, 8
 13622 0025 C3       		ret
 13623              		.cfi_endproc
 13624              	.LFE14179:
 13626              		.section	.text._ZN9__gnu_cxx17__normal_iteratorIPKN2gr5tag_tESt6vectorIS2_SaIS2_EEEC2ERKS4_,"axG",
 13627              		.align 2
 13628              		.weak	_ZN9__gnu_cxx17__normal_iteratorIPKN2gr5tag_tESt6vectorIS2_SaIS2_EEEC2ERKS4_
 13630              	_ZN9__gnu_cxx17__normal_iteratorIPKN2gr5tag_tESt6vectorIS2_SaIS2_EEEC2ERKS4_:
 13631              	.LFB14181:
 776:/usr/include/c++/6/bits/stl_iterator.h ****       : _M_current(__i) { }
 13632              		.loc 32 776 0
 13633              		.cfi_startproc
 13634 0000 55       		pushq	%rbp
 13635              		.cfi_def_cfa_offset 16
 13636              		.cfi_offset 6, -16
 13637 0001 4889E5   		movq	%rsp, %rbp
 13638              		.cfi_def_cfa_register 6
 13639 0004 48897DF8 		movq	%rdi, -8(%rbp)
 13640 0008 488975F0 		movq	%rsi, -16(%rbp)
 13641              	.LBB132:
 777:/usr/include/c++/6/bits/stl_iterator.h **** 
 13642              		.loc 32 777 0
 13643 000c 488B45F0 		movq	-16(%rbp), %rax
 13644 0010 488B10   		movq	(%rax), %rdx
 13645 0013 488B45F8 		movq	-8(%rbp), %rax
 13646 0017 488910   		movq	%rdx, (%rax)
 13647              	.LBE132:
 13648 001a 90       		nop
 13649 001b 5D       		popq	%rbp
 13650              		.cfi_def_cfa 7, 8
 13651 001c C3       		ret
 13652              		.cfi_endproc
 13653              	.LFE14181:
 13655              		.weak	_ZN9__gnu_cxx17__normal_iteratorIPKN2gr5tag_tESt6vectorIS2_SaIS2_EEEC1ERKS4_
 13656              		.set	_ZN9__gnu_cxx17__normal_iteratorIPKN2gr5tag_tESt6vectorIS2_SaIS2_EEEC1ERKS4_,_ZN9__gnu_cxx17_
 13657              		.section	.text._ZNK9__gnu_cxx17__normal_iteratorIPKN2gr5tag_tESt6vectorIS2_SaIS2_EEE4baseEv,"axG",
 13658              		.align 2
 13659              		.weak	_ZNK9__gnu_cxx17__normal_iteratorIPKN2gr5tag_tESt6vectorIS2_SaIS2_EEE4baseEv
 13661              	_ZNK9__gnu_cxx17__normal_iteratorIPKN2gr5tag_tESt6vectorIS2_SaIS2_EEE4baseEv:
 13662              	.LFB14183:
 841:/usr/include/c++/6/bits/stl_iterator.h ****       { return _M_current; }
 13663              		.loc 32 841 0
GAS LISTING /tmp/ccvUPO8Q.s 			page 563


 13664              		.cfi_startproc
 13665 0000 55       		pushq	%rbp
 13666              		.cfi_def_cfa_offset 16
 13667              		.cfi_offset 6, -16
 13668 0001 4889E5   		movq	%rsp, %rbp
 13669              		.cfi_def_cfa_register 6
 13670 0004 48897DF8 		movq	%rdi, -8(%rbp)
 842:/usr/include/c++/6/bits/stl_iterator.h ****     };
 13671              		.loc 32 842 0
 13672 0008 488B45F8 		movq	-8(%rbp), %rax
 13673 000c 5D       		popq	%rbp
 13674              		.cfi_def_cfa 7, 8
 13675 000d C3       		ret
 13676              		.cfi_endproc
 13677              	.LFE14183:
 13679              		.section	.text._ZNSt6vectorIN2gr5tag_tESaIS1_EE3endEv,"axG",@progbits,_ZNSt6vectorIN2gr5tag_tESaIS
 13680              		.align 2
 13681              		.weak	_ZNSt6vectorIN2gr5tag_tESaIS1_EE3endEv
 13683              	_ZNSt6vectorIN2gr5tag_tESaIS1_EE3endEv:
 13684              	.LFB14184:
 566:/usr/include/c++/6/bits/stl_vector.h ****       { return iterator(this->_M_impl._M_finish); }
 13685              		.loc 30 566 0
 13686              		.cfi_startproc
 13687 0000 55       		pushq	%rbp
 13688              		.cfi_def_cfa_offset 16
 13689              		.cfi_offset 6, -16
 13690 0001 4889E5   		movq	%rsp, %rbp
 13691              		.cfi_def_cfa_register 6
 13692 0004 4883EC20 		subq	$32, %rsp
 13693 0008 48897DE8 		movq	%rdi, -24(%rbp)
 567:/usr/include/c++/6/bits/stl_vector.h **** 
 13694              		.loc 30 567 0
 13695 000c 488B45E8 		movq	-24(%rbp), %rax
 13696 0010 488D5008 		leaq	8(%rax), %rdx
 13697 0014 488D45F8 		leaq	-8(%rbp), %rax
 13698 0018 4889D6   		movq	%rdx, %rsi
 13699 001b 4889C7   		movq	%rax, %rdi
 13700 001e E8000000 		call	_ZN9__gnu_cxx17__normal_iteratorIPN2gr5tag_tESt6vectorIS2_SaIS2_EEEC1ERKS3_
 13700      00
 13701 0023 488B45F8 		movq	-8(%rbp), %rax
 13702 0027 C9       		leave
 13703              		.cfi_def_cfa 7, 8
 13704 0028 C3       		ret
 13705              		.cfi_endproc
 13706              	.LFE14184:
 13708              		.section	.text._ZN9__gnu_cxxneIPN2gr5tag_tESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_E
 13709              		.weak	_ZN9__gnu_cxxneIPN2gr5tag_tESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_
 13711              	_ZN9__gnu_cxxneIPN2gr5tag_tESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_:
 13712              	.LFB14185:
 877:/usr/include/c++/6/bits/stl_iterator.h **** 	       const __normal_iterator<_Iterator, _Container>& __rhs)
 13713              		.loc 32 877 0
 13714              		.cfi_startproc
 13715 0000 55       		pushq	%rbp
 13716              		.cfi_def_cfa_offset 16
 13717              		.cfi_offset 6, -16
 13718 0001 4889E5   		movq	%rsp, %rbp
 13719              		.cfi_def_cfa_register 6
GAS LISTING /tmp/ccvUPO8Q.s 			page 564


 13720 0004 53       		pushq	%rbx
 13721 0005 4883EC18 		subq	$24, %rsp
 13722              		.cfi_offset 3, -24
 13723 0009 48897DE8 		movq	%rdi, -24(%rbp)
 13724 000d 488975E0 		movq	%rsi, -32(%rbp)
 880:/usr/include/c++/6/bits/stl_iterator.h **** 
 13725              		.loc 32 880 0
 13726 0011 488B45E8 		movq	-24(%rbp), %rax
 13727 0015 4889C7   		movq	%rax, %rdi
 13728 0018 E8000000 		call	_ZNK9__gnu_cxx17__normal_iteratorIPN2gr5tag_tESt6vectorIS2_SaIS2_EEE4baseEv
 13728      00
 13729 001d 488B18   		movq	(%rax), %rbx
 13730 0020 488B45E0 		movq	-32(%rbp), %rax
 13731 0024 4889C7   		movq	%rax, %rdi
 13732 0027 E8000000 		call	_ZNK9__gnu_cxx17__normal_iteratorIPN2gr5tag_tESt6vectorIS2_SaIS2_EEE4baseEv
 13732      00
 13733 002c 488B00   		movq	(%rax), %rax
 13734 002f 4839C3   		cmpq	%rax, %rbx
 13735 0032 0F95C0   		setne	%al
 13736 0035 4883C418 		addq	$24, %rsp
 13737 0039 5B       		popq	%rbx
 13738 003a 5D       		popq	%rbp
 13739              		.cfi_def_cfa 7, 8
 13740 003b C3       		ret
 13741              		.cfi_endproc
 13742              	.LFE14185:
 13744              		.section	.text._ZSt4moveIN9__gnu_cxx17__normal_iteratorIPN2gr5tag_tESt6vectorIS3_SaIS3_EEEES8_ET0_
 13745              		.weak	_ZSt4moveIN9__gnu_cxx17__normal_iteratorIPN2gr5tag_tESt6vectorIS3_SaIS3_EEEES8_ET0_T_SA_S9_
 13747              	_ZSt4moveIN9__gnu_cxx17__normal_iteratorIPN2gr5tag_tESt6vectorIS3_SaIS3_EEEES8_ET0_T_SA_S9_:
 13748              	.LFB14186:
 13749              		.file 44 "/usr/include/c++/6/bits/stl_algobase.h"
   1:/usr/include/c++/6/bits/stl_algobase.h **** // Core algorithmic facilities -*- C++ -*-
   2:/usr/include/c++/6/bits/stl_algobase.h **** 
   3:/usr/include/c++/6/bits/stl_algobase.h **** // Copyright (C) 2001-2016 Free Software Foundation, Inc.
   4:/usr/include/c++/6/bits/stl_algobase.h **** //
   5:/usr/include/c++/6/bits/stl_algobase.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/6/bits/stl_algobase.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/6/bits/stl_algobase.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/6/bits/stl_algobase.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/6/bits/stl_algobase.h **** // any later version.
  10:/usr/include/c++/6/bits/stl_algobase.h **** 
  11:/usr/include/c++/6/bits/stl_algobase.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/6/bits/stl_algobase.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/6/bits/stl_algobase.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/6/bits/stl_algobase.h **** // GNU General Public License for more details.
  15:/usr/include/c++/6/bits/stl_algobase.h **** 
  16:/usr/include/c++/6/bits/stl_algobase.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/6/bits/stl_algobase.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/6/bits/stl_algobase.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/6/bits/stl_algobase.h **** 
  20:/usr/include/c++/6/bits/stl_algobase.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/6/bits/stl_algobase.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/6/bits/stl_algobase.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/6/bits/stl_algobase.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/6/bits/stl_algobase.h **** 
  25:/usr/include/c++/6/bits/stl_algobase.h **** /*
  26:/usr/include/c++/6/bits/stl_algobase.h ****  *
GAS LISTING /tmp/ccvUPO8Q.s 			page 565


  27:/usr/include/c++/6/bits/stl_algobase.h ****  * Copyright (c) 1994
  28:/usr/include/c++/6/bits/stl_algobase.h ****  * Hewlett-Packard Company
  29:/usr/include/c++/6/bits/stl_algobase.h ****  *
  30:/usr/include/c++/6/bits/stl_algobase.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:/usr/include/c++/6/bits/stl_algobase.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:/usr/include/c++/6/bits/stl_algobase.h ****  * provided that the above copyright notice appear in all copies and
  33:/usr/include/c++/6/bits/stl_algobase.h ****  * that both that copyright notice and this permission notice appear
  34:/usr/include/c++/6/bits/stl_algobase.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:/usr/include/c++/6/bits/stl_algobase.h ****  * representations about the suitability of this software for any
  36:/usr/include/c++/6/bits/stl_algobase.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:/usr/include/c++/6/bits/stl_algobase.h ****  *
  38:/usr/include/c++/6/bits/stl_algobase.h ****  *
  39:/usr/include/c++/6/bits/stl_algobase.h ****  * Copyright (c) 1996-1998
  40:/usr/include/c++/6/bits/stl_algobase.h ****  * Silicon Graphics Computer Systems, Inc.
  41:/usr/include/c++/6/bits/stl_algobase.h ****  *
  42:/usr/include/c++/6/bits/stl_algobase.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:/usr/include/c++/6/bits/stl_algobase.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:/usr/include/c++/6/bits/stl_algobase.h ****  * provided that the above copyright notice appear in all copies and
  45:/usr/include/c++/6/bits/stl_algobase.h ****  * that both that copyright notice and this permission notice appear
  46:/usr/include/c++/6/bits/stl_algobase.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:/usr/include/c++/6/bits/stl_algobase.h ****  * representations about the suitability of this software for any
  48:/usr/include/c++/6/bits/stl_algobase.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:/usr/include/c++/6/bits/stl_algobase.h ****  */
  50:/usr/include/c++/6/bits/stl_algobase.h **** 
  51:/usr/include/c++/6/bits/stl_algobase.h **** /** @file bits/stl_algobase.h
  52:/usr/include/c++/6/bits/stl_algobase.h ****  *  This is an internal header file, included by other library headers.
  53:/usr/include/c++/6/bits/stl_algobase.h ****  *  Do not attempt to use it directly. @headername{algorithm}
  54:/usr/include/c++/6/bits/stl_algobase.h ****  */
  55:/usr/include/c++/6/bits/stl_algobase.h **** 
  56:/usr/include/c++/6/bits/stl_algobase.h **** #ifndef _STL_ALGOBASE_H
  57:/usr/include/c++/6/bits/stl_algobase.h **** #define _STL_ALGOBASE_H 1
  58:/usr/include/c++/6/bits/stl_algobase.h **** 
  59:/usr/include/c++/6/bits/stl_algobase.h **** #include <bits/c++config.h>
  60:/usr/include/c++/6/bits/stl_algobase.h **** #include <bits/functexcept.h>
  61:/usr/include/c++/6/bits/stl_algobase.h **** #include <bits/cpp_type_traits.h>
  62:/usr/include/c++/6/bits/stl_algobase.h **** #include <ext/type_traits.h>
  63:/usr/include/c++/6/bits/stl_algobase.h **** #include <ext/numeric_traits.h>
  64:/usr/include/c++/6/bits/stl_algobase.h **** #include <bits/stl_pair.h>
  65:/usr/include/c++/6/bits/stl_algobase.h **** #include <bits/stl_iterator_base_types.h>
  66:/usr/include/c++/6/bits/stl_algobase.h **** #include <bits/stl_iterator_base_funcs.h>
  67:/usr/include/c++/6/bits/stl_algobase.h **** #include <bits/stl_iterator.h>
  68:/usr/include/c++/6/bits/stl_algobase.h **** #include <bits/concept_check.h>
  69:/usr/include/c++/6/bits/stl_algobase.h **** #include <debug/debug.h>
  70:/usr/include/c++/6/bits/stl_algobase.h **** #include <bits/move.h> // For std::swap and _GLIBCXX_MOVE
  71:/usr/include/c++/6/bits/stl_algobase.h **** #include <bits/predefined_ops.h>
  72:/usr/include/c++/6/bits/stl_algobase.h **** 
  73:/usr/include/c++/6/bits/stl_algobase.h **** namespace std _GLIBCXX_VISIBILITY(default)
  74:/usr/include/c++/6/bits/stl_algobase.h **** {
  75:/usr/include/c++/6/bits/stl_algobase.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  76:/usr/include/c++/6/bits/stl_algobase.h **** 
  77:/usr/include/c++/6/bits/stl_algobase.h **** #if __cplusplus < 201103L
  78:/usr/include/c++/6/bits/stl_algobase.h ****   // See http://gcc.gnu.org/ml/libstdc++/2004-08/msg00167.html: in a
  79:/usr/include/c++/6/bits/stl_algobase.h ****   // nutshell, we are partially implementing the resolution of DR 187,
  80:/usr/include/c++/6/bits/stl_algobase.h ****   // when it's safe, i.e., the value_types are equal.
  81:/usr/include/c++/6/bits/stl_algobase.h ****   template<bool _BoolType>
  82:/usr/include/c++/6/bits/stl_algobase.h ****     struct __iter_swap
  83:/usr/include/c++/6/bits/stl_algobase.h ****     {
GAS LISTING /tmp/ccvUPO8Q.s 			page 566


  84:/usr/include/c++/6/bits/stl_algobase.h ****       template<typename _ForwardIterator1, typename _ForwardIterator2>
  85:/usr/include/c++/6/bits/stl_algobase.h ****         static void
  86:/usr/include/c++/6/bits/stl_algobase.h ****         iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b)
  87:/usr/include/c++/6/bits/stl_algobase.h ****         {
  88:/usr/include/c++/6/bits/stl_algobase.h ****           typedef typename iterator_traits<_ForwardIterator1>::value_type
  89:/usr/include/c++/6/bits/stl_algobase.h ****             _ValueType1;
  90:/usr/include/c++/6/bits/stl_algobase.h ****           _ValueType1 __tmp = _GLIBCXX_MOVE(*__a);
  91:/usr/include/c++/6/bits/stl_algobase.h ****           *__a = _GLIBCXX_MOVE(*__b);
  92:/usr/include/c++/6/bits/stl_algobase.h ****           *__b = _GLIBCXX_MOVE(__tmp);
  93:/usr/include/c++/6/bits/stl_algobase.h **** 	}
  94:/usr/include/c++/6/bits/stl_algobase.h ****     };
  95:/usr/include/c++/6/bits/stl_algobase.h **** 
  96:/usr/include/c++/6/bits/stl_algobase.h ****   template<>
  97:/usr/include/c++/6/bits/stl_algobase.h ****     struct __iter_swap<true>
  98:/usr/include/c++/6/bits/stl_algobase.h ****     {
  99:/usr/include/c++/6/bits/stl_algobase.h ****       template<typename _ForwardIterator1, typename _ForwardIterator2>
 100:/usr/include/c++/6/bits/stl_algobase.h ****         static void 
 101:/usr/include/c++/6/bits/stl_algobase.h ****         iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b)
 102:/usr/include/c++/6/bits/stl_algobase.h ****         {
 103:/usr/include/c++/6/bits/stl_algobase.h ****           swap(*__a, *__b);
 104:/usr/include/c++/6/bits/stl_algobase.h ****         }
 105:/usr/include/c++/6/bits/stl_algobase.h ****     };
 106:/usr/include/c++/6/bits/stl_algobase.h **** #endif
 107:/usr/include/c++/6/bits/stl_algobase.h **** 
 108:/usr/include/c++/6/bits/stl_algobase.h ****   /**
 109:/usr/include/c++/6/bits/stl_algobase.h ****    *  @brief Swaps the contents of two iterators.
 110:/usr/include/c++/6/bits/stl_algobase.h ****    *  @ingroup mutating_algorithms
 111:/usr/include/c++/6/bits/stl_algobase.h ****    *  @param  __a  An iterator.
 112:/usr/include/c++/6/bits/stl_algobase.h ****    *  @param  __b  Another iterator.
 113:/usr/include/c++/6/bits/stl_algobase.h ****    *  @return   Nothing.
 114:/usr/include/c++/6/bits/stl_algobase.h ****    *
 115:/usr/include/c++/6/bits/stl_algobase.h ****    *  This function swaps the values pointed to by two iterators, not the
 116:/usr/include/c++/6/bits/stl_algobase.h ****    *  iterators themselves.
 117:/usr/include/c++/6/bits/stl_algobase.h ****   */
 118:/usr/include/c++/6/bits/stl_algobase.h ****   template<typename _ForwardIterator1, typename _ForwardIterator2>
 119:/usr/include/c++/6/bits/stl_algobase.h ****     inline void
 120:/usr/include/c++/6/bits/stl_algobase.h ****     iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b)
 121:/usr/include/c++/6/bits/stl_algobase.h ****     {
 122:/usr/include/c++/6/bits/stl_algobase.h ****       // concept requirements
 123:/usr/include/c++/6/bits/stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 124:/usr/include/c++/6/bits/stl_algobase.h **** 				  _ForwardIterator1>)
 125:/usr/include/c++/6/bits/stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 126:/usr/include/c++/6/bits/stl_algobase.h **** 				  _ForwardIterator2>)
 127:/usr/include/c++/6/bits/stl_algobase.h **** 
 128:/usr/include/c++/6/bits/stl_algobase.h **** #if __cplusplus < 201103L
 129:/usr/include/c++/6/bits/stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator1>::value_type
 130:/usr/include/c++/6/bits/stl_algobase.h **** 	_ValueType1;
 131:/usr/include/c++/6/bits/stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator2>::value_type
 132:/usr/include/c++/6/bits/stl_algobase.h **** 	_ValueType2;
 133:/usr/include/c++/6/bits/stl_algobase.h **** 
 134:/usr/include/c++/6/bits/stl_algobase.h ****       __glibcxx_function_requires(_ConvertibleConcept<_ValueType1,
 135:/usr/include/c++/6/bits/stl_algobase.h **** 				  _ValueType2>)
 136:/usr/include/c++/6/bits/stl_algobase.h ****       __glibcxx_function_requires(_ConvertibleConcept<_ValueType2,
 137:/usr/include/c++/6/bits/stl_algobase.h **** 				  _ValueType1>)
 138:/usr/include/c++/6/bits/stl_algobase.h **** 
 139:/usr/include/c++/6/bits/stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator1>::reference
 140:/usr/include/c++/6/bits/stl_algobase.h **** 	_ReferenceType1;
GAS LISTING /tmp/ccvUPO8Q.s 			page 567


 141:/usr/include/c++/6/bits/stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator2>::reference
 142:/usr/include/c++/6/bits/stl_algobase.h **** 	_ReferenceType2;
 143:/usr/include/c++/6/bits/stl_algobase.h ****       std::__iter_swap<__are_same<_ValueType1, _ValueType2>::__value
 144:/usr/include/c++/6/bits/stl_algobase.h **** 	&& __are_same<_ValueType1&, _ReferenceType1>::__value
 145:/usr/include/c++/6/bits/stl_algobase.h **** 	&& __are_same<_ValueType2&, _ReferenceType2>::__value>::
 146:/usr/include/c++/6/bits/stl_algobase.h **** 	iter_swap(__a, __b);
 147:/usr/include/c++/6/bits/stl_algobase.h **** #else
 148:/usr/include/c++/6/bits/stl_algobase.h ****       swap(*__a, *__b);
 149:/usr/include/c++/6/bits/stl_algobase.h **** #endif
 150:/usr/include/c++/6/bits/stl_algobase.h ****     }
 151:/usr/include/c++/6/bits/stl_algobase.h **** 
 152:/usr/include/c++/6/bits/stl_algobase.h ****   /**
 153:/usr/include/c++/6/bits/stl_algobase.h ****    *  @brief Swap the elements of two sequences.
 154:/usr/include/c++/6/bits/stl_algobase.h ****    *  @ingroup mutating_algorithms
 155:/usr/include/c++/6/bits/stl_algobase.h ****    *  @param  __first1  A forward iterator.
 156:/usr/include/c++/6/bits/stl_algobase.h ****    *  @param  __last1   A forward iterator.
 157:/usr/include/c++/6/bits/stl_algobase.h ****    *  @param  __first2  A forward iterator.
 158:/usr/include/c++/6/bits/stl_algobase.h ****    *  @return   An iterator equal to @p first2+(last1-first1).
 159:/usr/include/c++/6/bits/stl_algobase.h ****    *
 160:/usr/include/c++/6/bits/stl_algobase.h ****    *  Swaps each element in the range @p [first1,last1) with the
 161:/usr/include/c++/6/bits/stl_algobase.h ****    *  corresponding element in the range @p [first2,(last1-first1)).
 162:/usr/include/c++/6/bits/stl_algobase.h ****    *  The ranges must not overlap.
 163:/usr/include/c++/6/bits/stl_algobase.h ****   */
 164:/usr/include/c++/6/bits/stl_algobase.h ****   template<typename _ForwardIterator1, typename _ForwardIterator2>
 165:/usr/include/c++/6/bits/stl_algobase.h ****     _ForwardIterator2
 166:/usr/include/c++/6/bits/stl_algobase.h ****     swap_ranges(_ForwardIterator1 __first1, _ForwardIterator1 __last1,
 167:/usr/include/c++/6/bits/stl_algobase.h **** 		_ForwardIterator2 __first2)
 168:/usr/include/c++/6/bits/stl_algobase.h ****     {
 169:/usr/include/c++/6/bits/stl_algobase.h ****       // concept requirements
 170:/usr/include/c++/6/bits/stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 171:/usr/include/c++/6/bits/stl_algobase.h **** 				  _ForwardIterator1>)
 172:/usr/include/c++/6/bits/stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 173:/usr/include/c++/6/bits/stl_algobase.h **** 				  _ForwardIterator2>)
 174:/usr/include/c++/6/bits/stl_algobase.h ****       __glibcxx_requires_valid_range(__first1, __last1);
 175:/usr/include/c++/6/bits/stl_algobase.h **** 
 176:/usr/include/c++/6/bits/stl_algobase.h ****       for (; __first1 != __last1; ++__first1, (void)++__first2)
 177:/usr/include/c++/6/bits/stl_algobase.h **** 	std::iter_swap(__first1, __first2);
 178:/usr/include/c++/6/bits/stl_algobase.h ****       return __first2;
 179:/usr/include/c++/6/bits/stl_algobase.h ****     }
 180:/usr/include/c++/6/bits/stl_algobase.h **** 
 181:/usr/include/c++/6/bits/stl_algobase.h ****   /**
 182:/usr/include/c++/6/bits/stl_algobase.h ****    *  @brief This does what you think it does.
 183:/usr/include/c++/6/bits/stl_algobase.h ****    *  @ingroup sorting_algorithms
 184:/usr/include/c++/6/bits/stl_algobase.h ****    *  @param  __a  A thing of arbitrary type.
 185:/usr/include/c++/6/bits/stl_algobase.h ****    *  @param  __b  Another thing of arbitrary type.
 186:/usr/include/c++/6/bits/stl_algobase.h ****    *  @return   The lesser of the parameters.
 187:/usr/include/c++/6/bits/stl_algobase.h ****    *
 188:/usr/include/c++/6/bits/stl_algobase.h ****    *  This is the simple classic generic implementation.  It will work on
 189:/usr/include/c++/6/bits/stl_algobase.h ****    *  temporary expressions, since they are only evaluated once, unlike a
 190:/usr/include/c++/6/bits/stl_algobase.h ****    *  preprocessor macro.
 191:/usr/include/c++/6/bits/stl_algobase.h ****   */
 192:/usr/include/c++/6/bits/stl_algobase.h ****   template<typename _Tp>
 193:/usr/include/c++/6/bits/stl_algobase.h ****     _GLIBCXX14_CONSTEXPR
 194:/usr/include/c++/6/bits/stl_algobase.h ****     inline const _Tp&
 195:/usr/include/c++/6/bits/stl_algobase.h ****     min(const _Tp& __a, const _Tp& __b)
 196:/usr/include/c++/6/bits/stl_algobase.h ****     {
 197:/usr/include/c++/6/bits/stl_algobase.h ****       // concept requirements
GAS LISTING /tmp/ccvUPO8Q.s 			page 568


 198:/usr/include/c++/6/bits/stl_algobase.h ****       __glibcxx_function_requires(_LessThanComparableConcept<_Tp>)
 199:/usr/include/c++/6/bits/stl_algobase.h ****       //return __b < __a ? __b : __a;
 200:/usr/include/c++/6/bits/stl_algobase.h ****       if (__b < __a)
 201:/usr/include/c++/6/bits/stl_algobase.h **** 	return __b;
 202:/usr/include/c++/6/bits/stl_algobase.h ****       return __a;
 203:/usr/include/c++/6/bits/stl_algobase.h ****     }
 204:/usr/include/c++/6/bits/stl_algobase.h **** 
 205:/usr/include/c++/6/bits/stl_algobase.h ****   /**
 206:/usr/include/c++/6/bits/stl_algobase.h ****    *  @brief This does what you think it does.
 207:/usr/include/c++/6/bits/stl_algobase.h ****    *  @ingroup sorting_algorithms
 208:/usr/include/c++/6/bits/stl_algobase.h ****    *  @param  __a  A thing of arbitrary type.
 209:/usr/include/c++/6/bits/stl_algobase.h ****    *  @param  __b  Another thing of arbitrary type.
 210:/usr/include/c++/6/bits/stl_algobase.h ****    *  @return   The greater of the parameters.
 211:/usr/include/c++/6/bits/stl_algobase.h ****    *
 212:/usr/include/c++/6/bits/stl_algobase.h ****    *  This is the simple classic generic implementation.  It will work on
 213:/usr/include/c++/6/bits/stl_algobase.h ****    *  temporary expressions, since they are only evaluated once, unlike a
 214:/usr/include/c++/6/bits/stl_algobase.h ****    *  preprocessor macro.
 215:/usr/include/c++/6/bits/stl_algobase.h ****   */
 216:/usr/include/c++/6/bits/stl_algobase.h ****   template<typename _Tp>
 217:/usr/include/c++/6/bits/stl_algobase.h ****     _GLIBCXX14_CONSTEXPR
 218:/usr/include/c++/6/bits/stl_algobase.h ****     inline const _Tp&
 219:/usr/include/c++/6/bits/stl_algobase.h ****     max(const _Tp& __a, const _Tp& __b)
 220:/usr/include/c++/6/bits/stl_algobase.h ****     {
 221:/usr/include/c++/6/bits/stl_algobase.h ****       // concept requirements
 222:/usr/include/c++/6/bits/stl_algobase.h ****       __glibcxx_function_requires(_LessThanComparableConcept<_Tp>)
 223:/usr/include/c++/6/bits/stl_algobase.h ****       //return  __a < __b ? __b : __a;
 224:/usr/include/c++/6/bits/stl_algobase.h ****       if (__a < __b)
 225:/usr/include/c++/6/bits/stl_algobase.h **** 	return __b;
 226:/usr/include/c++/6/bits/stl_algobase.h ****       return __a;
 227:/usr/include/c++/6/bits/stl_algobase.h ****     }
 228:/usr/include/c++/6/bits/stl_algobase.h **** 
 229:/usr/include/c++/6/bits/stl_algobase.h ****   /**
 230:/usr/include/c++/6/bits/stl_algobase.h ****    *  @brief This does what you think it does.
 231:/usr/include/c++/6/bits/stl_algobase.h ****    *  @ingroup sorting_algorithms
 232:/usr/include/c++/6/bits/stl_algobase.h ****    *  @param  __a  A thing of arbitrary type.
 233:/usr/include/c++/6/bits/stl_algobase.h ****    *  @param  __b  Another thing of arbitrary type.
 234:/usr/include/c++/6/bits/stl_algobase.h ****    *  @param  __comp  A @link comparison_functors comparison functor@endlink.
 235:/usr/include/c++/6/bits/stl_algobase.h ****    *  @return   The lesser of the parameters.
 236:/usr/include/c++/6/bits/stl_algobase.h ****    *
 237:/usr/include/c++/6/bits/stl_algobase.h ****    *  This will work on temporary expressions, since they are only evaluated
 238:/usr/include/c++/6/bits/stl_algobase.h ****    *  once, unlike a preprocessor macro.
 239:/usr/include/c++/6/bits/stl_algobase.h ****   */
 240:/usr/include/c++/6/bits/stl_algobase.h ****   template<typename _Tp, typename _Compare>
 241:/usr/include/c++/6/bits/stl_algobase.h ****     _GLIBCXX14_CONSTEXPR
 242:/usr/include/c++/6/bits/stl_algobase.h ****     inline const _Tp&
 243:/usr/include/c++/6/bits/stl_algobase.h ****     min(const _Tp& __a, const _Tp& __b, _Compare __comp)
 244:/usr/include/c++/6/bits/stl_algobase.h ****     {
 245:/usr/include/c++/6/bits/stl_algobase.h ****       //return __comp(__b, __a) ? __b : __a;
 246:/usr/include/c++/6/bits/stl_algobase.h ****       if (__comp(__b, __a))
 247:/usr/include/c++/6/bits/stl_algobase.h **** 	return __b;
 248:/usr/include/c++/6/bits/stl_algobase.h ****       return __a;
 249:/usr/include/c++/6/bits/stl_algobase.h ****     }
 250:/usr/include/c++/6/bits/stl_algobase.h **** 
 251:/usr/include/c++/6/bits/stl_algobase.h ****   /**
 252:/usr/include/c++/6/bits/stl_algobase.h ****    *  @brief This does what you think it does.
 253:/usr/include/c++/6/bits/stl_algobase.h ****    *  @ingroup sorting_algorithms
 254:/usr/include/c++/6/bits/stl_algobase.h ****    *  @param  __a  A thing of arbitrary type.
GAS LISTING /tmp/ccvUPO8Q.s 			page 569


 255:/usr/include/c++/6/bits/stl_algobase.h ****    *  @param  __b  Another thing of arbitrary type.
 256:/usr/include/c++/6/bits/stl_algobase.h ****    *  @param  __comp  A @link comparison_functors comparison functor@endlink.
 257:/usr/include/c++/6/bits/stl_algobase.h ****    *  @return   The greater of the parameters.
 258:/usr/include/c++/6/bits/stl_algobase.h ****    *
 259:/usr/include/c++/6/bits/stl_algobase.h ****    *  This will work on temporary expressions, since they are only evaluated
 260:/usr/include/c++/6/bits/stl_algobase.h ****    *  once, unlike a preprocessor macro.
 261:/usr/include/c++/6/bits/stl_algobase.h ****   */
 262:/usr/include/c++/6/bits/stl_algobase.h ****   template<typename _Tp, typename _Compare>
 263:/usr/include/c++/6/bits/stl_algobase.h ****     _GLIBCXX14_CONSTEXPR
 264:/usr/include/c++/6/bits/stl_algobase.h ****     inline const _Tp&
 265:/usr/include/c++/6/bits/stl_algobase.h ****     max(const _Tp& __a, const _Tp& __b, _Compare __comp)
 266:/usr/include/c++/6/bits/stl_algobase.h ****     {
 267:/usr/include/c++/6/bits/stl_algobase.h ****       //return __comp(__a, __b) ? __b : __a;
 268:/usr/include/c++/6/bits/stl_algobase.h ****       if (__comp(__a, __b))
 269:/usr/include/c++/6/bits/stl_algobase.h **** 	return __b;
 270:/usr/include/c++/6/bits/stl_algobase.h ****       return __a;
 271:/usr/include/c++/6/bits/stl_algobase.h ****     }
 272:/usr/include/c++/6/bits/stl_algobase.h **** 
 273:/usr/include/c++/6/bits/stl_algobase.h ****   // Fallback implementation of the function in bits/stl_iterator.h used to
 274:/usr/include/c++/6/bits/stl_algobase.h ****   // remove the __normal_iterator wrapper. See copy, fill, ...
 275:/usr/include/c++/6/bits/stl_algobase.h ****   template<typename _Iterator>
 276:/usr/include/c++/6/bits/stl_algobase.h ****     inline _Iterator
 277:/usr/include/c++/6/bits/stl_algobase.h ****     __niter_base(_Iterator __it)
 278:/usr/include/c++/6/bits/stl_algobase.h ****     { return __it; }
 279:/usr/include/c++/6/bits/stl_algobase.h **** 
 280:/usr/include/c++/6/bits/stl_algobase.h ****   // All of these auxiliary structs serve two purposes.  (1) Replace
 281:/usr/include/c++/6/bits/stl_algobase.h ****   // calls to copy with memmove whenever possible.  (Memmove, not memcpy,
 282:/usr/include/c++/6/bits/stl_algobase.h ****   // because the input and output ranges are permitted to overlap.)
 283:/usr/include/c++/6/bits/stl_algobase.h ****   // (2) If we're using random access iterators, then write the loop as
 284:/usr/include/c++/6/bits/stl_algobase.h ****   // a for loop with an explicit count.
 285:/usr/include/c++/6/bits/stl_algobase.h **** 
 286:/usr/include/c++/6/bits/stl_algobase.h ****   template<bool, bool, typename>
 287:/usr/include/c++/6/bits/stl_algobase.h ****     struct __copy_move
 288:/usr/include/c++/6/bits/stl_algobase.h ****     {
 289:/usr/include/c++/6/bits/stl_algobase.h ****       template<typename _II, typename _OI>
 290:/usr/include/c++/6/bits/stl_algobase.h ****         static _OI
 291:/usr/include/c++/6/bits/stl_algobase.h ****         __copy_m(_II __first, _II __last, _OI __result)
 292:/usr/include/c++/6/bits/stl_algobase.h ****         {
 293:/usr/include/c++/6/bits/stl_algobase.h **** 	  for (; __first != __last; ++__result, (void)++__first)
 294:/usr/include/c++/6/bits/stl_algobase.h **** 	    *__result = *__first;
 295:/usr/include/c++/6/bits/stl_algobase.h **** 	  return __result;
 296:/usr/include/c++/6/bits/stl_algobase.h **** 	}
 297:/usr/include/c++/6/bits/stl_algobase.h ****     };
 298:/usr/include/c++/6/bits/stl_algobase.h **** 
 299:/usr/include/c++/6/bits/stl_algobase.h **** #if __cplusplus >= 201103L
 300:/usr/include/c++/6/bits/stl_algobase.h ****   template<typename _Category>
 301:/usr/include/c++/6/bits/stl_algobase.h ****     struct __copy_move<true, false, _Category>
 302:/usr/include/c++/6/bits/stl_algobase.h ****     {
 303:/usr/include/c++/6/bits/stl_algobase.h ****       template<typename _II, typename _OI>
 304:/usr/include/c++/6/bits/stl_algobase.h ****         static _OI
 305:/usr/include/c++/6/bits/stl_algobase.h ****         __copy_m(_II __first, _II __last, _OI __result)
 306:/usr/include/c++/6/bits/stl_algobase.h ****         {
 307:/usr/include/c++/6/bits/stl_algobase.h **** 	  for (; __first != __last; ++__result, (void)++__first)
 308:/usr/include/c++/6/bits/stl_algobase.h **** 	    *__result = std::move(*__first);
 309:/usr/include/c++/6/bits/stl_algobase.h **** 	  return __result;
 310:/usr/include/c++/6/bits/stl_algobase.h **** 	}
 311:/usr/include/c++/6/bits/stl_algobase.h ****     };
GAS LISTING /tmp/ccvUPO8Q.s 			page 570


 312:/usr/include/c++/6/bits/stl_algobase.h **** #endif
 313:/usr/include/c++/6/bits/stl_algobase.h **** 
 314:/usr/include/c++/6/bits/stl_algobase.h ****   template<>
 315:/usr/include/c++/6/bits/stl_algobase.h ****     struct __copy_move<false, false, random_access_iterator_tag>
 316:/usr/include/c++/6/bits/stl_algobase.h ****     {
 317:/usr/include/c++/6/bits/stl_algobase.h ****       template<typename _II, typename _OI>
 318:/usr/include/c++/6/bits/stl_algobase.h ****         static _OI
 319:/usr/include/c++/6/bits/stl_algobase.h ****         __copy_m(_II __first, _II __last, _OI __result)
 320:/usr/include/c++/6/bits/stl_algobase.h ****         { 
 321:/usr/include/c++/6/bits/stl_algobase.h **** 	  typedef typename iterator_traits<_II>::difference_type _Distance;
 322:/usr/include/c++/6/bits/stl_algobase.h **** 	  for(_Distance __n = __last - __first; __n > 0; --__n)
 323:/usr/include/c++/6/bits/stl_algobase.h **** 	    {
 324:/usr/include/c++/6/bits/stl_algobase.h **** 	      *__result = *__first;
 325:/usr/include/c++/6/bits/stl_algobase.h **** 	      ++__first;
 326:/usr/include/c++/6/bits/stl_algobase.h **** 	      ++__result;
 327:/usr/include/c++/6/bits/stl_algobase.h **** 	    }
 328:/usr/include/c++/6/bits/stl_algobase.h **** 	  return __result;
 329:/usr/include/c++/6/bits/stl_algobase.h **** 	}
 330:/usr/include/c++/6/bits/stl_algobase.h ****     };
 331:/usr/include/c++/6/bits/stl_algobase.h **** 
 332:/usr/include/c++/6/bits/stl_algobase.h **** #if __cplusplus >= 201103L
 333:/usr/include/c++/6/bits/stl_algobase.h ****   template<>
 334:/usr/include/c++/6/bits/stl_algobase.h ****     struct __copy_move<true, false, random_access_iterator_tag>
 335:/usr/include/c++/6/bits/stl_algobase.h ****     {
 336:/usr/include/c++/6/bits/stl_algobase.h ****       template<typename _II, typename _OI>
 337:/usr/include/c++/6/bits/stl_algobase.h ****         static _OI
 338:/usr/include/c++/6/bits/stl_algobase.h ****         __copy_m(_II __first, _II __last, _OI __result)
 339:/usr/include/c++/6/bits/stl_algobase.h ****         { 
 340:/usr/include/c++/6/bits/stl_algobase.h **** 	  typedef typename iterator_traits<_II>::difference_type _Distance;
 341:/usr/include/c++/6/bits/stl_algobase.h **** 	  for(_Distance __n = __last - __first; __n > 0; --__n)
 342:/usr/include/c++/6/bits/stl_algobase.h **** 	    {
 343:/usr/include/c++/6/bits/stl_algobase.h **** 	      *__result = std::move(*__first);
 344:/usr/include/c++/6/bits/stl_algobase.h **** 	      ++__first;
 345:/usr/include/c++/6/bits/stl_algobase.h **** 	      ++__result;
 346:/usr/include/c++/6/bits/stl_algobase.h **** 	    }
 347:/usr/include/c++/6/bits/stl_algobase.h **** 	  return __result;
 348:/usr/include/c++/6/bits/stl_algobase.h **** 	}
 349:/usr/include/c++/6/bits/stl_algobase.h ****     };
 350:/usr/include/c++/6/bits/stl_algobase.h **** #endif
 351:/usr/include/c++/6/bits/stl_algobase.h **** 
 352:/usr/include/c++/6/bits/stl_algobase.h ****   template<bool _IsMove>
 353:/usr/include/c++/6/bits/stl_algobase.h ****     struct __copy_move<_IsMove, true, random_access_iterator_tag>
 354:/usr/include/c++/6/bits/stl_algobase.h ****     {
 355:/usr/include/c++/6/bits/stl_algobase.h ****       template<typename _Tp>
 356:/usr/include/c++/6/bits/stl_algobase.h ****         static _Tp*
 357:/usr/include/c++/6/bits/stl_algobase.h ****         __copy_m(const _Tp* __first, const _Tp* __last, _Tp* __result)
 358:/usr/include/c++/6/bits/stl_algobase.h ****         {
 359:/usr/include/c++/6/bits/stl_algobase.h **** #if __cplusplus >= 201103L
 360:/usr/include/c++/6/bits/stl_algobase.h **** 	  using __assignable = conditional<_IsMove,
 361:/usr/include/c++/6/bits/stl_algobase.h **** 					   is_move_assignable<_Tp>,
 362:/usr/include/c++/6/bits/stl_algobase.h **** 					   is_copy_assignable<_Tp>>;
 363:/usr/include/c++/6/bits/stl_algobase.h **** 	  // trivial types can have deleted assignment
 364:/usr/include/c++/6/bits/stl_algobase.h **** 	  static_assert( __assignable::type::value, "type is not assignable" );
 365:/usr/include/c++/6/bits/stl_algobase.h **** #endif
 366:/usr/include/c++/6/bits/stl_algobase.h **** 	  const ptrdiff_t _Num = __last - __first;
 367:/usr/include/c++/6/bits/stl_algobase.h **** 	  if (_Num)
 368:/usr/include/c++/6/bits/stl_algobase.h **** 	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
GAS LISTING /tmp/ccvUPO8Q.s 			page 571


 369:/usr/include/c++/6/bits/stl_algobase.h **** 	  return __result + _Num;
 370:/usr/include/c++/6/bits/stl_algobase.h **** 	}
 371:/usr/include/c++/6/bits/stl_algobase.h ****     };
 372:/usr/include/c++/6/bits/stl_algobase.h **** 
 373:/usr/include/c++/6/bits/stl_algobase.h ****   template<bool _IsMove, typename _II, typename _OI>
 374:/usr/include/c++/6/bits/stl_algobase.h ****     inline _OI
 375:/usr/include/c++/6/bits/stl_algobase.h ****     __copy_move_a(_II __first, _II __last, _OI __result)
 376:/usr/include/c++/6/bits/stl_algobase.h ****     {
 377:/usr/include/c++/6/bits/stl_algobase.h ****       typedef typename iterator_traits<_II>::value_type _ValueTypeI;
 378:/usr/include/c++/6/bits/stl_algobase.h ****       typedef typename iterator_traits<_OI>::value_type _ValueTypeO;
 379:/usr/include/c++/6/bits/stl_algobase.h ****       typedef typename iterator_traits<_II>::iterator_category _Category;
 380:/usr/include/c++/6/bits/stl_algobase.h ****       const bool __simple = (__is_trivial(_ValueTypeI)
 381:/usr/include/c++/6/bits/stl_algobase.h **** 	                     && __is_pointer<_II>::__value
 382:/usr/include/c++/6/bits/stl_algobase.h **** 	                     && __is_pointer<_OI>::__value
 383:/usr/include/c++/6/bits/stl_algobase.h **** 			     && __are_same<_ValueTypeI, _ValueTypeO>::__value);
 384:/usr/include/c++/6/bits/stl_algobase.h **** 
 385:/usr/include/c++/6/bits/stl_algobase.h ****       return std::__copy_move<_IsMove, __simple,
 386:/usr/include/c++/6/bits/stl_algobase.h **** 	                      _Category>::__copy_m(__first, __last, __result);
 387:/usr/include/c++/6/bits/stl_algobase.h ****     }
 388:/usr/include/c++/6/bits/stl_algobase.h **** 
 389:/usr/include/c++/6/bits/stl_algobase.h ****   // Helpers for streambuf iterators (either istream or ostream).
 390:/usr/include/c++/6/bits/stl_algobase.h ****   // NB: avoid including <iosfwd>, relatively large.
 391:/usr/include/c++/6/bits/stl_algobase.h ****   template<typename _CharT>
 392:/usr/include/c++/6/bits/stl_algobase.h ****     struct char_traits;
 393:/usr/include/c++/6/bits/stl_algobase.h **** 
 394:/usr/include/c++/6/bits/stl_algobase.h ****   template<typename _CharT, typename _Traits>
 395:/usr/include/c++/6/bits/stl_algobase.h ****     class istreambuf_iterator;
 396:/usr/include/c++/6/bits/stl_algobase.h **** 
 397:/usr/include/c++/6/bits/stl_algobase.h ****   template<typename _CharT, typename _Traits>
 398:/usr/include/c++/6/bits/stl_algobase.h ****     class ostreambuf_iterator;
 399:/usr/include/c++/6/bits/stl_algobase.h **** 
 400:/usr/include/c++/6/bits/stl_algobase.h ****   template<bool _IsMove, typename _CharT>
 401:/usr/include/c++/6/bits/stl_algobase.h ****     typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value, 
 402:/usr/include/c++/6/bits/stl_algobase.h **** 	     ostreambuf_iterator<_CharT, char_traits<_CharT> > >::__type
 403:/usr/include/c++/6/bits/stl_algobase.h ****     __copy_move_a2(_CharT*, _CharT*,
 404:/usr/include/c++/6/bits/stl_algobase.h **** 		   ostreambuf_iterator<_CharT, char_traits<_CharT> >);
 405:/usr/include/c++/6/bits/stl_algobase.h **** 
 406:/usr/include/c++/6/bits/stl_algobase.h ****   template<bool _IsMove, typename _CharT>
 407:/usr/include/c++/6/bits/stl_algobase.h ****     typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value, 
 408:/usr/include/c++/6/bits/stl_algobase.h **** 	     ostreambuf_iterator<_CharT, char_traits<_CharT> > >::__type
 409:/usr/include/c++/6/bits/stl_algobase.h ****     __copy_move_a2(const _CharT*, const _CharT*,
 410:/usr/include/c++/6/bits/stl_algobase.h **** 		   ostreambuf_iterator<_CharT, char_traits<_CharT> >);
 411:/usr/include/c++/6/bits/stl_algobase.h **** 
 412:/usr/include/c++/6/bits/stl_algobase.h ****   template<bool _IsMove, typename _CharT>
 413:/usr/include/c++/6/bits/stl_algobase.h ****     typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value,
 414:/usr/include/c++/6/bits/stl_algobase.h **** 				    _CharT*>::__type
 415:/usr/include/c++/6/bits/stl_algobase.h ****     __copy_move_a2(istreambuf_iterator<_CharT, char_traits<_CharT> >,
 416:/usr/include/c++/6/bits/stl_algobase.h **** 		   istreambuf_iterator<_CharT, char_traits<_CharT> >, _CharT*);
 417:/usr/include/c++/6/bits/stl_algobase.h **** 
 418:/usr/include/c++/6/bits/stl_algobase.h ****   template<bool _IsMove, typename _II, typename _OI>
 419:/usr/include/c++/6/bits/stl_algobase.h ****     inline _OI
 420:/usr/include/c++/6/bits/stl_algobase.h ****     __copy_move_a2(_II __first, _II __last, _OI __result)
 421:/usr/include/c++/6/bits/stl_algobase.h ****     {
 422:/usr/include/c++/6/bits/stl_algobase.h ****       return _OI(std::__copy_move_a<_IsMove>(std::__niter_base(__first),
 423:/usr/include/c++/6/bits/stl_algobase.h **** 					     std::__niter_base(__last),
 424:/usr/include/c++/6/bits/stl_algobase.h **** 					     std::__niter_base(__result)));
 425:/usr/include/c++/6/bits/stl_algobase.h ****     }
GAS LISTING /tmp/ccvUPO8Q.s 			page 572


 426:/usr/include/c++/6/bits/stl_algobase.h **** 
 427:/usr/include/c++/6/bits/stl_algobase.h ****   /**
 428:/usr/include/c++/6/bits/stl_algobase.h ****    *  @brief Copies the range [first,last) into result.
 429:/usr/include/c++/6/bits/stl_algobase.h ****    *  @ingroup mutating_algorithms
 430:/usr/include/c++/6/bits/stl_algobase.h ****    *  @param  __first  An input iterator.
 431:/usr/include/c++/6/bits/stl_algobase.h ****    *  @param  __last   An input iterator.
 432:/usr/include/c++/6/bits/stl_algobase.h ****    *  @param  __result An output iterator.
 433:/usr/include/c++/6/bits/stl_algobase.h ****    *  @return   result + (first - last)
 434:/usr/include/c++/6/bits/stl_algobase.h ****    *
 435:/usr/include/c++/6/bits/stl_algobase.h ****    *  This inline function will boil down to a call to @c memmove whenever
 436:/usr/include/c++/6/bits/stl_algobase.h ****    *  possible.  Failing that, if random access iterators are passed, then the
 437:/usr/include/c++/6/bits/stl_algobase.h ****    *  loop count will be known (and therefore a candidate for compiler
 438:/usr/include/c++/6/bits/stl_algobase.h ****    *  optimizations such as unrolling).  Result may not be contained within
 439:/usr/include/c++/6/bits/stl_algobase.h ****    *  [first,last); the copy_backward function should be used instead.
 440:/usr/include/c++/6/bits/stl_algobase.h ****    *
 441:/usr/include/c++/6/bits/stl_algobase.h ****    *  Note that the end of the output range is permitted to be contained
 442:/usr/include/c++/6/bits/stl_algobase.h ****    *  within [first,last).
 443:/usr/include/c++/6/bits/stl_algobase.h ****   */
 444:/usr/include/c++/6/bits/stl_algobase.h ****   template<typename _II, typename _OI>
 445:/usr/include/c++/6/bits/stl_algobase.h ****     inline _OI
 446:/usr/include/c++/6/bits/stl_algobase.h ****     copy(_II __first, _II __last, _OI __result)
 447:/usr/include/c++/6/bits/stl_algobase.h ****     {
 448:/usr/include/c++/6/bits/stl_algobase.h ****       // concept requirements
 449:/usr/include/c++/6/bits/stl_algobase.h ****       __glibcxx_function_requires(_InputIteratorConcept<_II>)
 450:/usr/include/c++/6/bits/stl_algobase.h ****       __glibcxx_function_requires(_OutputIteratorConcept<_OI,
 451:/usr/include/c++/6/bits/stl_algobase.h **** 	    typename iterator_traits<_II>::value_type>)
 452:/usr/include/c++/6/bits/stl_algobase.h ****       __glibcxx_requires_valid_range(__first, __last);
 453:/usr/include/c++/6/bits/stl_algobase.h **** 
 454:/usr/include/c++/6/bits/stl_algobase.h ****       return (std::__copy_move_a2<__is_move_iterator<_II>::__value>
 455:/usr/include/c++/6/bits/stl_algobase.h **** 	      (std::__miter_base(__first), std::__miter_base(__last),
 456:/usr/include/c++/6/bits/stl_algobase.h **** 	       __result));
 457:/usr/include/c++/6/bits/stl_algobase.h ****     }
 458:/usr/include/c++/6/bits/stl_algobase.h **** 
 459:/usr/include/c++/6/bits/stl_algobase.h **** #if __cplusplus >= 201103L
 460:/usr/include/c++/6/bits/stl_algobase.h ****   /**
 461:/usr/include/c++/6/bits/stl_algobase.h ****    *  @brief Moves the range [first,last) into result.
 462:/usr/include/c++/6/bits/stl_algobase.h ****    *  @ingroup mutating_algorithms
 463:/usr/include/c++/6/bits/stl_algobase.h ****    *  @param  __first  An input iterator.
 464:/usr/include/c++/6/bits/stl_algobase.h ****    *  @param  __last   An input iterator.
 465:/usr/include/c++/6/bits/stl_algobase.h ****    *  @param  __result An output iterator.
 466:/usr/include/c++/6/bits/stl_algobase.h ****    *  @return   result + (first - last)
 467:/usr/include/c++/6/bits/stl_algobase.h ****    *
 468:/usr/include/c++/6/bits/stl_algobase.h ****    *  This inline function will boil down to a call to @c memmove whenever
 469:/usr/include/c++/6/bits/stl_algobase.h ****    *  possible.  Failing that, if random access iterators are passed, then the
 470:/usr/include/c++/6/bits/stl_algobase.h ****    *  loop count will be known (and therefore a candidate for compiler
 471:/usr/include/c++/6/bits/stl_algobase.h ****    *  optimizations such as unrolling).  Result may not be contained within
 472:/usr/include/c++/6/bits/stl_algobase.h ****    *  [first,last); the move_backward function should be used instead.
 473:/usr/include/c++/6/bits/stl_algobase.h ****    *
 474:/usr/include/c++/6/bits/stl_algobase.h ****    *  Note that the end of the output range is permitted to be contained
 475:/usr/include/c++/6/bits/stl_algobase.h ****    *  within [first,last).
 476:/usr/include/c++/6/bits/stl_algobase.h ****   */
 477:/usr/include/c++/6/bits/stl_algobase.h ****   template<typename _II, typename _OI>
 478:/usr/include/c++/6/bits/stl_algobase.h ****     inline _OI
 479:/usr/include/c++/6/bits/stl_algobase.h ****     move(_II __first, _II __last, _OI __result)
 13750              		.loc 44 479 0
 13751              		.cfi_startproc
 13752 0000 55       		pushq	%rbp
GAS LISTING /tmp/ccvUPO8Q.s 			page 573


 13753              		.cfi_def_cfa_offset 16
 13754              		.cfi_offset 6, -16
 13755 0001 4889E5   		movq	%rsp, %rbp
 13756              		.cfi_def_cfa_register 6
 13757 0004 53       		pushq	%rbx
 13758 0005 4883EC28 		subq	$40, %rsp
 13759              		.cfi_offset 3, -24
 13760 0009 48897DE8 		movq	%rdi, -24(%rbp)
 13761 000d 488975E0 		movq	%rsi, -32(%rbp)
 13762 0011 488955D8 		movq	%rdx, -40(%rbp)
 480:/usr/include/c++/6/bits/stl_algobase.h ****     {
 481:/usr/include/c++/6/bits/stl_algobase.h ****       // concept requirements
 482:/usr/include/c++/6/bits/stl_algobase.h ****       __glibcxx_function_requires(_InputIteratorConcept<_II>)
 483:/usr/include/c++/6/bits/stl_algobase.h ****       __glibcxx_function_requires(_OutputIteratorConcept<_OI,
 484:/usr/include/c++/6/bits/stl_algobase.h **** 	    typename iterator_traits<_II>::value_type>)
 485:/usr/include/c++/6/bits/stl_algobase.h ****       __glibcxx_requires_valid_range(__first, __last);
 486:/usr/include/c++/6/bits/stl_algobase.h **** 
 487:/usr/include/c++/6/bits/stl_algobase.h ****       return std::__copy_move_a2<true>(std::__miter_base(__first),
 13763              		.loc 44 487 0
 13764 0015 488B45E0 		movq	-32(%rbp), %rax
 13765 0019 4889C7   		movq	%rax, %rdi
 13766 001c E8000000 		call	_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPN2gr5tag_tESt6vectorIS3_SaIS3_EEEEET_S9_
 13766      00
 13767 0021 4889C3   		movq	%rax, %rbx
 13768 0024 488B45E8 		movq	-24(%rbp), %rax
 13769 0028 4889C7   		movq	%rax, %rdi
 13770 002b E8000000 		call	_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPN2gr5tag_tESt6vectorIS3_SaIS3_EEEEET_S9_
 13770      00
 13771 0030 4889C1   		movq	%rax, %rcx
 488:/usr/include/c++/6/bits/stl_algobase.h **** 				       std::__miter_base(__last), __result);
 13772              		.loc 44 488 0
 13773 0033 488B45D8 		movq	-40(%rbp), %rax
 13774 0037 4889C2   		movq	%rax, %rdx
 13775 003a 4889DE   		movq	%rbx, %rsi
 13776 003d 4889CF   		movq	%rcx, %rdi
 13777 0040 E8000000 		call	_ZSt14__copy_move_a2ILb1EN9__gnu_cxx17__normal_iteratorIPN2gr5tag_tESt6vectorIS3_SaIS3_EEEES8
 13777      00
 489:/usr/include/c++/6/bits/stl_algobase.h ****     }
 13778              		.loc 44 489 0
 13779 0045 4883C428 		addq	$40, %rsp
 13780 0049 5B       		popq	%rbx
 13781 004a 5D       		popq	%rbp
 13782              		.cfi_def_cfa 7, 8
 13783 004b C3       		ret
 13784              		.cfi_endproc
 13785              	.LFE14186:
 13787              		.section	.text._ZNSt16allocator_traitsISaIN2gr5tag_tEEE7destroyIS1_EEvRS2_PT_,"axG",@progbits,_ZNS
 13788              		.weak	_ZNSt16allocator_traitsISaIN2gr5tag_tEEE7destroyIS1_EEvRS2_PT_
 13790              	_ZNSt16allocator_traitsISaIN2gr5tag_tEEE7destroyIS1_EEvRS2_PT_:
 13791              	.LFB14187:
 486:/usr/include/c++/6/bits/alloc_traits.h **** 	{ __a.destroy(__p); }
 13792              		.loc 42 486 0
 13793              		.cfi_startproc
 13794 0000 55       		pushq	%rbp
 13795              		.cfi_def_cfa_offset 16
 13796              		.cfi_offset 6, -16
 13797 0001 4889E5   		movq	%rsp, %rbp
GAS LISTING /tmp/ccvUPO8Q.s 			page 574


 13798              		.cfi_def_cfa_register 6
 13799 0004 4883EC10 		subq	$16, %rsp
 13800 0008 48897DF8 		movq	%rdi, -8(%rbp)
 13801 000c 488975F0 		movq	%rsi, -16(%rbp)
 487:/usr/include/c++/6/bits/alloc_traits.h **** 
 13802              		.loc 42 487 0
 13803 0010 488B55F0 		movq	-16(%rbp), %rdx
 13804 0014 488B45F8 		movq	-8(%rbp), %rax
 13805 0018 4889D6   		movq	%rdx, %rsi
 13806 001b 4889C7   		movq	%rax, %rdi
 13807 001e E8000000 		call	_ZN9__gnu_cxx13new_allocatorIN2gr5tag_tEE7destroyIS2_EEvPT_
 13807      00
 13808 0023 90       		nop
 13809 0024 C9       		leave
 13810              		.cfi_def_cfa 7, 8
 13811 0025 C3       		ret
 13812              		.cfi_endproc
 13813              	.LFE14187:
 13815              		.section	.text._ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFv
 13816              		.align 2
 13817              		.weak	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt
 13819              	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt10_Sele
 13820              	.LFB14335:
 565:/usr/include/c++/6/bits/stl_tree.h ****       {
 13821              		.loc 27 565 0
 13822              		.cfi_startproc
 13823              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 13824              		.cfi_lsda 0x1b,.LLSDA14335
 13825 0000 55       		pushq	%rbp
 13826              		.cfi_def_cfa_offset 16
 13827              		.cfi_offset 6, -16
 13828 0001 4889E5   		movq	%rsp, %rbp
 13829              		.cfi_def_cfa_register 6
 13830 0004 53       		pushq	%rbx
 13831 0005 4883EC18 		subq	$24, %rsp
 13832              		.cfi_offset 3, -24
 13833 0009 48897DE8 		movq	%rdi, -24(%rbp)
 13834 000d 488975E0 		movq	%rsi, -32(%rbp)
 567:/usr/include/c++/6/bits/stl_tree.h **** 	__p->~_Rb_tree_node<_Val>();
 13835              		.loc 27 567 0
 13836 0011 488B45E0 		movq	-32(%rbp), %rax
 13837 0015 4889C7   		movq	%rax, %rdi
 13838 0018 E8000000 		call	_ZNSt13_Rb_tree_nodeISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS1_8functionIFvS5_EEEE
 13838      00
 13839 001d 4889C3   		movq	%rax, %rbx
 13840 0020 488B45E8 		movq	-24(%rbp), %rax
 13841 0024 4889C7   		movq	%rax, %rdi
 13842 0027 E8000000 		call	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt1
 13842      00
 13843 002c 4889DE   		movq	%rbx, %rsi
 13844 002f 4889C7   		movq	%rax, %rdi
 13845 0032 E8000000 		call	_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEE
 13845      00
 569:/usr/include/c++/6/bits/stl_tree.h **** #endif
 13846              		.loc 27 569 0
 13847 0037 90       		nop
 13848 0038 4883C418 		addq	$24, %rsp
GAS LISTING /tmp/ccvUPO8Q.s 			page 575


 13849 003c 5B       		popq	%rbx
 13850 003d 5D       		popq	%rbp
 13851              		.cfi_def_cfa 7, 8
 13852 003e C3       		ret
 13853              		.cfi_endproc
 13854              	.LFE14335:
 13855              		.section	.gcc_except_table
 13856              	.LLSDA14335:
 13857 01fa FF       		.byte	0xff
 13858 01fb FF       		.byte	0xff
 13859 01fc 01       		.byte	0x1
 13860 01fd 00       		.uleb128 .LLSDACSE14335-.LLSDACSB14335
 13861              	.LLSDACSB14335:
 13862              	.LLSDACSE14335:
 13863              		.section	.text._ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFv
 13865              		.section	.text._ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFv
 13866              		.align 2
 13867              		.weak	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt
 13869              	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt10_Sele
 13870              	.LFB14336:
 508:/usr/include/c++/6/bits/stl_tree.h ****       { _Alloc_traits::deallocate(_M_get_Node_allocator(), __p, 1); }
 13871              		.loc 27 508 0
 13872              		.cfi_startproc
 13873              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 13874              		.cfi_lsda 0x1b,.LLSDA14336
 13875 0000 55       		pushq	%rbp
 13876              		.cfi_def_cfa_offset 16
 13877              		.cfi_offset 6, -16
 13878 0001 4889E5   		movq	%rsp, %rbp
 13879              		.cfi_def_cfa_register 6
 13880 0004 4883EC10 		subq	$16, %rsp
 13881 0008 48897DF8 		movq	%rdi, -8(%rbp)
 13882 000c 488975F0 		movq	%rsi, -16(%rbp)
 509:/usr/include/c++/6/bits/stl_tree.h **** 
 13883              		.loc 27 509 0
 13884 0010 488B45F8 		movq	-8(%rbp), %rax
 13885 0014 4889C7   		movq	%rax, %rdi
 13886 0017 E8000000 		call	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt1
 13886      00
 13887 001c 4889C1   		movq	%rax, %rcx
 13888 001f 488B45F0 		movq	-16(%rbp), %rax
 13889 0023 BA010000 		movl	$1, %edx
 13889      00
 13890 0028 4889C6   		movq	%rax, %rsi
 13891 002b 4889CF   		movq	%rcx, %rdi
 13892 002e E8000000 		call	_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEE
 13892      00
 13893 0033 90       		nop
 13894 0034 C9       		leave
 13895              		.cfi_def_cfa 7, 8
 13896 0035 C3       		ret
 13897              		.cfi_endproc
 13898              	.LFE14336:
 13899              		.section	.gcc_except_table
 13900              	.LLSDA14336:
 13901 01fe FF       		.byte	0xff
 13902 01ff FF       		.byte	0xff
GAS LISTING /tmp/ccvUPO8Q.s 			page 576


 13903 0200 01       		.byte	0x1
 13904 0201 00       		.uleb128 .LLSDACSE14336-.LLSDACSB14336
 13905              	.LLSDACSB14336:
 13906              	.LLSDACSE14336:
 13907              		.section	.text._ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFv
 13909              		.section	.text._ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFv
 13910              		.weak	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt
 13912              	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt10_Sele
 13913              	.LFB14357:
 708:/usr/include/c++/6/bits/stl_tree.h ****       { return *static_cast<_Const_Link_type>(__x)->_M_valptr(); }
 13914              		.loc 27 708 0
 13915              		.cfi_startproc
 13916 0000 55       		pushq	%rbp
 13917              		.cfi_def_cfa_offset 16
 13918              		.cfi_offset 6, -16
 13919 0001 4889E5   		movq	%rsp, %rbp
 13920              		.cfi_def_cfa_register 6
 13921 0004 4883EC10 		subq	$16, %rsp
 13922 0008 48897DF8 		movq	%rdi, -8(%rbp)
 709:/usr/include/c++/6/bits/stl_tree.h **** 
 13923              		.loc 27 709 0
 13924 000c 488B45F8 		movq	-8(%rbp), %rax
 13925 0010 4889C7   		movq	%rax, %rdi
 13926 0013 E8000000 		call	_ZNKSt13_Rb_tree_nodeISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS1_8functionIFvS5_EEE
 13926      00
 13927 0018 C9       		leave
 13928              		.cfi_def_cfa 7, 8
 13929 0019 C3       		ret
 13930              		.cfi_endproc
 13931              	.LFE14357:
 13933              		.section	.text._ZNKSt10_Select1stISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS1_8functionIF
 13934              		.align 2
 13935              		.weak	_ZNKSt10_Select1stISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS1_8functionIFvS5_EEEEE
 13937              	_ZNKSt10_Select1stISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS1_8functionIFvS5_EEEEEclERKSA
 13938              	.LFB14358:
 13939              		.file 45 "/usr/include/c++/6/bits/stl_function.h"
   1:/usr/include/c++/6/bits/stl_function.h **** // Functor implementations -*- C++ -*-
   2:/usr/include/c++/6/bits/stl_function.h **** 
   3:/usr/include/c++/6/bits/stl_function.h **** // Copyright (C) 2001-2016 Free Software Foundation, Inc.
   4:/usr/include/c++/6/bits/stl_function.h **** //
   5:/usr/include/c++/6/bits/stl_function.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/6/bits/stl_function.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/6/bits/stl_function.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/6/bits/stl_function.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/6/bits/stl_function.h **** // any later version.
  10:/usr/include/c++/6/bits/stl_function.h **** 
  11:/usr/include/c++/6/bits/stl_function.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/6/bits/stl_function.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/6/bits/stl_function.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/6/bits/stl_function.h **** // GNU General Public License for more details.
  15:/usr/include/c++/6/bits/stl_function.h **** 
  16:/usr/include/c++/6/bits/stl_function.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/6/bits/stl_function.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/6/bits/stl_function.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/6/bits/stl_function.h **** 
  20:/usr/include/c++/6/bits/stl_function.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/6/bits/stl_function.h **** // a copy of the GCC Runtime Library Exception along with this program;
GAS LISTING /tmp/ccvUPO8Q.s 			page 577


  22:/usr/include/c++/6/bits/stl_function.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/6/bits/stl_function.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/6/bits/stl_function.h **** 
  25:/usr/include/c++/6/bits/stl_function.h **** /*
  26:/usr/include/c++/6/bits/stl_function.h ****  *
  27:/usr/include/c++/6/bits/stl_function.h ****  * Copyright (c) 1994
  28:/usr/include/c++/6/bits/stl_function.h ****  * Hewlett-Packard Company
  29:/usr/include/c++/6/bits/stl_function.h ****  *
  30:/usr/include/c++/6/bits/stl_function.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:/usr/include/c++/6/bits/stl_function.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:/usr/include/c++/6/bits/stl_function.h ****  * provided that the above copyright notice appear in all copies and
  33:/usr/include/c++/6/bits/stl_function.h ****  * that both that copyright notice and this permission notice appear
  34:/usr/include/c++/6/bits/stl_function.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:/usr/include/c++/6/bits/stl_function.h ****  * representations about the suitability of this software for any
  36:/usr/include/c++/6/bits/stl_function.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:/usr/include/c++/6/bits/stl_function.h ****  *
  38:/usr/include/c++/6/bits/stl_function.h ****  *
  39:/usr/include/c++/6/bits/stl_function.h ****  * Copyright (c) 1996-1998
  40:/usr/include/c++/6/bits/stl_function.h ****  * Silicon Graphics Computer Systems, Inc.
  41:/usr/include/c++/6/bits/stl_function.h ****  *
  42:/usr/include/c++/6/bits/stl_function.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:/usr/include/c++/6/bits/stl_function.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:/usr/include/c++/6/bits/stl_function.h ****  * provided that the above copyright notice appear in all copies and
  45:/usr/include/c++/6/bits/stl_function.h ****  * that both that copyright notice and this permission notice appear
  46:/usr/include/c++/6/bits/stl_function.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:/usr/include/c++/6/bits/stl_function.h ****  * representations about the suitability of this software for any
  48:/usr/include/c++/6/bits/stl_function.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:/usr/include/c++/6/bits/stl_function.h ****  */
  50:/usr/include/c++/6/bits/stl_function.h **** 
  51:/usr/include/c++/6/bits/stl_function.h **** /** @file bits/stl_function.h
  52:/usr/include/c++/6/bits/stl_function.h ****  *  This is an internal header file, included by other library headers.
  53:/usr/include/c++/6/bits/stl_function.h ****  *  Do not attempt to use it directly. @headername{functional}
  54:/usr/include/c++/6/bits/stl_function.h ****  */
  55:/usr/include/c++/6/bits/stl_function.h **** 
  56:/usr/include/c++/6/bits/stl_function.h **** #ifndef _STL_FUNCTION_H
  57:/usr/include/c++/6/bits/stl_function.h **** #define _STL_FUNCTION_H 1
  58:/usr/include/c++/6/bits/stl_function.h **** 
  59:/usr/include/c++/6/bits/stl_function.h **** #if __cplusplus > 201103L
  60:/usr/include/c++/6/bits/stl_function.h **** #include <bits/move.h>
  61:/usr/include/c++/6/bits/stl_function.h **** #endif
  62:/usr/include/c++/6/bits/stl_function.h **** 
  63:/usr/include/c++/6/bits/stl_function.h **** namespace std _GLIBCXX_VISIBILITY(default)
  64:/usr/include/c++/6/bits/stl_function.h **** {
  65:/usr/include/c++/6/bits/stl_function.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  66:/usr/include/c++/6/bits/stl_function.h **** 
  67:/usr/include/c++/6/bits/stl_function.h ****   // 20.3.1 base classes
  68:/usr/include/c++/6/bits/stl_function.h ****   /** @defgroup functors Function Objects
  69:/usr/include/c++/6/bits/stl_function.h ****    * @ingroup utilities
  70:/usr/include/c++/6/bits/stl_function.h ****    *
  71:/usr/include/c++/6/bits/stl_function.h ****    *  Function objects, or @e functors, are objects with an @c operator()
  72:/usr/include/c++/6/bits/stl_function.h ****    *  defined and accessible.  They can be passed as arguments to algorithm
  73:/usr/include/c++/6/bits/stl_function.h ****    *  templates and used in place of a function pointer.  Not only is the
  74:/usr/include/c++/6/bits/stl_function.h ****    *  resulting expressiveness of the library increased, but the generated
  75:/usr/include/c++/6/bits/stl_function.h ****    *  code can be more efficient than what you might write by hand.  When we
  76:/usr/include/c++/6/bits/stl_function.h ****    *  refer to @a functors, then, generally we include function pointers in
  77:/usr/include/c++/6/bits/stl_function.h ****    *  the description as well.
  78:/usr/include/c++/6/bits/stl_function.h ****    *
GAS LISTING /tmp/ccvUPO8Q.s 			page 578


  79:/usr/include/c++/6/bits/stl_function.h ****    *  Often, functors are only created as temporaries passed to algorithm
  80:/usr/include/c++/6/bits/stl_function.h ****    *  calls, rather than being created as named variables.
  81:/usr/include/c++/6/bits/stl_function.h ****    *
  82:/usr/include/c++/6/bits/stl_function.h ****    *  Two examples taken from the standard itself follow.  To perform a
  83:/usr/include/c++/6/bits/stl_function.h ****    *  by-element addition of two vectors @c a and @c b containing @c double,
  84:/usr/include/c++/6/bits/stl_function.h ****    *  and put the result in @c a, use
  85:/usr/include/c++/6/bits/stl_function.h ****    *  \code
  86:/usr/include/c++/6/bits/stl_function.h ****    *  transform (a.begin(), a.end(), b.begin(), a.begin(), plus<double>());
  87:/usr/include/c++/6/bits/stl_function.h ****    *  \endcode
  88:/usr/include/c++/6/bits/stl_function.h ****    *  To negate every element in @c a, use
  89:/usr/include/c++/6/bits/stl_function.h ****    *  \code
  90:/usr/include/c++/6/bits/stl_function.h ****    *  transform(a.begin(), a.end(), a.begin(), negate<double>());
  91:/usr/include/c++/6/bits/stl_function.h ****    *  \endcode
  92:/usr/include/c++/6/bits/stl_function.h ****    *  The addition and negation functions will be inlined directly.
  93:/usr/include/c++/6/bits/stl_function.h ****    *
  94:/usr/include/c++/6/bits/stl_function.h ****    *  The standard functors are derived from structs named @c unary_function
  95:/usr/include/c++/6/bits/stl_function.h ****    *  and @c binary_function.  These two classes contain nothing but typedefs,
  96:/usr/include/c++/6/bits/stl_function.h ****    *  to aid in generic (template) programming.  If you write your own
  97:/usr/include/c++/6/bits/stl_function.h ****    *  functors, you might consider doing the same.
  98:/usr/include/c++/6/bits/stl_function.h ****    *
  99:/usr/include/c++/6/bits/stl_function.h ****    *  @{
 100:/usr/include/c++/6/bits/stl_function.h ****    */
 101:/usr/include/c++/6/bits/stl_function.h ****   /**
 102:/usr/include/c++/6/bits/stl_function.h ****    *  This is one of the @link functors functor base classes@endlink.
 103:/usr/include/c++/6/bits/stl_function.h ****    */
 104:/usr/include/c++/6/bits/stl_function.h ****   template<typename _Arg, typename _Result>
 105:/usr/include/c++/6/bits/stl_function.h ****     struct unary_function
 106:/usr/include/c++/6/bits/stl_function.h ****     {
 107:/usr/include/c++/6/bits/stl_function.h ****       /// @c argument_type is the type of the argument
 108:/usr/include/c++/6/bits/stl_function.h ****       typedef _Arg 	argument_type;   
 109:/usr/include/c++/6/bits/stl_function.h **** 
 110:/usr/include/c++/6/bits/stl_function.h ****       /// @c result_type is the return type
 111:/usr/include/c++/6/bits/stl_function.h ****       typedef _Result 	result_type;  
 112:/usr/include/c++/6/bits/stl_function.h ****     };
 113:/usr/include/c++/6/bits/stl_function.h **** 
 114:/usr/include/c++/6/bits/stl_function.h ****   /**
 115:/usr/include/c++/6/bits/stl_function.h ****    *  This is one of the @link functors functor base classes@endlink.
 116:/usr/include/c++/6/bits/stl_function.h ****    */
 117:/usr/include/c++/6/bits/stl_function.h ****   template<typename _Arg1, typename _Arg2, typename _Result>
 118:/usr/include/c++/6/bits/stl_function.h ****     struct binary_function
 119:/usr/include/c++/6/bits/stl_function.h ****     {
 120:/usr/include/c++/6/bits/stl_function.h ****       /// @c first_argument_type is the type of the first argument
 121:/usr/include/c++/6/bits/stl_function.h ****       typedef _Arg1 	first_argument_type; 
 122:/usr/include/c++/6/bits/stl_function.h **** 
 123:/usr/include/c++/6/bits/stl_function.h ****       /// @c second_argument_type is the type of the second argument
 124:/usr/include/c++/6/bits/stl_function.h ****       typedef _Arg2 	second_argument_type;
 125:/usr/include/c++/6/bits/stl_function.h **** 
 126:/usr/include/c++/6/bits/stl_function.h ****       /// @c result_type is the return type
 127:/usr/include/c++/6/bits/stl_function.h ****       typedef _Result 	result_type;
 128:/usr/include/c++/6/bits/stl_function.h ****     };
 129:/usr/include/c++/6/bits/stl_function.h ****   /** @}  */
 130:/usr/include/c++/6/bits/stl_function.h **** 
 131:/usr/include/c++/6/bits/stl_function.h ****   // 20.3.2 arithmetic
 132:/usr/include/c++/6/bits/stl_function.h ****   /** @defgroup arithmetic_functors Arithmetic Classes
 133:/usr/include/c++/6/bits/stl_function.h ****    * @ingroup functors
 134:/usr/include/c++/6/bits/stl_function.h ****    *
 135:/usr/include/c++/6/bits/stl_function.h ****    *  Because basic math often needs to be done during an algorithm,
GAS LISTING /tmp/ccvUPO8Q.s 			page 579


 136:/usr/include/c++/6/bits/stl_function.h ****    *  the library provides functors for those operations.  See the
 137:/usr/include/c++/6/bits/stl_function.h ****    *  documentation for @link functors the base classes@endlink
 138:/usr/include/c++/6/bits/stl_function.h ****    *  for examples of their use.
 139:/usr/include/c++/6/bits/stl_function.h ****    *
 140:/usr/include/c++/6/bits/stl_function.h ****    *  @{
 141:/usr/include/c++/6/bits/stl_function.h ****    */
 142:/usr/include/c++/6/bits/stl_function.h **** 
 143:/usr/include/c++/6/bits/stl_function.h **** #if __cplusplus > 201103L
 144:/usr/include/c++/6/bits/stl_function.h ****   struct __is_transparent;  // undefined
 145:/usr/include/c++/6/bits/stl_function.h **** 
 146:/usr/include/c++/6/bits/stl_function.h ****   template<typename _Tp = void>
 147:/usr/include/c++/6/bits/stl_function.h ****     struct plus;
 148:/usr/include/c++/6/bits/stl_function.h **** 
 149:/usr/include/c++/6/bits/stl_function.h ****   template<typename _Tp = void>
 150:/usr/include/c++/6/bits/stl_function.h ****     struct minus;
 151:/usr/include/c++/6/bits/stl_function.h **** 
 152:/usr/include/c++/6/bits/stl_function.h ****   template<typename _Tp = void>
 153:/usr/include/c++/6/bits/stl_function.h ****     struct multiplies;
 154:/usr/include/c++/6/bits/stl_function.h **** 
 155:/usr/include/c++/6/bits/stl_function.h ****   template<typename _Tp = void>
 156:/usr/include/c++/6/bits/stl_function.h ****     struct divides;
 157:/usr/include/c++/6/bits/stl_function.h **** 
 158:/usr/include/c++/6/bits/stl_function.h ****   template<typename _Tp = void>
 159:/usr/include/c++/6/bits/stl_function.h ****     struct modulus;
 160:/usr/include/c++/6/bits/stl_function.h **** 
 161:/usr/include/c++/6/bits/stl_function.h ****   template<typename _Tp = void>
 162:/usr/include/c++/6/bits/stl_function.h ****     struct negate;
 163:/usr/include/c++/6/bits/stl_function.h **** #endif
 164:/usr/include/c++/6/bits/stl_function.h **** 
 165:/usr/include/c++/6/bits/stl_function.h ****   /// One of the @link arithmetic_functors math functors@endlink.
 166:/usr/include/c++/6/bits/stl_function.h ****   template<typename _Tp>
 167:/usr/include/c++/6/bits/stl_function.h ****     struct plus : public binary_function<_Tp, _Tp, _Tp>
 168:/usr/include/c++/6/bits/stl_function.h ****     {
 169:/usr/include/c++/6/bits/stl_function.h ****       _GLIBCXX14_CONSTEXPR
 170:/usr/include/c++/6/bits/stl_function.h ****       _Tp
 171:/usr/include/c++/6/bits/stl_function.h ****       operator()(const _Tp& __x, const _Tp& __y) const
 172:/usr/include/c++/6/bits/stl_function.h ****       { return __x + __y; }
 173:/usr/include/c++/6/bits/stl_function.h ****     };
 174:/usr/include/c++/6/bits/stl_function.h **** 
 175:/usr/include/c++/6/bits/stl_function.h ****   /// One of the @link arithmetic_functors math functors@endlink.
 176:/usr/include/c++/6/bits/stl_function.h ****   template<typename _Tp>
 177:/usr/include/c++/6/bits/stl_function.h ****     struct minus : public binary_function<_Tp, _Tp, _Tp>
 178:/usr/include/c++/6/bits/stl_function.h ****     {
 179:/usr/include/c++/6/bits/stl_function.h ****       _GLIBCXX14_CONSTEXPR
 180:/usr/include/c++/6/bits/stl_function.h ****       _Tp
 181:/usr/include/c++/6/bits/stl_function.h ****       operator()(const _Tp& __x, const _Tp& __y) const
 182:/usr/include/c++/6/bits/stl_function.h ****       { return __x - __y; }
 183:/usr/include/c++/6/bits/stl_function.h ****     };
 184:/usr/include/c++/6/bits/stl_function.h **** 
 185:/usr/include/c++/6/bits/stl_function.h ****   /// One of the @link arithmetic_functors math functors@endlink.
 186:/usr/include/c++/6/bits/stl_function.h ****   template<typename _Tp>
 187:/usr/include/c++/6/bits/stl_function.h ****     struct multiplies : public binary_function<_Tp, _Tp, _Tp>
 188:/usr/include/c++/6/bits/stl_function.h ****     {
 189:/usr/include/c++/6/bits/stl_function.h ****       _GLIBCXX14_CONSTEXPR
 190:/usr/include/c++/6/bits/stl_function.h ****       _Tp
 191:/usr/include/c++/6/bits/stl_function.h ****       operator()(const _Tp& __x, const _Tp& __y) const
 192:/usr/include/c++/6/bits/stl_function.h ****       { return __x * __y; }
GAS LISTING /tmp/ccvUPO8Q.s 			page 580


 193:/usr/include/c++/6/bits/stl_function.h ****     };
 194:/usr/include/c++/6/bits/stl_function.h **** 
 195:/usr/include/c++/6/bits/stl_function.h ****   /// One of the @link arithmetic_functors math functors@endlink.
 196:/usr/include/c++/6/bits/stl_function.h ****   template<typename _Tp>
 197:/usr/include/c++/6/bits/stl_function.h ****     struct divides : public binary_function<_Tp, _Tp, _Tp>
 198:/usr/include/c++/6/bits/stl_function.h ****     {
 199:/usr/include/c++/6/bits/stl_function.h ****       _GLIBCXX14_CONSTEXPR
 200:/usr/include/c++/6/bits/stl_function.h ****       _Tp
 201:/usr/include/c++/6/bits/stl_function.h ****       operator()(const _Tp& __x, const _Tp& __y) const
 202:/usr/include/c++/6/bits/stl_function.h ****       { return __x / __y; }
 203:/usr/include/c++/6/bits/stl_function.h ****     };
 204:/usr/include/c++/6/bits/stl_function.h **** 
 205:/usr/include/c++/6/bits/stl_function.h ****   /// One of the @link arithmetic_functors math functors@endlink.
 206:/usr/include/c++/6/bits/stl_function.h ****   template<typename _Tp>
 207:/usr/include/c++/6/bits/stl_function.h ****     struct modulus : public binary_function<_Tp, _Tp, _Tp>
 208:/usr/include/c++/6/bits/stl_function.h ****     {
 209:/usr/include/c++/6/bits/stl_function.h ****       _GLIBCXX14_CONSTEXPR
 210:/usr/include/c++/6/bits/stl_function.h ****       _Tp
 211:/usr/include/c++/6/bits/stl_function.h ****       operator()(const _Tp& __x, const _Tp& __y) const
 212:/usr/include/c++/6/bits/stl_function.h ****       { return __x % __y; }
 213:/usr/include/c++/6/bits/stl_function.h ****     };
 214:/usr/include/c++/6/bits/stl_function.h **** 
 215:/usr/include/c++/6/bits/stl_function.h ****   /// One of the @link arithmetic_functors math functors@endlink.
 216:/usr/include/c++/6/bits/stl_function.h ****   template<typename _Tp>
 217:/usr/include/c++/6/bits/stl_function.h ****     struct negate : public unary_function<_Tp, _Tp>
 218:/usr/include/c++/6/bits/stl_function.h ****     {
 219:/usr/include/c++/6/bits/stl_function.h ****       _GLIBCXX14_CONSTEXPR
 220:/usr/include/c++/6/bits/stl_function.h ****       _Tp
 221:/usr/include/c++/6/bits/stl_function.h ****       operator()(const _Tp& __x) const
 222:/usr/include/c++/6/bits/stl_function.h ****       { return -__x; }
 223:/usr/include/c++/6/bits/stl_function.h ****     };
 224:/usr/include/c++/6/bits/stl_function.h **** 
 225:/usr/include/c++/6/bits/stl_function.h **** #if __cplusplus > 201103L
 226:/usr/include/c++/6/bits/stl_function.h **** 
 227:/usr/include/c++/6/bits/stl_function.h **** #define __cpp_lib_transparent_operators 201210
 228:/usr/include/c++/6/bits/stl_function.h **** 
 229:/usr/include/c++/6/bits/stl_function.h ****   template<>
 230:/usr/include/c++/6/bits/stl_function.h ****     struct plus<void>
 231:/usr/include/c++/6/bits/stl_function.h ****     {
 232:/usr/include/c++/6/bits/stl_function.h ****       template <typename _Tp, typename _Up>
 233:/usr/include/c++/6/bits/stl_function.h **** 	_GLIBCXX14_CONSTEXPR
 234:/usr/include/c++/6/bits/stl_function.h **** 	auto
 235:/usr/include/c++/6/bits/stl_function.h **** 	operator()(_Tp&& __t, _Up&& __u) const
 236:/usr/include/c++/6/bits/stl_function.h **** 	noexcept(noexcept(std::forward<_Tp>(__t) + std::forward<_Up>(__u)))
 237:/usr/include/c++/6/bits/stl_function.h **** 	-> decltype(std::forward<_Tp>(__t) + std::forward<_Up>(__u))
 238:/usr/include/c++/6/bits/stl_function.h **** 	{ return std::forward<_Tp>(__t) + std::forward<_Up>(__u); }
 239:/usr/include/c++/6/bits/stl_function.h **** 
 240:/usr/include/c++/6/bits/stl_function.h ****       typedef __is_transparent is_transparent;
 241:/usr/include/c++/6/bits/stl_function.h ****     };
 242:/usr/include/c++/6/bits/stl_function.h **** 
 243:/usr/include/c++/6/bits/stl_function.h ****   /// One of the @link arithmetic_functors math functors@endlink.
 244:/usr/include/c++/6/bits/stl_function.h ****   template<>
 245:/usr/include/c++/6/bits/stl_function.h ****     struct minus<void>
 246:/usr/include/c++/6/bits/stl_function.h ****     {
 247:/usr/include/c++/6/bits/stl_function.h ****       template <typename _Tp, typename _Up>
 248:/usr/include/c++/6/bits/stl_function.h **** 	_GLIBCXX14_CONSTEXPR
 249:/usr/include/c++/6/bits/stl_function.h **** 	auto
GAS LISTING /tmp/ccvUPO8Q.s 			page 581


 250:/usr/include/c++/6/bits/stl_function.h **** 	operator()(_Tp&& __t, _Up&& __u) const
 251:/usr/include/c++/6/bits/stl_function.h **** 	noexcept(noexcept(std::forward<_Tp>(__t) - std::forward<_Up>(__u)))
 252:/usr/include/c++/6/bits/stl_function.h **** 	-> decltype(std::forward<_Tp>(__t) - std::forward<_Up>(__u))
 253:/usr/include/c++/6/bits/stl_function.h **** 	{ return std::forward<_Tp>(__t) - std::forward<_Up>(__u); }
 254:/usr/include/c++/6/bits/stl_function.h **** 
 255:/usr/include/c++/6/bits/stl_function.h ****       typedef __is_transparent is_transparent;
 256:/usr/include/c++/6/bits/stl_function.h ****     };
 257:/usr/include/c++/6/bits/stl_function.h **** 
 258:/usr/include/c++/6/bits/stl_function.h ****   /// One of the @link arithmetic_functors math functors@endlink.
 259:/usr/include/c++/6/bits/stl_function.h ****   template<>
 260:/usr/include/c++/6/bits/stl_function.h ****     struct multiplies<void>
 261:/usr/include/c++/6/bits/stl_function.h ****     {
 262:/usr/include/c++/6/bits/stl_function.h ****       template <typename _Tp, typename _Up>
 263:/usr/include/c++/6/bits/stl_function.h **** 	_GLIBCXX14_CONSTEXPR
 264:/usr/include/c++/6/bits/stl_function.h **** 	auto
 265:/usr/include/c++/6/bits/stl_function.h **** 	operator()(_Tp&& __t, _Up&& __u) const
 266:/usr/include/c++/6/bits/stl_function.h **** 	noexcept(noexcept(std::forward<_Tp>(__t) * std::forward<_Up>(__u)))
 267:/usr/include/c++/6/bits/stl_function.h **** 	-> decltype(std::forward<_Tp>(__t) * std::forward<_Up>(__u))
 268:/usr/include/c++/6/bits/stl_function.h **** 	{ return std::forward<_Tp>(__t) * std::forward<_Up>(__u); }
 269:/usr/include/c++/6/bits/stl_function.h **** 
 270:/usr/include/c++/6/bits/stl_function.h ****       typedef __is_transparent is_transparent;
 271:/usr/include/c++/6/bits/stl_function.h ****     };
 272:/usr/include/c++/6/bits/stl_function.h **** 
 273:/usr/include/c++/6/bits/stl_function.h ****   /// One of the @link arithmetic_functors math functors@endlink.
 274:/usr/include/c++/6/bits/stl_function.h ****   template<>
 275:/usr/include/c++/6/bits/stl_function.h ****     struct divides<void>
 276:/usr/include/c++/6/bits/stl_function.h ****     {
 277:/usr/include/c++/6/bits/stl_function.h ****       template <typename _Tp, typename _Up>
 278:/usr/include/c++/6/bits/stl_function.h **** 	_GLIBCXX14_CONSTEXPR
 279:/usr/include/c++/6/bits/stl_function.h **** 	auto
 280:/usr/include/c++/6/bits/stl_function.h **** 	operator()(_Tp&& __t, _Up&& __u) const
 281:/usr/include/c++/6/bits/stl_function.h **** 	noexcept(noexcept(std::forward<_Tp>(__t) / std::forward<_Up>(__u)))
 282:/usr/include/c++/6/bits/stl_function.h **** 	-> decltype(std::forward<_Tp>(__t) / std::forward<_Up>(__u))
 283:/usr/include/c++/6/bits/stl_function.h **** 	{ return std::forward<_Tp>(__t) / std::forward<_Up>(__u); }
 284:/usr/include/c++/6/bits/stl_function.h **** 
 285:/usr/include/c++/6/bits/stl_function.h ****       typedef __is_transparent is_transparent;
 286:/usr/include/c++/6/bits/stl_function.h ****     };
 287:/usr/include/c++/6/bits/stl_function.h **** 
 288:/usr/include/c++/6/bits/stl_function.h ****   /// One of the @link arithmetic_functors math functors@endlink.
 289:/usr/include/c++/6/bits/stl_function.h ****   template<>
 290:/usr/include/c++/6/bits/stl_function.h ****     struct modulus<void>
 291:/usr/include/c++/6/bits/stl_function.h ****     {
 292:/usr/include/c++/6/bits/stl_function.h ****       template <typename _Tp, typename _Up>
 293:/usr/include/c++/6/bits/stl_function.h **** 	_GLIBCXX14_CONSTEXPR
 294:/usr/include/c++/6/bits/stl_function.h **** 	auto
 295:/usr/include/c++/6/bits/stl_function.h **** 	operator()(_Tp&& __t, _Up&& __u) const
 296:/usr/include/c++/6/bits/stl_function.h **** 	noexcept(noexcept(std::forward<_Tp>(__t) % std::forward<_Up>(__u)))
 297:/usr/include/c++/6/bits/stl_function.h **** 	-> decltype(std::forward<_Tp>(__t) % std::forward<_Up>(__u))
 298:/usr/include/c++/6/bits/stl_function.h **** 	{ return std::forward<_Tp>(__t) % std::forward<_Up>(__u); }
 299:/usr/include/c++/6/bits/stl_function.h **** 
 300:/usr/include/c++/6/bits/stl_function.h ****       typedef __is_transparent is_transparent;
 301:/usr/include/c++/6/bits/stl_function.h ****     };
 302:/usr/include/c++/6/bits/stl_function.h **** 
 303:/usr/include/c++/6/bits/stl_function.h ****   /// One of the @link arithmetic_functors math functors@endlink.
 304:/usr/include/c++/6/bits/stl_function.h ****   template<>
 305:/usr/include/c++/6/bits/stl_function.h ****     struct negate<void>
 306:/usr/include/c++/6/bits/stl_function.h ****     {
GAS LISTING /tmp/ccvUPO8Q.s 			page 582


 307:/usr/include/c++/6/bits/stl_function.h ****       template <typename _Tp>
 308:/usr/include/c++/6/bits/stl_function.h **** 	_GLIBCXX14_CONSTEXPR
 309:/usr/include/c++/6/bits/stl_function.h **** 	auto
 310:/usr/include/c++/6/bits/stl_function.h **** 	operator()(_Tp&& __t) const
 311:/usr/include/c++/6/bits/stl_function.h **** 	noexcept(noexcept(-std::forward<_Tp>(__t)))
 312:/usr/include/c++/6/bits/stl_function.h **** 	-> decltype(-std::forward<_Tp>(__t))
 313:/usr/include/c++/6/bits/stl_function.h **** 	{ return -std::forward<_Tp>(__t); }
 314:/usr/include/c++/6/bits/stl_function.h **** 
 315:/usr/include/c++/6/bits/stl_function.h ****       typedef __is_transparent is_transparent;
 316:/usr/include/c++/6/bits/stl_function.h ****     };
 317:/usr/include/c++/6/bits/stl_function.h **** #endif
 318:/usr/include/c++/6/bits/stl_function.h ****   /** @}  */
 319:/usr/include/c++/6/bits/stl_function.h **** 
 320:/usr/include/c++/6/bits/stl_function.h ****   // 20.3.3 comparisons
 321:/usr/include/c++/6/bits/stl_function.h ****   /** @defgroup comparison_functors Comparison Classes
 322:/usr/include/c++/6/bits/stl_function.h ****    * @ingroup functors
 323:/usr/include/c++/6/bits/stl_function.h ****    *
 324:/usr/include/c++/6/bits/stl_function.h ****    *  The library provides six wrapper functors for all the basic comparisons
 325:/usr/include/c++/6/bits/stl_function.h ****    *  in C++, like @c <.
 326:/usr/include/c++/6/bits/stl_function.h ****    *
 327:/usr/include/c++/6/bits/stl_function.h ****    *  @{
 328:/usr/include/c++/6/bits/stl_function.h ****    */
 329:/usr/include/c++/6/bits/stl_function.h **** #if __cplusplus > 201103L
 330:/usr/include/c++/6/bits/stl_function.h ****   template<typename _Tp = void>
 331:/usr/include/c++/6/bits/stl_function.h ****     struct equal_to;
 332:/usr/include/c++/6/bits/stl_function.h **** 
 333:/usr/include/c++/6/bits/stl_function.h ****   template<typename _Tp = void>
 334:/usr/include/c++/6/bits/stl_function.h ****     struct not_equal_to;
 335:/usr/include/c++/6/bits/stl_function.h **** 
 336:/usr/include/c++/6/bits/stl_function.h ****   template<typename _Tp = void>
 337:/usr/include/c++/6/bits/stl_function.h ****     struct greater;
 338:/usr/include/c++/6/bits/stl_function.h **** 
 339:/usr/include/c++/6/bits/stl_function.h ****   template<typename _Tp = void>
 340:/usr/include/c++/6/bits/stl_function.h ****     struct less;
 341:/usr/include/c++/6/bits/stl_function.h **** 
 342:/usr/include/c++/6/bits/stl_function.h ****   template<typename _Tp = void>
 343:/usr/include/c++/6/bits/stl_function.h ****     struct greater_equal;
 344:/usr/include/c++/6/bits/stl_function.h **** 
 345:/usr/include/c++/6/bits/stl_function.h ****   template<typename _Tp = void>
 346:/usr/include/c++/6/bits/stl_function.h ****     struct less_equal;
 347:/usr/include/c++/6/bits/stl_function.h **** #endif
 348:/usr/include/c++/6/bits/stl_function.h **** 
 349:/usr/include/c++/6/bits/stl_function.h ****   /// One of the @link comparison_functors comparison functors@endlink.
 350:/usr/include/c++/6/bits/stl_function.h ****   template<typename _Tp>
 351:/usr/include/c++/6/bits/stl_function.h ****     struct equal_to : public binary_function<_Tp, _Tp, bool>
 352:/usr/include/c++/6/bits/stl_function.h ****     {
 353:/usr/include/c++/6/bits/stl_function.h ****       _GLIBCXX14_CONSTEXPR
 354:/usr/include/c++/6/bits/stl_function.h ****       bool
 355:/usr/include/c++/6/bits/stl_function.h ****       operator()(const _Tp& __x, const _Tp& __y) const
 356:/usr/include/c++/6/bits/stl_function.h ****       { return __x == __y; }
 357:/usr/include/c++/6/bits/stl_function.h ****     };
 358:/usr/include/c++/6/bits/stl_function.h **** 
 359:/usr/include/c++/6/bits/stl_function.h ****   /// One of the @link comparison_functors comparison functors@endlink.
 360:/usr/include/c++/6/bits/stl_function.h ****   template<typename _Tp>
 361:/usr/include/c++/6/bits/stl_function.h ****     struct not_equal_to : public binary_function<_Tp, _Tp, bool>
 362:/usr/include/c++/6/bits/stl_function.h ****     {
 363:/usr/include/c++/6/bits/stl_function.h ****       _GLIBCXX14_CONSTEXPR
GAS LISTING /tmp/ccvUPO8Q.s 			page 583


 364:/usr/include/c++/6/bits/stl_function.h ****       bool
 365:/usr/include/c++/6/bits/stl_function.h ****       operator()(const _Tp& __x, const _Tp& __y) const
 366:/usr/include/c++/6/bits/stl_function.h ****       { return __x != __y; }
 367:/usr/include/c++/6/bits/stl_function.h ****     };
 368:/usr/include/c++/6/bits/stl_function.h **** 
 369:/usr/include/c++/6/bits/stl_function.h ****   /// One of the @link comparison_functors comparison functors@endlink.
 370:/usr/include/c++/6/bits/stl_function.h ****   template<typename _Tp>
 371:/usr/include/c++/6/bits/stl_function.h ****     struct greater : public binary_function<_Tp, _Tp, bool>
 372:/usr/include/c++/6/bits/stl_function.h ****     {
 373:/usr/include/c++/6/bits/stl_function.h ****       _GLIBCXX14_CONSTEXPR
 374:/usr/include/c++/6/bits/stl_function.h ****       bool
 375:/usr/include/c++/6/bits/stl_function.h ****       operator()(const _Tp& __x, const _Tp& __y) const
 376:/usr/include/c++/6/bits/stl_function.h ****       { return __x > __y; }
 377:/usr/include/c++/6/bits/stl_function.h ****     };
 378:/usr/include/c++/6/bits/stl_function.h **** 
 379:/usr/include/c++/6/bits/stl_function.h ****   /// One of the @link comparison_functors comparison functors@endlink.
 380:/usr/include/c++/6/bits/stl_function.h ****   template<typename _Tp>
 381:/usr/include/c++/6/bits/stl_function.h ****     struct less : public binary_function<_Tp, _Tp, bool>
 382:/usr/include/c++/6/bits/stl_function.h ****     {
 383:/usr/include/c++/6/bits/stl_function.h ****       _GLIBCXX14_CONSTEXPR
 384:/usr/include/c++/6/bits/stl_function.h ****       bool
 385:/usr/include/c++/6/bits/stl_function.h ****       operator()(const _Tp& __x, const _Tp& __y) const
 386:/usr/include/c++/6/bits/stl_function.h ****       { return __x < __y; }
 387:/usr/include/c++/6/bits/stl_function.h ****     };
 388:/usr/include/c++/6/bits/stl_function.h **** 
 389:/usr/include/c++/6/bits/stl_function.h ****   /// One of the @link comparison_functors comparison functors@endlink.
 390:/usr/include/c++/6/bits/stl_function.h ****   template<typename _Tp>
 391:/usr/include/c++/6/bits/stl_function.h ****     struct greater_equal : public binary_function<_Tp, _Tp, bool>
 392:/usr/include/c++/6/bits/stl_function.h ****     {
 393:/usr/include/c++/6/bits/stl_function.h ****       _GLIBCXX14_CONSTEXPR
 394:/usr/include/c++/6/bits/stl_function.h ****       bool
 395:/usr/include/c++/6/bits/stl_function.h ****       operator()(const _Tp& __x, const _Tp& __y) const
 396:/usr/include/c++/6/bits/stl_function.h ****       { return __x >= __y; }
 397:/usr/include/c++/6/bits/stl_function.h ****     };
 398:/usr/include/c++/6/bits/stl_function.h **** 
 399:/usr/include/c++/6/bits/stl_function.h ****   /// One of the @link comparison_functors comparison functors@endlink.
 400:/usr/include/c++/6/bits/stl_function.h ****   template<typename _Tp>
 401:/usr/include/c++/6/bits/stl_function.h ****     struct less_equal : public binary_function<_Tp, _Tp, bool>
 402:/usr/include/c++/6/bits/stl_function.h ****     {
 403:/usr/include/c++/6/bits/stl_function.h ****       _GLIBCXX14_CONSTEXPR
 404:/usr/include/c++/6/bits/stl_function.h ****       bool
 405:/usr/include/c++/6/bits/stl_function.h ****       operator()(const _Tp& __x, const _Tp& __y) const
 406:/usr/include/c++/6/bits/stl_function.h ****       { return __x <= __y; }
 407:/usr/include/c++/6/bits/stl_function.h ****     };
 408:/usr/include/c++/6/bits/stl_function.h **** 
 409:/usr/include/c++/6/bits/stl_function.h **** #if __cplusplus > 201103L
 410:/usr/include/c++/6/bits/stl_function.h ****   /// One of the @link comparison_functors comparison functors@endlink.
 411:/usr/include/c++/6/bits/stl_function.h ****   template<>
 412:/usr/include/c++/6/bits/stl_function.h ****     struct equal_to<void>
 413:/usr/include/c++/6/bits/stl_function.h ****     {
 414:/usr/include/c++/6/bits/stl_function.h ****       template <typename _Tp, typename _Up>
 415:/usr/include/c++/6/bits/stl_function.h **** 	_GLIBCXX14_CONSTEXPR
 416:/usr/include/c++/6/bits/stl_function.h **** 	auto
 417:/usr/include/c++/6/bits/stl_function.h **** 	operator()(_Tp&& __t, _Up&& __u) const
 418:/usr/include/c++/6/bits/stl_function.h **** 	noexcept(noexcept(std::forward<_Tp>(__t) == std::forward<_Up>(__u)))
 419:/usr/include/c++/6/bits/stl_function.h **** 	-> decltype(std::forward<_Tp>(__t) == std::forward<_Up>(__u))
 420:/usr/include/c++/6/bits/stl_function.h **** 	{ return std::forward<_Tp>(__t) == std::forward<_Up>(__u); }
GAS LISTING /tmp/ccvUPO8Q.s 			page 584


 421:/usr/include/c++/6/bits/stl_function.h **** 
 422:/usr/include/c++/6/bits/stl_function.h ****       typedef __is_transparent is_transparent;
 423:/usr/include/c++/6/bits/stl_function.h ****     };
 424:/usr/include/c++/6/bits/stl_function.h **** 
 425:/usr/include/c++/6/bits/stl_function.h ****   /// One of the @link comparison_functors comparison functors@endlink.
 426:/usr/include/c++/6/bits/stl_function.h ****   template<>
 427:/usr/include/c++/6/bits/stl_function.h ****     struct not_equal_to<void>
 428:/usr/include/c++/6/bits/stl_function.h ****     {
 429:/usr/include/c++/6/bits/stl_function.h ****       template <typename _Tp, typename _Up>
 430:/usr/include/c++/6/bits/stl_function.h **** 	_GLIBCXX14_CONSTEXPR
 431:/usr/include/c++/6/bits/stl_function.h **** 	auto
 432:/usr/include/c++/6/bits/stl_function.h **** 	operator()(_Tp&& __t, _Up&& __u) const
 433:/usr/include/c++/6/bits/stl_function.h **** 	noexcept(noexcept(std::forward<_Tp>(__t) != std::forward<_Up>(__u)))
 434:/usr/include/c++/6/bits/stl_function.h **** 	-> decltype(std::forward<_Tp>(__t) != std::forward<_Up>(__u))
 435:/usr/include/c++/6/bits/stl_function.h **** 	{ return std::forward<_Tp>(__t) != std::forward<_Up>(__u); }
 436:/usr/include/c++/6/bits/stl_function.h **** 
 437:/usr/include/c++/6/bits/stl_function.h ****       typedef __is_transparent is_transparent;
 438:/usr/include/c++/6/bits/stl_function.h ****     };
 439:/usr/include/c++/6/bits/stl_function.h **** 
 440:/usr/include/c++/6/bits/stl_function.h ****   /// One of the @link comparison_functors comparison functors@endlink.
 441:/usr/include/c++/6/bits/stl_function.h ****   template<>
 442:/usr/include/c++/6/bits/stl_function.h ****     struct greater<void>
 443:/usr/include/c++/6/bits/stl_function.h ****     {
 444:/usr/include/c++/6/bits/stl_function.h ****       template <typename _Tp, typename _Up>
 445:/usr/include/c++/6/bits/stl_function.h **** 	_GLIBCXX14_CONSTEXPR
 446:/usr/include/c++/6/bits/stl_function.h **** 	auto
 447:/usr/include/c++/6/bits/stl_function.h **** 	operator()(_Tp&& __t, _Up&& __u) const
 448:/usr/include/c++/6/bits/stl_function.h **** 	noexcept(noexcept(std::forward<_Tp>(__t) > std::forward<_Up>(__u)))
 449:/usr/include/c++/6/bits/stl_function.h **** 	-> decltype(std::forward<_Tp>(__t) > std::forward<_Up>(__u))
 450:/usr/include/c++/6/bits/stl_function.h **** 	{ return std::forward<_Tp>(__t) > std::forward<_Up>(__u); }
 451:/usr/include/c++/6/bits/stl_function.h **** 
 452:/usr/include/c++/6/bits/stl_function.h ****       typedef __is_transparent is_transparent;
 453:/usr/include/c++/6/bits/stl_function.h ****     };
 454:/usr/include/c++/6/bits/stl_function.h **** 
 455:/usr/include/c++/6/bits/stl_function.h ****   /// One of the @link comparison_functors comparison functors@endlink.
 456:/usr/include/c++/6/bits/stl_function.h ****   template<>
 457:/usr/include/c++/6/bits/stl_function.h ****     struct less<void>
 458:/usr/include/c++/6/bits/stl_function.h ****     {
 459:/usr/include/c++/6/bits/stl_function.h ****       template <typename _Tp, typename _Up>
 460:/usr/include/c++/6/bits/stl_function.h **** 	_GLIBCXX14_CONSTEXPR
 461:/usr/include/c++/6/bits/stl_function.h **** 	auto
 462:/usr/include/c++/6/bits/stl_function.h **** 	operator()(_Tp&& __t, _Up&& __u) const
 463:/usr/include/c++/6/bits/stl_function.h **** 	noexcept(noexcept(std::forward<_Tp>(__t) < std::forward<_Up>(__u)))
 464:/usr/include/c++/6/bits/stl_function.h **** 	-> decltype(std::forward<_Tp>(__t) < std::forward<_Up>(__u))
 465:/usr/include/c++/6/bits/stl_function.h **** 	{ return std::forward<_Tp>(__t) < std::forward<_Up>(__u); }
 466:/usr/include/c++/6/bits/stl_function.h **** 
 467:/usr/include/c++/6/bits/stl_function.h ****       typedef __is_transparent is_transparent;
 468:/usr/include/c++/6/bits/stl_function.h ****     };
 469:/usr/include/c++/6/bits/stl_function.h **** 
 470:/usr/include/c++/6/bits/stl_function.h ****   /// One of the @link comparison_functors comparison functors@endlink.
 471:/usr/include/c++/6/bits/stl_function.h ****   template<>
 472:/usr/include/c++/6/bits/stl_function.h ****     struct greater_equal<void>
 473:/usr/include/c++/6/bits/stl_function.h ****     {
 474:/usr/include/c++/6/bits/stl_function.h ****       template <typename _Tp, typename _Up>
 475:/usr/include/c++/6/bits/stl_function.h **** 	_GLIBCXX14_CONSTEXPR
 476:/usr/include/c++/6/bits/stl_function.h **** 	auto
 477:/usr/include/c++/6/bits/stl_function.h **** 	operator()(_Tp&& __t, _Up&& __u) const
GAS LISTING /tmp/ccvUPO8Q.s 			page 585


 478:/usr/include/c++/6/bits/stl_function.h **** 	noexcept(noexcept(std::forward<_Tp>(__t) >= std::forward<_Up>(__u)))
 479:/usr/include/c++/6/bits/stl_function.h **** 	-> decltype(std::forward<_Tp>(__t) >= std::forward<_Up>(__u))
 480:/usr/include/c++/6/bits/stl_function.h **** 	{ return std::forward<_Tp>(__t) >= std::forward<_Up>(__u); }
 481:/usr/include/c++/6/bits/stl_function.h **** 
 482:/usr/include/c++/6/bits/stl_function.h ****       typedef __is_transparent is_transparent;
 483:/usr/include/c++/6/bits/stl_function.h ****     };
 484:/usr/include/c++/6/bits/stl_function.h **** 
 485:/usr/include/c++/6/bits/stl_function.h ****   /// One of the @link comparison_functors comparison functors@endlink.
 486:/usr/include/c++/6/bits/stl_function.h ****   template<>
 487:/usr/include/c++/6/bits/stl_function.h ****     struct less_equal<void>
 488:/usr/include/c++/6/bits/stl_function.h ****     {
 489:/usr/include/c++/6/bits/stl_function.h ****       template <typename _Tp, typename _Up>
 490:/usr/include/c++/6/bits/stl_function.h **** 	_GLIBCXX14_CONSTEXPR
 491:/usr/include/c++/6/bits/stl_function.h **** 	auto
 492:/usr/include/c++/6/bits/stl_function.h **** 	operator()(_Tp&& __t, _Up&& __u) const
 493:/usr/include/c++/6/bits/stl_function.h **** 	noexcept(noexcept(std::forward<_Tp>(__t) <= std::forward<_Up>(__u)))
 494:/usr/include/c++/6/bits/stl_function.h **** 	-> decltype(std::forward<_Tp>(__t) <= std::forward<_Up>(__u))
 495:/usr/include/c++/6/bits/stl_function.h **** 	{ return std::forward<_Tp>(__t) <= std::forward<_Up>(__u); }
 496:/usr/include/c++/6/bits/stl_function.h **** 
 497:/usr/include/c++/6/bits/stl_function.h ****       typedef __is_transparent is_transparent;
 498:/usr/include/c++/6/bits/stl_function.h ****     };
 499:/usr/include/c++/6/bits/stl_function.h **** #endif
 500:/usr/include/c++/6/bits/stl_function.h ****   /** @}  */
 501:/usr/include/c++/6/bits/stl_function.h **** 
 502:/usr/include/c++/6/bits/stl_function.h ****   // 20.3.4 logical operations
 503:/usr/include/c++/6/bits/stl_function.h ****   /** @defgroup logical_functors Boolean Operations Classes
 504:/usr/include/c++/6/bits/stl_function.h ****    * @ingroup functors
 505:/usr/include/c++/6/bits/stl_function.h ****    *
 506:/usr/include/c++/6/bits/stl_function.h ****    *  Here are wrapper functors for Boolean operations: @c &&, @c ||,
 507:/usr/include/c++/6/bits/stl_function.h ****    *  and @c !.
 508:/usr/include/c++/6/bits/stl_function.h ****    *
 509:/usr/include/c++/6/bits/stl_function.h ****    *  @{
 510:/usr/include/c++/6/bits/stl_function.h ****    */
 511:/usr/include/c++/6/bits/stl_function.h **** #if __cplusplus > 201103L
 512:/usr/include/c++/6/bits/stl_function.h ****   template<typename _Tp = void>
 513:/usr/include/c++/6/bits/stl_function.h ****     struct logical_and;
 514:/usr/include/c++/6/bits/stl_function.h **** 
 515:/usr/include/c++/6/bits/stl_function.h ****   template<typename _Tp = void>
 516:/usr/include/c++/6/bits/stl_function.h ****     struct logical_or;
 517:/usr/include/c++/6/bits/stl_function.h **** 
 518:/usr/include/c++/6/bits/stl_function.h ****   template<typename _Tp = void>
 519:/usr/include/c++/6/bits/stl_function.h ****     struct logical_not;
 520:/usr/include/c++/6/bits/stl_function.h **** #endif
 521:/usr/include/c++/6/bits/stl_function.h **** 
 522:/usr/include/c++/6/bits/stl_function.h ****   /// One of the @link logical_functors Boolean operations functors@endlink.
 523:/usr/include/c++/6/bits/stl_function.h ****   template<typename _Tp>
 524:/usr/include/c++/6/bits/stl_function.h ****     struct logical_and : public binary_function<_Tp, _Tp, bool>
 525:/usr/include/c++/6/bits/stl_function.h ****     {
 526:/usr/include/c++/6/bits/stl_function.h ****       _GLIBCXX14_CONSTEXPR
 527:/usr/include/c++/6/bits/stl_function.h ****       bool
 528:/usr/include/c++/6/bits/stl_function.h ****       operator()(const _Tp& __x, const _Tp& __y) const
 529:/usr/include/c++/6/bits/stl_function.h ****       { return __x && __y; }
 530:/usr/include/c++/6/bits/stl_function.h ****     };
 531:/usr/include/c++/6/bits/stl_function.h **** 
 532:/usr/include/c++/6/bits/stl_function.h ****   /// One of the @link logical_functors Boolean operations functors@endlink.
 533:/usr/include/c++/6/bits/stl_function.h ****   template<typename _Tp>
 534:/usr/include/c++/6/bits/stl_function.h ****     struct logical_or : public binary_function<_Tp, _Tp, bool>
GAS LISTING /tmp/ccvUPO8Q.s 			page 586


 535:/usr/include/c++/6/bits/stl_function.h ****     {
 536:/usr/include/c++/6/bits/stl_function.h ****       _GLIBCXX14_CONSTEXPR
 537:/usr/include/c++/6/bits/stl_function.h ****       bool
 538:/usr/include/c++/6/bits/stl_function.h ****       operator()(const _Tp& __x, const _Tp& __y) const
 539:/usr/include/c++/6/bits/stl_function.h ****       { return __x || __y; }
 540:/usr/include/c++/6/bits/stl_function.h ****     };
 541:/usr/include/c++/6/bits/stl_function.h **** 
 542:/usr/include/c++/6/bits/stl_function.h ****   /// One of the @link logical_functors Boolean operations functors@endlink.
 543:/usr/include/c++/6/bits/stl_function.h ****   template<typename _Tp>
 544:/usr/include/c++/6/bits/stl_function.h ****     struct logical_not : public unary_function<_Tp, bool>
 545:/usr/include/c++/6/bits/stl_function.h ****     {
 546:/usr/include/c++/6/bits/stl_function.h ****       _GLIBCXX14_CONSTEXPR
 547:/usr/include/c++/6/bits/stl_function.h ****       bool
 548:/usr/include/c++/6/bits/stl_function.h ****       operator()(const _Tp& __x) const
 549:/usr/include/c++/6/bits/stl_function.h ****       { return !__x; }
 550:/usr/include/c++/6/bits/stl_function.h ****     };
 551:/usr/include/c++/6/bits/stl_function.h **** 
 552:/usr/include/c++/6/bits/stl_function.h **** #if __cplusplus > 201103L
 553:/usr/include/c++/6/bits/stl_function.h ****   /// One of the @link logical_functors Boolean operations functors@endlink.
 554:/usr/include/c++/6/bits/stl_function.h ****   template<>
 555:/usr/include/c++/6/bits/stl_function.h ****     struct logical_and<void>
 556:/usr/include/c++/6/bits/stl_function.h ****     {
 557:/usr/include/c++/6/bits/stl_function.h ****       template <typename _Tp, typename _Up>
 558:/usr/include/c++/6/bits/stl_function.h **** 	_GLIBCXX14_CONSTEXPR
 559:/usr/include/c++/6/bits/stl_function.h **** 	auto
 560:/usr/include/c++/6/bits/stl_function.h **** 	operator()(_Tp&& __t, _Up&& __u) const
 561:/usr/include/c++/6/bits/stl_function.h **** 	noexcept(noexcept(std::forward<_Tp>(__t) && std::forward<_Up>(__u)))
 562:/usr/include/c++/6/bits/stl_function.h **** 	-> decltype(std::forward<_Tp>(__t) && std::forward<_Up>(__u))
 563:/usr/include/c++/6/bits/stl_function.h **** 	{ return std::forward<_Tp>(__t) && std::forward<_Up>(__u); }
 564:/usr/include/c++/6/bits/stl_function.h **** 
 565:/usr/include/c++/6/bits/stl_function.h ****       typedef __is_transparent is_transparent;
 566:/usr/include/c++/6/bits/stl_function.h ****     };
 567:/usr/include/c++/6/bits/stl_function.h **** 
 568:/usr/include/c++/6/bits/stl_function.h ****   /// One of the @link logical_functors Boolean operations functors@endlink.
 569:/usr/include/c++/6/bits/stl_function.h ****   template<>
 570:/usr/include/c++/6/bits/stl_function.h ****     struct logical_or<void>
 571:/usr/include/c++/6/bits/stl_function.h ****     {
 572:/usr/include/c++/6/bits/stl_function.h ****       template <typename _Tp, typename _Up>
 573:/usr/include/c++/6/bits/stl_function.h **** 	_GLIBCXX14_CONSTEXPR
 574:/usr/include/c++/6/bits/stl_function.h **** 	auto
 575:/usr/include/c++/6/bits/stl_function.h **** 	operator()(_Tp&& __t, _Up&& __u) const
 576:/usr/include/c++/6/bits/stl_function.h **** 	noexcept(noexcept(std::forward<_Tp>(__t) || std::forward<_Up>(__u)))
 577:/usr/include/c++/6/bits/stl_function.h **** 	-> decltype(std::forward<_Tp>(__t) || std::forward<_Up>(__u))
 578:/usr/include/c++/6/bits/stl_function.h **** 	{ return std::forward<_Tp>(__t) || std::forward<_Up>(__u); }
 579:/usr/include/c++/6/bits/stl_function.h **** 
 580:/usr/include/c++/6/bits/stl_function.h ****       typedef __is_transparent is_transparent;
 581:/usr/include/c++/6/bits/stl_function.h ****     };
 582:/usr/include/c++/6/bits/stl_function.h **** 
 583:/usr/include/c++/6/bits/stl_function.h ****   /// One of the @link logical_functors Boolean operations functors@endlink.
 584:/usr/include/c++/6/bits/stl_function.h ****   template<>
 585:/usr/include/c++/6/bits/stl_function.h ****     struct logical_not<void>
 586:/usr/include/c++/6/bits/stl_function.h ****     {
 587:/usr/include/c++/6/bits/stl_function.h ****       template <typename _Tp>
 588:/usr/include/c++/6/bits/stl_function.h **** 	_GLIBCXX14_CONSTEXPR
 589:/usr/include/c++/6/bits/stl_function.h **** 	auto
 590:/usr/include/c++/6/bits/stl_function.h **** 	operator()(_Tp&& __t) const
 591:/usr/include/c++/6/bits/stl_function.h **** 	noexcept(noexcept(!std::forward<_Tp>(__t)))
GAS LISTING /tmp/ccvUPO8Q.s 			page 587


 592:/usr/include/c++/6/bits/stl_function.h **** 	-> decltype(!std::forward<_Tp>(__t))
 593:/usr/include/c++/6/bits/stl_function.h **** 	{ return !std::forward<_Tp>(__t); }
 594:/usr/include/c++/6/bits/stl_function.h **** 
 595:/usr/include/c++/6/bits/stl_function.h ****       typedef __is_transparent is_transparent;
 596:/usr/include/c++/6/bits/stl_function.h ****     };
 597:/usr/include/c++/6/bits/stl_function.h **** #endif
 598:/usr/include/c++/6/bits/stl_function.h ****   /** @}  */
 599:/usr/include/c++/6/bits/stl_function.h **** 
 600:/usr/include/c++/6/bits/stl_function.h **** #if __cplusplus > 201103L
 601:/usr/include/c++/6/bits/stl_function.h ****   template<typename _Tp = void>
 602:/usr/include/c++/6/bits/stl_function.h ****     struct bit_and;
 603:/usr/include/c++/6/bits/stl_function.h **** 
 604:/usr/include/c++/6/bits/stl_function.h ****   template<typename _Tp = void>
 605:/usr/include/c++/6/bits/stl_function.h ****     struct bit_or;
 606:/usr/include/c++/6/bits/stl_function.h **** 
 607:/usr/include/c++/6/bits/stl_function.h ****   template<typename _Tp = void>
 608:/usr/include/c++/6/bits/stl_function.h ****     struct bit_xor;
 609:/usr/include/c++/6/bits/stl_function.h **** 
 610:/usr/include/c++/6/bits/stl_function.h ****   template<typename _Tp = void>
 611:/usr/include/c++/6/bits/stl_function.h ****     struct bit_not;
 612:/usr/include/c++/6/bits/stl_function.h **** #endif
 613:/usr/include/c++/6/bits/stl_function.h **** 
 614:/usr/include/c++/6/bits/stl_function.h ****   // _GLIBCXX_RESOLVE_LIB_DEFECTS
 615:/usr/include/c++/6/bits/stl_function.h ****   // DR 660. Missing Bitwise Operations.
 616:/usr/include/c++/6/bits/stl_function.h ****   template<typename _Tp>
 617:/usr/include/c++/6/bits/stl_function.h ****     struct bit_and : public binary_function<_Tp, _Tp, _Tp>
 618:/usr/include/c++/6/bits/stl_function.h ****     {
 619:/usr/include/c++/6/bits/stl_function.h ****       _GLIBCXX14_CONSTEXPR
 620:/usr/include/c++/6/bits/stl_function.h ****       _Tp
 621:/usr/include/c++/6/bits/stl_function.h ****       operator()(const _Tp& __x, const _Tp& __y) const
 622:/usr/include/c++/6/bits/stl_function.h ****       { return __x & __y; }
 623:/usr/include/c++/6/bits/stl_function.h ****     };
 624:/usr/include/c++/6/bits/stl_function.h **** 
 625:/usr/include/c++/6/bits/stl_function.h ****   template<typename _Tp>
 626:/usr/include/c++/6/bits/stl_function.h ****     struct bit_or : public binary_function<_Tp, _Tp, _Tp>
 627:/usr/include/c++/6/bits/stl_function.h ****     {
 628:/usr/include/c++/6/bits/stl_function.h ****       _GLIBCXX14_CONSTEXPR
 629:/usr/include/c++/6/bits/stl_function.h ****       _Tp
 630:/usr/include/c++/6/bits/stl_function.h ****       operator()(const _Tp& __x, const _Tp& __y) const
 631:/usr/include/c++/6/bits/stl_function.h ****       { return __x | __y; }
 632:/usr/include/c++/6/bits/stl_function.h ****     };
 633:/usr/include/c++/6/bits/stl_function.h **** 
 634:/usr/include/c++/6/bits/stl_function.h ****   template<typename _Tp>
 635:/usr/include/c++/6/bits/stl_function.h ****     struct bit_xor : public binary_function<_Tp, _Tp, _Tp>
 636:/usr/include/c++/6/bits/stl_function.h ****     {
 637:/usr/include/c++/6/bits/stl_function.h ****       _GLIBCXX14_CONSTEXPR
 638:/usr/include/c++/6/bits/stl_function.h ****       _Tp
 639:/usr/include/c++/6/bits/stl_function.h ****       operator()(const _Tp& __x, const _Tp& __y) const
 640:/usr/include/c++/6/bits/stl_function.h ****       { return __x ^ __y; }
 641:/usr/include/c++/6/bits/stl_function.h ****     };
 642:/usr/include/c++/6/bits/stl_function.h **** 
 643:/usr/include/c++/6/bits/stl_function.h ****   template<typename _Tp>
 644:/usr/include/c++/6/bits/stl_function.h ****     struct bit_not : public unary_function<_Tp, _Tp>
 645:/usr/include/c++/6/bits/stl_function.h ****     {
 646:/usr/include/c++/6/bits/stl_function.h ****     _GLIBCXX14_CONSTEXPR
 647:/usr/include/c++/6/bits/stl_function.h ****       _Tp
 648:/usr/include/c++/6/bits/stl_function.h ****       operator()(const _Tp& __x) const
GAS LISTING /tmp/ccvUPO8Q.s 			page 588


 649:/usr/include/c++/6/bits/stl_function.h ****       { return ~__x; }
 650:/usr/include/c++/6/bits/stl_function.h ****     };
 651:/usr/include/c++/6/bits/stl_function.h **** 
 652:/usr/include/c++/6/bits/stl_function.h **** #if __cplusplus > 201103L
 653:/usr/include/c++/6/bits/stl_function.h ****   template <>
 654:/usr/include/c++/6/bits/stl_function.h ****     struct bit_and<void>
 655:/usr/include/c++/6/bits/stl_function.h ****     {
 656:/usr/include/c++/6/bits/stl_function.h ****       template <typename _Tp, typename _Up>
 657:/usr/include/c++/6/bits/stl_function.h **** 	_GLIBCXX14_CONSTEXPR
 658:/usr/include/c++/6/bits/stl_function.h **** 	auto
 659:/usr/include/c++/6/bits/stl_function.h **** 	operator()(_Tp&& __t, _Up&& __u) const
 660:/usr/include/c++/6/bits/stl_function.h **** 	noexcept(noexcept(std::forward<_Tp>(__t) & std::forward<_Up>(__u)))
 661:/usr/include/c++/6/bits/stl_function.h **** 	-> decltype(std::forward<_Tp>(__t) & std::forward<_Up>(__u))
 662:/usr/include/c++/6/bits/stl_function.h **** 	{ return std::forward<_Tp>(__t) & std::forward<_Up>(__u); }
 663:/usr/include/c++/6/bits/stl_function.h **** 
 664:/usr/include/c++/6/bits/stl_function.h ****       typedef __is_transparent is_transparent;
 665:/usr/include/c++/6/bits/stl_function.h ****     };
 666:/usr/include/c++/6/bits/stl_function.h **** 
 667:/usr/include/c++/6/bits/stl_function.h ****   template <>
 668:/usr/include/c++/6/bits/stl_function.h ****     struct bit_or<void>
 669:/usr/include/c++/6/bits/stl_function.h ****     {
 670:/usr/include/c++/6/bits/stl_function.h ****       template <typename _Tp, typename _Up>
 671:/usr/include/c++/6/bits/stl_function.h **** 	_GLIBCXX14_CONSTEXPR
 672:/usr/include/c++/6/bits/stl_function.h **** 	auto
 673:/usr/include/c++/6/bits/stl_function.h **** 	operator()(_Tp&& __t, _Up&& __u) const
 674:/usr/include/c++/6/bits/stl_function.h **** 	noexcept(noexcept(std::forward<_Tp>(__t) | std::forward<_Up>(__u)))
 675:/usr/include/c++/6/bits/stl_function.h **** 	-> decltype(std::forward<_Tp>(__t) | std::forward<_Up>(__u))
 676:/usr/include/c++/6/bits/stl_function.h **** 	{ return std::forward<_Tp>(__t) | std::forward<_Up>(__u); }
 677:/usr/include/c++/6/bits/stl_function.h **** 
 678:/usr/include/c++/6/bits/stl_function.h ****       typedef __is_transparent is_transparent;
 679:/usr/include/c++/6/bits/stl_function.h ****     };
 680:/usr/include/c++/6/bits/stl_function.h **** 
 681:/usr/include/c++/6/bits/stl_function.h ****   template <>
 682:/usr/include/c++/6/bits/stl_function.h ****     struct bit_xor<void>
 683:/usr/include/c++/6/bits/stl_function.h ****     {
 684:/usr/include/c++/6/bits/stl_function.h ****       template <typename _Tp, typename _Up>
 685:/usr/include/c++/6/bits/stl_function.h **** 	_GLIBCXX14_CONSTEXPR
 686:/usr/include/c++/6/bits/stl_function.h **** 	auto
 687:/usr/include/c++/6/bits/stl_function.h **** 	operator()(_Tp&& __t, _Up&& __u) const
 688:/usr/include/c++/6/bits/stl_function.h **** 	noexcept(noexcept(std::forward<_Tp>(__t) ^ std::forward<_Up>(__u)))
 689:/usr/include/c++/6/bits/stl_function.h **** 	-> decltype(std::forward<_Tp>(__t) ^ std::forward<_Up>(__u))
 690:/usr/include/c++/6/bits/stl_function.h **** 	{ return std::forward<_Tp>(__t) ^ std::forward<_Up>(__u); }
 691:/usr/include/c++/6/bits/stl_function.h **** 
 692:/usr/include/c++/6/bits/stl_function.h ****       typedef __is_transparent is_transparent;
 693:/usr/include/c++/6/bits/stl_function.h ****     };
 694:/usr/include/c++/6/bits/stl_function.h **** 
 695:/usr/include/c++/6/bits/stl_function.h ****   template <>
 696:/usr/include/c++/6/bits/stl_function.h ****     struct bit_not<void>
 697:/usr/include/c++/6/bits/stl_function.h ****     {
 698:/usr/include/c++/6/bits/stl_function.h ****       template <typename _Tp>
 699:/usr/include/c++/6/bits/stl_function.h **** 	_GLIBCXX14_CONSTEXPR
 700:/usr/include/c++/6/bits/stl_function.h **** 	auto
 701:/usr/include/c++/6/bits/stl_function.h **** 	operator()(_Tp&& __t) const
 702:/usr/include/c++/6/bits/stl_function.h **** 	noexcept(noexcept(~std::forward<_Tp>(__t)))
 703:/usr/include/c++/6/bits/stl_function.h **** 	-> decltype(~std::forward<_Tp>(__t))
 704:/usr/include/c++/6/bits/stl_function.h **** 	{ return ~std::forward<_Tp>(__t); }
 705:/usr/include/c++/6/bits/stl_function.h **** 
GAS LISTING /tmp/ccvUPO8Q.s 			page 589


 706:/usr/include/c++/6/bits/stl_function.h ****       typedef __is_transparent is_transparent;
 707:/usr/include/c++/6/bits/stl_function.h ****     };
 708:/usr/include/c++/6/bits/stl_function.h **** #endif
 709:/usr/include/c++/6/bits/stl_function.h **** 
 710:/usr/include/c++/6/bits/stl_function.h ****   // 20.3.5 negators
 711:/usr/include/c++/6/bits/stl_function.h ****   /** @defgroup negators Negators
 712:/usr/include/c++/6/bits/stl_function.h ****    * @ingroup functors
 713:/usr/include/c++/6/bits/stl_function.h ****    *
 714:/usr/include/c++/6/bits/stl_function.h ****    *  The functions @c not1 and @c not2 each take a predicate functor
 715:/usr/include/c++/6/bits/stl_function.h ****    *  and return an instance of @c unary_negate or
 716:/usr/include/c++/6/bits/stl_function.h ****    *  @c binary_negate, respectively.  These classes are functors whose
 717:/usr/include/c++/6/bits/stl_function.h ****    *  @c operator() performs the stored predicate function and then returns
 718:/usr/include/c++/6/bits/stl_function.h ****    *  the negation of the result.
 719:/usr/include/c++/6/bits/stl_function.h ****    *
 720:/usr/include/c++/6/bits/stl_function.h ****    *  For example, given a vector of integers and a trivial predicate,
 721:/usr/include/c++/6/bits/stl_function.h ****    *  \code
 722:/usr/include/c++/6/bits/stl_function.h ****    *  struct IntGreaterThanThree
 723:/usr/include/c++/6/bits/stl_function.h ****    *    : public std::unary_function<int, bool>
 724:/usr/include/c++/6/bits/stl_function.h ****    *  {
 725:/usr/include/c++/6/bits/stl_function.h ****    *      bool operator() (int x) { return x > 3; }
 726:/usr/include/c++/6/bits/stl_function.h ****    *  };
 727:/usr/include/c++/6/bits/stl_function.h ****    *
 728:/usr/include/c++/6/bits/stl_function.h ****    *  std::find_if (v.begin(), v.end(), not1(IntGreaterThanThree()));
 729:/usr/include/c++/6/bits/stl_function.h ****    *  \endcode
 730:/usr/include/c++/6/bits/stl_function.h ****    *  The call to @c find_if will locate the first index (i) of @c v for which
 731:/usr/include/c++/6/bits/stl_function.h ****    *  <code>!(v[i] > 3)</code> is true.
 732:/usr/include/c++/6/bits/stl_function.h ****    *
 733:/usr/include/c++/6/bits/stl_function.h ****    *  The not1/unary_negate combination works on predicates taking a single
 734:/usr/include/c++/6/bits/stl_function.h ****    *  argument.  The not2/binary_negate combination works on predicates which
 735:/usr/include/c++/6/bits/stl_function.h ****    *  take two arguments.
 736:/usr/include/c++/6/bits/stl_function.h ****    *
 737:/usr/include/c++/6/bits/stl_function.h ****    *  @{
 738:/usr/include/c++/6/bits/stl_function.h ****    */
 739:/usr/include/c++/6/bits/stl_function.h ****   /// One of the @link negators negation functors@endlink.
 740:/usr/include/c++/6/bits/stl_function.h ****   template<typename _Predicate>
 741:/usr/include/c++/6/bits/stl_function.h ****     class unary_negate
 742:/usr/include/c++/6/bits/stl_function.h ****     : public unary_function<typename _Predicate::argument_type, bool>
 743:/usr/include/c++/6/bits/stl_function.h ****     {
 744:/usr/include/c++/6/bits/stl_function.h ****     protected:
 745:/usr/include/c++/6/bits/stl_function.h ****       _Predicate _M_pred;
 746:/usr/include/c++/6/bits/stl_function.h **** 
 747:/usr/include/c++/6/bits/stl_function.h ****     public:
 748:/usr/include/c++/6/bits/stl_function.h ****       _GLIBCXX14_CONSTEXPR
 749:/usr/include/c++/6/bits/stl_function.h ****       explicit
 750:/usr/include/c++/6/bits/stl_function.h ****       unary_negate(const _Predicate& __x) : _M_pred(__x) { }
 751:/usr/include/c++/6/bits/stl_function.h **** 
 752:/usr/include/c++/6/bits/stl_function.h ****       _GLIBCXX14_CONSTEXPR
 753:/usr/include/c++/6/bits/stl_function.h ****       bool
 754:/usr/include/c++/6/bits/stl_function.h ****       operator()(const typename _Predicate::argument_type& __x) const
 755:/usr/include/c++/6/bits/stl_function.h ****       { return !_M_pred(__x); }
 756:/usr/include/c++/6/bits/stl_function.h ****     };
 757:/usr/include/c++/6/bits/stl_function.h **** 
 758:/usr/include/c++/6/bits/stl_function.h ****   /// One of the @link negators negation functors@endlink.
 759:/usr/include/c++/6/bits/stl_function.h ****   template<typename _Predicate>
 760:/usr/include/c++/6/bits/stl_function.h ****     _GLIBCXX14_CONSTEXPR
 761:/usr/include/c++/6/bits/stl_function.h ****     inline unary_negate<_Predicate>
 762:/usr/include/c++/6/bits/stl_function.h ****     not1(const _Predicate& __pred)
GAS LISTING /tmp/ccvUPO8Q.s 			page 590


 763:/usr/include/c++/6/bits/stl_function.h ****     { return unary_negate<_Predicate>(__pred); }
 764:/usr/include/c++/6/bits/stl_function.h **** 
 765:/usr/include/c++/6/bits/stl_function.h ****   /// One of the @link negators negation functors@endlink.
 766:/usr/include/c++/6/bits/stl_function.h ****   template<typename _Predicate>
 767:/usr/include/c++/6/bits/stl_function.h ****     class binary_negate
 768:/usr/include/c++/6/bits/stl_function.h ****     : public binary_function<typename _Predicate::first_argument_type,
 769:/usr/include/c++/6/bits/stl_function.h **** 			     typename _Predicate::second_argument_type, bool>
 770:/usr/include/c++/6/bits/stl_function.h ****     {
 771:/usr/include/c++/6/bits/stl_function.h ****     protected:
 772:/usr/include/c++/6/bits/stl_function.h ****       _Predicate _M_pred;
 773:/usr/include/c++/6/bits/stl_function.h **** 
 774:/usr/include/c++/6/bits/stl_function.h ****     public:
 775:/usr/include/c++/6/bits/stl_function.h ****       _GLIBCXX14_CONSTEXPR
 776:/usr/include/c++/6/bits/stl_function.h ****       explicit
 777:/usr/include/c++/6/bits/stl_function.h ****       binary_negate(const _Predicate& __x) : _M_pred(__x) { }
 778:/usr/include/c++/6/bits/stl_function.h **** 
 779:/usr/include/c++/6/bits/stl_function.h ****       _GLIBCXX14_CONSTEXPR
 780:/usr/include/c++/6/bits/stl_function.h ****       bool
 781:/usr/include/c++/6/bits/stl_function.h ****       operator()(const typename _Predicate::first_argument_type& __x,
 782:/usr/include/c++/6/bits/stl_function.h **** 		 const typename _Predicate::second_argument_type& __y) const
 783:/usr/include/c++/6/bits/stl_function.h ****       { return !_M_pred(__x, __y); }
 784:/usr/include/c++/6/bits/stl_function.h ****     };
 785:/usr/include/c++/6/bits/stl_function.h **** 
 786:/usr/include/c++/6/bits/stl_function.h ****   /// One of the @link negators negation functors@endlink.
 787:/usr/include/c++/6/bits/stl_function.h ****   template<typename _Predicate>
 788:/usr/include/c++/6/bits/stl_function.h ****     _GLIBCXX14_CONSTEXPR
 789:/usr/include/c++/6/bits/stl_function.h ****     inline binary_negate<_Predicate>
 790:/usr/include/c++/6/bits/stl_function.h ****     not2(const _Predicate& __pred)
 791:/usr/include/c++/6/bits/stl_function.h ****     { return binary_negate<_Predicate>(__pred); }
 792:/usr/include/c++/6/bits/stl_function.h ****   /** @}  */
 793:/usr/include/c++/6/bits/stl_function.h **** 
 794:/usr/include/c++/6/bits/stl_function.h ****   // 20.3.7 adaptors pointers functions
 795:/usr/include/c++/6/bits/stl_function.h ****   /** @defgroup pointer_adaptors Adaptors for pointers to functions
 796:/usr/include/c++/6/bits/stl_function.h ****    * @ingroup functors
 797:/usr/include/c++/6/bits/stl_function.h ****    *
 798:/usr/include/c++/6/bits/stl_function.h ****    *  The advantage of function objects over pointers to functions is that
 799:/usr/include/c++/6/bits/stl_function.h ****    *  the objects in the standard library declare nested typedefs describing
 800:/usr/include/c++/6/bits/stl_function.h ****    *  their argument and result types with uniform names (e.g., @c result_type
 801:/usr/include/c++/6/bits/stl_function.h ****    *  from the base classes @c unary_function and @c binary_function).
 802:/usr/include/c++/6/bits/stl_function.h ****    *  Sometimes those typedefs are required, not just optional.
 803:/usr/include/c++/6/bits/stl_function.h ****    *
 804:/usr/include/c++/6/bits/stl_function.h ****    *  Adaptors are provided to turn pointers to unary (single-argument) and
 805:/usr/include/c++/6/bits/stl_function.h ****    *  binary (double-argument) functions into function objects.  The
 806:/usr/include/c++/6/bits/stl_function.h ****    *  long-winded functor @c pointer_to_unary_function is constructed with a
 807:/usr/include/c++/6/bits/stl_function.h ****    *  function pointer @c f, and its @c operator() called with argument @c x
 808:/usr/include/c++/6/bits/stl_function.h ****    *  returns @c f(x).  The functor @c pointer_to_binary_function does the same
 809:/usr/include/c++/6/bits/stl_function.h ****    *  thing, but with a double-argument @c f and @c operator().
 810:/usr/include/c++/6/bits/stl_function.h ****    *
 811:/usr/include/c++/6/bits/stl_function.h ****    *  The function @c ptr_fun takes a pointer-to-function @c f and constructs
 812:/usr/include/c++/6/bits/stl_function.h ****    *  an instance of the appropriate functor.
 813:/usr/include/c++/6/bits/stl_function.h ****    *
 814:/usr/include/c++/6/bits/stl_function.h ****    *  @{
 815:/usr/include/c++/6/bits/stl_function.h ****    */
 816:/usr/include/c++/6/bits/stl_function.h ****   /// One of the @link pointer_adaptors adaptors for function pointers@endlink.
 817:/usr/include/c++/6/bits/stl_function.h ****   template<typename _Arg, typename _Result>
 818:/usr/include/c++/6/bits/stl_function.h ****     class pointer_to_unary_function : public unary_function<_Arg, _Result>
 819:/usr/include/c++/6/bits/stl_function.h ****     {
GAS LISTING /tmp/ccvUPO8Q.s 			page 591


 820:/usr/include/c++/6/bits/stl_function.h ****     protected:
 821:/usr/include/c++/6/bits/stl_function.h ****       _Result (*_M_ptr)(_Arg);
 822:/usr/include/c++/6/bits/stl_function.h **** 
 823:/usr/include/c++/6/bits/stl_function.h ****     public:
 824:/usr/include/c++/6/bits/stl_function.h ****       pointer_to_unary_function() { }
 825:/usr/include/c++/6/bits/stl_function.h **** 
 826:/usr/include/c++/6/bits/stl_function.h ****       explicit
 827:/usr/include/c++/6/bits/stl_function.h ****       pointer_to_unary_function(_Result (*__x)(_Arg))
 828:/usr/include/c++/6/bits/stl_function.h ****       : _M_ptr(__x) { }
 829:/usr/include/c++/6/bits/stl_function.h **** 
 830:/usr/include/c++/6/bits/stl_function.h ****       _Result
 831:/usr/include/c++/6/bits/stl_function.h ****       operator()(_Arg __x) const
 832:/usr/include/c++/6/bits/stl_function.h ****       { return _M_ptr(__x); }
 833:/usr/include/c++/6/bits/stl_function.h ****     };
 834:/usr/include/c++/6/bits/stl_function.h **** 
 835:/usr/include/c++/6/bits/stl_function.h ****   /// One of the @link pointer_adaptors adaptors for function pointers@endlink.
 836:/usr/include/c++/6/bits/stl_function.h ****   template<typename _Arg, typename _Result>
 837:/usr/include/c++/6/bits/stl_function.h ****     inline pointer_to_unary_function<_Arg, _Result>
 838:/usr/include/c++/6/bits/stl_function.h ****     ptr_fun(_Result (*__x)(_Arg))
 839:/usr/include/c++/6/bits/stl_function.h ****     { return pointer_to_unary_function<_Arg, _Result>(__x); }
 840:/usr/include/c++/6/bits/stl_function.h **** 
 841:/usr/include/c++/6/bits/stl_function.h ****   /// One of the @link pointer_adaptors adaptors for function pointers@endlink.
 842:/usr/include/c++/6/bits/stl_function.h ****   template<typename _Arg1, typename _Arg2, typename _Result>
 843:/usr/include/c++/6/bits/stl_function.h ****     class pointer_to_binary_function
 844:/usr/include/c++/6/bits/stl_function.h ****     : public binary_function<_Arg1, _Arg2, _Result>
 845:/usr/include/c++/6/bits/stl_function.h ****     {
 846:/usr/include/c++/6/bits/stl_function.h ****     protected:
 847:/usr/include/c++/6/bits/stl_function.h ****       _Result (*_M_ptr)(_Arg1, _Arg2);
 848:/usr/include/c++/6/bits/stl_function.h **** 
 849:/usr/include/c++/6/bits/stl_function.h ****     public:
 850:/usr/include/c++/6/bits/stl_function.h ****       pointer_to_binary_function() { }
 851:/usr/include/c++/6/bits/stl_function.h **** 
 852:/usr/include/c++/6/bits/stl_function.h ****       explicit
 853:/usr/include/c++/6/bits/stl_function.h ****       pointer_to_binary_function(_Result (*__x)(_Arg1, _Arg2))
 854:/usr/include/c++/6/bits/stl_function.h ****       : _M_ptr(__x) { }
 855:/usr/include/c++/6/bits/stl_function.h **** 
 856:/usr/include/c++/6/bits/stl_function.h ****       _Result
 857:/usr/include/c++/6/bits/stl_function.h ****       operator()(_Arg1 __x, _Arg2 __y) const
 858:/usr/include/c++/6/bits/stl_function.h ****       { return _M_ptr(__x, __y); }
 859:/usr/include/c++/6/bits/stl_function.h ****     };
 860:/usr/include/c++/6/bits/stl_function.h **** 
 861:/usr/include/c++/6/bits/stl_function.h ****   /// One of the @link pointer_adaptors adaptors for function pointers@endlink.
 862:/usr/include/c++/6/bits/stl_function.h ****   template<typename _Arg1, typename _Arg2, typename _Result>
 863:/usr/include/c++/6/bits/stl_function.h ****     inline pointer_to_binary_function<_Arg1, _Arg2, _Result>
 864:/usr/include/c++/6/bits/stl_function.h ****     ptr_fun(_Result (*__x)(_Arg1, _Arg2))
 865:/usr/include/c++/6/bits/stl_function.h ****     { return pointer_to_binary_function<_Arg1, _Arg2, _Result>(__x); }
 866:/usr/include/c++/6/bits/stl_function.h ****   /** @}  */
 867:/usr/include/c++/6/bits/stl_function.h **** 
 868:/usr/include/c++/6/bits/stl_function.h ****   template<typename _Tp>
 869:/usr/include/c++/6/bits/stl_function.h ****     struct _Identity
 870:/usr/include/c++/6/bits/stl_function.h ****     : public unary_function<_Tp,_Tp>
 871:/usr/include/c++/6/bits/stl_function.h ****     {
 872:/usr/include/c++/6/bits/stl_function.h ****       _Tp&
 873:/usr/include/c++/6/bits/stl_function.h ****       operator()(_Tp& __x) const
 874:/usr/include/c++/6/bits/stl_function.h ****       { return __x; }
 875:/usr/include/c++/6/bits/stl_function.h **** 
 876:/usr/include/c++/6/bits/stl_function.h ****       const _Tp&
GAS LISTING /tmp/ccvUPO8Q.s 			page 592


 877:/usr/include/c++/6/bits/stl_function.h ****       operator()(const _Tp& __x) const
 878:/usr/include/c++/6/bits/stl_function.h ****       { return __x; }
 879:/usr/include/c++/6/bits/stl_function.h ****     };
 880:/usr/include/c++/6/bits/stl_function.h **** 
 881:/usr/include/c++/6/bits/stl_function.h ****   template<typename _Pair>
 882:/usr/include/c++/6/bits/stl_function.h ****     struct _Select1st
 883:/usr/include/c++/6/bits/stl_function.h ****     : public unary_function<_Pair, typename _Pair::first_type>
 884:/usr/include/c++/6/bits/stl_function.h ****     {
 885:/usr/include/c++/6/bits/stl_function.h ****       typename _Pair::first_type&
 886:/usr/include/c++/6/bits/stl_function.h ****       operator()(_Pair& __x) const
 887:/usr/include/c++/6/bits/stl_function.h ****       { return __x.first; }
 888:/usr/include/c++/6/bits/stl_function.h **** 
 889:/usr/include/c++/6/bits/stl_function.h ****       const typename _Pair::first_type&
 890:/usr/include/c++/6/bits/stl_function.h ****       operator()(const _Pair& __x) const
 13940              		.loc 45 890 0
 13941              		.cfi_startproc
 13942 0000 55       		pushq	%rbp
 13943              		.cfi_def_cfa_offset 16
 13944              		.cfi_offset 6, -16
 13945 0001 4889E5   		movq	%rsp, %rbp
 13946              		.cfi_def_cfa_register 6
 13947 0004 48897DF8 		movq	%rdi, -8(%rbp)
 13948 0008 488975F0 		movq	%rsi, -16(%rbp)
 891:/usr/include/c++/6/bits/stl_function.h ****       { return __x.first; }
 13949              		.loc 45 891 0
 13950 000c 488B45F0 		movq	-16(%rbp), %rax
 13951 0010 5D       		popq	%rbp
 13952              		.cfi_def_cfa 7, 8
 13953 0011 C3       		ret
 13954              		.cfi_endproc
 13955              	.LFE14358:
 13957              		.section	.text._ZN9__gnu_cxx16__aligned_membufISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS
 13958              		.align 2
 13959              		.weak	_ZN9__gnu_cxx16__aligned_membufISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS2_8functi
 13961              	_ZN9__gnu_cxx16__aligned_membufISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS2_8functionIFvS6
 13962              	.LFB14359:
 13963              		.file 46 "/usr/include/c++/6/ext/aligned_buffer.h"
   1:/usr/include/c++/6/ext/aligned_buffer.h **** // Aligned memory buffer -*- C++ -*-
   2:/usr/include/c++/6/ext/aligned_buffer.h **** 
   3:/usr/include/c++/6/ext/aligned_buffer.h **** // Copyright (C) 2013-2016 Free Software Foundation, Inc.
   4:/usr/include/c++/6/ext/aligned_buffer.h **** //
   5:/usr/include/c++/6/ext/aligned_buffer.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/6/ext/aligned_buffer.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/6/ext/aligned_buffer.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/6/ext/aligned_buffer.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/6/ext/aligned_buffer.h **** // any later version.
  10:/usr/include/c++/6/ext/aligned_buffer.h **** 
  11:/usr/include/c++/6/ext/aligned_buffer.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/6/ext/aligned_buffer.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/6/ext/aligned_buffer.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/6/ext/aligned_buffer.h **** // GNU General Public License for more details.
  15:/usr/include/c++/6/ext/aligned_buffer.h **** 
  16:/usr/include/c++/6/ext/aligned_buffer.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/6/ext/aligned_buffer.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/6/ext/aligned_buffer.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/6/ext/aligned_buffer.h **** 
  20:/usr/include/c++/6/ext/aligned_buffer.h **** // You should have received a copy of the GNU General Public License and
GAS LISTING /tmp/ccvUPO8Q.s 			page 593


  21:/usr/include/c++/6/ext/aligned_buffer.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/6/ext/aligned_buffer.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/6/ext/aligned_buffer.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/6/ext/aligned_buffer.h **** 
  25:/usr/include/c++/6/ext/aligned_buffer.h **** /** @file ext/aligned_buffer.h
  26:/usr/include/c++/6/ext/aligned_buffer.h ****  *  This file is a GNU extension to the Standard C++ Library.
  27:/usr/include/c++/6/ext/aligned_buffer.h ****  */
  28:/usr/include/c++/6/ext/aligned_buffer.h **** 
  29:/usr/include/c++/6/ext/aligned_buffer.h **** #ifndef _ALIGNED_BUFFER_H
  30:/usr/include/c++/6/ext/aligned_buffer.h **** #define _ALIGNED_BUFFER_H 1
  31:/usr/include/c++/6/ext/aligned_buffer.h **** 
  32:/usr/include/c++/6/ext/aligned_buffer.h **** #pragma GCC system_header
  33:/usr/include/c++/6/ext/aligned_buffer.h **** 
  34:/usr/include/c++/6/ext/aligned_buffer.h **** #if __cplusplus >= 201103L
  35:/usr/include/c++/6/ext/aligned_buffer.h **** # include <type_traits>
  36:/usr/include/c++/6/ext/aligned_buffer.h **** #else
  37:/usr/include/c++/6/ext/aligned_buffer.h **** # include <bits/c++0x_warning.h>
  38:/usr/include/c++/6/ext/aligned_buffer.h **** #endif
  39:/usr/include/c++/6/ext/aligned_buffer.h **** 
  40:/usr/include/c++/6/ext/aligned_buffer.h **** namespace __gnu_cxx
  41:/usr/include/c++/6/ext/aligned_buffer.h **** {
  42:/usr/include/c++/6/ext/aligned_buffer.h ****   // A utility type containing a POD object that can hold an object of type
  43:/usr/include/c++/6/ext/aligned_buffer.h ****   // _Tp initialized via placement new or allocator_traits::construct.
  44:/usr/include/c++/6/ext/aligned_buffer.h ****   // Intended for use as a data member subobject, use __aligned_buffer for
  45:/usr/include/c++/6/ext/aligned_buffer.h ****   // complete objects.
  46:/usr/include/c++/6/ext/aligned_buffer.h ****   template<typename _Tp>
  47:/usr/include/c++/6/ext/aligned_buffer.h ****     struct __aligned_membuf
  48:/usr/include/c++/6/ext/aligned_buffer.h ****     {
  49:/usr/include/c++/6/ext/aligned_buffer.h ****       // Target macro ADJUST_FIELD_ALIGN can produce different alignment for
  50:/usr/include/c++/6/ext/aligned_buffer.h ****       // types when used as class members. __aligned_membuf is intended
  51:/usr/include/c++/6/ext/aligned_buffer.h ****       // for use as a class member, so align the buffer as for a class member.
  52:/usr/include/c++/6/ext/aligned_buffer.h ****       struct _Tp2 { _Tp _M_t; };
  53:/usr/include/c++/6/ext/aligned_buffer.h **** 
  54:/usr/include/c++/6/ext/aligned_buffer.h ****       alignas(__alignof__(_Tp2::_M_t)) unsigned char _M_storage[sizeof(_Tp)];
  55:/usr/include/c++/6/ext/aligned_buffer.h **** 
  56:/usr/include/c++/6/ext/aligned_buffer.h ****       __aligned_membuf() = default;
  57:/usr/include/c++/6/ext/aligned_buffer.h **** 
  58:/usr/include/c++/6/ext/aligned_buffer.h ****       // Can be used to avoid value-initialization zeroing _M_storage.
  59:/usr/include/c++/6/ext/aligned_buffer.h ****       __aligned_membuf(std::nullptr_t) { }
  60:/usr/include/c++/6/ext/aligned_buffer.h **** 
  61:/usr/include/c++/6/ext/aligned_buffer.h ****       void*
  62:/usr/include/c++/6/ext/aligned_buffer.h ****       _M_addr() noexcept
  63:/usr/include/c++/6/ext/aligned_buffer.h ****       { return static_cast<void*>(&_M_storage); }
  64:/usr/include/c++/6/ext/aligned_buffer.h **** 
  65:/usr/include/c++/6/ext/aligned_buffer.h ****       const void*
  66:/usr/include/c++/6/ext/aligned_buffer.h ****       _M_addr() const noexcept
  67:/usr/include/c++/6/ext/aligned_buffer.h ****       { return static_cast<const void*>(&_M_storage); }
  68:/usr/include/c++/6/ext/aligned_buffer.h **** 
  69:/usr/include/c++/6/ext/aligned_buffer.h ****       _Tp*
  70:/usr/include/c++/6/ext/aligned_buffer.h ****       _M_ptr() noexcept
 13964              		.loc 46 70 0
 13965              		.cfi_startproc
 13966 0000 55       		pushq	%rbp
 13967              		.cfi_def_cfa_offset 16
 13968              		.cfi_offset 6, -16
 13969 0001 4889E5   		movq	%rsp, %rbp
 13970              		.cfi_def_cfa_register 6
GAS LISTING /tmp/ccvUPO8Q.s 			page 594


 13971 0004 4883EC10 		subq	$16, %rsp
 13972 0008 48897DF8 		movq	%rdi, -8(%rbp)
  71:/usr/include/c++/6/ext/aligned_buffer.h ****       { return static_cast<_Tp*>(_M_addr()); }
 13973              		.loc 46 71 0
 13974 000c 488B45F8 		movq	-8(%rbp), %rax
 13975 0010 4889C7   		movq	%rax, %rdi
 13976 0013 E8000000 		call	_ZN9__gnu_cxx16__aligned_membufISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS2_8functio
 13976      00
 13977 0018 C9       		leave
 13978              		.cfi_def_cfa 7, 8
 13979 0019 C3       		ret
 13980              		.cfi_endproc
 13981              	.LFE14359:
 13983              		.section	.text._ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFv
 13984              		.align 2
 13985              		.weak	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt
 13987              	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt10_Sele
 13988              	.LFB14360:
 504:/usr/include/c++/6/bits/stl_tree.h ****       { return _Alloc_traits::allocate(_M_get_Node_allocator(), 1); }
 13989              		.loc 27 504 0
 13990              		.cfi_startproc
 13991 0000 55       		pushq	%rbp
 13992              		.cfi_def_cfa_offset 16
 13993              		.cfi_offset 6, -16
 13994 0001 4889E5   		movq	%rsp, %rbp
 13995              		.cfi_def_cfa_register 6
 13996 0004 4883EC10 		subq	$16, %rsp
 13997 0008 48897DF8 		movq	%rdi, -8(%rbp)
 505:/usr/include/c++/6/bits/stl_tree.h **** 
 13998              		.loc 27 505 0
 13999 000c 488B45F8 		movq	-8(%rbp), %rax
 14000 0010 4889C7   		movq	%rax, %rdi
 14001 0013 E8000000 		call	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt1
 14001      00
 14002 0018 BE010000 		movl	$1, %esi
 14002      00
 14003 001d 4889C7   		movq	%rax, %rdi
 14004 0020 E8000000 		call	_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEE
 14004      00
 14005 0025 C9       		leave
 14006              		.cfi_def_cfa 7, 8
 14007 0026 C3       		ret
 14008              		.cfi_endproc
 14009              	.LFE14360:
 14011              		.section	.text._ZNSt18_Rb_tree_node_baseC2Ev,"axG",@progbits,_ZNSt18_Rb_tree_node_baseC5Ev,comdat
 14012              		.align 2
 14013              		.weak	_ZNSt18_Rb_tree_node_baseC2Ev
 14015              	_ZNSt18_Rb_tree_node_baseC2Ev:
 14016              	.LFB14364:
  98:/usr/include/c++/6/bits/stl_tree.h ****   {
 14017              		.loc 27 98 0
 14018              		.cfi_startproc
 14019 0000 55       		pushq	%rbp
 14020              		.cfi_def_cfa_offset 16
 14021              		.cfi_offset 6, -16
 14022 0001 4889E5   		movq	%rsp, %rbp
 14023              		.cfi_def_cfa_register 6
GAS LISTING /tmp/ccvUPO8Q.s 			page 595


 14024 0004 48897DF8 		movq	%rdi, -8(%rbp)
  98:/usr/include/c++/6/bits/stl_tree.h ****   {
 14025              		.loc 27 98 0
 14026 0008 90       		nop
 14027 0009 5D       		popq	%rbp
 14028              		.cfi_def_cfa 7, 8
 14029 000a C3       		ret
 14030              		.cfi_endproc
 14031              	.LFE14364:
 14033              		.weak	_ZNSt18_Rb_tree_node_baseC1Ev
 14034              		.set	_ZNSt18_Rb_tree_node_baseC1Ev,_ZNSt18_Rb_tree_node_baseC2Ev
 14035              		.section	.text._ZN9__gnu_cxx16__aligned_membufISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS
 14036              		.align 2
 14037              		.weak	_ZN9__gnu_cxx16__aligned_membufISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS2_8functi
 14039              	_ZN9__gnu_cxx16__aligned_membufISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS2_8functionIFvS6
 14040              	.LFB14367:
  56:/usr/include/c++/6/ext/aligned_buffer.h **** 
 14041              		.loc 46 56 0
 14042              		.cfi_startproc
 14043 0000 55       		pushq	%rbp
 14044              		.cfi_def_cfa_offset 16
 14045              		.cfi_offset 6, -16
 14046 0001 4889E5   		movq	%rsp, %rbp
 14047              		.cfi_def_cfa_register 6
 14048 0004 48897DF8 		movq	%rdi, -8(%rbp)
  56:/usr/include/c++/6/ext/aligned_buffer.h **** 
 14049              		.loc 46 56 0
 14050 0008 90       		nop
 14051 0009 5D       		popq	%rbp
 14052              		.cfi_def_cfa 7, 8
 14053 000a C3       		ret
 14054              		.cfi_endproc
 14055              	.LFE14367:
 14057              		.weak	_ZN9__gnu_cxx16__aligned_membufISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS2_8functi
 14058              		.set	_ZN9__gnu_cxx16__aligned_membufISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS2_8functio
 14059              		.section	.text._ZNSt13_Rb_tree_nodeISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS1_8function
 14060              		.align 2
 14061              		.weak	_ZNSt13_Rb_tree_nodeISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS1_8functionIFvS5_EEE
 14063              	_ZNSt13_Rb_tree_nodeISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS1_8functionIFvS5_EEEEEC2Ev:
 14064              	.LFB14369:
 138:/usr/include/c++/6/bits/stl_tree.h ****     {
 14065              		.loc 27 138 0
 14066              		.cfi_startproc
 14067 0000 55       		pushq	%rbp
 14068              		.cfi_def_cfa_offset 16
 14069              		.cfi_offset 6, -16
 14070 0001 4889E5   		movq	%rsp, %rbp
 14071              		.cfi_def_cfa_register 6
 14072 0004 4883EC10 		subq	$16, %rsp
 14073 0008 48897DF8 		movq	%rdi, -8(%rbp)
 14074              	.LBB133:
 138:/usr/include/c++/6/bits/stl_tree.h ****     {
 14075              		.loc 27 138 0
 14076 000c 488B45F8 		movq	-8(%rbp), %rax
 14077 0010 4889C7   		movq	%rax, %rdi
 14078 0013 E8000000 		call	_ZNSt18_Rb_tree_node_baseC2Ev
 14078      00
GAS LISTING /tmp/ccvUPO8Q.s 			page 596


 14079 0018 488B45F8 		movq	-8(%rbp), %rax
 14080 001c 4883C020 		addq	$32, %rax
 14081 0020 4889C7   		movq	%rax, %rdi
 14082 0023 E8000000 		call	_ZN9__gnu_cxx16__aligned_membufISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS2_8functio
 14082      00
 14083              	.LBE133:
 14084 0028 90       		nop
 14085 0029 C9       		leave
 14086              		.cfi_def_cfa 7, 8
 14087 002a C3       		ret
 14088              		.cfi_endproc
 14089              	.LFE14369:
 14091              		.weak	_ZNSt13_Rb_tree_nodeISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS1_8functionIFvS5_EEE
 14092              		.set	_ZNSt13_Rb_tree_nodeISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS1_8functionIFvS5_EEEE
 14093              		.section	.text._ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFv
 14094              		.align 2
 14095              		.weak	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt
 14097              	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt10_Sele
 14098              	.LFB14361:
 538:/usr/include/c++/6/bits/stl_tree.h **** 	{
 14099              		.loc 27 538 0
 14100              		.cfi_startproc
 14101              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 14102              		.cfi_lsda 0x1b,.LLSDA14361
 14103 0000 55       		pushq	%rbp
 14104              		.cfi_def_cfa_offset 16
 14105              		.cfi_offset 6, -16
 14106 0001 4889E5   		movq	%rsp, %rbp
 14107              		.cfi_def_cfa_register 6
 14108 0004 4156     		pushq	%r14
 14109 0006 4155     		pushq	%r13
 14110 0008 4154     		pushq	%r12
 14111 000a 53       		pushq	%rbx
 14112 000b 4883EC30 		subq	$48, %rsp
 14113              		.cfi_offset 14, -24
 14114              		.cfi_offset 13, -32
 14115              		.cfi_offset 12, -40
 14116              		.cfi_offset 3, -48
 14117 000f 48897DD8 		movq	%rdi, -40(%rbp)
 14118 0013 488975D0 		movq	%rsi, -48(%rbp)
 14119 0017 488955C8 		movq	%rdx, -56(%rbp)
 14120 001b 48894DC0 		movq	%rcx, -64(%rbp)
 14121 001f 4C8945B8 		movq	%r8, -72(%rbp)
 542:/usr/include/c++/6/bits/stl_tree.h **** 	      _Alloc_traits::construct(_M_get_Node_allocator(),
 14122              		.loc 27 542 0
 14123 0023 488B45D0 		movq	-48(%rbp), %rax
 14124 0027 4889C6   		movq	%rax, %rsi
 14125 002a BF480000 		movl	$72, %edi
 14125      00
 14126 002f E8000000 		call	_ZnwmPv
 14126      00
 14127 0034 4885C0   		testq	%rax, %rax
 14128 0037 7408     		je	.L687
 542:/usr/include/c++/6/bits/stl_tree.h **** 	      _Alloc_traits::construct(_M_get_Node_allocator(),
 14129              		.loc 27 542 0 is_stmt 0 discriminator 1
 14130 0039 4889C7   		movq	%rax, %rdi
 14131 003c E8000000 		call	_ZNSt13_Rb_tree_nodeISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS1_8functionIFvS5_EEEE
GAS LISTING /tmp/ccvUPO8Q.s 			page 597


 14131      00
 14132              	.L687:
 543:/usr/include/c++/6/bits/stl_tree.h **** 				       __node->_M_valptr(),
 14133              		.loc 27 543 0 is_stmt 1
 14134 0041 488B45B8 		movq	-72(%rbp), %rax
 14135 0045 4889C7   		movq	%rax, %rdi
 14136 0048 E8000000 		call	_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE
 14136      00
 14137 004d 4989C6   		movq	%rax, %r14
 14138 0050 488B45C0 		movq	-64(%rbp), %rax
 14139 0054 4889C7   		movq	%rax, %rdi
 14140 0057 E8000000 		call	_ZSt7forwardISt5tupleIJRKN5boost13intrusive_ptrIN3pmt8pmt_baseEEEEEEOT_RNSt16remove_reference
 14140      00
 14141 005c 4989C5   		movq	%rax, %r13
 14142 005f 488B45C8 		movq	-56(%rbp), %rax
 14143 0063 4889C7   		movq	%rax, %rdi
 14144 0066 E8000000 		call	_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE
 14144      00
 14145 006b 4989C4   		movq	%rax, %r12
 14146 006e 488B45D0 		movq	-48(%rbp), %rax
 14147 0072 4889C7   		movq	%rax, %rdi
 14148 0075 E8000000 		call	_ZNSt13_Rb_tree_nodeISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS1_8functionIFvS5_EEEE
 14148      00
 14149 007a 4889C3   		movq	%rax, %rbx
 14150 007d 488B45D8 		movq	-40(%rbp), %rax
 14151 0081 4889C7   		movq	%rax, %rdi
 14152 0084 E8000000 		call	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt1
 14152      00
 14153 0089 4D89F0   		movq	%r14, %r8
 14154 008c 4C89E9   		movq	%r13, %rcx
 14155 008f 4C89E2   		movq	%r12, %rdx
 14156 0092 4889DE   		movq	%rbx, %rsi
 14157 0095 4889C7   		movq	%rax, %rdi
 14158              	.LEHB89:
 14159 0098 E8000000 		call	_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEE
 14159      00
 14160              	.LEHE89:
 553:/usr/include/c++/6/bits/stl_tree.h **** 
 14161              		.loc 27 553 0
 14162 009d EB33     		jmp	.L692
 14163              	.L690:
 547:/usr/include/c++/6/bits/stl_tree.h **** 	    {
 14164              		.loc 27 547 0
 14165 009f 4889C7   		movq	%rax, %rdi
 14166 00a2 E8000000 		call	__cxa_begin_catch@PLT
 14166      00
 550:/usr/include/c++/6/bits/stl_tree.h **** 	      __throw_exception_again;
 14167              		.loc 27 550 0
 14168 00a7 488B55D0 		movq	-48(%rbp), %rdx
 14169 00ab 488B45D8 		movq	-40(%rbp), %rax
 14170 00af 4889D6   		movq	%rdx, %rsi
 14171 00b2 4889C7   		movq	%rax, %rdi
 14172 00b5 E8000000 		call	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt1
 14172      00
 14173              	.LEHB90:
 551:/usr/include/c++/6/bits/stl_tree.h **** 	    }
 14174              		.loc 27 551 0
GAS LISTING /tmp/ccvUPO8Q.s 			page 598


 14175 00ba E8000000 		call	__cxa_rethrow@PLT
 14175      00
 14176              	.LEHE90:
 14177              	.L691:
 14178 00bf 4889C3   		movq	%rax, %rbx
 547:/usr/include/c++/6/bits/stl_tree.h **** 	    {
 14179              		.loc 27 547 0
 14180 00c2 E8000000 		call	__cxa_end_catch@PLT
 14180      00
 14181 00c7 4889D8   		movq	%rbx, %rax
 14182 00ca 4889C7   		movq	%rax, %rdi
 14183              	.LEHB91:
 14184 00cd E8000000 		call	_Unwind_Resume@PLT
 14184      00
 14185              	.LEHE91:
 14186              	.L692:
 553:/usr/include/c++/6/bits/stl_tree.h **** 
 14187              		.loc 27 553 0
 14188 00d2 4883C430 		addq	$48, %rsp
 14189 00d6 5B       		popq	%rbx
 14190 00d7 415C     		popq	%r12
 14191 00d9 415D     		popq	%r13
 14192 00db 415E     		popq	%r14
 14193 00dd 5D       		popq	%rbp
 14194              		.cfi_def_cfa 7, 8
 14195 00de C3       		ret
 14196              		.cfi_endproc
 14197              	.LFE14361:
 14198              		.section	.gcc_except_table
 14199 0202 0000     		.align 4
 14200              	.LLSDA14361:
 14201 0204 FF       		.byte	0xff
 14202 0205 9B       		.byte	0x9b
 14203 0206 19       		.uleb128 .LLSDATT14361-.LLSDATTD14361
 14204              	.LLSDATTD14361:
 14205 0207 01       		.byte	0x1
 14206 0208 11       		.uleb128 .LLSDACSE14361-.LLSDACSB14361
 14207              	.LLSDACSB14361:
 14208 0209 9801     		.uleb128 .LEHB89-.LFB14361
 14209 020b 05       		.uleb128 .LEHE89-.LEHB89
 14210 020c 9F01     		.uleb128 .L690-.LFB14361
 14211 020e 01       		.uleb128 0x1
 14212 020f BA01     		.uleb128 .LEHB90-.LFB14361
 14213 0211 05       		.uleb128 .LEHE90-.LEHB90
 14214 0212 BF01     		.uleb128 .L691-.LFB14361
 14215 0214 00       		.uleb128 0
 14216 0215 CD01     		.uleb128 .LEHB91-.LFB14361
 14217 0217 05       		.uleb128 .LEHE91-.LEHB91
 14218 0218 00       		.uleb128 0
 14219 0219 00       		.uleb128 0
 14220              	.LLSDACSE14361:
 14221 021a 01       		.byte	0x1
 14222 021b 00       		.byte	0
 14223              		.align 4
 14224 021c 00000000 		.long	0
 14225              	
 14226              	.LLSDATT14361:
GAS LISTING /tmp/ccvUPO8Q.s 			page 599


 14227              		.section	.text._ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFv
 14229              		.section	.text._ZNKSt23_Rb_tree_const_iteratorISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS
 14230              		.align 2
 14231              		.weak	_ZNKSt23_Rb_tree_const_iteratorISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS1_8functi
 14233              	_ZNKSt23_Rb_tree_const_iteratorISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS1_8functionIFvS5
 14234              	.LFB14371:
 274:/usr/include/c++/6/bits/stl_tree.h ****       { return iterator(const_cast<typename iterator::_Base_ptr>(_M_node)); }
 14235              		.loc 27 274 0
 14236              		.cfi_startproc
 14237 0000 55       		pushq	%rbp
 14238              		.cfi_def_cfa_offset 16
 14239              		.cfi_offset 6, -16
 14240 0001 4889E5   		movq	%rsp, %rbp
 14241              		.cfi_def_cfa_register 6
 14242 0004 4883EC20 		subq	$32, %rsp
 14243 0008 48897DE8 		movq	%rdi, -24(%rbp)
 275:/usr/include/c++/6/bits/stl_tree.h **** 
 14244              		.loc 27 275 0
 14245 000c 488B45E8 		movq	-24(%rbp), %rax
 14246 0010 488B10   		movq	(%rax), %rdx
 14247 0013 488D45F8 		leaq	-8(%rbp), %rax
 14248 0017 4889D6   		movq	%rdx, %rsi
 14249 001a 4889C7   		movq	%rax, %rdi
 14250 001d E8000000 		call	_ZNSt17_Rb_tree_iteratorISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS1_8functionIFvS5_
 14250      00
 14251 0022 488B45F8 		movq	-8(%rbp), %rax
 14252 0026 C9       		leave
 14253              		.cfi_def_cfa 7, 8
 14254 0027 C3       		ret
 14255              		.cfi_endproc
 14256              	.LFE14371:
 14258              		.section	.text._ZNKSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIF
 14259              		.align 2
 14260              		.weak	_ZNKSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEES
 14262              	_ZNKSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt10_Sel
 14263              	.LFB14372:
 920:/usr/include/c++/6/bits/stl_tree.h ****       { return _M_impl._M_node_count; }
 14264              		.loc 27 920 0
 14265              		.cfi_startproc
 14266 0000 55       		pushq	%rbp
 14267              		.cfi_def_cfa_offset 16
 14268              		.cfi_offset 6, -16
 14269 0001 4889E5   		movq	%rsp, %rbp
 14270              		.cfi_def_cfa_register 6
 14271 0004 48897DF8 		movq	%rdi, -8(%rbp)
 921:/usr/include/c++/6/bits/stl_tree.h **** 
 14272              		.loc 27 921 0
 14273 0008 488B45F8 		movq	-8(%rbp), %rax
 14274 000c 488B4028 		movq	40(%rax), %rax
 14275 0010 5D       		popq	%rbp
 14276              		.cfi_def_cfa 7, 8
 14277 0011 C3       		ret
 14278              		.cfi_endproc
 14279              	.LFE14372:
 14281              		.section	.text._ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFv
 14282              		.align 2
 14283              		.weak	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt
GAS LISTING /tmp/ccvUPO8Q.s 			page 600


 14285              	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt10_Sele
 14286              	.LFB14373:
 657:/usr/include/c++/6/bits/stl_tree.h ****       { return this->_M_impl._M_header._M_right; }
 14287              		.loc 27 657 0
 14288              		.cfi_startproc
 14289 0000 55       		pushq	%rbp
 14290              		.cfi_def_cfa_offset 16
 14291              		.cfi_offset 6, -16
 14292 0001 4889E5   		movq	%rsp, %rbp
 14293              		.cfi_def_cfa_register 6
 14294 0004 48897DF8 		movq	%rdi, -8(%rbp)
 658:/usr/include/c++/6/bits/stl_tree.h **** 
 14295              		.loc 27 658 0
 14296 0008 488B45F8 		movq	-8(%rbp), %rax
 14297 000c 4883C020 		addq	$32, %rax
 14298 0010 5D       		popq	%rbp
 14299              		.cfi_def_cfa 7, 8
 14300 0011 C3       		ret
 14301              		.cfi_endproc
 14302              	.LFE14373:
 14304              		.section	.text._ZSt7forwardIRPSt13_Rb_tree_nodeISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEEN
 14305              		.weak	_ZSt7forwardIRPSt13_Rb_tree_nodeISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS2_8funct
 14307              	_ZSt7forwardIRPSt13_Rb_tree_nodeISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS2_8functionIFvS
 14308              	.LFB14380:
  76:/usr/include/c++/6/bits/move.h ****     { return static_cast<_Tp&&>(__t); }
 14309              		.loc 33 76 0
 14310              		.cfi_startproc
 14311 0000 55       		pushq	%rbp
 14312              		.cfi_def_cfa_offset 16
 14313              		.cfi_offset 6, -16
 14314 0001 4889E5   		movq	%rsp, %rbp
 14315              		.cfi_def_cfa_register 6
 14316 0004 48897DF8 		movq	%rdi, -8(%rbp)
  77:/usr/include/c++/6/bits/move.h **** 
 14317              		.loc 33 77 0
 14318 0008 488B45F8 		movq	-8(%rbp), %rax
 14319 000c 5D       		popq	%rbp
 14320              		.cfi_def_cfa 7, 8
 14321 000d C3       		ret
 14322              		.cfi_endproc
 14323              	.LFE14380:
 14325              		.section	.text._ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRPSt13_Rb_tree_nodeIS_IKN5boost13intrusive
 14326              		.align 2
 14327              		.weak	_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRPSt13_Rb_tree_nodeIS_IKN5boost13intrusive_ptrIN3pm
 14329              	_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRPSt13_Rb_tree_nodeIS_IKN5boost13intrusive_ptrIN3pmt8pmt_b
 14330              	.LFB14381:
 326:/usr/include/c++/6/bits/stl_pair.h **** 	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
 14331              		.loc 41 326 0
 14332              		.cfi_startproc
 14333 0000 55       		pushq	%rbp
 14334              		.cfi_def_cfa_offset 16
 14335              		.cfi_offset 6, -16
 14336 0001 4889E5   		movq	%rsp, %rbp
 14337              		.cfi_def_cfa_register 6
 14338 0004 4883EC20 		subq	$32, %rsp
 14339 0008 48897DF8 		movq	%rdi, -8(%rbp)
 14340 000c 488975F0 		movq	%rsi, -16(%rbp)
GAS LISTING /tmp/ccvUPO8Q.s 			page 601


 14341 0010 488955E8 		movq	%rdx, -24(%rbp)
 14342              	.LBB134:
 14343              		.loc 41 327 0
 14344 0014 488B45F0 		movq	-16(%rbp), %rax
 14345 0018 4889C7   		movq	%rax, %rdi
 14346 001b E8000000 		call	_ZSt7forwardIRPSt13_Rb_tree_nodeISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS2_8functi
 14346      00
 14347 0020 488B10   		movq	(%rax), %rdx
 14348 0023 488B45F8 		movq	-8(%rbp), %rax
 14349 0027 488910   		movq	%rdx, (%rax)
 14350 002a 488B45E8 		movq	-24(%rbp), %rax
 14351 002e 4889C7   		movq	%rax, %rdi
 14352 0031 E8000000 		call	_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE
 14352      00
 14353 0036 488B10   		movq	(%rax), %rdx
 14354 0039 488B45F8 		movq	-8(%rbp), %rax
 14355 003d 48895008 		movq	%rdx, 8(%rax)
 14356              	.LBE134:
 14357 0041 90       		nop
 14358 0042 C9       		leave
 14359              		.cfi_def_cfa 7, 8
 14360 0043 C3       		ret
 14361              		.cfi_endproc
 14362              	.LFE14381:
 14364              		.weak	_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeIS_IKN5boost13intrusive_ptrIN3pm
 14365              		.set	_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeIS_IKN5boost13intrusive_ptrIN3pmt
 14366              		.section	.text._ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFv
 14367              		.align 2
 14368              		.weak	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt
 14370              	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt10_Sele
 14371              	.LFB14374:
1826:/usr/include/c++/6/bits/stl_tree.h ****     _M_get_insert_unique_pos(const key_type& __k)
 14372              		.loc 27 1826 0
 14373              		.cfi_startproc
 14374 0000 55       		pushq	%rbp
 14375              		.cfi_def_cfa_offset 16
 14376              		.cfi_offset 6, -16
 14377 0001 4889E5   		movq	%rsp, %rbp
 14378              		.cfi_def_cfa_register 6
 14379 0004 4883EC70 		subq	$112, %rsp
 14380 0008 48897D98 		movq	%rdi, -104(%rbp)
 14381 000c 48897590 		movq	%rsi, -112(%rbp)
1830:/usr/include/c++/6/bits/stl_tree.h ****       _Base_ptr __y = _M_end();
 14382              		.loc 27 1830 0
 14383 0010 488B4598 		movq	-104(%rbp), %rax
 14384 0014 4889C7   		movq	%rax, %rdi
 14385 0017 E8000000 		call	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt1
 14385      00
 14386 001c 488945B0 		movq	%rax, -80(%rbp)
1831:/usr/include/c++/6/bits/stl_tree.h ****       bool __comp = true;
 14387              		.loc 27 1831 0
 14388 0020 488B4598 		movq	-104(%rbp), %rax
 14389 0024 4889C7   		movq	%rax, %rdi
 14390 0027 E8000000 		call	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt1
 14390      00
 14391 002c 488945A8 		movq	%rax, -88(%rbp)
1832:/usr/include/c++/6/bits/stl_tree.h ****       while (__x != 0)
GAS LISTING /tmp/ccvUPO8Q.s 			page 602


 14392              		.loc 27 1832 0
 14393 0030 C645FF01 		movb	$1, -1(%rbp)
 14394              	.L706:
1833:/usr/include/c++/6/bits/stl_tree.h **** 	{
 14395              		.loc 27 1833 0
 14396 0034 488B45B0 		movq	-80(%rbp), %rax
 14397 0038 4885C0   		testq	%rax, %rax
 14398 003b 7453     		je	.L703
1835:/usr/include/c++/6/bits/stl_tree.h **** 	  __comp = _M_impl._M_key_compare(__k, _S_key(__x));
 14399              		.loc 27 1835 0
 14400 003d 488B45B0 		movq	-80(%rbp), %rax
 14401 0041 488945A8 		movq	%rax, -88(%rbp)
1836:/usr/include/c++/6/bits/stl_tree.h **** 	  __x = __comp ? _S_left(__x) : _S_right(__x);
 14402              		.loc 27 1836 0
 14403 0045 488B45B0 		movq	-80(%rbp), %rax
 14404 0049 4889C7   		movq	%rax, %rdi
 14405 004c E8000000 		call	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt1
 14405      00
 14406 0051 4889C2   		movq	%rax, %rdx
 14407 0054 488B4598 		movq	-104(%rbp), %rax
 14408 0058 488B4D90 		movq	-112(%rbp), %rcx
 14409 005c 4889CE   		movq	%rcx, %rsi
 14410 005f 4889C7   		movq	%rax, %rdi
 14411 0062 E8000000 		call	_ZNK3pmt10comparatorclERKN5boost13intrusive_ptrINS_8pmt_baseEEES6_
 14411      00
 14412 0067 8845FF   		movb	%al, -1(%rbp)
1837:/usr/include/c++/6/bits/stl_tree.h **** 	}
 14413              		.loc 27 1837 0
 14414 006a 807DFF00 		cmpb	$0, -1(%rbp)
 14415 006e 740E     		je	.L704
1837:/usr/include/c++/6/bits/stl_tree.h **** 	}
 14416              		.loc 27 1837 0 is_stmt 0 discriminator 1
 14417 0070 488B45B0 		movq	-80(%rbp), %rax
 14418 0074 4889C7   		movq	%rax, %rdi
 14419 0077 E8000000 		call	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt1
 14419      00
 14420 007c EB0C     		jmp	.L705
 14421              	.L704:
1837:/usr/include/c++/6/bits/stl_tree.h **** 	}
 14422              		.loc 27 1837 0 discriminator 2
 14423 007e 488B45B0 		movq	-80(%rbp), %rax
 14424 0082 4889C7   		movq	%rax, %rdi
 14425 0085 E8000000 		call	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt1
 14425      00
 14426              	.L705:
1837:/usr/include/c++/6/bits/stl_tree.h **** 	}
 14427              		.loc 27 1837 0 discriminator 4
 14428 008a 488945B0 		movq	%rax, -80(%rbp)
1833:/usr/include/c++/6/bits/stl_tree.h **** 	{
 14429              		.loc 27 1833 0 is_stmt 1 discriminator 4
 14430 008e EBA4     		jmp	.L706
 14431              	.L703:
1839:/usr/include/c++/6/bits/stl_tree.h ****       if (__comp)
 14432              		.loc 27 1839 0
 14433 0090 488B55A8 		movq	-88(%rbp), %rdx
 14434 0094 488D45A0 		leaq	-96(%rbp), %rax
 14435 0098 4889D6   		movq	%rdx, %rsi
GAS LISTING /tmp/ccvUPO8Q.s 			page 603


 14436 009b 4889C7   		movq	%rax, %rdi
 14437 009e E8000000 		call	_ZNSt17_Rb_tree_iteratorISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS1_8functionIFvS5_
 14437      00
1840:/usr/include/c++/6/bits/stl_tree.h **** 	{
 14438              		.loc 27 1840 0
 14439 00a3 807DFF00 		cmpb	$0, -1(%rbp)
 14440 00a7 7454     		je	.L707
1842:/usr/include/c++/6/bits/stl_tree.h **** 	    return _Res(__x, __y);
 14441              		.loc 27 1842 0
 14442 00a9 488B4598 		movq	-104(%rbp), %rax
 14443 00ad 4889C7   		movq	%rax, %rdi
 14444 00b0 E8000000 		call	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt1
 14444      00
 14445 00b5 488945B8 		movq	%rax, -72(%rbp)
 14446 00b9 488D55B8 		leaq	-72(%rbp), %rdx
 14447 00bd 488D45A0 		leaq	-96(%rbp), %rax
 14448 00c1 4889D6   		movq	%rdx, %rsi
 14449 00c4 4889C7   		movq	%rax, %rdi
 14450 00c7 E8000000 		call	_ZNKSt17_Rb_tree_iteratorISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS1_8functionIFvS5
 14450      00
 14451 00cc 84C0     		testb	%al, %al
 14452 00ce 7421     		je	.L708
1843:/usr/include/c++/6/bits/stl_tree.h **** 	  else
 14453              		.loc 27 1843 0
 14454 00d0 488D55A8 		leaq	-88(%rbp), %rdx
 14455 00d4 488D4DB0 		leaq	-80(%rbp), %rcx
 14456 00d8 488D45C0 		leaq	-64(%rbp), %rax
 14457 00dc 4889CE   		movq	%rcx, %rsi
 14458 00df 4889C7   		movq	%rax, %rdi
 14459 00e2 E8000000 		call	_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeIS_IKN5boost13intrusive_ptrIN3pmt
 14459      00
 14460 00e7 488B45C0 		movq	-64(%rbp), %rax
 14461 00eb 488B55C8 		movq	-56(%rbp), %rdx
 14462 00ef EB7A     		jmp	.L711
 14463              	.L708:
1845:/usr/include/c++/6/bits/stl_tree.h **** 	}
 14464              		.loc 27 1845 0
 14465 00f1 488D45A0 		leaq	-96(%rbp), %rax
 14466 00f5 4889C7   		movq	%rax, %rdi
 14467 00f8 E8000000 		call	_ZNSt17_Rb_tree_iteratorISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS1_8functionIFvS5_
 14467      00
 14468              	.L707:
1847:/usr/include/c++/6/bits/stl_tree.h **** 	return _Res(__x, __y);
 14469              		.loc 27 1847 0
 14470 00fd 488B45A0 		movq	-96(%rbp), %rax
 14471 0101 4889C7   		movq	%rax, %rdi
 14472 0104 E8000000 		call	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt1
 14472      00
 14473 0109 4889C1   		movq	%rax, %rcx
 14474 010c 488B4598 		movq	-104(%rbp), %rax
 14475 0110 488B5590 		movq	-112(%rbp), %rdx
 14476 0114 4889CE   		movq	%rcx, %rsi
 14477 0117 4889C7   		movq	%rax, %rdi
 14478 011a E8000000 		call	_ZNK3pmt10comparatorclERKN5boost13intrusive_ptrINS_8pmt_baseEEES6_
 14478      00
 14479 011f 84C0     		testb	%al, %al
 14480 0121 7421     		je	.L710
GAS LISTING /tmp/ccvUPO8Q.s 			page 604


1848:/usr/include/c++/6/bits/stl_tree.h ****       return _Res(__j._M_node, 0);
 14481              		.loc 27 1848 0
 14482 0123 488D55A8 		leaq	-88(%rbp), %rdx
 14483 0127 488D4DB0 		leaq	-80(%rbp), %rcx
 14484 012b 488D45D0 		leaq	-48(%rbp), %rax
 14485 012f 4889CE   		movq	%rcx, %rsi
 14486 0132 4889C7   		movq	%rax, %rdi
 14487 0135 E8000000 		call	_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeIS_IKN5boost13intrusive_ptrIN3pmt
 14487      00
 14488 013a 488B45D0 		movq	-48(%rbp), %rax
 14489 013e 488B55D8 		movq	-40(%rbp), %rdx
 14490 0142 EB27     		jmp	.L711
 14491              	.L710:
1849:/usr/include/c++/6/bits/stl_tree.h ****     }
 14492              		.loc 27 1849 0
 14493 0144 48C745F0 		movq	$0, -16(%rbp)
 14493      00000000 
 14494 014c 488D55F0 		leaq	-16(%rbp), %rdx
 14495 0150 488D4DA0 		leaq	-96(%rbp), %rcx
 14496 0154 488D45E0 		leaq	-32(%rbp), %rax
 14497 0158 4889CE   		movq	%rcx, %rsi
 14498 015b 4889C7   		movq	%rax, %rdi
 14499 015e E8000000 		call	_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_Lb1EEEOT_RKS1_
 14499      00
 14500 0163 488B45E0 		movq	-32(%rbp), %rax
 14501 0167 488B55E8 		movq	-24(%rbp), %rdx
 14502              	.L711:
1850:/usr/include/c++/6/bits/stl_tree.h **** 
 14503              		.loc 27 1850 0 discriminator 1
 14504 016b C9       		leave
 14505              		.cfi_def_cfa 7, 8
 14506 016c C3       		ret
 14507              		.cfi_endproc
 14508              	.LFE14374:
 14510              		.section	.text._ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFv
 14511              		.align 2
 14512              		.weak	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt
 14514              	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt10_Sele
 14515              	.LFB14383:
 649:/usr/include/c++/6/bits/stl_tree.h ****       { return this->_M_impl._M_header._M_left; }
 14516              		.loc 27 649 0
 14517              		.cfi_startproc
 14518 0000 55       		pushq	%rbp
 14519              		.cfi_def_cfa_offset 16
 14520              		.cfi_offset 6, -16
 14521 0001 4889E5   		movq	%rsp, %rbp
 14522              		.cfi_def_cfa_register 6
 14523 0004 48897DF8 		movq	%rdi, -8(%rbp)
 650:/usr/include/c++/6/bits/stl_tree.h **** 
 14524              		.loc 27 650 0
 14525 0008 488B45F8 		movq	-8(%rbp), %rax
 14526 000c 4883C018 		addq	$24, %rax
 14527 0010 5D       		popq	%rbp
 14528              		.cfi_def_cfa 7, 8
 14529 0011 C3       		ret
 14530              		.cfi_endproc
 14531              	.LFE14383:
GAS LISTING /tmp/ccvUPO8Q.s 			page 605


 14533              		.section	.text._ZNSt17_Rb_tree_iteratorISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS1_8func
 14534              		.align 2
 14535              		.weak	_ZNSt17_Rb_tree_iteratorISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS1_8functionIFvS5
 14537              	_ZNSt17_Rb_tree_iteratorISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS1_8functionIFvS5_EEEEEm
 14538              	.LFB14384:
 222:/usr/include/c++/6/bits/stl_tree.h ****       {
 14539              		.loc 27 222 0
 14540              		.cfi_startproc
 14541 0000 55       		pushq	%rbp
 14542              		.cfi_def_cfa_offset 16
 14543              		.cfi_offset 6, -16
 14544 0001 4889E5   		movq	%rsp, %rbp
 14545              		.cfi_def_cfa_register 6
 14546 0004 4883EC10 		subq	$16, %rsp
 14547 0008 48897DF8 		movq	%rdi, -8(%rbp)
 224:/usr/include/c++/6/bits/stl_tree.h **** 	return *this;
 14548              		.loc 27 224 0
 14549 000c 488B45F8 		movq	-8(%rbp), %rax
 14550 0010 488B00   		movq	(%rax), %rax
 14551 0013 4889C7   		movq	%rax, %rdi
 14552 0016 E8000000 		call	_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base@PLT
 14552      00
 14553 001b 4889C2   		movq	%rax, %rdx
 14554 001e 488B45F8 		movq	-8(%rbp), %rax
 14555 0022 488910   		movq	%rdx, (%rax)
 225:/usr/include/c++/6/bits/stl_tree.h ****       }
 14556              		.loc 27 225 0
 14557 0025 488B45F8 		movq	-8(%rbp), %rax
 226:/usr/include/c++/6/bits/stl_tree.h **** 
 14558              		.loc 27 226 0
 14559 0029 C9       		leave
 14560              		.cfi_def_cfa 7, 8
 14561 002a C3       		ret
 14562              		.cfi_endproc
 14563              	.LFE14384:
 14565              		.section	.text._ZNSt17_Rb_tree_iteratorISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS1_8func
 14566              		.align 2
 14567              		.weak	_ZNSt17_Rb_tree_iteratorISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS1_8functionIFvS5
 14569              	_ZNSt17_Rb_tree_iteratorISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS1_8functionIFvS5_EEEEEp
 14570              	.LFB14385:
 207:/usr/include/c++/6/bits/stl_tree.h ****       {
 14571              		.loc 27 207 0
 14572              		.cfi_startproc
 14573 0000 55       		pushq	%rbp
 14574              		.cfi_def_cfa_offset 16
 14575              		.cfi_offset 6, -16
 14576 0001 4889E5   		movq	%rsp, %rbp
 14577              		.cfi_def_cfa_register 6
 14578 0004 4883EC10 		subq	$16, %rsp
 14579 0008 48897DF8 		movq	%rdi, -8(%rbp)
 209:/usr/include/c++/6/bits/stl_tree.h **** 	return *this;
 14580              		.loc 27 209 0
 14581 000c 488B45F8 		movq	-8(%rbp), %rax
 14582 0010 488B00   		movq	(%rax), %rax
 14583 0013 4889C7   		movq	%rax, %rdi
 14584 0016 E8000000 		call	_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base@PLT
 14584      00
GAS LISTING /tmp/ccvUPO8Q.s 			page 606


 14585 001b 4889C2   		movq	%rax, %rdx
 14586 001e 488B45F8 		movq	-8(%rbp), %rax
 14587 0022 488910   		movq	%rdx, (%rax)
 210:/usr/include/c++/6/bits/stl_tree.h ****       }
 14588              		.loc 27 210 0
 14589 0025 488B45F8 		movq	-8(%rbp), %rax
 211:/usr/include/c++/6/bits/stl_tree.h **** 
 14590              		.loc 27 211 0
 14591 0029 C9       		leave
 14592              		.cfi_def_cfa 7, 8
 14593 002a C3       		ret
 14594              		.cfi_endproc
 14595              	.LFE14385:
 14597              		.section	.text._ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFv
 14598              		.weak	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt
 14600              	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt10_Sele
 14601              	.LFB14386:
 684:/usr/include/c++/6/bits/stl_tree.h ****       { return *__x->_M_valptr(); }
 14602              		.loc 27 684 0
 14603              		.cfi_startproc
 14604 0000 55       		pushq	%rbp
 14605              		.cfi_def_cfa_offset 16
 14606              		.cfi_offset 6, -16
 14607 0001 4889E5   		movq	%rsp, %rbp
 14608              		.cfi_def_cfa_register 6
 14609 0004 4883EC10 		subq	$16, %rsp
 14610 0008 48897DF8 		movq	%rdi, -8(%rbp)
 685:/usr/include/c++/6/bits/stl_tree.h **** 
 14611              		.loc 27 685 0
 14612 000c 488B45F8 		movq	-8(%rbp), %rax
 14613 0010 4889C7   		movq	%rax, %rdi
 14614 0013 E8000000 		call	_ZNKSt13_Rb_tree_nodeISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS1_8functionIFvS5_EEE
 14614      00
 14615 0018 C9       		leave
 14616              		.cfi_def_cfa 7, 8
 14617 0019 C3       		ret
 14618              		.cfi_endproc
 14619              	.LFE14386:
 14621              		.section	.text._ZN5boost16exception_detail19error_info_injectorINS_17bad_function_callEEC2ERKS2_,"
 14622              		.align 2
 14623              		.weak	_ZN5boost16exception_detail19error_info_injectorINS_17bad_function_callEEC2ERKS2_
 14625              	_ZN5boost16exception_detail19error_info_injectorINS_17bad_function_callEEC2ERKS2_:
 14626              	.LFB14388:
 348:/usr/include/boost/exception/exception.hpp ****                 T(x)
 14627              		.loc 3 348 0
 14628              		.cfi_startproc
 14629 0000 55       		pushq	%rbp
 14630              		.cfi_def_cfa_offset 16
 14631              		.cfi_offset 6, -16
 14632 0001 4889E5   		movq	%rsp, %rbp
 14633              		.cfi_def_cfa_register 6
 14634 0004 4883EC10 		subq	$16, %rsp
 14635 0008 48897DF8 		movq	%rdi, -8(%rbp)
 14636 000c 488975F0 		movq	%rsi, -16(%rbp)
 14637              	.LBB135:
 349:/usr/include/boost/exception/exception.hpp ****                 {
 14638              		.loc 3 349 0
GAS LISTING /tmp/ccvUPO8Q.s 			page 607


 14639 0010 488B45F8 		movq	-8(%rbp), %rax
 14640 0014 488B55F0 		movq	-16(%rbp), %rdx
 14641 0018 4889D6   		movq	%rdx, %rsi
 14642 001b 4889C7   		movq	%rax, %rdi
 14643 001e E8000000 		call	_ZN5boost17bad_function_callC2ERKS0_
 14643      00
 14644 0023 488B45F8 		movq	-8(%rbp), %rax
 14645 0027 4883C010 		addq	$16, %rax
 14646 002b 4889C7   		movq	%rax, %rdi
 14647 002e E8000000 		call	_ZN5boost9exceptionC2Ev
 14647      00
 14648 0033 488D1500 		leaq	16+_ZTVN5boost16exception_detail19error_info_injectorINS_17bad_function_callEEE(%rip), %rdx
 14648      000000
 14649 003a 488B45F8 		movq	-8(%rbp), %rax
 14650 003e 488910   		movq	%rdx, (%rax)
 14651 0041 488D1500 		leaq	56+_ZTVN5boost16exception_detail19error_info_injectorINS_17bad_function_callEEE(%rip), %rdx
 14651      000000
 14652 0048 488B45F8 		movq	-8(%rbp), %rax
 14653 004c 48895010 		movq	%rdx, 16(%rax)
 14654              	.LBE135:
 351:/usr/include/boost/exception/exception.hpp **** 
 14655              		.loc 3 351 0
 14656 0050 90       		nop
 14657 0051 C9       		leave
 14658              		.cfi_def_cfa 7, 8
 14659 0052 C3       		ret
 14660              		.cfi_endproc
 14661              	.LFE14388:
 14663              		.weak	_ZN5boost16exception_detail19error_info_injectorINS_17bad_function_callEEC1ERKS2_
 14664              		.set	_ZN5boost16exception_detail19error_info_injectorINS_17bad_function_callEEC1ERKS2_,_ZN5boost16
 14665              		.section	.text._ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function
 14666              		.align 2
 14667              		.weak	_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEE
 14669              	_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEEC1ERKS4
 14670              	.LFB14392:
 473:/usr/include/boost/exception/exception.hpp ****                 T(x)
 14671              		.loc 3 473 0
 14672              		.cfi_startproc
 14673              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 14674              		.cfi_lsda 0x1b,.LLSDA14392
 14675 0000 55       		pushq	%rbp
 14676              		.cfi_def_cfa_offset 16
 14677              		.cfi_offset 6, -16
 14678 0001 4889E5   		movq	%rsp, %rbp
 14679              		.cfi_def_cfa_register 6
 14680 0004 53       		pushq	%rbx
 14681 0005 4883EC18 		subq	$24, %rsp
 14682              		.cfi_offset 3, -24
 14683 0009 48897DE8 		movq	%rdi, -24(%rbp)
 14684 000d 488975E0 		movq	%rsi, -32(%rbp)
 14685              	.LBB136:
 474:/usr/include/boost/exception/exception.hpp ****                 {
 14686              		.loc 3 474 0
 14687 0011 488B45E8 		movq	-24(%rbp), %rax
 14688 0015 4883C038 		addq	$56, %rax
 14689 0019 4889C7   		movq	%rax, %rdi
 14690 001c E8000000 		call	_ZN5boost16exception_detail10clone_baseC2Ev
GAS LISTING /tmp/ccvUPO8Q.s 			page 608


 14690      00
 14691 0021 488B45E8 		movq	-24(%rbp), %rax
 14692 0025 488B55E0 		movq	-32(%rbp), %rdx
 14693 0029 4889D6   		movq	%rdx, %rsi
 14694 002c 4889C7   		movq	%rax, %rdi
 14695              	.LEHB92:
 14696 002f E8000000 		call	_ZN5boost16exception_detail19error_info_injectorINS_17bad_function_callEEC2ERKS3_
 14696      00
 14697              	.LEHE92:
 474:/usr/include/boost/exception/exception.hpp ****                 {
 14698              		.loc 3 474 0 is_stmt 0 discriminator 5
 14699 0034 488D1500 		leaq	24+_ZTVN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_call
 14699      000000
 14700 003b 488B45E8 		movq	-24(%rbp), %rax
 14701 003f 488910   		movq	%rdx, (%rax)
 14702 0042 488D1500 		leaq	80+_ZTVN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_call
 14702      000000
 14703 0049 488B45E8 		movq	-24(%rbp), %rax
 14704 004d 48895010 		movq	%rdx, 16(%rax)
 14705 0051 488B45E8 		movq	-24(%rbp), %rax
 14706 0055 488D5038 		leaq	56(%rax), %rdx
 14707 0059 488D0500 		leaq	136+_ZTVN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_cal
 14707      000000
 14708 0060 488902   		movq	%rax, (%rdx)
 476:/usr/include/boost/exception/exception.hpp ****                 }
 14709              		.loc 3 476 0 is_stmt 1 discriminator 5
 14710 0063 488B45E0 		movq	-32(%rbp), %rax
 14711 0067 488D5010 		leaq	16(%rax), %rdx
 14712 006b 488B45E8 		movq	-24(%rbp), %rax
 14713 006f 4883C010 		addq	$16, %rax
 14714 0073 4889D6   		movq	%rdx, %rsi
 14715 0076 4889C7   		movq	%rax, %rdi
 14716              	.LEHB93:
 14717 0079 E8000000 		call	_ZN5boost16exception_detail20copy_boost_exceptionEPNS_9exceptionEPKS1_
 14717      00
 14718              	.LEHE93:
 14719              	.LBE136:
 477:/usr/include/boost/exception/exception.hpp **** 
 14720              		.loc 3 477 0
 14721 007e EB2F     		jmp	.L727
 14722              	.L725:
 14723 0080 4889C3   		movq	%rax, %rbx
 14724              	.LBB137:
 474:/usr/include/boost/exception/exception.hpp ****                 {
 14725              		.loc 3 474 0
 14726 0083 488B45E8 		movq	-24(%rbp), %rax
 14727 0087 4889C7   		movq	%rax, %rdi
 14728 008a E8000000 		call	_ZN5boost16exception_detail19error_info_injectorINS_17bad_function_callEED2Ev
 14728      00
 14729 008f EB03     		jmp	.L726
 14730              	.L724:
 14731 0091 4889C3   		movq	%rax, %rbx
 14732              	.L726:
 474:/usr/include/boost/exception/exception.hpp ****                 {
 14733              		.loc 3 474 0 is_stmt 0 discriminator 6
 14734 0094 488B45E8 		movq	-24(%rbp), %rax
 14735 0098 4883C038 		addq	$56, %rax
GAS LISTING /tmp/ccvUPO8Q.s 			page 609


 14736 009c 4889C7   		movq	%rax, %rdi
 14737 009f E8000000 		call	_ZN5boost16exception_detail10clone_baseD2Ev
 14737      00
 14738 00a4 4889D8   		movq	%rbx, %rax
 14739 00a7 4889C7   		movq	%rax, %rdi
 14740              	.LEHB94:
 14741 00aa E8000000 		call	_Unwind_Resume@PLT
 14741      00
 14742              	.LEHE94:
 14743              	.L727:
 14744              	.LBE137:
 477:/usr/include/boost/exception/exception.hpp **** 
 14745              		.loc 3 477 0 is_stmt 1
 14746 00af 4883C418 		addq	$24, %rsp
 14747 00b3 5B       		popq	%rbx
 14748 00b4 5D       		popq	%rbp
 14749              		.cfi_def_cfa 7, 8
 14750 00b5 C3       		ret
 14751              		.cfi_endproc
 14752              	.LFE14392:
 14753              		.section	.gcc_except_table
 14754              	.LLSDA14392:
 14755 0220 FF       		.byte	0xff
 14756 0221 FF       		.byte	0xff
 14757 0222 01       		.byte	0x1
 14758 0223 0F       		.uleb128 .LLSDACSE14392-.LLSDACSB14392
 14759              	.LLSDACSB14392:
 14760 0224 2F       		.uleb128 .LEHB92-.LFB14392
 14761 0225 05       		.uleb128 .LEHE92-.LEHB92
 14762 0226 9101     		.uleb128 .L724-.LFB14392
 14763 0228 00       		.uleb128 0
 14764 0229 79       		.uleb128 .LEHB93-.LFB14392
 14765 022a 05       		.uleb128 .LEHE93-.LEHB93
 14766 022b 8001     		.uleb128 .L725-.LFB14392
 14767 022d 00       		.uleb128 0
 14768 022e AA01     		.uleb128 .LEHB94-.LFB14392
 14769 0230 05       		.uleb128 .LEHE94-.LEHB94
 14770 0231 00       		.uleb128 0
 14771 0232 00       		.uleb128 0
 14772              	.LLSDACSE14392:
 14773              		.section	.text._ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function
 14775              		.section	.text._ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_St5dequeIS4_SaIS
 14776              		.weak	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_St5dequeIS4_SaIS4_EEESt10
 14778              	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_St5dequeIS4_SaIS4_EEESt10_Select
 14779              	.LFB14394:
 708:/usr/include/c++/6/bits/stl_tree.h ****       { return *static_cast<_Const_Link_type>(__x)->_M_valptr(); }
 14780              		.loc 27 708 0
 14781              		.cfi_startproc
 14782 0000 55       		pushq	%rbp
 14783              		.cfi_def_cfa_offset 16
 14784              		.cfi_offset 6, -16
 14785 0001 4889E5   		movq	%rsp, %rbp
 14786              		.cfi_def_cfa_register 6
 14787 0004 4883EC10 		subq	$16, %rsp
 14788 0008 48897DF8 		movq	%rdi, -8(%rbp)
 709:/usr/include/c++/6/bits/stl_tree.h **** 
 14789              		.loc 27 709 0
GAS LISTING /tmp/ccvUPO8Q.s 			page 610


 14790 000c 488B45F8 		movq	-8(%rbp), %rax
 14791 0010 4889C7   		movq	%rax, %rdi
 14792 0013 E8000000 		call	_ZNKSt13_Rb_tree_nodeISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt5dequeIS5_SaIS5_EEEE
 14792      00
 14793 0018 C9       		leave
 14794              		.cfi_def_cfa 7, 8
 14795 0019 C3       		ret
 14796              		.cfi_endproc
 14797              	.LFE14394:
 14799              		.section	.text._ZNKSt10_Select1stISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt5dequeIS5_SaI
 14800              		.align 2
 14801              		.weak	_ZNKSt10_Select1stISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt5dequeIS5_SaIS5_EEEEcl
 14803              	_ZNKSt10_Select1stISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt5dequeIS5_SaIS5_EEEEclERKSA_:
 14804              	.LFB14395:
 890:/usr/include/c++/6/bits/stl_function.h ****       { return __x.first; }
 14805              		.loc 45 890 0
 14806              		.cfi_startproc
 14807 0000 55       		pushq	%rbp
 14808              		.cfi_def_cfa_offset 16
 14809              		.cfi_offset 6, -16
 14810 0001 4889E5   		movq	%rsp, %rbp
 14811              		.cfi_def_cfa_register 6
 14812 0004 48897DF8 		movq	%rdi, -8(%rbp)
 14813 0008 488975F0 		movq	%rsi, -16(%rbp)
 14814              		.loc 45 891 0
 14815 000c 488B45F0 		movq	-16(%rbp), %rax
 14816 0010 5D       		popq	%rbp
 14817              		.cfi_def_cfa 7, 8
 14818 0011 C3       		ret
 14819              		.cfi_endproc
 14820              	.LFE14395:
 14822              		.section	.text._ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_St5dequeIS4_SaIS
 14823              		.weak	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_St5dequeIS4_SaIS4_EEESt10
 14825              	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_St5dequeIS4_SaIS4_EEESt10_Select
 14826              	.LFB14419:
 684:/usr/include/c++/6/bits/stl_tree.h ****       { return *__x->_M_valptr(); }
 14827              		.loc 27 684 0
 14828              		.cfi_startproc
 14829 0000 55       		pushq	%rbp
 14830              		.cfi_def_cfa_offset 16
 14831              		.cfi_offset 6, -16
 14832 0001 4889E5   		movq	%rsp, %rbp
 14833              		.cfi_def_cfa_register 6
 14834 0004 4883EC10 		subq	$16, %rsp
 14835 0008 48897DF8 		movq	%rdi, -8(%rbp)
 685:/usr/include/c++/6/bits/stl_tree.h **** 
 14836              		.loc 27 685 0
 14837 000c 488B45F8 		movq	-8(%rbp), %rax
 14838 0010 4889C7   		movq	%rax, %rdi
 14839 0013 E8000000 		call	_ZNKSt13_Rb_tree_nodeISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt5dequeIS5_SaIS5_EEEE
 14839      00
 14840 0018 C9       		leave
 14841              		.cfi_def_cfa 7, 8
 14842 0019 C3       		ret
 14843              		.cfi_endproc
 14844              	.LFE14419:
 14846              		.section	.text._ZN9__gnu_cxx13new_allocatorIlED2Ev,"axG",@progbits,_ZN9__gnu_cxx13new_allocatorIlE
GAS LISTING /tmp/ccvUPO8Q.s 			page 611


 14847              		.align 2
 14848              		.weak	_ZN9__gnu_cxx13new_allocatorIlED2Ev
 14850              	_ZN9__gnu_cxx13new_allocatorIlED2Ev:
 14851              	.LFB14432:
 14852              		.loc 43 86 0
 14853              		.cfi_startproc
 14854 0000 55       		pushq	%rbp
 14855              		.cfi_def_cfa_offset 16
 14856              		.cfi_offset 6, -16
 14857 0001 4889E5   		movq	%rsp, %rbp
 14858              		.cfi_def_cfa_register 6
 14859 0004 48897DF8 		movq	%rdi, -8(%rbp)
 14860              		.loc 43 86 0
 14861 0008 90       		nop
 14862 0009 5D       		popq	%rbp
 14863              		.cfi_def_cfa 7, 8
 14864 000a C3       		ret
 14865              		.cfi_endproc
 14866              	.LFE14432:
 14868              		.weak	_ZN9__gnu_cxx13new_allocatorIlED1Ev
 14869              		.set	_ZN9__gnu_cxx13new_allocatorIlED1Ev,_ZN9__gnu_cxx13new_allocatorIlED2Ev
 14870              		.section	.text._ZNSt16allocator_traitsISaIlEE10deallocateERS0_Plm,"axG",@progbits,_ZNSt16allocator
 14871              		.weak	_ZNSt16allocator_traitsISaIlEE10deallocateERS0_Plm
 14873              	_ZNSt16allocator_traitsISaIlEE10deallocateERS0_Plm:
 14874              	.LFB14434:
 461:/usr/include/c++/6/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 14875              		.loc 42 461 0
 14876              		.cfi_startproc
 14877 0000 55       		pushq	%rbp
 14878              		.cfi_def_cfa_offset 16
 14879              		.cfi_offset 6, -16
 14880 0001 4889E5   		movq	%rsp, %rbp
 14881              		.cfi_def_cfa_register 6
 14882 0004 4883EC20 		subq	$32, %rsp
 14883 0008 48897DF8 		movq	%rdi, -8(%rbp)
 14884 000c 488975F0 		movq	%rsi, -16(%rbp)
 14885 0010 488955E8 		movq	%rdx, -24(%rbp)
 462:/usr/include/c++/6/bits/alloc_traits.h **** 
 14886              		.loc 42 462 0
 14887 0014 488B55E8 		movq	-24(%rbp), %rdx
 14888 0018 488B4DF0 		movq	-16(%rbp), %rcx
 14889 001c 488B45F8 		movq	-8(%rbp), %rax
 14890 0020 4889CE   		movq	%rcx, %rsi
 14891 0023 4889C7   		movq	%rax, %rdi
 14892 0026 E8000000 		call	_ZN9__gnu_cxx13new_allocatorIlE10deallocateEPlm
 14892      00
 14893 002b 90       		nop
 14894 002c C9       		leave
 14895              		.cfi_def_cfa 7, 8
 14896 002d C3       		ret
 14897              		.cfi_endproc
 14898              	.LFE14434:
 14900              		.section	.text._ZNSt12_Destroy_auxILb1EE9__destroyIPlEEvT_S3_,"axG",@progbits,_ZNSt12_Destroy_auxI
 14901              		.weak	_ZNSt12_Destroy_auxILb1EE9__destroyIPlEEvT_S3_
 14903              	_ZNSt12_Destroy_auxILb1EE9__destroyIPlEEvT_S3_:
 14904              	.LFB14435:
 112:/usr/include/c++/6/bits/stl_construct.h ****     };
GAS LISTING /tmp/ccvUPO8Q.s 			page 612


 14905              		.loc 35 112 0
 14906              		.cfi_startproc
 14907 0000 55       		pushq	%rbp
 14908              		.cfi_def_cfa_offset 16
 14909              		.cfi_offset 6, -16
 14910 0001 4889E5   		movq	%rsp, %rbp
 14911              		.cfi_def_cfa_register 6
 14912 0004 48897DF8 		movq	%rdi, -8(%rbp)
 14913 0008 488975F0 		movq	%rsi, -16(%rbp)
 112:/usr/include/c++/6/bits/stl_construct.h ****     };
 14914              		.loc 35 112 0
 14915 000c 90       		nop
 14916 000d 5D       		popq	%rbp
 14917              		.cfi_def_cfa 7, 8
 14918 000e C3       		ret
 14919              		.cfi_endproc
 14920              	.LFE14435:
 14922              		.section	.text._ZN5boost16exception_detail11set_info_rvINS_10error_infoINS_15throw_function_EPKcEE
 14923              		.weak	_ZN5boost16exception_detail11set_info_rvINS_10error_infoINS_15throw_function_EPKcEEE3setINS0
 14925              	_ZN5boost16exception_detail11set_info_rvINS_10error_infoINS_15throw_function_EPKcEEE3setINS0_10clon
 14926              	.LFB14570:
 236:/usr/include/boost/exception/info.hpp **** 				{
 14927              		.loc 36 236 0
 14928              		.cfi_startproc
 14929 0000 55       		pushq	%rbp
 14930              		.cfi_def_cfa_offset 16
 14931              		.cfi_offset 6, -16
 14932 0001 4889E5   		movq	%rsp, %rbp
 14933              		.cfi_def_cfa_register 6
 14934 0004 48897DF8 		movq	%rdi, -8(%rbp)
 14935 0008 488975F0 		movq	%rsi, -16(%rbp)
 238:/usr/include/boost/exception/info.hpp **** 				return x;
 14936              		.loc 36 238 0
 14937 000c 488B45F0 		movq	-16(%rbp), %rax
 14938 0010 488B10   		movq	(%rax), %rdx
 14939 0013 488B45F8 		movq	-8(%rbp), %rax
 14940 0017 48895010 		movq	%rdx, 16(%rax)
 239:/usr/include/boost/exception/info.hpp **** 				}
 14941              		.loc 36 239 0
 14942 001b 488B45F8 		movq	-8(%rbp), %rax
 240:/usr/include/boost/exception/info.hpp **** 			};
 14943              		.loc 36 240 0
 14944 001f 5D       		popq	%rbp
 14945              		.cfi_def_cfa 7, 8
 14946 0020 C3       		ret
 14947              		.cfi_endproc
 14948              	.LFE14570:
 14950              		.section	.text._ZN5boost16exception_detail11set_info_rvINS_10error_infoINS_11throw_file_EPKcEEE3se
 14951              		.weak	_ZN5boost16exception_detail11set_info_rvINS_10error_infoINS_11throw_file_EPKcEEE3setINS0_10c
 14953              	_ZN5boost16exception_detail11set_info_rvINS_10error_infoINS_11throw_file_EPKcEEE3setINS0_10clone_im
 14954              	.LFB14571:
 251:/usr/include/boost/exception/info.hpp **** 				{
 14955              		.loc 36 251 0
 14956              		.cfi_startproc
 14957 0000 55       		pushq	%rbp
 14958              		.cfi_def_cfa_offset 16
 14959              		.cfi_offset 6, -16
GAS LISTING /tmp/ccvUPO8Q.s 			page 613


 14960 0001 4889E5   		movq	%rsp, %rbp
 14961              		.cfi_def_cfa_register 6
 14962 0004 48897DF8 		movq	%rdi, -8(%rbp)
 14963 0008 488975F0 		movq	%rsi, -16(%rbp)
 253:/usr/include/boost/exception/info.hpp **** 				return x;
 14964              		.loc 36 253 0
 14965 000c 488B45F0 		movq	-16(%rbp), %rax
 14966 0010 488B10   		movq	(%rax), %rdx
 14967 0013 488B45F8 		movq	-8(%rbp), %rax
 14968 0017 48895018 		movq	%rdx, 24(%rax)
 254:/usr/include/boost/exception/info.hpp **** 				}
 14969              		.loc 36 254 0
 14970 001b 488B45F8 		movq	-8(%rbp), %rax
 255:/usr/include/boost/exception/info.hpp **** 			};
 14971              		.loc 36 255 0
 14972 001f 5D       		popq	%rbp
 14973              		.cfi_def_cfa 7, 8
 14974 0020 C3       		ret
 14975              		.cfi_endproc
 14976              	.LFE14571:
 14978              		.section	.text._ZN5boost16exception_detail11set_info_rvINS_10error_infoINS_11throw_line_EiEEE3setI
 14979              		.weak	_ZN5boost16exception_detail11set_info_rvINS_10error_infoINS_11throw_line_EiEEE3setINS0_10clo
 14981              	_ZN5boost16exception_detail11set_info_rvINS_10error_infoINS_11throw_line_EiEEE3setINS0_10clone_impl
 14982              	.LFB14572:
 266:/usr/include/boost/exception/info.hpp **** 				{
 14983              		.loc 36 266 0
 14984              		.cfi_startproc
 14985 0000 55       		pushq	%rbp
 14986              		.cfi_def_cfa_offset 16
 14987              		.cfi_offset 6, -16
 14988 0001 4889E5   		movq	%rsp, %rbp
 14989              		.cfi_def_cfa_register 6
 14990 0004 48897DF8 		movq	%rdi, -8(%rbp)
 14991 0008 488975F0 		movq	%rsi, -16(%rbp)
 268:/usr/include/boost/exception/info.hpp **** 				return x;
 14992              		.loc 36 268 0
 14993 000c 488B45F0 		movq	-16(%rbp), %rax
 14994 0010 8B10     		movl	(%rax), %edx
 14995 0012 488B45F8 		movq	-8(%rbp), %rax
 14996 0016 895020   		movl	%edx, 32(%rax)
 269:/usr/include/boost/exception/info.hpp **** 				}
 14997              		.loc 36 269 0
 14998 0019 488B45F8 		movq	-8(%rbp), %rax
 270:/usr/include/boost/exception/info.hpp **** 			};
 14999              		.loc 36 270 0
 15000 001d 5D       		popq	%rbp
 15001              		.cfi_def_cfa 7, 8
 15002 001e C3       		ret
 15003              		.cfi_endproc
 15004              	.LFE14572:
 15006              		.section	.text._ZN5boost6detail12shared_countC2INS_16exception_detail10clone_implINS3_10bad_alloc_
 15007              		.align 2
 15008              		.weak	_ZN5boost6detail12shared_countC2INS_16exception_detail10clone_implINS3_10bad_alloc_EEEEEPT_
 15010              	_ZN5boost6detail12shared_countC2INS_16exception_detail10clone_implINS3_10bad_alloc_EEEEEPT_:
 15011              	.LFB14574:
 128:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #if defined(BOOST_SP_ENABLE_DEBUG_HOOKS)
 15012              		.loc 6 128 0
GAS LISTING /tmp/ccvUPO8Q.s 			page 614


 15013              		.cfi_startproc
 15014              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 15015              		.cfi_lsda 0x1b,.LLSDA14574
 15016 0000 55       		pushq	%rbp
 15017              		.cfi_def_cfa_offset 16
 15018              		.cfi_offset 6, -16
 15019 0001 4889E5   		movq	%rsp, %rbp
 15020              		.cfi_def_cfa_register 6
 15021 0004 53       		pushq	%rbx
 15022 0005 4883EC18 		subq	$24, %rsp
 15023              		.cfi_offset 3, -24
 15024 0009 48897DE8 		movq	%rdi, -24(%rbp)
 15025 000d 488975E0 		movq	%rsi, -32(%rbp)
 15026              	.LBB138:
 128:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #if defined(BOOST_SP_ENABLE_DEBUG_HOOKS)
 15027              		.loc 6 128 0
 15028 0011 488B45E8 		movq	-24(%rbp), %rax
 15029 0015 48C70000 		movq	$0, (%rax)
 15029      000000
 137:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         }
 15030              		.loc 6 137 0
 15031 001c BF180000 		movl	$24, %edi
 15031      00
 15032              	.LEHB95:
 15033 0021 E8000000 		call	_Znwm@PLT
 15033      00
 15034              	.LEHE95:
 15035 0026 4889C3   		movq	%rax, %rbx
 15036 0029 488B45E0 		movq	-32(%rbp), %rax
 15037 002d 4889C6   		movq	%rax, %rsi
 15038 0030 4889DF   		movq	%rbx, %rdi
 15039 0033 E8000000 		call	_ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEEC1E
 15039      00
 15040 0038 488B45E8 		movq	-24(%rbp), %rax
 15041 003c 488918   		movq	%rbx, (%rax)
 15042              	.LBE138:
 156:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 15043              		.loc 6 156 0
 15044 003f EB2C     		jmp	.L748
 15045              	.L746:
 15046              	.LBB139:
 139:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         {
 15047              		.loc 6 139 0
 15048 0041 4889C7   		movq	%rax, %rdi
 15049 0044 E8000000 		call	__cxa_begin_catch@PLT
 15049      00
 141:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****             throw;
 15050              		.loc 6 141 0
 15051 0049 488B45E0 		movq	-32(%rbp), %rax
 15052 004d 4889C7   		movq	%rax, %rdi
 15053 0050 E8000000 		call	_ZN5boost14checked_deleteINS_16exception_detail10clone_implINS1_10bad_alloc_EEEEEvPT_
 15053      00
 15054              	.LEHB96:
 142:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         }
 15055              		.loc 6 142 0
 15056 0055 E8000000 		call	__cxa_rethrow@PLT
 15056      00
GAS LISTING /tmp/ccvUPO8Q.s 			page 615


 15057              	.LEHE96:
 15058              	.L747:
 15059 005a 4889C3   		movq	%rax, %rbx
 139:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         {
 15060              		.loc 6 139 0
 15061 005d E8000000 		call	__cxa_end_catch@PLT
 15061      00
 15062 0062 4889D8   		movq	%rbx, %rax
 15063 0065 4889C7   		movq	%rax, %rdi
 15064              	.LEHB97:
 15065 0068 E8000000 		call	_Unwind_Resume@PLT
 15065      00
 15066              	.LEHE97:
 15067              	.L748:
 15068              	.LBE139:
 156:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 15069              		.loc 6 156 0
 15070 006d 4883C418 		addq	$24, %rsp
 15071 0071 5B       		popq	%rbx
 15072 0072 5D       		popq	%rbp
 15073              		.cfi_def_cfa 7, 8
 15074 0073 C3       		ret
 15075              		.cfi_endproc
 15076              	.LFE14574:
 15077              		.section	.gcc_except_table
 15078 0233 00       		.align 4
 15079              	.LLSDA14574:
 15080 0234 FF       		.byte	0xff
 15081 0235 9B       		.byte	0x9b
 15082 0236 15       		.uleb128 .LLSDATT14574-.LLSDATTD14574
 15083              	.LLSDATTD14574:
 15084 0237 01       		.byte	0x1
 15085 0238 0C       		.uleb128 .LLSDACSE14574-.LLSDACSB14574
 15086              	.LLSDACSB14574:
 15087 0239 21       		.uleb128 .LEHB95-.LFB14574
 15088 023a 05       		.uleb128 .LEHE95-.LEHB95
 15089 023b 41       		.uleb128 .L746-.LFB14574
 15090 023c 01       		.uleb128 0x1
 15091 023d 55       		.uleb128 .LEHB96-.LFB14574
 15092 023e 05       		.uleb128 .LEHE96-.LEHB96
 15093 023f 5A       		.uleb128 .L747-.LFB14574
 15094 0240 00       		.uleb128 0
 15095 0241 68       		.uleb128 .LEHB97-.LFB14574
 15096 0242 05       		.uleb128 .LEHE97-.LEHB97
 15097 0243 00       		.uleb128 0
 15098 0244 00       		.uleb128 0
 15099              	.LLSDACSE14574:
 15100 0245 01       		.byte	0x1
 15101 0246 00       		.byte	0
 15102 0247 00       		.align 4
 15103 0248 00000000 		.long	0
 15104              	
 15105              	.LLSDATT14574:
 15106              		.section	.text._ZN5boost6detail12shared_countC2INS_16exception_detail10clone_implINS3_10bad_alloc_
 15108              		.weak	_ZN5boost6detail12shared_countC1INS_16exception_detail10clone_implINS3_10bad_alloc_EEEEEPT_
 15109              		.set	_ZN5boost6detail12shared_countC1INS_16exception_detail10clone_implINS3_10bad_alloc_EEEEEPT_,_
 15110              		.section	.text._ZN5boost16exception_detail11set_info_rvINS_10error_infoINS_15throw_function_EPKcEE
GAS LISTING /tmp/ccvUPO8Q.s 			page 616


 15111              		.weak	_ZN5boost16exception_detail11set_info_rvINS_10error_infoINS_15throw_function_EPKcEEE3setINS0
 15113              	_ZN5boost16exception_detail11set_info_rvINS_10error_infoINS_15throw_function_EPKcEEE3setINS0_10clon
 15114              	.LFB14576:
 236:/usr/include/boost/exception/info.hpp **** 				{
 15115              		.loc 36 236 0
 15116              		.cfi_startproc
 15117 0000 55       		pushq	%rbp
 15118              		.cfi_def_cfa_offset 16
 15119              		.cfi_offset 6, -16
 15120 0001 4889E5   		movq	%rsp, %rbp
 15121              		.cfi_def_cfa_register 6
 15122 0004 48897DF8 		movq	%rdi, -8(%rbp)
 15123 0008 488975F0 		movq	%rsi, -16(%rbp)
 238:/usr/include/boost/exception/info.hpp **** 				return x;
 15124              		.loc 36 238 0
 15125 000c 488B45F0 		movq	-16(%rbp), %rax
 15126 0010 488B10   		movq	(%rax), %rdx
 15127 0013 488B45F8 		movq	-8(%rbp), %rax
 15128 0017 48895010 		movq	%rdx, 16(%rax)
 239:/usr/include/boost/exception/info.hpp **** 				}
 15129              		.loc 36 239 0
 15130 001b 488B45F8 		movq	-8(%rbp), %rax
 240:/usr/include/boost/exception/info.hpp **** 			};
 15131              		.loc 36 240 0
 15132 001f 5D       		popq	%rbp
 15133              		.cfi_def_cfa 7, 8
 15134 0020 C3       		ret
 15135              		.cfi_endproc
 15136              	.LFE14576:
 15138              		.section	.text._ZN5boost16exception_detail11set_info_rvINS_10error_infoINS_11throw_file_EPKcEEE3se
 15139              		.weak	_ZN5boost16exception_detail11set_info_rvINS_10error_infoINS_11throw_file_EPKcEEE3setINS0_10c
 15141              	_ZN5boost16exception_detail11set_info_rvINS_10error_infoINS_11throw_file_EPKcEEE3setINS0_10clone_im
 15142              	.LFB14577:
 251:/usr/include/boost/exception/info.hpp **** 				{
 15143              		.loc 36 251 0
 15144              		.cfi_startproc
 15145 0000 55       		pushq	%rbp
 15146              		.cfi_def_cfa_offset 16
 15147              		.cfi_offset 6, -16
 15148 0001 4889E5   		movq	%rsp, %rbp
 15149              		.cfi_def_cfa_register 6
 15150 0004 48897DF8 		movq	%rdi, -8(%rbp)
 15151 0008 488975F0 		movq	%rsi, -16(%rbp)
 253:/usr/include/boost/exception/info.hpp **** 				return x;
 15152              		.loc 36 253 0
 15153 000c 488B45F0 		movq	-16(%rbp), %rax
 15154 0010 488B10   		movq	(%rax), %rdx
 15155 0013 488B45F8 		movq	-8(%rbp), %rax
 15156 0017 48895018 		movq	%rdx, 24(%rax)
 254:/usr/include/boost/exception/info.hpp **** 				}
 15157              		.loc 36 254 0
 15158 001b 488B45F8 		movq	-8(%rbp), %rax
 255:/usr/include/boost/exception/info.hpp **** 			};
 15159              		.loc 36 255 0
 15160 001f 5D       		popq	%rbp
 15161              		.cfi_def_cfa 7, 8
 15162 0020 C3       		ret
GAS LISTING /tmp/ccvUPO8Q.s 			page 617


 15163              		.cfi_endproc
 15164              	.LFE14577:
 15166              		.section	.text._ZN5boost16exception_detail11set_info_rvINS_10error_infoINS_11throw_line_EiEEE3setI
 15167              		.weak	_ZN5boost16exception_detail11set_info_rvINS_10error_infoINS_11throw_line_EiEEE3setINS0_10clo
 15169              	_ZN5boost16exception_detail11set_info_rvINS_10error_infoINS_11throw_line_EiEEE3setINS0_10clone_impl
 15170              	.LFB14578:
 266:/usr/include/boost/exception/info.hpp **** 				{
 15171              		.loc 36 266 0
 15172              		.cfi_startproc
 15173 0000 55       		pushq	%rbp
 15174              		.cfi_def_cfa_offset 16
 15175              		.cfi_offset 6, -16
 15176 0001 4889E5   		movq	%rsp, %rbp
 15177              		.cfi_def_cfa_register 6
 15178 0004 48897DF8 		movq	%rdi, -8(%rbp)
 15179 0008 488975F0 		movq	%rsi, -16(%rbp)
 268:/usr/include/boost/exception/info.hpp **** 				return x;
 15180              		.loc 36 268 0
 15181 000c 488B45F0 		movq	-16(%rbp), %rax
 15182 0010 8B10     		movl	(%rax), %edx
 15183 0012 488B45F8 		movq	-8(%rbp), %rax
 15184 0016 895020   		movl	%edx, 32(%rax)
 269:/usr/include/boost/exception/info.hpp **** 				}
 15185              		.loc 36 269 0
 15186 0019 488B45F8 		movq	-8(%rbp), %rax
 270:/usr/include/boost/exception/info.hpp **** 			};
 15187              		.loc 36 270 0
 15188 001d 5D       		popq	%rbp
 15189              		.cfi_def_cfa 7, 8
 15190 001e C3       		ret
 15191              		.cfi_endproc
 15192              	.LFE14578:
 15194              		.section	.text._ZN5boost6detail12shared_countC2INS_16exception_detail10clone_implINS3_14bad_except
 15195              		.align 2
 15196              		.weak	_ZN5boost6detail12shared_countC2INS_16exception_detail10clone_implINS3_14bad_exception_EEEEE
 15198              	_ZN5boost6detail12shared_countC2INS_16exception_detail10clone_implINS3_14bad_exception_EEEEEPT_:
 15199              	.LFB14580:
 128:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #if defined(BOOST_SP_ENABLE_DEBUG_HOOKS)
 15200              		.loc 6 128 0
 15201              		.cfi_startproc
 15202              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 15203              		.cfi_lsda 0x1b,.LLSDA14580
 15204 0000 55       		pushq	%rbp
 15205              		.cfi_def_cfa_offset 16
 15206              		.cfi_offset 6, -16
 15207 0001 4889E5   		movq	%rsp, %rbp
 15208              		.cfi_def_cfa_register 6
 15209 0004 53       		pushq	%rbx
 15210 0005 4883EC18 		subq	$24, %rsp
 15211              		.cfi_offset 3, -24
 15212 0009 48897DE8 		movq	%rdi, -24(%rbp)
 15213 000d 488975E0 		movq	%rsi, -32(%rbp)
 15214              	.LBB140:
 128:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #if defined(BOOST_SP_ENABLE_DEBUG_HOOKS)
 15215              		.loc 6 128 0
 15216 0011 488B45E8 		movq	-24(%rbp), %rax
 15217 0015 48C70000 		movq	$0, (%rax)
GAS LISTING /tmp/ccvUPO8Q.s 			page 618


 15217      000000
 137:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         }
 15218              		.loc 6 137 0
 15219 001c BF180000 		movl	$24, %edi
 15219      00
 15220              	.LEHB98:
 15221 0021 E8000000 		call	_Znwm@PLT
 15221      00
 15222              	.LEHE98:
 15223 0026 4889C3   		movq	%rax, %rbx
 15224 0029 488B45E0 		movq	-32(%rbp), %rax
 15225 002d 4889C6   		movq	%rax, %rsi
 15226 0030 4889DF   		movq	%rbx, %rdi
 15227 0033 E8000000 		call	_ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_14bad_exception_EEE
 15227      00
 15228 0038 488B45E8 		movq	-24(%rbp), %rax
 15229 003c 488918   		movq	%rbx, (%rax)
 15230              	.LBE140:
 156:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 15231              		.loc 6 156 0
 15232 003f EB2C     		jmp	.L760
 15233              	.L758:
 15234              	.LBB141:
 139:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         {
 15235              		.loc 6 139 0
 15236 0041 4889C7   		movq	%rax, %rdi
 15237 0044 E8000000 		call	__cxa_begin_catch@PLT
 15237      00
 141:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****             throw;
 15238              		.loc 6 141 0
 15239 0049 488B45E0 		movq	-32(%rbp), %rax
 15240 004d 4889C7   		movq	%rax, %rdi
 15241 0050 E8000000 		call	_ZN5boost14checked_deleteINS_16exception_detail10clone_implINS1_14bad_exception_EEEEEvPT_
 15241      00
 15242              	.LEHB99:
 142:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         }
 15243              		.loc 6 142 0
 15244 0055 E8000000 		call	__cxa_rethrow@PLT
 15244      00
 15245              	.LEHE99:
 15246              	.L759:
 15247 005a 4889C3   		movq	%rax, %rbx
 139:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         {
 15248              		.loc 6 139 0
 15249 005d E8000000 		call	__cxa_end_catch@PLT
 15249      00
 15250 0062 4889D8   		movq	%rbx, %rax
 15251 0065 4889C7   		movq	%rax, %rdi
 15252              	.LEHB100:
 15253 0068 E8000000 		call	_Unwind_Resume@PLT
 15253      00
 15254              	.LEHE100:
 15255              	.L760:
 15256              	.LBE141:
 156:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 15257              		.loc 6 156 0
 15258 006d 4883C418 		addq	$24, %rsp
GAS LISTING /tmp/ccvUPO8Q.s 			page 619


 15259 0071 5B       		popq	%rbx
 15260 0072 5D       		popq	%rbp
 15261              		.cfi_def_cfa 7, 8
 15262 0073 C3       		ret
 15263              		.cfi_endproc
 15264              	.LFE14580:
 15265              		.section	.gcc_except_table
 15266              		.align 4
 15267              	.LLSDA14580:
 15268 024c FF       		.byte	0xff
 15269 024d 9B       		.byte	0x9b
 15270 024e 15       		.uleb128 .LLSDATT14580-.LLSDATTD14580
 15271              	.LLSDATTD14580:
 15272 024f 01       		.byte	0x1
 15273 0250 0C       		.uleb128 .LLSDACSE14580-.LLSDACSB14580
 15274              	.LLSDACSB14580:
 15275 0251 21       		.uleb128 .LEHB98-.LFB14580
 15276 0252 05       		.uleb128 .LEHE98-.LEHB98
 15277 0253 41       		.uleb128 .L758-.LFB14580
 15278 0254 01       		.uleb128 0x1
 15279 0255 55       		.uleb128 .LEHB99-.LFB14580
 15280 0256 05       		.uleb128 .LEHE99-.LEHB99
 15281 0257 5A       		.uleb128 .L759-.LFB14580
 15282 0258 00       		.uleb128 0
 15283 0259 68       		.uleb128 .LEHB100-.LFB14580
 15284 025a 05       		.uleb128 .LEHE100-.LEHB100
 15285 025b 00       		.uleb128 0
 15286 025c 00       		.uleb128 0
 15287              	.LLSDACSE14580:
 15288 025d 01       		.byte	0x1
 15289 025e 00       		.byte	0
 15290 025f 00       		.align 4
 15291 0260 00000000 		.long	0
 15292              	
 15293              	.LLSDATT14580:
 15294              		.section	.text._ZN5boost6detail12shared_countC2INS_16exception_detail10clone_implINS3_14bad_except
 15296              		.weak	_ZN5boost6detail12shared_countC1INS_16exception_detail10clone_implINS3_14bad_exception_EEEEE
 15297              		.set	_ZN5boost6detail12shared_countC1INS_16exception_detail10clone_implINS3_14bad_exception_EEEEEP
 15298              		.section	.text._ZN9__gnu_cxx13new_allocatorIiEC2ERKS1_,"axG",@progbits,_ZN9__gnu_cxx13new_allocato
 15299              		.align 2
 15300              		.weak	_ZN9__gnu_cxx13new_allocatorIiEC2ERKS1_
 15302              	_ZN9__gnu_cxx13new_allocatorIiEC2ERKS1_:
 15303              	.LFB14673:
  81:/usr/include/c++/6/ext/new_allocator.h **** 
 15304              		.loc 43 81 0
 15305              		.cfi_startproc
 15306 0000 55       		pushq	%rbp
 15307              		.cfi_def_cfa_offset 16
 15308              		.cfi_offset 6, -16
 15309 0001 4889E5   		movq	%rsp, %rbp
 15310              		.cfi_def_cfa_register 6
 15311 0004 48897DF8 		movq	%rdi, -8(%rbp)
 15312 0008 488975F0 		movq	%rsi, -16(%rbp)
  81:/usr/include/c++/6/ext/new_allocator.h **** 
 15313              		.loc 43 81 0
 15314 000c 90       		nop
 15315 000d 5D       		popq	%rbp
GAS LISTING /tmp/ccvUPO8Q.s 			page 620


 15316              		.cfi_def_cfa 7, 8
 15317 000e C3       		ret
 15318              		.cfi_endproc
 15319              	.LFE14673:
 15321              		.weak	_ZN9__gnu_cxx13new_allocatorIiEC1ERKS1_
 15322              		.set	_ZN9__gnu_cxx13new_allocatorIiEC1ERKS1_,_ZN9__gnu_cxx13new_allocatorIiEC2ERKS1_
 15323              		.section	.text._ZNSt12_Vector_baseIiSaIiEE11_M_allocateEm,"axG",@progbits,_ZNSt12_Vector_baseIiSaI
 15324              		.align 2
 15325              		.weak	_ZNSt12_Vector_baseIiSaIiEE11_M_allocateEm
 15327              	_ZNSt12_Vector_baseIiSaIiEE11_M_allocateEm:
 15328              	.LFB14675:
 167:/usr/include/c++/6/bits/stl_vector.h ****       {
 15329              		.loc 30 167 0
 15330              		.cfi_startproc
 15331 0000 55       		pushq	%rbp
 15332              		.cfi_def_cfa_offset 16
 15333              		.cfi_offset 6, -16
 15334 0001 4889E5   		movq	%rsp, %rbp
 15335              		.cfi_def_cfa_register 6
 15336 0004 4883EC10 		subq	$16, %rsp
 15337 0008 48897DF8 		movq	%rdi, -8(%rbp)
 15338 000c 488975F0 		movq	%rsi, -16(%rbp)
 170:/usr/include/c++/6/bits/stl_vector.h ****       }
 15339              		.loc 30 170 0
 15340 0010 48837DF0 		cmpq	$0, -16(%rbp)
 15340      00
 15341 0015 7415     		je	.L763
 170:/usr/include/c++/6/bits/stl_vector.h ****       }
 15342              		.loc 30 170 0 is_stmt 0 discriminator 1
 15343 0017 488B45F8 		movq	-8(%rbp), %rax
 15344 001b 488B55F0 		movq	-16(%rbp), %rdx
 15345 001f 4889D6   		movq	%rdx, %rsi
 15346 0022 4889C7   		movq	%rax, %rdi
 15347 0025 E8000000 		call	_ZNSt16allocator_traitsISaIiEE8allocateERS0_m
 15347      00
 15348 002a EB05     		jmp	.L765
 15349              	.L763:
 170:/usr/include/c++/6/bits/stl_vector.h ****       }
 15350              		.loc 30 170 0 discriminator 2
 15351 002c B8000000 		movl	$0, %eax
 15351      00
 15352              	.L765:
 171:/usr/include/c++/6/bits/stl_vector.h **** 
 15353              		.loc 30 171 0 is_stmt 1 discriminator 5
 15354 0031 C9       		leave
 15355              		.cfi_def_cfa 7, 8
 15356 0032 C3       		ret
 15357              		.cfi_endproc
 15358              	.LFE14675:
 15360              		.section	.text._ZNSt16allocator_traitsISaIiEE10deallocateERS0_Pim,"axG",@progbits,_ZNSt16allocator
 15361              		.weak	_ZNSt16allocator_traitsISaIiEE10deallocateERS0_Pim
 15363              	_ZNSt16allocator_traitsISaIiEE10deallocateERS0_Pim:
 15364              	.LFB14676:
 461:/usr/include/c++/6/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 15365              		.loc 42 461 0
 15366              		.cfi_startproc
 15367 0000 55       		pushq	%rbp
GAS LISTING /tmp/ccvUPO8Q.s 			page 621


 15368              		.cfi_def_cfa_offset 16
 15369              		.cfi_offset 6, -16
 15370 0001 4889E5   		movq	%rsp, %rbp
 15371              		.cfi_def_cfa_register 6
 15372 0004 4883EC20 		subq	$32, %rsp
 15373 0008 48897DF8 		movq	%rdi, -8(%rbp)
 15374 000c 488975F0 		movq	%rsi, -16(%rbp)
 15375 0010 488955E8 		movq	%rdx, -24(%rbp)
 462:/usr/include/c++/6/bits/alloc_traits.h **** 
 15376              		.loc 42 462 0
 15377 0014 488B55E8 		movq	-24(%rbp), %rdx
 15378 0018 488B4DF0 		movq	-16(%rbp), %rcx
 15379 001c 488B45F8 		movq	-8(%rbp), %rax
 15380 0020 4889CE   		movq	%rcx, %rsi
 15381 0023 4889C7   		movq	%rax, %rdi
 15382 0026 E8000000 		call	_ZN9__gnu_cxx13new_allocatorIiE10deallocateEPim
 15382      00
 15383 002b 90       		nop
 15384 002c C9       		leave
 15385              		.cfi_def_cfa 7, 8
 15386 002d C3       		ret
 15387              		.cfi_endproc
 15388              	.LFE14676:
 15390              		.section	.text._ZNSt20__uninitialized_copyILb1EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKi
 15391              		.weak	_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKiSt6vector
 15393              	_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiE
 15394              	.LFB14677:
  91:/usr/include/c++/6/bits/stl_uninitialized.h **** 		      _ForwardIterator __result)
 15395              		.loc 39 91 0
 15396              		.cfi_startproc
 15397 0000 55       		pushq	%rbp
 15398              		.cfi_def_cfa_offset 16
 15399              		.cfi_offset 6, -16
 15400 0001 4889E5   		movq	%rsp, %rbp
 15401              		.cfi_def_cfa_register 6
 15402 0004 4883EC20 		subq	$32, %rsp
 15403 0008 48897DF8 		movq	%rdi, -8(%rbp)
 15404 000c 488975F0 		movq	%rsi, -16(%rbp)
 15405 0010 488955E8 		movq	%rdx, -24(%rbp)
  93:/usr/include/c++/6/bits/stl_uninitialized.h ****     };
 15406              		.loc 39 93 0
 15407 0014 488B55E8 		movq	-24(%rbp), %rdx
 15408 0018 488B4DF0 		movq	-16(%rbp), %rcx
 15409 001c 488B45F8 		movq	-8(%rbp), %rax
 15410 0020 4889CE   		movq	%rcx, %rsi
 15411 0023 4889C7   		movq	%rax, %rdi
 15412 0026 E8000000 		call	_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEPiET0_T_SA_S9_
 15412      00
 15413 002b C9       		leave
 15414              		.cfi_def_cfa 7, 8
 15415 002c C3       		ret
 15416              		.cfi_endproc
 15417              	.LFE14677:
 15419              		.section	.text._ZNSaIN2gr5tag_tEEC2Ev,"axG",@progbits,_ZNSaIN2gr5tag_tEEC5Ev,comdat
 15420              		.align 2
 15421              		.weak	_ZNSaIN2gr5tag_tEEC2Ev
 15423              	_ZNSaIN2gr5tag_tEEC2Ev:
GAS LISTING /tmp/ccvUPO8Q.s 			page 622


 15424              	.LFB14683:
 131:/usr/include/c++/6/bits/allocator.h **** 
 15425              		.loc 38 131 0
 15426              		.cfi_startproc
 15427 0000 55       		pushq	%rbp
 15428              		.cfi_def_cfa_offset 16
 15429              		.cfi_offset 6, -16
 15430 0001 4889E5   		movq	%rsp, %rbp
 15431              		.cfi_def_cfa_register 6
 15432 0004 4883EC10 		subq	$16, %rsp
 15433 0008 48897DF8 		movq	%rdi, -8(%rbp)
 15434              	.LBB142:
 131:/usr/include/c++/6/bits/allocator.h **** 
 15435              		.loc 38 131 0
 15436 000c 488B45F8 		movq	-8(%rbp), %rax
 15437 0010 4889C7   		movq	%rax, %rdi
 15438 0013 E8000000 		call	_ZN9__gnu_cxx13new_allocatorIN2gr5tag_tEEC2Ev
 15438      00
 15439              	.LBE142:
 15440 0018 90       		nop
 15441 0019 C9       		leave
 15442              		.cfi_def_cfa 7, 8
 15443 001a C3       		ret
 15444              		.cfi_endproc
 15445              	.LFE14683:
 15447              		.weak	_ZNSaIN2gr5tag_tEEC1Ev
 15448              		.set	_ZNSaIN2gr5tag_tEEC1Ev,_ZNSaIN2gr5tag_tEEC2Ev
 15449              		.section	.text._ZN9__gnu_cxx13new_allocatorIN2gr5tag_tEED2Ev,"axG",@progbits,_ZN9__gnu_cxx13new_al
 15450              		.align 2
 15451              		.weak	_ZN9__gnu_cxx13new_allocatorIN2gr5tag_tEED2Ev
 15453              	_ZN9__gnu_cxx13new_allocatorIN2gr5tag_tEED2Ev:
 15454              	.LFB14686:
 15455              		.loc 43 86 0
 15456              		.cfi_startproc
 15457 0000 55       		pushq	%rbp
 15458              		.cfi_def_cfa_offset 16
 15459              		.cfi_offset 6, -16
 15460 0001 4889E5   		movq	%rsp, %rbp
 15461              		.cfi_def_cfa_register 6
 15462 0004 48897DF8 		movq	%rdi, -8(%rbp)
 15463              		.loc 43 86 0
 15464 0008 90       		nop
 15465 0009 5D       		popq	%rbp
 15466              		.cfi_def_cfa 7, 8
 15467 000a C3       		ret
 15468              		.cfi_endproc
 15469              	.LFE14686:
 15471              		.weak	_ZN9__gnu_cxx13new_allocatorIN2gr5tag_tEED1Ev
 15472              		.set	_ZN9__gnu_cxx13new_allocatorIN2gr5tag_tEED1Ev,_ZN9__gnu_cxx13new_allocatorIN2gr5tag_tEED2Ev
 15473              		.section	.text._ZNSt16allocator_traitsISaIN2gr5tag_tEEE10deallocateERS2_PS1_m,"axG",@progbits,_ZNS
 15474              		.weak	_ZNSt16allocator_traitsISaIN2gr5tag_tEEE10deallocateERS2_PS1_m
 15476              	_ZNSt16allocator_traitsISaIN2gr5tag_tEEE10deallocateERS2_PS1_m:
 15477              	.LFB14688:
 461:/usr/include/c++/6/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 15478              		.loc 42 461 0
 15479              		.cfi_startproc
 15480 0000 55       		pushq	%rbp
GAS LISTING /tmp/ccvUPO8Q.s 			page 623


 15481              		.cfi_def_cfa_offset 16
 15482              		.cfi_offset 6, -16
 15483 0001 4889E5   		movq	%rsp, %rbp
 15484              		.cfi_def_cfa_register 6
 15485 0004 4883EC20 		subq	$32, %rsp
 15486 0008 48897DF8 		movq	%rdi, -8(%rbp)
 15487 000c 488975F0 		movq	%rsi, -16(%rbp)
 15488 0010 488955E8 		movq	%rdx, -24(%rbp)
 462:/usr/include/c++/6/bits/alloc_traits.h **** 
 15489              		.loc 42 462 0
 15490 0014 488B55E8 		movq	-24(%rbp), %rdx
 15491 0018 488B4DF0 		movq	-16(%rbp), %rcx
 15492 001c 488B45F8 		movq	-8(%rbp), %rax
 15493 0020 4889CE   		movq	%rcx, %rsi
 15494 0023 4889C7   		movq	%rax, %rdi
 15495 0026 E8000000 		call	_ZN9__gnu_cxx13new_allocatorIN2gr5tag_tEE10deallocateEPS2_m
 15495      00
 15496 002b 90       		nop
 15497 002c C9       		leave
 15498              		.cfi_def_cfa 7, 8
 15499 002d C3       		ret
 15500              		.cfi_endproc
 15501              	.LFE14688:
 15503              		.section	.text._ZNSt12_Destroy_auxILb0EE9__destroyIPN2gr5tag_tEEEvT_S5_,"axG",@progbits,_ZNSt12_De
 15504              		.weak	_ZNSt12_Destroy_auxILb0EE9__destroyIPN2gr5tag_tEEEvT_S5_
 15506              	_ZNSt12_Destroy_auxILb0EE9__destroyIPN2gr5tag_tEEEvT_S5_:
 15507              	.LFB14689:
 100:/usr/include/c++/6/bits/stl_construct.h **** 	{
 15508              		.loc 35 100 0
 15509              		.cfi_startproc
 15510 0000 55       		pushq	%rbp
 15511              		.cfi_def_cfa_offset 16
 15512              		.cfi_offset 6, -16
 15513 0001 4889E5   		movq	%rsp, %rbp
 15514              		.cfi_def_cfa_register 6
 15515 0004 4883EC10 		subq	$16, %rsp
 15516 0008 48897DF8 		movq	%rdi, -8(%rbp)
 15517 000c 488975F0 		movq	%rsi, -16(%rbp)
 15518              	.L774:
 102:/usr/include/c++/6/bits/stl_construct.h **** 	    std::_Destroy(std::__addressof(*__first));
 15519              		.loc 35 102 0 discriminator 2
 15520 0010 488B45F8 		movq	-8(%rbp), %rax
 15521 0014 483B45F0 		cmpq	-16(%rbp), %rax
 15522 0018 741B     		je	.L775
 103:/usr/include/c++/6/bits/stl_construct.h **** 	}
 15523              		.loc 35 103 0 discriminator 1
 15524 001a 488B45F8 		movq	-8(%rbp), %rax
 15525 001e 4889C7   		movq	%rax, %rdi
 15526 0021 E8000000 		call	_ZSt11__addressofIN2gr5tag_tEEPT_RS2_
 15526      00
 15527 0026 4889C7   		movq	%rax, %rdi
 15528 0029 E8000000 		call	_ZSt8_DestroyIN2gr5tag_tEEvPT_
 15528      00
 102:/usr/include/c++/6/bits/stl_construct.h **** 	    std::_Destroy(std::__addressof(*__first));
 15529              		.loc 35 102 0 discriminator 1
 15530 002e 488345F8 		addq	$56, -8(%rbp)
 15530      38
GAS LISTING /tmp/ccvUPO8Q.s 			page 624


 15531 0033 EBDB     		jmp	.L774
 15532              	.L775:
 104:/usr/include/c++/6/bits/stl_construct.h ****     };
 15533              		.loc 35 104 0
 15534 0035 90       		nop
 15535 0036 C9       		leave
 15536              		.cfi_def_cfa 7, 8
 15537 0037 C3       		ret
 15538              		.cfi_endproc
 15539              	.LFE14689:
 15541              		.section	.text._ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPN2gr5tag_tESt6vectorIS3_SaIS3_EE
 15542              		.weak	_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPN2gr5tag_tESt6vectorIS3_SaIS3_EEEEET_S9_
 15544              	_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPN2gr5tag_tESt6vectorIS3_SaIS3_EEEEET_S9_:
 15545              	.LFB14690:
 15546              		.file 47 "/usr/include/c++/6/bits/cpp_type_traits.h"
   1:/usr/include/c++/6/bits/cpp_type_traits.h **** // The  -*- C++ -*- type traits classes for internal use in libstdc++
   2:/usr/include/c++/6/bits/cpp_type_traits.h **** 
   3:/usr/include/c++/6/bits/cpp_type_traits.h **** // Copyright (C) 2000-2016 Free Software Foundation, Inc.
   4:/usr/include/c++/6/bits/cpp_type_traits.h **** //
   5:/usr/include/c++/6/bits/cpp_type_traits.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/6/bits/cpp_type_traits.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/6/bits/cpp_type_traits.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/6/bits/cpp_type_traits.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/6/bits/cpp_type_traits.h **** // any later version.
  10:/usr/include/c++/6/bits/cpp_type_traits.h **** 
  11:/usr/include/c++/6/bits/cpp_type_traits.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/6/bits/cpp_type_traits.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/6/bits/cpp_type_traits.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/6/bits/cpp_type_traits.h **** // GNU General Public License for more details.
  15:/usr/include/c++/6/bits/cpp_type_traits.h **** 
  16:/usr/include/c++/6/bits/cpp_type_traits.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/6/bits/cpp_type_traits.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/6/bits/cpp_type_traits.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/6/bits/cpp_type_traits.h **** 
  20:/usr/include/c++/6/bits/cpp_type_traits.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/6/bits/cpp_type_traits.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/6/bits/cpp_type_traits.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/6/bits/cpp_type_traits.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/6/bits/cpp_type_traits.h **** 
  25:/usr/include/c++/6/bits/cpp_type_traits.h **** /** @file bits/cpp_type_traits.h
  26:/usr/include/c++/6/bits/cpp_type_traits.h ****  *  This is an internal header file, included by other library headers.
  27:/usr/include/c++/6/bits/cpp_type_traits.h ****  *  Do not attempt to use it directly. @headername{ext/type_traits}
  28:/usr/include/c++/6/bits/cpp_type_traits.h ****  */
  29:/usr/include/c++/6/bits/cpp_type_traits.h **** 
  30:/usr/include/c++/6/bits/cpp_type_traits.h **** // Written by Gabriel Dos Reis <dosreis@cmla.ens-cachan.fr>
  31:/usr/include/c++/6/bits/cpp_type_traits.h **** 
  32:/usr/include/c++/6/bits/cpp_type_traits.h **** #ifndef _CPP_TYPE_TRAITS_H
  33:/usr/include/c++/6/bits/cpp_type_traits.h **** #define _CPP_TYPE_TRAITS_H 1
  34:/usr/include/c++/6/bits/cpp_type_traits.h **** 
  35:/usr/include/c++/6/bits/cpp_type_traits.h **** #pragma GCC system_header
  36:/usr/include/c++/6/bits/cpp_type_traits.h **** 
  37:/usr/include/c++/6/bits/cpp_type_traits.h **** #include <bits/c++config.h>
  38:/usr/include/c++/6/bits/cpp_type_traits.h **** 
  39:/usr/include/c++/6/bits/cpp_type_traits.h **** //
  40:/usr/include/c++/6/bits/cpp_type_traits.h **** // This file provides some compile-time information about various types.
  41:/usr/include/c++/6/bits/cpp_type_traits.h **** // These representations were designed, on purpose, to be constant-expressions
  42:/usr/include/c++/6/bits/cpp_type_traits.h **** // and not types as found in <bits/type_traits.h>.  In particular, they
GAS LISTING /tmp/ccvUPO8Q.s 			page 625


  43:/usr/include/c++/6/bits/cpp_type_traits.h **** // can be used in control structures and the optimizer hopefully will do
  44:/usr/include/c++/6/bits/cpp_type_traits.h **** // the obvious thing.
  45:/usr/include/c++/6/bits/cpp_type_traits.h **** //
  46:/usr/include/c++/6/bits/cpp_type_traits.h **** // Why integral expressions, and not functions nor types?
  47:/usr/include/c++/6/bits/cpp_type_traits.h **** // Firstly, these compile-time entities are used as template-arguments
  48:/usr/include/c++/6/bits/cpp_type_traits.h **** // so function return values won't work:  We need compile-time entities.
  49:/usr/include/c++/6/bits/cpp_type_traits.h **** // We're left with types and constant  integral expressions.
  50:/usr/include/c++/6/bits/cpp_type_traits.h **** // Secondly, from the point of view of ease of use, type-based compile-time
  51:/usr/include/c++/6/bits/cpp_type_traits.h **** // information is -not- *that* convenient.  On has to write lots of
  52:/usr/include/c++/6/bits/cpp_type_traits.h **** // overloaded functions and to hope that the compiler will select the right
  53:/usr/include/c++/6/bits/cpp_type_traits.h **** // one. As a net effect, the overall structure isn't very clear at first
  54:/usr/include/c++/6/bits/cpp_type_traits.h **** // glance.
  55:/usr/include/c++/6/bits/cpp_type_traits.h **** // Thirdly, partial ordering and overload resolution (of function templates)
  56:/usr/include/c++/6/bits/cpp_type_traits.h **** // is highly costly in terms of compiler-resource.  It is a Good Thing to
  57:/usr/include/c++/6/bits/cpp_type_traits.h **** // keep these resource consumption as least as possible.
  58:/usr/include/c++/6/bits/cpp_type_traits.h **** //
  59:/usr/include/c++/6/bits/cpp_type_traits.h **** // See valarray_array.h for a case use.
  60:/usr/include/c++/6/bits/cpp_type_traits.h **** //
  61:/usr/include/c++/6/bits/cpp_type_traits.h **** // -- Gaby (dosreis@cmla.ens-cachan.fr) 2000-03-06.
  62:/usr/include/c++/6/bits/cpp_type_traits.h **** //
  63:/usr/include/c++/6/bits/cpp_type_traits.h **** // Update 2005: types are also provided and <bits/type_traits.h> has been
  64:/usr/include/c++/6/bits/cpp_type_traits.h **** // removed.
  65:/usr/include/c++/6/bits/cpp_type_traits.h **** //
  66:/usr/include/c++/6/bits/cpp_type_traits.h **** 
  67:/usr/include/c++/6/bits/cpp_type_traits.h **** extern "C++" {
  68:/usr/include/c++/6/bits/cpp_type_traits.h **** 
  69:/usr/include/c++/6/bits/cpp_type_traits.h **** namespace std _GLIBCXX_VISIBILITY(default)
  70:/usr/include/c++/6/bits/cpp_type_traits.h **** {
  71:/usr/include/c++/6/bits/cpp_type_traits.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  72:/usr/include/c++/6/bits/cpp_type_traits.h **** 
  73:/usr/include/c++/6/bits/cpp_type_traits.h ****   struct __true_type { };
  74:/usr/include/c++/6/bits/cpp_type_traits.h ****   struct __false_type { };
  75:/usr/include/c++/6/bits/cpp_type_traits.h **** 
  76:/usr/include/c++/6/bits/cpp_type_traits.h ****   template<bool>
  77:/usr/include/c++/6/bits/cpp_type_traits.h ****     struct __truth_type
  78:/usr/include/c++/6/bits/cpp_type_traits.h ****     { typedef __false_type __type; };
  79:/usr/include/c++/6/bits/cpp_type_traits.h **** 
  80:/usr/include/c++/6/bits/cpp_type_traits.h ****   template<>
  81:/usr/include/c++/6/bits/cpp_type_traits.h ****     struct __truth_type<true>
  82:/usr/include/c++/6/bits/cpp_type_traits.h ****     { typedef __true_type __type; };
  83:/usr/include/c++/6/bits/cpp_type_traits.h **** 
  84:/usr/include/c++/6/bits/cpp_type_traits.h ****   // N.B. The conversions to bool are needed due to the issue
  85:/usr/include/c++/6/bits/cpp_type_traits.h ****   // explained in c++/19404.
  86:/usr/include/c++/6/bits/cpp_type_traits.h ****   template<class _Sp, class _Tp>
  87:/usr/include/c++/6/bits/cpp_type_traits.h ****     struct __traitor
  88:/usr/include/c++/6/bits/cpp_type_traits.h ****     {
  89:/usr/include/c++/6/bits/cpp_type_traits.h ****       enum { __value = bool(_Sp::__value) || bool(_Tp::__value) };
  90:/usr/include/c++/6/bits/cpp_type_traits.h ****       typedef typename __truth_type<__value>::__type __type;
  91:/usr/include/c++/6/bits/cpp_type_traits.h ****     };
  92:/usr/include/c++/6/bits/cpp_type_traits.h **** 
  93:/usr/include/c++/6/bits/cpp_type_traits.h ****   // Compare for equality of types.
  94:/usr/include/c++/6/bits/cpp_type_traits.h ****   template<typename, typename>
  95:/usr/include/c++/6/bits/cpp_type_traits.h ****     struct __are_same
  96:/usr/include/c++/6/bits/cpp_type_traits.h ****     {
  97:/usr/include/c++/6/bits/cpp_type_traits.h ****       enum { __value = 0 };
  98:/usr/include/c++/6/bits/cpp_type_traits.h ****       typedef __false_type __type;
  99:/usr/include/c++/6/bits/cpp_type_traits.h ****     };
GAS LISTING /tmp/ccvUPO8Q.s 			page 626


 100:/usr/include/c++/6/bits/cpp_type_traits.h **** 
 101:/usr/include/c++/6/bits/cpp_type_traits.h ****   template<typename _Tp>
 102:/usr/include/c++/6/bits/cpp_type_traits.h ****     struct __are_same<_Tp, _Tp>
 103:/usr/include/c++/6/bits/cpp_type_traits.h ****     {
 104:/usr/include/c++/6/bits/cpp_type_traits.h ****       enum { __value = 1 };
 105:/usr/include/c++/6/bits/cpp_type_traits.h ****       typedef __true_type __type;
 106:/usr/include/c++/6/bits/cpp_type_traits.h ****     };
 107:/usr/include/c++/6/bits/cpp_type_traits.h **** 
 108:/usr/include/c++/6/bits/cpp_type_traits.h ****   // Holds if the template-argument is a void type.
 109:/usr/include/c++/6/bits/cpp_type_traits.h ****   template<typename _Tp>
 110:/usr/include/c++/6/bits/cpp_type_traits.h ****     struct __is_void
 111:/usr/include/c++/6/bits/cpp_type_traits.h ****     {
 112:/usr/include/c++/6/bits/cpp_type_traits.h ****       enum { __value = 0 };
 113:/usr/include/c++/6/bits/cpp_type_traits.h ****       typedef __false_type __type;
 114:/usr/include/c++/6/bits/cpp_type_traits.h ****     };
 115:/usr/include/c++/6/bits/cpp_type_traits.h **** 
 116:/usr/include/c++/6/bits/cpp_type_traits.h ****   template<>
 117:/usr/include/c++/6/bits/cpp_type_traits.h ****     struct __is_void<void>
 118:/usr/include/c++/6/bits/cpp_type_traits.h ****     {
 119:/usr/include/c++/6/bits/cpp_type_traits.h ****       enum { __value = 1 };
 120:/usr/include/c++/6/bits/cpp_type_traits.h ****       typedef __true_type __type;
 121:/usr/include/c++/6/bits/cpp_type_traits.h ****     };
 122:/usr/include/c++/6/bits/cpp_type_traits.h **** 
 123:/usr/include/c++/6/bits/cpp_type_traits.h ****   //
 124:/usr/include/c++/6/bits/cpp_type_traits.h ****   // Integer types
 125:/usr/include/c++/6/bits/cpp_type_traits.h ****   //
 126:/usr/include/c++/6/bits/cpp_type_traits.h ****   template<typename _Tp>
 127:/usr/include/c++/6/bits/cpp_type_traits.h ****     struct __is_integer
 128:/usr/include/c++/6/bits/cpp_type_traits.h ****     {
 129:/usr/include/c++/6/bits/cpp_type_traits.h ****       enum { __value = 0 };
 130:/usr/include/c++/6/bits/cpp_type_traits.h ****       typedef __false_type __type;
 131:/usr/include/c++/6/bits/cpp_type_traits.h ****     };
 132:/usr/include/c++/6/bits/cpp_type_traits.h **** 
 133:/usr/include/c++/6/bits/cpp_type_traits.h ****   // Thirteen specializations (yes there are eleven standard integer
 134:/usr/include/c++/6/bits/cpp_type_traits.h ****   // types; <em>long long</em> and <em>unsigned long long</em> are
 135:/usr/include/c++/6/bits/cpp_type_traits.h ****   // supported as extensions).  Up to four target-specific __int<N>
 136:/usr/include/c++/6/bits/cpp_type_traits.h ****   // types are supported as well.
 137:/usr/include/c++/6/bits/cpp_type_traits.h ****   template<>
 138:/usr/include/c++/6/bits/cpp_type_traits.h ****     struct __is_integer<bool>
 139:/usr/include/c++/6/bits/cpp_type_traits.h ****     {
 140:/usr/include/c++/6/bits/cpp_type_traits.h ****       enum { __value = 1 };
 141:/usr/include/c++/6/bits/cpp_type_traits.h ****       typedef __true_type __type;
 142:/usr/include/c++/6/bits/cpp_type_traits.h ****     };
 143:/usr/include/c++/6/bits/cpp_type_traits.h **** 
 144:/usr/include/c++/6/bits/cpp_type_traits.h ****   template<>
 145:/usr/include/c++/6/bits/cpp_type_traits.h ****     struct __is_integer<char>
 146:/usr/include/c++/6/bits/cpp_type_traits.h ****     {
 147:/usr/include/c++/6/bits/cpp_type_traits.h ****       enum { __value = 1 };
 148:/usr/include/c++/6/bits/cpp_type_traits.h ****       typedef __true_type __type;
 149:/usr/include/c++/6/bits/cpp_type_traits.h ****     };
 150:/usr/include/c++/6/bits/cpp_type_traits.h **** 
 151:/usr/include/c++/6/bits/cpp_type_traits.h ****   template<>
 152:/usr/include/c++/6/bits/cpp_type_traits.h ****     struct __is_integer<signed char>
 153:/usr/include/c++/6/bits/cpp_type_traits.h ****     {
 154:/usr/include/c++/6/bits/cpp_type_traits.h ****       enum { __value = 1 };
 155:/usr/include/c++/6/bits/cpp_type_traits.h ****       typedef __true_type __type;
 156:/usr/include/c++/6/bits/cpp_type_traits.h ****     };
GAS LISTING /tmp/ccvUPO8Q.s 			page 627


 157:/usr/include/c++/6/bits/cpp_type_traits.h **** 
 158:/usr/include/c++/6/bits/cpp_type_traits.h ****   template<>
 159:/usr/include/c++/6/bits/cpp_type_traits.h ****     struct __is_integer<unsigned char>
 160:/usr/include/c++/6/bits/cpp_type_traits.h ****     {
 161:/usr/include/c++/6/bits/cpp_type_traits.h ****       enum { __value = 1 };
 162:/usr/include/c++/6/bits/cpp_type_traits.h ****       typedef __true_type __type;
 163:/usr/include/c++/6/bits/cpp_type_traits.h ****     };
 164:/usr/include/c++/6/bits/cpp_type_traits.h **** 
 165:/usr/include/c++/6/bits/cpp_type_traits.h **** # ifdef _GLIBCXX_USE_WCHAR_T
 166:/usr/include/c++/6/bits/cpp_type_traits.h ****   template<>
 167:/usr/include/c++/6/bits/cpp_type_traits.h ****     struct __is_integer<wchar_t>
 168:/usr/include/c++/6/bits/cpp_type_traits.h ****     {
 169:/usr/include/c++/6/bits/cpp_type_traits.h ****       enum { __value = 1 };
 170:/usr/include/c++/6/bits/cpp_type_traits.h ****       typedef __true_type __type;
 171:/usr/include/c++/6/bits/cpp_type_traits.h ****     };
 172:/usr/include/c++/6/bits/cpp_type_traits.h **** # endif
 173:/usr/include/c++/6/bits/cpp_type_traits.h **** 
 174:/usr/include/c++/6/bits/cpp_type_traits.h **** #if __cplusplus >= 201103L
 175:/usr/include/c++/6/bits/cpp_type_traits.h ****   template<>
 176:/usr/include/c++/6/bits/cpp_type_traits.h ****     struct __is_integer<char16_t>
 177:/usr/include/c++/6/bits/cpp_type_traits.h ****     {
 178:/usr/include/c++/6/bits/cpp_type_traits.h ****       enum { __value = 1 };
 179:/usr/include/c++/6/bits/cpp_type_traits.h ****       typedef __true_type __type;
 180:/usr/include/c++/6/bits/cpp_type_traits.h ****     };
 181:/usr/include/c++/6/bits/cpp_type_traits.h **** 
 182:/usr/include/c++/6/bits/cpp_type_traits.h ****   template<>
 183:/usr/include/c++/6/bits/cpp_type_traits.h ****     struct __is_integer<char32_t>
 184:/usr/include/c++/6/bits/cpp_type_traits.h ****     {
 185:/usr/include/c++/6/bits/cpp_type_traits.h ****       enum { __value = 1 };
 186:/usr/include/c++/6/bits/cpp_type_traits.h ****       typedef __true_type __type;
 187:/usr/include/c++/6/bits/cpp_type_traits.h ****     };
 188:/usr/include/c++/6/bits/cpp_type_traits.h **** #endif
 189:/usr/include/c++/6/bits/cpp_type_traits.h **** 
 190:/usr/include/c++/6/bits/cpp_type_traits.h ****   template<>
 191:/usr/include/c++/6/bits/cpp_type_traits.h ****     struct __is_integer<short>
 192:/usr/include/c++/6/bits/cpp_type_traits.h ****     {
 193:/usr/include/c++/6/bits/cpp_type_traits.h ****       enum { __value = 1 };
 194:/usr/include/c++/6/bits/cpp_type_traits.h ****       typedef __true_type __type;
 195:/usr/include/c++/6/bits/cpp_type_traits.h ****     };
 196:/usr/include/c++/6/bits/cpp_type_traits.h **** 
 197:/usr/include/c++/6/bits/cpp_type_traits.h ****   template<>
 198:/usr/include/c++/6/bits/cpp_type_traits.h ****     struct __is_integer<unsigned short>
 199:/usr/include/c++/6/bits/cpp_type_traits.h ****     {
 200:/usr/include/c++/6/bits/cpp_type_traits.h ****       enum { __value = 1 };
 201:/usr/include/c++/6/bits/cpp_type_traits.h ****       typedef __true_type __type;
 202:/usr/include/c++/6/bits/cpp_type_traits.h ****     };
 203:/usr/include/c++/6/bits/cpp_type_traits.h **** 
 204:/usr/include/c++/6/bits/cpp_type_traits.h ****   template<>
 205:/usr/include/c++/6/bits/cpp_type_traits.h ****     struct __is_integer<int>
 206:/usr/include/c++/6/bits/cpp_type_traits.h ****     {
 207:/usr/include/c++/6/bits/cpp_type_traits.h ****       enum { __value = 1 };
 208:/usr/include/c++/6/bits/cpp_type_traits.h ****       typedef __true_type __type;
 209:/usr/include/c++/6/bits/cpp_type_traits.h ****     };
 210:/usr/include/c++/6/bits/cpp_type_traits.h **** 
 211:/usr/include/c++/6/bits/cpp_type_traits.h ****   template<>
 212:/usr/include/c++/6/bits/cpp_type_traits.h ****     struct __is_integer<unsigned int>
 213:/usr/include/c++/6/bits/cpp_type_traits.h ****     {
GAS LISTING /tmp/ccvUPO8Q.s 			page 628


 214:/usr/include/c++/6/bits/cpp_type_traits.h ****       enum { __value = 1 };
 215:/usr/include/c++/6/bits/cpp_type_traits.h ****       typedef __true_type __type;
 216:/usr/include/c++/6/bits/cpp_type_traits.h ****     };
 217:/usr/include/c++/6/bits/cpp_type_traits.h **** 
 218:/usr/include/c++/6/bits/cpp_type_traits.h ****   template<>
 219:/usr/include/c++/6/bits/cpp_type_traits.h ****     struct __is_integer<long>
 220:/usr/include/c++/6/bits/cpp_type_traits.h ****     {
 221:/usr/include/c++/6/bits/cpp_type_traits.h ****       enum { __value = 1 };
 222:/usr/include/c++/6/bits/cpp_type_traits.h ****       typedef __true_type __type;
 223:/usr/include/c++/6/bits/cpp_type_traits.h ****     };
 224:/usr/include/c++/6/bits/cpp_type_traits.h **** 
 225:/usr/include/c++/6/bits/cpp_type_traits.h ****   template<>
 226:/usr/include/c++/6/bits/cpp_type_traits.h ****     struct __is_integer<unsigned long>
 227:/usr/include/c++/6/bits/cpp_type_traits.h ****     {
 228:/usr/include/c++/6/bits/cpp_type_traits.h ****       enum { __value = 1 };
 229:/usr/include/c++/6/bits/cpp_type_traits.h ****       typedef __true_type __type;
 230:/usr/include/c++/6/bits/cpp_type_traits.h ****     };
 231:/usr/include/c++/6/bits/cpp_type_traits.h **** 
 232:/usr/include/c++/6/bits/cpp_type_traits.h ****   template<>
 233:/usr/include/c++/6/bits/cpp_type_traits.h ****     struct __is_integer<long long>
 234:/usr/include/c++/6/bits/cpp_type_traits.h ****     {
 235:/usr/include/c++/6/bits/cpp_type_traits.h ****       enum { __value = 1 };
 236:/usr/include/c++/6/bits/cpp_type_traits.h ****       typedef __true_type __type;
 237:/usr/include/c++/6/bits/cpp_type_traits.h ****     };
 238:/usr/include/c++/6/bits/cpp_type_traits.h **** 
 239:/usr/include/c++/6/bits/cpp_type_traits.h ****   template<>
 240:/usr/include/c++/6/bits/cpp_type_traits.h ****     struct __is_integer<unsigned long long>
 241:/usr/include/c++/6/bits/cpp_type_traits.h ****     {
 242:/usr/include/c++/6/bits/cpp_type_traits.h ****       enum { __value = 1 };
 243:/usr/include/c++/6/bits/cpp_type_traits.h ****       typedef __true_type __type;
 244:/usr/include/c++/6/bits/cpp_type_traits.h ****     };
 245:/usr/include/c++/6/bits/cpp_type_traits.h **** 
 246:/usr/include/c++/6/bits/cpp_type_traits.h **** #define __INT_N(TYPE) 			\
 247:/usr/include/c++/6/bits/cpp_type_traits.h ****   template<>				\
 248:/usr/include/c++/6/bits/cpp_type_traits.h ****     struct __is_integer<TYPE>		\
 249:/usr/include/c++/6/bits/cpp_type_traits.h ****     {					\
 250:/usr/include/c++/6/bits/cpp_type_traits.h ****       enum { __value = 1 };		\
 251:/usr/include/c++/6/bits/cpp_type_traits.h ****       typedef __true_type __type;	\
 252:/usr/include/c++/6/bits/cpp_type_traits.h ****     };					\
 253:/usr/include/c++/6/bits/cpp_type_traits.h ****   template<>				\
 254:/usr/include/c++/6/bits/cpp_type_traits.h ****     struct __is_integer<unsigned TYPE>	\
 255:/usr/include/c++/6/bits/cpp_type_traits.h ****     {					\
 256:/usr/include/c++/6/bits/cpp_type_traits.h ****       enum { __value = 1 };		\
 257:/usr/include/c++/6/bits/cpp_type_traits.h ****       typedef __true_type __type;	\
 258:/usr/include/c++/6/bits/cpp_type_traits.h ****     };
 259:/usr/include/c++/6/bits/cpp_type_traits.h **** 
 260:/usr/include/c++/6/bits/cpp_type_traits.h **** #ifdef __GLIBCXX_TYPE_INT_N_0
 261:/usr/include/c++/6/bits/cpp_type_traits.h **** __INT_N(__GLIBCXX_TYPE_INT_N_0)
 262:/usr/include/c++/6/bits/cpp_type_traits.h **** #endif
 263:/usr/include/c++/6/bits/cpp_type_traits.h **** #ifdef __GLIBCXX_TYPE_INT_N_1
 264:/usr/include/c++/6/bits/cpp_type_traits.h **** __INT_N(__GLIBCXX_TYPE_INT_N_1)
 265:/usr/include/c++/6/bits/cpp_type_traits.h **** #endif
 266:/usr/include/c++/6/bits/cpp_type_traits.h **** #ifdef __GLIBCXX_TYPE_INT_N_2
 267:/usr/include/c++/6/bits/cpp_type_traits.h **** __INT_N(__GLIBCXX_TYPE_INT_N_2)
 268:/usr/include/c++/6/bits/cpp_type_traits.h **** #endif
 269:/usr/include/c++/6/bits/cpp_type_traits.h **** #ifdef __GLIBCXX_TYPE_INT_N_3
 270:/usr/include/c++/6/bits/cpp_type_traits.h **** __INT_N(__GLIBCXX_TYPE_INT_N_3)
GAS LISTING /tmp/ccvUPO8Q.s 			page 629


 271:/usr/include/c++/6/bits/cpp_type_traits.h **** #endif
 272:/usr/include/c++/6/bits/cpp_type_traits.h **** 
 273:/usr/include/c++/6/bits/cpp_type_traits.h **** #undef __INT_N
 274:/usr/include/c++/6/bits/cpp_type_traits.h **** 
 275:/usr/include/c++/6/bits/cpp_type_traits.h ****   //
 276:/usr/include/c++/6/bits/cpp_type_traits.h ****   // Floating point types
 277:/usr/include/c++/6/bits/cpp_type_traits.h ****   //
 278:/usr/include/c++/6/bits/cpp_type_traits.h ****   template<typename _Tp>
 279:/usr/include/c++/6/bits/cpp_type_traits.h ****     struct __is_floating
 280:/usr/include/c++/6/bits/cpp_type_traits.h ****     {
 281:/usr/include/c++/6/bits/cpp_type_traits.h ****       enum { __value = 0 };
 282:/usr/include/c++/6/bits/cpp_type_traits.h ****       typedef __false_type __type;
 283:/usr/include/c++/6/bits/cpp_type_traits.h ****     };
 284:/usr/include/c++/6/bits/cpp_type_traits.h **** 
 285:/usr/include/c++/6/bits/cpp_type_traits.h ****   // three specializations (float, double and 'long double')
 286:/usr/include/c++/6/bits/cpp_type_traits.h ****   template<>
 287:/usr/include/c++/6/bits/cpp_type_traits.h ****     struct __is_floating<float>
 288:/usr/include/c++/6/bits/cpp_type_traits.h ****     {
 289:/usr/include/c++/6/bits/cpp_type_traits.h ****       enum { __value = 1 };
 290:/usr/include/c++/6/bits/cpp_type_traits.h ****       typedef __true_type __type;
 291:/usr/include/c++/6/bits/cpp_type_traits.h ****     };
 292:/usr/include/c++/6/bits/cpp_type_traits.h **** 
 293:/usr/include/c++/6/bits/cpp_type_traits.h ****   template<>
 294:/usr/include/c++/6/bits/cpp_type_traits.h ****     struct __is_floating<double>
 295:/usr/include/c++/6/bits/cpp_type_traits.h ****     {
 296:/usr/include/c++/6/bits/cpp_type_traits.h ****       enum { __value = 1 };
 297:/usr/include/c++/6/bits/cpp_type_traits.h ****       typedef __true_type __type;
 298:/usr/include/c++/6/bits/cpp_type_traits.h ****     };
 299:/usr/include/c++/6/bits/cpp_type_traits.h **** 
 300:/usr/include/c++/6/bits/cpp_type_traits.h ****   template<>
 301:/usr/include/c++/6/bits/cpp_type_traits.h ****     struct __is_floating<long double>
 302:/usr/include/c++/6/bits/cpp_type_traits.h ****     {
 303:/usr/include/c++/6/bits/cpp_type_traits.h ****       enum { __value = 1 };
 304:/usr/include/c++/6/bits/cpp_type_traits.h ****       typedef __true_type __type;
 305:/usr/include/c++/6/bits/cpp_type_traits.h ****     };
 306:/usr/include/c++/6/bits/cpp_type_traits.h **** 
 307:/usr/include/c++/6/bits/cpp_type_traits.h ****   //
 308:/usr/include/c++/6/bits/cpp_type_traits.h ****   // Pointer types
 309:/usr/include/c++/6/bits/cpp_type_traits.h ****   //
 310:/usr/include/c++/6/bits/cpp_type_traits.h ****   template<typename _Tp>
 311:/usr/include/c++/6/bits/cpp_type_traits.h ****     struct __is_pointer
 312:/usr/include/c++/6/bits/cpp_type_traits.h ****     {
 313:/usr/include/c++/6/bits/cpp_type_traits.h ****       enum { __value = 0 };
 314:/usr/include/c++/6/bits/cpp_type_traits.h ****       typedef __false_type __type;
 315:/usr/include/c++/6/bits/cpp_type_traits.h ****     };
 316:/usr/include/c++/6/bits/cpp_type_traits.h **** 
 317:/usr/include/c++/6/bits/cpp_type_traits.h ****   template<typename _Tp>
 318:/usr/include/c++/6/bits/cpp_type_traits.h ****     struct __is_pointer<_Tp*>
 319:/usr/include/c++/6/bits/cpp_type_traits.h ****     {
 320:/usr/include/c++/6/bits/cpp_type_traits.h ****       enum { __value = 1 };
 321:/usr/include/c++/6/bits/cpp_type_traits.h ****       typedef __true_type __type;
 322:/usr/include/c++/6/bits/cpp_type_traits.h ****     };
 323:/usr/include/c++/6/bits/cpp_type_traits.h **** 
 324:/usr/include/c++/6/bits/cpp_type_traits.h ****   //
 325:/usr/include/c++/6/bits/cpp_type_traits.h ****   // An arithmetic type is an integer type or a floating point type
 326:/usr/include/c++/6/bits/cpp_type_traits.h ****   //
 327:/usr/include/c++/6/bits/cpp_type_traits.h ****   template<typename _Tp>
GAS LISTING /tmp/ccvUPO8Q.s 			page 630


 328:/usr/include/c++/6/bits/cpp_type_traits.h ****     struct __is_arithmetic
 329:/usr/include/c++/6/bits/cpp_type_traits.h ****     : public __traitor<__is_integer<_Tp>, __is_floating<_Tp> >
 330:/usr/include/c++/6/bits/cpp_type_traits.h ****     { };
 331:/usr/include/c++/6/bits/cpp_type_traits.h **** 
 332:/usr/include/c++/6/bits/cpp_type_traits.h ****   //
 333:/usr/include/c++/6/bits/cpp_type_traits.h ****   // A scalar type is an arithmetic type or a pointer type
 334:/usr/include/c++/6/bits/cpp_type_traits.h ****   // 
 335:/usr/include/c++/6/bits/cpp_type_traits.h ****   template<typename _Tp>
 336:/usr/include/c++/6/bits/cpp_type_traits.h ****     struct __is_scalar
 337:/usr/include/c++/6/bits/cpp_type_traits.h ****     : public __traitor<__is_arithmetic<_Tp>, __is_pointer<_Tp> >
 338:/usr/include/c++/6/bits/cpp_type_traits.h ****     { };
 339:/usr/include/c++/6/bits/cpp_type_traits.h **** 
 340:/usr/include/c++/6/bits/cpp_type_traits.h ****   //
 341:/usr/include/c++/6/bits/cpp_type_traits.h ****   // For use in std::copy and std::find overloads for streambuf iterators.
 342:/usr/include/c++/6/bits/cpp_type_traits.h ****   //
 343:/usr/include/c++/6/bits/cpp_type_traits.h ****   template<typename _Tp>
 344:/usr/include/c++/6/bits/cpp_type_traits.h ****     struct __is_char
 345:/usr/include/c++/6/bits/cpp_type_traits.h ****     {
 346:/usr/include/c++/6/bits/cpp_type_traits.h ****       enum { __value = 0 };
 347:/usr/include/c++/6/bits/cpp_type_traits.h ****       typedef __false_type __type;
 348:/usr/include/c++/6/bits/cpp_type_traits.h ****     };
 349:/usr/include/c++/6/bits/cpp_type_traits.h **** 
 350:/usr/include/c++/6/bits/cpp_type_traits.h ****   template<>
 351:/usr/include/c++/6/bits/cpp_type_traits.h ****     struct __is_char<char>
 352:/usr/include/c++/6/bits/cpp_type_traits.h ****     {
 353:/usr/include/c++/6/bits/cpp_type_traits.h ****       enum { __value = 1 };
 354:/usr/include/c++/6/bits/cpp_type_traits.h ****       typedef __true_type __type;
 355:/usr/include/c++/6/bits/cpp_type_traits.h ****     };
 356:/usr/include/c++/6/bits/cpp_type_traits.h **** 
 357:/usr/include/c++/6/bits/cpp_type_traits.h **** #ifdef _GLIBCXX_USE_WCHAR_T
 358:/usr/include/c++/6/bits/cpp_type_traits.h ****   template<>
 359:/usr/include/c++/6/bits/cpp_type_traits.h ****     struct __is_char<wchar_t>
 360:/usr/include/c++/6/bits/cpp_type_traits.h ****     {
 361:/usr/include/c++/6/bits/cpp_type_traits.h ****       enum { __value = 1 };
 362:/usr/include/c++/6/bits/cpp_type_traits.h ****       typedef __true_type __type;
 363:/usr/include/c++/6/bits/cpp_type_traits.h ****     };
 364:/usr/include/c++/6/bits/cpp_type_traits.h **** #endif
 365:/usr/include/c++/6/bits/cpp_type_traits.h **** 
 366:/usr/include/c++/6/bits/cpp_type_traits.h ****   template<typename _Tp>
 367:/usr/include/c++/6/bits/cpp_type_traits.h ****     struct __is_byte
 368:/usr/include/c++/6/bits/cpp_type_traits.h ****     {
 369:/usr/include/c++/6/bits/cpp_type_traits.h ****       enum { __value = 0 };
 370:/usr/include/c++/6/bits/cpp_type_traits.h ****       typedef __false_type __type;
 371:/usr/include/c++/6/bits/cpp_type_traits.h ****     };
 372:/usr/include/c++/6/bits/cpp_type_traits.h **** 
 373:/usr/include/c++/6/bits/cpp_type_traits.h ****   template<>
 374:/usr/include/c++/6/bits/cpp_type_traits.h ****     struct __is_byte<char>
 375:/usr/include/c++/6/bits/cpp_type_traits.h ****     {
 376:/usr/include/c++/6/bits/cpp_type_traits.h ****       enum { __value = 1 };
 377:/usr/include/c++/6/bits/cpp_type_traits.h ****       typedef __true_type __type;
 378:/usr/include/c++/6/bits/cpp_type_traits.h ****     };
 379:/usr/include/c++/6/bits/cpp_type_traits.h **** 
 380:/usr/include/c++/6/bits/cpp_type_traits.h ****   template<>
 381:/usr/include/c++/6/bits/cpp_type_traits.h ****     struct __is_byte<signed char>
 382:/usr/include/c++/6/bits/cpp_type_traits.h ****     {
 383:/usr/include/c++/6/bits/cpp_type_traits.h ****       enum { __value = 1 };
 384:/usr/include/c++/6/bits/cpp_type_traits.h ****       typedef __true_type __type;
GAS LISTING /tmp/ccvUPO8Q.s 			page 631


 385:/usr/include/c++/6/bits/cpp_type_traits.h ****     };
 386:/usr/include/c++/6/bits/cpp_type_traits.h **** 
 387:/usr/include/c++/6/bits/cpp_type_traits.h ****   template<>
 388:/usr/include/c++/6/bits/cpp_type_traits.h ****     struct __is_byte<unsigned char>
 389:/usr/include/c++/6/bits/cpp_type_traits.h ****     {
 390:/usr/include/c++/6/bits/cpp_type_traits.h ****       enum { __value = 1 };
 391:/usr/include/c++/6/bits/cpp_type_traits.h ****       typedef __true_type __type;
 392:/usr/include/c++/6/bits/cpp_type_traits.h ****     };
 393:/usr/include/c++/6/bits/cpp_type_traits.h **** 
 394:/usr/include/c++/6/bits/cpp_type_traits.h ****   //
 395:/usr/include/c++/6/bits/cpp_type_traits.h ****   // Move iterator type
 396:/usr/include/c++/6/bits/cpp_type_traits.h ****   //
 397:/usr/include/c++/6/bits/cpp_type_traits.h ****   template<typename _Tp>
 398:/usr/include/c++/6/bits/cpp_type_traits.h ****     struct __is_move_iterator
 399:/usr/include/c++/6/bits/cpp_type_traits.h ****     {
 400:/usr/include/c++/6/bits/cpp_type_traits.h ****       enum { __value = 0 };
 401:/usr/include/c++/6/bits/cpp_type_traits.h ****       typedef __false_type __type;
 402:/usr/include/c++/6/bits/cpp_type_traits.h ****     };
 403:/usr/include/c++/6/bits/cpp_type_traits.h **** 
 404:/usr/include/c++/6/bits/cpp_type_traits.h ****   // Fallback implementation of the function in bits/stl_iterator.h used to
 405:/usr/include/c++/6/bits/cpp_type_traits.h ****   // remove the move_iterator wrapper.
 406:/usr/include/c++/6/bits/cpp_type_traits.h ****   template<typename _Iterator>
 407:/usr/include/c++/6/bits/cpp_type_traits.h ****     inline _Iterator
 408:/usr/include/c++/6/bits/cpp_type_traits.h ****     __miter_base(_Iterator __it)
 15547              		.loc 47 408 0
 15548              		.cfi_startproc
 15549 0000 55       		pushq	%rbp
 15550              		.cfi_def_cfa_offset 16
 15551              		.cfi_offset 6, -16
 15552 0001 4889E5   		movq	%rsp, %rbp
 15553              		.cfi_def_cfa_register 6
 15554 0004 48897DF8 		movq	%rdi, -8(%rbp)
 409:/usr/include/c++/6/bits/cpp_type_traits.h ****     { return __it; }
 15555              		.loc 47 409 0
 15556 0008 488B45F8 		movq	-8(%rbp), %rax
 15557 000c 5D       		popq	%rbp
 15558              		.cfi_def_cfa 7, 8
 15559 000d C3       		ret
 15560              		.cfi_endproc
 15561              	.LFE14690:
 15563              		.section	.text._ZSt14__copy_move_a2ILb1EN9__gnu_cxx17__normal_iteratorIPN2gr5tag_tESt6vectorIS3_Sa
 15564              		.weak	_ZSt14__copy_move_a2ILb1EN9__gnu_cxx17__normal_iteratorIPN2gr5tag_tESt6vectorIS3_SaIS3_EEEES
 15566              	_ZSt14__copy_move_a2ILb1EN9__gnu_cxx17__normal_iteratorIPN2gr5tag_tESt6vectorIS3_SaIS3_EEEES8_ET1_T
 15567              	.LFB14691:
 420:/usr/include/c++/6/bits/stl_algobase.h ****     {
 15568              		.loc 44 420 0
 15569              		.cfi_startproc
 15570 0000 55       		pushq	%rbp
 15571              		.cfi_def_cfa_offset 16
 15572              		.cfi_offset 6, -16
 15573 0001 4889E5   		movq	%rsp, %rbp
 15574              		.cfi_def_cfa_register 6
 15575 0004 4154     		pushq	%r12
 15576 0006 53       		pushq	%rbx
 15577 0007 4883EC30 		subq	$48, %rsp
 15578              		.cfi_offset 12, -24
 15579              		.cfi_offset 3, -32
GAS LISTING /tmp/ccvUPO8Q.s 			page 632


 15580 000b 48897DD8 		movq	%rdi, -40(%rbp)
 15581 000f 488975D0 		movq	%rsi, -48(%rbp)
 15582 0013 488955C8 		movq	%rdx, -56(%rbp)
 422:/usr/include/c++/6/bits/stl_algobase.h **** 					     std::__niter_base(__last),
 15583              		.loc 44 422 0
 15584 0017 488B45C8 		movq	-56(%rbp), %rax
 15585 001b 4889C7   		movq	%rax, %rdi
 15586 001e E8000000 		call	_ZSt12__niter_baseIPN2gr5tag_tESt6vectorIS1_SaIS1_EEET_N9__gnu_cxx17__normal_iteratorIS6_T0_E
 15586      00
 15587 0023 4989C4   		movq	%rax, %r12
 15588 0026 488B45D0 		movq	-48(%rbp), %rax
 15589 002a 4889C7   		movq	%rax, %rdi
 15590 002d E8000000 		call	_ZSt12__niter_baseIPN2gr5tag_tESt6vectorIS1_SaIS1_EEET_N9__gnu_cxx17__normal_iteratorIS6_T0_E
 15590      00
 15591 0032 4889C3   		movq	%rax, %rbx
 15592 0035 488B45D8 		movq	-40(%rbp), %rax
 15593 0039 4889C7   		movq	%rax, %rdi
 15594 003c E8000000 		call	_ZSt12__niter_baseIPN2gr5tag_tESt6vectorIS1_SaIS1_EEET_N9__gnu_cxx17__normal_iteratorIS6_T0_E
 15594      00
 15595 0041 4C89E2   		movq	%r12, %rdx
 15596 0044 4889DE   		movq	%rbx, %rsi
 15597 0047 4889C7   		movq	%rax, %rdi
 15598 004a E8000000 		call	_ZSt13__copy_move_aILb1EPN2gr5tag_tES2_ET1_T0_S4_S3_
 15598      00
 15599 004f 488945E8 		movq	%rax, -24(%rbp)
 424:/usr/include/c++/6/bits/stl_algobase.h ****     }
 15600              		.loc 44 424 0
 15601 0053 488D55E8 		leaq	-24(%rbp), %rdx
 15602 0057 488D45E0 		leaq	-32(%rbp), %rax
 15603 005b 4889D6   		movq	%rdx, %rsi
 15604 005e 4889C7   		movq	%rax, %rdi
 15605 0061 E8000000 		call	_ZN9__gnu_cxx17__normal_iteratorIPN2gr5tag_tESt6vectorIS2_SaIS2_EEEC1ERKS3_
 15605      00
 15606 0066 488B45E0 		movq	-32(%rbp), %rax
 425:/usr/include/c++/6/bits/stl_algobase.h **** 
 15607              		.loc 44 425 0
 15608 006a 4883C430 		addq	$48, %rsp
 15609 006e 5B       		popq	%rbx
 15610 006f 415C     		popq	%r12
 15611 0071 5D       		popq	%rbp
 15612              		.cfi_def_cfa 7, 8
 15613 0072 C3       		ret
 15614              		.cfi_endproc
 15615              	.LFE14691:
 15617              		.section	.text._ZN9__gnu_cxx13new_allocatorIN2gr5tag_tEE7destroyIS2_EEvPT_,"axG",@progbits,_ZN9__g
 15618              		.align 2
 15619              		.weak	_ZN9__gnu_cxx13new_allocatorIN2gr5tag_tEE7destroyIS2_EEvPT_
 15621              	_ZN9__gnu_cxx13new_allocatorIN2gr5tag_tEE7destroyIS2_EEvPT_:
 15622              	.LFB14692:
  87:/usr/include/c++/6/ext/new_allocator.h **** 
  88:/usr/include/c++/6/ext/new_allocator.h ****       pointer
  89:/usr/include/c++/6/ext/new_allocator.h ****       address(reference __x) const _GLIBCXX_NOEXCEPT
  90:/usr/include/c++/6/ext/new_allocator.h ****       { return std::__addressof(__x); }
  91:/usr/include/c++/6/ext/new_allocator.h **** 
  92:/usr/include/c++/6/ext/new_allocator.h ****       const_pointer
  93:/usr/include/c++/6/ext/new_allocator.h ****       address(const_reference __x) const _GLIBCXX_NOEXCEPT
  94:/usr/include/c++/6/ext/new_allocator.h ****       { return std::__addressof(__x); }
GAS LISTING /tmp/ccvUPO8Q.s 			page 633


  95:/usr/include/c++/6/ext/new_allocator.h **** 
  96:/usr/include/c++/6/ext/new_allocator.h ****       // NB: __n is permitted to be 0.  The C++ standard says nothing
  97:/usr/include/c++/6/ext/new_allocator.h ****       // about what the return value is when __n == 0.
  98:/usr/include/c++/6/ext/new_allocator.h ****       pointer
  99:/usr/include/c++/6/ext/new_allocator.h ****       allocate(size_type __n, const void* = 0)
 100:/usr/include/c++/6/ext/new_allocator.h ****       { 
 101:/usr/include/c++/6/ext/new_allocator.h **** 	if (__n > this->max_size())
 102:/usr/include/c++/6/ext/new_allocator.h **** 	  std::__throw_bad_alloc();
 103:/usr/include/c++/6/ext/new_allocator.h **** 
 104:/usr/include/c++/6/ext/new_allocator.h **** 	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
 105:/usr/include/c++/6/ext/new_allocator.h ****       }
 106:/usr/include/c++/6/ext/new_allocator.h **** 
 107:/usr/include/c++/6/ext/new_allocator.h ****       // __p is not permitted to be a null pointer.
 108:/usr/include/c++/6/ext/new_allocator.h ****       void
 109:/usr/include/c++/6/ext/new_allocator.h ****       deallocate(pointer __p, size_type)
 110:/usr/include/c++/6/ext/new_allocator.h ****       { ::operator delete(__p); }
 111:/usr/include/c++/6/ext/new_allocator.h **** 
 112:/usr/include/c++/6/ext/new_allocator.h ****       size_type
 113:/usr/include/c++/6/ext/new_allocator.h ****       max_size() const _GLIBCXX_USE_NOEXCEPT
 114:/usr/include/c++/6/ext/new_allocator.h ****       { return size_t(-1) / sizeof(_Tp); }
 115:/usr/include/c++/6/ext/new_allocator.h **** 
 116:/usr/include/c++/6/ext/new_allocator.h **** #if __cplusplus >= 201103L
 117:/usr/include/c++/6/ext/new_allocator.h ****       template<typename _Up, typename... _Args>
 118:/usr/include/c++/6/ext/new_allocator.h ****         void
 119:/usr/include/c++/6/ext/new_allocator.h ****         construct(_Up* __p, _Args&&... __args)
 120:/usr/include/c++/6/ext/new_allocator.h **** 	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
 121:/usr/include/c++/6/ext/new_allocator.h **** 
 122:/usr/include/c++/6/ext/new_allocator.h ****       template<typename _Up>
 123:/usr/include/c++/6/ext/new_allocator.h ****         void 
 124:/usr/include/c++/6/ext/new_allocator.h ****         destroy(_Up* __p) { __p->~_Up(); }
 15623              		.loc 43 124 0
 15624              		.cfi_startproc
 15625 0000 55       		pushq	%rbp
 15626              		.cfi_def_cfa_offset 16
 15627              		.cfi_offset 6, -16
 15628 0001 4889E5   		movq	%rsp, %rbp
 15629              		.cfi_def_cfa_register 6
 15630 0004 4883EC10 		subq	$16, %rsp
 15631 0008 48897DF8 		movq	%rdi, -8(%rbp)
 15632 000c 488975F0 		movq	%rsi, -16(%rbp)
 15633              		.loc 43 124 0
 15634 0010 488B45F0 		movq	-16(%rbp), %rax
 15635 0014 4889C7   		movq	%rax, %rdi
 15636 0017 E8000000 		call	_ZN2gr5tag_tD1Ev
 15636      00
 15637 001c 90       		nop
 15638 001d C9       		leave
 15639              		.cfi_def_cfa 7, 8
 15640 001e C3       		ret
 15641              		.cfi_endproc
 15642              	.LFE14692:
 15644              		.section	.text._ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFv
 15645              		.align 2
 15646              		.weak	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt
 15648              	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt10_Sele
 15649              	.LFB14805:
 491:/usr/include/c++/6/bits/stl_tree.h ****       { return *static_cast<_Node_allocator*>(&this->_M_impl); }
GAS LISTING /tmp/ccvUPO8Q.s 			page 634


 15650              		.loc 27 491 0
 15651              		.cfi_startproc
 15652 0000 55       		pushq	%rbp
 15653              		.cfi_def_cfa_offset 16
 15654              		.cfi_offset 6, -16
 15655 0001 4889E5   		movq	%rsp, %rbp
 15656              		.cfi_def_cfa_register 6
 15657 0004 48897DF8 		movq	%rdi, -8(%rbp)
 492:/usr/include/c++/6/bits/stl_tree.h ****       
 15658              		.loc 27 492 0
 15659 0008 488B45F8 		movq	-8(%rbp), %rax
 15660 000c 5D       		popq	%rbp
 15661              		.cfi_def_cfa 7, 8
 15662 000d C3       		ret
 15663              		.cfi_endproc
 15664              	.LFE14805:
 15666              		.section	.text._ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKN5boost13intrusive_ptrIN3pmt8
 15667              		.weak	_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseE
 15669              	_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS2_8
 15670              	.LFB14806:
 486:/usr/include/c++/6/bits/alloc_traits.h **** 	{ __a.destroy(__p); }
 15671              		.loc 42 486 0
 15672              		.cfi_startproc
 15673 0000 55       		pushq	%rbp
 15674              		.cfi_def_cfa_offset 16
 15675              		.cfi_offset 6, -16
 15676 0001 4889E5   		movq	%rsp, %rbp
 15677              		.cfi_def_cfa_register 6
 15678 0004 4883EC10 		subq	$16, %rsp
 15679 0008 48897DF8 		movq	%rdi, -8(%rbp)
 15680 000c 488975F0 		movq	%rsi, -16(%rbp)
 487:/usr/include/c++/6/bits/alloc_traits.h **** 
 15681              		.loc 42 487 0
 15682 0010 488B55F0 		movq	-16(%rbp), %rdx
 15683 0014 488B45F8 		movq	-8(%rbp), %rax
 15684 0018 4889D6   		movq	%rdx, %rsi
 15685 001b 4889C7   		movq	%rax, %rdi
 15686 001e E8000000 		call	_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_base
 15686      00
 15687 0023 90       		nop
 15688 0024 C9       		leave
 15689              		.cfi_def_cfa 7, 8
 15690 0025 C3       		ret
 15691              		.cfi_endproc
 15692              	.LFE14806:
 15694              		.section	.text._ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKN5boost13intrusive_ptrIN3pmt8
 15695              		.weak	_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseE
 15697              	_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS2_8
 15698              	.LFB14807:
 461:/usr/include/c++/6/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 15699              		.loc 42 461 0
 15700              		.cfi_startproc
 15701 0000 55       		pushq	%rbp
 15702              		.cfi_def_cfa_offset 16
 15703              		.cfi_offset 6, -16
 15704 0001 4889E5   		movq	%rsp, %rbp
 15705              		.cfi_def_cfa_register 6
GAS LISTING /tmp/ccvUPO8Q.s 			page 635


 15706 0004 4883EC20 		subq	$32, %rsp
 15707 0008 48897DF8 		movq	%rdi, -8(%rbp)
 15708 000c 488975F0 		movq	%rsi, -16(%rbp)
 15709 0010 488955E8 		movq	%rdx, -24(%rbp)
 462:/usr/include/c++/6/bits/alloc_traits.h **** 
 15710              		.loc 42 462 0
 15711 0014 488B55E8 		movq	-24(%rbp), %rdx
 15712 0018 488B4DF0 		movq	-16(%rbp), %rcx
 15713 001c 488B45F8 		movq	-8(%rbp), %rax
 15714 0020 4889CE   		movq	%rcx, %rsi
 15715 0023 4889C7   		movq	%rax, %rdi
 15716 0026 E8000000 		call	_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_base
 15716      00
 15717 002b 90       		nop
 15718 002c C9       		leave
 15719              		.cfi_def_cfa 7, 8
 15720 002d C3       		ret
 15721              		.cfi_endproc
 15722              	.LFE14807:
 15724              		.section	.text._ZNKSt13_Rb_tree_nodeISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS1_8functio
 15725              		.align 2
 15726              		.weak	_ZNKSt13_Rb_tree_nodeISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS1_8functionIFvS5_EE
 15728              	_ZNKSt13_Rb_tree_nodeISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS1_8functionIFvS5_EEEEE9_M_
 15729              	.LFB14827:
 160:/usr/include/c++/6/bits/stl_tree.h ****       { return _M_storage._M_ptr(); }
 15730              		.loc 27 160 0
 15731              		.cfi_startproc
 15732 0000 55       		pushq	%rbp
 15733              		.cfi_def_cfa_offset 16
 15734              		.cfi_offset 6, -16
 15735 0001 4889E5   		movq	%rsp, %rbp
 15736              		.cfi_def_cfa_register 6
 15737 0004 4883EC10 		subq	$16, %rsp
 15738 0008 48897DF8 		movq	%rdi, -8(%rbp)
 161:/usr/include/c++/6/bits/stl_tree.h **** #endif
 15739              		.loc 27 161 0
 15740 000c 488B45F8 		movq	-8(%rbp), %rax
 15741 0010 4883C020 		addq	$32, %rax
 15742 0014 4889C7   		movq	%rax, %rdi
 15743 0017 E8000000 		call	_ZNK9__gnu_cxx16__aligned_membufISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS2_8functi
 15743      00
 15744 001c C9       		leave
 15745              		.cfi_def_cfa 7, 8
 15746 001d C3       		ret
 15747              		.cfi_endproc
 15748              	.LFE14827:
 15750              		.section	.text._ZN9__gnu_cxx16__aligned_membufISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS
 15751              		.align 2
 15752              		.weak	_ZN9__gnu_cxx16__aligned_membufISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS2_8functi
 15754              	_ZN9__gnu_cxx16__aligned_membufISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS2_8functionIFvS6
 15755              	.LFB14828:
  62:/usr/include/c++/6/ext/aligned_buffer.h ****       { return static_cast<void*>(&_M_storage); }
 15756              		.loc 46 62 0
 15757              		.cfi_startproc
 15758 0000 55       		pushq	%rbp
 15759              		.cfi_def_cfa_offset 16
 15760              		.cfi_offset 6, -16
GAS LISTING /tmp/ccvUPO8Q.s 			page 636


 15761 0001 4889E5   		movq	%rsp, %rbp
 15762              		.cfi_def_cfa_register 6
 15763 0004 48897DF8 		movq	%rdi, -8(%rbp)
  63:/usr/include/c++/6/ext/aligned_buffer.h **** 
 15764              		.loc 46 63 0
 15765 0008 488B45F8 		movq	-8(%rbp), %rax
 15766 000c 5D       		popq	%rbp
 15767              		.cfi_def_cfa 7, 8
 15768 000d C3       		ret
 15769              		.cfi_endproc
 15770              	.LFE14828:
 15772              		.section	.text._ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKN5boost13intrusive_ptrIN3pmt8
 15773              		.weak	_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseE
 15775              	_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS2_8
 15776              	.LFB14829:
 435:/usr/include/c++/6/bits/alloc_traits.h ****       { return __a.allocate(__n); }
 15777              		.loc 42 435 0
 15778              		.cfi_startproc
 15779 0000 55       		pushq	%rbp
 15780              		.cfi_def_cfa_offset 16
 15781              		.cfi_offset 6, -16
 15782 0001 4889E5   		movq	%rsp, %rbp
 15783              		.cfi_def_cfa_register 6
 15784 0004 4883EC10 		subq	$16, %rsp
 15785 0008 48897DF8 		movq	%rdi, -8(%rbp)
 15786 000c 488975F0 		movq	%rsi, -16(%rbp)
 436:/usr/include/c++/6/bits/alloc_traits.h **** 
 15787              		.loc 42 436 0
 15788 0010 488B4DF0 		movq	-16(%rbp), %rcx
 15789 0014 488B45F8 		movq	-8(%rbp), %rax
 15790 0018 BA000000 		movl	$0, %edx
 15790      00
 15791 001d 4889CE   		movq	%rcx, %rsi
 15792 0020 4889C7   		movq	%rax, %rdi
 15793 0023 E8000000 		call	_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_base
 15793      00
 15794 0028 C9       		leave
 15795              		.cfi_def_cfa 7, 8
 15796 0029 C3       		ret
 15797              		.cfi_endproc
 15798              	.LFE14829:
 15800              		.section	.text._ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKN5boost13intrusive_ptrIN3pmt8
 15801              		.weak	_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseE
 15803              	_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS2_8
 15804              	.LFB14830:
 474:/usr/include/c++/6/bits/alloc_traits.h **** 	{ __a.construct(__p, std::forward<_Args>(__args)...); }
 15805              		.loc 42 474 0
 15806              		.cfi_startproc
 15807 0000 55       		pushq	%rbp
 15808              		.cfi_def_cfa_offset 16
 15809              		.cfi_offset 6, -16
 15810 0001 4889E5   		movq	%rsp, %rbp
 15811              		.cfi_def_cfa_register 6
 15812 0004 4154     		pushq	%r12
 15813 0006 53       		pushq	%rbx
 15814 0007 4883EC30 		subq	$48, %rsp
 15815              		.cfi_offset 12, -24
GAS LISTING /tmp/ccvUPO8Q.s 			page 637


 15816              		.cfi_offset 3, -32
 15817 000b 48897DE8 		movq	%rdi, -24(%rbp)
 15818 000f 488975E0 		movq	%rsi, -32(%rbp)
 15819 0013 488955D8 		movq	%rdx, -40(%rbp)
 15820 0017 48894DD0 		movq	%rcx, -48(%rbp)
 15821 001b 4C8945C8 		movq	%r8, -56(%rbp)
 475:/usr/include/c++/6/bits/alloc_traits.h **** 
 15822              		.loc 42 475 0
 15823 001f 488B45C8 		movq	-56(%rbp), %rax
 15824 0023 4889C7   		movq	%rax, %rdi
 15825 0026 E8000000 		call	_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE
 15825      00
 15826 002b 4989C4   		movq	%rax, %r12
 15827 002e 488B45D0 		movq	-48(%rbp), %rax
 15828 0032 4889C7   		movq	%rax, %rdi
 15829 0035 E8000000 		call	_ZSt7forwardISt5tupleIJRKN5boost13intrusive_ptrIN3pmt8pmt_baseEEEEEEOT_RNSt16remove_reference
 15829      00
 15830 003a 4889C3   		movq	%rax, %rbx
 15831 003d 488B45D8 		movq	-40(%rbp), %rax
 15832 0041 4889C7   		movq	%rax, %rdi
 15833 0044 E8000000 		call	_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE
 15833      00
 15834 0049 4889C2   		movq	%rax, %rdx
 15835 004c 488B75E0 		movq	-32(%rbp), %rsi
 15836 0050 488B45E8 		movq	-24(%rbp), %rax
 15837 0054 4D89E0   		movq	%r12, %r8
 15838 0057 4889D9   		movq	%rbx, %rcx
 15839 005a 4889C7   		movq	%rax, %rdi
 15840 005d E8000000 		call	_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_base
 15840      00
 15841 0062 90       		nop
 15842 0063 4883C430 		addq	$48, %rsp
 15843 0067 5B       		popq	%rbx
 15844 0068 415C     		popq	%r12
 15845 006a 5D       		popq	%rbp
 15846              		.cfi_def_cfa 7, 8
 15847 006b C3       		ret
 15848              		.cfi_endproc
 15849              	.LFE14830:
 15851              		.section	.text._ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFv
 15852              		.align 2
 15853              		.weak	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt
 15855              	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt10_Sele
 15856              	.LFB14831:
 884:/usr/include/c++/6/bits/stl_tree.h ****       { return iterator(this->_M_impl._M_header._M_left); }
 15857              		.loc 27 884 0
 15858              		.cfi_startproc
 15859 0000 55       		pushq	%rbp
 15860              		.cfi_def_cfa_offset 16
 15861              		.cfi_offset 6, -16
 15862 0001 4889E5   		movq	%rsp, %rbp
 15863              		.cfi_def_cfa_register 6
 15864 0004 4883EC20 		subq	$32, %rsp
 15865 0008 48897DE8 		movq	%rdi, -24(%rbp)
 885:/usr/include/c++/6/bits/stl_tree.h **** 
 15866              		.loc 27 885 0
 15867 000c 488B45E8 		movq	-24(%rbp), %rax
GAS LISTING /tmp/ccvUPO8Q.s 			page 638


 15868 0010 488B5018 		movq	24(%rax), %rdx
 15869 0014 488D45F8 		leaq	-8(%rbp), %rax
 15870 0018 4889D6   		movq	%rdx, %rsi
 15871 001b 4889C7   		movq	%rax, %rdi
 15872 001e E8000000 		call	_ZNSt17_Rb_tree_iteratorISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS1_8functionIFvS5_
 15872      00
 15873 0023 488B45F8 		movq	-8(%rbp), %rax
 15874 0027 C9       		leave
 15875              		.cfi_def_cfa 7, 8
 15876 0028 C3       		ret
 15877              		.cfi_endproc
 15878              	.LFE14831:
 15880              		.section	.text._ZNKSt13_Rb_tree_nodeISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt5dequeIS5_
 15881              		.align 2
 15882              		.weak	_ZNKSt13_Rb_tree_nodeISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt5dequeIS5_SaIS5_EEE
 15884              	_ZNKSt13_Rb_tree_nodeISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt5dequeIS5_SaIS5_EEEE9_M_va
 15885              	.LFB14835:
 160:/usr/include/c++/6/bits/stl_tree.h ****       { return _M_storage._M_ptr(); }
 15886              		.loc 27 160 0
 15887              		.cfi_startproc
 15888 0000 55       		pushq	%rbp
 15889              		.cfi_def_cfa_offset 16
 15890              		.cfi_offset 6, -16
 15891 0001 4889E5   		movq	%rsp, %rbp
 15892              		.cfi_def_cfa_register 6
 15893 0004 4883EC10 		subq	$16, %rsp
 15894 0008 48897DF8 		movq	%rdi, -8(%rbp)
 161:/usr/include/c++/6/bits/stl_tree.h **** #endif
 15895              		.loc 27 161 0
 15896 000c 488B45F8 		movq	-8(%rbp), %rax
 15897 0010 4883C020 		addq	$32, %rax
 15898 0014 4889C7   		movq	%rax, %rdi
 15899 0017 E8000000 		call	_ZNK9__gnu_cxx16__aligned_membufISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt5dequeIS6
 15899      00
 15900 001c C9       		leave
 15901              		.cfi_def_cfa 7, 8
 15902 001d C3       		ret
 15903              		.cfi_endproc
 15904              	.LFE14835:
 15906              		.section	.text._ZN9__gnu_cxx13new_allocatorIlE10deallocateEPlm,"axG",@progbits,_ZN9__gnu_cxx13new_
 15907              		.align 2
 15908              		.weak	_ZN9__gnu_cxx13new_allocatorIlE10deallocateEPlm
 15910              	_ZN9__gnu_cxx13new_allocatorIlE10deallocateEPlm:
 15911              	.LFB14852:
 109:/usr/include/c++/6/ext/new_allocator.h ****       { ::operator delete(__p); }
 15912              		.loc 43 109 0
 15913              		.cfi_startproc
 15914 0000 55       		pushq	%rbp
 15915              		.cfi_def_cfa_offset 16
 15916              		.cfi_offset 6, -16
 15917 0001 4889E5   		movq	%rsp, %rbp
 15918              		.cfi_def_cfa_register 6
 15919 0004 4883EC20 		subq	$32, %rsp
 15920 0008 48897DF8 		movq	%rdi, -8(%rbp)
 15921 000c 488975F0 		movq	%rsi, -16(%rbp)
 15922 0010 488955E8 		movq	%rdx, -24(%rbp)
 110:/usr/include/c++/6/ext/new_allocator.h **** 
GAS LISTING /tmp/ccvUPO8Q.s 			page 639


 15923              		.loc 43 110 0
 15924 0014 488B45F0 		movq	-16(%rbp), %rax
 15925 0018 4889C7   		movq	%rax, %rdi
 15926 001b E8000000 		call	_ZdlPv@PLT
 15926      00
 15927 0020 90       		nop
 15928 0021 C9       		leave
 15929              		.cfi_def_cfa 7, 8
 15930 0022 C3       		ret
 15931              		.cfi_endproc
 15932              	.LFE14852:
 15934              		.section	.text._ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_all
 15935              		.align 2
 15936              		.weak	_ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEEC2
 15938              	_ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEEC2EPS5_:
 15939              	.LFB14919:
 15940              		.file 48 "/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp"
   1:/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp **** #ifndef BOOST_SMART_PTR_DETAIL_SP_COUNTED_IMPL_HPP_INCLUDED
   2:/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp **** #define BOOST_SMART_PTR_DETAIL_SP_COUNTED_IMPL_HPP_INCLUDED
   3:/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp **** 
   4:/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp **** // MS compatible compilers support #pragma once
   5:/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp **** 
   6:/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp **** #if defined(_MSC_VER) && (_MSC_VER >= 1020)
   7:/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp **** # pragma once
   8:/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp **** #endif
   9:/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp **** 
  10:/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp **** //
  11:/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp **** //  detail/sp_counted_impl.hpp
  12:/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp **** //
  13:/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp **** //  Copyright (c) 2001, 2002, 2003 Peter Dimov and Multi Media Ltd.
  14:/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp **** //  Copyright 2004-2005 Peter Dimov
  15:/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp **** //
  16:/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp **** // Distributed under the Boost Software License, Version 1.0. (See
  17:/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp **** // accompanying file LICENSE_1_0.txt or copy at
  18:/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp **** // http://www.boost.org/LICENSE_1_0.txt)
  19:/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp **** //
  20:/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp **** 
  21:/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp **** #include <boost/config.hpp>
  22:/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp **** 
  23:/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp **** #if defined(BOOST_SP_USE_STD_ALLOCATOR) && defined(BOOST_SP_USE_QUICK_ALLOCATOR)
  24:/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp **** # error BOOST_SP_USE_STD_ALLOCATOR and BOOST_SP_USE_QUICK_ALLOCATOR are incompatible.
  25:/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp **** #endif
  26:/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp **** 
  27:/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp **** #include <boost/checked_delete.hpp>
  28:/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp **** #include <boost/smart_ptr/detail/sp_counted_base.hpp>
  29:/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp **** 
  30:/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp **** #if defined(BOOST_SP_USE_QUICK_ALLOCATOR)
  31:/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp **** #include <boost/smart_ptr/detail/quick_allocator.hpp>
  32:/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp **** #endif
  33:/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp **** 
  34:/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp **** #if defined(BOOST_SP_USE_STD_ALLOCATOR)
  35:/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp **** #include <memory>           // std::allocator
  36:/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp **** #endif
  37:/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp **** 
  38:/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp **** #include <cstddef>          // std::size_t
  39:/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp **** 
  40:/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp **** namespace boost
GAS LISTING /tmp/ccvUPO8Q.s 			page 640


  41:/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp **** {
  42:/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp **** 
  43:/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp **** #if defined(BOOST_SP_ENABLE_DEBUG_HOOKS)
  44:/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp **** 
  45:/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp **** void sp_scalar_constructor_hook( void * px, std::size_t size, void * pn );
  46:/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp **** void sp_scalar_destructor_hook( void * px, std::size_t size, void * pn );
  47:/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp **** 
  48:/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp **** #endif
  49:/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp **** 
  50:/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp **** namespace detail
  51:/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp **** {
  52:/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp **** 
  53:/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp **** template<class X> class sp_counted_impl_p: public sp_counted_base
  54:/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp **** {
  55:/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp **** private:
  56:/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp **** 
  57:/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp ****     X * px_;
  58:/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp **** 
  59:/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp ****     sp_counted_impl_p( sp_counted_impl_p const & );
  60:/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp ****     sp_counted_impl_p & operator= ( sp_counted_impl_p const & );
  61:/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp **** 
  62:/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp ****     typedef sp_counted_impl_p<X> this_type;
  63:/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp **** 
  64:/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp **** public:
  65:/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp **** 
  66:/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp ****     explicit sp_counted_impl_p( X * px ): px_( px )
 15941              		.loc 48 66 0
 15942              		.cfi_startproc
 15943 0000 55       		pushq	%rbp
 15944              		.cfi_def_cfa_offset 16
 15945              		.cfi_offset 6, -16
 15946 0001 4889E5   		movq	%rsp, %rbp
 15947              		.cfi_def_cfa_register 6
 15948 0004 4883EC10 		subq	$16, %rsp
 15949 0008 48897DF8 		movq	%rdi, -8(%rbp)
 15950 000c 488975F0 		movq	%rsi, -16(%rbp)
 15951              	.LBB143:
 15952              		.loc 48 66 0
 15953 0010 488B45F8 		movq	-8(%rbp), %rax
 15954 0014 4889C7   		movq	%rax, %rdi
 15955 0017 E8000000 		call	_ZN5boost6detail15sp_counted_baseC2Ev
 15955      00
 15956 001c 488D1500 		leaq	16+_ZTVN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EE
 15956      000000
 15957 0023 488B45F8 		movq	-8(%rbp), %rax
 15958 0027 488910   		movq	%rdx, (%rax)
 15959 002a 488B45F8 		movq	-8(%rbp), %rax
 15960 002e 488B55F0 		movq	-16(%rbp), %rdx
 15961 0032 48895010 		movq	%rdx, 16(%rax)
 15962              	.LBE143:
  67:/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp ****     {
  68:/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp **** #if defined(BOOST_SP_ENABLE_DEBUG_HOOKS)
  69:/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp ****         boost::sp_scalar_constructor_hook( px, sizeof(X), this );
  70:/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp **** #endif
  71:/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp ****     }
 15963              		.loc 48 71 0
 15964 0036 90       		nop
GAS LISTING /tmp/ccvUPO8Q.s 			page 641


 15965 0037 C9       		leave
 15966              		.cfi_def_cfa 7, 8
 15967 0038 C3       		ret
 15968              		.cfi_endproc
 15969              	.LFE14919:
 15971              		.weak	_ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEEC1
 15972              		.set	_ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEEC1E
 15973              		.section	.text._ZN5boost14checked_deleteINS_16exception_detail10clone_implINS1_10bad_alloc_EEEEEvP
 15974              		.weak	_ZN5boost14checked_deleteINS_16exception_detail10clone_implINS1_10bad_alloc_EEEEEvPT_
 15976              	_ZN5boost14checked_deleteINS_16exception_detail10clone_implINS1_10bad_alloc_EEEEEvPT_:
 15977              	.LFB14921:
 15978              		.file 49 "/usr/include/boost/core/checked_delete.hpp"
   1:/usr/include/boost/core/checked_delete.hpp **** #ifndef BOOST_CORE_CHECKED_DELETE_HPP
   2:/usr/include/boost/core/checked_delete.hpp **** #define BOOST_CORE_CHECKED_DELETE_HPP
   3:/usr/include/boost/core/checked_delete.hpp **** 
   4:/usr/include/boost/core/checked_delete.hpp **** // MS compatible compilers support #pragma once
   5:/usr/include/boost/core/checked_delete.hpp **** 
   6:/usr/include/boost/core/checked_delete.hpp **** #if defined(_MSC_VER) && (_MSC_VER >= 1020)
   7:/usr/include/boost/core/checked_delete.hpp **** # pragma once
   8:/usr/include/boost/core/checked_delete.hpp **** #endif
   9:/usr/include/boost/core/checked_delete.hpp **** 
  10:/usr/include/boost/core/checked_delete.hpp **** //
  11:/usr/include/boost/core/checked_delete.hpp **** //  boost/checked_delete.hpp
  12:/usr/include/boost/core/checked_delete.hpp **** //
  13:/usr/include/boost/core/checked_delete.hpp **** //  Copyright (c) 2002, 2003 Peter Dimov
  14:/usr/include/boost/core/checked_delete.hpp **** //  Copyright (c) 2003 Daniel Frey
  15:/usr/include/boost/core/checked_delete.hpp **** //  Copyright (c) 2003 Howard Hinnant
  16:/usr/include/boost/core/checked_delete.hpp **** //
  17:/usr/include/boost/core/checked_delete.hpp **** //  Distributed under the Boost Software License, Version 1.0. (See
  18:/usr/include/boost/core/checked_delete.hpp **** //  accompanying file LICENSE_1_0.txt or copy at
  19:/usr/include/boost/core/checked_delete.hpp **** //  http://www.boost.org/LICENSE_1_0.txt)
  20:/usr/include/boost/core/checked_delete.hpp **** //
  21:/usr/include/boost/core/checked_delete.hpp **** //  See http://www.boost.org/libs/core/doc/html/core/checked_delete.html for documentation.
  22:/usr/include/boost/core/checked_delete.hpp **** //
  23:/usr/include/boost/core/checked_delete.hpp **** 
  24:/usr/include/boost/core/checked_delete.hpp **** namespace boost
  25:/usr/include/boost/core/checked_delete.hpp **** {
  26:/usr/include/boost/core/checked_delete.hpp **** 
  27:/usr/include/boost/core/checked_delete.hpp **** // verify that types are complete for increased safety
  28:/usr/include/boost/core/checked_delete.hpp **** 
  29:/usr/include/boost/core/checked_delete.hpp **** template<class T> inline void checked_delete(T * x)
 15979              		.loc 49 29 0
 15980              		.cfi_startproc
 15981 0000 55       		pushq	%rbp
 15982              		.cfi_def_cfa_offset 16
 15983              		.cfi_offset 6, -16
 15984 0001 4889E5   		movq	%rsp, %rbp
 15985              		.cfi_def_cfa_register 6
 15986 0004 4883EC10 		subq	$16, %rsp
 15987 0008 48897DF8 		movq	%rdi, -8(%rbp)
  30:/usr/include/boost/core/checked_delete.hpp **** {
  31:/usr/include/boost/core/checked_delete.hpp ****     // intentionally complex - simplification causes regressions
  32:/usr/include/boost/core/checked_delete.hpp ****     typedef char type_must_be_complete[ sizeof(T)? 1: -1 ];
  33:/usr/include/boost/core/checked_delete.hpp ****     (void) sizeof(type_must_be_complete);
  34:/usr/include/boost/core/checked_delete.hpp ****     delete x;
 15988              		.loc 49 34 0
 15989 000c 48837DF8 		cmpq	$0, -8(%rbp)
GAS LISTING /tmp/ccvUPO8Q.s 			page 642


 15989      00
 15990 0011 7417     		je	.L800
 15991              		.loc 49 34 0 is_stmt 0 discriminator 1
 15992 0013 488B45F8 		movq	-8(%rbp), %rax
 15993 0017 488B00   		movq	(%rax), %rax
 15994 001a 4883C008 		addq	$8, %rax
 15995 001e 488B00   		movq	(%rax), %rax
 15996 0021 488B55F8 		movq	-8(%rbp), %rdx
 15997 0025 4889D7   		movq	%rdx, %rdi
 15998 0028 FFD0     		call	*%rax
 15999              	.LVL10:
 16000              	.L800:
  35:/usr/include/boost/core/checked_delete.hpp **** }
 16001              		.loc 49 35 0 is_stmt 1
 16002 002a 90       		nop
 16003 002b C9       		leave
 16004              		.cfi_def_cfa 7, 8
 16005 002c C3       		ret
 16006              		.cfi_endproc
 16007              	.LFE14921:
 16009              		.section	.text._ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_14bad_exc
 16010              		.align 2
 16011              		.weak	_ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_14bad_exception_EE
 16013              	_ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_14bad_exception_EEEEC2EPS
 16014              	.LFB14923:
  66:/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp ****     {
 16015              		.loc 48 66 0
 16016              		.cfi_startproc
 16017 0000 55       		pushq	%rbp
 16018              		.cfi_def_cfa_offset 16
 16019              		.cfi_offset 6, -16
 16020 0001 4889E5   		movq	%rsp, %rbp
 16021              		.cfi_def_cfa_register 6
 16022 0004 4883EC10 		subq	$16, %rsp
 16023 0008 48897DF8 		movq	%rdi, -8(%rbp)
 16024 000c 488975F0 		movq	%rsi, -16(%rbp)
 16025              	.LBB144:
  66:/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp ****     {
 16026              		.loc 48 66 0
 16027 0010 488B45F8 		movq	-8(%rbp), %rax
 16028 0014 4889C7   		movq	%rax, %rdi
 16029 0017 E8000000 		call	_ZN5boost6detail15sp_counted_baseC2Ev
 16029      00
 16030 001c 488D1500 		leaq	16+_ZTVN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_14bad_exceptio
 16030      000000
 16031 0023 488B45F8 		movq	-8(%rbp), %rax
 16032 0027 488910   		movq	%rdx, (%rax)
 16033 002a 488B45F8 		movq	-8(%rbp), %rax
 16034 002e 488B55F0 		movq	-16(%rbp), %rdx
 16035 0032 48895010 		movq	%rdx, 16(%rax)
 16036              	.LBE144:
 16037              		.loc 48 71 0
 16038 0036 90       		nop
 16039 0037 C9       		leave
 16040              		.cfi_def_cfa 7, 8
 16041 0038 C3       		ret
 16042              		.cfi_endproc
GAS LISTING /tmp/ccvUPO8Q.s 			page 643


 16043              	.LFE14923:
 16045              		.weak	_ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_14bad_exception_EE
 16046              		.set	_ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_14bad_exception_EEE
 16047              		.section	.text._ZN5boost14checked_deleteINS_16exception_detail10clone_implINS1_14bad_exception_EEE
 16048              		.weak	_ZN5boost14checked_deleteINS_16exception_detail10clone_implINS1_14bad_exception_EEEEEvPT_
 16050              	_ZN5boost14checked_deleteINS_16exception_detail10clone_implINS1_14bad_exception_EEEEEvPT_:
 16051              	.LFB14925:
  29:/usr/include/boost/core/checked_delete.hpp **** {
 16052              		.loc 49 29 0
 16053              		.cfi_startproc
 16054 0000 55       		pushq	%rbp
 16055              		.cfi_def_cfa_offset 16
 16056              		.cfi_offset 6, -16
 16057 0001 4889E5   		movq	%rsp, %rbp
 16058              		.cfi_def_cfa_register 6
 16059 0004 4883EC10 		subq	$16, %rsp
 16060 0008 48897DF8 		movq	%rdi, -8(%rbp)
  34:/usr/include/boost/core/checked_delete.hpp **** }
 16061              		.loc 49 34 0
 16062 000c 48837DF8 		cmpq	$0, -8(%rbp)
 16062      00
 16063 0011 7417     		je	.L804
  34:/usr/include/boost/core/checked_delete.hpp **** }
 16064              		.loc 49 34 0 is_stmt 0 discriminator 1
 16065 0013 488B45F8 		movq	-8(%rbp), %rax
 16066 0017 488B00   		movq	(%rax), %rax
 16067 001a 4883C008 		addq	$8, %rax
 16068 001e 488B00   		movq	(%rax), %rax
 16069 0021 488B55F8 		movq	-8(%rbp), %rdx
 16070 0025 4889D7   		movq	%rdx, %rdi
 16071 0028 FFD0     		call	*%rax
 16072              	.LVL11:
 16073              	.L804:
 16074              		.loc 49 35 0 is_stmt 1
 16075 002a 90       		nop
 16076 002b C9       		leave
 16077              		.cfi_def_cfa 7, 8
 16078 002c C3       		ret
 16079              		.cfi_endproc
 16080              	.LFE14925:
 16082              		.section	.text._ZNSt16allocator_traitsISaIiEE8allocateERS0_m,"axG",@progbits,_ZNSt16allocator_trai
 16083              		.weak	_ZNSt16allocator_traitsISaIiEE8allocateERS0_m
 16085              	_ZNSt16allocator_traitsISaIiEE8allocateERS0_m:
 16086              	.LFB14965:
 435:/usr/include/c++/6/bits/alloc_traits.h ****       { return __a.allocate(__n); }
 16087              		.loc 42 435 0
 16088              		.cfi_startproc
 16089 0000 55       		pushq	%rbp
 16090              		.cfi_def_cfa_offset 16
 16091              		.cfi_offset 6, -16
 16092 0001 4889E5   		movq	%rsp, %rbp
 16093              		.cfi_def_cfa_register 6
 16094 0004 4883EC10 		subq	$16, %rsp
 16095 0008 48897DF8 		movq	%rdi, -8(%rbp)
 16096 000c 488975F0 		movq	%rsi, -16(%rbp)
 436:/usr/include/c++/6/bits/alloc_traits.h **** 
 16097              		.loc 42 436 0
GAS LISTING /tmp/ccvUPO8Q.s 			page 644


 16098 0010 488B4DF0 		movq	-16(%rbp), %rcx
 16099 0014 488B45F8 		movq	-8(%rbp), %rax
 16100 0018 BA000000 		movl	$0, %edx
 16100      00
 16101 001d 4889CE   		movq	%rcx, %rsi
 16102 0020 4889C7   		movq	%rax, %rdi
 16103 0023 E8000000 		call	_ZN9__gnu_cxx13new_allocatorIiE8allocateEmPKv
 16103      00
 16104 0028 C9       		leave
 16105              		.cfi_def_cfa 7, 8
 16106 0029 C3       		ret
 16107              		.cfi_endproc
 16108              	.LFE14965:
 16110              		.section	.text._ZN9__gnu_cxx13new_allocatorIiE10deallocateEPim,"axG",@progbits,_ZN9__gnu_cxx13new_
 16111              		.align 2
 16112              		.weak	_ZN9__gnu_cxx13new_allocatorIiE10deallocateEPim
 16114              	_ZN9__gnu_cxx13new_allocatorIiE10deallocateEPim:
 16115              	.LFB14966:
 109:/usr/include/c++/6/ext/new_allocator.h ****       { ::operator delete(__p); }
 16116              		.loc 43 109 0
 16117              		.cfi_startproc
 16118 0000 55       		pushq	%rbp
 16119              		.cfi_def_cfa_offset 16
 16120              		.cfi_offset 6, -16
 16121 0001 4889E5   		movq	%rsp, %rbp
 16122              		.cfi_def_cfa_register 6
 16123 0004 4883EC20 		subq	$32, %rsp
 16124 0008 48897DF8 		movq	%rdi, -8(%rbp)
 16125 000c 488975F0 		movq	%rsi, -16(%rbp)
 16126 0010 488955E8 		movq	%rdx, -24(%rbp)
 110:/usr/include/c++/6/ext/new_allocator.h **** 
 16127              		.loc 43 110 0
 16128 0014 488B45F0 		movq	-16(%rbp), %rax
 16129 0018 4889C7   		movq	%rax, %rdi
 16130 001b E8000000 		call	_ZdlPv@PLT
 16130      00
 16131 0020 90       		nop
 16132 0021 C9       		leave
 16133              		.cfi_def_cfa 7, 8
 16134 0022 C3       		ret
 16135              		.cfi_endproc
 16136              	.LFE14966:
 16138              		.section	.text._ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEPiET0_T_SA_S9_,"axG"
 16139              		.weak	_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEPiET0_T_SA_S9_
 16141              	_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEPiET0_T_SA_S9_:
 16142              	.LFB14967:
 446:/usr/include/c++/6/bits/stl_algobase.h ****     {
 16143              		.loc 44 446 0
 16144              		.cfi_startproc
 16145 0000 55       		pushq	%rbp
 16146              		.cfi_def_cfa_offset 16
 16147              		.cfi_offset 6, -16
 16148 0001 4889E5   		movq	%rsp, %rbp
 16149              		.cfi_def_cfa_register 6
 16150 0004 53       		pushq	%rbx
 16151 0005 4883EC28 		subq	$40, %rsp
 16152              		.cfi_offset 3, -24
GAS LISTING /tmp/ccvUPO8Q.s 			page 645


 16153 0009 48897DE8 		movq	%rdi, -24(%rbp)
 16154 000d 488975E0 		movq	%rsi, -32(%rbp)
 16155 0011 488955D8 		movq	%rdx, -40(%rbp)
 455:/usr/include/c++/6/bits/stl_algobase.h **** 	       __result));
 16156              		.loc 44 455 0
 16157 0015 488B45E0 		movq	-32(%rbp), %rax
 16158 0019 4889C7   		movq	%rax, %rdi
 16159 001c E8000000 		call	_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEET_S8_
 16159      00
 16160 0021 4889C3   		movq	%rax, %rbx
 16161 0024 488B45E8 		movq	-24(%rbp), %rax
 16162 0028 4889C7   		movq	%rax, %rdi
 16163 002b E8000000 		call	_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEET_S8_
 16163      00
 16164 0030 4889C1   		movq	%rax, %rcx
 456:/usr/include/c++/6/bits/stl_algobase.h ****     }
 16165              		.loc 44 456 0
 16166 0033 488B45D8 		movq	-40(%rbp), %rax
 16167 0037 4889C2   		movq	%rax, %rdx
 16168 003a 4889DE   		movq	%rbx, %rsi
 16169 003d 4889CF   		movq	%rcx, %rdi
 16170 0040 E8000000 		call	_ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEPiET1_T0_SA_S9_
 16170      00
 457:/usr/include/c++/6/bits/stl_algobase.h **** 
 16171              		.loc 44 457 0
 16172 0045 4883C428 		addq	$40, %rsp
 16173 0049 5B       		popq	%rbx
 16174 004a 5D       		popq	%rbp
 16175              		.cfi_def_cfa 7, 8
 16176 004b C3       		ret
 16177              		.cfi_endproc
 16178              	.LFE14967:
 16180              		.section	.text._ZN9__gnu_cxx13new_allocatorIN2gr5tag_tEEC2Ev,"axG",@progbits,_ZN9__gnu_cxx13new_al
 16181              		.align 2
 16182              		.weak	_ZN9__gnu_cxx13new_allocatorIN2gr5tag_tEEC2Ev
 16184              	_ZN9__gnu_cxx13new_allocatorIN2gr5tag_tEEC2Ev:
 16185              	.LFB14972:
  79:/usr/include/c++/6/ext/new_allocator.h **** 
 16186              		.loc 43 79 0
 16187              		.cfi_startproc
 16188 0000 55       		pushq	%rbp
 16189              		.cfi_def_cfa_offset 16
 16190              		.cfi_offset 6, -16
 16191 0001 4889E5   		movq	%rsp, %rbp
 16192              		.cfi_def_cfa_register 6
 16193 0004 48897DF8 		movq	%rdi, -8(%rbp)
  79:/usr/include/c++/6/ext/new_allocator.h **** 
 16194              		.loc 43 79 0
 16195 0008 90       		nop
 16196 0009 5D       		popq	%rbp
 16197              		.cfi_def_cfa 7, 8
 16198 000a C3       		ret
 16199              		.cfi_endproc
 16200              	.LFE14972:
 16202              		.weak	_ZN9__gnu_cxx13new_allocatorIN2gr5tag_tEEC1Ev
 16203              		.set	_ZN9__gnu_cxx13new_allocatorIN2gr5tag_tEEC1Ev,_ZN9__gnu_cxx13new_allocatorIN2gr5tag_tEEC2Ev
 16204              		.section	.text._ZN9__gnu_cxx13new_allocatorIN2gr5tag_tEE10deallocateEPS2_m,"axG",@progbits,_ZN9__g
GAS LISTING /tmp/ccvUPO8Q.s 			page 646


 16205              		.align 2
 16206              		.weak	_ZN9__gnu_cxx13new_allocatorIN2gr5tag_tEE10deallocateEPS2_m
 16208              	_ZN9__gnu_cxx13new_allocatorIN2gr5tag_tEE10deallocateEPS2_m:
 16209              	.LFB14974:
 109:/usr/include/c++/6/ext/new_allocator.h ****       { ::operator delete(__p); }
 16210              		.loc 43 109 0
 16211              		.cfi_startproc
 16212 0000 55       		pushq	%rbp
 16213              		.cfi_def_cfa_offset 16
 16214              		.cfi_offset 6, -16
 16215 0001 4889E5   		movq	%rsp, %rbp
 16216              		.cfi_def_cfa_register 6
 16217 0004 4883EC20 		subq	$32, %rsp
 16218 0008 48897DF8 		movq	%rdi, -8(%rbp)
 16219 000c 488975F0 		movq	%rsi, -16(%rbp)
 16220 0010 488955E8 		movq	%rdx, -24(%rbp)
 110:/usr/include/c++/6/ext/new_allocator.h **** 
 16221              		.loc 43 110 0
 16222 0014 488B45F0 		movq	-16(%rbp), %rax
 16223 0018 4889C7   		movq	%rax, %rdi
 16224 001b E8000000 		call	_ZdlPv@PLT
 16224      00
 16225 0020 90       		nop
 16226 0021 C9       		leave
 16227              		.cfi_def_cfa 7, 8
 16228 0022 C3       		ret
 16229              		.cfi_endproc
 16230              	.LFE14974:
 16232              		.section	.text._ZSt11__addressofIN2gr5tag_tEEPT_RS2_,"axG",@progbits,_ZSt11__addressofIN2gr5tag_tE
 16233              		.weak	_ZSt11__addressofIN2gr5tag_tEEPT_RS2_
 16235              	_ZSt11__addressofIN2gr5tag_tEEPT_RS2_:
 16236              	.LFB14975:
  47:/usr/include/c++/6/bits/move.h ****     {
 16237              		.loc 33 47 0
 16238              		.cfi_startproc
 16239 0000 55       		pushq	%rbp
 16240              		.cfi_def_cfa_offset 16
 16241              		.cfi_offset 6, -16
 16242 0001 4889E5   		movq	%rsp, %rbp
 16243              		.cfi_def_cfa_register 6
 16244 0004 48897DF8 		movq	%rdi, -8(%rbp)
  50:/usr/include/c++/6/bits/move.h ****     }
 16245              		.loc 33 50 0
 16246 0008 488B45F8 		movq	-8(%rbp), %rax
  51:/usr/include/c++/6/bits/move.h **** 
 16247              		.loc 33 51 0
 16248 000c 5D       		popq	%rbp
 16249              		.cfi_def_cfa 7, 8
 16250 000d C3       		ret
 16251              		.cfi_endproc
 16252              	.LFE14975:
 16254              		.section	.text._ZSt8_DestroyIN2gr5tag_tEEvPT_,"axG",@progbits,_ZSt8_DestroyIN2gr5tag_tEEvPT_,comda
 16255              		.weak	_ZSt8_DestroyIN2gr5tag_tEEvPT_
 16257              	_ZSt8_DestroyIN2gr5tag_tEEvPT_:
 16258              	.LFB14976:
  92:/usr/include/c++/6/bits/stl_construct.h ****     { __pointer->~_Tp(); }
 16259              		.loc 35 92 0
GAS LISTING /tmp/ccvUPO8Q.s 			page 647


 16260              		.cfi_startproc
 16261 0000 55       		pushq	%rbp
 16262              		.cfi_def_cfa_offset 16
 16263              		.cfi_offset 6, -16
 16264 0001 4889E5   		movq	%rsp, %rbp
 16265              		.cfi_def_cfa_register 6
 16266 0004 4883EC10 		subq	$16, %rsp
 16267 0008 48897DF8 		movq	%rdi, -8(%rbp)
  93:/usr/include/c++/6/bits/stl_construct.h **** 
 16268              		.loc 35 93 0
 16269 000c 488B45F8 		movq	-8(%rbp), %rax
 16270 0010 4889C7   		movq	%rax, %rdi
 16271 0013 E8000000 		call	_ZN2gr5tag_tD1Ev
 16271      00
 16272 0018 90       		nop
 16273 0019 C9       		leave
 16274              		.cfi_def_cfa 7, 8
 16275 001a C3       		ret
 16276              		.cfi_endproc
 16277              	.LFE14976:
 16279              		.section	.text._ZSt12__niter_baseIPN2gr5tag_tESt6vectorIS1_SaIS1_EEET_N9__gnu_cxx17__normal_iterat
 16280              		.weak	_ZSt12__niter_baseIPN2gr5tag_tESt6vectorIS1_SaIS1_EEET_N9__gnu_cxx17__normal_iteratorIS6_T0_
 16282              	_ZSt12__niter_baseIPN2gr5tag_tESt6vectorIS1_SaIS1_EEET_N9__gnu_cxx17__normal_iteratorIS6_T0_EE:
 16283              	.LFB14977:
 963:/usr/include/c++/6/bits/stl_iterator.h **** 
 964:/usr/include/c++/6/bits/stl_iterator.h ****   template<typename _Iterator, typename _Container>
 965:/usr/include/c++/6/bits/stl_iterator.h ****     inline __normal_iterator<_Iterator, _Container>
 966:/usr/include/c++/6/bits/stl_iterator.h ****     operator+(typename __normal_iterator<_Iterator, _Container>::difference_type
 967:/usr/include/c++/6/bits/stl_iterator.h **** 	      __n, const __normal_iterator<_Iterator, _Container>& __i)
 968:/usr/include/c++/6/bits/stl_iterator.h ****     _GLIBCXX_NOEXCEPT
 969:/usr/include/c++/6/bits/stl_iterator.h ****     { return __normal_iterator<_Iterator, _Container>(__i.base() + __n); }
 970:/usr/include/c++/6/bits/stl_iterator.h **** 
 971:/usr/include/c++/6/bits/stl_iterator.h **** _GLIBCXX_END_NAMESPACE_VERSION
 972:/usr/include/c++/6/bits/stl_iterator.h **** } // namespace
 973:/usr/include/c++/6/bits/stl_iterator.h **** 
 974:/usr/include/c++/6/bits/stl_iterator.h **** namespace std _GLIBCXX_VISIBILITY(default)
 975:/usr/include/c++/6/bits/stl_iterator.h **** {
 976:/usr/include/c++/6/bits/stl_iterator.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
 977:/usr/include/c++/6/bits/stl_iterator.h **** 
 978:/usr/include/c++/6/bits/stl_iterator.h ****   template<typename _Iterator, typename _Container>
 979:/usr/include/c++/6/bits/stl_iterator.h ****     _Iterator
 980:/usr/include/c++/6/bits/stl_iterator.h ****     __niter_base(__gnu_cxx::__normal_iterator<_Iterator, _Container> __it)
 16284              		.loc 32 980 0
 16285              		.cfi_startproc
 16286 0000 55       		pushq	%rbp
 16287              		.cfi_def_cfa_offset 16
 16288              		.cfi_offset 6, -16
 16289 0001 4889E5   		movq	%rsp, %rbp
 16290              		.cfi_def_cfa_register 6
 16291 0004 4883EC10 		subq	$16, %rsp
 16292 0008 48897DF8 		movq	%rdi, -8(%rbp)
 981:/usr/include/c++/6/bits/stl_iterator.h ****     { return __it.base(); }
 16293              		.loc 32 981 0
 16294 000c 488D45F8 		leaq	-8(%rbp), %rax
 16295 0010 4889C7   		movq	%rax, %rdi
 16296 0013 E8000000 		call	_ZNK9__gnu_cxx17__normal_iteratorIPN2gr5tag_tESt6vectorIS2_SaIS2_EEE4baseEv
 16296      00
GAS LISTING /tmp/ccvUPO8Q.s 			page 648


 16297 0018 488B00   		movq	(%rax), %rax
 16298 001b C9       		leave
 16299              		.cfi_def_cfa 7, 8
 16300 001c C3       		ret
 16301              		.cfi_endproc
 16302              	.LFE14977:
 16304              		.section	.text._ZSt13__copy_move_aILb1EPN2gr5tag_tES2_ET1_T0_S4_S3_,"axG",@progbits,_ZSt13__copy_m
 16305              		.weak	_ZSt13__copy_move_aILb1EPN2gr5tag_tES2_ET1_T0_S4_S3_
 16307              	_ZSt13__copy_move_aILb1EPN2gr5tag_tES2_ET1_T0_S4_S3_:
 16308              	.LFB14978:
 375:/usr/include/c++/6/bits/stl_algobase.h ****     {
 16309              		.loc 44 375 0
 16310              		.cfi_startproc
 16311 0000 55       		pushq	%rbp
 16312              		.cfi_def_cfa_offset 16
 16313              		.cfi_offset 6, -16
 16314 0001 4889E5   		movq	%rsp, %rbp
 16315              		.cfi_def_cfa_register 6
 16316 0004 4883EC30 		subq	$48, %rsp
 16317 0008 48897DE8 		movq	%rdi, -24(%rbp)
 16318 000c 488975E0 		movq	%rsi, -32(%rbp)
 16319 0010 488955D8 		movq	%rdx, -40(%rbp)
 383:/usr/include/c++/6/bits/stl_algobase.h **** 
 16320              		.loc 44 383 0
 16321 0014 C645FF00 		movb	$0, -1(%rbp)
 386:/usr/include/c++/6/bits/stl_algobase.h ****     }
 16322              		.loc 44 386 0
 16323 0018 488B55D8 		movq	-40(%rbp), %rdx
 16324 001c 488B4DE0 		movq	-32(%rbp), %rcx
 16325 0020 488B45E8 		movq	-24(%rbp), %rax
 16326 0024 4889CE   		movq	%rcx, %rsi
 16327 0027 4889C7   		movq	%rax, %rdi
 16328 002a E8000000 		call	_ZNSt11__copy_moveILb1ELb0ESt26random_access_iterator_tagE8__copy_mIPN2gr5tag_tES5_EET0_T_S7_
 16328      00
 387:/usr/include/c++/6/bits/stl_algobase.h **** 
 16329              		.loc 44 387 0
 16330 002f C9       		leave
 16331              		.cfi_def_cfa 7, 8
 16332 0030 C3       		ret
 16333              		.cfi_endproc
 16334              	.LFE14978:
 16336              		.section	.text._ZN5boost8functionIFvNS_13intrusive_ptrIN3pmt8pmt_baseEEEEED2Ev,"axG",@progbits,_ZN
 16337              		.align 2
 16338              		.weak	_ZN5boost8functionIFvNS_13intrusive_ptrIN3pmt8pmt_baseEEEEED2Ev
 16340              	_ZN5boost8functionIFvNS_13intrusive_ptrIN3pmt8pmt_baseEEEEED2Ev:
 16341              	.LFB15047:
 773:/usr/include/boost/function/function_template.hpp **** 
 774:/usr/include/boost/function/function_template.hpp ****     // The distinction between when to use BOOST_FUNCTION_FUNCTION and
 775:/usr/include/boost/function/function_template.hpp ****     // when to use self_type is obnoxious. MSVC cannot handle self_type as
 776:/usr/include/boost/function/function_template.hpp ****     // the return type of these assignment operators, but Borland C++ cannot
 777:/usr/include/boost/function/function_template.hpp ****     // handle BOOST_FUNCTION_FUNCTION as the type of the temporary to
 778:/usr/include/boost/function/function_template.hpp ****     // construct.
 779:/usr/include/boost/function/function_template.hpp ****     template<typename Functor>
 780:/usr/include/boost/function/function_template.hpp **** #ifndef BOOST_NO_SFINAE
 781:/usr/include/boost/function/function_template.hpp ****     typename boost::enable_if_c<
 782:/usr/include/boost/function/function_template.hpp ****                   !(is_integral<Functor>::value),
 783:/usr/include/boost/function/function_template.hpp ****                BOOST_FUNCTION_FUNCTION&>::type
GAS LISTING /tmp/ccvUPO8Q.s 			page 649


 784:/usr/include/boost/function/function_template.hpp **** #else
 785:/usr/include/boost/function/function_template.hpp ****     BOOST_FUNCTION_FUNCTION&
 786:/usr/include/boost/function/function_template.hpp **** #endif
 787:/usr/include/boost/function/function_template.hpp ****     operator=(Functor BOOST_FUNCTION_TARGET_FIX(const &) f)
 788:/usr/include/boost/function/function_template.hpp ****     {
 789:/usr/include/boost/function/function_template.hpp ****       this->clear();
 790:/usr/include/boost/function/function_template.hpp ****       BOOST_TRY  {
 791:/usr/include/boost/function/function_template.hpp ****         this->assign_to(f);
 792:/usr/include/boost/function/function_template.hpp ****       } BOOST_CATCH (...) {
 793:/usr/include/boost/function/function_template.hpp ****         vtable = 0;
 794:/usr/include/boost/function/function_template.hpp ****         BOOST_RETHROW;
 795:/usr/include/boost/function/function_template.hpp ****       }
 796:/usr/include/boost/function/function_template.hpp ****       BOOST_CATCH_END
 797:/usr/include/boost/function/function_template.hpp ****       return *this;
 798:/usr/include/boost/function/function_template.hpp ****     }
 799:/usr/include/boost/function/function_template.hpp ****     template<typename Functor,typename Allocator>
 800:/usr/include/boost/function/function_template.hpp ****     void assign(Functor BOOST_FUNCTION_TARGET_FIX(const &) f, Allocator a)
 801:/usr/include/boost/function/function_template.hpp ****     {
 802:/usr/include/boost/function/function_template.hpp ****       this->clear();
 803:/usr/include/boost/function/function_template.hpp ****       BOOST_TRY{
 804:/usr/include/boost/function/function_template.hpp ****         this->assign_to_a(f,a);
 805:/usr/include/boost/function/function_template.hpp ****       } BOOST_CATCH (...) {
 806:/usr/include/boost/function/function_template.hpp ****         vtable = 0;
 807:/usr/include/boost/function/function_template.hpp ****         BOOST_RETHROW;
 808:/usr/include/boost/function/function_template.hpp ****       }
 809:/usr/include/boost/function/function_template.hpp ****       BOOST_CATCH_END
 810:/usr/include/boost/function/function_template.hpp ****     }
 811:/usr/include/boost/function/function_template.hpp **** 
 812:/usr/include/boost/function/function_template.hpp **** #ifndef BOOST_NO_SFINAE
 813:/usr/include/boost/function/function_template.hpp ****     BOOST_FUNCTION_FUNCTION& operator=(clear_type*)
 814:/usr/include/boost/function/function_template.hpp ****     {
 815:/usr/include/boost/function/function_template.hpp ****       this->clear();
 816:/usr/include/boost/function/function_template.hpp ****       return *this;
 817:/usr/include/boost/function/function_template.hpp ****     }
 818:/usr/include/boost/function/function_template.hpp **** #else
 819:/usr/include/boost/function/function_template.hpp ****     BOOST_FUNCTION_FUNCTION& operator=(int zero)
 820:/usr/include/boost/function/function_template.hpp ****     {
 821:/usr/include/boost/function/function_template.hpp ****       BOOST_ASSERT(zero == 0);
 822:/usr/include/boost/function/function_template.hpp ****       this->clear();
 823:/usr/include/boost/function/function_template.hpp ****       return *this;
 824:/usr/include/boost/function/function_template.hpp ****     }
 825:/usr/include/boost/function/function_template.hpp **** #endif
 826:/usr/include/boost/function/function_template.hpp **** 
 827:/usr/include/boost/function/function_template.hpp ****     // Assignment from another BOOST_FUNCTION_FUNCTION
 828:/usr/include/boost/function/function_template.hpp ****     BOOST_FUNCTION_FUNCTION& operator=(const BOOST_FUNCTION_FUNCTION& f)
 829:/usr/include/boost/function/function_template.hpp ****     {
 830:/usr/include/boost/function/function_template.hpp ****       if (&f == this)
 831:/usr/include/boost/function/function_template.hpp ****         return *this;
 832:/usr/include/boost/function/function_template.hpp **** 
 833:/usr/include/boost/function/function_template.hpp ****       this->clear();
 834:/usr/include/boost/function/function_template.hpp ****       BOOST_TRY {
 835:/usr/include/boost/function/function_template.hpp ****         this->assign_to_own(f);
 836:/usr/include/boost/function/function_template.hpp ****       } BOOST_CATCH (...) {
 837:/usr/include/boost/function/function_template.hpp ****         vtable = 0;
 838:/usr/include/boost/function/function_template.hpp ****         BOOST_RETHROW;
 839:/usr/include/boost/function/function_template.hpp ****       }
 840:/usr/include/boost/function/function_template.hpp ****       BOOST_CATCH_END
GAS LISTING /tmp/ccvUPO8Q.s 			page 650


 841:/usr/include/boost/function/function_template.hpp ****       return *this;
 842:/usr/include/boost/function/function_template.hpp ****     }
 843:/usr/include/boost/function/function_template.hpp **** 
 844:/usr/include/boost/function/function_template.hpp **** #ifndef BOOST_NO_CXX11_RVALUE_REFERENCES
 845:/usr/include/boost/function/function_template.hpp ****     // Move assignment from another BOOST_FUNCTION_FUNCTION
 846:/usr/include/boost/function/function_template.hpp ****     BOOST_FUNCTION_FUNCTION& operator=(BOOST_FUNCTION_FUNCTION&& f)
 847:/usr/include/boost/function/function_template.hpp ****     {
 848:/usr/include/boost/function/function_template.hpp ****       if (&f == this)
 849:/usr/include/boost/function/function_template.hpp ****         return *this;
 850:/usr/include/boost/function/function_template.hpp **** 
 851:/usr/include/boost/function/function_template.hpp ****       this->clear();
 852:/usr/include/boost/function/function_template.hpp ****       BOOST_TRY {
 853:/usr/include/boost/function/function_template.hpp ****         this->move_assign(f);
 854:/usr/include/boost/function/function_template.hpp ****       } BOOST_CATCH (...) {
 855:/usr/include/boost/function/function_template.hpp ****         vtable = 0;
 856:/usr/include/boost/function/function_template.hpp ****         BOOST_RETHROW;
 857:/usr/include/boost/function/function_template.hpp ****       }
 858:/usr/include/boost/function/function_template.hpp ****       BOOST_CATCH_END
 859:/usr/include/boost/function/function_template.hpp ****       return *this;
 860:/usr/include/boost/function/function_template.hpp ****     }
 861:/usr/include/boost/function/function_template.hpp **** #endif
 862:/usr/include/boost/function/function_template.hpp **** 
 863:/usr/include/boost/function/function_template.hpp ****     void swap(BOOST_FUNCTION_FUNCTION& other)
 864:/usr/include/boost/function/function_template.hpp ****     {
 865:/usr/include/boost/function/function_template.hpp ****       if (&other == this)
 866:/usr/include/boost/function/function_template.hpp ****         return;
 867:/usr/include/boost/function/function_template.hpp **** 
 868:/usr/include/boost/function/function_template.hpp ****       BOOST_FUNCTION_FUNCTION tmp;
 869:/usr/include/boost/function/function_template.hpp ****       tmp.move_assign(*this);
 870:/usr/include/boost/function/function_template.hpp ****       this->move_assign(other);
 871:/usr/include/boost/function/function_template.hpp ****       other.move_assign(tmp);
 872:/usr/include/boost/function/function_template.hpp ****     }
 873:/usr/include/boost/function/function_template.hpp **** 
 874:/usr/include/boost/function/function_template.hpp ****     // Clear out a target, if there is one
 875:/usr/include/boost/function/function_template.hpp ****     void clear()
 876:/usr/include/boost/function/function_template.hpp ****     {
 877:/usr/include/boost/function/function_template.hpp ****       if (vtable) {
 878:/usr/include/boost/function/function_template.hpp ****         if (!this->has_trivial_copy_and_destroy())
 879:/usr/include/boost/function/function_template.hpp ****           get_vtable()->clear(this->functor);
 880:/usr/include/boost/function/function_template.hpp ****         vtable = 0;
 881:/usr/include/boost/function/function_template.hpp ****       }
 882:/usr/include/boost/function/function_template.hpp ****     }
 883:/usr/include/boost/function/function_template.hpp **** 
 884:/usr/include/boost/function/function_template.hpp **** #if (defined __SUNPRO_CC) && (__SUNPRO_CC <= 0x530) && !(defined BOOST_NO_COMPILER_CONFIG)
 885:/usr/include/boost/function/function_template.hpp ****     // Sun C++ 5.3 can't handle the safe_bool idiom, so don't use it
 886:/usr/include/boost/function/function_template.hpp ****     operator bool () const { return !this->empty(); }
 887:/usr/include/boost/function/function_template.hpp **** #else
 888:/usr/include/boost/function/function_template.hpp ****   private:
 889:/usr/include/boost/function/function_template.hpp ****     struct dummy {
 890:/usr/include/boost/function/function_template.hpp ****       void nonnull() {}
 891:/usr/include/boost/function/function_template.hpp ****     };
 892:/usr/include/boost/function/function_template.hpp **** 
 893:/usr/include/boost/function/function_template.hpp ****     typedef void (dummy::*safe_bool)();
 894:/usr/include/boost/function/function_template.hpp **** 
 895:/usr/include/boost/function/function_template.hpp ****   public:
 896:/usr/include/boost/function/function_template.hpp ****     operator safe_bool () const
 897:/usr/include/boost/function/function_template.hpp ****       { return (this->empty())? 0 : &dummy::nonnull; }
GAS LISTING /tmp/ccvUPO8Q.s 			page 651


 898:/usr/include/boost/function/function_template.hpp **** 
 899:/usr/include/boost/function/function_template.hpp ****     bool operator!() const
 900:/usr/include/boost/function/function_template.hpp ****       { return this->empty(); }
 901:/usr/include/boost/function/function_template.hpp **** #endif
 902:/usr/include/boost/function/function_template.hpp **** 
 903:/usr/include/boost/function/function_template.hpp ****   private:
 904:/usr/include/boost/function/function_template.hpp ****     void assign_to_own(const BOOST_FUNCTION_FUNCTION& f)
 905:/usr/include/boost/function/function_template.hpp ****     {
 906:/usr/include/boost/function/function_template.hpp ****       if (!f.empty()) {
 907:/usr/include/boost/function/function_template.hpp ****         this->vtable = f.vtable;
 908:/usr/include/boost/function/function_template.hpp ****         if (this->has_trivial_copy_and_destroy())
 909:/usr/include/boost/function/function_template.hpp ****           this->functor = f.functor;
 910:/usr/include/boost/function/function_template.hpp ****         else
 911:/usr/include/boost/function/function_template.hpp ****           get_vtable()->base.manager(f.functor, this->functor,
 912:/usr/include/boost/function/function_template.hpp ****                                      boost::detail::function::clone_functor_tag);
 913:/usr/include/boost/function/function_template.hpp ****       }
 914:/usr/include/boost/function/function_template.hpp ****     }
 915:/usr/include/boost/function/function_template.hpp **** 
 916:/usr/include/boost/function/function_template.hpp ****     template<typename Functor>
 917:/usr/include/boost/function/function_template.hpp ****     void assign_to(Functor f)
 918:/usr/include/boost/function/function_template.hpp ****     {
 919:/usr/include/boost/function/function_template.hpp ****       using boost::detail::function::vtable_base;
 920:/usr/include/boost/function/function_template.hpp **** 
 921:/usr/include/boost/function/function_template.hpp ****       typedef typename boost::detail::function::get_function_tag<Functor>::type tag;
 922:/usr/include/boost/function/function_template.hpp ****       typedef boost::detail::function::BOOST_FUNCTION_GET_INVOKER<tag> get_invoker;
 923:/usr/include/boost/function/function_template.hpp ****       typedef typename get_invoker::
 924:/usr/include/boost/function/function_template.hpp ****                          template apply<Functor, R BOOST_FUNCTION_COMMA
 925:/usr/include/boost/function/function_template.hpp ****                         BOOST_FUNCTION_TEMPLATE_ARGS>
 926:/usr/include/boost/function/function_template.hpp ****         handler_type;
 927:/usr/include/boost/function/function_template.hpp **** 
 928:/usr/include/boost/function/function_template.hpp ****       typedef typename handler_type::invoker_type invoker_type;
 929:/usr/include/boost/function/function_template.hpp ****       typedef typename handler_type::manager_type manager_type;
 930:/usr/include/boost/function/function_template.hpp **** 
 931:/usr/include/boost/function/function_template.hpp ****       // Note: it is extremely important that this initialization use
 932:/usr/include/boost/function/function_template.hpp ****       // static initialization. Otherwise, we will have a race
 933:/usr/include/boost/function/function_template.hpp ****       // condition here in multi-threaded code. See
 934:/usr/include/boost/function/function_template.hpp ****       // http://thread.gmane.org/gmane.comp.lib.boost.devel/164902/.
 935:/usr/include/boost/function/function_template.hpp ****       static const vtable_type stored_vtable =
 936:/usr/include/boost/function/function_template.hpp ****         { { &manager_type::manage }, &invoker_type::invoke };
 937:/usr/include/boost/function/function_template.hpp **** 
 938:/usr/include/boost/function/function_template.hpp ****       if (stored_vtable.assign_to(f, functor)) {
 939:/usr/include/boost/function/function_template.hpp ****         std::size_t value = reinterpret_cast<std::size_t>(&stored_vtable.base);
 940:/usr/include/boost/function/function_template.hpp ****         // coverity[pointless_expression]: suppress coverity warnings on apparant if(const).
 941:/usr/include/boost/function/function_template.hpp ****         if (boost::has_trivial_copy_constructor<Functor>::value &&
 942:/usr/include/boost/function/function_template.hpp ****             boost::has_trivial_destructor<Functor>::value &&
 943:/usr/include/boost/function/function_template.hpp ****             boost::detail::function::function_allows_small_object_optimization<Functor>::value)
 944:/usr/include/boost/function/function_template.hpp ****           value |= static_cast<std::size_t>(0x01);
 945:/usr/include/boost/function/function_template.hpp ****         vtable = reinterpret_cast<boost::detail::function::vtable_base *>(value);
 946:/usr/include/boost/function/function_template.hpp ****       } else
 947:/usr/include/boost/function/function_template.hpp ****         vtable = 0;
 948:/usr/include/boost/function/function_template.hpp ****     }
 949:/usr/include/boost/function/function_template.hpp **** 
 950:/usr/include/boost/function/function_template.hpp ****     template<typename Functor,typename Allocator>
 951:/usr/include/boost/function/function_template.hpp ****     void assign_to_a(Functor f,Allocator a)
 952:/usr/include/boost/function/function_template.hpp ****     {
 953:/usr/include/boost/function/function_template.hpp ****       using boost::detail::function::vtable_base;
 954:/usr/include/boost/function/function_template.hpp **** 
GAS LISTING /tmp/ccvUPO8Q.s 			page 652


 955:/usr/include/boost/function/function_template.hpp ****       typedef typename boost::detail::function::get_function_tag<Functor>::type tag;
 956:/usr/include/boost/function/function_template.hpp ****       typedef boost::detail::function::BOOST_FUNCTION_GET_INVOKER<tag> get_invoker;
 957:/usr/include/boost/function/function_template.hpp ****       typedef typename get_invoker::
 958:/usr/include/boost/function/function_template.hpp ****                          template apply_a<Functor, R BOOST_FUNCTION_COMMA
 959:/usr/include/boost/function/function_template.hpp ****                          BOOST_FUNCTION_TEMPLATE_ARGS,
 960:/usr/include/boost/function/function_template.hpp ****                          Allocator>
 961:/usr/include/boost/function/function_template.hpp ****         handler_type;
 962:/usr/include/boost/function/function_template.hpp **** 
 963:/usr/include/boost/function/function_template.hpp ****       typedef typename handler_type::invoker_type invoker_type;
 964:/usr/include/boost/function/function_template.hpp ****       typedef typename handler_type::manager_type manager_type;
 965:/usr/include/boost/function/function_template.hpp **** 
 966:/usr/include/boost/function/function_template.hpp ****       // Note: it is extremely important that this initialization use
 967:/usr/include/boost/function/function_template.hpp ****       // static initialization. Otherwise, we will have a race
 968:/usr/include/boost/function/function_template.hpp ****       // condition here in multi-threaded code. See
 969:/usr/include/boost/function/function_template.hpp ****       // http://thread.gmane.org/gmane.comp.lib.boost.devel/164902/.
 970:/usr/include/boost/function/function_template.hpp ****       static const vtable_type stored_vtable =
 971:/usr/include/boost/function/function_template.hpp ****         { { &manager_type::manage }, &invoker_type::invoke };
 972:/usr/include/boost/function/function_template.hpp **** 
 973:/usr/include/boost/function/function_template.hpp ****       if (stored_vtable.assign_to_a(f, functor, a)) {
 974:/usr/include/boost/function/function_template.hpp ****         std::size_t value = reinterpret_cast<std::size_t>(&stored_vtable.base);
 975:/usr/include/boost/function/function_template.hpp ****         // coverity[pointless_expression]: suppress coverity warnings on apparant if(const).
 976:/usr/include/boost/function/function_template.hpp ****         if (boost::has_trivial_copy_constructor<Functor>::value &&
 977:/usr/include/boost/function/function_template.hpp ****             boost::has_trivial_destructor<Functor>::value &&
 978:/usr/include/boost/function/function_template.hpp ****             boost::detail::function::function_allows_small_object_optimization<Functor>::value)
 979:/usr/include/boost/function/function_template.hpp ****           value |= static_cast<std::size_t>(0x01);
 980:/usr/include/boost/function/function_template.hpp ****         vtable = reinterpret_cast<boost::detail::function::vtable_base *>(value);
 981:/usr/include/boost/function/function_template.hpp ****       } else
 982:/usr/include/boost/function/function_template.hpp ****         vtable = 0;
 983:/usr/include/boost/function/function_template.hpp ****     }
 984:/usr/include/boost/function/function_template.hpp **** 
 985:/usr/include/boost/function/function_template.hpp ****     // Moves the value from the specified argument to *this. If the argument
 986:/usr/include/boost/function/function_template.hpp ****     // has its function object allocated on the heap, move_assign will pass
 987:/usr/include/boost/function/function_template.hpp ****     // its buffer to *this, and set the argument's buffer pointer to NULL.
 988:/usr/include/boost/function/function_template.hpp ****     void move_assign(BOOST_FUNCTION_FUNCTION& f)
 989:/usr/include/boost/function/function_template.hpp ****     {
 990:/usr/include/boost/function/function_template.hpp ****       if (&f == this)
 991:/usr/include/boost/function/function_template.hpp ****         return;
 992:/usr/include/boost/function/function_template.hpp **** 
 993:/usr/include/boost/function/function_template.hpp ****       BOOST_TRY {
 994:/usr/include/boost/function/function_template.hpp ****         if (!f.empty()) {
 995:/usr/include/boost/function/function_template.hpp ****           this->vtable = f.vtable;
 996:/usr/include/boost/function/function_template.hpp ****           if (this->has_trivial_copy_and_destroy())
 997:/usr/include/boost/function/function_template.hpp ****             this->functor = f.functor;
 998:/usr/include/boost/function/function_template.hpp ****           else
 999:/usr/include/boost/function/function_template.hpp ****             get_vtable()->base.manager(f.functor, this->functor,
1000:/usr/include/boost/function/function_template.hpp ****                                      boost::detail::function::move_functor_tag);
1001:/usr/include/boost/function/function_template.hpp ****           f.vtable = 0;
1002:/usr/include/boost/function/function_template.hpp ****         } else {
1003:/usr/include/boost/function/function_template.hpp ****           clear();
1004:/usr/include/boost/function/function_template.hpp ****         }
1005:/usr/include/boost/function/function_template.hpp ****       } BOOST_CATCH (...) {
1006:/usr/include/boost/function/function_template.hpp ****         vtable = 0;
1007:/usr/include/boost/function/function_template.hpp ****         BOOST_RETHROW;
1008:/usr/include/boost/function/function_template.hpp ****       }
1009:/usr/include/boost/function/function_template.hpp ****       BOOST_CATCH_END
1010:/usr/include/boost/function/function_template.hpp ****     }
1011:/usr/include/boost/function/function_template.hpp ****   };
GAS LISTING /tmp/ccvUPO8Q.s 			page 653


1012:/usr/include/boost/function/function_template.hpp **** 
1013:/usr/include/boost/function/function_template.hpp ****   template<typename R BOOST_FUNCTION_COMMA BOOST_FUNCTION_TEMPLATE_PARMS>
1014:/usr/include/boost/function/function_template.hpp ****   inline void swap(BOOST_FUNCTION_FUNCTION<
1015:/usr/include/boost/function/function_template.hpp ****                      R BOOST_FUNCTION_COMMA
1016:/usr/include/boost/function/function_template.hpp ****                      BOOST_FUNCTION_TEMPLATE_ARGS
1017:/usr/include/boost/function/function_template.hpp ****                    >& f1,
1018:/usr/include/boost/function/function_template.hpp ****                    BOOST_FUNCTION_FUNCTION<
1019:/usr/include/boost/function/function_template.hpp ****                      R BOOST_FUNCTION_COMMA
1020:/usr/include/boost/function/function_template.hpp ****                      BOOST_FUNCTION_TEMPLATE_ARGS
1021:/usr/include/boost/function/function_template.hpp ****                    >& f2)
1022:/usr/include/boost/function/function_template.hpp ****   {
1023:/usr/include/boost/function/function_template.hpp ****     f1.swap(f2);
1024:/usr/include/boost/function/function_template.hpp ****   }
1025:/usr/include/boost/function/function_template.hpp **** 
1026:/usr/include/boost/function/function_template.hpp **** // Poison comparisons between boost::function objects of the same type.
1027:/usr/include/boost/function/function_template.hpp **** template<typename R BOOST_FUNCTION_COMMA BOOST_FUNCTION_TEMPLATE_PARMS>
1028:/usr/include/boost/function/function_template.hpp ****   void operator==(const BOOST_FUNCTION_FUNCTION<
1029:/usr/include/boost/function/function_template.hpp ****                           R BOOST_FUNCTION_COMMA
1030:/usr/include/boost/function/function_template.hpp ****                           BOOST_FUNCTION_TEMPLATE_ARGS>&,
1031:/usr/include/boost/function/function_template.hpp ****                   const BOOST_FUNCTION_FUNCTION<
1032:/usr/include/boost/function/function_template.hpp ****                           R BOOST_FUNCTION_COMMA
1033:/usr/include/boost/function/function_template.hpp ****                           BOOST_FUNCTION_TEMPLATE_ARGS>&);
1034:/usr/include/boost/function/function_template.hpp **** template<typename R BOOST_FUNCTION_COMMA BOOST_FUNCTION_TEMPLATE_PARMS>
1035:/usr/include/boost/function/function_template.hpp ****   void operator!=(const BOOST_FUNCTION_FUNCTION<
1036:/usr/include/boost/function/function_template.hpp ****                           R BOOST_FUNCTION_COMMA
1037:/usr/include/boost/function/function_template.hpp ****                           BOOST_FUNCTION_TEMPLATE_ARGS>&,
1038:/usr/include/boost/function/function_template.hpp ****                   const BOOST_FUNCTION_FUNCTION<
1039:/usr/include/boost/function/function_template.hpp ****                           R BOOST_FUNCTION_COMMA
1040:/usr/include/boost/function/function_template.hpp ****                           BOOST_FUNCTION_TEMPLATE_ARGS>& );
1041:/usr/include/boost/function/function_template.hpp **** 
1042:/usr/include/boost/function/function_template.hpp **** #if !defined(BOOST_FUNCTION_NO_FUNCTION_TYPE_SYNTAX)
1043:/usr/include/boost/function/function_template.hpp **** 
1044:/usr/include/boost/function/function_template.hpp **** #if BOOST_FUNCTION_NUM_ARGS == 0
1045:/usr/include/boost/function/function_template.hpp **** #define BOOST_FUNCTION_PARTIAL_SPEC R (void)
1046:/usr/include/boost/function/function_template.hpp **** #else
1047:/usr/include/boost/function/function_template.hpp **** #define BOOST_FUNCTION_PARTIAL_SPEC R (BOOST_PP_ENUM_PARAMS(BOOST_FUNCTION_NUM_ARGS,T))
1048:/usr/include/boost/function/function_template.hpp **** #endif
1049:/usr/include/boost/function/function_template.hpp **** 
1050:/usr/include/boost/function/function_template.hpp **** template<typename R BOOST_FUNCTION_COMMA
1051:/usr/include/boost/function/function_template.hpp ****          BOOST_FUNCTION_TEMPLATE_PARMS>
1052:/usr/include/boost/function/function_template.hpp **** class function<BOOST_FUNCTION_PARTIAL_SPEC>
 16342              		.loc 29 1052 0
 16343              		.cfi_startproc
 16344 0000 55       		pushq	%rbp
 16345              		.cfi_def_cfa_offset 16
 16346              		.cfi_offset 6, -16
 16347 0001 4889E5   		movq	%rsp, %rbp
 16348              		.cfi_def_cfa_register 6
 16349 0004 4883EC10 		subq	$16, %rsp
 16350 0008 48897DF8 		movq	%rdi, -8(%rbp)
 16351              	.LBB145:
 16352              		.loc 29 1052 0
 16353 000c 488B45F8 		movq	-8(%rbp), %rax
 16354 0010 4889C7   		movq	%rax, %rdi
 16355 0013 E8000000 		call	_ZN5boost9function1IvNS_13intrusive_ptrIN3pmt8pmt_baseEEEED2Ev
 16355      00
 16356              	.LBE145:
GAS LISTING /tmp/ccvUPO8Q.s 			page 654


 16357 0018 90       		nop
 16358 0019 C9       		leave
 16359              		.cfi_def_cfa 7, 8
 16360 001a C3       		ret
 16361              		.cfi_endproc
 16362              	.LFE15047:
 16364              		.weak	_ZN5boost8functionIFvNS_13intrusive_ptrIN3pmt8pmt_baseEEEEED1Ev
 16365              		.set	_ZN5boost8functionIFvNS_13intrusive_ptrIN3pmt8pmt_baseEEEEED1Ev,_ZN5boost8functionIFvNS_13int
 16366              		.section	.text._ZNSt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS0_8functionIFvS4_EEEED2Ev,"ax
 16367              		.align 2
 16368              		.weak	_ZNSt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS0_8functionIFvS4_EEEED2Ev
 16370              	_ZNSt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS0_8functionIFvS4_EEEED2Ev:
 16371              	.LFB15049:
 194:/usr/include/c++/6/bits/stl_pair.h ****     {
 16372              		.loc 41 194 0
 16373              		.cfi_startproc
 16374 0000 55       		pushq	%rbp
 16375              		.cfi_def_cfa_offset 16
 16376              		.cfi_offset 6, -16
 16377 0001 4889E5   		movq	%rsp, %rbp
 16378              		.cfi_def_cfa_register 6
 16379 0004 4883EC10 		subq	$16, %rsp
 16380 0008 48897DF8 		movq	%rdi, -8(%rbp)
 16381              	.LBB146:
 194:/usr/include/c++/6/bits/stl_pair.h ****     {
 16382              		.loc 41 194 0
 16383 000c 488B45F8 		movq	-8(%rbp), %rax
 16384 0010 4883C008 		addq	$8, %rax
 16385 0014 4889C7   		movq	%rax, %rdi
 16386 0017 E8000000 		call	_ZN5boost8functionIFvNS_13intrusive_ptrIN3pmt8pmt_baseEEEEED1Ev
 16386      00
 16387 001c 488B45F8 		movq	-8(%rbp), %rax
 16388 0020 4889C7   		movq	%rax, %rdi
 16389 0023 E8000000 		call	_ZN5boost13intrusive_ptrIN3pmt8pmt_baseEED1Ev
 16389      00
 16390              	.LBE146:
 16391 0028 90       		nop
 16392 0029 C9       		leave
 16393              		.cfi_def_cfa 7, 8
 16394 002a C3       		ret
 16395              		.cfi_endproc
 16396              	.LFE15049:
 16398              		.weak	_ZNSt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS0_8functionIFvS4_EEEED1Ev
 16399              		.set	_ZNSt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS0_8functionIFvS4_EEEED1Ev,_ZNSt4pairIKN
 16400              		.section	.text._ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKN5boost13intrusive_ptrIN3pm
 16401              		.align 2
 16402              		.weak	_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_bas
 16404              	_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS3
 16405              	.LFB15044:
 16406              		.loc 43 124 0
 16407              		.cfi_startproc
 16408 0000 55       		pushq	%rbp
 16409              		.cfi_def_cfa_offset 16
 16410              		.cfi_offset 6, -16
 16411 0001 4889E5   		movq	%rsp, %rbp
 16412              		.cfi_def_cfa_register 6
 16413 0004 4883EC10 		subq	$16, %rsp
GAS LISTING /tmp/ccvUPO8Q.s 			page 655


 16414 0008 48897DF8 		movq	%rdi, -8(%rbp)
 16415 000c 488975F0 		movq	%rsi, -16(%rbp)
 16416              		.loc 43 124 0
 16417 0010 488B45F0 		movq	-16(%rbp), %rax
 16418 0014 4889C7   		movq	%rax, %rdi
 16419 0017 E8000000 		call	_ZNSt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS0_8functionIFvS4_EEEED1Ev
 16419      00
 16420 001c 90       		nop
 16421 001d C9       		leave
 16422              		.cfi_def_cfa 7, 8
 16423 001e C3       		ret
 16424              		.cfi_endproc
 16425              	.LFE15044:
 16427              		.section	.text._ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKN5boost13intrusive_ptrIN3pm
 16428              		.align 2
 16429              		.weak	_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_bas
 16431              	_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS3
 16432              	.LFB15051:
 109:/usr/include/c++/6/ext/new_allocator.h ****       { ::operator delete(__p); }
 16433              		.loc 43 109 0
 16434              		.cfi_startproc
 16435 0000 55       		pushq	%rbp
 16436              		.cfi_def_cfa_offset 16
 16437              		.cfi_offset 6, -16
 16438 0001 4889E5   		movq	%rsp, %rbp
 16439              		.cfi_def_cfa_register 6
 16440 0004 4883EC20 		subq	$32, %rsp
 16441 0008 48897DF8 		movq	%rdi, -8(%rbp)
 16442 000c 488975F0 		movq	%rsi, -16(%rbp)
 16443 0010 488955E8 		movq	%rdx, -24(%rbp)
 110:/usr/include/c++/6/ext/new_allocator.h **** 
 16444              		.loc 43 110 0
 16445 0014 488B45F0 		movq	-16(%rbp), %rax
 16446 0018 4889C7   		movq	%rax, %rdi
 16447 001b E8000000 		call	_ZdlPv@PLT
 16447      00
 16448 0020 90       		nop
 16449 0021 C9       		leave
 16450              		.cfi_def_cfa 7, 8
 16451 0022 C3       		ret
 16452              		.cfi_endproc
 16453              	.LFE15051:
 16455              		.section	.text._ZNK9__gnu_cxx16__aligned_membufISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEEN
 16456              		.align 2
 16457              		.weak	_ZNK9__gnu_cxx16__aligned_membufISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS2_8funct
 16459              	_ZNK9__gnu_cxx16__aligned_membufISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS2_8functionIFvS
 16460              	.LFB15066:
  72:/usr/include/c++/6/ext/aligned_buffer.h **** 
  73:/usr/include/c++/6/ext/aligned_buffer.h ****       const _Tp*
  74:/usr/include/c++/6/ext/aligned_buffer.h ****       _M_ptr() const noexcept
 16461              		.loc 46 74 0
 16462              		.cfi_startproc
 16463 0000 55       		pushq	%rbp
 16464              		.cfi_def_cfa_offset 16
 16465              		.cfi_offset 6, -16
 16466 0001 4889E5   		movq	%rsp, %rbp
 16467              		.cfi_def_cfa_register 6
GAS LISTING /tmp/ccvUPO8Q.s 			page 656


 16468 0004 4883EC10 		subq	$16, %rsp
 16469 0008 48897DF8 		movq	%rdi, -8(%rbp)
  75:/usr/include/c++/6/ext/aligned_buffer.h ****       { return static_cast<const _Tp*>(_M_addr()); }
 16470              		.loc 46 75 0
 16471 000c 488B45F8 		movq	-8(%rbp), %rax
 16472 0010 4889C7   		movq	%rax, %rdi
 16473 0013 E8000000 		call	_ZNK9__gnu_cxx16__aligned_membufISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS2_8functi
 16473      00
 16474 0018 C9       		leave
 16475              		.cfi_def_cfa 7, 8
 16476 0019 C3       		ret
 16477              		.cfi_endproc
 16478              	.LFE15066:
 16480              		.section	.text._ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKN5boost13intrusive_ptrIN3pm
 16481              		.align 2
 16482              		.weak	_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_bas
 16484              	_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS3
 16485              	.LFB15067:
  99:/usr/include/c++/6/ext/new_allocator.h ****       { 
 16486              		.loc 43 99 0
 16487              		.cfi_startproc
 16488 0000 55       		pushq	%rbp
 16489              		.cfi_def_cfa_offset 16
 16490              		.cfi_offset 6, -16
 16491 0001 4889E5   		movq	%rsp, %rbp
 16492              		.cfi_def_cfa_register 6
 16493 0004 4883EC20 		subq	$32, %rsp
 16494 0008 48897DF8 		movq	%rdi, -8(%rbp)
 16495 000c 488975F0 		movq	%rsi, -16(%rbp)
 16496 0010 488955E8 		movq	%rdx, -24(%rbp)
 101:/usr/include/c++/6/ext/new_allocator.h **** 	  std::__throw_bad_alloc();
 16497              		.loc 43 101 0
 16498 0014 488B45F8 		movq	-8(%rbp), %rax
 16499 0018 4889C7   		movq	%rax, %rdi
 16500 001b E8000000 		call	_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_bas
 16500      00
 16501 0020 483B45F0 		cmpq	-16(%rbp), %rax
 16502 0024 0F92C0   		setb	%al
 16503 0027 84C0     		testb	%al, %al
 16504 0029 7405     		je	.L826
 102:/usr/include/c++/6/ext/new_allocator.h **** 
 16505              		.loc 43 102 0
 16506 002b E8000000 		call	_ZSt17__throw_bad_allocv@PLT
 16506      00
 16507              	.L826:
 104:/usr/include/c++/6/ext/new_allocator.h ****       }
 16508              		.loc 43 104 0
 16509 0030 488B55F0 		movq	-16(%rbp), %rdx
 16510 0034 4889D0   		movq	%rdx, %rax
 16511 0037 48C1E003 		salq	$3, %rax
 16512 003b 4801D0   		addq	%rdx, %rax
 16513 003e 48C1E003 		salq	$3, %rax
 16514 0042 4889C7   		movq	%rax, %rdi
 16515 0045 E8000000 		call	_Znwm@PLT
 16515      00
 105:/usr/include/c++/6/ext/new_allocator.h **** 
 16516              		.loc 43 105 0
GAS LISTING /tmp/ccvUPO8Q.s 			page 657


 16517 004a C9       		leave
 16518              		.cfi_def_cfa 7, 8
 16519 004b C3       		ret
 16520              		.cfi_endproc
 16521              	.LFE15067:
 16523              		.section	.text._ZNSt10_Head_baseILm0ERKN5boost13intrusive_ptrIN3pmt8pmt_baseEEELb0EE7_M_headERS7_,
 16524              		.weak	_ZNSt10_Head_baseILm0ERKN5boost13intrusive_ptrIN3pmt8pmt_baseEEELb0EE7_M_headERS7_
 16526              	_ZNSt10_Head_baseILm0ERKN5boost13intrusive_ptrIN3pmt8pmt_baseEEELb0EE7_M_headERS7_:
 16527              	.LFB15077:
 142:/usr/include/c++/6/tuple **** 
 16528              		.loc 28 142 0
 16529              		.cfi_startproc
 16530 0000 55       		pushq	%rbp
 16531              		.cfi_def_cfa_offset 16
 16532              		.cfi_offset 6, -16
 16533 0001 4889E5   		movq	%rsp, %rbp
 16534              		.cfi_def_cfa_register 6
 16535 0004 48897DF8 		movq	%rdi, -8(%rbp)
 142:/usr/include/c++/6/tuple **** 
 16536              		.loc 28 142 0
 16537 0008 488B45F8 		movq	-8(%rbp), %rax
 16538 000c 488B00   		movq	(%rax), %rax
 16539 000f 5D       		popq	%rbp
 16540              		.cfi_def_cfa 7, 8
 16541 0010 C3       		ret
 16542              		.cfi_endproc
 16543              	.LFE15077:
 16545              		.section	.text._ZNSt11_Tuple_implILm0EJRKN5boost13intrusive_ptrIN3pmt8pmt_baseEEEEE7_M_headERS7_,"
 16546              		.weak	_ZNSt11_Tuple_implILm0EJRKN5boost13intrusive_ptrIN3pmt8pmt_baseEEEEE7_M_headERS7_
 16548              	_ZNSt11_Tuple_implILm0EJRKN5boost13intrusive_ptrIN3pmt8pmt_baseEEEEE7_M_headERS7_:
 16549              	.LFB15076:
 346:/usr/include/c++/6/tuple **** 
 16550              		.loc 28 346 0
 16551              		.cfi_startproc
 16552 0000 55       		pushq	%rbp
 16553              		.cfi_def_cfa_offset 16
 16554              		.cfi_offset 6, -16
 16555 0001 4889E5   		movq	%rsp, %rbp
 16556              		.cfi_def_cfa_register 6
 16557 0004 4883EC10 		subq	$16, %rsp
 16558 0008 48897DF8 		movq	%rdi, -8(%rbp)
 346:/usr/include/c++/6/tuple **** 
 16559              		.loc 28 346 0
 16560 000c 488B45F8 		movq	-8(%rbp), %rax
 16561 0010 4889C7   		movq	%rax, %rdi
 16562 0013 E8000000 		call	_ZNSt10_Head_baseILm0ERKN5boost13intrusive_ptrIN3pmt8pmt_baseEEELb0EE7_M_headERS7_
 16562      00
 16563 0018 C9       		leave
 16564              		.cfi_def_cfa 7, 8
 16565 0019 C3       		ret
 16566              		.cfi_endproc
 16567              	.LFE15076:
 16569              		.section	.text._ZSt7forwardIRKN5boost13intrusive_ptrIN3pmt8pmt_baseEEEEOT_RNSt16remove_referenceIS
 16570              		.weak	_ZSt7forwardIRKN5boost13intrusive_ptrIN3pmt8pmt_baseEEEEOT_RNSt16remove_referenceIS7_E4typeE
 16572              	_ZSt7forwardIRKN5boost13intrusive_ptrIN3pmt8pmt_baseEEEEOT_RNSt16remove_referenceIS7_E4typeE:
 16573              	.LFB15078:
  76:/usr/include/c++/6/bits/move.h ****     { return static_cast<_Tp&&>(__t); }
GAS LISTING /tmp/ccvUPO8Q.s 			page 658


 16574              		.loc 33 76 0
 16575              		.cfi_startproc
 16576 0000 55       		pushq	%rbp
 16577              		.cfi_def_cfa_offset 16
 16578              		.cfi_offset 6, -16
 16579 0001 4889E5   		movq	%rsp, %rbp
 16580              		.cfi_def_cfa_register 6
 16581 0004 48897DF8 		movq	%rdi, -8(%rbp)
  77:/usr/include/c++/6/bits/move.h **** 
 16582              		.loc 33 77 0
 16583 0008 488B45F8 		movq	-8(%rbp), %rax
 16584 000c 5D       		popq	%rbp
 16585              		.cfi_def_cfa 7, 8
 16586 000d C3       		ret
 16587              		.cfi_endproc
 16588              	.LFE15078:
 16590              		.section	.text._ZNSt11_Tuple_implILm0EJRKN5boost13intrusive_ptrIN3pmt8pmt_baseEEEEEC2EOS7_,"axG",@
 16591              		.align 2
 16592              		.weak	_ZNSt11_Tuple_implILm0EJRKN5boost13intrusive_ptrIN3pmt8pmt_baseEEEEEC2EOS7_
 16594              	_ZNSt11_Tuple_implILm0EJRKN5boost13intrusive_ptrIN3pmt8pmt_baseEEEEEC2EOS7_:
 16595              	.LFB15079:
 366:/usr/include/c++/6/tuple ****       noexcept(is_nothrow_move_constructible<_Head>::value)
 16596              		.loc 28 366 0
 16597              		.cfi_startproc
 16598 0000 55       		pushq	%rbp
 16599              		.cfi_def_cfa_offset 16
 16600              		.cfi_offset 6, -16
 16601 0001 4889E5   		movq	%rsp, %rbp
 16602              		.cfi_def_cfa_register 6
 16603 0004 4883EC10 		subq	$16, %rsp
 16604 0008 48897DF8 		movq	%rdi, -8(%rbp)
 16605 000c 488975F0 		movq	%rsi, -16(%rbp)
 16606              	.LBB147:
 368:/usr/include/c++/6/tuple **** 
 16607              		.loc 28 368 0
 16608 0010 488B45F0 		movq	-16(%rbp), %rax
 16609 0014 4889C7   		movq	%rax, %rdi
 16610 0017 E8000000 		call	_ZNSt11_Tuple_implILm0EJRKN5boost13intrusive_ptrIN3pmt8pmt_baseEEEEE7_M_headERS7_
 16610      00
 16611 001c 4889C7   		movq	%rax, %rdi
 16612 001f E8000000 		call	_ZSt7forwardIRKN5boost13intrusive_ptrIN3pmt8pmt_baseEEEEOT_RNSt16remove_referenceIS7_E4typeE
 16612      00
 16613 0024 4889C2   		movq	%rax, %rdx
 16614 0027 488B45F8 		movq	-8(%rbp), %rax
 16615 002b 4889D6   		movq	%rdx, %rsi
 16616 002e 4889C7   		movq	%rax, %rdi
 16617 0031 E8000000 		call	_ZNSt10_Head_baseILm0ERKN5boost13intrusive_ptrIN3pmt8pmt_baseEEELb0EEC2ES6_
 16617      00
 16618              	.LBE147:
 16619 0036 90       		nop
 16620 0037 C9       		leave
 16621              		.cfi_def_cfa 7, 8
 16622 0038 C3       		ret
 16623              		.cfi_endproc
 16624              	.LFE15079:
 16626              		.weak	_ZNSt11_Tuple_implILm0EJRKN5boost13intrusive_ptrIN3pmt8pmt_baseEEEEEC1EOS7_
 16627              		.set	_ZNSt11_Tuple_implILm0EJRKN5boost13intrusive_ptrIN3pmt8pmt_baseEEEEEC1EOS7_,_ZNSt11_Tuple_imp
GAS LISTING /tmp/ccvUPO8Q.s 			page 659


 16628              		.section	.text._ZNSt5tupleIJRKN5boost13intrusive_ptrIN3pmt8pmt_baseEEEEEC2EOS7_,"axG",@progbits,_Z
 16629              		.align 2
 16630              		.weak	_ZNSt5tupleIJRKN5boost13intrusive_ptrIN3pmt8pmt_baseEEEEEC2EOS7_
 16632              	_ZNSt5tupleIJRKN5boost13intrusive_ptrIN3pmt8pmt_baseEEEEEC2EOS7_:
 16633              	.LFB15081:
 608:/usr/include/c++/6/tuple **** 
 609:/usr/include/c++/6/tuple ****       template<typename _Dummy = void,
 610:/usr/include/c++/6/tuple ****                typename enable_if<
 611:/usr/include/c++/6/tuple ****                  _TCC<_Dummy>::template
 612:/usr/include/c++/6/tuple ****                    _ConstructibleTuple<_Elements...>()
 613:/usr/include/c++/6/tuple ****                  && !_TCC<_Dummy>::template
 614:/usr/include/c++/6/tuple ****                    _ImplicitlyConvertibleTuple<_Elements...>()
 615:/usr/include/c++/6/tuple ****                  && (sizeof...(_Elements) >= 1),
 616:/usr/include/c++/6/tuple ****                bool>::type=false>
 617:/usr/include/c++/6/tuple ****       explicit constexpr tuple(const _Elements&... __elements)
 618:/usr/include/c++/6/tuple ****       : _Inherited(__elements...) { }
 619:/usr/include/c++/6/tuple **** 
 620:/usr/include/c++/6/tuple ****       // Shortcut for the cases where constructors taking _UElements...
 621:/usr/include/c++/6/tuple ****       // need to be constrained.
 622:/usr/include/c++/6/tuple ****       template<typename... _UElements> using _TMC =
 623:/usr/include/c++/6/tuple ****                   _TC<(sizeof...(_Elements) == sizeof...(_UElements)),
 624:/usr/include/c++/6/tuple ****                       _Elements...>;
 625:/usr/include/c++/6/tuple **** 
 626:/usr/include/c++/6/tuple ****       template<typename... _UElements, typename
 627:/usr/include/c++/6/tuple **** 	       enable_if<
 628:/usr/include/c++/6/tuple **** 		  _TC<sizeof...(_UElements) == 1, _Elements...>::template
 629:/usr/include/c++/6/tuple **** 		    _NotSameTuple<_UElements...>()
 630:/usr/include/c++/6/tuple **** 		  && _TMC<_UElements...>::template
 631:/usr/include/c++/6/tuple ****                     _MoveConstructibleTuple<_UElements...>()
 632:/usr/include/c++/6/tuple ****                   && _TMC<_UElements...>::template
 633:/usr/include/c++/6/tuple ****                     _ImplicitlyMoveConvertibleTuple<_UElements...>()
 634:/usr/include/c++/6/tuple ****                   && (sizeof...(_Elements) >= 1),
 635:/usr/include/c++/6/tuple ****         bool>::type=true>
 636:/usr/include/c++/6/tuple ****         constexpr tuple(_UElements&&... __elements)
 637:/usr/include/c++/6/tuple ****         : _Inherited(std::forward<_UElements>(__elements)...) { }
 638:/usr/include/c++/6/tuple **** 
 639:/usr/include/c++/6/tuple ****       template<typename... _UElements, typename
 640:/usr/include/c++/6/tuple ****         enable_if<
 641:/usr/include/c++/6/tuple **** 		  _TC<sizeof...(_UElements) == 1, _Elements...>::template
 642:/usr/include/c++/6/tuple **** 		    _NotSameTuple<_UElements...>()
 643:/usr/include/c++/6/tuple **** 		  && _TMC<_UElements...>::template
 644:/usr/include/c++/6/tuple ****                     _MoveConstructibleTuple<_UElements...>()
 645:/usr/include/c++/6/tuple ****                   && !_TMC<_UElements...>::template
 646:/usr/include/c++/6/tuple ****                     _ImplicitlyMoveConvertibleTuple<_UElements...>()
 647:/usr/include/c++/6/tuple ****                   && (sizeof...(_Elements) >= 1),
 648:/usr/include/c++/6/tuple ****         bool>::type=false>
 649:/usr/include/c++/6/tuple ****         explicit constexpr tuple(_UElements&&... __elements)
 650:/usr/include/c++/6/tuple **** 	: _Inherited(std::forward<_UElements>(__elements)...) {	}
 651:/usr/include/c++/6/tuple **** 
 652:/usr/include/c++/6/tuple ****       constexpr tuple(const tuple&) = default;
 653:/usr/include/c++/6/tuple **** 
 654:/usr/include/c++/6/tuple ****       constexpr tuple(tuple&&) = default; 
 16634              		.loc 28 654 0
 16635              		.cfi_startproc
 16636 0000 55       		pushq	%rbp
 16637              		.cfi_def_cfa_offset 16
 16638              		.cfi_offset 6, -16
GAS LISTING /tmp/ccvUPO8Q.s 			page 660


 16639 0001 4889E5   		movq	%rsp, %rbp
 16640              		.cfi_def_cfa_register 6
 16641 0004 4883EC10 		subq	$16, %rsp
 16642 0008 48897DF8 		movq	%rdi, -8(%rbp)
 16643 000c 488975F0 		movq	%rsi, -16(%rbp)
 16644              	.LBB148:
 16645              		.loc 28 654 0
 16646 0010 488B55F0 		movq	-16(%rbp), %rdx
 16647 0014 488B45F8 		movq	-8(%rbp), %rax
 16648 0018 4889D6   		movq	%rdx, %rsi
 16649 001b 4889C7   		movq	%rax, %rdi
 16650 001e E8000000 		call	_ZNSt11_Tuple_implILm0EJRKN5boost13intrusive_ptrIN3pmt8pmt_baseEEEEEC2EOS7_
 16650      00
 16651              	.LBE148:
 16652 0023 90       		nop
 16653 0024 C9       		leave
 16654              		.cfi_def_cfa 7, 8
 16655 0025 C3       		ret
 16656              		.cfi_endproc
 16657              	.LFE15081:
 16659              		.weak	_ZNSt5tupleIJRKN5boost13intrusive_ptrIN3pmt8pmt_baseEEEEEC1EOS7_
 16660              		.set	_ZNSt5tupleIJRKN5boost13intrusive_ptrIN3pmt8pmt_baseEEEEEC1EOS7_,_ZNSt5tupleIJRKN5boost13intr
 16661              		.section	.text._ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKN5boost13intrusive_ptrIN3pm
 16662              		.align 2
 16663              		.weak	_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_bas
 16665              	_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS3
 16666              	.LFB15068:
 119:/usr/include/c++/6/ext/new_allocator.h **** 	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
 16667              		.loc 43 119 0
 16668              		.cfi_startproc
 16669              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 16670              		.cfi_lsda 0x1b,.LLSDA15068
 16671 0000 55       		pushq	%rbp
 16672              		.cfi_def_cfa_offset 16
 16673              		.cfi_offset 6, -16
 16674 0001 4889E5   		movq	%rsp, %rbp
 16675              		.cfi_def_cfa_register 6
 16676 0004 4155     		pushq	%r13
 16677 0006 4154     		pushq	%r12
 16678 0008 53       		pushq	%rbx
 16679 0009 4883EC58 		subq	$88, %rsp
 16680              		.cfi_offset 13, -24
 16681              		.cfi_offset 12, -32
 16682              		.cfi_offset 3, -40
 16683 000d 48897DB8 		movq	%rdi, -72(%rbp)
 16684 0011 488975B0 		movq	%rsi, -80(%rbp)
 16685 0015 488955A8 		movq	%rdx, -88(%rbp)
 16686 0019 48894DA0 		movq	%rcx, -96(%rbp)
 16687 001d 4C894598 		movq	%r8, -104(%rbp)
 120:/usr/include/c++/6/ext/new_allocator.h **** 
 16688              		.loc 43 120 0
 16689 0021 488B45A8 		movq	-88(%rbp), %rax
 16690 0025 4889C7   		movq	%rax, %rdi
 16691 0028 E8000000 		call	_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE
 16691      00
 16692 002d 448865CF 		movb	%r12b, -49(%rbp)
 16693 0031 488B45A0 		movq	-96(%rbp), %rax
GAS LISTING /tmp/ccvUPO8Q.s 			page 661


 16694 0035 4889C7   		movq	%rax, %rdi
 16695 0038 E8000000 		call	_ZSt7forwardISt5tupleIJRKN5boost13intrusive_ptrIN3pmt8pmt_baseEEEEEEOT_RNSt16remove_reference
 16695      00
 16696 003d 4889C2   		movq	%rax, %rdx
 16697 0040 488D45D0 		leaq	-48(%rbp), %rax
 16698 0044 4889D6   		movq	%rdx, %rsi
 16699 0047 4889C7   		movq	%rax, %rdi
 16700 004a E8000000 		call	_ZNSt5tupleIJRKN5boost13intrusive_ptrIN3pmt8pmt_baseEEEEEC1EOS7_
 16700      00
 16701 004f 4C8D6DD0 		leaq	-48(%rbp), %r13
 16702 0053 488B4598 		movq	-104(%rbp), %rax
 16703 0057 4889C7   		movq	%rax, %rdi
 16704 005a E8000000 		call	_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE
 16704      00
 16705 005f 885DDF   		movb	%bl, -33(%rbp)
 16706 0062 4C8B65B0 		movq	-80(%rbp), %r12
 16707 0066 4C89E6   		movq	%r12, %rsi
 16708 0069 BF280000 		movl	$40, %edi
 16708      00
 16709 006e E8000000 		call	_ZnwmPv
 16709      00
 16710 0073 4889C3   		movq	%rax, %rbx
 16711 0076 4885DB   		testq	%rbx, %rbx
 16712 0079 7434     		je	.L841
 120:/usr/include/c++/6/ext/new_allocator.h **** 
 16713              		.loc 43 120 0 is_stmt 0 discriminator 1
 16714 007b 0FB645DF 		movzbl	-33(%rbp), %eax
 16715 007f 50       		pushq	%rax
 16716 0080 0FB645CF 		movzbl	-49(%rbp), %eax
 16717 0084 50       		pushq	%rax
 16718 0085 4C89EE   		movq	%r13, %rsi
 16719 0088 4889DF   		movq	%rbx, %rdi
 16720              	.LEHB101:
 16721              		.cfi_escape 0x2e,0x10
 16722 008b E8000000 		call	_ZNSt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS0_8functionIFvS4_EEEEC1IJRS5_EJEEESt21p
 16722      00
 16723              	.LEHE101:
 16724 0090 4883C410 		addq	$16, %rsp
 16725 0094 EB19     		jmp	.L841
 16726              	.L840:
 16727 0096 4989C5   		movq	%rax, %r13
 120:/usr/include/c++/6/ext/new_allocator.h **** 
 16728              		.loc 43 120 0
 16729 0099 4C89E6   		movq	%r12, %rsi
 16730 009c 4889DF   		movq	%rbx, %rdi
 16731 009f E8000000 		call	_ZdlPvS_
 16731      00
 16732 00a4 4C89E8   		movq	%r13, %rax
 16733 00a7 4889C7   		movq	%rax, %rdi
 16734              	.LEHB102:
 16735 00aa E8000000 		call	_Unwind_Resume@PLT
 16735      00
 16736              	.LEHE102:
 16737              	.L841:
 16738 00af 90       		nop
 16739 00b0 488D65E8 		leaq	-24(%rbp), %rsp
 16740 00b4 5B       		popq	%rbx
GAS LISTING /tmp/ccvUPO8Q.s 			page 662


 16741 00b5 415C     		popq	%r12
 16742 00b7 415D     		popq	%r13
 16743 00b9 5D       		popq	%rbp
 16744              		.cfi_def_cfa 7, 8
 16745 00ba C3       		ret
 16746              		.cfi_endproc
 16747              	.LFE15068:
 16748              		.section	.gcc_except_table
 16749              	.LLSDA15068:
 16750 0264 FF       		.byte	0xff
 16751 0265 FF       		.byte	0xff
 16752 0266 01       		.byte	0x1
 16753 0267 0B       		.uleb128 .LLSDACSE15068-.LLSDACSB15068
 16754              	.LLSDACSB15068:
 16755 0268 8B01     		.uleb128 .LEHB101-.LFB15068
 16756 026a 05       		.uleb128 .LEHE101-.LEHB101
 16757 026b 9601     		.uleb128 .L840-.LFB15068
 16758 026d 00       		.uleb128 0
 16759 026e AA01     		.uleb128 .LEHB102-.LFB15068
 16760 0270 05       		.uleb128 .LEHE102-.LEHB102
 16761 0271 00       		.uleb128 0
 16762 0272 00       		.uleb128 0
 16763              	.LLSDACSE15068:
 16764              		.section	.text._ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKN5boost13intrusive_ptrIN3pm
 16766              		.section	.text._ZNK9__gnu_cxx16__aligned_membufISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEES
 16767              		.align 2
 16768              		.weak	_ZNK9__gnu_cxx16__aligned_membufISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt5dequeIS
 16770              	_ZNK9__gnu_cxx16__aligned_membufISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt5dequeIS6_SaIS6
 16771              	.LFB15085:
  74:/usr/include/c++/6/ext/aligned_buffer.h ****       { return static_cast<const _Tp*>(_M_addr()); }
 16772              		.loc 46 74 0 is_stmt 1
 16773              		.cfi_startproc
 16774 0000 55       		pushq	%rbp
 16775              		.cfi_def_cfa_offset 16
 16776              		.cfi_offset 6, -16
 16777 0001 4889E5   		movq	%rsp, %rbp
 16778              		.cfi_def_cfa_register 6
 16779 0004 4883EC10 		subq	$16, %rsp
 16780 0008 48897DF8 		movq	%rdi, -8(%rbp)
 16781              		.loc 46 75 0
 16782 000c 488B45F8 		movq	-8(%rbp), %rax
 16783 0010 4889C7   		movq	%rax, %rdi
 16784 0013 E8000000 		call	_ZNK9__gnu_cxx16__aligned_membufISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt5dequeIS6
 16784      00
 16785 0018 C9       		leave
 16786              		.cfi_def_cfa 7, 8
 16787 0019 C3       		ret
 16788              		.cfi_endproc
 16789              	.LFE15085:
 16791              		.section	.text._ZN9__gnu_cxx13new_allocatorIiE8allocateEmPKv,"axG",@progbits,_ZN9__gnu_cxx13new_al
 16792              		.align 2
 16793              		.weak	_ZN9__gnu_cxx13new_allocatorIiE8allocateEmPKv
 16795              	_ZN9__gnu_cxx13new_allocatorIiE8allocateEmPKv:
 16796              	.LFB15148:
  99:/usr/include/c++/6/ext/new_allocator.h ****       { 
 16797              		.loc 43 99 0
 16798              		.cfi_startproc
GAS LISTING /tmp/ccvUPO8Q.s 			page 663


 16799 0000 55       		pushq	%rbp
 16800              		.cfi_def_cfa_offset 16
 16801              		.cfi_offset 6, -16
 16802 0001 4889E5   		movq	%rsp, %rbp
 16803              		.cfi_def_cfa_register 6
 16804 0004 4883EC20 		subq	$32, %rsp
 16805 0008 48897DF8 		movq	%rdi, -8(%rbp)
 16806 000c 488975F0 		movq	%rsi, -16(%rbp)
 16807 0010 488955E8 		movq	%rdx, -24(%rbp)
 101:/usr/include/c++/6/ext/new_allocator.h **** 	  std::__throw_bad_alloc();
 16808              		.loc 43 101 0
 16809 0014 488B45F8 		movq	-8(%rbp), %rax
 16810 0018 4889C7   		movq	%rax, %rdi
 16811 001b E8000000 		call	_ZNK9__gnu_cxx13new_allocatorIiE8max_sizeEv
 16811      00
 16812 0020 483B45F0 		cmpq	-16(%rbp), %rax
 16813 0024 0F92C0   		setb	%al
 16814 0027 84C0     		testb	%al, %al
 16815 0029 7405     		je	.L845
 102:/usr/include/c++/6/ext/new_allocator.h **** 
 16816              		.loc 43 102 0
 16817 002b E8000000 		call	_ZSt17__throw_bad_allocv@PLT
 16817      00
 16818              	.L845:
 104:/usr/include/c++/6/ext/new_allocator.h ****       }
 16819              		.loc 43 104 0
 16820 0030 488B45F0 		movq	-16(%rbp), %rax
 16821 0034 48C1E002 		salq	$2, %rax
 16822 0038 4889C7   		movq	%rax, %rdi
 16823 003b E8000000 		call	_Znwm@PLT
 16823      00
 105:/usr/include/c++/6/ext/new_allocator.h **** 
 16824              		.loc 43 105 0
 16825 0040 C9       		leave
 16826              		.cfi_def_cfa 7, 8
 16827 0041 C3       		ret
 16828              		.cfi_endproc
 16829              	.LFE15148:
 16831              		.section	.text._ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEET_S8_,"axG
 16832              		.weak	_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEET_S8_
 16834              	_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEET_S8_:
 16835              	.LFB15149:
 408:/usr/include/c++/6/bits/cpp_type_traits.h ****     { return __it; }
 16836              		.loc 47 408 0
 16837              		.cfi_startproc
 16838 0000 55       		pushq	%rbp
 16839              		.cfi_def_cfa_offset 16
 16840              		.cfi_offset 6, -16
 16841 0001 4889E5   		movq	%rsp, %rbp
 16842              		.cfi_def_cfa_register 6
 16843 0004 48897DF8 		movq	%rdi, -8(%rbp)
 16844              		.loc 47 409 0
 16845 0008 488B45F8 		movq	-8(%rbp), %rax
 16846 000c 5D       		popq	%rbp
 16847              		.cfi_def_cfa 7, 8
 16848 000d C3       		ret
 16849              		.cfi_endproc
GAS LISTING /tmp/ccvUPO8Q.s 			page 664


 16850              	.LFE15149:
 16852              		.section	.text._ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEPiET1
 16853              		.weak	_ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEPiET1_T0_SA_S9
 16855              	_ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEPiET1_T0_SA_S9_:
 16856              	.LFB15150:
 420:/usr/include/c++/6/bits/stl_algobase.h ****     {
 16857              		.loc 44 420 0
 16858              		.cfi_startproc
 16859 0000 55       		pushq	%rbp
 16860              		.cfi_def_cfa_offset 16
 16861              		.cfi_offset 6, -16
 16862 0001 4889E5   		movq	%rsp, %rbp
 16863              		.cfi_def_cfa_register 6
 16864 0004 4154     		pushq	%r12
 16865 0006 53       		pushq	%rbx
 16866 0007 4883EC20 		subq	$32, %rsp
 16867              		.cfi_offset 12, -24
 16868              		.cfi_offset 3, -32
 16869 000b 48897DE8 		movq	%rdi, -24(%rbp)
 16870 000f 488975E0 		movq	%rsi, -32(%rbp)
 16871 0013 488955D8 		movq	%rdx, -40(%rbp)
 422:/usr/include/c++/6/bits/stl_algobase.h **** 					     std::__niter_base(__last),
 16872              		.loc 44 422 0
 16873 0017 488B45D8 		movq	-40(%rbp), %rax
 16874 001b 4889C7   		movq	%rax, %rdi
 16875 001e E8000000 		call	_ZSt12__niter_baseIPiET_S1_
 16875      00
 16876 0023 4989C4   		movq	%rax, %r12
 16877 0026 488B45E0 		movq	-32(%rbp), %rax
 16878 002a 4889C7   		movq	%rax, %rdi
 16879 002d E8000000 		call	_ZSt12__niter_baseIPKiSt6vectorIiSaIiEEET_N9__gnu_cxx17__normal_iteratorIS5_T0_EE
 16879      00
 16880 0032 4889C3   		movq	%rax, %rbx
 16881 0035 488B45E8 		movq	-24(%rbp), %rax
 16882 0039 4889C7   		movq	%rax, %rdi
 16883 003c E8000000 		call	_ZSt12__niter_baseIPKiSt6vectorIiSaIiEEET_N9__gnu_cxx17__normal_iteratorIS5_T0_EE
 16883      00
 424:/usr/include/c++/6/bits/stl_algobase.h ****     }
 16884              		.loc 44 424 0
 16885 0041 4C89E2   		movq	%r12, %rdx
 16886 0044 4889DE   		movq	%rbx, %rsi
 16887 0047 4889C7   		movq	%rax, %rdi
 16888 004a E8000000 		call	_ZSt13__copy_move_aILb0EPKiPiET1_T0_S4_S3_
 16888      00
 425:/usr/include/c++/6/bits/stl_algobase.h **** 
 16889              		.loc 44 425 0
 16890 004f 4883C420 		addq	$32, %rsp
 16891 0053 5B       		popq	%rbx
 16892 0054 415C     		popq	%r12
 16893 0056 5D       		popq	%rbp
 16894              		.cfi_def_cfa 7, 8
 16895 0057 C3       		ret
 16896              		.cfi_endproc
 16897              	.LFE15150:
 16899              		.section	.text._ZSt4moveIRN2gr5tag_tEEONSt16remove_referenceIT_E4typeEOS4_,"axG",@progbits,_ZSt4mo
 16900              		.weak	_ZSt4moveIRN2gr5tag_tEEONSt16remove_referenceIT_E4typeEOS4_
 16902              	_ZSt4moveIRN2gr5tag_tEEONSt16remove_referenceIT_E4typeEOS4_:
GAS LISTING /tmp/ccvUPO8Q.s 			page 665


 16903              	.LFB15152:
 101:/usr/include/c++/6/bits/move.h ****     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 16904              		.loc 33 101 0
 16905              		.cfi_startproc
 16906 0000 55       		pushq	%rbp
 16907              		.cfi_def_cfa_offset 16
 16908              		.cfi_offset 6, -16
 16909 0001 4889E5   		movq	%rsp, %rbp
 16910              		.cfi_def_cfa_register 6
 16911 0004 48897DF8 		movq	%rdi, -8(%rbp)
 16912              		.loc 33 102 0
 16913 0008 488B45F8 		movq	-8(%rbp), %rax
 16914 000c 5D       		popq	%rbp
 16915              		.cfi_def_cfa 7, 8
 16916 000d C3       		ret
 16917              		.cfi_endproc
 16918              	.LFE15152:
 16920              		.section	.text._ZNSt11__copy_moveILb1ELb0ESt26random_access_iterator_tagE8__copy_mIPN2gr5tag_tES5_
 16921              		.weak	_ZNSt11__copy_moveILb1ELb0ESt26random_access_iterator_tagE8__copy_mIPN2gr5tag_tES5_EET0_T_S7
 16923              	_ZNSt11__copy_moveILb1ELb0ESt26random_access_iterator_tagE8__copy_mIPN2gr5tag_tES5_EET0_T_S7_S6_:
 16924              	.LFB15151:
 338:/usr/include/c++/6/bits/stl_algobase.h ****         { 
 16925              		.loc 44 338 0
 16926              		.cfi_startproc
 16927 0000 55       		pushq	%rbp
 16928              		.cfi_def_cfa_offset 16
 16929              		.cfi_offset 6, -16
 16930 0001 4889E5   		movq	%rsp, %rbp
 16931              		.cfi_def_cfa_register 6
 16932 0004 4883EC30 		subq	$48, %rsp
 16933 0008 48897DE8 		movq	%rdi, -24(%rbp)
 16934 000c 488975E0 		movq	%rsi, -32(%rbp)
 16935 0010 488955D8 		movq	%rdx, -40(%rbp)
 16936              	.LBB149:
 341:/usr/include/c++/6/bits/stl_algobase.h **** 	    {
 16937              		.loc 44 341 0
 16938 0014 488B55E0 		movq	-32(%rbp), %rdx
 16939 0018 488B45E8 		movq	-24(%rbp), %rax
 16940 001c 4829C2   		subq	%rax, %rdx
 16941 001f 4889D0   		movq	%rdx, %rax
 16942 0022 48C1F803 		sarq	$3, %rax
 16943 0026 4889C2   		movq	%rax, %rdx
 16944 0029 48B8B76D 		movabsq	$7905747460161236407, %rax
 16944      DBB66DDB 
 16944      B66D
 16945 0033 480FAFC2 		imulq	%rdx, %rax
 16946 0037 488945F8 		movq	%rax, -8(%rbp)
 16947              	.L855:
 341:/usr/include/c++/6/bits/stl_algobase.h **** 	    {
 16948              		.loc 44 341 0 is_stmt 0 discriminator 3
 16949 003b 48837DF8 		cmpq	$0, -8(%rbp)
 16949      00
 16950 0040 7E2F     		jle	.L854
 343:/usr/include/c++/6/bits/stl_algobase.h **** 	      ++__first;
 16951              		.loc 44 343 0 is_stmt 1 discriminator 2
 16952 0042 488B45E8 		movq	-24(%rbp), %rax
 16953 0046 4889C7   		movq	%rax, %rdi
GAS LISTING /tmp/ccvUPO8Q.s 			page 666


 16954 0049 E8000000 		call	_ZSt4moveIRN2gr5tag_tEEONSt16remove_referenceIT_E4typeEOS4_
 16954      00
 16955 004e 4889C2   		movq	%rax, %rdx
 16956 0051 488B45D8 		movq	-40(%rbp), %rax
 16957 0055 4889D6   		movq	%rdx, %rsi
 16958 0058 4889C7   		movq	%rax, %rdi
 16959 005b E8000000 		call	_ZN2gr5tag_taSERKS0_
 16959      00
 344:/usr/include/c++/6/bits/stl_algobase.h **** 	      ++__result;
 16960              		.loc 44 344 0 discriminator 2
 16961 0060 488345E8 		addq	$56, -24(%rbp)
 16961      38
 345:/usr/include/c++/6/bits/stl_algobase.h **** 	    }
 16962              		.loc 44 345 0 discriminator 2
 16963 0065 488345D8 		addq	$56, -40(%rbp)
 16963      38
 341:/usr/include/c++/6/bits/stl_algobase.h **** 	    {
 16964              		.loc 44 341 0 discriminator 2
 16965 006a 48836DF8 		subq	$1, -8(%rbp)
 16965      01
 16966 006f EBCA     		jmp	.L855
 16967              	.L854:
 16968              	.LBE149:
 347:/usr/include/c++/6/bits/stl_algobase.h **** 	}
 16969              		.loc 44 347 0
 16970 0071 488B45D8 		movq	-40(%rbp), %rax
 348:/usr/include/c++/6/bits/stl_algobase.h ****     };
 16971              		.loc 44 348 0
 16972 0075 C9       		leave
 16973              		.cfi_def_cfa 7, 8
 16974 0076 C3       		ret
 16975              		.cfi_endproc
 16976              	.LFE15151:
 16978              		.section	.text._ZN5boost9function1IvNS_13intrusive_ptrIN3pmt8pmt_baseEEEED2Ev,"axG",@progbits,_ZN5
 16979              		.align 2
 16980              		.weak	_ZN5boost9function1IvNS_13intrusive_ptrIN3pmt8pmt_baseEEEED2Ev
 16982              	_ZN5boost9function1IvNS_13intrusive_ptrIN3pmt8pmt_baseEEEED2Ev:
 16983              	.LFB15169:
 763:/usr/include/boost/function/function_template.hpp **** 
 16984              		.loc 29 763 0
 16985              		.cfi_startproc
 16986              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 16987              		.cfi_lsda 0x1b,.LLSDA15169
 16988 0000 55       		pushq	%rbp
 16989              		.cfi_def_cfa_offset 16
 16990              		.cfi_offset 6, -16
 16991 0001 4889E5   		movq	%rsp, %rbp
 16992              		.cfi_def_cfa_register 6
 16993 0004 4883EC10 		subq	$16, %rsp
 16994 0008 48897DF8 		movq	%rdi, -8(%rbp)
 16995              	.LBB150:
 763:/usr/include/boost/function/function_template.hpp **** 
 16996              		.loc 29 763 0
 16997 000c 488B45F8 		movq	-8(%rbp), %rax
 16998 0010 4889C7   		movq	%rax, %rdi
 16999 0013 E8000000 		call	_ZN5boost9function1IvNS_13intrusive_ptrIN3pmt8pmt_baseEEEE5clearEv
 16999      00
GAS LISTING /tmp/ccvUPO8Q.s 			page 667


 17000              	.LBE150:
 17001 0018 90       		nop
 17002 0019 C9       		leave
 17003              		.cfi_def_cfa 7, 8
 17004 001a C3       		ret
 17005              		.cfi_endproc
 17006              	.LFE15169:
 17007              		.section	.gcc_except_table
 17008              	.LLSDA15169:
 17009 0273 FF       		.byte	0xff
 17010 0274 FF       		.byte	0xff
 17011 0275 01       		.byte	0x1
 17012 0276 00       		.uleb128 .LLSDACSE15169-.LLSDACSB15169
 17013              	.LLSDACSB15169:
 17014              	.LLSDACSE15169:
 17015              		.section	.text._ZN5boost9function1IvNS_13intrusive_ptrIN3pmt8pmt_baseEEEED2Ev,"axG",@progbits,_ZN5
 17017              		.weak	_ZN5boost9function1IvNS_13intrusive_ptrIN3pmt8pmt_baseEEEED1Ev
 17018              		.set	_ZN5boost9function1IvNS_13intrusive_ptrIN3pmt8pmt_baseEEEED1Ev,_ZN5boost9function1IvNS_13intr
 17019              		.section	.text._ZNK9__gnu_cxx16__aligned_membufISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEEN
 17020              		.align 2
 17021              		.weak	_ZNK9__gnu_cxx16__aligned_membufISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS2_8funct
 17023              	_ZNK9__gnu_cxx16__aligned_membufISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS2_8functionIFvS
 17024              	.LFB15175:
  66:/usr/include/c++/6/ext/aligned_buffer.h ****       { return static_cast<const void*>(&_M_storage); }
 17025              		.loc 46 66 0
 17026              		.cfi_startproc
 17027 0000 55       		pushq	%rbp
 17028              		.cfi_def_cfa_offset 16
 17029              		.cfi_offset 6, -16
 17030 0001 4889E5   		movq	%rsp, %rbp
 17031              		.cfi_def_cfa_register 6
 17032 0004 48897DF8 		movq	%rdi, -8(%rbp)
  67:/usr/include/c++/6/ext/aligned_buffer.h **** 
 17033              		.loc 46 67 0
 17034 0008 488B45F8 		movq	-8(%rbp), %rax
 17035 000c 5D       		popq	%rbp
 17036              		.cfi_def_cfa 7, 8
 17037 000d C3       		ret
 17038              		.cfi_endproc
 17039              	.LFE15175:
 17041              		.section	.text._ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKN5boost13intrusive_ptrIN3p
 17042              		.align 2
 17043              		.weak	_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_ba
 17045              	_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS
 17046              	.LFB15176:
 113:/usr/include/c++/6/ext/new_allocator.h ****       { return size_t(-1) / sizeof(_Tp); }
 17047              		.loc 43 113 0
 17048              		.cfi_startproc
 17049 0000 55       		pushq	%rbp
 17050              		.cfi_def_cfa_offset 16
 17051              		.cfi_offset 6, -16
 17052 0001 4889E5   		movq	%rsp, %rbp
 17053              		.cfi_def_cfa_register 6
 17054 0004 48897DF8 		movq	%rdi, -8(%rbp)
 114:/usr/include/c++/6/ext/new_allocator.h **** 
 17055              		.loc 43 114 0
 17056 0008 48B88EE3 		movabsq	$256204778801521550, %rax
GAS LISTING /tmp/ccvUPO8Q.s 			page 668


 17056      388EE338 
 17056      8E03
 17057 0012 5D       		popq	%rbp
 17058              		.cfi_def_cfa 7, 8
 17059 0013 C3       		ret
 17060              		.cfi_endproc
 17061              	.LFE15176:
 17063              		.section	.text._ZNSt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS0_8functionIFvS4_EEEEC2IJRS5_
 17064              		.align 2
 17065              		.weak	_ZNSt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS0_8functionIFvS4_EEEEC2IJRS5_EJEEESt21
 17067              	_ZNSt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS0_8functionIFvS4_EEEEC2IJRS5_EJEEESt21piecewi
 17068              	.LFB15178:
 655:/usr/include/c++/6/tuple **** 
 656:/usr/include/c++/6/tuple ****       // Shortcut for the cases where constructors taking tuples
 657:/usr/include/c++/6/tuple ****       // must avoid creating temporaries.
 658:/usr/include/c++/6/tuple ****       template<typename _Dummy> using _TNTC =
 659:/usr/include/c++/6/tuple ****         _TC<is_same<_Dummy, void>::value && sizeof...(_Elements) == 1,
 660:/usr/include/c++/6/tuple ****             _Elements...>;
 661:/usr/include/c++/6/tuple **** 
 662:/usr/include/c++/6/tuple ****       template<typename... _UElements, typename _Dummy = void, typename
 663:/usr/include/c++/6/tuple ****         enable_if<_TMC<_UElements...>::template
 664:/usr/include/c++/6/tuple ****                     _ConstructibleTuple<_UElements...>()
 665:/usr/include/c++/6/tuple ****                   && _TMC<_UElements...>::template
 666:/usr/include/c++/6/tuple ****                     _ImplicitlyConvertibleTuple<_UElements...>()
 667:/usr/include/c++/6/tuple ****                   && _TNTC<_Dummy>::template
 668:/usr/include/c++/6/tuple ****                     _NonNestedTuple<const tuple<_UElements...>&>(),
 669:/usr/include/c++/6/tuple ****         bool>::type=true>
 670:/usr/include/c++/6/tuple ****         constexpr tuple(const tuple<_UElements...>& __in)
 671:/usr/include/c++/6/tuple ****         : _Inherited(static_cast<const _Tuple_impl<0, _UElements...>&>(__in))
 672:/usr/include/c++/6/tuple ****         { }
 673:/usr/include/c++/6/tuple **** 
 674:/usr/include/c++/6/tuple ****       template<typename... _UElements, typename _Dummy = void, typename
 675:/usr/include/c++/6/tuple ****         enable_if<_TMC<_UElements...>::template
 676:/usr/include/c++/6/tuple ****                     _ConstructibleTuple<_UElements...>()
 677:/usr/include/c++/6/tuple ****                   && !_TMC<_UElements...>::template
 678:/usr/include/c++/6/tuple ****                     _ImplicitlyConvertibleTuple<_UElements...>()
 679:/usr/include/c++/6/tuple ****                   && _TNTC<_Dummy>::template
 680:/usr/include/c++/6/tuple ****                     _NonNestedTuple<const tuple<_UElements...>&>(),
 681:/usr/include/c++/6/tuple ****         bool>::type=false>
 682:/usr/include/c++/6/tuple ****         explicit constexpr tuple(const tuple<_UElements...>& __in)
 683:/usr/include/c++/6/tuple ****         : _Inherited(static_cast<const _Tuple_impl<0, _UElements...>&>(__in))
 684:/usr/include/c++/6/tuple ****         { }
 685:/usr/include/c++/6/tuple **** 
 686:/usr/include/c++/6/tuple ****       template<typename... _UElements, typename _Dummy = void, typename
 687:/usr/include/c++/6/tuple ****         enable_if<_TMC<_UElements...>::template
 688:/usr/include/c++/6/tuple ****                     _MoveConstructibleTuple<_UElements...>()
 689:/usr/include/c++/6/tuple ****                   && _TMC<_UElements...>::template
 690:/usr/include/c++/6/tuple ****                     _ImplicitlyMoveConvertibleTuple<_UElements...>()
 691:/usr/include/c++/6/tuple ****                   && _TNTC<_Dummy>::template
 692:/usr/include/c++/6/tuple ****                     _NonNestedTuple<tuple<_UElements...>&&>(),
 693:/usr/include/c++/6/tuple ****         bool>::type=true>
 694:/usr/include/c++/6/tuple ****         constexpr tuple(tuple<_UElements...>&& __in)
 695:/usr/include/c++/6/tuple ****         : _Inherited(static_cast<_Tuple_impl<0, _UElements...>&&>(__in)) { }
 696:/usr/include/c++/6/tuple **** 
 697:/usr/include/c++/6/tuple ****       template<typename... _UElements, typename _Dummy = void, typename
 698:/usr/include/c++/6/tuple ****         enable_if<_TMC<_UElements...>::template
 699:/usr/include/c++/6/tuple ****                     _MoveConstructibleTuple<_UElements...>()
GAS LISTING /tmp/ccvUPO8Q.s 			page 669


 700:/usr/include/c++/6/tuple ****                   && !_TMC<_UElements...>::template
 701:/usr/include/c++/6/tuple ****                     _ImplicitlyMoveConvertibleTuple<_UElements...>()
 702:/usr/include/c++/6/tuple ****                   && _TNTC<_Dummy>::template
 703:/usr/include/c++/6/tuple ****                     _NonNestedTuple<tuple<_UElements...>&&>(),
 704:/usr/include/c++/6/tuple ****         bool>::type=false>
 705:/usr/include/c++/6/tuple ****         explicit constexpr tuple(tuple<_UElements...>&& __in)
 706:/usr/include/c++/6/tuple ****         : _Inherited(static_cast<_Tuple_impl<0, _UElements...>&&>(__in)) { }
 707:/usr/include/c++/6/tuple **** 
 708:/usr/include/c++/6/tuple ****       // Allocator-extended constructors.
 709:/usr/include/c++/6/tuple **** 
 710:/usr/include/c++/6/tuple ****       template<typename _Alloc>
 711:/usr/include/c++/6/tuple **** 	tuple(allocator_arg_t __tag, const _Alloc& __a)
 712:/usr/include/c++/6/tuple **** 	: _Inherited(__tag, __a) { }
 713:/usr/include/c++/6/tuple **** 
 714:/usr/include/c++/6/tuple ****       template<typename _Alloc, typename _Dummy = void,
 715:/usr/include/c++/6/tuple ****                typename enable_if<
 716:/usr/include/c++/6/tuple ****                  _TCC<_Dummy>::template
 717:/usr/include/c++/6/tuple ****                    _ConstructibleTuple<_Elements...>()
 718:/usr/include/c++/6/tuple ****                  && _TCC<_Dummy>::template
 719:/usr/include/c++/6/tuple ****                    _ImplicitlyConvertibleTuple<_Elements...>(),
 720:/usr/include/c++/6/tuple ****                bool>::type=true>
 721:/usr/include/c++/6/tuple **** 	tuple(allocator_arg_t __tag, const _Alloc& __a,
 722:/usr/include/c++/6/tuple **** 	      const _Elements&... __elements)
 723:/usr/include/c++/6/tuple **** 	: _Inherited(__tag, __a, __elements...) { }
 724:/usr/include/c++/6/tuple **** 
 725:/usr/include/c++/6/tuple ****       template<typename _Alloc, typename _Dummy = void,
 726:/usr/include/c++/6/tuple ****                typename enable_if<
 727:/usr/include/c++/6/tuple ****                  _TCC<_Dummy>::template
 728:/usr/include/c++/6/tuple ****                    _ConstructibleTuple<_Elements...>()
 729:/usr/include/c++/6/tuple ****                  && !_TCC<_Dummy>::template
 730:/usr/include/c++/6/tuple ****                    _ImplicitlyConvertibleTuple<_Elements...>(),
 731:/usr/include/c++/6/tuple ****                bool>::type=false>
 732:/usr/include/c++/6/tuple **** 	explicit tuple(allocator_arg_t __tag, const _Alloc& __a,
 733:/usr/include/c++/6/tuple ****                        const _Elements&... __elements)
 734:/usr/include/c++/6/tuple **** 	: _Inherited(__tag, __a, __elements...) { }
 735:/usr/include/c++/6/tuple **** 
 736:/usr/include/c++/6/tuple ****       template<typename _Alloc, typename... _UElements, typename
 737:/usr/include/c++/6/tuple ****         enable_if<_TMC<_UElements...>::template
 738:/usr/include/c++/6/tuple ****                     _MoveConstructibleTuple<_UElements...>()
 739:/usr/include/c++/6/tuple ****                   && _TMC<_UElements...>::template
 740:/usr/include/c++/6/tuple ****                     _ImplicitlyMoveConvertibleTuple<_UElements...>(),
 741:/usr/include/c++/6/tuple ****         bool>::type=true>
 742:/usr/include/c++/6/tuple **** 	tuple(allocator_arg_t __tag, const _Alloc& __a,
 743:/usr/include/c++/6/tuple **** 	      _UElements&&... __elements)
 744:/usr/include/c++/6/tuple **** 	: _Inherited(__tag, __a, std::forward<_UElements>(__elements)...)
 745:/usr/include/c++/6/tuple ****        	{ }
 746:/usr/include/c++/6/tuple **** 
 747:/usr/include/c++/6/tuple ****       template<typename _Alloc, typename... _UElements, typename
 748:/usr/include/c++/6/tuple ****         enable_if<_TMC<_UElements...>::template
 749:/usr/include/c++/6/tuple ****                     _MoveConstructibleTuple<_UElements...>()
 750:/usr/include/c++/6/tuple ****                   && !_TMC<_UElements...>::template
 751:/usr/include/c++/6/tuple ****                     _ImplicitlyMoveConvertibleTuple<_UElements...>(),
 752:/usr/include/c++/6/tuple ****         bool>::type=false>
 753:/usr/include/c++/6/tuple **** 	explicit tuple(allocator_arg_t __tag, const _Alloc& __a,
 754:/usr/include/c++/6/tuple **** 	      _UElements&&... __elements)
 755:/usr/include/c++/6/tuple **** 	: _Inherited(__tag, __a, std::forward<_UElements>(__elements)...)
 756:/usr/include/c++/6/tuple ****         { }
GAS LISTING /tmp/ccvUPO8Q.s 			page 670


 757:/usr/include/c++/6/tuple **** 
 758:/usr/include/c++/6/tuple ****       template<typename _Alloc>
 759:/usr/include/c++/6/tuple **** 	tuple(allocator_arg_t __tag, const _Alloc& __a, const tuple& __in)
 760:/usr/include/c++/6/tuple **** 	: _Inherited(__tag, __a, static_cast<const _Inherited&>(__in)) { }
 761:/usr/include/c++/6/tuple **** 
 762:/usr/include/c++/6/tuple ****       template<typename _Alloc>
 763:/usr/include/c++/6/tuple **** 	tuple(allocator_arg_t __tag, const _Alloc& __a, tuple&& __in)
 764:/usr/include/c++/6/tuple **** 	: _Inherited(__tag, __a, static_cast<_Inherited&&>(__in)) { }
 765:/usr/include/c++/6/tuple **** 
 766:/usr/include/c++/6/tuple ****       template<typename _Alloc, typename... _UElements, typename
 767:/usr/include/c++/6/tuple ****         enable_if<_TMC<_UElements...>::template
 768:/usr/include/c++/6/tuple ****                     _ConstructibleTuple<_UElements...>()
 769:/usr/include/c++/6/tuple ****                   && _TMC<_UElements...>::template
 770:/usr/include/c++/6/tuple ****                     _ImplicitlyConvertibleTuple<_UElements...>(),
 771:/usr/include/c++/6/tuple ****         bool>::type=true>
 772:/usr/include/c++/6/tuple **** 	tuple(allocator_arg_t __tag, const _Alloc& __a,
 773:/usr/include/c++/6/tuple **** 	      const tuple<_UElements...>& __in)
 774:/usr/include/c++/6/tuple **** 	: _Inherited(__tag, __a,
 775:/usr/include/c++/6/tuple **** 	             static_cast<const _Tuple_impl<0, _UElements...>&>(__in))
 776:/usr/include/c++/6/tuple **** 	{ }
 777:/usr/include/c++/6/tuple **** 
 778:/usr/include/c++/6/tuple ****       template<typename _Alloc, typename... _UElements, typename
 779:/usr/include/c++/6/tuple ****         enable_if<_TMC<_UElements...>::template
 780:/usr/include/c++/6/tuple ****                     _ConstructibleTuple<_UElements...>()
 781:/usr/include/c++/6/tuple ****                   && !_TMC<_UElements...>::template
 782:/usr/include/c++/6/tuple ****                     _ImplicitlyConvertibleTuple<_UElements...>(),
 783:/usr/include/c++/6/tuple ****         bool>::type=false>
 784:/usr/include/c++/6/tuple **** 	explicit tuple(allocator_arg_t __tag, const _Alloc& __a,
 785:/usr/include/c++/6/tuple **** 	      const tuple<_UElements...>& __in)
 786:/usr/include/c++/6/tuple **** 	: _Inherited(__tag, __a,
 787:/usr/include/c++/6/tuple **** 	             static_cast<const _Tuple_impl<0, _UElements...>&>(__in))
 788:/usr/include/c++/6/tuple **** 	{ }
 789:/usr/include/c++/6/tuple **** 
 790:/usr/include/c++/6/tuple ****       template<typename _Alloc, typename... _UElements, typename
 791:/usr/include/c++/6/tuple ****         enable_if<_TMC<_UElements...>::template
 792:/usr/include/c++/6/tuple ****                     _MoveConstructibleTuple<_UElements...>()
 793:/usr/include/c++/6/tuple ****                   && _TMC<_UElements...>::template
 794:/usr/include/c++/6/tuple ****                     _ImplicitlyMoveConvertibleTuple<_UElements...>(),
 795:/usr/include/c++/6/tuple ****         bool>::type=true>
 796:/usr/include/c++/6/tuple **** 	tuple(allocator_arg_t __tag, const _Alloc& __a,
 797:/usr/include/c++/6/tuple **** 	      tuple<_UElements...>&& __in)
 798:/usr/include/c++/6/tuple **** 	: _Inherited(__tag, __a,
 799:/usr/include/c++/6/tuple **** 	             static_cast<_Tuple_impl<0, _UElements...>&&>(__in))
 800:/usr/include/c++/6/tuple **** 	{ }
 801:/usr/include/c++/6/tuple **** 
 802:/usr/include/c++/6/tuple ****       template<typename _Alloc, typename... _UElements, typename
 803:/usr/include/c++/6/tuple ****         enable_if<_TMC<_UElements...>::template
 804:/usr/include/c++/6/tuple ****                     _MoveConstructibleTuple<_UElements...>()
 805:/usr/include/c++/6/tuple ****                   && !_TMC<_UElements...>::template
 806:/usr/include/c++/6/tuple ****                     _ImplicitlyMoveConvertibleTuple<_UElements...>(),
 807:/usr/include/c++/6/tuple ****         bool>::type=false>
 808:/usr/include/c++/6/tuple **** 	explicit tuple(allocator_arg_t __tag, const _Alloc& __a,
 809:/usr/include/c++/6/tuple **** 	      tuple<_UElements...>&& __in)
 810:/usr/include/c++/6/tuple **** 	: _Inherited(__tag, __a,
 811:/usr/include/c++/6/tuple **** 	             static_cast<_Tuple_impl<0, _UElements...>&&>(__in))
 812:/usr/include/c++/6/tuple **** 	{ }
 813:/usr/include/c++/6/tuple **** 
GAS LISTING /tmp/ccvUPO8Q.s 			page 671


 814:/usr/include/c++/6/tuple ****       tuple&
 815:/usr/include/c++/6/tuple ****       operator=(const tuple& __in)
 816:/usr/include/c++/6/tuple ****       {
 817:/usr/include/c++/6/tuple **** 	static_cast<_Inherited&>(*this) = __in;
 818:/usr/include/c++/6/tuple **** 	return *this;
 819:/usr/include/c++/6/tuple ****       }
 820:/usr/include/c++/6/tuple **** 
 821:/usr/include/c++/6/tuple ****       tuple&
 822:/usr/include/c++/6/tuple ****       operator=(tuple&& __in)
 823:/usr/include/c++/6/tuple ****       noexcept(is_nothrow_move_assignable<_Inherited>::value)
 824:/usr/include/c++/6/tuple ****       {
 825:/usr/include/c++/6/tuple **** 	static_cast<_Inherited&>(*this) = std::move(__in);
 826:/usr/include/c++/6/tuple **** 	return *this;
 827:/usr/include/c++/6/tuple ****       }
 828:/usr/include/c++/6/tuple **** 
 829:/usr/include/c++/6/tuple ****       template<typename... _UElements, typename = typename
 830:/usr/include/c++/6/tuple **** 	       enable_if<sizeof...(_UElements)
 831:/usr/include/c++/6/tuple **** 			 == sizeof...(_Elements)>::type>
 832:/usr/include/c++/6/tuple ****         tuple&
 833:/usr/include/c++/6/tuple ****         operator=(const tuple<_UElements...>& __in)
 834:/usr/include/c++/6/tuple ****         {
 835:/usr/include/c++/6/tuple **** 	  static_cast<_Inherited&>(*this) = __in;
 836:/usr/include/c++/6/tuple **** 	  return *this;
 837:/usr/include/c++/6/tuple **** 	}
 838:/usr/include/c++/6/tuple **** 
 839:/usr/include/c++/6/tuple ****       template<typename... _UElements, typename = typename
 840:/usr/include/c++/6/tuple **** 	       enable_if<sizeof...(_UElements)
 841:/usr/include/c++/6/tuple **** 			 == sizeof...(_Elements)>::type>
 842:/usr/include/c++/6/tuple ****         tuple&
 843:/usr/include/c++/6/tuple ****         operator=(tuple<_UElements...>&& __in)
 844:/usr/include/c++/6/tuple ****         {
 845:/usr/include/c++/6/tuple **** 	  static_cast<_Inherited&>(*this) = std::move(__in);
 846:/usr/include/c++/6/tuple **** 	  return *this;
 847:/usr/include/c++/6/tuple **** 	}
 848:/usr/include/c++/6/tuple **** 
 849:/usr/include/c++/6/tuple ****       void
 850:/usr/include/c++/6/tuple ****       swap(tuple& __in)
 851:/usr/include/c++/6/tuple ****       noexcept(noexcept(__in._M_swap(__in)))
 852:/usr/include/c++/6/tuple ****       { _Inherited::_M_swap(__in); }
 853:/usr/include/c++/6/tuple ****     };
 854:/usr/include/c++/6/tuple **** 
 855:/usr/include/c++/6/tuple ****   // Explicit specialization, zero-element tuple.
 856:/usr/include/c++/6/tuple ****   template<>
 857:/usr/include/c++/6/tuple ****     class tuple<>
 858:/usr/include/c++/6/tuple ****     {
 859:/usr/include/c++/6/tuple ****     public:
 860:/usr/include/c++/6/tuple ****       void swap(tuple&) noexcept { /* no-op */ }
 861:/usr/include/c++/6/tuple ****     };
 862:/usr/include/c++/6/tuple **** 
 863:/usr/include/c++/6/tuple ****   /// Partial specialization, 2-element tuple.
 864:/usr/include/c++/6/tuple ****   /// Includes construction and assignment from a pair.
 865:/usr/include/c++/6/tuple ****   template<typename _T1, typename _T2>
 866:/usr/include/c++/6/tuple ****     class tuple<_T1, _T2> : public _Tuple_impl<0, _T1, _T2>
 867:/usr/include/c++/6/tuple ****     {
 868:/usr/include/c++/6/tuple ****       typedef _Tuple_impl<0, _T1, _T2> _Inherited;
 869:/usr/include/c++/6/tuple **** 
 870:/usr/include/c++/6/tuple ****     public:
GAS LISTING /tmp/ccvUPO8Q.s 			page 672


 871:/usr/include/c++/6/tuple ****       template <typename _U1 = _T1,
 872:/usr/include/c++/6/tuple ****                 typename _U2 = _T2,
 873:/usr/include/c++/6/tuple ****                 typename enable_if<__and_<
 874:/usr/include/c++/6/tuple ****                                      __is_implicitly_default_constructible<_U1>,
 875:/usr/include/c++/6/tuple ****                                      __is_implicitly_default_constructible<_U2>>
 876:/usr/include/c++/6/tuple ****                                    ::value, bool>::type = true>
 877:/usr/include/c++/6/tuple **** 
 878:/usr/include/c++/6/tuple ****       constexpr tuple()
 879:/usr/include/c++/6/tuple ****       : _Inherited() { }
 880:/usr/include/c++/6/tuple **** 
 881:/usr/include/c++/6/tuple ****       template <typename _U1 = _T1,
 882:/usr/include/c++/6/tuple ****                 typename _U2 = _T2,
 883:/usr/include/c++/6/tuple ****                 typename enable_if<
 884:/usr/include/c++/6/tuple ****                   __and_<
 885:/usr/include/c++/6/tuple ****                     is_default_constructible<_U1>,
 886:/usr/include/c++/6/tuple ****                     is_default_constructible<_U2>,
 887:/usr/include/c++/6/tuple ****                     __not_<
 888:/usr/include/c++/6/tuple ****                       __and_<__is_implicitly_default_constructible<_U1>,
 889:/usr/include/c++/6/tuple ****                              __is_implicitly_default_constructible<_U2>>>>
 890:/usr/include/c++/6/tuple ****                   ::value, bool>::type = false>
 891:/usr/include/c++/6/tuple **** 
 892:/usr/include/c++/6/tuple ****       explicit constexpr tuple()
 893:/usr/include/c++/6/tuple ****       : _Inherited() { }
 894:/usr/include/c++/6/tuple **** 
 895:/usr/include/c++/6/tuple ****       // Shortcut for the cases where constructors taking _T1, _T2
 896:/usr/include/c++/6/tuple ****       // need to be constrained.
 897:/usr/include/c++/6/tuple ****       template<typename _Dummy> using _TCC =
 898:/usr/include/c++/6/tuple ****         _TC<is_same<_Dummy, void>::value, _T1, _T2>;
 899:/usr/include/c++/6/tuple **** 
 900:/usr/include/c++/6/tuple ****       template<typename _Dummy = void, typename
 901:/usr/include/c++/6/tuple ****                enable_if<_TCC<_Dummy>::template
 902:/usr/include/c++/6/tuple ****                            _ConstructibleTuple<_T1, _T2>()
 903:/usr/include/c++/6/tuple ****                          && _TCC<_Dummy>::template
 904:/usr/include/c++/6/tuple ****                            _ImplicitlyConvertibleTuple<_T1, _T2>(),
 905:/usr/include/c++/6/tuple **** 	bool>::type = true>
 906:/usr/include/c++/6/tuple ****         constexpr tuple(const _T1& __a1, const _T2& __a2)
 907:/usr/include/c++/6/tuple ****         : _Inherited(__a1, __a2) { }
 908:/usr/include/c++/6/tuple **** 
 909:/usr/include/c++/6/tuple ****       template<typename _Dummy = void, typename
 910:/usr/include/c++/6/tuple ****                enable_if<_TCC<_Dummy>::template
 911:/usr/include/c++/6/tuple ****                            _ConstructibleTuple<_T1, _T2>()
 912:/usr/include/c++/6/tuple ****                          && !_TCC<_Dummy>::template
 913:/usr/include/c++/6/tuple ****                            _ImplicitlyConvertibleTuple<_T1, _T2>(),
 914:/usr/include/c++/6/tuple **** 	bool>::type = false>
 915:/usr/include/c++/6/tuple ****         explicit constexpr tuple(const _T1& __a1, const _T2& __a2)
 916:/usr/include/c++/6/tuple ****         : _Inherited(__a1, __a2) { }
 917:/usr/include/c++/6/tuple **** 
 918:/usr/include/c++/6/tuple ****       // Shortcut for the cases where constructors taking _U1, _U2
 919:/usr/include/c++/6/tuple ****       // need to be constrained.
 920:/usr/include/c++/6/tuple ****       using _TMC = _TC<true, _T1, _T2>;
 921:/usr/include/c++/6/tuple **** 
 922:/usr/include/c++/6/tuple ****       template<typename _U1, typename _U2, typename
 923:/usr/include/c++/6/tuple ****         enable_if<_TMC::template
 924:/usr/include/c++/6/tuple ****                     _MoveConstructibleTuple<_U1, _U2>()
 925:/usr/include/c++/6/tuple ****                   && _TMC::template
 926:/usr/include/c++/6/tuple ****                     _ImplicitlyMoveConvertibleTuple<_U1, _U2>()
 927:/usr/include/c++/6/tuple **** 	          && !is_same<typename decay<_U1>::type,
GAS LISTING /tmp/ccvUPO8Q.s 			page 673


 928:/usr/include/c++/6/tuple **** 			      allocator_arg_t>::value,
 929:/usr/include/c++/6/tuple **** 	bool>::type = true>
 930:/usr/include/c++/6/tuple ****         constexpr tuple(_U1&& __a1, _U2&& __a2)
 931:/usr/include/c++/6/tuple **** 	: _Inherited(std::forward<_U1>(__a1), std::forward<_U2>(__a2)) { }
 932:/usr/include/c++/6/tuple **** 
 933:/usr/include/c++/6/tuple ****       template<typename _U1, typename _U2, typename
 934:/usr/include/c++/6/tuple ****         enable_if<_TMC::template
 935:/usr/include/c++/6/tuple ****                     _MoveConstructibleTuple<_U1, _U2>()
 936:/usr/include/c++/6/tuple ****                   && !_TMC::template
 937:/usr/include/c++/6/tuple ****                     _ImplicitlyMoveConvertibleTuple<_U1, _U2>()
 938:/usr/include/c++/6/tuple **** 	          && !is_same<typename decay<_U1>::type,
 939:/usr/include/c++/6/tuple **** 			      allocator_arg_t>::value,
 940:/usr/include/c++/6/tuple **** 	bool>::type = false>
 941:/usr/include/c++/6/tuple ****         explicit constexpr tuple(_U1&& __a1, _U2&& __a2)
 942:/usr/include/c++/6/tuple **** 	: _Inherited(std::forward<_U1>(__a1), std::forward<_U2>(__a2)) { }
 943:/usr/include/c++/6/tuple **** 
 944:/usr/include/c++/6/tuple ****       constexpr tuple(const tuple&) = default;
 945:/usr/include/c++/6/tuple **** 
 946:/usr/include/c++/6/tuple ****       constexpr tuple(tuple&&) = default;
 947:/usr/include/c++/6/tuple **** 
 948:/usr/include/c++/6/tuple ****       template<typename _U1, typename _U2, typename
 949:/usr/include/c++/6/tuple ****         enable_if<_TMC::template
 950:/usr/include/c++/6/tuple ****                     _ConstructibleTuple<_U1, _U2>()
 951:/usr/include/c++/6/tuple ****                   && _TMC::template
 952:/usr/include/c++/6/tuple ****                     _ImplicitlyConvertibleTuple<_U1, _U2>(),
 953:/usr/include/c++/6/tuple **** 	bool>::type = true>
 954:/usr/include/c++/6/tuple ****         constexpr tuple(const tuple<_U1, _U2>& __in)
 955:/usr/include/c++/6/tuple **** 	: _Inherited(static_cast<const _Tuple_impl<0, _U1, _U2>&>(__in)) { }
 956:/usr/include/c++/6/tuple **** 
 957:/usr/include/c++/6/tuple ****       template<typename _U1, typename _U2, typename
 958:/usr/include/c++/6/tuple ****         enable_if<_TMC::template
 959:/usr/include/c++/6/tuple ****                     _ConstructibleTuple<_U1, _U2>()
 960:/usr/include/c++/6/tuple ****                   && !_TMC::template
 961:/usr/include/c++/6/tuple ****                     _ImplicitlyConvertibleTuple<_U1, _U2>(),
 962:/usr/include/c++/6/tuple **** 	bool>::type = false>
 963:/usr/include/c++/6/tuple ****         explicit constexpr tuple(const tuple<_U1, _U2>& __in)
 964:/usr/include/c++/6/tuple **** 	: _Inherited(static_cast<const _Tuple_impl<0, _U1, _U2>&>(__in)) { }
 965:/usr/include/c++/6/tuple **** 
 966:/usr/include/c++/6/tuple ****       template<typename _U1, typename _U2, typename
 967:/usr/include/c++/6/tuple ****         enable_if<_TMC::template
 968:/usr/include/c++/6/tuple ****                     _MoveConstructibleTuple<_U1, _U2>()
 969:/usr/include/c++/6/tuple ****                   && _TMC::template
 970:/usr/include/c++/6/tuple ****                     _ImplicitlyMoveConvertibleTuple<_U1, _U2>(),
 971:/usr/include/c++/6/tuple **** 	bool>::type = true>
 972:/usr/include/c++/6/tuple ****         constexpr tuple(tuple<_U1, _U2>&& __in)
 973:/usr/include/c++/6/tuple **** 	: _Inherited(static_cast<_Tuple_impl<0, _U1, _U2>&&>(__in)) { }
 974:/usr/include/c++/6/tuple **** 
 975:/usr/include/c++/6/tuple ****       template<typename _U1, typename _U2, typename
 976:/usr/include/c++/6/tuple ****         enable_if<_TMC::template
 977:/usr/include/c++/6/tuple ****                     _MoveConstructibleTuple<_U1, _U2>()
 978:/usr/include/c++/6/tuple ****                   && !_TMC::template
 979:/usr/include/c++/6/tuple ****                     _ImplicitlyMoveConvertibleTuple<_U1, _U2>(),
 980:/usr/include/c++/6/tuple **** 	bool>::type = false>
 981:/usr/include/c++/6/tuple ****         explicit constexpr tuple(tuple<_U1, _U2>&& __in)
 982:/usr/include/c++/6/tuple **** 	: _Inherited(static_cast<_Tuple_impl<0, _U1, _U2>&&>(__in)) { }
 983:/usr/include/c++/6/tuple **** 
 984:/usr/include/c++/6/tuple ****       template<typename _U1, typename _U2, typename
GAS LISTING /tmp/ccvUPO8Q.s 			page 674


 985:/usr/include/c++/6/tuple ****         enable_if<_TMC::template
 986:/usr/include/c++/6/tuple ****                     _ConstructibleTuple<_U1, _U2>()
 987:/usr/include/c++/6/tuple ****                   && _TMC::template
 988:/usr/include/c++/6/tuple ****                     _ImplicitlyConvertibleTuple<_U1, _U2>(),
 989:/usr/include/c++/6/tuple **** 	bool>::type = true>
 990:/usr/include/c++/6/tuple ****         constexpr tuple(const pair<_U1, _U2>& __in)
 991:/usr/include/c++/6/tuple **** 	: _Inherited(__in.first, __in.second) { }
 992:/usr/include/c++/6/tuple **** 
 993:/usr/include/c++/6/tuple ****       template<typename _U1, typename _U2, typename
 994:/usr/include/c++/6/tuple ****         enable_if<_TMC::template
 995:/usr/include/c++/6/tuple ****                     _ConstructibleTuple<_U1, _U2>()
 996:/usr/include/c++/6/tuple ****                   && !_TMC::template
 997:/usr/include/c++/6/tuple ****                     _ImplicitlyConvertibleTuple<_U1, _U2>(),
 998:/usr/include/c++/6/tuple **** 	bool>::type = false>
 999:/usr/include/c++/6/tuple ****         explicit constexpr tuple(const pair<_U1, _U2>& __in)
1000:/usr/include/c++/6/tuple **** 	: _Inherited(__in.first, __in.second) { }
1001:/usr/include/c++/6/tuple **** 
1002:/usr/include/c++/6/tuple ****       template<typename _U1, typename _U2, typename
1003:/usr/include/c++/6/tuple ****         enable_if<_TMC::template
1004:/usr/include/c++/6/tuple ****                     _MoveConstructibleTuple<_U1, _U2>()
1005:/usr/include/c++/6/tuple ****                   && _TMC::template
1006:/usr/include/c++/6/tuple ****                     _ImplicitlyMoveConvertibleTuple<_U1, _U2>(),
1007:/usr/include/c++/6/tuple **** 	bool>::type = true>
1008:/usr/include/c++/6/tuple ****         constexpr tuple(pair<_U1, _U2>&& __in)
1009:/usr/include/c++/6/tuple **** 	: _Inherited(std::forward<_U1>(__in.first),
1010:/usr/include/c++/6/tuple **** 		     std::forward<_U2>(__in.second)) { }
1011:/usr/include/c++/6/tuple **** 
1012:/usr/include/c++/6/tuple ****       template<typename _U1, typename _U2, typename
1013:/usr/include/c++/6/tuple ****         enable_if<_TMC::template
1014:/usr/include/c++/6/tuple ****                     _MoveConstructibleTuple<_U1, _U2>()
1015:/usr/include/c++/6/tuple ****                   && !_TMC::template
1016:/usr/include/c++/6/tuple ****                     _ImplicitlyMoveConvertibleTuple<_U1, _U2>(),
1017:/usr/include/c++/6/tuple **** 	bool>::type = false>
1018:/usr/include/c++/6/tuple ****         explicit constexpr tuple(pair<_U1, _U2>&& __in)
1019:/usr/include/c++/6/tuple **** 	: _Inherited(std::forward<_U1>(__in.first),
1020:/usr/include/c++/6/tuple **** 		     std::forward<_U2>(__in.second)) { }
1021:/usr/include/c++/6/tuple **** 
1022:/usr/include/c++/6/tuple ****       // Allocator-extended constructors.
1023:/usr/include/c++/6/tuple **** 
1024:/usr/include/c++/6/tuple ****       template<typename _Alloc>
1025:/usr/include/c++/6/tuple **** 	tuple(allocator_arg_t __tag, const _Alloc& __a)
1026:/usr/include/c++/6/tuple **** 	: _Inherited(__tag, __a) { }
1027:/usr/include/c++/6/tuple **** 
1028:/usr/include/c++/6/tuple ****       template<typename _Alloc, typename _Dummy = void,
1029:/usr/include/c++/6/tuple ****                typename enable_if<
1030:/usr/include/c++/6/tuple ****                  _TCC<_Dummy>::template
1031:/usr/include/c++/6/tuple ****                    _ConstructibleTuple<_T1, _T2>()
1032:/usr/include/c++/6/tuple ****                  && _TCC<_Dummy>::template
1033:/usr/include/c++/6/tuple ****                    _ImplicitlyConvertibleTuple<_T1, _T2>(),
1034:/usr/include/c++/6/tuple ****                bool>::type=true>
1035:/usr/include/c++/6/tuple **** 
1036:/usr/include/c++/6/tuple **** 	tuple(allocator_arg_t __tag, const _Alloc& __a,
1037:/usr/include/c++/6/tuple **** 	      const _T1& __a1, const _T2& __a2)
1038:/usr/include/c++/6/tuple **** 	: _Inherited(__tag, __a, __a1, __a2) { }
1039:/usr/include/c++/6/tuple **** 
1040:/usr/include/c++/6/tuple ****       template<typename _Alloc, typename _Dummy = void,
1041:/usr/include/c++/6/tuple ****                typename enable_if<
GAS LISTING /tmp/ccvUPO8Q.s 			page 675


1042:/usr/include/c++/6/tuple ****                  _TCC<_Dummy>::template
1043:/usr/include/c++/6/tuple ****                    _ConstructibleTuple<_T1, _T2>()
1044:/usr/include/c++/6/tuple ****                  && !_TCC<_Dummy>::template
1045:/usr/include/c++/6/tuple ****                    _ImplicitlyConvertibleTuple<_T1, _T2>(),
1046:/usr/include/c++/6/tuple ****                bool>::type=false>
1047:/usr/include/c++/6/tuple **** 
1048:/usr/include/c++/6/tuple **** 	explicit tuple(allocator_arg_t __tag, const _Alloc& __a,
1049:/usr/include/c++/6/tuple **** 	      const _T1& __a1, const _T2& __a2)
1050:/usr/include/c++/6/tuple **** 	: _Inherited(__tag, __a, __a1, __a2) { }
1051:/usr/include/c++/6/tuple **** 
1052:/usr/include/c++/6/tuple ****       template<typename _Alloc, typename _U1, typename _U2, typename
1053:/usr/include/c++/6/tuple ****         enable_if<_TMC::template
1054:/usr/include/c++/6/tuple ****                     _MoveConstructibleTuple<_U1, _U2>()
1055:/usr/include/c++/6/tuple ****                   && _TMC::template
1056:/usr/include/c++/6/tuple ****                     _ImplicitlyMoveConvertibleTuple<_U1, _U2>(),
1057:/usr/include/c++/6/tuple **** 	bool>::type = true>
1058:/usr/include/c++/6/tuple **** 	tuple(allocator_arg_t __tag, const _Alloc& __a, _U1&& __a1, _U2&& __a2)
1059:/usr/include/c++/6/tuple **** 	: _Inherited(__tag, __a, std::forward<_U1>(__a1),
1060:/usr/include/c++/6/tuple **** 	             std::forward<_U2>(__a2)) { }
1061:/usr/include/c++/6/tuple **** 
1062:/usr/include/c++/6/tuple ****       template<typename _Alloc, typename _U1, typename _U2, typename
1063:/usr/include/c++/6/tuple ****         enable_if<_TMC::template
1064:/usr/include/c++/6/tuple ****                     _MoveConstructibleTuple<_U1, _U2>()
1065:/usr/include/c++/6/tuple ****                   && !_TMC::template
1066:/usr/include/c++/6/tuple ****                     _ImplicitlyMoveConvertibleTuple<_U1, _U2>(),
1067:/usr/include/c++/6/tuple **** 	bool>::type = false>
1068:/usr/include/c++/6/tuple **** 	explicit tuple(allocator_arg_t __tag, const _Alloc& __a,
1069:/usr/include/c++/6/tuple ****                        _U1&& __a1, _U2&& __a2)
1070:/usr/include/c++/6/tuple **** 	: _Inherited(__tag, __a, std::forward<_U1>(__a1),
1071:/usr/include/c++/6/tuple **** 	             std::forward<_U2>(__a2)) { }
1072:/usr/include/c++/6/tuple **** 
1073:/usr/include/c++/6/tuple ****       template<typename _Alloc>
1074:/usr/include/c++/6/tuple **** 	tuple(allocator_arg_t __tag, const _Alloc& __a, const tuple& __in)
1075:/usr/include/c++/6/tuple **** 	: _Inherited(__tag, __a, static_cast<const _Inherited&>(__in)) { }
1076:/usr/include/c++/6/tuple **** 
1077:/usr/include/c++/6/tuple ****       template<typename _Alloc>
1078:/usr/include/c++/6/tuple **** 	tuple(allocator_arg_t __tag, const _Alloc& __a, tuple&& __in)
1079:/usr/include/c++/6/tuple **** 	: _Inherited(__tag, __a, static_cast<_Inherited&&>(__in)) { }
1080:/usr/include/c++/6/tuple **** 
1081:/usr/include/c++/6/tuple ****       template<typename _Alloc, typename _U1, typename _U2, typename
1082:/usr/include/c++/6/tuple ****         enable_if<_TMC::template
1083:/usr/include/c++/6/tuple ****                     _ConstructibleTuple<_U1, _U2>()
1084:/usr/include/c++/6/tuple ****                   && _TMC::template
1085:/usr/include/c++/6/tuple ****                     _ImplicitlyConvertibleTuple<_U1, _U2>(),
1086:/usr/include/c++/6/tuple **** 	bool>::type = true>
1087:/usr/include/c++/6/tuple **** 	tuple(allocator_arg_t __tag, const _Alloc& __a,
1088:/usr/include/c++/6/tuple **** 	      const tuple<_U1, _U2>& __in)
1089:/usr/include/c++/6/tuple **** 	: _Inherited(__tag, __a,
1090:/usr/include/c++/6/tuple **** 	             static_cast<const _Tuple_impl<0, _U1, _U2>&>(__in))
1091:/usr/include/c++/6/tuple **** 	{ }
1092:/usr/include/c++/6/tuple **** 
1093:/usr/include/c++/6/tuple ****       template<typename _Alloc, typename _U1, typename _U2, typename
1094:/usr/include/c++/6/tuple ****         enable_if<_TMC::template
1095:/usr/include/c++/6/tuple ****                     _ConstructibleTuple<_U1, _U2>()
1096:/usr/include/c++/6/tuple ****                   && !_TMC::template
1097:/usr/include/c++/6/tuple ****                     _ImplicitlyConvertibleTuple<_U1, _U2>(),
1098:/usr/include/c++/6/tuple **** 	bool>::type = false>
GAS LISTING /tmp/ccvUPO8Q.s 			page 676


1099:/usr/include/c++/6/tuple **** 	explicit tuple(allocator_arg_t __tag, const _Alloc& __a,
1100:/usr/include/c++/6/tuple **** 	      const tuple<_U1, _U2>& __in)
1101:/usr/include/c++/6/tuple **** 	: _Inherited(__tag, __a,
1102:/usr/include/c++/6/tuple **** 	             static_cast<const _Tuple_impl<0, _U1, _U2>&>(__in))
1103:/usr/include/c++/6/tuple **** 	{ }
1104:/usr/include/c++/6/tuple **** 
1105:/usr/include/c++/6/tuple ****       template<typename _Alloc, typename _U1, typename _U2, typename
1106:/usr/include/c++/6/tuple ****         enable_if<_TMC::template
1107:/usr/include/c++/6/tuple ****                     _MoveConstructibleTuple<_U1, _U2>()
1108:/usr/include/c++/6/tuple ****                   && _TMC::template
1109:/usr/include/c++/6/tuple ****                     _ImplicitlyMoveConvertibleTuple<_U1, _U2>(),
1110:/usr/include/c++/6/tuple **** 	bool>::type = true>
1111:/usr/include/c++/6/tuple **** 	tuple(allocator_arg_t __tag, const _Alloc& __a, tuple<_U1, _U2>&& __in)
1112:/usr/include/c++/6/tuple **** 	: _Inherited(__tag, __a, static_cast<_Tuple_impl<0, _U1, _U2>&&>(__in))
1113:/usr/include/c++/6/tuple **** 	{ }
1114:/usr/include/c++/6/tuple **** 
1115:/usr/include/c++/6/tuple ****       template<typename _Alloc, typename _U1, typename _U2, typename
1116:/usr/include/c++/6/tuple ****         enable_if<_TMC::template
1117:/usr/include/c++/6/tuple ****                     _MoveConstructibleTuple<_U1, _U2>()
1118:/usr/include/c++/6/tuple ****                   && !_TMC::template
1119:/usr/include/c++/6/tuple ****                     _ImplicitlyMoveConvertibleTuple<_U1, _U2>(),
1120:/usr/include/c++/6/tuple **** 	bool>::type = false>
1121:/usr/include/c++/6/tuple **** 	explicit tuple(allocator_arg_t __tag, const _Alloc& __a,
1122:/usr/include/c++/6/tuple ****                        tuple<_U1, _U2>&& __in)
1123:/usr/include/c++/6/tuple **** 	: _Inherited(__tag, __a, static_cast<_Tuple_impl<0, _U1, _U2>&&>(__in))
1124:/usr/include/c++/6/tuple **** 	{ }
1125:/usr/include/c++/6/tuple **** 
1126:/usr/include/c++/6/tuple ****       template<typename _Alloc, typename _U1, typename _U2, typename
1127:/usr/include/c++/6/tuple ****         enable_if<_TMC::template
1128:/usr/include/c++/6/tuple ****                     _ConstructibleTuple<_U1, _U2>()
1129:/usr/include/c++/6/tuple ****                   && _TMC::template
1130:/usr/include/c++/6/tuple ****                     _ImplicitlyConvertibleTuple<_U1, _U2>(),
1131:/usr/include/c++/6/tuple **** 	bool>::type = true>
1132:/usr/include/c++/6/tuple ****         tuple(allocator_arg_t __tag, const _Alloc& __a,
1133:/usr/include/c++/6/tuple **** 	      const pair<_U1, _U2>& __in)
1134:/usr/include/c++/6/tuple **** 	: _Inherited(__tag, __a, __in.first, __in.second) { }
1135:/usr/include/c++/6/tuple **** 
1136:/usr/include/c++/6/tuple ****       template<typename _Alloc, typename _U1, typename _U2, typename
1137:/usr/include/c++/6/tuple ****         enable_if<_TMC::template
1138:/usr/include/c++/6/tuple ****                     _ConstructibleTuple<_U1, _U2>()
1139:/usr/include/c++/6/tuple ****                   && !_TMC::template
1140:/usr/include/c++/6/tuple ****                     _ImplicitlyConvertibleTuple<_U1, _U2>(),
1141:/usr/include/c++/6/tuple **** 	bool>::type = false>
1142:/usr/include/c++/6/tuple ****         explicit tuple(allocator_arg_t __tag, const _Alloc& __a,
1143:/usr/include/c++/6/tuple **** 	      const pair<_U1, _U2>& __in)
1144:/usr/include/c++/6/tuple **** 	: _Inherited(__tag, __a, __in.first, __in.second) { }
1145:/usr/include/c++/6/tuple **** 
1146:/usr/include/c++/6/tuple ****       template<typename _Alloc, typename _U1, typename _U2, typename
1147:/usr/include/c++/6/tuple ****         enable_if<_TMC::template
1148:/usr/include/c++/6/tuple ****                     _MoveConstructibleTuple<_U1, _U2>()
1149:/usr/include/c++/6/tuple ****                   && _TMC::template
1150:/usr/include/c++/6/tuple ****                     _ImplicitlyMoveConvertibleTuple<_U1, _U2>(),
1151:/usr/include/c++/6/tuple **** 	bool>::type = true>
1152:/usr/include/c++/6/tuple ****         tuple(allocator_arg_t __tag, const _Alloc& __a, pair<_U1, _U2>&& __in)
1153:/usr/include/c++/6/tuple **** 	: _Inherited(__tag, __a, std::forward<_U1>(__in.first),
1154:/usr/include/c++/6/tuple **** 		     std::forward<_U2>(__in.second)) { }
1155:/usr/include/c++/6/tuple **** 
GAS LISTING /tmp/ccvUPO8Q.s 			page 677


1156:/usr/include/c++/6/tuple ****       template<typename _Alloc, typename _U1, typename _U2, typename
1157:/usr/include/c++/6/tuple ****         enable_if<_TMC::template
1158:/usr/include/c++/6/tuple ****                     _MoveConstructibleTuple<_U1, _U2>()
1159:/usr/include/c++/6/tuple ****                   && !_TMC::template
1160:/usr/include/c++/6/tuple ****                     _ImplicitlyMoveConvertibleTuple<_U1, _U2>(),
1161:/usr/include/c++/6/tuple **** 	bool>::type = false>
1162:/usr/include/c++/6/tuple ****         explicit tuple(allocator_arg_t __tag, const _Alloc& __a,
1163:/usr/include/c++/6/tuple ****                        pair<_U1, _U2>&& __in)
1164:/usr/include/c++/6/tuple **** 	: _Inherited(__tag, __a, std::forward<_U1>(__in.first),
1165:/usr/include/c++/6/tuple **** 		     std::forward<_U2>(__in.second)) { }
1166:/usr/include/c++/6/tuple **** 
1167:/usr/include/c++/6/tuple ****       tuple&
1168:/usr/include/c++/6/tuple ****       operator=(const tuple& __in)
1169:/usr/include/c++/6/tuple ****       {
1170:/usr/include/c++/6/tuple **** 	static_cast<_Inherited&>(*this) = __in;
1171:/usr/include/c++/6/tuple **** 	return *this;
1172:/usr/include/c++/6/tuple ****       }
1173:/usr/include/c++/6/tuple **** 
1174:/usr/include/c++/6/tuple ****       tuple&
1175:/usr/include/c++/6/tuple ****       operator=(tuple&& __in)
1176:/usr/include/c++/6/tuple ****       noexcept(is_nothrow_move_assignable<_Inherited>::value)
1177:/usr/include/c++/6/tuple ****       {
1178:/usr/include/c++/6/tuple **** 	static_cast<_Inherited&>(*this) = std::move(__in);
1179:/usr/include/c++/6/tuple **** 	return *this;
1180:/usr/include/c++/6/tuple ****       }
1181:/usr/include/c++/6/tuple **** 
1182:/usr/include/c++/6/tuple ****       template<typename _U1, typename _U2>
1183:/usr/include/c++/6/tuple ****         tuple&
1184:/usr/include/c++/6/tuple ****         operator=(const tuple<_U1, _U2>& __in)
1185:/usr/include/c++/6/tuple ****         {
1186:/usr/include/c++/6/tuple **** 	  static_cast<_Inherited&>(*this) = __in;
1187:/usr/include/c++/6/tuple **** 	  return *this;
1188:/usr/include/c++/6/tuple **** 	}
1189:/usr/include/c++/6/tuple **** 
1190:/usr/include/c++/6/tuple ****       template<typename _U1, typename _U2>
1191:/usr/include/c++/6/tuple ****         tuple&
1192:/usr/include/c++/6/tuple ****         operator=(tuple<_U1, _U2>&& __in)
1193:/usr/include/c++/6/tuple ****         {
1194:/usr/include/c++/6/tuple **** 	  static_cast<_Inherited&>(*this) = std::move(__in);
1195:/usr/include/c++/6/tuple **** 	  return *this;
1196:/usr/include/c++/6/tuple **** 	}
1197:/usr/include/c++/6/tuple **** 
1198:/usr/include/c++/6/tuple ****       template<typename _U1, typename _U2>
1199:/usr/include/c++/6/tuple ****         tuple&
1200:/usr/include/c++/6/tuple ****         operator=(const pair<_U1, _U2>& __in)
1201:/usr/include/c++/6/tuple ****         {
1202:/usr/include/c++/6/tuple **** 	  this->_M_head(*this) = __in.first;
1203:/usr/include/c++/6/tuple **** 	  this->_M_tail(*this)._M_head(*this) = __in.second;
1204:/usr/include/c++/6/tuple **** 	  return *this;
1205:/usr/include/c++/6/tuple **** 	}
1206:/usr/include/c++/6/tuple **** 
1207:/usr/include/c++/6/tuple ****       template<typename _U1, typename _U2>
1208:/usr/include/c++/6/tuple ****         tuple&
1209:/usr/include/c++/6/tuple ****         operator=(pair<_U1, _U2>&& __in)
1210:/usr/include/c++/6/tuple ****         {
1211:/usr/include/c++/6/tuple **** 	  this->_M_head(*this) = std::forward<_U1>(__in.first);
1212:/usr/include/c++/6/tuple **** 	  this->_M_tail(*this)._M_head(*this) = std::forward<_U2>(__in.second);
GAS LISTING /tmp/ccvUPO8Q.s 			page 678


1213:/usr/include/c++/6/tuple **** 	  return *this;
1214:/usr/include/c++/6/tuple **** 	}
1215:/usr/include/c++/6/tuple **** 
1216:/usr/include/c++/6/tuple ****       void
1217:/usr/include/c++/6/tuple ****       swap(tuple& __in)
1218:/usr/include/c++/6/tuple ****       noexcept(noexcept(__in._M_swap(__in)))
1219:/usr/include/c++/6/tuple ****       { _Inherited::_M_swap(__in); }
1220:/usr/include/c++/6/tuple ****     };
1221:/usr/include/c++/6/tuple **** 
1222:/usr/include/c++/6/tuple **** 
1223:/usr/include/c++/6/tuple ****   /**
1224:/usr/include/c++/6/tuple ****    * Recursive case for tuple_element: strip off the first element in
1225:/usr/include/c++/6/tuple ****    * the tuple and retrieve the (i-1)th element of the remaining tuple.
1226:/usr/include/c++/6/tuple ****    */
1227:/usr/include/c++/6/tuple ****   template<std::size_t __i, typename _Head, typename... _Tail>
1228:/usr/include/c++/6/tuple ****     struct tuple_element<__i, tuple<_Head, _Tail...> >
1229:/usr/include/c++/6/tuple ****     : tuple_element<__i - 1, tuple<_Tail...> > { };
1230:/usr/include/c++/6/tuple **** 
1231:/usr/include/c++/6/tuple ****   /**
1232:/usr/include/c++/6/tuple ****    * Basis case for tuple_element: The first element is the one we're seeking.
1233:/usr/include/c++/6/tuple ****    */
1234:/usr/include/c++/6/tuple ****   template<typename _Head, typename... _Tail>
1235:/usr/include/c++/6/tuple ****     struct tuple_element<0, tuple<_Head, _Tail...> >
1236:/usr/include/c++/6/tuple ****     {
1237:/usr/include/c++/6/tuple ****       typedef _Head type;
1238:/usr/include/c++/6/tuple ****     };
1239:/usr/include/c++/6/tuple **** 
1240:/usr/include/c++/6/tuple ****   /// class tuple_size
1241:/usr/include/c++/6/tuple ****   template<typename... _Elements>
1242:/usr/include/c++/6/tuple ****     struct tuple_size<tuple<_Elements...>>
1243:/usr/include/c++/6/tuple ****     : public integral_constant<std::size_t, sizeof...(_Elements)> { };
1244:/usr/include/c++/6/tuple **** 
1245:/usr/include/c++/6/tuple ****   template<std::size_t __i, typename _Head, typename... _Tail>
1246:/usr/include/c++/6/tuple ****     constexpr _Head&
1247:/usr/include/c++/6/tuple ****     __get_helper(_Tuple_impl<__i, _Head, _Tail...>& __t) noexcept
1248:/usr/include/c++/6/tuple ****     { return _Tuple_impl<__i, _Head, _Tail...>::_M_head(__t); }
1249:/usr/include/c++/6/tuple **** 
1250:/usr/include/c++/6/tuple ****   template<std::size_t __i, typename _Head, typename... _Tail>
1251:/usr/include/c++/6/tuple ****     constexpr const _Head&
1252:/usr/include/c++/6/tuple ****     __get_helper(const _Tuple_impl<__i, _Head, _Tail...>& __t) noexcept
1253:/usr/include/c++/6/tuple ****     { return _Tuple_impl<__i, _Head, _Tail...>::_M_head(__t); }
1254:/usr/include/c++/6/tuple **** 
1255:/usr/include/c++/6/tuple ****   /// Return a reference to the ith element of a tuple.
1256:/usr/include/c++/6/tuple ****   template<std::size_t __i, typename... _Elements>
1257:/usr/include/c++/6/tuple ****     constexpr __tuple_element_t<__i, tuple<_Elements...>>&
1258:/usr/include/c++/6/tuple ****     get(tuple<_Elements...>& __t) noexcept
1259:/usr/include/c++/6/tuple ****     { return std::__get_helper<__i>(__t); }
1260:/usr/include/c++/6/tuple **** 
1261:/usr/include/c++/6/tuple ****   /// Return a const reference to the ith element of a const tuple.
1262:/usr/include/c++/6/tuple ****   template<std::size_t __i, typename... _Elements>
1263:/usr/include/c++/6/tuple ****     constexpr const __tuple_element_t<__i, tuple<_Elements...>>&
1264:/usr/include/c++/6/tuple ****     get(const tuple<_Elements...>& __t) noexcept
1265:/usr/include/c++/6/tuple ****     { return std::__get_helper<__i>(__t); }
1266:/usr/include/c++/6/tuple **** 
1267:/usr/include/c++/6/tuple ****   /// Return an rvalue reference to the ith element of a tuple rvalue.
1268:/usr/include/c++/6/tuple ****   template<std::size_t __i, typename... _Elements>
1269:/usr/include/c++/6/tuple ****     constexpr __tuple_element_t<__i, tuple<_Elements...>>&&
GAS LISTING /tmp/ccvUPO8Q.s 			page 679


1270:/usr/include/c++/6/tuple ****     get(tuple<_Elements...>&& __t) noexcept
1271:/usr/include/c++/6/tuple ****     {
1272:/usr/include/c++/6/tuple ****       typedef __tuple_element_t<__i, tuple<_Elements...>> __element_type;
1273:/usr/include/c++/6/tuple ****       return std::forward<__element_type&&>(std::get<__i>(__t));
1274:/usr/include/c++/6/tuple ****     }
1275:/usr/include/c++/6/tuple **** 
1276:/usr/include/c++/6/tuple **** #if __cplusplus > 201103L
1277:/usr/include/c++/6/tuple **** 
1278:/usr/include/c++/6/tuple **** #define __cpp_lib_tuples_by_type 201304
1279:/usr/include/c++/6/tuple **** 
1280:/usr/include/c++/6/tuple ****   template<typename _Head, size_t __i, typename... _Tail>
1281:/usr/include/c++/6/tuple ****     constexpr _Head&
1282:/usr/include/c++/6/tuple ****     __get_helper2(_Tuple_impl<__i, _Head, _Tail...>& __t) noexcept
1283:/usr/include/c++/6/tuple ****     { return _Tuple_impl<__i, _Head, _Tail...>::_M_head(__t); }
1284:/usr/include/c++/6/tuple **** 
1285:/usr/include/c++/6/tuple ****   template<typename _Head, size_t __i, typename... _Tail>
1286:/usr/include/c++/6/tuple ****     constexpr const _Head&
1287:/usr/include/c++/6/tuple ****     __get_helper2(const _Tuple_impl<__i, _Head, _Tail...>& __t) noexcept
1288:/usr/include/c++/6/tuple ****     { return _Tuple_impl<__i, _Head, _Tail...>::_M_head(__t); }
1289:/usr/include/c++/6/tuple **** 
1290:/usr/include/c++/6/tuple ****   /// Return a reference to the unique element of type _Tp of a tuple.
1291:/usr/include/c++/6/tuple ****   template <typename _Tp, typename... _Types>
1292:/usr/include/c++/6/tuple ****     constexpr _Tp&
1293:/usr/include/c++/6/tuple ****     get(tuple<_Types...>& __t) noexcept
1294:/usr/include/c++/6/tuple ****     { return std::__get_helper2<_Tp>(__t); }
1295:/usr/include/c++/6/tuple **** 
1296:/usr/include/c++/6/tuple ****   /// Return a reference to the unique element of type _Tp of a tuple rvalue.
1297:/usr/include/c++/6/tuple ****   template <typename _Tp, typename... _Types>
1298:/usr/include/c++/6/tuple ****     constexpr _Tp&&
1299:/usr/include/c++/6/tuple ****     get(tuple<_Types...>&& __t) noexcept
1300:/usr/include/c++/6/tuple ****     { return std::forward<_Tp&&>(std::__get_helper2<_Tp>(__t)); }
1301:/usr/include/c++/6/tuple **** 
1302:/usr/include/c++/6/tuple ****   /// Return a const reference to the unique element of type _Tp of a tuple.
1303:/usr/include/c++/6/tuple ****   template <typename _Tp, typename... _Types>
1304:/usr/include/c++/6/tuple ****     constexpr const _Tp&
1305:/usr/include/c++/6/tuple ****     get(const tuple<_Types...>& __t) noexcept
1306:/usr/include/c++/6/tuple ****     { return std::__get_helper2<_Tp>(__t); }
1307:/usr/include/c++/6/tuple **** #endif
1308:/usr/include/c++/6/tuple **** 
1309:/usr/include/c++/6/tuple ****   // This class performs the comparison operations on tuples
1310:/usr/include/c++/6/tuple ****   template<typename _Tp, typename _Up, size_t __i, size_t __size>
1311:/usr/include/c++/6/tuple ****     struct __tuple_compare
1312:/usr/include/c++/6/tuple ****     {
1313:/usr/include/c++/6/tuple ****       static constexpr bool
1314:/usr/include/c++/6/tuple ****       __eq(const _Tp& __t, const _Up& __u)
1315:/usr/include/c++/6/tuple ****       {
1316:/usr/include/c++/6/tuple **** 	return bool(std::get<__i>(__t) == std::get<__i>(__u))
1317:/usr/include/c++/6/tuple **** 	  && __tuple_compare<_Tp, _Up, __i + 1, __size>::__eq(__t, __u);
1318:/usr/include/c++/6/tuple ****       }
1319:/usr/include/c++/6/tuple ****    
1320:/usr/include/c++/6/tuple ****       static constexpr bool
1321:/usr/include/c++/6/tuple ****       __less(const _Tp& __t, const _Up& __u)
1322:/usr/include/c++/6/tuple ****       {
1323:/usr/include/c++/6/tuple **** 	return bool(std::get<__i>(__t) < std::get<__i>(__u))
1324:/usr/include/c++/6/tuple **** 	  || (!bool(std::get<__i>(__u) < std::get<__i>(__t))
1325:/usr/include/c++/6/tuple **** 	      && __tuple_compare<_Tp, _Up, __i + 1, __size>::__less(__t, __u));
1326:/usr/include/c++/6/tuple ****       }
GAS LISTING /tmp/ccvUPO8Q.s 			page 680


1327:/usr/include/c++/6/tuple ****     };
1328:/usr/include/c++/6/tuple **** 
1329:/usr/include/c++/6/tuple ****   template<typename _Tp, typename _Up, size_t __size>
1330:/usr/include/c++/6/tuple ****     struct __tuple_compare<_Tp, _Up, __size, __size>
1331:/usr/include/c++/6/tuple ****     {
1332:/usr/include/c++/6/tuple ****       static constexpr bool
1333:/usr/include/c++/6/tuple ****       __eq(const _Tp&, const _Up&) { return true; }
1334:/usr/include/c++/6/tuple ****    
1335:/usr/include/c++/6/tuple ****       static constexpr bool
1336:/usr/include/c++/6/tuple ****       __less(const _Tp&, const _Up&) { return false; }
1337:/usr/include/c++/6/tuple ****     };
1338:/usr/include/c++/6/tuple **** 
1339:/usr/include/c++/6/tuple ****   template<typename... _TElements, typename... _UElements>
1340:/usr/include/c++/6/tuple ****     constexpr bool
1341:/usr/include/c++/6/tuple ****     operator==(const tuple<_TElements...>& __t,
1342:/usr/include/c++/6/tuple **** 	       const tuple<_UElements...>& __u)
1343:/usr/include/c++/6/tuple ****     {
1344:/usr/include/c++/6/tuple ****       static_assert(sizeof...(_TElements) == sizeof...(_UElements),
1345:/usr/include/c++/6/tuple **** 	  "tuple objects can only be compared if they have equal sizes.");
1346:/usr/include/c++/6/tuple ****       using __compare = __tuple_compare<tuple<_TElements...>,
1347:/usr/include/c++/6/tuple **** 					tuple<_UElements...>,
1348:/usr/include/c++/6/tuple **** 					0, sizeof...(_TElements)>;
1349:/usr/include/c++/6/tuple ****       return __compare::__eq(__t, __u);
1350:/usr/include/c++/6/tuple ****     }
1351:/usr/include/c++/6/tuple **** 
1352:/usr/include/c++/6/tuple ****   template<typename... _TElements, typename... _UElements>
1353:/usr/include/c++/6/tuple ****     constexpr bool
1354:/usr/include/c++/6/tuple ****     operator<(const tuple<_TElements...>& __t,
1355:/usr/include/c++/6/tuple **** 	      const tuple<_UElements...>& __u)
1356:/usr/include/c++/6/tuple ****     {
1357:/usr/include/c++/6/tuple ****       static_assert(sizeof...(_TElements) == sizeof...(_UElements),
1358:/usr/include/c++/6/tuple **** 	  "tuple objects can only be compared if they have equal sizes.");
1359:/usr/include/c++/6/tuple ****       using __compare = __tuple_compare<tuple<_TElements...>,
1360:/usr/include/c++/6/tuple **** 					tuple<_UElements...>,
1361:/usr/include/c++/6/tuple **** 					0, sizeof...(_TElements)>;
1362:/usr/include/c++/6/tuple ****       return __compare::__less(__t, __u);
1363:/usr/include/c++/6/tuple ****     }
1364:/usr/include/c++/6/tuple **** 
1365:/usr/include/c++/6/tuple ****   template<typename... _TElements, typename... _UElements>
1366:/usr/include/c++/6/tuple ****     constexpr bool
1367:/usr/include/c++/6/tuple ****     operator!=(const tuple<_TElements...>& __t,
1368:/usr/include/c++/6/tuple **** 	       const tuple<_UElements...>& __u)
1369:/usr/include/c++/6/tuple ****     { return !(__t == __u); }
1370:/usr/include/c++/6/tuple **** 
1371:/usr/include/c++/6/tuple ****   template<typename... _TElements, typename... _UElements>
1372:/usr/include/c++/6/tuple ****     constexpr bool
1373:/usr/include/c++/6/tuple ****     operator>(const tuple<_TElements...>& __t,
1374:/usr/include/c++/6/tuple **** 	      const tuple<_UElements...>& __u)
1375:/usr/include/c++/6/tuple ****     { return __u < __t; }
1376:/usr/include/c++/6/tuple **** 
1377:/usr/include/c++/6/tuple ****   template<typename... _TElements, typename... _UElements>
1378:/usr/include/c++/6/tuple ****     constexpr bool
1379:/usr/include/c++/6/tuple ****     operator<=(const tuple<_TElements...>& __t,
1380:/usr/include/c++/6/tuple **** 	       const tuple<_UElements...>& __u)
1381:/usr/include/c++/6/tuple ****     { return !(__u < __t); }
1382:/usr/include/c++/6/tuple **** 
1383:/usr/include/c++/6/tuple ****   template<typename... _TElements, typename... _UElements>
GAS LISTING /tmp/ccvUPO8Q.s 			page 681


1384:/usr/include/c++/6/tuple ****     constexpr bool
1385:/usr/include/c++/6/tuple ****     operator>=(const tuple<_TElements...>& __t,
1386:/usr/include/c++/6/tuple **** 	       const tuple<_UElements...>& __u)
1387:/usr/include/c++/6/tuple ****     { return !(__t < __u); }
1388:/usr/include/c++/6/tuple **** 
1389:/usr/include/c++/6/tuple ****   // NB: DR 705.
1390:/usr/include/c++/6/tuple ****   template<typename... _Elements>
1391:/usr/include/c++/6/tuple ****     constexpr tuple<typename __decay_and_strip<_Elements>::__type...>
1392:/usr/include/c++/6/tuple ****     make_tuple(_Elements&&... __args)
1393:/usr/include/c++/6/tuple ****     {
1394:/usr/include/c++/6/tuple ****       typedef tuple<typename __decay_and_strip<_Elements>::__type...>
1395:/usr/include/c++/6/tuple **** 	__result_type;
1396:/usr/include/c++/6/tuple ****       return __result_type(std::forward<_Elements>(__args)...);
1397:/usr/include/c++/6/tuple ****     }
1398:/usr/include/c++/6/tuple **** 
1399:/usr/include/c++/6/tuple ****   // _GLIBCXX_RESOLVE_LIB_DEFECTS
1400:/usr/include/c++/6/tuple ****   // 2275. Why is forward_as_tuple not constexpr?
1401:/usr/include/c++/6/tuple ****   template<typename... _Elements>
1402:/usr/include/c++/6/tuple ****     constexpr tuple<_Elements&&...>
1403:/usr/include/c++/6/tuple ****     forward_as_tuple(_Elements&&... __args) noexcept
1404:/usr/include/c++/6/tuple ****     { return tuple<_Elements&&...>(std::forward<_Elements>(__args)...); }
1405:/usr/include/c++/6/tuple **** 
1406:/usr/include/c++/6/tuple ****   template<typename... _Tps>
1407:/usr/include/c++/6/tuple ****     struct __is_tuple_like_impl<tuple<_Tps...>> : true_type
1408:/usr/include/c++/6/tuple ****     { };
1409:/usr/include/c++/6/tuple **** 
1410:/usr/include/c++/6/tuple ****   // Internal type trait that allows us to sfinae-protect tuple_cat.
1411:/usr/include/c++/6/tuple ****   template<typename _Tp>
1412:/usr/include/c++/6/tuple ****     struct __is_tuple_like
1413:/usr/include/c++/6/tuple ****     : public __is_tuple_like_impl<typename std::remove_cv
1414:/usr/include/c++/6/tuple ****             <typename std::remove_reference<_Tp>::type>::type>::type
1415:/usr/include/c++/6/tuple ****     { };
1416:/usr/include/c++/6/tuple **** 
1417:/usr/include/c++/6/tuple ****   template<size_t, typename, typename, size_t>
1418:/usr/include/c++/6/tuple ****     struct __make_tuple_impl;
1419:/usr/include/c++/6/tuple **** 
1420:/usr/include/c++/6/tuple ****   template<size_t _Idx, typename _Tuple, typename... _Tp, size_t _Nm>
1421:/usr/include/c++/6/tuple ****     struct __make_tuple_impl<_Idx, tuple<_Tp...>, _Tuple, _Nm>
1422:/usr/include/c++/6/tuple ****     : __make_tuple_impl<_Idx + 1,
1423:/usr/include/c++/6/tuple **** 			tuple<_Tp..., __tuple_element_t<_Idx, _Tuple>>,
1424:/usr/include/c++/6/tuple **** 			_Tuple, _Nm>
1425:/usr/include/c++/6/tuple ****     { };
1426:/usr/include/c++/6/tuple **** 
1427:/usr/include/c++/6/tuple ****   template<std::size_t _Nm, typename _Tuple, typename... _Tp>
1428:/usr/include/c++/6/tuple ****     struct __make_tuple_impl<_Nm, tuple<_Tp...>, _Tuple, _Nm>
1429:/usr/include/c++/6/tuple ****     {
1430:/usr/include/c++/6/tuple ****       typedef tuple<_Tp...> __type;
1431:/usr/include/c++/6/tuple ****     };
1432:/usr/include/c++/6/tuple **** 
1433:/usr/include/c++/6/tuple ****   template<typename _Tuple>
1434:/usr/include/c++/6/tuple ****     struct __do_make_tuple
1435:/usr/include/c++/6/tuple ****     : __make_tuple_impl<0, tuple<>, _Tuple, std::tuple_size<_Tuple>::value>
1436:/usr/include/c++/6/tuple ****     { };
1437:/usr/include/c++/6/tuple **** 
1438:/usr/include/c++/6/tuple ****   // Returns the std::tuple equivalent of a tuple-like type.
1439:/usr/include/c++/6/tuple ****   template<typename _Tuple>
1440:/usr/include/c++/6/tuple ****     struct __make_tuple
GAS LISTING /tmp/ccvUPO8Q.s 			page 682


1441:/usr/include/c++/6/tuple ****     : public __do_make_tuple<typename std::remove_cv
1442:/usr/include/c++/6/tuple ****             <typename std::remove_reference<_Tuple>::type>::type>
1443:/usr/include/c++/6/tuple ****     { };
1444:/usr/include/c++/6/tuple **** 
1445:/usr/include/c++/6/tuple ****   // Combines several std::tuple's into a single one.
1446:/usr/include/c++/6/tuple ****   template<typename...>
1447:/usr/include/c++/6/tuple ****     struct __combine_tuples;
1448:/usr/include/c++/6/tuple **** 
1449:/usr/include/c++/6/tuple ****   template<>
1450:/usr/include/c++/6/tuple ****     struct __combine_tuples<>
1451:/usr/include/c++/6/tuple ****     {
1452:/usr/include/c++/6/tuple ****       typedef tuple<> __type;
1453:/usr/include/c++/6/tuple ****     };
1454:/usr/include/c++/6/tuple **** 
1455:/usr/include/c++/6/tuple ****   template<typename... _Ts>
1456:/usr/include/c++/6/tuple ****     struct __combine_tuples<tuple<_Ts...>>
1457:/usr/include/c++/6/tuple ****     {
1458:/usr/include/c++/6/tuple ****       typedef tuple<_Ts...> __type;
1459:/usr/include/c++/6/tuple ****     };
1460:/usr/include/c++/6/tuple **** 
1461:/usr/include/c++/6/tuple ****   template<typename... _T1s, typename... _T2s, typename... _Rem>
1462:/usr/include/c++/6/tuple ****     struct __combine_tuples<tuple<_T1s...>, tuple<_T2s...>, _Rem...>
1463:/usr/include/c++/6/tuple ****     {
1464:/usr/include/c++/6/tuple ****       typedef typename __combine_tuples<tuple<_T1s..., _T2s...>,
1465:/usr/include/c++/6/tuple **** 					_Rem...>::__type __type;
1466:/usr/include/c++/6/tuple ****     };
1467:/usr/include/c++/6/tuple **** 
1468:/usr/include/c++/6/tuple ****   // Computes the result type of tuple_cat given a set of tuple-like types.
1469:/usr/include/c++/6/tuple ****   template<typename... _Tpls>
1470:/usr/include/c++/6/tuple ****     struct __tuple_cat_result
1471:/usr/include/c++/6/tuple ****     {
1472:/usr/include/c++/6/tuple ****       typedef typename __combine_tuples
1473:/usr/include/c++/6/tuple ****         <typename __make_tuple<_Tpls>::__type...>::__type __type;
1474:/usr/include/c++/6/tuple ****     };
1475:/usr/include/c++/6/tuple **** 
1476:/usr/include/c++/6/tuple ****   // Helper to determine the index set for the first tuple-like
1477:/usr/include/c++/6/tuple ****   // type of a given set.
1478:/usr/include/c++/6/tuple ****   template<typename...>
1479:/usr/include/c++/6/tuple ****     struct __make_1st_indices;
1480:/usr/include/c++/6/tuple **** 
1481:/usr/include/c++/6/tuple ****   template<>
1482:/usr/include/c++/6/tuple ****     struct __make_1st_indices<>
1483:/usr/include/c++/6/tuple ****     {
1484:/usr/include/c++/6/tuple ****       typedef std::_Index_tuple<> __type;
1485:/usr/include/c++/6/tuple ****     };
1486:/usr/include/c++/6/tuple **** 
1487:/usr/include/c++/6/tuple ****   template<typename _Tp, typename... _Tpls>
1488:/usr/include/c++/6/tuple ****     struct __make_1st_indices<_Tp, _Tpls...>
1489:/usr/include/c++/6/tuple ****     {
1490:/usr/include/c++/6/tuple ****       typedef typename std::_Build_index_tuple<std::tuple_size<
1491:/usr/include/c++/6/tuple **** 	typename std::remove_reference<_Tp>::type>::value>::__type __type;
1492:/usr/include/c++/6/tuple ****     };
1493:/usr/include/c++/6/tuple **** 
1494:/usr/include/c++/6/tuple ****   // Performs the actual concatenation by step-wise expanding tuple-like
1495:/usr/include/c++/6/tuple ****   // objects into the elements,  which are finally forwarded into the
1496:/usr/include/c++/6/tuple ****   // result tuple.
1497:/usr/include/c++/6/tuple ****   template<typename _Ret, typename _Indices, typename... _Tpls>
GAS LISTING /tmp/ccvUPO8Q.s 			page 683


1498:/usr/include/c++/6/tuple ****     struct __tuple_concater;
1499:/usr/include/c++/6/tuple **** 
1500:/usr/include/c++/6/tuple ****   template<typename _Ret, std::size_t... _Is, typename _Tp, typename... _Tpls>
1501:/usr/include/c++/6/tuple ****     struct __tuple_concater<_Ret, std::_Index_tuple<_Is...>, _Tp, _Tpls...>
1502:/usr/include/c++/6/tuple ****     {
1503:/usr/include/c++/6/tuple ****       template<typename... _Us>
1504:/usr/include/c++/6/tuple ****         static constexpr _Ret
1505:/usr/include/c++/6/tuple ****         _S_do(_Tp&& __tp, _Tpls&&... __tps, _Us&&... __us)
1506:/usr/include/c++/6/tuple ****         {
1507:/usr/include/c++/6/tuple **** 	  typedef typename __make_1st_indices<_Tpls...>::__type __idx;
1508:/usr/include/c++/6/tuple **** 	  typedef __tuple_concater<_Ret, __idx, _Tpls...>      __next;
1509:/usr/include/c++/6/tuple **** 	  return __next::_S_do(std::forward<_Tpls>(__tps)...,
1510:/usr/include/c++/6/tuple **** 			       std::forward<_Us>(__us)...,
1511:/usr/include/c++/6/tuple **** 			       std::get<_Is>(std::forward<_Tp>(__tp))...);
1512:/usr/include/c++/6/tuple **** 	}
1513:/usr/include/c++/6/tuple ****     };
1514:/usr/include/c++/6/tuple **** 
1515:/usr/include/c++/6/tuple ****   template<typename _Ret>
1516:/usr/include/c++/6/tuple ****     struct __tuple_concater<_Ret, std::_Index_tuple<>>
1517:/usr/include/c++/6/tuple ****     {
1518:/usr/include/c++/6/tuple ****       template<typename... _Us>
1519:/usr/include/c++/6/tuple **** 	static constexpr _Ret
1520:/usr/include/c++/6/tuple **** 	_S_do(_Us&&... __us)
1521:/usr/include/c++/6/tuple ****         {
1522:/usr/include/c++/6/tuple **** 	  return _Ret(std::forward<_Us>(__us)...);
1523:/usr/include/c++/6/tuple **** 	}
1524:/usr/include/c++/6/tuple ****     };
1525:/usr/include/c++/6/tuple **** 
1526:/usr/include/c++/6/tuple ****   /// tuple_cat
1527:/usr/include/c++/6/tuple ****   template<typename... _Tpls, typename = typename
1528:/usr/include/c++/6/tuple ****            enable_if<__and_<__is_tuple_like<_Tpls>...>::value>::type>
1529:/usr/include/c++/6/tuple ****     constexpr auto
1530:/usr/include/c++/6/tuple ****     tuple_cat(_Tpls&&... __tpls)
1531:/usr/include/c++/6/tuple ****     -> typename __tuple_cat_result<_Tpls...>::__type
1532:/usr/include/c++/6/tuple ****     {
1533:/usr/include/c++/6/tuple ****       typedef typename __tuple_cat_result<_Tpls...>::__type __ret;
1534:/usr/include/c++/6/tuple ****       typedef typename __make_1st_indices<_Tpls...>::__type __idx;
1535:/usr/include/c++/6/tuple ****       typedef __tuple_concater<__ret, __idx, _Tpls...> __concater;
1536:/usr/include/c++/6/tuple ****       return __concater::_S_do(std::forward<_Tpls>(__tpls)...);
1537:/usr/include/c++/6/tuple ****     }
1538:/usr/include/c++/6/tuple **** 
1539:/usr/include/c++/6/tuple ****   // _GLIBCXX_RESOLVE_LIB_DEFECTS
1540:/usr/include/c++/6/tuple ****   // 2301. Why is tie not constexpr?
1541:/usr/include/c++/6/tuple ****   /// tie
1542:/usr/include/c++/6/tuple ****   template<typename... _Elements>
1543:/usr/include/c++/6/tuple ****     constexpr tuple<_Elements&...>
1544:/usr/include/c++/6/tuple ****     tie(_Elements&... __args) noexcept
1545:/usr/include/c++/6/tuple ****     { return tuple<_Elements&...>(__args...); }
1546:/usr/include/c++/6/tuple **** 
1547:/usr/include/c++/6/tuple ****   /// swap
1548:/usr/include/c++/6/tuple ****   template<typename... _Elements>
1549:/usr/include/c++/6/tuple ****     inline void 
1550:/usr/include/c++/6/tuple ****     swap(tuple<_Elements...>& __x, tuple<_Elements...>& __y)
1551:/usr/include/c++/6/tuple ****     noexcept(noexcept(__x.swap(__y)))
1552:/usr/include/c++/6/tuple ****     { __x.swap(__y); }
1553:/usr/include/c++/6/tuple **** 
1554:/usr/include/c++/6/tuple ****   // A class (and instance) which can be used in 'tie' when an element
GAS LISTING /tmp/ccvUPO8Q.s 			page 684


1555:/usr/include/c++/6/tuple ****   // of a tuple is not required
1556:/usr/include/c++/6/tuple ****   struct _Swallow_assign
1557:/usr/include/c++/6/tuple ****   {
1558:/usr/include/c++/6/tuple ****     template<class _Tp>
1559:/usr/include/c++/6/tuple ****       const _Swallow_assign&
1560:/usr/include/c++/6/tuple ****       operator=(const _Tp&) const
1561:/usr/include/c++/6/tuple ****       { return *this; }
1562:/usr/include/c++/6/tuple ****   };
1563:/usr/include/c++/6/tuple **** 
1564:/usr/include/c++/6/tuple ****   const _Swallow_assign ignore{};
1565:/usr/include/c++/6/tuple **** 
1566:/usr/include/c++/6/tuple ****   /// Partial specialization for tuples
1567:/usr/include/c++/6/tuple ****   template<typename... _Types, typename _Alloc>
1568:/usr/include/c++/6/tuple ****     struct uses_allocator<tuple<_Types...>, _Alloc> : true_type { };
1569:/usr/include/c++/6/tuple **** 
1570:/usr/include/c++/6/tuple ****   // See stl_pair.h...
1571:/usr/include/c++/6/tuple ****   template<class _T1, class _T2>
1572:/usr/include/c++/6/tuple ****     template<typename... _Args1, typename... _Args2>
1573:/usr/include/c++/6/tuple ****       inline
1574:/usr/include/c++/6/tuple ****       pair<_T1, _T2>::
 17069              		.loc 28 1574 0
 17070              		.cfi_startproc
 17071 0000 55       		pushq	%rbp
 17072              		.cfi_def_cfa_offset 16
 17073              		.cfi_offset 6, -16
 17074 0001 4889E5   		movq	%rsp, %rbp
 17075              		.cfi_def_cfa_register 6
 17076 0004 4883EC20 		subq	$32, %rsp
 17077 0008 48897DE8 		movq	%rdi, -24(%rbp)
 17078 000c 488975E0 		movq	%rsi, -32(%rbp)
 17079              	.LBB151:
1575:/usr/include/c++/6/tuple ****       pair(piecewise_construct_t,
1576:/usr/include/c++/6/tuple **** 	   tuple<_Args1...> __first, tuple<_Args2...> __second)
1577:/usr/include/c++/6/tuple ****       : pair(__first, __second,
1578:/usr/include/c++/6/tuple **** 	     typename _Build_index_tuple<sizeof...(_Args1)>::__type(),
1579:/usr/include/c++/6/tuple **** 	     typename _Build_index_tuple<sizeof...(_Args2)>::__type())
 17080              		.loc 28 1579 0
 17081 0010 488D5518 		leaq	24(%rbp), %rdx
 17082 0014 488B4DE0 		movq	-32(%rbp), %rcx
 17083 0018 488B45E8 		movq	-24(%rbp), %rax
 17084 001c 4151     		pushq	%r9
 17085 001e 4150     		pushq	%r8
 17086 0020 4889CE   		movq	%rcx, %rsi
 17087 0023 4889C7   		movq	%rax, %rdi
 17088 0026 E8000000 		call	_ZNSt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS0_8functionIFvS4_EEEEC1IJRS5_EJLm0EEJEJ
 17088      00
 17089 002b 4883C410 		addq	$16, %rsp
 17090              	.LBE151:
1580:/usr/include/c++/6/tuple ****       { }
 17091              		.loc 28 1580 0
 17092 002f 90       		nop
 17093 0030 C9       		leave
 17094              		.cfi_def_cfa 7, 8
 17095 0031 C3       		ret
 17096              		.cfi_endproc
 17097              	.LFE15178:
 17099              		.weak	_ZNSt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS0_8functionIFvS4_EEEEC1IJRS5_EJEEESt21
GAS LISTING /tmp/ccvUPO8Q.s 			page 685


 17100              		.set	_ZNSt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS0_8functionIFvS4_EEEEC1IJRS5_EJEEESt21p
 17101              		.section	.text._ZNK9__gnu_cxx16__aligned_membufISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEES
 17102              		.align 2
 17103              		.weak	_ZNK9__gnu_cxx16__aligned_membufISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt5dequeIS
 17105              	_ZNK9__gnu_cxx16__aligned_membufISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt5dequeIS6_SaIS6
 17106              	.LFB15180:
  66:/usr/include/c++/6/ext/aligned_buffer.h ****       { return static_cast<const void*>(&_M_storage); }
 17107              		.loc 46 66 0
 17108              		.cfi_startproc
 17109 0000 55       		pushq	%rbp
 17110              		.cfi_def_cfa_offset 16
 17111              		.cfi_offset 6, -16
 17112 0001 4889E5   		movq	%rsp, %rbp
 17113              		.cfi_def_cfa_register 6
 17114 0004 48897DF8 		movq	%rdi, -8(%rbp)
  67:/usr/include/c++/6/ext/aligned_buffer.h **** 
 17115              		.loc 46 67 0
 17116 0008 488B45F8 		movq	-8(%rbp), %rax
 17117 000c 5D       		popq	%rbp
 17118              		.cfi_def_cfa 7, 8
 17119 000d C3       		ret
 17120              		.cfi_endproc
 17121              	.LFE15180:
 17123              		.section	.text._ZNK9__gnu_cxx13new_allocatorIiE8max_sizeEv,"axG",@progbits,_ZNK9__gnu_cxx13new_all
 17124              		.align 2
 17125              		.weak	_ZNK9__gnu_cxx13new_allocatorIiE8max_sizeEv
 17127              	_ZNK9__gnu_cxx13new_allocatorIiE8max_sizeEv:
 17128              	.LFB15200:
 113:/usr/include/c++/6/ext/new_allocator.h ****       { return size_t(-1) / sizeof(_Tp); }
 17129              		.loc 43 113 0
 17130              		.cfi_startproc
 17131 0000 55       		pushq	%rbp
 17132              		.cfi_def_cfa_offset 16
 17133              		.cfi_offset 6, -16
 17134 0001 4889E5   		movq	%rsp, %rbp
 17135              		.cfi_def_cfa_register 6
 17136 0004 48897DF8 		movq	%rdi, -8(%rbp)
 114:/usr/include/c++/6/ext/new_allocator.h **** 
 17137              		.loc 43 114 0
 17138 0008 48B8FFFF 		movabsq	$4611686018427387903, %rax
 17138      FFFFFFFF 
 17138      FF3F
 17139 0012 5D       		popq	%rbp
 17140              		.cfi_def_cfa 7, 8
 17141 0013 C3       		ret
 17142              		.cfi_endproc
 17143              	.LFE15200:
 17145              		.section	.text._ZSt12__niter_baseIPKiSt6vectorIiSaIiEEET_N9__gnu_cxx17__normal_iteratorIS5_T0_EE,"
 17146              		.weak	_ZSt12__niter_baseIPKiSt6vectorIiSaIiEEET_N9__gnu_cxx17__normal_iteratorIS5_T0_EE
 17148              	_ZSt12__niter_baseIPKiSt6vectorIiSaIiEEET_N9__gnu_cxx17__normal_iteratorIS5_T0_EE:
 17149              	.LFB15201:
 980:/usr/include/c++/6/bits/stl_iterator.h ****     { return __it.base(); }
 17150              		.loc 32 980 0
 17151              		.cfi_startproc
 17152 0000 55       		pushq	%rbp
 17153              		.cfi_def_cfa_offset 16
 17154              		.cfi_offset 6, -16
GAS LISTING /tmp/ccvUPO8Q.s 			page 686


 17155 0001 4889E5   		movq	%rsp, %rbp
 17156              		.cfi_def_cfa_register 6
 17157 0004 4883EC10 		subq	$16, %rsp
 17158 0008 48897DF8 		movq	%rdi, -8(%rbp)
 17159              		.loc 32 981 0
 17160 000c 488D45F8 		leaq	-8(%rbp), %rax
 17161 0010 4889C7   		movq	%rax, %rdi
 17162 0013 E8000000 		call	_ZNK9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEE4baseEv
 17162      00
 17163 0018 488B00   		movq	(%rax), %rax
 17164 001b C9       		leave
 17165              		.cfi_def_cfa 7, 8
 17166 001c C3       		ret
 17167              		.cfi_endproc
 17168              	.LFE15201:
 17170              		.section	.text._ZSt12__niter_baseIPiET_S1_,"axG",@progbits,_ZSt12__niter_baseIPiET_S1_,comdat
 17171              		.weak	_ZSt12__niter_baseIPiET_S1_
 17173              	_ZSt12__niter_baseIPiET_S1_:
 17174              	.LFB15202:
 277:/usr/include/c++/6/bits/stl_algobase.h ****     { return __it; }
 17175              		.loc 44 277 0
 17176              		.cfi_startproc
 17177 0000 55       		pushq	%rbp
 17178              		.cfi_def_cfa_offset 16
 17179              		.cfi_offset 6, -16
 17180 0001 4889E5   		movq	%rsp, %rbp
 17181              		.cfi_def_cfa_register 6
 17182 0004 48897DF8 		movq	%rdi, -8(%rbp)
 278:/usr/include/c++/6/bits/stl_algobase.h **** 
 17183              		.loc 44 278 0
 17184 0008 488B45F8 		movq	-8(%rbp), %rax
 17185 000c 5D       		popq	%rbp
 17186              		.cfi_def_cfa 7, 8
 17187 000d C3       		ret
 17188              		.cfi_endproc
 17189              	.LFE15202:
 17191              		.section	.text._ZSt13__copy_move_aILb0EPKiPiET1_T0_S4_S3_,"axG",@progbits,_ZSt13__copy_move_aILb0E
 17192              		.weak	_ZSt13__copy_move_aILb0EPKiPiET1_T0_S4_S3_
 17194              	_ZSt13__copy_move_aILb0EPKiPiET1_T0_S4_S3_:
 17195              	.LFB15203:
 375:/usr/include/c++/6/bits/stl_algobase.h ****     {
 17196              		.loc 44 375 0
 17197              		.cfi_startproc
 17198 0000 55       		pushq	%rbp
 17199              		.cfi_def_cfa_offset 16
 17200              		.cfi_offset 6, -16
 17201 0001 4889E5   		movq	%rsp, %rbp
 17202              		.cfi_def_cfa_register 6
 17203 0004 4883EC30 		subq	$48, %rsp
 17204 0008 48897DE8 		movq	%rdi, -24(%rbp)
 17205 000c 488975E0 		movq	%rsi, -32(%rbp)
 17206 0010 488955D8 		movq	%rdx, -40(%rbp)
 383:/usr/include/c++/6/bits/stl_algobase.h **** 
 17207              		.loc 44 383 0
 17208 0014 C645FF01 		movb	$1, -1(%rbp)
 386:/usr/include/c++/6/bits/stl_algobase.h ****     }
 17209              		.loc 44 386 0
GAS LISTING /tmp/ccvUPO8Q.s 			page 687


 17210 0018 488B55D8 		movq	-40(%rbp), %rdx
 17211 001c 488B4DE0 		movq	-32(%rbp), %rcx
 17212 0020 488B45E8 		movq	-24(%rbp), %rax
 17213 0024 4889CE   		movq	%rcx, %rsi
 17214 0027 4889C7   		movq	%rax, %rdi
 17215 002a E8000000 		call	_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIiEEPT_PKS3_S6_S4_
 17215      00
 387:/usr/include/c++/6/bits/stl_algobase.h **** 
 17216              		.loc 44 387 0
 17217 002f C9       		leave
 17218              		.cfi_def_cfa 7, 8
 17219 0030 C3       		ret
 17220              		.cfi_endproc
 17221              	.LFE15203:
 17223              		.section	.text._ZN5boost9function1IvNS_13intrusive_ptrIN3pmt8pmt_baseEEEE5clearEv,"axG",@progbits,
 17224              		.align 2
 17225              		.weak	_ZN5boost9function1IvNS_13intrusive_ptrIN3pmt8pmt_baseEEEE5clearEv
 17227              	_ZN5boost9function1IvNS_13intrusive_ptrIN3pmt8pmt_baseEEEE5clearEv:
 17228              	.LFB15212:
 875:/usr/include/boost/function/function_template.hpp ****     {
 17229              		.loc 29 875 0
 17230              		.cfi_startproc
 17231 0000 55       		pushq	%rbp
 17232              		.cfi_def_cfa_offset 16
 17233              		.cfi_offset 6, -16
 17234 0001 4889E5   		movq	%rsp, %rbp
 17235              		.cfi_def_cfa_register 6
 17236 0004 53       		pushq	%rbx
 17237 0005 4883EC18 		subq	$24, %rsp
 17238              		.cfi_offset 3, -24
 17239 0009 48897DE8 		movq	%rdi, -24(%rbp)
 877:/usr/include/boost/function/function_template.hpp ****         if (!this->has_trivial_copy_and_destroy())
 17240              		.loc 29 877 0
 17241 000d 488B45E8 		movq	-24(%rbp), %rax
 17242 0011 488B00   		movq	(%rax), %rax
 17243 0014 4885C0   		testq	%rax, %rax
 17244 0017 743D     		je	.L876
 878:/usr/include/boost/function/function_template.hpp ****           get_vtable()->clear(this->functor);
 17245              		.loc 29 878 0
 17246 0019 488B45E8 		movq	-24(%rbp), %rax
 17247 001d 4889C7   		movq	%rax, %rdi
 17248 0020 E8000000 		call	_ZNK5boost13function_base28has_trivial_copy_and_destroyEv
 17248      00
 17249 0025 83F001   		xorl	$1, %eax
 17250 0028 84C0     		testb	%al, %al
 17251 002a 741F     		je	.L875
 879:/usr/include/boost/function/function_template.hpp ****         vtable = 0;
 17252              		.loc 29 879 0
 17253 002c 488B45E8 		movq	-24(%rbp), %rax
 17254 0030 488D5808 		leaq	8(%rax), %rbx
 17255 0034 488B45E8 		movq	-24(%rbp), %rax
 17256 0038 4889C7   		movq	%rax, %rdi
 17257 003b E8000000 		call	_ZNK5boost9function1IvNS_13intrusive_ptrIN3pmt8pmt_baseEEEE10get_vtableEv
 17257      00
 17258 0040 4889DE   		movq	%rbx, %rsi
 17259 0043 4889C7   		movq	%rax, %rdi
 17260 0046 E8000000 		call	_ZNK5boost6detail8function13basic_vtable1IvNS_13intrusive_ptrIN3pmt8pmt_baseEEEE5clearERNS1_1
GAS LISTING /tmp/ccvUPO8Q.s 			page 688


 17260      00
 17261              	.L875:
 880:/usr/include/boost/function/function_template.hpp ****       }
 17262              		.loc 29 880 0
 17263 004b 488B45E8 		movq	-24(%rbp), %rax
 17264 004f 48C70000 		movq	$0, (%rax)
 17264      000000
 17265              	.L876:
 882:/usr/include/boost/function/function_template.hpp **** 
 17266              		.loc 29 882 0
 17267 0056 90       		nop
 17268 0057 4883C418 		addq	$24, %rsp
 17269 005b 5B       		popq	%rbx
 17270 005c 5D       		popq	%rbp
 17271              		.cfi_def_cfa 7, 8
 17272 005d C3       		ret
 17273              		.cfi_endproc
 17274              	.LFE15212:
 17276              		.section	.text._ZSt12__get_helperILm0ERKN5boost13intrusive_ptrIN3pmt8pmt_baseEEEJEERT0_RSt11_Tuple
 17277              		.weak	_ZSt12__get_helperILm0ERKN5boost13intrusive_ptrIN3pmt8pmt_baseEEEJEERT0_RSt11_Tuple_implIXT_
 17279              	_ZSt12__get_helperILm0ERKN5boost13intrusive_ptrIN3pmt8pmt_baseEEEJEERT0_RSt11_Tuple_implIXT_EJS7_Dp
 17280              	.LFB15222:
1247:/usr/include/c++/6/tuple ****     { return _Tuple_impl<__i, _Head, _Tail...>::_M_head(__t); }
 17281              		.loc 28 1247 0
 17282              		.cfi_startproc
 17283 0000 55       		pushq	%rbp
 17284              		.cfi_def_cfa_offset 16
 17285              		.cfi_offset 6, -16
 17286 0001 4889E5   		movq	%rsp, %rbp
 17287              		.cfi_def_cfa_register 6
 17288 0004 4883EC10 		subq	$16, %rsp
 17289 0008 48897DF8 		movq	%rdi, -8(%rbp)
1248:/usr/include/c++/6/tuple **** 
 17290              		.loc 28 1248 0
 17291 000c 488B45F8 		movq	-8(%rbp), %rax
 17292 0010 4889C7   		movq	%rax, %rdi
 17293 0013 E8000000 		call	_ZNSt11_Tuple_implILm0EJRKN5boost13intrusive_ptrIN3pmt8pmt_baseEEEEE7_M_headERS7_
 17293      00
 17294 0018 C9       		leave
 17295              		.cfi_def_cfa 7, 8
 17296 0019 C3       		ret
 17297              		.cfi_endproc
 17298              	.LFE15222:
 17300              		.section	.text._ZSt3getILm0EJRKN5boost13intrusive_ptrIN3pmt8pmt_baseEEEEERNSt13tuple_elementIXT_ES
 17301              		.weak	_ZSt3getILm0EJRKN5boost13intrusive_ptrIN3pmt8pmt_baseEEEEERNSt13tuple_elementIXT_ESt5tupleIJ
 17303              	_ZSt3getILm0EJRKN5boost13intrusive_ptrIN3pmt8pmt_baseEEEEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EE
 17304              	.LFB15221:
1258:/usr/include/c++/6/tuple ****     { return std::__get_helper<__i>(__t); }
 17305              		.loc 28 1258 0
 17306              		.cfi_startproc
 17307 0000 55       		pushq	%rbp
 17308              		.cfi_def_cfa_offset 16
 17309              		.cfi_offset 6, -16
 17310 0001 4889E5   		movq	%rsp, %rbp
 17311              		.cfi_def_cfa_register 6
 17312 0004 4883EC10 		subq	$16, %rsp
 17313 0008 48897DF8 		movq	%rdi, -8(%rbp)
GAS LISTING /tmp/ccvUPO8Q.s 			page 689


1259:/usr/include/c++/6/tuple **** 
 17314              		.loc 28 1259 0
 17315 000c 488B45F8 		movq	-8(%rbp), %rax
 17316 0010 4889C7   		movq	%rax, %rdi
 17317 0013 E8000000 		call	_ZSt12__get_helperILm0ERKN5boost13intrusive_ptrIN3pmt8pmt_baseEEEJEERT0_RSt11_Tuple_implIXT_E
 17317      00
 17318 0018 C9       		leave
 17319              		.cfi_def_cfa 7, 8
 17320 0019 C3       		ret
 17321              		.cfi_endproc
 17322              	.LFE15221:
 17324              		.section	.text._ZNSt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS0_8functionIFvS4_EEEEC2IJRS5_
 17325              		.align 2
 17326              		.weak	_ZNSt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS0_8functionIFvS4_EEEEC2IJRS5_EJLm0EEJE
 17328              	_ZNSt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS0_8functionIFvS4_EEEEC2IJRS5_EJLm0EEJEJEEERSt
 17329              	.LFB15223:
1581:/usr/include/c++/6/tuple **** 
1582:/usr/include/c++/6/tuple ****   template<class _T1, class _T2>
1583:/usr/include/c++/6/tuple ****     template<typename... _Args1, std::size_t... _Indexes1,
1584:/usr/include/c++/6/tuple ****              typename... _Args2, std::size_t... _Indexes2>
1585:/usr/include/c++/6/tuple ****       inline
1586:/usr/include/c++/6/tuple ****       pair<_T1, _T2>::
 17330              		.loc 28 1586 0
 17331              		.cfi_startproc
 17332              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 17333              		.cfi_lsda 0x1b,.LLSDA15223
 17334 0000 55       		pushq	%rbp
 17335              		.cfi_def_cfa_offset 16
 17336              		.cfi_offset 6, -16
 17337 0001 4889E5   		movq	%rsp, %rbp
 17338              		.cfi_def_cfa_register 6
 17339 0004 53       		pushq	%rbx
 17340 0005 4883EC28 		subq	$40, %rsp
 17341              		.cfi_offset 3, -24
 17342 0009 48897DE8 		movq	%rdi, -24(%rbp)
 17343 000d 488975E0 		movq	%rsi, -32(%rbp)
 17344 0011 488955D8 		movq	%rdx, -40(%rbp)
 17345              	.LBB152:
1587:/usr/include/c++/6/tuple ****       pair(tuple<_Args1...>& __tuple1, tuple<_Args2...>& __tuple2,
1588:/usr/include/c++/6/tuple **** 	   _Index_tuple<_Indexes1...>, _Index_tuple<_Indexes2...>)
1589:/usr/include/c++/6/tuple ****       : first(std::forward<_Args1>(std::get<_Indexes1>(__tuple1))...),
 17346              		.loc 28 1589 0
 17347 0015 488B45E0 		movq	-32(%rbp), %rax
 17348 0019 4889C7   		movq	%rax, %rdi
 17349 001c E8000000 		call	_ZSt3getILm0EJRKN5boost13intrusive_ptrIN3pmt8pmt_baseEEEEERNSt13tuple_elementIXT_ESt5tupleIJD
 17349      00
1590:/usr/include/c++/6/tuple ****         second(std::forward<_Args2>(std::get<_Indexes2>(__tuple2))...)
 17350              		.loc 28 1590 0
 17351 0021 4889C7   		movq	%rax, %rdi
 17352 0024 E8000000 		call	_ZSt7forwardIRKN5boost13intrusive_ptrIN3pmt8pmt_baseEEEEOT_RNSt16remove_referenceIS7_E4typeE
 17352      00
 17353 0029 4889C2   		movq	%rax, %rdx
 17354 002c 488B45E8 		movq	-24(%rbp), %rax
 17355 0030 4889D6   		movq	%rdx, %rsi
 17356 0033 4889C7   		movq	%rax, %rdi
 17357              	.LEHB103:
 17358 0036 E8000000 		call	_ZN5boost13intrusive_ptrIN3pmt8pmt_baseEEC1ERKS3_
GAS LISTING /tmp/ccvUPO8Q.s 			page 690


 17358      00
 17359              	.LEHE103:
 17360 003b 488B45E8 		movq	-24(%rbp), %rax
 17361 003f 4883C008 		addq	$8, %rax
 17362 0043 4889C7   		movq	%rax, %rdi
 17363              	.LEHB104:
 17364 0046 E8000000 		call	_ZN5boost8functionIFvNS_13intrusive_ptrIN3pmt8pmt_baseEEEEEC1Ev
 17364      00
 17365              	.LEHE104:
 17366              	.LBE152:
1591:/usr/include/c++/6/tuple ****       { }
 17367              		.loc 28 1591 0
 17368 004b EB1A     		jmp	.L884
 17369              	.L883:
 17370 004d 4889C3   		movq	%rax, %rbx
 17371              	.LBB153:
1590:/usr/include/c++/6/tuple ****         second(std::forward<_Args2>(std::get<_Indexes2>(__tuple2))...)
 17372              		.loc 28 1590 0
 17373 0050 488B45E8 		movq	-24(%rbp), %rax
 17374 0054 4889C7   		movq	%rax, %rdi
 17375 0057 E8000000 		call	_ZN5boost13intrusive_ptrIN3pmt8pmt_baseEED1Ev
 17375      00
 17376 005c 4889D8   		movq	%rbx, %rax
 17377 005f 4889C7   		movq	%rax, %rdi
 17378              	.LEHB105:
 17379 0062 E8000000 		call	_Unwind_Resume@PLT
 17379      00
 17380              	.LEHE105:
 17381              	.L884:
 17382              	.LBE153:
 17383              		.loc 28 1591 0
 17384 0067 4883C428 		addq	$40, %rsp
 17385 006b 5B       		popq	%rbx
 17386 006c 5D       		popq	%rbp
 17387              		.cfi_def_cfa 7, 8
 17388 006d C3       		ret
 17389              		.cfi_endproc
 17390              	.LFE15223:
 17391              		.section	.gcc_except_table
 17392              	.LLSDA15223:
 17393 0277 FF       		.byte	0xff
 17394 0278 FF       		.byte	0xff
 17395 0279 01       		.byte	0x1
 17396 027a 0C       		.uleb128 .LLSDACSE15223-.LLSDACSB15223
 17397              	.LLSDACSB15223:
 17398 027b 36       		.uleb128 .LEHB103-.LFB15223
 17399 027c 05       		.uleb128 .LEHE103-.LEHB103
 17400 027d 00       		.uleb128 0
 17401 027e 00       		.uleb128 0
 17402 027f 46       		.uleb128 .LEHB104-.LFB15223
 17403 0280 05       		.uleb128 .LEHE104-.LEHB104
 17404 0281 4D       		.uleb128 .L883-.LFB15223
 17405 0282 00       		.uleb128 0
 17406 0283 62       		.uleb128 .LEHB105-.LFB15223
 17407 0284 05       		.uleb128 .LEHE105-.LEHB105
 17408 0285 00       		.uleb128 0
 17409 0286 00       		.uleb128 0
GAS LISTING /tmp/ccvUPO8Q.s 			page 691


 17410              	.LLSDACSE15223:
 17411              		.section	.text._ZNSt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS0_8functionIFvS4_EEEEC2IJRS5_
 17413              		.weak	_ZNSt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS0_8functionIFvS4_EEEEC1IJRS5_EJLm0EEJE
 17414              		.set	_ZNSt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS0_8functionIFvS4_EEEEC1IJRS5_EJLm0EEJEJ
 17415              		.section	.text._ZNK9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEE4baseEv,"axG",@progbits,_ZNK
 17416              		.align 2
 17417              		.weak	_ZNK9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEE4baseEv
 17419              	_ZNK9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEE4baseEv:
 17420              	.LFB15250:
 841:/usr/include/c++/6/bits/stl_iterator.h ****       { return _M_current; }
 17421              		.loc 32 841 0
 17422              		.cfi_startproc
 17423 0000 55       		pushq	%rbp
 17424              		.cfi_def_cfa_offset 16
 17425              		.cfi_offset 6, -16
 17426 0001 4889E5   		movq	%rsp, %rbp
 17427              		.cfi_def_cfa_register 6
 17428 0004 48897DF8 		movq	%rdi, -8(%rbp)
 842:/usr/include/c++/6/bits/stl_iterator.h ****     };
 17429              		.loc 32 842 0
 17430 0008 488B45F8 		movq	-8(%rbp), %rax
 17431 000c 5D       		popq	%rbp
 17432              		.cfi_def_cfa 7, 8
 17433 000d C3       		ret
 17434              		.cfi_endproc
 17435              	.LFE15250:
 17437              		.section	.text._ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIiEEPT_PKS3_S6_S
 17438              		.weak	_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIiEEPT_PKS3_S6_S4_
 17440              	_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIiEEPT_PKS3_S6_S4_:
 17441              	.LFB15251:
 357:/usr/include/c++/6/bits/stl_algobase.h ****         {
 17442              		.loc 44 357 0
 17443              		.cfi_startproc
 17444 0000 55       		pushq	%rbp
 17445              		.cfi_def_cfa_offset 16
 17446              		.cfi_offset 6, -16
 17447 0001 4889E5   		movq	%rsp, %rbp
 17448              		.cfi_def_cfa_register 6
 17449 0004 4883EC30 		subq	$48, %rsp
 17450 0008 48897DE8 		movq	%rdi, -24(%rbp)
 17451 000c 488975E0 		movq	%rsi, -32(%rbp)
 17452 0010 488955D8 		movq	%rdx, -40(%rbp)
 366:/usr/include/c++/6/bits/stl_algobase.h **** 	  if (_Num)
 17453              		.loc 44 366 0
 17454 0014 488B55E0 		movq	-32(%rbp), %rdx
 17455 0018 488B45E8 		movq	-24(%rbp), %rax
 17456 001c 4829C2   		subq	%rax, %rdx
 17457 001f 4889D0   		movq	%rdx, %rax
 17458 0022 48C1F802 		sarq	$2, %rax
 17459 0026 488945F8 		movq	%rax, -8(%rbp)
 367:/usr/include/c++/6/bits/stl_algobase.h **** 	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
 17460              		.loc 44 367 0
 17461 002a 48837DF8 		cmpq	$0, -8(%rbp)
 17461      00
 17462 002f 741F     		je	.L888
 368:/usr/include/c++/6/bits/stl_algobase.h **** 	  return __result + _Num;
 17463              		.loc 44 368 0
GAS LISTING /tmp/ccvUPO8Q.s 			page 692


 17464 0031 488B45F8 		movq	-8(%rbp), %rax
 17465 0035 488D1485 		leaq	0(,%rax,4), %rdx
 17465      00000000 
 17466 003d 488B4DE8 		movq	-24(%rbp), %rcx
 17467 0041 488B45D8 		movq	-40(%rbp), %rax
 17468 0045 4889CE   		movq	%rcx, %rsi
 17469 0048 4889C7   		movq	%rax, %rdi
 17470 004b E8000000 		call	memmove@PLT
 17470      00
 17471              	.L888:
 369:/usr/include/c++/6/bits/stl_algobase.h **** 	}
 17472              		.loc 44 369 0
 17473 0050 488B45F8 		movq	-8(%rbp), %rax
 17474 0054 488D1485 		leaq	0(,%rax,4), %rdx
 17474      00000000 
 17475 005c 488B45D8 		movq	-40(%rbp), %rax
 17476 0060 4801D0   		addq	%rdx, %rax
 370:/usr/include/c++/6/bits/stl_algobase.h ****     };
 17477              		.loc 44 370 0
 17478 0063 C9       		leave
 17479              		.cfi_def_cfa 7, 8
 17480 0064 C3       		ret
 17481              		.cfi_endproc
 17482              	.LFE15251:
 17484              		.section	.text._ZNK5boost6detail8function13basic_vtable1IvNS_13intrusive_ptrIN3pmt8pmt_baseEEEE5cl
 17485              		.align 2
 17486              		.weak	_ZNK5boost6detail8function13basic_vtable1IvNS_13intrusive_ptrIN3pmt8pmt_baseEEEE5clearERNS1_
 17488              	_ZNK5boost6detail8function13basic_vtable1IvNS_13intrusive_ptrIN3pmt8pmt_baseEEEE5clearERNS1_15funct
 17489              	.LFB15254:
 507:/usr/include/boost/function/function_template.hpp ****         {
 17490              		.loc 29 507 0
 17491              		.cfi_startproc
 17492 0000 55       		pushq	%rbp
 17493              		.cfi_def_cfa_offset 16
 17494              		.cfi_offset 6, -16
 17495 0001 4889E5   		movq	%rsp, %rbp
 17496              		.cfi_def_cfa_register 6
 17497 0004 4883EC10 		subq	$16, %rsp
 17498 0008 48897DF8 		movq	%rdi, -8(%rbp)
 17499 000c 488975F0 		movq	%rsi, -16(%rbp)
 509:/usr/include/boost/function/function_template.hpp ****             base.manager(functor, functor, destroy_functor_tag);
 17500              		.loc 29 509 0
 17501 0010 488B45F8 		movq	-8(%rbp), %rax
 17502 0014 488B00   		movq	(%rax), %rax
 17503 0017 4885C0   		testq	%rax, %rax
 17504 001a 7419     		je	.L892
 510:/usr/include/boost/function/function_template.hpp ****         }
 17505              		.loc 29 510 0
 17506 001c 488B45F8 		movq	-8(%rbp), %rax
 17507 0020 488B00   		movq	(%rax), %rax
 17508 0023 488B75F0 		movq	-16(%rbp), %rsi
 17509 0027 488B4DF0 		movq	-16(%rbp), %rcx
 17510 002b BA020000 		movl	$2, %edx
 17510      00
 17511 0030 4889CF   		movq	%rcx, %rdi
 17512 0033 FFD0     		call	*%rax
 17513              	.LVL12:
GAS LISTING /tmp/ccvUPO8Q.s 			page 693


 17514              	.L892:
 511:/usr/include/boost/function/function_template.hpp **** 
 17515              		.loc 29 511 0
 17516 0035 90       		nop
 17517 0036 C9       		leave
 17518              		.cfi_def_cfa 7, 8
 17519 0037 C3       		ret
 17520              		.cfi_endproc
 17521              	.LFE15254:
 17523              		.section	.text._ZN5boost8functionIFvNS_13intrusive_ptrIN3pmt8pmt_baseEEEEEC2Ev,"axG",@progbits,_ZN
 17524              		.align 2
 17525              		.weak	_ZN5boost8functionIFvNS_13intrusive_ptrIN3pmt8pmt_baseEEEEEC2Ev
 17527              	_ZN5boost8functionIFvNS_13intrusive_ptrIN3pmt8pmt_baseEEEEEC2Ev:
 17528              	.LFB15262:
1053:/usr/include/boost/function/function_template.hpp ****   : public BOOST_FUNCTION_FUNCTION<R BOOST_FUNCTION_COMMA BOOST_FUNCTION_TEMPLATE_ARGS>
1054:/usr/include/boost/function/function_template.hpp **** {
1055:/usr/include/boost/function/function_template.hpp ****   typedef BOOST_FUNCTION_FUNCTION<R BOOST_FUNCTION_COMMA BOOST_FUNCTION_TEMPLATE_ARGS> base_type;
1056:/usr/include/boost/function/function_template.hpp ****   typedef function self_type;
1057:/usr/include/boost/function/function_template.hpp **** 
1058:/usr/include/boost/function/function_template.hpp ****   struct clear_type {};
1059:/usr/include/boost/function/function_template.hpp **** 
1060:/usr/include/boost/function/function_template.hpp **** public:
1061:/usr/include/boost/function/function_template.hpp **** 
1062:/usr/include/boost/function/function_template.hpp ****   function() : base_type() {}
 17529              		.loc 29 1062 0
 17530              		.cfi_startproc
 17531 0000 55       		pushq	%rbp
 17532              		.cfi_def_cfa_offset 16
 17533              		.cfi_offset 6, -16
 17534 0001 4889E5   		movq	%rsp, %rbp
 17535              		.cfi_def_cfa_register 6
 17536 0004 4883EC10 		subq	$16, %rsp
 17537 0008 48897DF8 		movq	%rdi, -8(%rbp)
 17538              	.LBB154:
 17539              		.loc 29 1062 0
 17540 000c 488B45F8 		movq	-8(%rbp), %rax
 17541 0010 4889C7   		movq	%rax, %rdi
 17542 0013 E8000000 		call	_ZN5boost9function1IvNS_13intrusive_ptrIN3pmt8pmt_baseEEEEC2Ev
 17542      00
 17543              	.LBE154:
 17544 0018 90       		nop
 17545 0019 C9       		leave
 17546              		.cfi_def_cfa 7, 8
 17547 001a C3       		ret
 17548              		.cfi_endproc
 17549              	.LFE15262:
 17551              		.weak	_ZN5boost8functionIFvNS_13intrusive_ptrIN3pmt8pmt_baseEEEEEC1Ev
 17552              		.set	_ZN5boost8functionIFvNS_13intrusive_ptrIN3pmt8pmt_baseEEEEEC1Ev,_ZN5boost8functionIFvNS_13int
 17553              		.section	.text._ZNSt14unary_functionIN5boost13intrusive_ptrIN3pmt8pmt_baseEEEvEC2Ev,"axG",@progbit
 17554              		.align 2
 17555              		.weak	_ZNSt14unary_functionIN5boost13intrusive_ptrIN3pmt8pmt_baseEEEvEC2Ev
 17557              	_ZNSt14unary_functionIN5boost13intrusive_ptrIN3pmt8pmt_baseEEEvEC2Ev:
 17558              	.LFB15285:
 105:/usr/include/c++/6/bits/stl_function.h ****     {
 17559              		.loc 45 105 0
 17560              		.cfi_startproc
 17561 0000 55       		pushq	%rbp
GAS LISTING /tmp/ccvUPO8Q.s 			page 694


 17562              		.cfi_def_cfa_offset 16
 17563              		.cfi_offset 6, -16
 17564 0001 4889E5   		movq	%rsp, %rbp
 17565              		.cfi_def_cfa_register 6
 17566 0004 48897DF8 		movq	%rdi, -8(%rbp)
 105:/usr/include/c++/6/bits/stl_function.h ****     {
 17567              		.loc 45 105 0
 17568 0008 90       		nop
 17569 0009 5D       		popq	%rbp
 17570              		.cfi_def_cfa 7, 8
 17571 000a C3       		ret
 17572              		.cfi_endproc
 17573              	.LFE15285:
 17575              		.weak	_ZNSt14unary_functionIN5boost13intrusive_ptrIN3pmt8pmt_baseEEEvEC1Ev
 17576              		.set	_ZNSt14unary_functionIN5boost13intrusive_ptrIN3pmt8pmt_baseEEEvEC1Ev,_ZNSt14unary_functionIN5
 17577              		.section	.text._ZN5boost9function1IvNS_13intrusive_ptrIN3pmt8pmt_baseEEEEC2Ev,"axG",@progbits,_ZN5
 17578              		.align 2
 17579              		.weak	_ZN5boost9function1IvNS_13intrusive_ptrIN3pmt8pmt_baseEEEEC2Ev
 17581              	_ZN5boost9function1IvNS_13intrusive_ptrIN3pmt8pmt_baseEEEEC2Ev:
 17582              	.LFB15287:
 713:/usr/include/boost/function/function_template.hpp **** 
 17583              		.loc 29 713 0
 17584              		.cfi_startproc
 17585 0000 55       		pushq	%rbp
 17586              		.cfi_def_cfa_offset 16
 17587              		.cfi_offset 6, -16
 17588 0001 4889E5   		movq	%rsp, %rbp
 17589              		.cfi_def_cfa_register 6
 17590 0004 4883EC10 		subq	$16, %rsp
 17591 0008 48897DF8 		movq	%rdi, -8(%rbp)
 17592              	.LBB155:
 713:/usr/include/boost/function/function_template.hpp **** 
 17593              		.loc 29 713 0
 17594 000c 488B45F8 		movq	-8(%rbp), %rax
 17595 0010 4889C7   		movq	%rax, %rdi
 17596 0013 E8000000 		call	_ZN5boost13function_baseC2Ev
 17596      00
 17597 0018 488B45F8 		movq	-8(%rbp), %rax
 17598 001c 4889C7   		movq	%rax, %rdi
 17599 001f E8000000 		call	_ZNSt14unary_functionIN5boost13intrusive_ptrIN3pmt8pmt_baseEEEvEC2Ev
 17599      00
 17600              	.LBE155:
 17601 0024 90       		nop
 17602 0025 C9       		leave
 17603              		.cfi_def_cfa 7, 8
 17604 0026 C3       		ret
 17605              		.cfi_endproc
 17606              	.LFE15287:
 17608              		.weak	_ZN5boost9function1IvNS_13intrusive_ptrIN3pmt8pmt_baseEEEEC1Ev
 17609              		.set	_ZN5boost9function1IvNS_13intrusive_ptrIN3pmt8pmt_baseEEEEC1Ev,_ZN5boost9function1IvNS_13intr
 17610              		.weak	_ZTVN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_14bad_exception_
 17611              		.section	.data.rel.ro.local._ZTVN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_imp
 17612              		.align 8
 17615              	_ZTVN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_14bad_exception_EEEEE:
 17616 0000 00000000 		.quad	0
 17616      00000000 
 17617 0008 00000000 		.quad	_ZTIN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_14bad_exception_
GAS LISTING /tmp/ccvUPO8Q.s 			page 695


 17617      00000000 
 17618 0010 00000000 		.quad	_ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_14bad_exception_EE
 17618      00000000 
 17619 0018 00000000 		.quad	_ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_14bad_exception_EE
 17619      00000000 
 17620 0020 00000000 		.quad	_ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_14bad_exception_EE
 17620      00000000 
 17621 0028 00000000 		.quad	_ZN5boost6detail15sp_counted_base7destroyEv
 17621      00000000 
 17622 0030 00000000 		.quad	_ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_14bad_exception_EE
 17622      00000000 
 17623 0038 00000000 		.quad	_ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_14bad_exception_EE
 17623      00000000 
 17624              		.section	.text._ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_14bad_exc
 17625              		.align 2
 17626              		.weak	_ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_14bad_exception_EE
 17628              	_ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_14bad_exception_EEEED2Ev:
 17629              	.LFB15338:
  53:/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp **** {
 17630              		.loc 48 53 0
 17631              		.cfi_startproc
 17632 0000 55       		pushq	%rbp
 17633              		.cfi_def_cfa_offset 16
 17634              		.cfi_offset 6, -16
 17635 0001 4889E5   		movq	%rsp, %rbp
 17636              		.cfi_def_cfa_register 6
 17637 0004 4883EC10 		subq	$16, %rsp
 17638 0008 48897DF8 		movq	%rdi, -8(%rbp)
 17639              	.LBB156:
  53:/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp **** {
 17640              		.loc 48 53 0
 17641 000c 488D1500 		leaq	16+_ZTVN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_14bad_exceptio
 17641      000000
 17642 0013 488B45F8 		movq	-8(%rbp), %rax
 17643 0017 488910   		movq	%rdx, (%rax)
 17644 001a 488B45F8 		movq	-8(%rbp), %rax
 17645 001e 4889C7   		movq	%rax, %rdi
 17646 0021 E8000000 		call	_ZN5boost6detail15sp_counted_baseD2Ev
 17646      00
 17647              	.LBE156:
 17648 0026 90       		nop
 17649 0027 C9       		leave
 17650              		.cfi_def_cfa 7, 8
 17651 0028 C3       		ret
 17652              		.cfi_endproc
 17653              	.LFE15338:
 17655              		.weak	_ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_14bad_exception_EE
 17656              		.set	_ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_14bad_exception_EEE
 17657              		.section	.text._ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_14bad_exc
 17658              		.align 2
 17659              		.weak	_ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_14bad_exception_EE
 17661              	_ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_14bad_exception_EEEED0Ev:
 17662              	.LFB15340:
  53:/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp **** {
 17663              		.loc 48 53 0
 17664              		.cfi_startproc
 17665 0000 55       		pushq	%rbp
GAS LISTING /tmp/ccvUPO8Q.s 			page 696


 17666              		.cfi_def_cfa_offset 16
 17667              		.cfi_offset 6, -16
 17668 0001 4889E5   		movq	%rsp, %rbp
 17669              		.cfi_def_cfa_register 6
 17670 0004 4883EC10 		subq	$16, %rsp
 17671 0008 48897DF8 		movq	%rdi, -8(%rbp)
  53:/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp **** {
 17672              		.loc 48 53 0
 17673 000c 488B45F8 		movq	-8(%rbp), %rax
 17674 0010 4889C7   		movq	%rax, %rdi
 17675 0013 E8000000 		call	_ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_14bad_exception_EEE
 17675      00
 17676 0018 488B45F8 		movq	-8(%rbp), %rax
 17677 001c BE180000 		movl	$24, %esi
 17677      00
 17678 0021 4889C7   		movq	%rax, %rdi
 17679 0024 E8000000 		call	_ZdlPvm@PLT
 17679      00
 17680 0029 C9       		leave
 17681              		.cfi_def_cfa 7, 8
 17682 002a C3       		ret
 17683              		.cfi_endproc
 17684              	.LFE15340:
 17686              		.weak	_ZTVN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEE
 17687              		.section	.data.rel.ro.local._ZTVN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_imp
 17688              		.align 8
 17691              	_ZTVN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEEE:
 17692 0000 00000000 		.quad	0
 17692      00000000 
 17693 0008 00000000 		.quad	_ZTIN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEE
 17693      00000000 
 17694 0010 00000000 		.quad	_ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEED1
 17694      00000000 
 17695 0018 00000000 		.quad	_ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEED0
 17695      00000000 
 17696 0020 00000000 		.quad	_ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEE7d
 17696      00000000 
 17697 0028 00000000 		.quad	_ZN5boost6detail15sp_counted_base7destroyEv
 17697      00000000 
 17698 0030 00000000 		.quad	_ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEE11
 17698      00000000 
 17699 0038 00000000 		.quad	_ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEE19
 17699      00000000 
 17700              		.section	.text._ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_all
 17701              		.align 2
 17702              		.weak	_ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEED2
 17704              	_ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEED2Ev:
 17705              	.LFB15342:
  53:/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp **** {
 17706              		.loc 48 53 0
 17707              		.cfi_startproc
 17708 0000 55       		pushq	%rbp
 17709              		.cfi_def_cfa_offset 16
 17710              		.cfi_offset 6, -16
 17711 0001 4889E5   		movq	%rsp, %rbp
 17712              		.cfi_def_cfa_register 6
 17713 0004 4883EC10 		subq	$16, %rsp
GAS LISTING /tmp/ccvUPO8Q.s 			page 697


 17714 0008 48897DF8 		movq	%rdi, -8(%rbp)
 17715              	.LBB157:
  53:/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp **** {
 17716              		.loc 48 53 0
 17717 000c 488D1500 		leaq	16+_ZTVN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EE
 17717      000000
 17718 0013 488B45F8 		movq	-8(%rbp), %rax
 17719 0017 488910   		movq	%rdx, (%rax)
 17720 001a 488B45F8 		movq	-8(%rbp), %rax
 17721 001e 4889C7   		movq	%rax, %rdi
 17722 0021 E8000000 		call	_ZN5boost6detail15sp_counted_baseD2Ev
 17722      00
 17723              	.LBE157:
 17724 0026 90       		nop
 17725 0027 C9       		leave
 17726              		.cfi_def_cfa 7, 8
 17727 0028 C3       		ret
 17728              		.cfi_endproc
 17729              	.LFE15342:
 17731              		.weak	_ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEED1
 17732              		.set	_ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEED1E
 17733              		.section	.text._ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_all
 17734              		.align 2
 17735              		.weak	_ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEED0
 17737              	_ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEED0Ev:
 17738              	.LFB15344:
  53:/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp **** {
 17739              		.loc 48 53 0
 17740              		.cfi_startproc
 17741 0000 55       		pushq	%rbp
 17742              		.cfi_def_cfa_offset 16
 17743              		.cfi_offset 6, -16
 17744 0001 4889E5   		movq	%rsp, %rbp
 17745              		.cfi_def_cfa_register 6
 17746 0004 4883EC10 		subq	$16, %rsp
 17747 0008 48897DF8 		movq	%rdi, -8(%rbp)
  53:/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp **** {
 17748              		.loc 48 53 0
 17749 000c 488B45F8 		movq	-8(%rbp), %rax
 17750 0010 4889C7   		movq	%rax, %rdi
 17751 0013 E8000000 		call	_ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEED1E
 17751      00
 17752 0018 488B45F8 		movq	-8(%rbp), %rax
 17753 001c BE180000 		movl	$24, %esi
 17753      00
 17754 0021 4889C7   		movq	%rax, %rdi
 17755 0024 E8000000 		call	_ZdlPvm@PLT
 17755      00
 17756 0029 C9       		leave
 17757              		.cfi_def_cfa 7, 8
 17758 002a C3       		ret
 17759              		.cfi_endproc
 17760              	.LFE15344:
 17762              		.weak	_ZTVN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEE
 17763              		.section	.data.rel.ro._ZTVN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad
 17764              		.align 8
 17767              	_ZTVN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEEE:
GAS LISTING /tmp/ccvUPO8Q.s 			page 698


 17768 0000 38000000 		.quad	56
 17768      00000000 
 17769 0008 00000000 		.quad	0
 17769      00000000 
 17770 0010 00000000 		.quad	_ZTIN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEE
 17770      00000000 
 17771 0018 00000000 		.quad	_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEE
 17771      00000000 
 17772 0020 00000000 		.quad	_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEE
 17772      00000000 
 17773 0028 00000000 		.quad	_ZNKSt13runtime_error4whatEv
 17773      00000000 
 17774 0030 00000000 		.quad	_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEE
 17774      00000000 
 17775 0038 00000000 		.quad	_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEE
 17775      00000000 
 17776 0040 F0FFFFFF 		.quad	-16
 17776      FFFFFFFF 
 17777 0048 00000000 		.quad	_ZTIN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEE
 17777      00000000 
 17778 0050 00000000 		.quad	_ZThn16_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_ca
 17778      00000000 
 17779 0058 00000000 		.quad	_ZThn16_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_ca
 17779      00000000 
 17780 0060 C8FFFFFF 		.quad	-56
 17780      FFFFFFFF 
 17781 0068 C8FFFFFF 		.quad	-56
 17781      FFFFFFFF 
 17782 0070 C8FFFFFF 		.quad	-56
 17782      FFFFFFFF 
 17783 0078 C8FFFFFF 		.quad	-56
 17783      FFFFFFFF 
 17784 0080 00000000 		.quad	_ZTIN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEE
 17784      00000000 
 17785 0088 00000000 		.quad	_ZTv0_n24_NK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function
 17785      00000000 
 17786 0090 00000000 		.quad	_ZTv0_n32_NK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function
 17786      00000000 
 17787 0098 00000000 		.quad	_ZTv0_n40_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_
 17787      00000000 
 17788 00a0 00000000 		.quad	_ZTv0_n40_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_
 17788      00000000 
 17789              		.weak	_ZTTN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEE
 17790              		.section	.data.rel.ro.local._ZTTN5boost16exception_detail10clone_implINS0_19error_info_injectorINS
 17791              		.align 8
 17794              	_ZTTN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEEE:
 17795 0000 00000000 		.quad	_ZTVN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEE
 17795      00000000 
 17796 0008 00000000 		.quad	_ZTVN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEE
 17796      00000000 
 17797              		.weak	_ZTVN5boost16exception_detail19error_info_injectorINS_17bad_function_callEEE
 17798              		.section	.data.rel.ro._ZTVN5boost16exception_detail19error_info_injectorINS_17bad_function_callEEE
 17799              		.align 8
 17802              	_ZTVN5boost16exception_detail19error_info_injectorINS_17bad_function_callEEE:
 17803 0000 00000000 		.quad	0
 17803      00000000 
 17804 0008 00000000 		.quad	_ZTIN5boost16exception_detail19error_info_injectorINS_17bad_function_callEEE
GAS LISTING /tmp/ccvUPO8Q.s 			page 699


 17804      00000000 
 17805 0010 00000000 		.quad	_ZN5boost16exception_detail19error_info_injectorINS_17bad_function_callEED1Ev
 17805      00000000 
 17806 0018 00000000 		.quad	_ZN5boost16exception_detail19error_info_injectorINS_17bad_function_callEED0Ev
 17806      00000000 
 17807 0020 00000000 		.quad	_ZNKSt13runtime_error4whatEv
 17807      00000000 
 17808 0028 F0FFFFFF 		.quad	-16
 17808      FFFFFFFF 
 17809 0030 00000000 		.quad	_ZTIN5boost16exception_detail19error_info_injectorINS_17bad_function_callEEE
 17809      00000000 
 17810 0038 00000000 		.quad	_ZThn16_N5boost16exception_detail19error_info_injectorINS_17bad_function_callEED1Ev
 17810      00000000 
 17811 0040 00000000 		.quad	_ZThn16_N5boost16exception_detail19error_info_injectorINS_17bad_function_callEED0Ev
 17811      00000000 
 17812              		.weak	_ZTVN5boost16exception_detail10clone_implINS0_14bad_exception_EEE
 17813              		.section	.data.rel.ro._ZTVN5boost16exception_detail10clone_implINS0_14bad_exception_EEE,"awG",@pro
 17814              		.align 8
 17817              	_ZTVN5boost16exception_detail10clone_implINS0_14bad_exception_EEE:
 17818 0000 30000000 		.quad	48
 17818      00000000 
 17819 0008 00000000 		.quad	0
 17819      00000000 
 17820 0010 00000000 		.quad	_ZTIN5boost16exception_detail10clone_implINS0_14bad_exception_EEE
 17820      00000000 
 17821 0018 00000000 		.quad	_ZN5boost16exception_detail10clone_implINS0_14bad_exception_EED1Ev
 17821      00000000 
 17822 0020 00000000 		.quad	_ZN5boost16exception_detail10clone_implINS0_14bad_exception_EED0Ev
 17822      00000000 
 17823 0028 00000000 		.quad	_ZNK5boost16exception_detail10clone_implINS0_14bad_exception_EE5cloneEv
 17823      00000000 
 17824 0030 00000000 		.quad	_ZNK5boost16exception_detail10clone_implINS0_14bad_exception_EE7rethrowEv
 17824      00000000 
 17825 0038 D8FFFFFF 		.quad	-40
 17825      FFFFFFFF 
 17826 0040 00000000 		.quad	_ZTIN5boost16exception_detail10clone_implINS0_14bad_exception_EEE
 17826      00000000 
 17827 0048 00000000 		.quad	_ZThn40_N5boost16exception_detail10clone_implINS0_14bad_exception_EED1Ev
 17827      00000000 
 17828 0050 00000000 		.quad	_ZThn40_N5boost16exception_detail10clone_implINS0_14bad_exception_EED0Ev
 17828      00000000 
 17829 0058 00000000 		.quad	_ZNKSt13bad_exception4whatEv
 17829      00000000 
 17830 0060 D0FFFFFF 		.quad	-48
 17830      FFFFFFFF 
 17831 0068 D0FFFFFF 		.quad	-48
 17831      FFFFFFFF 
 17832 0070 D0FFFFFF 		.quad	-48
 17832      FFFFFFFF 
 17833 0078 D0FFFFFF 		.quad	-48
 17833      FFFFFFFF 
 17834 0080 00000000 		.quad	_ZTIN5boost16exception_detail10clone_implINS0_14bad_exception_EEE
 17834      00000000 
 17835 0088 00000000 		.quad	_ZTv0_n24_NK5boost16exception_detail10clone_implINS0_14bad_exception_EE5cloneEv
 17835      00000000 
 17836 0090 00000000 		.quad	_ZTv0_n32_NK5boost16exception_detail10clone_implINS0_14bad_exception_EE7rethrowEv
 17836      00000000 
GAS LISTING /tmp/ccvUPO8Q.s 			page 700


 17837 0098 00000000 		.quad	_ZTv0_n40_N5boost16exception_detail10clone_implINS0_14bad_exception_EED1Ev
 17837      00000000 
 17838 00a0 00000000 		.quad	_ZTv0_n40_N5boost16exception_detail10clone_implINS0_14bad_exception_EED0Ev
 17838      00000000 
 17839              		.weak	_ZTTN5boost16exception_detail10clone_implINS0_14bad_exception_EEE
 17840              		.section	.data.rel.ro.local._ZTTN5boost16exception_detail10clone_implINS0_14bad_exception_EEE,"awG
 17841              		.align 8
 17844              	_ZTTN5boost16exception_detail10clone_implINS0_14bad_exception_EEE:
 17845 0000 00000000 		.quad	_ZTVN5boost16exception_detail10clone_implINS0_14bad_exception_EEE+24
 17845      00000000 
 17846 0008 00000000 		.quad	_ZTVN5boost16exception_detail10clone_implINS0_14bad_exception_EEE+136
 17846      00000000 
 17847              		.weak	_ZTVN5boost16exception_detail10clone_implINS0_10bad_alloc_EEE
 17848              		.section	.data.rel.ro._ZTVN5boost16exception_detail10clone_implINS0_10bad_alloc_EEE,"awG",@progbit
 17849              		.align 8
 17852              	_ZTVN5boost16exception_detail10clone_implINS0_10bad_alloc_EEE:
 17853 0000 30000000 		.quad	48
 17853      00000000 
 17854 0008 00000000 		.quad	0
 17854      00000000 
 17855 0010 00000000 		.quad	_ZTIN5boost16exception_detail10clone_implINS0_10bad_alloc_EEE
 17855      00000000 
 17856 0018 00000000 		.quad	_ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EED1Ev
 17856      00000000 
 17857 0020 00000000 		.quad	_ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EED0Ev
 17857      00000000 
 17858 0028 00000000 		.quad	_ZNK5boost16exception_detail10clone_implINS0_10bad_alloc_EE5cloneEv
 17858      00000000 
 17859 0030 00000000 		.quad	_ZNK5boost16exception_detail10clone_implINS0_10bad_alloc_EE7rethrowEv
 17859      00000000 
 17860 0038 D8FFFFFF 		.quad	-40
 17860      FFFFFFFF 
 17861 0040 00000000 		.quad	_ZTIN5boost16exception_detail10clone_implINS0_10bad_alloc_EEE
 17861      00000000 
 17862 0048 00000000 		.quad	_ZThn40_N5boost16exception_detail10clone_implINS0_10bad_alloc_EED1Ev
 17862      00000000 
 17863 0050 00000000 		.quad	_ZThn40_N5boost16exception_detail10clone_implINS0_10bad_alloc_EED0Ev
 17863      00000000 
 17864 0058 00000000 		.quad	_ZNKSt9bad_alloc4whatEv
 17864      00000000 
 17865 0060 D0FFFFFF 		.quad	-48
 17865      FFFFFFFF 
 17866 0068 D0FFFFFF 		.quad	-48
 17866      FFFFFFFF 
 17867 0070 D0FFFFFF 		.quad	-48
 17867      FFFFFFFF 
 17868 0078 D0FFFFFF 		.quad	-48
 17868      FFFFFFFF 
 17869 0080 00000000 		.quad	_ZTIN5boost16exception_detail10clone_implINS0_10bad_alloc_EEE
 17869      00000000 
 17870 0088 00000000 		.quad	_ZTv0_n24_NK5boost16exception_detail10clone_implINS0_10bad_alloc_EE5cloneEv
 17870      00000000 
 17871 0090 00000000 		.quad	_ZTv0_n32_NK5boost16exception_detail10clone_implINS0_10bad_alloc_EE7rethrowEv
 17871      00000000 
 17872 0098 00000000 		.quad	_ZTv0_n40_N5boost16exception_detail10clone_implINS0_10bad_alloc_EED1Ev
 17872      00000000 
 17873 00a0 00000000 		.quad	_ZTv0_n40_N5boost16exception_detail10clone_implINS0_10bad_alloc_EED0Ev
GAS LISTING /tmp/ccvUPO8Q.s 			page 701


 17873      00000000 
 17874              		.weak	_ZTTN5boost16exception_detail10clone_implINS0_10bad_alloc_EEE
 17875              		.section	.data.rel.ro.local._ZTTN5boost16exception_detail10clone_implINS0_10bad_alloc_EEE,"awG",@p
 17876              		.align 8
 17879              	_ZTTN5boost16exception_detail10clone_implINS0_10bad_alloc_EEE:
 17880 0000 00000000 		.quad	_ZTVN5boost16exception_detail10clone_implINS0_10bad_alloc_EEE+24
 17880      00000000 
 17881 0008 00000000 		.quad	_ZTVN5boost16exception_detail10clone_implINS0_10bad_alloc_EEE+136
 17881      00000000 
 17882              		.weak	_ZTVN2gr5lfast12costas2_implE
 17883              		.section	.data.rel.ro._ZTVN2gr5lfast12costas2_implE,"awG",@progbits,_ZTVN2gr5lfast12costas2_implE,
 17884              		.align 8
 17887              	_ZTVN2gr5lfast12costas2_implE:
 17888 0000 78020000 		.quad	632
 17888      00000000 
 17889 0008 28000000 		.quad	40
 17889      00000000 
 17890 0010 00000000 		.quad	0
 17890      00000000 
 17891 0018 00000000 		.quad	_ZTIN2gr5lfast12costas2_implE
 17891      00000000 
 17892 0020 00000000 		.quad	_ZNK2gr5lfast12costas2_impl5errorEv
 17892      00000000 
 17893 0028 00000000 		.quad	_ZN2gr5lfast12costas2_implD1Ev
 17893      00000000 
 17894 0030 00000000 		.quad	_ZN2gr5lfast12costas2_implD0Ev
 17894      00000000 
 17895 0038 00000000 		.quad	_ZN2gr5lfast12costas2_impl9setup_rpcEv
 17895      00000000 
 17896 0040 00000000 		.quad	_ZN2gr5lfast12costas2_impl4workEiRSt6vectorIPKvSaIS4_EERS2_IPvSaIS8_EE
 17896      00000000 
 17897 0048 D8FFFFFF 		.quad	-40
 17897      FFFFFFFF 
 17898 0050 00000000 		.quad	0
 17898      00000000 
 17899 0058 00000000 		.quad	0
 17899      00000000 
 17900 0060 00000000 		.quad	0
 17900      00000000 
 17901 0068 00000000 		.quad	0
 17901      00000000 
 17902 0070 00000000 		.quad	0
 17902      00000000 
 17903 0078 00000000 		.quad	0
 17903      00000000 
 17904 0080 00000000 		.quad	0
 17904      00000000 
 17905 0088 00000000 		.quad	0
 17905      00000000 
 17906 0090 00000000 		.quad	0
 17906      00000000 
 17907 0098 00000000 		.quad	0
 17907      00000000 
 17908 00a0 D8FFFFFF 		.quad	-40
 17908      FFFFFFFF 
 17909 00a8 00000000 		.quad	0
 17909      00000000 
GAS LISTING /tmp/ccvUPO8Q.s 			page 702


 17910 00b0 00000000 		.quad	0
 17910      00000000 
 17911 00b8 00000000 		.quad	0
 17911      00000000 
 17912 00c0 00000000 		.quad	0
 17912      00000000 
 17913 00c8 00000000 		.quad	0
 17913      00000000 
 17914 00d0 00000000 		.quad	0
 17914      00000000 
 17915 00d8 00000000 		.quad	0
 17915      00000000 
 17916 00e0 D8FFFFFF 		.quad	-40
 17916      FFFFFFFF 
 17917 00e8 D8FFFFFF 		.quad	-40
 17917      FFFFFFFF 
 17918 00f0 00000000 		.quad	_ZTIN2gr5lfast12costas2_implE
 17918      00000000 
 17919 00f8 00000000 		.quad	_ZTv0_n24_N2gr5lfast12costas2_implD1Ev
 17919      00000000 
 17920 0100 00000000 		.quad	_ZTv0_n24_N2gr5lfast12costas2_implD0Ev
 17920      00000000 
 17921 0108 00000000 		.quad	_ZN2gr12msg_accepter4postEN5boost13intrusive_ptrIN3pmt8pmt_baseEEES5_
 17921      00000000 
 17922 0110 00000000 		.quad	_ZN2gr11basic_block15has_msg_handlerEN5boost13intrusive_ptrIN3pmt8pmt_baseEEE
 17922      00000000 
 17923 0118 00000000 		.quad	_ZN2gr11basic_block12dispatch_msgEN5boost13intrusive_ptrIN3pmt8pmt_baseEEES5_
 17923      00000000 
 17924 0120 00000000 		.quad	_ZN2gr11basic_block20message_port_is_hierEN5boost13intrusive_ptrIN3pmt8pmt_baseEEE
 17924      00000000 
 17925 0128 00000000 		.quad	_ZN2gr11basic_block23message_port_is_hier_inEN5boost13intrusive_ptrIN3pmt8pmt_baseEEE
 17925      00000000 
 17926 0130 00000000 		.quad	_ZN2gr11basic_block24message_port_is_hier_outEN5boost13intrusive_ptrIN3pmt8pmt_baseEEE
 17926      00000000 
 17927 0138 00000000 		.quad	_ZN2gr11basic_block12has_msg_portEN5boost13intrusive_ptrIN3pmt8pmt_baseEEE
 17927      00000000 
 17928 0140 00000000 		.quad	_ZTv0_n88_N2gr5lfast12costas2_impl9setup_rpcEv
 17928      00000000 
 17929 0148 00000000 		.quad	_ZN2gr11basic_block14check_topologyEii
 17929      00000000 
 17930 0150 00000000 		.quad	_ZN2gr5block22set_processor_affinityERKSt6vectorIiSaIiEE
 17930      00000000 
 17931 0158 00000000 		.quad	_ZN2gr5block24unset_processor_affinityEv
 17931      00000000 
 17932 0160 00000000 		.quad	_ZN2gr5block18processor_affinityEv
 17932      00000000 
 17933 0168 00000000 		.quad	_ZN2gr10sync_block8forecastEiRSt6vectorIiSaIiEE
 17933      00000000 
 17934 0170 00000000 		.quad	_ZN2gr10sync_block12general_workEiRSt6vectorIiSaIiEERS1_IPKvSaIS6_EERS1_IPvSaISA_EE
 17934      00000000 
 17935 0178 00000000 		.quad	_ZN2gr5block5startEv
 17935      00000000 
 17936 0180 00000000 		.quad	_ZN2gr5block4stopEv
 17936      00000000 
 17937 0188 00000000 		.quad	_ZN2gr10sync_block28fixed_rate_ninput_to_noutputEi
 17937      00000000 
 17938 0190 00000000 		.quad	_ZN2gr10sync_block28fixed_rate_noutput_to_ninputEi
GAS LISTING /tmp/ccvUPO8Q.s 			page 703


 17938      00000000 
 17939 0198 00000000 		.quad	_ZTv0_n176_N2gr5lfast12costas2_impl4workEiRSt6vectorIPKvSaIS4_EERS2_IPvSaIS8_EE
 17939      00000000 
 17940 01a0 00000000 		.quad	0
 17940      00000000 
 17941 01a8 88FDFFFF 		.quad	-632
 17941      FFFFFFFF 
 17942 01b0 88FDFFFF 		.quad	-632
 17942      FFFFFFFF 
 17943 01b8 00000000 		.quad	_ZTIN2gr5lfast12costas2_implE
 17943      00000000 
 17944 01c0 00000000 		.quad	_ZTv0_n24_N2gr5lfast12costas2_implD1Ev
 17944      00000000 
 17945 01c8 00000000 		.quad	_ZTv0_n24_N2gr5lfast12costas2_implD0Ev
 17945      00000000 
 17946 01d0 00000000 		.quad	_ZN2gr6blocks12control_loop18set_loop_bandwidthEf
 17946      00000000 
 17947              		.weak	_ZTTN2gr5lfast12costas2_implE
 17948              		.section	.data.rel.ro.local._ZTTN2gr5lfast12costas2_implE,"awG",@progbits,_ZTVN2gr5lfast12costas2_
 17949              		.align 8
 17952              	_ZTTN2gr5lfast12costas2_implE:
 17953 0000 00000000 		.quad	_ZTVN2gr5lfast12costas2_implE+32
 17953      00000000 
 17954 0008 00000000 		.quad	_ZTCN2gr5lfast12costas2_implE0_NS0_7costas2E+32
 17954      00000000 
 17955 0010 00000000 		.quad	_ZTCN2gr5lfast12costas2_implE0_NS0_7costas2E+232
 17955      00000000 
 17956 0018 00000000 		.quad	_ZTCN2gr5lfast12costas2_implE0_NS0_7costas2E+432
 17956      00000000 
 17957 0020 00000000 		.quad	_ZTVN2gr5lfast12costas2_implE+248
 17957      00000000 
 17958 0028 00000000 		.quad	_ZTVN2gr5lfast12costas2_implE+448
 17958      00000000 
 17959              		.hidden	_ZTCN2gr5lfast12costas2_implE0_NS0_7costas2E
 17960              		.weak	_ZTCN2gr5lfast12costas2_implE0_NS0_7costas2E
 17961              		.section	.data.rel.ro._ZTCN2gr5lfast12costas2_implE0_NS0_7costas2E,"awG",@progbits,_ZTVN2gr5lfast1
 17962              		.align 8
 17965              	_ZTCN2gr5lfast12costas2_implE0_NS0_7costas2E:
 17966 0000 78020000 		.quad	632
 17966      00000000 
 17967 0008 28000000 		.quad	40
 17967      00000000 
 17968 0010 00000000 		.quad	0
 17968      00000000 
 17969 0018 00000000 		.quad	_ZTIN2gr5lfast7costas2E
 17969      00000000 
 17970 0020 00000000 		.quad	__cxa_pure_virtual
 17970      00000000 
 17971 0028 00000000 		.quad	0
 17971      00000000 
 17972 0030 00000000 		.quad	0
 17972      00000000 
 17973 0038 00000000 		.quad	0
 17973      00000000 
 17974 0040 00000000 		.quad	0
 17974      00000000 
 17975 0048 00000000 		.quad	0
GAS LISTING /tmp/ccvUPO8Q.s 			page 704


 17975      00000000 
 17976 0050 00000000 		.quad	0
 17976      00000000 
 17977 0058 00000000 		.quad	0
 17977      00000000 
 17978 0060 00000000 		.quad	0
 17978      00000000 
 17979 0068 00000000 		.quad	0
 17979      00000000 
 17980 0070 00000000 		.quad	0
 17980      00000000 
 17981 0078 00000000 		.quad	0
 17981      00000000 
 17982 0080 00000000 		.quad	0
 17982      00000000 
 17983 0088 00000000 		.quad	0
 17983      00000000 
 17984 0090 00000000 		.quad	0
 17984      00000000 
 17985 0098 00000000 		.quad	0
 17985      00000000 
 17986 00a0 00000000 		.quad	0
 17986      00000000 
 17987 00a8 00000000 		.quad	0
 17987      00000000 
 17988 00b0 00000000 		.quad	0
 17988      00000000 
 17989 00b8 00000000 		.quad	0
 17989      00000000 
 17990 00c0 00000000 		.quad	0
 17990      00000000 
 17991 00c8 00000000 		.quad	0
 17991      00000000 
 17992 00d0 D8FFFFFF 		.quad	-40
 17992      FFFFFFFF 
 17993 00d8 D8FFFFFF 		.quad	-40
 17993      FFFFFFFF 
 17994 00e0 00000000 		.quad	_ZTIN2gr5lfast7costas2E
 17994      00000000 
 17995 00e8 00000000 		.quad	0
 17995      00000000 
 17996 00f0 00000000 		.quad	0
 17996      00000000 
 17997 00f8 00000000 		.quad	_ZN2gr12msg_accepter4postEN5boost13intrusive_ptrIN3pmt8pmt_baseEEES5_
 17997      00000000 
 17998 0100 00000000 		.quad	_ZN2gr11basic_block15has_msg_handlerEN5boost13intrusive_ptrIN3pmt8pmt_baseEEE
 17998      00000000 
 17999 0108 00000000 		.quad	_ZN2gr11basic_block12dispatch_msgEN5boost13intrusive_ptrIN3pmt8pmt_baseEEES5_
 17999      00000000 
 18000 0110 00000000 		.quad	_ZN2gr11basic_block20message_port_is_hierEN5boost13intrusive_ptrIN3pmt8pmt_baseEEE
 18000      00000000 
 18001 0118 00000000 		.quad	_ZN2gr11basic_block23message_port_is_hier_inEN5boost13intrusive_ptrIN3pmt8pmt_baseEEE
 18001      00000000 
 18002 0120 00000000 		.quad	_ZN2gr11basic_block24message_port_is_hier_outEN5boost13intrusive_ptrIN3pmt8pmt_baseEEE
 18002      00000000 
 18003 0128 00000000 		.quad	_ZN2gr11basic_block12has_msg_portEN5boost13intrusive_ptrIN3pmt8pmt_baseEEE
 18003      00000000 
GAS LISTING /tmp/ccvUPO8Q.s 			page 705


 18004 0130 00000000 		.quad	_ZN2gr11basic_block9setup_rpcEv
 18004      00000000 
 18005 0138 00000000 		.quad	_ZN2gr11basic_block14check_topologyEii
 18005      00000000 
 18006 0140 00000000 		.quad	_ZN2gr5block22set_processor_affinityERKSt6vectorIiSaIiEE
 18006      00000000 
 18007 0148 00000000 		.quad	_ZN2gr5block24unset_processor_affinityEv
 18007      00000000 
 18008 0150 00000000 		.quad	_ZN2gr5block18processor_affinityEv
 18008      00000000 
 18009 0158 00000000 		.quad	_ZN2gr10sync_block8forecastEiRSt6vectorIiSaIiEE
 18009      00000000 
 18010 0160 00000000 		.quad	_ZN2gr10sync_block12general_workEiRSt6vectorIiSaIiEERS1_IPKvSaIS6_EERS1_IPvSaISA_EE
 18010      00000000 
 18011 0168 00000000 		.quad	_ZN2gr5block5startEv
 18011      00000000 
 18012 0170 00000000 		.quad	_ZN2gr5block4stopEv
 18012      00000000 
 18013 0178 00000000 		.quad	_ZN2gr10sync_block28fixed_rate_ninput_to_noutputEi
 18013      00000000 
 18014 0180 00000000 		.quad	_ZN2gr10sync_block28fixed_rate_noutput_to_ninputEi
 18014      00000000 
 18015 0188 00000000 		.quad	__cxa_pure_virtual
 18015      00000000 
 18016 0190 00000000 		.quad	0
 18016      00000000 
 18017 0198 88FDFFFF 		.quad	-632
 18017      FFFFFFFF 
 18018 01a0 88FDFFFF 		.quad	-632
 18018      FFFFFFFF 
 18019 01a8 00000000 		.quad	_ZTIN2gr5lfast7costas2E
 18019      00000000 
 18020 01b0 00000000 		.quad	0
 18020      00000000 
 18021 01b8 00000000 		.quad	0
 18021      00000000 
 18022 01c0 00000000 		.quad	_ZN2gr6blocks12control_loop18set_loop_bandwidthEf
 18022      00000000 
 18023              		.weak	_ZTVN5boost16exception_detail14bad_exception_E
 18024              		.section	.data.rel.ro._ZTVN5boost16exception_detail14bad_exception_E,"awG",@progbits,_ZTVN5boost16
 18025              		.align 8
 18028              	_ZTVN5boost16exception_detail14bad_exception_E:
 18029 0000 00000000 		.quad	0
 18029      00000000 
 18030 0008 00000000 		.quad	_ZTIN5boost16exception_detail14bad_exception_E
 18030      00000000 
 18031 0010 00000000 		.quad	_ZN5boost16exception_detail14bad_exception_D1Ev
 18031      00000000 
 18032 0018 00000000 		.quad	_ZN5boost16exception_detail14bad_exception_D0Ev
 18032      00000000 
 18033 0020 D8FFFFFF 		.quad	-40
 18033      FFFFFFFF 
 18034 0028 00000000 		.quad	_ZTIN5boost16exception_detail14bad_exception_E
 18034      00000000 
 18035 0030 00000000 		.quad	_ZThn40_N5boost16exception_detail14bad_exception_D1Ev
 18035      00000000 
 18036 0038 00000000 		.quad	_ZThn40_N5boost16exception_detail14bad_exception_D0Ev
GAS LISTING /tmp/ccvUPO8Q.s 			page 706


 18036      00000000 
 18037 0040 00000000 		.quad	_ZNKSt13bad_exception4whatEv
 18037      00000000 
 18038              		.weak	_ZTVN5boost16exception_detail10bad_alloc_E
 18039              		.section	.data.rel.ro._ZTVN5boost16exception_detail10bad_alloc_E,"awG",@progbits,_ZTVN5boost16exce
 18040              		.align 8
 18043              	_ZTVN5boost16exception_detail10bad_alloc_E:
 18044 0000 00000000 		.quad	0
 18044      00000000 
 18045 0008 00000000 		.quad	_ZTIN5boost16exception_detail10bad_alloc_E
 18045      00000000 
 18046 0010 00000000 		.quad	_ZN5boost16exception_detail10bad_alloc_D1Ev
 18046      00000000 
 18047 0018 00000000 		.quad	_ZN5boost16exception_detail10bad_alloc_D0Ev
 18047      00000000 
 18048 0020 D8FFFFFF 		.quad	-40
 18048      FFFFFFFF 
 18049 0028 00000000 		.quad	_ZTIN5boost16exception_detail10bad_alloc_E
 18049      00000000 
 18050 0030 00000000 		.quad	_ZThn40_N5boost16exception_detail10bad_alloc_D1Ev
 18050      00000000 
 18051 0038 00000000 		.quad	_ZThn40_N5boost16exception_detail10bad_alloc_D0Ev
 18051      00000000 
 18052 0040 00000000 		.quad	_ZNKSt9bad_alloc4whatEv
 18052      00000000 
 18053              		.weak	_ZTVN5boost17bad_function_callE
 18054              		.section	.data.rel.ro._ZTVN5boost17bad_function_callE,"awG",@progbits,_ZTVN5boost17bad_function_ca
 18055              		.align 8
 18058              	_ZTVN5boost17bad_function_callE:
 18059 0000 00000000 		.quad	0
 18059      00000000 
 18060 0008 00000000 		.quad	_ZTIN5boost17bad_function_callE
 18060      00000000 
 18061 0010 00000000 		.quad	_ZN5boost17bad_function_callD1Ev
 18061      00000000 
 18062 0018 00000000 		.quad	_ZN5boost17bad_function_callD0Ev
 18062      00000000 
 18063 0020 00000000 		.quad	_ZNKSt13runtime_error4whatEv
 18063      00000000 
 18064              		.weak	_ZTVN5boost6system12system_errorE
 18065              		.section	.data.rel.ro.local._ZTVN5boost6system12system_errorE,"awG",@progbits,_ZTVN5boost6system12
 18066              		.align 8
 18069              	_ZTVN5boost6system12system_errorE:
 18070 0000 00000000 		.quad	0
 18070      00000000 
 18071 0008 00000000 		.quad	_ZTIN5boost6system12system_errorE
 18071      00000000 
 18072 0010 00000000 		.quad	_ZN5boost6system12system_errorD1Ev
 18072      00000000 
 18073 0018 00000000 		.quad	_ZN5boost6system12system_errorD0Ev
 18073      00000000 
 18074 0020 00000000 		.quad	_ZNK5boost6system12system_error4whatEv
 18074      00000000 
 18075              		.weak	_ZTVN5boost6detail15sp_counted_baseE
 18076              		.section	.data.rel.ro._ZTVN5boost6detail15sp_counted_baseE,"awG",@progbits,_ZTVN5boost6detail15sp_
 18077              		.align 8
 18080              	_ZTVN5boost6detail15sp_counted_baseE:
GAS LISTING /tmp/ccvUPO8Q.s 			page 707


 18081 0000 00000000 		.quad	0
 18081      00000000 
 18082 0008 00000000 		.quad	_ZTIN5boost6detail15sp_counted_baseE
 18082      00000000 
 18083 0010 00000000 		.quad	0
 18083      00000000 
 18084 0018 00000000 		.quad	0
 18084      00000000 
 18085 0020 00000000 		.quad	__cxa_pure_virtual
 18085      00000000 
 18086 0028 00000000 		.quad	_ZN5boost6detail15sp_counted_base7destroyEv
 18086      00000000 
 18087 0030 00000000 		.quad	__cxa_pure_virtual
 18087      00000000 
 18088 0038 00000000 		.quad	__cxa_pure_virtual
 18088      00000000 
 18089              		.weak	_ZTVN5boost16exception_detail10clone_baseE
 18090              		.section	.data.rel.ro._ZTVN5boost16exception_detail10clone_baseE,"awG",@progbits,_ZTVN5boost16exce
 18091              		.align 8
 18094              	_ZTVN5boost16exception_detail10clone_baseE:
 18095 0000 00000000 		.quad	0
 18095      00000000 
 18096 0008 00000000 		.quad	_ZTIN5boost16exception_detail10clone_baseE
 18096      00000000 
 18097 0010 00000000 		.quad	__cxa_pure_virtual
 18097      00000000 
 18098 0018 00000000 		.quad	__cxa_pure_virtual
 18098      00000000 
 18099 0020 00000000 		.quad	0
 18099      00000000 
 18100 0028 00000000 		.quad	0
 18100      00000000 
 18101              		.weak	_ZTVN5boost9exceptionE
 18102              		.section	.data.rel.ro._ZTVN5boost9exceptionE,"awG",@progbits,_ZTVN5boost9exceptionE,comdat
 18103              		.align 8
 18106              	_ZTVN5boost9exceptionE:
 18107 0000 00000000 		.quad	0
 18107      00000000 
 18108 0008 00000000 		.quad	_ZTIN5boost9exceptionE
 18108      00000000 
 18109 0010 00000000 		.quad	__cxa_pure_virtual
 18109      00000000 
 18110 0018 00000000 		.quad	__cxa_pure_virtual
 18110      00000000 
 18111              		.weak	_ZTIN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_14bad_exception_
 18112              		.section	.data.rel.ro._ZTIN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_
 18113              		.align 8
 18116              	_ZTIN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_14bad_exception_EEEEE:
 18117 0000 00000000 		.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
 18117      00000000 
 18118 0008 00000000 		.quad	_ZTSN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_14bad_exception_
 18118      00000000 
 18119 0010 00000000 		.quad	_ZTIN5boost6detail15sp_counted_baseE
 18119      00000000 
 18120              		.weak	_ZTSN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_14bad_exception_
 18121              		.section	.rodata._ZTSN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_14bad
 18122              		.align 32
GAS LISTING /tmp/ccvUPO8Q.s 			page 708


 18125              	_ZTSN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_14bad_exception_EEEEE:
 18126 0000 4E35626F 		.string	"N5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_14bad_exception_E
 18126      6F737436 
 18126      64657461 
 18126      696C3137 
 18126      73705F63 
 18127              		.weak	_ZTIN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEE
 18128              		.section	.data.rel.ro._ZTIN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_
 18129              		.align 8
 18132              	_ZTIN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEEE:
 18133 0000 00000000 		.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
 18133      00000000 
 18134 0008 00000000 		.quad	_ZTSN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEE
 18134      00000000 
 18135 0010 00000000 		.quad	_ZTIN5boost6detail15sp_counted_baseE
 18135      00000000 
 18136              		.weak	_ZTSN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEE
 18137              		.section	.rodata._ZTSN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad
 18138              		.align 32
 18141              	_ZTSN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEEE:
 18142 0000 4E35626F 		.string	"N5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEEE
 18142      6F737436 
 18142      64657461 
 18142      696C3137 
 18142      73705F63 
 18143              		.weak	_ZTIN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEE
 18144              		.section	.data.rel.ro._ZTIN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad
 18145              		.align 8
 18148              	_ZTIN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEEE:
 18149 0000 00000000 		.quad	_ZTVN10__cxxabiv121__vmi_class_type_infoE+16
 18149      00000000 
 18150 0008 00000000 		.quad	_ZTSN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEE
 18150      00000000 
 18151 0010 00000000 		.long	0
 18152 0014 02000000 		.long	2
 18153 0018 00000000 		.quad	_ZTIN5boost16exception_detail19error_info_injectorINS_17bad_function_callEEE
 18153      00000000 
 18154 0020 02000000 		.quad	2
 18154      00000000 
 18155 0028 00000000 		.quad	_ZTIN5boost16exception_detail10clone_baseE
 18155      00000000 
 18156 0030 03E8FFFF 		.quad	-6141
 18156      FFFFFFFF 
 18157              		.weak	_ZTSN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEE
 18158              		.section	.rodata._ZTSN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_func
 18159              		.align 32
 18162              	_ZTSN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEEE:
 18163 0000 4E35626F 		.string	"N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEE
 18163      6F737431 
 18163      36657863 
 18163      65707469 
 18163      6F6E5F64 
 18164              		.weak	_ZTIN5boost16exception_detail19error_info_injectorINS_17bad_function_callEEE
 18165              		.section	.data.rel.ro._ZTIN5boost16exception_detail19error_info_injectorINS_17bad_function_callEEE
 18166              		.align 8
 18169              	_ZTIN5boost16exception_detail19error_info_injectorINS_17bad_function_callEEE:
 18170 0000 00000000 		.quad	_ZTVN10__cxxabiv121__vmi_class_type_infoE+16
GAS LISTING /tmp/ccvUPO8Q.s 			page 709


 18170      00000000 
 18171 0008 00000000 		.quad	_ZTSN5boost16exception_detail19error_info_injectorINS_17bad_function_callEEE
 18171      00000000 
 18172 0010 00000000 		.long	0
 18173 0014 02000000 		.long	2
 18174 0018 00000000 		.quad	_ZTIN5boost17bad_function_callE
 18174      00000000 
 18175 0020 02000000 		.quad	2
 18175      00000000 
 18176 0028 00000000 		.quad	_ZTIN5boost9exceptionE
 18176      00000000 
 18177 0030 02100000 		.quad	4098
 18177      00000000 
 18178              		.weak	_ZTSN5boost16exception_detail19error_info_injectorINS_17bad_function_callEEE
 18179              		.section	.rodata._ZTSN5boost16exception_detail19error_info_injectorINS_17bad_function_callEEE,"aG"
 18180              		.align 32
 18183              	_ZTSN5boost16exception_detail19error_info_injectorINS_17bad_function_callEEE:
 18184 0000 4E35626F 		.string	"N5boost16exception_detail19error_info_injectorINS_17bad_function_callEEE"
 18184      6F737431 
 18184      36657863 
 18184      65707469 
 18184      6F6E5F64 
 18185              		.weak	_ZTIN5boost16exception_detail10clone_implINS0_14bad_exception_EEE
 18186              		.section	.data.rel.ro._ZTIN5boost16exception_detail10clone_implINS0_14bad_exception_EEE,"awG",@pro
 18187              		.align 8
 18190              	_ZTIN5boost16exception_detail10clone_implINS0_14bad_exception_EEE:
 18191 0000 00000000 		.quad	_ZTVN10__cxxabiv121__vmi_class_type_infoE+16
 18191      00000000 
 18192 0008 00000000 		.quad	_ZTSN5boost16exception_detail10clone_implINS0_14bad_exception_EEE
 18192      00000000 
 18193 0010 00000000 		.long	0
 18194 0014 02000000 		.long	2
 18195 0018 00000000 		.quad	_ZTIN5boost16exception_detail14bad_exception_E
 18195      00000000 
 18196 0020 02000000 		.quad	2
 18196      00000000 
 18197 0028 00000000 		.quad	_ZTIN5boost16exception_detail10clone_baseE
 18197      00000000 
 18198 0030 03E8FFFF 		.quad	-6141
 18198      FFFFFFFF 
 18199              		.weak	_ZTSN5boost16exception_detail10clone_implINS0_14bad_exception_EEE
 18200              		.section	.rodata._ZTSN5boost16exception_detail10clone_implINS0_14bad_exception_EEE,"aG",@progbits,
 18201              		.align 32
 18204              	_ZTSN5boost16exception_detail10clone_implINS0_14bad_exception_EEE:
 18205 0000 4E35626F 		.string	"N5boost16exception_detail10clone_implINS0_14bad_exception_EEE"
 18205      6F737431 
 18205      36657863 
 18205      65707469 
 18205      6F6E5F64 
 18206              		.weak	_ZTIN5boost16exception_detail10clone_implINS0_10bad_alloc_EEE
 18207              		.section	.data.rel.ro._ZTIN5boost16exception_detail10clone_implINS0_10bad_alloc_EEE,"awG",@progbit
 18208              		.align 8
 18211              	_ZTIN5boost16exception_detail10clone_implINS0_10bad_alloc_EEE:
 18212 0000 00000000 		.quad	_ZTVN10__cxxabiv121__vmi_class_type_infoE+16
 18212      00000000 
 18213 0008 00000000 		.quad	_ZTSN5boost16exception_detail10clone_implINS0_10bad_alloc_EEE
 18213      00000000 
GAS LISTING /tmp/ccvUPO8Q.s 			page 710


 18214 0010 00000000 		.long	0
 18215 0014 02000000 		.long	2
 18216 0018 00000000 		.quad	_ZTIN5boost16exception_detail10bad_alloc_E
 18216      00000000 
 18217 0020 02000000 		.quad	2
 18217      00000000 
 18218 0028 00000000 		.quad	_ZTIN5boost16exception_detail10clone_baseE
 18218      00000000 
 18219 0030 03E8FFFF 		.quad	-6141
 18219      FFFFFFFF 
 18220              		.weak	_ZTSN5boost16exception_detail10clone_implINS0_10bad_alloc_EEE
 18221              		.section	.rodata._ZTSN5boost16exception_detail10clone_implINS0_10bad_alloc_EEE,"aG",@progbits,_ZTS
 18222              		.align 32
 18225              	_ZTSN5boost16exception_detail10clone_implINS0_10bad_alloc_EEE:
 18226 0000 4E35626F 		.string	"N5boost16exception_detail10clone_implINS0_10bad_alloc_EEE"
 18226      6F737431 
 18226      36657863 
 18226      65707469 
 18226      6F6E5F64 
 18227              		.weak	_ZTIN2gr5lfast12costas2_implE
 18228              		.section	.data.rel.ro._ZTIN2gr5lfast12costas2_implE,"awG",@progbits,_ZTIN2gr5lfast12costas2_implE,
 18229              		.align 8
 18232              	_ZTIN2gr5lfast12costas2_implE:
 18233 0000 00000000 		.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
 18233      00000000 
 18234 0008 00000000 		.quad	_ZTSN2gr5lfast12costas2_implE
 18234      00000000 
 18235 0010 00000000 		.quad	_ZTIN2gr5lfast7costas2E
 18235      00000000 
 18236              		.weak	_ZTSN2gr5lfast12costas2_implE
 18237              		.section	.rodata._ZTSN2gr5lfast12costas2_implE,"aG",@progbits,_ZTSN2gr5lfast12costas2_implE,comdat
 18238              		.align 16
 18241              	_ZTSN2gr5lfast12costas2_implE:
 18242 0000 4E326772 		.string	"N2gr5lfast12costas2_implE"
 18242      356C6661 
 18242      73743132 
 18242      636F7374 
 18242      6173325F 
 18243              		.weak	_ZTIN2gr5lfast7costas2E
 18244              		.section	.data.rel.ro._ZTIN2gr5lfast7costas2E,"awG",@progbits,_ZTIN2gr5lfast7costas2E,comdat
 18245              		.align 8
 18248              	_ZTIN2gr5lfast7costas2E:
 18249 0000 00000000 		.quad	_ZTVN10__cxxabiv121__vmi_class_type_infoE+16
 18249      00000000 
 18250 0008 00000000 		.quad	_ZTSN2gr5lfast7costas2E
 18250      00000000 
 18251 0010 00000000 		.long	0
 18252 0014 02000000 		.long	2
 18253 0018 00000000 		.quad	_ZTIN2gr10sync_blockE
 18253      00000000 
 18254 0020 03E8FFFF 		.quad	-6141
 18254      FFFFFFFF 
 18255 0028 00000000 		.quad	_ZTIN2gr6blocks12control_loopE
 18255      00000000 
 18256 0030 03E0FFFF 		.quad	-8189
 18256      FFFFFFFF 
 18257              		.weak	_ZTSN2gr5lfast7costas2E
GAS LISTING /tmp/ccvUPO8Q.s 			page 711


 18258              		.section	.rodata._ZTSN2gr5lfast7costas2E,"aG",@progbits,_ZTSN2gr5lfast7costas2E,comdat
 18259              		.align 16
 18262              	_ZTSN2gr5lfast7costas2E:
 18263 0000 4E326772 		.string	"N2gr5lfast7costas2E"
 18263      356C6661 
 18263      73743763 
 18263      6F737461 
 18263      73324500 
 18264              		.weak	_ZTIN5boost16exception_detail14bad_exception_E
 18265              		.section	.data.rel.ro._ZTIN5boost16exception_detail14bad_exception_E,"awG",@progbits,_ZTIN5boost16
 18266              		.align 8
 18269              	_ZTIN5boost16exception_detail14bad_exception_E:
 18270 0000 00000000 		.quad	_ZTVN10__cxxabiv121__vmi_class_type_infoE+16
 18270      00000000 
 18271 0008 00000000 		.quad	_ZTSN5boost16exception_detail14bad_exception_E
 18271      00000000 
 18272 0010 00000000 		.long	0
 18273 0014 02000000 		.long	2
 18274 0018 00000000 		.quad	_ZTIN5boost9exceptionE
 18274      00000000 
 18275 0020 02000000 		.quad	2
 18275      00000000 
 18276 0028 00000000 		.quad	_ZTISt13bad_exception
 18276      00000000 
 18277 0030 02280000 		.quad	10242
 18277      00000000 
 18278              		.weak	_ZTSN5boost16exception_detail14bad_exception_E
 18279              		.section	.rodata._ZTSN5boost16exception_detail14bad_exception_E,"aG",@progbits,_ZTSN5boost16except
 18280              		.align 32
 18283              	_ZTSN5boost16exception_detail14bad_exception_E:
 18284 0000 4E35626F 		.string	"N5boost16exception_detail14bad_exception_E"
 18284      6F737431 
 18284      36657863 
 18284      65707469 
 18284      6F6E5F64 
 18285              		.weak	_ZTIN5boost16exception_detail10bad_alloc_E
 18286              		.section	.data.rel.ro._ZTIN5boost16exception_detail10bad_alloc_E,"awG",@progbits,_ZTIN5boost16exce
 18287              		.align 8
 18290              	_ZTIN5boost16exception_detail10bad_alloc_E:
 18291 0000 00000000 		.quad	_ZTVN10__cxxabiv121__vmi_class_type_infoE+16
 18291      00000000 
 18292 0008 00000000 		.quad	_ZTSN5boost16exception_detail10bad_alloc_E
 18292      00000000 
 18293 0010 00000000 		.long	0
 18294 0014 02000000 		.long	2
 18295 0018 00000000 		.quad	_ZTIN5boost9exceptionE
 18295      00000000 
 18296 0020 02000000 		.quad	2
 18296      00000000 
 18297 0028 00000000 		.quad	_ZTISt9bad_alloc
 18297      00000000 
 18298 0030 02280000 		.quad	10242
 18298      00000000 
 18299              		.weak	_ZTSN5boost16exception_detail10bad_alloc_E
 18300              		.section	.rodata._ZTSN5boost16exception_detail10bad_alloc_E,"aG",@progbits,_ZTSN5boost16exception_
 18301              		.align 32
 18304              	_ZTSN5boost16exception_detail10bad_alloc_E:
GAS LISTING /tmp/ccvUPO8Q.s 			page 712


 18305 0000 4E35626F 		.string	"N5boost16exception_detail10bad_alloc_E"
 18305      6F737431 
 18305      36657863 
 18305      65707469 
 18305      6F6E5F64 
 18306              		.weak	_ZTIN5boost17bad_function_callE
 18307              		.section	.data.rel.ro._ZTIN5boost17bad_function_callE,"awG",@progbits,_ZTIN5boost17bad_function_ca
 18308              		.align 8
 18311              	_ZTIN5boost17bad_function_callE:
 18312 0000 00000000 		.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
 18312      00000000 
 18313 0008 00000000 		.quad	_ZTSN5boost17bad_function_callE
 18313      00000000 
 18314 0010 00000000 		.quad	_ZTISt13runtime_error
 18314      00000000 
 18315              		.weak	_ZTSN5boost17bad_function_callE
 18316              		.section	.rodata._ZTSN5boost17bad_function_callE,"aG",@progbits,_ZTSN5boost17bad_function_callE,co
 18317              		.align 16
 18320              	_ZTSN5boost17bad_function_callE:
 18321 0000 4E35626F 		.string	"N5boost17bad_function_callE"
 18321      6F737431 
 18321      37626164 
 18321      5F66756E 
 18321      6374696F 
 18322              		.weak	_ZTIN5boost6system12system_errorE
 18323              		.section	.data.rel.ro._ZTIN5boost6system12system_errorE,"awG",@progbits,_ZTIN5boost6system12system
 18324              		.align 8
 18327              	_ZTIN5boost6system12system_errorE:
 18328 0000 00000000 		.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
 18328      00000000 
 18329 0008 00000000 		.quad	_ZTSN5boost6system12system_errorE
 18329      00000000 
 18330 0010 00000000 		.quad	_ZTISt13runtime_error
 18330      00000000 
 18331              		.weak	_ZTSN5boost6system12system_errorE
 18332              		.section	.rodata._ZTSN5boost6system12system_errorE,"aG",@progbits,_ZTSN5boost6system12system_error
 18333              		.align 16
 18336              	_ZTSN5boost6system12system_errorE:
 18337 0000 4E35626F 		.string	"N5boost6system12system_errorE"
 18337      6F737436 
 18337      73797374 
 18337      656D3132 
 18337      73797374 
 18338              		.weak	_ZTIN5boost6detail15sp_counted_baseE
 18339              		.section	.data.rel.ro._ZTIN5boost6detail15sp_counted_baseE,"awG",@progbits,_ZTIN5boost6detail15sp_
 18340              		.align 8
 18343              	_ZTIN5boost6detail15sp_counted_baseE:
 18344 0000 00000000 		.quad	_ZTVN10__cxxabiv117__class_type_infoE+16
 18344      00000000 
 18345 0008 00000000 		.quad	_ZTSN5boost6detail15sp_counted_baseE
 18345      00000000 
 18346              		.weak	_ZTSN5boost6detail15sp_counted_baseE
 18347              		.section	.rodata._ZTSN5boost6detail15sp_counted_baseE,"aG",@progbits,_ZTSN5boost6detail15sp_counte
 18348              		.align 32
 18351              	_ZTSN5boost6detail15sp_counted_baseE:
 18352 0000 4E35626F 		.string	"N5boost6detail15sp_counted_baseE"
 18352      6F737436 
GAS LISTING /tmp/ccvUPO8Q.s 			page 713


 18352      64657461 
 18352      696C3135 
 18352      73705F63 
 18353              		.weak	_ZTIN5boost16exception_detail10clone_baseE
 18354              		.section	.data.rel.ro._ZTIN5boost16exception_detail10clone_baseE,"awG",@progbits,_ZTIN5boost16exce
 18355              		.align 8
 18358              	_ZTIN5boost16exception_detail10clone_baseE:
 18359 0000 00000000 		.quad	_ZTVN10__cxxabiv117__class_type_infoE+16
 18359      00000000 
 18360 0008 00000000 		.quad	_ZTSN5boost16exception_detail10clone_baseE
 18360      00000000 
 18361              		.weak	_ZTSN5boost16exception_detail10clone_baseE
 18362              		.section	.rodata._ZTSN5boost16exception_detail10clone_baseE,"aG",@progbits,_ZTSN5boost16exception_
 18363              		.align 32
 18366              	_ZTSN5boost16exception_detail10clone_baseE:
 18367 0000 4E35626F 		.string	"N5boost16exception_detail10clone_baseE"
 18367      6F737431 
 18367      36657863 
 18367      65707469 
 18367      6F6E5F64 
 18368              		.weak	_ZTIN5boost9exceptionE
 18369              		.section	.data.rel.ro._ZTIN5boost9exceptionE,"awG",@progbits,_ZTIN5boost9exceptionE,comdat
 18370              		.align 8
 18373              	_ZTIN5boost9exceptionE:
 18374 0000 00000000 		.quad	_ZTVN10__cxxabiv117__class_type_infoE+16
 18374      00000000 
 18375 0008 00000000 		.quad	_ZTSN5boost9exceptionE
 18375      00000000 
 18376              		.weak	_ZTSN5boost9exceptionE
 18377              		.section	.rodata._ZTSN5boost9exceptionE,"aG",@progbits,_ZTSN5boost9exceptionE,comdat
 18378              		.align 16
 18381              	_ZTSN5boost9exceptionE:
 18382 0000 4E35626F 		.string	"N5boost9exceptionE"
 18382      6F737439 
 18382      65786365 
 18382      7074696F 
 18382      6E4500
 18383              		.weak	_ZN5boost16exception_detail37exception_ptr_static_exception_objectINS0_10bad_alloc_EE1eE
 18384              		.section	.bss._ZN5boost16exception_detail37exception_ptr_static_exception_objectINS0_10bad_alloc_E
 18385              		.align 16
 18388              	_ZN5boost16exception_detail37exception_ptr_static_exception_objectINS0_10bad_alloc_EE1eE:
 18389 0000 00000000 		.zero	16
 18389      00000000 
 18389      00000000 
 18389      00000000 
 18390              		.weak	_ZN5boost16exception_detail37exception_ptr_static_exception_objectINS0_14bad_exception_EE1eE
 18391              		.section	.bss._ZN5boost16exception_detail37exception_ptr_static_exception_objectINS0_14bad_excepti
 18392              		.align 16
 18395              	_ZN5boost16exception_detail37exception_ptr_static_exception_objectINS0_14bad_exception_EE1eE:
 18396 0000 00000000 		.zero	16
 18396      00000000 
 18396      00000000 
 18396      00000000 
 18397              		.weak	_ZGVN5boost16exception_detail37exception_ptr_static_exception_objectINS0_10bad_alloc_EE1eE
 18398              		.section	.bss._ZGVN5boost16exception_detail37exception_ptr_static_exception_objectINS0_10bad_alloc
 18399              		.align 8
 18402              	_ZGVN5boost16exception_detail37exception_ptr_static_exception_objectINS0_10bad_alloc_EE1eE:
GAS LISTING /tmp/ccvUPO8Q.s 			page 714


 18403 0000 00000000 		.zero	8
 18403      00000000 
 18404              		.weak	_ZGVN5boost16exception_detail37exception_ptr_static_exception_objectINS0_14bad_exception_EE1
 18405              		.section	.bss._ZGVN5boost16exception_detail37exception_ptr_static_exception_objectINS0_14bad_excep
 18406              		.align 8
 18409              	_ZGVN5boost16exception_detail37exception_ptr_static_exception_objectINS0_14bad_exception_EE1eE:
 18410 0000 00000000 		.zero	8
 18410      00000000 
 18411              		.text
 18413              	_Z41__static_initialization_and_destruction_0ii:
 18414              	.LFB15449:
 430:costas2_impl.cc **** 
 431:costas2_impl.cc ****   } /* namespace lfast */
 432:costas2_impl.cc **** } /* namespace gr */
 18415              		.loc 22 432 0
 18416              		.cfi_startproc
 18417 1860 55       		pushq	%rbp
 18418              		.cfi_def_cfa_offset 16
 18419              		.cfi_offset 6, -16
 18420 1861 4889E5   		movq	%rsp, %rbp
 18421              		.cfi_def_cfa_register 6
 18422 1864 53       		pushq	%rbx
 18423 1865 4883EC28 		subq	$40, %rsp
 18424              		.cfi_offset 3, -24
 18425 1869 897DDC   		movl	%edi, -36(%rbp)
 18426 186c 8975D8   		movl	%esi, -40(%rbp)
 18427              		.loc 22 432 0
 18428 186f 837DDC01 		cmpl	$1, -36(%rbp)
 18429 1873 0F85F100 		jne	.L904
 18429      0000
 18430              		.loc 22 432 0 is_stmt 0 discriminator 1
 18431 1879 817DD8FF 		cmpl	$65535, -40(%rbp)
 18431      FF0000
 18432 1880 0F85E400 		jne	.L904
 18432      0000
 221:/usr/include/boost/system/error_code.hpp ****     static const error_category &  errno_ecat     = generic_category();
 18433              		.loc 11 221 0 is_stmt 1
 18434 1886 E8000000 		call	_ZN5boost6system16generic_categoryEv@PLT
 18434      00
 18435 188b 48890500 		movq	%rax, _ZN5boost6systemL14posix_categoryE(%rip)
 18435      000000
 222:/usr/include/boost/system/error_code.hpp ****     static const error_category &  native_ecat    = system_category();
 18436              		.loc 11 222 0
 18437 1892 E8000000 		call	_ZN5boost6system16generic_categoryEv@PLT
 18437      00
 18438 1897 48890500 		movq	%rax, _ZN5boost6systemL10errno_ecatE(%rip)
 18438      000000
 223:/usr/include/boost/system/error_code.hpp **** # endif
 18439              		.loc 11 223 0
 18440 189e E8000000 		call	_ZN5boost6system15system_categoryEv@PLT
 18440      00
 18441 18a3 48890500 		movq	%rax, _ZN5boost6systemL11native_ecatE(%rip)
 18441      000000
 18442              		.file 50 "/usr/include/c++/6/iostream"
   1:/usr/include/c++/6/iostream **** // Standard iostream objects -*- C++ -*-
   2:/usr/include/c++/6/iostream **** 
   3:/usr/include/c++/6/iostream **** // Copyright (C) 1997-2016 Free Software Foundation, Inc.
GAS LISTING /tmp/ccvUPO8Q.s 			page 715


   4:/usr/include/c++/6/iostream **** //
   5:/usr/include/c++/6/iostream **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/6/iostream **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/6/iostream **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/6/iostream **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/6/iostream **** // any later version.
  10:/usr/include/c++/6/iostream **** 
  11:/usr/include/c++/6/iostream **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/6/iostream **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/6/iostream **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/6/iostream **** // GNU General Public License for more details.
  15:/usr/include/c++/6/iostream **** 
  16:/usr/include/c++/6/iostream **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/6/iostream **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/6/iostream **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/6/iostream **** 
  20:/usr/include/c++/6/iostream **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/6/iostream **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/6/iostream **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/6/iostream **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/6/iostream **** 
  25:/usr/include/c++/6/iostream **** /** @file include/iostream
  26:/usr/include/c++/6/iostream ****  *  This is a Standard C++ Library header.
  27:/usr/include/c++/6/iostream ****  */
  28:/usr/include/c++/6/iostream **** 
  29:/usr/include/c++/6/iostream **** //
  30:/usr/include/c++/6/iostream **** // ISO C++ 14882: 27.3  Standard iostream objects
  31:/usr/include/c++/6/iostream **** //
  32:/usr/include/c++/6/iostream **** 
  33:/usr/include/c++/6/iostream **** #ifndef _GLIBCXX_IOSTREAM
  34:/usr/include/c++/6/iostream **** #define _GLIBCXX_IOSTREAM 1
  35:/usr/include/c++/6/iostream **** 
  36:/usr/include/c++/6/iostream **** #pragma GCC system_header
  37:/usr/include/c++/6/iostream **** 
  38:/usr/include/c++/6/iostream **** #include <bits/c++config.h>
  39:/usr/include/c++/6/iostream **** #include <ostream>
  40:/usr/include/c++/6/iostream **** #include <istream>
  41:/usr/include/c++/6/iostream **** 
  42:/usr/include/c++/6/iostream **** namespace std _GLIBCXX_VISIBILITY(default)
  43:/usr/include/c++/6/iostream **** {
  44:/usr/include/c++/6/iostream **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  45:/usr/include/c++/6/iostream **** 
  46:/usr/include/c++/6/iostream ****   /**
  47:/usr/include/c++/6/iostream ****    *  @name Standard Stream Objects
  48:/usr/include/c++/6/iostream ****    *
  49:/usr/include/c++/6/iostream ****    *  The &lt;iostream&gt; header declares the eight <em>standard stream
  50:/usr/include/c++/6/iostream ****    *  objects</em>.  For other declarations, see
  51:/usr/include/c++/6/iostream ****    *  http://gcc.gnu.org/onlinedocs/libstdc++/manual/io.html
  52:/usr/include/c++/6/iostream ****    *  and the @link iosfwd I/O forward declarations @endlink
  53:/usr/include/c++/6/iostream ****    *
  54:/usr/include/c++/6/iostream ****    *  They are required by default to cooperate with the global C
  55:/usr/include/c++/6/iostream ****    *  library's @c FILE streams, and to be available during program
  56:/usr/include/c++/6/iostream ****    *  startup and termination. For more information, see the section of the
  57:/usr/include/c++/6/iostream ****    *  manual linked to above.
  58:/usr/include/c++/6/iostream ****   */
  59:/usr/include/c++/6/iostream ****   //@{
  60:/usr/include/c++/6/iostream ****   extern istream cin;		/// Linked to standard input
GAS LISTING /tmp/ccvUPO8Q.s 			page 716


  61:/usr/include/c++/6/iostream ****   extern ostream cout;		/// Linked to standard output
  62:/usr/include/c++/6/iostream ****   extern ostream cerr;		/// Linked to standard error (unbuffered)
  63:/usr/include/c++/6/iostream ****   extern ostream clog;		/// Linked to standard error (buffered)
  64:/usr/include/c++/6/iostream **** 
  65:/usr/include/c++/6/iostream **** #ifdef _GLIBCXX_USE_WCHAR_T
  66:/usr/include/c++/6/iostream ****   extern wistream wcin;		/// Linked to standard input
  67:/usr/include/c++/6/iostream ****   extern wostream wcout;	/// Linked to standard output
  68:/usr/include/c++/6/iostream ****   extern wostream wcerr;	/// Linked to standard error (unbuffered)
  69:/usr/include/c++/6/iostream ****   extern wostream wclog;	/// Linked to standard error (buffered)
  70:/usr/include/c++/6/iostream **** #endif
  71:/usr/include/c++/6/iostream ****   //@}
  72:/usr/include/c++/6/iostream **** 
  73:/usr/include/c++/6/iostream ****   // For construction of filebuffers for cout, cin, cerr, clog et. al.
  74:/usr/include/c++/6/iostream ****   static ios_base::Init __ioinit;
 18443              		.loc 50 74 0
 18444 18aa 488D3D00 		leaq	_ZStL8__ioinit(%rip), %rdi
 18444      000000
 18445 18b1 E8000000 		call	_ZNSt8ios_base4InitC1Ev@PLT
 18445      00
 18446 18b6 488D1500 		leaq	__dso_handle(%rip), %rdx
 18446      000000
 18447 18bd 488D3500 		leaq	_ZStL8__ioinit(%rip), %rsi
 18447      000000
 18448 18c4 488B0500 		movq	_ZNSt8ios_base4InitD1Ev@GOTPCREL(%rip), %rax
 18448      000000
 18449 18cb 4889C7   		movq	%rax, %rdi
 18450 18ce E8000000 		call	__cxa_atexit@PLT
 18450      00
 133:/usr/include/boost/exception/detail/exception_ptr.hpp **** 
 134:/usr/include/boost/exception/detail/exception_ptr.hpp ****         template <class Exception>
 135:/usr/include/boost/exception/detail/exception_ptr.hpp ****         struct
 136:/usr/include/boost/exception/detail/exception_ptr.hpp ****         exception_ptr_static_exception_object
 137:/usr/include/boost/exception/detail/exception_ptr.hpp ****             {
 138:/usr/include/boost/exception/detail/exception_ptr.hpp ****             static exception_ptr const e;
 139:/usr/include/boost/exception/detail/exception_ptr.hpp ****             };
 140:/usr/include/boost/exception/detail/exception_ptr.hpp **** 
 141:/usr/include/boost/exception/detail/exception_ptr.hpp ****         template <class Exception>
 142:/usr/include/boost/exception/detail/exception_ptr.hpp ****         exception_ptr const
 143:/usr/include/boost/exception/detail/exception_ptr.hpp ****         exception_ptr_static_exception_object<Exception>::
 18451              		.loc 16 143 0
 18452 18d3 488D0500 		leaq	_ZGVN5boost16exception_detail37exception_ptr_static_exception_objectINS0_10bad_alloc_EE1eE(%r
 18452      000000
 18453 18da 0FB600   		movzbl	(%rax), %eax
 18454 18dd 84C0     		testb	%al, %al
 18455 18df 7533     		jne	.L902
 18456              		.loc 16 143 0 is_stmt 0 discriminator 1
 18457 18e1 488D0500 		leaq	_ZGVN5boost16exception_detail37exception_ptr_static_exception_objectINS0_10bad_alloc_EE1eE(%r
 18457      000000
 18458 18e8 C60001   		movb	$1, (%rax)
 18459 18eb 488D0500 		leaq	_ZN5boost16exception_detail37exception_ptr_static_exception_objectINS0_10bad_alloc_EE1eE(%rip
 18459      000000
 18460 18f2 4889C7   		movq	%rax, %rdi
 18461 18f5 E8000000 		call	_ZN5boost16exception_detail27get_static_exception_objectINS0_10bad_alloc_EEENS_13exception_pt
 18461      00
 18462 18fa 488D1500 		leaq	__dso_handle(%rip), %rdx
 18462      000000
 18463 1901 488D3500 		leaq	_ZN5boost16exception_detail37exception_ptr_static_exception_objectINS0_10bad_alloc_EE1eE(%rip
GAS LISTING /tmp/ccvUPO8Q.s 			page 717


 18463      000000
 18464 1908 488D3D00 		leaq	_ZN5boost13exception_ptrD1Ev(%rip), %rdi
 18464      000000
 18465 190f E8000000 		call	__cxa_atexit@PLT
 18465      00
 18466              	.L902:
 18467              		.loc 16 143 0 discriminator 3
 18468 1914 488D0500 		leaq	_ZGVN5boost16exception_detail37exception_ptr_static_exception_objectINS0_14bad_exception_EE1e
 18468      000000
 18469 191b 0FB600   		movzbl	(%rax), %eax
 18470 191e 84C0     		testb	%al, %al
 18471 1920 7533     		jne	.L903
 18472              		.loc 16 143 0 discriminator 4
 18473 1922 488D0500 		leaq	_ZGVN5boost16exception_detail37exception_ptr_static_exception_objectINS0_14bad_exception_EE1e
 18473      000000
 18474 1929 C60001   		movb	$1, (%rax)
 18475 192c 488D0500 		leaq	_ZN5boost16exception_detail37exception_ptr_static_exception_objectINS0_14bad_exception_EE1eE(
 18475      000000
 18476 1933 4889C7   		movq	%rax, %rdi
 18477 1936 E8000000 		call	_ZN5boost16exception_detail27get_static_exception_objectINS0_14bad_exception_EEENS_13exceptio
 18477      00
 18478 193b 488D1500 		leaq	__dso_handle(%rip), %rdx
 18478      000000
 18479 1942 488D3500 		leaq	_ZN5boost16exception_detail37exception_ptr_static_exception_objectINS0_14bad_exception_EE1eE(
 18479      000000
 18480 1949 488D3D00 		leaq	_ZN5boost13exception_ptrD1Ev(%rip), %rdi
 18480      000000
 18481 1950 E8000000 		call	__cxa_atexit@PLT
 18481      00
 18482              	.L903:
 18483              		.file 51 "/usr/include/boost/none.hpp"
   1:/usr/include/boost/none.hpp **** // Copyright (C) 2003, Fernando Luis Cacciola Carballal.
   2:/usr/include/boost/none.hpp **** // Copyright (C) 2014, 2015 Andrzej Krzemienski.
   3:/usr/include/boost/none.hpp **** //
   4:/usr/include/boost/none.hpp **** // Distributed under the Boost Software License, Version 1.0.
   5:/usr/include/boost/none.hpp **** // (See accompanying file LICENSE_1_0.txt or copy at
   6:/usr/include/boost/none.hpp **** // http://www.boost.org/LICENSE_1_0.txt)
   7:/usr/include/boost/none.hpp **** //
   8:/usr/include/boost/none.hpp **** // See http://www.boost.org/libs/optional for documentation.
   9:/usr/include/boost/none.hpp **** //
  10:/usr/include/boost/none.hpp **** // You are welcome to contact the author at:
  11:/usr/include/boost/none.hpp **** //  fernando_cacciola@hotmail.com
  12:/usr/include/boost/none.hpp **** //
  13:/usr/include/boost/none.hpp **** #ifndef BOOST_NONE_17SEP2003_HPP
  14:/usr/include/boost/none.hpp **** #define BOOST_NONE_17SEP2003_HPP
  15:/usr/include/boost/none.hpp **** 
  16:/usr/include/boost/none.hpp **** #include "boost/none_t.hpp"
  17:/usr/include/boost/none.hpp **** 
  18:/usr/include/boost/none.hpp **** // NOTE: Borland users have to include this header outside any precompiled headers
  19:/usr/include/boost/none.hpp **** // (bcc<=5.64 cannot include instance data in a precompiled header)
  20:/usr/include/boost/none.hpp **** //  -- * To be verified, now that there's no unnamed namespace
  21:/usr/include/boost/none.hpp **** 
  22:/usr/include/boost/none.hpp **** namespace boost {
  23:/usr/include/boost/none.hpp **** 
  24:/usr/include/boost/none.hpp **** #ifdef BOOST_OPTIONAL_USE_OLD_DEFINITION_OF_NONE
  25:/usr/include/boost/none.hpp **** 
  26:/usr/include/boost/none.hpp **** none_t const none = (static_cast<none_t>(0)) ;
GAS LISTING /tmp/ccvUPO8Q.s 			page 718


  27:/usr/include/boost/none.hpp **** 
  28:/usr/include/boost/none.hpp **** #elif defined BOOST_OPTIONAL_USE_SINGLETON_DEFINITION_OF_NONE
  29:/usr/include/boost/none.hpp **** 
  30:/usr/include/boost/none.hpp **** namespace detail { namespace optional_detail {
  31:/usr/include/boost/none.hpp **** 
  32:/usr/include/boost/none.hpp ****   // the trick here is to make boost::none defined once as a global but in a header file
  33:/usr/include/boost/none.hpp ****   template <typename T>
  34:/usr/include/boost/none.hpp ****   struct none_instance
  35:/usr/include/boost/none.hpp ****   {
  36:/usr/include/boost/none.hpp ****     static const T instance;
  37:/usr/include/boost/none.hpp ****   };
  38:/usr/include/boost/none.hpp ****   
  39:/usr/include/boost/none.hpp ****   template <typename T>
  40:/usr/include/boost/none.hpp ****   const T none_instance<T>::instance = T(); // global, but because 'tis a template, no cpp file req
  41:/usr/include/boost/none.hpp **** 
  42:/usr/include/boost/none.hpp **** } } // namespace detail::optional_detail
  43:/usr/include/boost/none.hpp **** 
  44:/usr/include/boost/none.hpp **** 
  45:/usr/include/boost/none.hpp **** namespace {
  46:/usr/include/boost/none.hpp ****   // TU-local
  47:/usr/include/boost/none.hpp ****   const none_t& none = detail::optional_detail::none_instance<none_t>::instance; 
  48:/usr/include/boost/none.hpp **** }
  49:/usr/include/boost/none.hpp **** 
  50:/usr/include/boost/none.hpp **** #else
  51:/usr/include/boost/none.hpp **** 
  52:/usr/include/boost/none.hpp **** const none_t none ((none_t::init_tag()));
 18484              		.loc 51 52 0 is_stmt 1
 18485 1955 4883EC08 		subq	$8, %rsp
 18486 1959 53       		pushq	%rbx
 18487 195a 488D3D00 		leaq	_ZN5boostL4noneE(%rip), %rdi
 18487      000000
 18488 1961 E8000000 		call	_ZN5boost6none_tC1ENS0_8init_tagE
 18488      00
 18489 1966 4883C410 		addq	$16, %rsp
 18490              	.L904:
 18491              		.loc 22 432 0
 18492 196a 90       		nop
 18493 196b 488B5DF8 		movq	-8(%rbp), %rbx
 18494 196f C9       		leave
 18495              		.cfi_def_cfa 7, 8
 18496 1970 C3       		ret
 18497              		.cfi_endproc
 18498              	.LFE15449:
 18500              		.section	.text._ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_14bad_exc
 18501              		.align 2
 18502              		.weak	_ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_14bad_exception_EE
 18504              	_ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_14bad_exception_EEEE7disp
 18505              	.LFB15453:
  72:/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp **** 
  73:/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp ****     virtual void dispose() // nothrow
 18506              		.loc 48 73 0
 18507              		.cfi_startproc
 18508 0000 55       		pushq	%rbp
 18509              		.cfi_def_cfa_offset 16
 18510              		.cfi_offset 6, -16
 18511 0001 4889E5   		movq	%rsp, %rbp
 18512              		.cfi_def_cfa_register 6
GAS LISTING /tmp/ccvUPO8Q.s 			page 719


 18513 0004 4883EC10 		subq	$16, %rsp
 18514 0008 48897DF8 		movq	%rdi, -8(%rbp)
  74:/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp ****     {
  75:/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp **** #if defined(BOOST_SP_ENABLE_DEBUG_HOOKS)
  76:/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp ****         boost::sp_scalar_destructor_hook( px_, sizeof(X), this );
  77:/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp **** #endif
  78:/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp ****         boost::checked_delete( px_ );
 18515              		.loc 48 78 0
 18516 000c 488B45F8 		movq	-8(%rbp), %rax
 18517 0010 488B4010 		movq	16(%rax), %rax
 18518 0014 4889C7   		movq	%rax, %rdi
 18519 0017 E8000000 		call	_ZN5boost14checked_deleteINS_16exception_detail10clone_implINS1_14bad_exception_EEEEEvPT_
 18519      00
  79:/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp ****     }
 18520              		.loc 48 79 0
 18521 001c 90       		nop
 18522 001d C9       		leave
 18523              		.cfi_def_cfa 7, 8
 18524 001e C3       		ret
 18525              		.cfi_endproc
 18526              	.LFE15453:
 18528              		.section	.text._ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_14bad_exc
 18529              		.align 2
 18530              		.weak	_ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_14bad_exception_EE
 18532              	_ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_14bad_exception_EEEE11get
 18533              	.LFB15454:
  80:/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp **** 
  81:/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp ****     virtual void * get_deleter( sp_typeinfo const & )
 18534              		.loc 48 81 0
 18535              		.cfi_startproc
 18536 0000 55       		pushq	%rbp
 18537              		.cfi_def_cfa_offset 16
 18538              		.cfi_offset 6, -16
 18539 0001 4889E5   		movq	%rsp, %rbp
 18540              		.cfi_def_cfa_register 6
 18541 0004 48897DF8 		movq	%rdi, -8(%rbp)
 18542 0008 488975F0 		movq	%rsi, -16(%rbp)
  82:/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp ****     {
  83:/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp ****         return 0;
 18543              		.loc 48 83 0
 18544 000c B8000000 		movl	$0, %eax
 18544      00
  84:/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp ****     }
 18545              		.loc 48 84 0
 18546 0011 5D       		popq	%rbp
 18547              		.cfi_def_cfa 7, 8
 18548 0012 C3       		ret
 18549              		.cfi_endproc
 18550              	.LFE15454:
 18552              		.section	.text._ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_14bad_exc
 18553              		.align 2
 18554              		.weak	_ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_14bad_exception_EE
 18556              	_ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_14bad_exception_EEEE19get
 18557              	.LFB15455:
  85:/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp **** 
  86:/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp ****     virtual void * get_untyped_deleter()
 18558              		.loc 48 86 0
GAS LISTING /tmp/ccvUPO8Q.s 			page 720


 18559              		.cfi_startproc
 18560 0000 55       		pushq	%rbp
 18561              		.cfi_def_cfa_offset 16
 18562              		.cfi_offset 6, -16
 18563 0001 4889E5   		movq	%rsp, %rbp
 18564              		.cfi_def_cfa_register 6
 18565 0004 48897DF8 		movq	%rdi, -8(%rbp)
  87:/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp ****     {
  88:/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp ****         return 0;
 18566              		.loc 48 88 0
 18567 0008 B8000000 		movl	$0, %eax
 18567      00
  89:/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp ****     }
 18568              		.loc 48 89 0
 18569 000d 5D       		popq	%rbp
 18570              		.cfi_def_cfa 7, 8
 18571 000e C3       		ret
 18572              		.cfi_endproc
 18573              	.LFE15455:
 18575              		.section	.text._ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_all
 18576              		.align 2
 18577              		.weak	_ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEE7d
 18579              	_ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEE7disposeE
 18580              	.LFB15456:
  73:/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp ****     {
 18581              		.loc 48 73 0
 18582              		.cfi_startproc
 18583 0000 55       		pushq	%rbp
 18584              		.cfi_def_cfa_offset 16
 18585              		.cfi_offset 6, -16
 18586 0001 4889E5   		movq	%rsp, %rbp
 18587              		.cfi_def_cfa_register 6
 18588 0004 4883EC10 		subq	$16, %rsp
 18589 0008 48897DF8 		movq	%rdi, -8(%rbp)
  78:/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp ****     }
 18590              		.loc 48 78 0
 18591 000c 488B45F8 		movq	-8(%rbp), %rax
 18592 0010 488B4010 		movq	16(%rax), %rax
 18593 0014 4889C7   		movq	%rax, %rdi
 18594 0017 E8000000 		call	_ZN5boost14checked_deleteINS_16exception_detail10clone_implINS1_10bad_alloc_EEEEEvPT_
 18594      00
  79:/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp **** 
 18595              		.loc 48 79 0
 18596 001c 90       		nop
 18597 001d C9       		leave
 18598              		.cfi_def_cfa 7, 8
 18599 001e C3       		ret
 18600              		.cfi_endproc
 18601              	.LFE15456:
 18603              		.section	.text._ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_all
 18604              		.align 2
 18605              		.weak	_ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEE11
 18607              	_ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEE11get_del
 18608              	.LFB15457:
  81:/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp ****     {
 18609              		.loc 48 81 0
 18610              		.cfi_startproc
GAS LISTING /tmp/ccvUPO8Q.s 			page 721


 18611 0000 55       		pushq	%rbp
 18612              		.cfi_def_cfa_offset 16
 18613              		.cfi_offset 6, -16
 18614 0001 4889E5   		movq	%rsp, %rbp
 18615              		.cfi_def_cfa_register 6
 18616 0004 48897DF8 		movq	%rdi, -8(%rbp)
 18617 0008 488975F0 		movq	%rsi, -16(%rbp)
  83:/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp ****     }
 18618              		.loc 48 83 0
 18619 000c B8000000 		movl	$0, %eax
 18619      00
  84:/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp **** 
 18620              		.loc 48 84 0
 18621 0011 5D       		popq	%rbp
 18622              		.cfi_def_cfa 7, 8
 18623 0012 C3       		ret
 18624              		.cfi_endproc
 18625              	.LFE15457:
 18627              		.section	.text._ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_all
 18628              		.align 2
 18629              		.weak	_ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEE19
 18631              	_ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEE19get_unt
 18632              	.LFB15458:
  86:/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp ****     {
 18633              		.loc 48 86 0
 18634              		.cfi_startproc
 18635 0000 55       		pushq	%rbp
 18636              		.cfi_def_cfa_offset 16
 18637              		.cfi_offset 6, -16
 18638 0001 4889E5   		movq	%rsp, %rbp
 18639              		.cfi_def_cfa_register 6
 18640 0004 48897DF8 		movq	%rdi, -8(%rbp)
  88:/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp ****     }
 18641              		.loc 48 88 0
 18642 0008 B8000000 		movl	$0, %eax
 18642      00
 18643              		.loc 48 89 0
 18644 000d 5D       		popq	%rbp
 18645              		.cfi_def_cfa 7, 8
 18646 000e C3       		ret
 18647              		.cfi_endproc
 18648              	.LFE15458:
 18650              		.section	.text._ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_functio
 18651              		.align 2
 18652              		.weak	_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEE
 18654              	_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEE5clone
 18655              	.LFB15528:
 486:/usr/include/boost/exception/exception.hpp ****                 {
 18656              		.loc 3 486 0
 18657              		.cfi_startproc
 18658              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 18659              		.cfi_lsda 0x1b,.LLSDA15528
 18660 0000 55       		pushq	%rbp
 18661              		.cfi_def_cfa_offset 16
 18662              		.cfi_offset 6, -16
 18663 0001 4889E5   		movq	%rsp, %rbp
 18664              		.cfi_def_cfa_register 6
GAS LISTING /tmp/ccvUPO8Q.s 			page 722


 18665 0004 4154     		pushq	%r12
 18666 0006 53       		pushq	%rbx
 18667 0007 4883EC20 		subq	$32, %rsp
 18668              		.cfi_offset 12, -24
 18669              		.cfi_offset 3, -32
 18670 000b 48897DD8 		movq	%rdi, -40(%rbp)
 488:/usr/include/boost/exception/exception.hpp ****                 }
 18671              		.loc 3 488 0
 18672 000f 8845EE   		movb	%al, -18(%rbp)
 18673 0012 BF400000 		movl	$64, %edi
 18673      00
 18674              	.LEHB106:
 18675 0017 E8000000 		call	_Znwm@PLT
 18675      00
 18676              	.LEHE106:
 18677 001c 4889C3   		movq	%rax, %rbx
 18678 001f 488B45D8 		movq	-40(%rbp), %rax
 18679 0023 4883EC08 		subq	$8, %rsp
 18680 0027 0FB655EE 		movzbl	-18(%rbp), %edx
 18681 002b 52       		pushq	%rdx
 18682 002c 4889C6   		movq	%rax, %rsi
 18683 002f 4889DF   		movq	%rbx, %rdi
 18684              	.LEHB107:
 18685              		.cfi_escape 0x2e,0x10
 18686 0032 E8000000 		call	_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEEC
 18686      00
 18687              	.LEHE107:
 488:/usr/include/boost/exception/exception.hpp ****                 }
 18688              		.loc 3 488 0 is_stmt 0 discriminator 2
 18689 0037 4883C410 		addq	$16, %rsp
 18690 003b 4885DB   		testq	%rbx, %rbx
 18691 003e 740F     		je	.L916
 488:/usr/include/boost/exception/exception.hpp ****                 }
 18692              		.loc 3 488 0 discriminator 5
 18693 0040 488B03   		movq	(%rbx), %rax
 18694 0043 4883E818 		subq	$24, %rax
 18695 0047 488B00   		movq	(%rax), %rax
 18696 004a 4801D8   		addq	%rbx, %rax
 18697 004d EB24     		jmp	.L923
 18698              	.L916:
 488:/usr/include/boost/exception/exception.hpp ****                 }
 18699              		.loc 3 488 0 discriminator 6
 18700 004f B8000000 		movl	$0, %eax
 18700      00
 18701 0054 EB1D     		jmp	.L923
 18702              	.L922:
 18703 0056 4989C4   		movq	%rax, %r12
 488:/usr/include/boost/exception/exception.hpp ****                 }
 18704              		.loc 3 488 0
 18705 0059 BE400000 		movl	$64, %esi
 18705      00
 18706 005e 4889DF   		movq	%rbx, %rdi
 18707 0061 E8000000 		call	_ZdlPvm@PLT
 18707      00
 18708 0066 4C89E0   		movq	%r12, %rax
 18709 0069 EB00     		jmp	.L920
 18710              	.L921:
GAS LISTING /tmp/ccvUPO8Q.s 			page 723


 18711              	.L920:
 18712 006b 4889C7   		movq	%rax, %rdi
 18713              	.LEHB108:
 18714 006e E8000000 		call	_Unwind_Resume@PLT
 18714      00
 18715              	.LEHE108:
 18716              	.L923:
 489:/usr/include/boost/exception/exception.hpp **** 
 18717              		.loc 3 489 0 is_stmt 1
 18718 0073 488D65F0 		leaq	-16(%rbp), %rsp
 18719 0077 5B       		popq	%rbx
 18720 0078 415C     		popq	%r12
 18721 007a 5D       		popq	%rbp
 18722              		.cfi_def_cfa 7, 8
 18723 007b C3       		ret
 18724              		.cfi_endproc
 18725              	.LFE15528:
 18726              		.section	.gcc_except_table
 18727              	.LLSDA15528:
 18728 0287 FF       		.byte	0xff
 18729 0288 FF       		.byte	0xff
 18730 0289 01       		.byte	0x1
 18731 028a 0C       		.uleb128 .LLSDACSE15528-.LLSDACSB15528
 18732              	.LLSDACSB15528:
 18733 028b 17       		.uleb128 .LEHB106-.LFB15528
 18734 028c 05       		.uleb128 .LEHE106-.LEHB106
 18735 028d 6B       		.uleb128 .L921-.LFB15528
 18736 028e 00       		.uleb128 0
 18737 028f 32       		.uleb128 .LEHB107-.LFB15528
 18738 0290 05       		.uleb128 .LEHE107-.LEHB107
 18739 0291 56       		.uleb128 .L922-.LFB15528
 18740 0292 00       		.uleb128 0
 18741 0293 6E       		.uleb128 .LEHB108-.LFB15528
 18742 0294 05       		.uleb128 .LEHE108-.LEHB108
 18743 0295 00       		.uleb128 0
 18744 0296 00       		.uleb128 0
 18745              	.LLSDACSE15528:
 18746              		.section	.text._ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_functio
 18748              		.set	.LTHUNK252,_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_functi
 18749              		.weak	_ZTv0_n24_NK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function
 18751              	_ZTv0_n24_NK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEE
 18752              	.LFB15711:
 486:/usr/include/boost/exception/exception.hpp ****                 {
 18753              		.loc 3 486 0
 18754              		.cfi_startproc
 18755 007c 4C8B17   		movq	(%rdi), %r10
 18756 007f 49037AE8 		addq	-24(%r10), %rdi
 18757 0083 E978FFFF 		jmp	.LTHUNK252
 18757      FF
 18758              		.cfi_endproc
 18759              	.LFE15711:
 18761              		.section	.text._ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_functio
 18762              		.align 2
 18763              		.weak	_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEE
 18765              	_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEE7rethr
 18766              	.LFB15529:
 492:/usr/include/boost/exception/exception.hpp ****                 {
GAS LISTING /tmp/ccvUPO8Q.s 			page 724


 18767              		.loc 3 492 0
 18768              		.cfi_startproc
 18769              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 18770              		.cfi_lsda 0x1b,.LLSDA15529
 18771 0000 55       		pushq	%rbp
 18772              		.cfi_def_cfa_offset 16
 18773              		.cfi_offset 6, -16
 18774 0001 4889E5   		movq	%rsp, %rbp
 18775              		.cfi_def_cfa_register 6
 18776 0004 4154     		pushq	%r12
 18777 0006 53       		pushq	%rbx
 18778 0007 4883EC10 		subq	$16, %rsp
 18779              		.cfi_offset 12, -24
 18780              		.cfi_offset 3, -32
 18781 000b 48897DE8 		movq	%rdi, -24(%rbp)
 494:/usr/include/boost/exception/exception.hpp ****                 }
 18782              		.loc 3 494 0
 18783 000f BF400000 		movl	$64, %edi
 18783      00
 18784 0014 E8000000 		call	__cxa_allocate_exception@PLT
 18784      00
 18785 0019 4889C3   		movq	%rax, %rbx
 18786 001c 488B45E8 		movq	-24(%rbp), %rax
 18787 0020 4889C6   		movq	%rax, %rsi
 18788 0023 4889DF   		movq	%rbx, %rdi
 18789              	.LEHB109:
 18790 0026 E8000000 		call	_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEEC
 18790      00
 18791              	.LEHE109:
 494:/usr/include/boost/exception/exception.hpp ****                 }
 18792              		.loc 3 494 0 is_stmt 0 discriminator 2
 18793 002b 488D1500 		leaq	_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEED
 18793      000000
 18794 0032 488D3500 		leaq	_ZTIN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEE
 18794      000000
 18795 0039 4889DF   		movq	%rbx, %rdi
 18796              	.LEHB110:
 18797 003c E8000000 		call	__cxa_throw@PLT
 18797      00
 18798              	.L926:
 18799 0041 4989C4   		movq	%rax, %r12
 494:/usr/include/boost/exception/exception.hpp ****                 }
 18800              		.loc 3 494 0
 18801 0044 4889DF   		movq	%rbx, %rdi
 18802 0047 E8000000 		call	__cxa_free_exception@PLT
 18802      00
 18803 004c 4C89E0   		movq	%r12, %rax
 18804 004f 4889C7   		movq	%rax, %rdi
 18805 0052 E8000000 		call	_Unwind_Resume@PLT
 18805      00
 18806              	.LEHE110:
 18807              		.cfi_endproc
 18808              	.LFE15529:
 18809              		.section	.gcc_except_table
 18810              	.LLSDA15529:
 18811 0297 FF       		.byte	0xff
 18812 0298 FF       		.byte	0xff
GAS LISTING /tmp/ccvUPO8Q.s 			page 725


 18813 0299 01       		.byte	0x1
 18814 029a 08       		.uleb128 .LLSDACSE15529-.LLSDACSB15529
 18815              	.LLSDACSB15529:
 18816 029b 26       		.uleb128 .LEHB109-.LFB15529
 18817 029c 05       		.uleb128 .LEHE109-.LEHB109
 18818 029d 41       		.uleb128 .L926-.LFB15529
 18819 029e 00       		.uleb128 0
 18820 029f 3C       		.uleb128 .LEHB110-.LFB15529
 18821 02a0 1B       		.uleb128 .LEHE110-.LEHB110
 18822 02a1 00       		.uleb128 0
 18823 02a2 00       		.uleb128 0
 18824              	.LLSDACSE15529:
 18825              		.section	.text._ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_functio
 18827              		.set	.LTHUNK253,_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_functi
 18828              		.weak	_ZTv0_n32_NK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function
 18830              	_ZTv0_n32_NK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEE
 18831              	.LFB15712:
 492:/usr/include/boost/exception/exception.hpp ****                 {
 18832              		.loc 3 492 0 is_stmt 1
 18833              		.cfi_startproc
 18834 0057 4C8B17   		movq	(%rdi), %r10
 18835 005a 49037AE0 		addq	-32(%r10), %rdi
 18836 005e EBA0     		jmp	.LTHUNK253
 18837              		.cfi_endproc
 18838              	.LFE15712:
 18840              		.section	.text._ZNK5boost16exception_detail10clone_implINS0_14bad_exception_EE5cloneEv,"axG",@prog
 18841              		.align 2
 18842              		.weak	_ZNK5boost16exception_detail10clone_implINS0_14bad_exception_EE5cloneEv
 18844              	_ZNK5boost16exception_detail10clone_implINS0_14bad_exception_EE5cloneEv:
 18845              	.LFB15540:
 486:/usr/include/boost/exception/exception.hpp ****                 {
 18846              		.loc 3 486 0
 18847              		.cfi_startproc
 18848              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 18849              		.cfi_lsda 0x1b,.LLSDA15540
 18850 0000 55       		pushq	%rbp
 18851              		.cfi_def_cfa_offset 16
 18852              		.cfi_offset 6, -16
 18853 0001 4889E5   		movq	%rsp, %rbp
 18854              		.cfi_def_cfa_register 6
 18855 0004 4154     		pushq	%r12
 18856 0006 53       		pushq	%rbx
 18857 0007 4883EC20 		subq	$32, %rsp
 18858              		.cfi_offset 12, -24
 18859              		.cfi_offset 3, -32
 18860 000b 48897DD8 		movq	%rdi, -40(%rbp)
 488:/usr/include/boost/exception/exception.hpp ****                 }
 18861              		.loc 3 488 0
 18862 000f 8845EE   		movb	%al, -18(%rbp)
 18863 0012 BF380000 		movl	$56, %edi
 18863      00
 18864              	.LEHB111:
 18865 0017 E8000000 		call	_Znwm@PLT
 18865      00
 18866              	.LEHE111:
 18867 001c 4889C3   		movq	%rax, %rbx
 18868 001f 488B45D8 		movq	-40(%rbp), %rax
GAS LISTING /tmp/ccvUPO8Q.s 			page 726


 18869 0023 4883EC08 		subq	$8, %rsp
 18870 0027 0FB655EE 		movzbl	-18(%rbp), %edx
 18871 002b 52       		pushq	%rdx
 18872 002c 4889C6   		movq	%rax, %rsi
 18873 002f 4889DF   		movq	%rbx, %rdi
 18874              	.LEHB112:
 18875              		.cfi_escape 0x2e,0x10
 18876 0032 E8000000 		call	_ZN5boost16exception_detail10clone_implINS0_14bad_exception_EEC1ERKS3_NS3_9clone_tagE
 18876      00
 18877              	.LEHE112:
 488:/usr/include/boost/exception/exception.hpp ****                 }
 18878              		.loc 3 488 0 is_stmt 0 discriminator 2
 18879 0037 4883C410 		addq	$16, %rsp
 18880 003b 4885DB   		testq	%rbx, %rbx
 18881 003e 740F     		je	.L928
 488:/usr/include/boost/exception/exception.hpp ****                 }
 18882              		.loc 3 488 0 discriminator 5
 18883 0040 488B03   		movq	(%rbx), %rax
 18884 0043 4883E818 		subq	$24, %rax
 18885 0047 488B00   		movq	(%rax), %rax
 18886 004a 4801D8   		addq	%rbx, %rax
 18887 004d EB24     		jmp	.L935
 18888              	.L928:
 488:/usr/include/boost/exception/exception.hpp ****                 }
 18889              		.loc 3 488 0 discriminator 6
 18890 004f B8000000 		movl	$0, %eax
 18890      00
 18891 0054 EB1D     		jmp	.L935
 18892              	.L934:
 18893 0056 4989C4   		movq	%rax, %r12
 488:/usr/include/boost/exception/exception.hpp ****                 }
 18894              		.loc 3 488 0
 18895 0059 BE380000 		movl	$56, %esi
 18895      00
 18896 005e 4889DF   		movq	%rbx, %rdi
 18897 0061 E8000000 		call	_ZdlPvm@PLT
 18897      00
 18898 0066 4C89E0   		movq	%r12, %rax
 18899 0069 EB00     		jmp	.L932
 18900              	.L933:
 18901              	.L932:
 18902 006b 4889C7   		movq	%rax, %rdi
 18903              	.LEHB113:
 18904 006e E8000000 		call	_Unwind_Resume@PLT
 18904      00
 18905              	.LEHE113:
 18906              	.L935:
 489:/usr/include/boost/exception/exception.hpp **** 
 18907              		.loc 3 489 0 is_stmt 1
 18908 0073 488D65F0 		leaq	-16(%rbp), %rsp
 18909 0077 5B       		popq	%rbx
 18910 0078 415C     		popq	%r12
 18911 007a 5D       		popq	%rbp
 18912              		.cfi_def_cfa 7, 8
 18913 007b C3       		ret
 18914              		.cfi_endproc
 18915              	.LFE15540:
GAS LISTING /tmp/ccvUPO8Q.s 			page 727


 18916              		.section	.gcc_except_table
 18917              	.LLSDA15540:
 18918 02a3 FF       		.byte	0xff
 18919 02a4 FF       		.byte	0xff
 18920 02a5 01       		.byte	0x1
 18921 02a6 0C       		.uleb128 .LLSDACSE15540-.LLSDACSB15540
 18922              	.LLSDACSB15540:
 18923 02a7 17       		.uleb128 .LEHB111-.LFB15540
 18924 02a8 05       		.uleb128 .LEHE111-.LEHB111
 18925 02a9 6B       		.uleb128 .L933-.LFB15540
 18926 02aa 00       		.uleb128 0
 18927 02ab 32       		.uleb128 .LEHB112-.LFB15540
 18928 02ac 05       		.uleb128 .LEHE112-.LEHB112
 18929 02ad 56       		.uleb128 .L934-.LFB15540
 18930 02ae 00       		.uleb128 0
 18931 02af 6E       		.uleb128 .LEHB113-.LFB15540
 18932 02b0 05       		.uleb128 .LEHE113-.LEHB113
 18933 02b1 00       		.uleb128 0
 18934 02b2 00       		.uleb128 0
 18935              	.LLSDACSE15540:
 18936              		.section	.text._ZNK5boost16exception_detail10clone_implINS0_14bad_exception_EE5cloneEv,"axG",@prog
 18938              		.set	.LTHUNK264,_ZNK5boost16exception_detail10clone_implINS0_14bad_exception_EE5cloneEv
 18939              		.weak	_ZTv0_n24_NK5boost16exception_detail10clone_implINS0_14bad_exception_EE5cloneEv
 18941              	_ZTv0_n24_NK5boost16exception_detail10clone_implINS0_14bad_exception_EE5cloneEv:
 18942              	.LFB15713:
 486:/usr/include/boost/exception/exception.hpp ****                 {
 18943              		.loc 3 486 0
 18944              		.cfi_startproc
 18945 007c 4C8B17   		movq	(%rdi), %r10
 18946 007f 49037AE8 		addq	-24(%r10), %rdi
 18947 0083 E978FFFF 		jmp	.LTHUNK264
 18947      FF
 18948              		.cfi_endproc
 18949              	.LFE15713:
 18951              		.section	.text._ZNK5boost16exception_detail10clone_implINS0_14bad_exception_EE7rethrowEv,"axG",@pr
 18952              		.align 2
 18953              		.weak	_ZNK5boost16exception_detail10clone_implINS0_14bad_exception_EE7rethrowEv
 18955              	_ZNK5boost16exception_detail10clone_implINS0_14bad_exception_EE7rethrowEv:
 18956              	.LFB15541:
 492:/usr/include/boost/exception/exception.hpp ****                 {
 18957              		.loc 3 492 0
 18958              		.cfi_startproc
 18959              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 18960              		.cfi_lsda 0x1b,.LLSDA15541
 18961 0000 55       		pushq	%rbp
 18962              		.cfi_def_cfa_offset 16
 18963              		.cfi_offset 6, -16
 18964 0001 4889E5   		movq	%rsp, %rbp
 18965              		.cfi_def_cfa_register 6
 18966 0004 4154     		pushq	%r12
 18967 0006 53       		pushq	%rbx
 18968 0007 4883EC10 		subq	$16, %rsp
 18969              		.cfi_offset 12, -24
 18970              		.cfi_offset 3, -32
 18971 000b 48897DE8 		movq	%rdi, -24(%rbp)
 494:/usr/include/boost/exception/exception.hpp ****                 }
 18972              		.loc 3 494 0
GAS LISTING /tmp/ccvUPO8Q.s 			page 728


 18973 000f BF380000 		movl	$56, %edi
 18973      00
 18974 0014 E8000000 		call	__cxa_allocate_exception@PLT
 18974      00
 18975 0019 4889C3   		movq	%rax, %rbx
 18976 001c 488B45E8 		movq	-24(%rbp), %rax
 18977 0020 4889C6   		movq	%rax, %rsi
 18978 0023 4889DF   		movq	%rbx, %rdi
 18979              	.LEHB114:
 18980 0026 E8000000 		call	_ZN5boost16exception_detail10clone_implINS0_14bad_exception_EEC1ERKS3_
 18980      00
 18981              	.LEHE114:
 494:/usr/include/boost/exception/exception.hpp ****                 }
 18982              		.loc 3 494 0 is_stmt 0 discriminator 2
 18983 002b 488D1500 		leaq	_ZN5boost16exception_detail10clone_implINS0_14bad_exception_EED1Ev(%rip), %rdx
 18983      000000
 18984 0032 488D3500 		leaq	_ZTIN5boost16exception_detail10clone_implINS0_14bad_exception_EEE(%rip), %rsi
 18984      000000
 18985 0039 4889DF   		movq	%rbx, %rdi
 18986              	.LEHB115:
 18987 003c E8000000 		call	__cxa_throw@PLT
 18987      00
 18988              	.L938:
 18989 0041 4989C4   		movq	%rax, %r12
 494:/usr/include/boost/exception/exception.hpp ****                 }
 18990              		.loc 3 494 0
 18991 0044 4889DF   		movq	%rbx, %rdi
 18992 0047 E8000000 		call	__cxa_free_exception@PLT
 18992      00
 18993 004c 4C89E0   		movq	%r12, %rax
 18994 004f 4889C7   		movq	%rax, %rdi
 18995 0052 E8000000 		call	_Unwind_Resume@PLT
 18995      00
 18996              	.LEHE115:
 18997              		.cfi_endproc
 18998              	.LFE15541:
 18999              		.section	.gcc_except_table
 19000              	.LLSDA15541:
 19001 02b3 FF       		.byte	0xff
 19002 02b4 FF       		.byte	0xff
 19003 02b5 01       		.byte	0x1
 19004 02b6 08       		.uleb128 .LLSDACSE15541-.LLSDACSB15541
 19005              	.LLSDACSB15541:
 19006 02b7 26       		.uleb128 .LEHB114-.LFB15541
 19007 02b8 05       		.uleb128 .LEHE114-.LEHB114
 19008 02b9 41       		.uleb128 .L938-.LFB15541
 19009 02ba 00       		.uleb128 0
 19010 02bb 3C       		.uleb128 .LEHB115-.LFB15541
 19011 02bc 1B       		.uleb128 .LEHE115-.LEHB115
 19012 02bd 00       		.uleb128 0
 19013 02be 00       		.uleb128 0
 19014              	.LLSDACSE15541:
 19015              		.section	.text._ZNK5boost16exception_detail10clone_implINS0_14bad_exception_EE7rethrowEv,"axG",@pr
 19017              		.set	.LTHUNK265,_ZNK5boost16exception_detail10clone_implINS0_14bad_exception_EE7rethrowEv
 19018              		.weak	_ZTv0_n32_NK5boost16exception_detail10clone_implINS0_14bad_exception_EE7rethrowEv
 19020              	_ZTv0_n32_NK5boost16exception_detail10clone_implINS0_14bad_exception_EE7rethrowEv:
 19021              	.LFB15714:
GAS LISTING /tmp/ccvUPO8Q.s 			page 729


 492:/usr/include/boost/exception/exception.hpp ****                 {
 19022              		.loc 3 492 0 is_stmt 1
 19023              		.cfi_startproc
 19024 0057 4C8B17   		movq	(%rdi), %r10
 19025 005a 49037AE0 		addq	-32(%r10), %rdi
 19026 005e EBA0     		jmp	.LTHUNK265
 19027              		.cfi_endproc
 19028              	.LFE15714:
 19030              		.section	.text._ZNK5boost16exception_detail10clone_implINS0_10bad_alloc_EE5cloneEv,"axG",@progbits
 19031              		.align 2
 19032              		.weak	_ZNK5boost16exception_detail10clone_implINS0_10bad_alloc_EE5cloneEv
 19034              	_ZNK5boost16exception_detail10clone_implINS0_10bad_alloc_EE5cloneEv:
 19035              	.LFB15542:
 486:/usr/include/boost/exception/exception.hpp ****                 {
 19036              		.loc 3 486 0
 19037              		.cfi_startproc
 19038              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 19039              		.cfi_lsda 0x1b,.LLSDA15542
 19040 0000 55       		pushq	%rbp
 19041              		.cfi_def_cfa_offset 16
 19042              		.cfi_offset 6, -16
 19043 0001 4889E5   		movq	%rsp, %rbp
 19044              		.cfi_def_cfa_register 6
 19045 0004 4154     		pushq	%r12
 19046 0006 53       		pushq	%rbx
 19047 0007 4883EC20 		subq	$32, %rsp
 19048              		.cfi_offset 12, -24
 19049              		.cfi_offset 3, -32
 19050 000b 48897DD8 		movq	%rdi, -40(%rbp)
 488:/usr/include/boost/exception/exception.hpp ****                 }
 19051              		.loc 3 488 0
 19052 000f 8845EE   		movb	%al, -18(%rbp)
 19053 0012 BF380000 		movl	$56, %edi
 19053      00
 19054              	.LEHB116:
 19055 0017 E8000000 		call	_Znwm@PLT
 19055      00
 19056              	.LEHE116:
 19057 001c 4889C3   		movq	%rax, %rbx
 19058 001f 488B45D8 		movq	-40(%rbp), %rax
 19059 0023 4883EC08 		subq	$8, %rsp
 19060 0027 0FB655EE 		movzbl	-18(%rbp), %edx
 19061 002b 52       		pushq	%rdx
 19062 002c 4889C6   		movq	%rax, %rsi
 19063 002f 4889DF   		movq	%rbx, %rdi
 19064              	.LEHB117:
 19065              		.cfi_escape 0x2e,0x10
 19066 0032 E8000000 		call	_ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EEC1ERKS3_NS3_9clone_tagE
 19066      00
 19067              	.LEHE117:
 488:/usr/include/boost/exception/exception.hpp ****                 }
 19068              		.loc 3 488 0 is_stmt 0 discriminator 2
 19069 0037 4883C410 		addq	$16, %rsp
 19070 003b 4885DB   		testq	%rbx, %rbx
 19071 003e 740F     		je	.L940
 488:/usr/include/boost/exception/exception.hpp ****                 }
 19072              		.loc 3 488 0 discriminator 5
GAS LISTING /tmp/ccvUPO8Q.s 			page 730


 19073 0040 488B03   		movq	(%rbx), %rax
 19074 0043 4883E818 		subq	$24, %rax
 19075 0047 488B00   		movq	(%rax), %rax
 19076 004a 4801D8   		addq	%rbx, %rax
 19077 004d EB24     		jmp	.L947
 19078              	.L940:
 488:/usr/include/boost/exception/exception.hpp ****                 }
 19079              		.loc 3 488 0 discriminator 6
 19080 004f B8000000 		movl	$0, %eax
 19080      00
 19081 0054 EB1D     		jmp	.L947
 19082              	.L946:
 19083 0056 4989C4   		movq	%rax, %r12
 488:/usr/include/boost/exception/exception.hpp ****                 }
 19084              		.loc 3 488 0
 19085 0059 BE380000 		movl	$56, %esi
 19085      00
 19086 005e 4889DF   		movq	%rbx, %rdi
 19087 0061 E8000000 		call	_ZdlPvm@PLT
 19087      00
 19088 0066 4C89E0   		movq	%r12, %rax
 19089 0069 EB00     		jmp	.L944
 19090              	.L945:
 19091              	.L944:
 19092 006b 4889C7   		movq	%rax, %rdi
 19093              	.LEHB118:
 19094 006e E8000000 		call	_Unwind_Resume@PLT
 19094      00
 19095              	.LEHE118:
 19096              	.L947:
 489:/usr/include/boost/exception/exception.hpp **** 
 19097              		.loc 3 489 0 is_stmt 1
 19098 0073 488D65F0 		leaq	-16(%rbp), %rsp
 19099 0077 5B       		popq	%rbx
 19100 0078 415C     		popq	%r12
 19101 007a 5D       		popq	%rbp
 19102              		.cfi_def_cfa 7, 8
 19103 007b C3       		ret
 19104              		.cfi_endproc
 19105              	.LFE15542:
 19106              		.section	.gcc_except_table
 19107              	.LLSDA15542:
 19108 02bf FF       		.byte	0xff
 19109 02c0 FF       		.byte	0xff
 19110 02c1 01       		.byte	0x1
 19111 02c2 0C       		.uleb128 .LLSDACSE15542-.LLSDACSB15542
 19112              	.LLSDACSB15542:
 19113 02c3 17       		.uleb128 .LEHB116-.LFB15542
 19114 02c4 05       		.uleb128 .LEHE116-.LEHB116
 19115 02c5 6B       		.uleb128 .L945-.LFB15542
 19116 02c6 00       		.uleb128 0
 19117 02c7 32       		.uleb128 .LEHB117-.LFB15542
 19118 02c8 05       		.uleb128 .LEHE117-.LEHB117
 19119 02c9 56       		.uleb128 .L946-.LFB15542
 19120 02ca 00       		.uleb128 0
 19121 02cb 6E       		.uleb128 .LEHB118-.LFB15542
 19122 02cc 05       		.uleb128 .LEHE118-.LEHB118
GAS LISTING /tmp/ccvUPO8Q.s 			page 731


 19123 02cd 00       		.uleb128 0
 19124 02ce 00       		.uleb128 0
 19125              	.LLSDACSE15542:
 19126              		.section	.text._ZNK5boost16exception_detail10clone_implINS0_10bad_alloc_EE5cloneEv,"axG",@progbits
 19128              		.set	.LTHUNK266,_ZNK5boost16exception_detail10clone_implINS0_10bad_alloc_EE5cloneEv
 19129              		.weak	_ZTv0_n24_NK5boost16exception_detail10clone_implINS0_10bad_alloc_EE5cloneEv
 19131              	_ZTv0_n24_NK5boost16exception_detail10clone_implINS0_10bad_alloc_EE5cloneEv:
 19132              	.LFB15715:
 486:/usr/include/boost/exception/exception.hpp ****                 {
 19133              		.loc 3 486 0
 19134              		.cfi_startproc
 19135 007c 4C8B17   		movq	(%rdi), %r10
 19136 007f 49037AE8 		addq	-24(%r10), %rdi
 19137 0083 E978FFFF 		jmp	.LTHUNK266
 19137      FF
 19138              		.cfi_endproc
 19139              	.LFE15715:
 19141              		.section	.text._ZNK5boost16exception_detail10clone_implINS0_10bad_alloc_EE7rethrowEv,"axG",@progbi
 19142              		.align 2
 19143              		.weak	_ZNK5boost16exception_detail10clone_implINS0_10bad_alloc_EE7rethrowEv
 19145              	_ZNK5boost16exception_detail10clone_implINS0_10bad_alloc_EE7rethrowEv:
 19146              	.LFB15543:
 492:/usr/include/boost/exception/exception.hpp ****                 {
 19147              		.loc 3 492 0
 19148              		.cfi_startproc
 19149              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 19150              		.cfi_lsda 0x1b,.LLSDA15543
 19151 0000 55       		pushq	%rbp
 19152              		.cfi_def_cfa_offset 16
 19153              		.cfi_offset 6, -16
 19154 0001 4889E5   		movq	%rsp, %rbp
 19155              		.cfi_def_cfa_register 6
 19156 0004 4154     		pushq	%r12
 19157 0006 53       		pushq	%rbx
 19158 0007 4883EC10 		subq	$16, %rsp
 19159              		.cfi_offset 12, -24
 19160              		.cfi_offset 3, -32
 19161 000b 48897DE8 		movq	%rdi, -24(%rbp)
 494:/usr/include/boost/exception/exception.hpp ****                 }
 19162              		.loc 3 494 0
 19163 000f BF380000 		movl	$56, %edi
 19163      00
 19164 0014 E8000000 		call	__cxa_allocate_exception@PLT
 19164      00
 19165 0019 4889C3   		movq	%rax, %rbx
 19166 001c 488B45E8 		movq	-24(%rbp), %rax
 19167 0020 4889C6   		movq	%rax, %rsi
 19168 0023 4889DF   		movq	%rbx, %rdi
 19169              	.LEHB119:
 19170 0026 E8000000 		call	_ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EEC1ERKS3_
 19170      00
 19171              	.LEHE119:
 494:/usr/include/boost/exception/exception.hpp ****                 }
 19172              		.loc 3 494 0 is_stmt 0 discriminator 2
 19173 002b 488D1500 		leaq	_ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EED1Ev(%rip), %rdx
 19173      000000
 19174 0032 488D3500 		leaq	_ZTIN5boost16exception_detail10clone_implINS0_10bad_alloc_EEE(%rip), %rsi
GAS LISTING /tmp/ccvUPO8Q.s 			page 732


 19174      000000
 19175 0039 4889DF   		movq	%rbx, %rdi
 19176              	.LEHB120:
 19177 003c E8000000 		call	__cxa_throw@PLT
 19177      00
 19178              	.L950:
 19179 0041 4989C4   		movq	%rax, %r12
 494:/usr/include/boost/exception/exception.hpp ****                 }
 19180              		.loc 3 494 0
 19181 0044 4889DF   		movq	%rbx, %rdi
 19182 0047 E8000000 		call	__cxa_free_exception@PLT
 19182      00
 19183 004c 4C89E0   		movq	%r12, %rax
 19184 004f 4889C7   		movq	%rax, %rdi
 19185 0052 E8000000 		call	_Unwind_Resume@PLT
 19185      00
 19186              	.LEHE120:
 19187              		.cfi_endproc
 19188              	.LFE15543:
 19189              		.section	.gcc_except_table
 19190              	.LLSDA15543:
 19191 02cf FF       		.byte	0xff
 19192 02d0 FF       		.byte	0xff
 19193 02d1 01       		.byte	0x1
 19194 02d2 08       		.uleb128 .LLSDACSE15543-.LLSDACSB15543
 19195              	.LLSDACSB15543:
 19196 02d3 26       		.uleb128 .LEHB119-.LFB15543
 19197 02d4 05       		.uleb128 .LEHE119-.LEHB119
 19198 02d5 41       		.uleb128 .L950-.LFB15543
 19199 02d6 00       		.uleb128 0
 19200 02d7 3C       		.uleb128 .LEHB120-.LFB15543
 19201 02d8 1B       		.uleb128 .LEHE120-.LEHB120
 19202 02d9 00       		.uleb128 0
 19203 02da 00       		.uleb128 0
 19204              	.LLSDACSE15543:
 19205              		.section	.text._ZNK5boost16exception_detail10clone_implINS0_10bad_alloc_EE7rethrowEv,"axG",@progbi
 19207              		.set	.LTHUNK267,_ZNK5boost16exception_detail10clone_implINS0_10bad_alloc_EE7rethrowEv
 19208              		.weak	_ZTv0_n32_NK5boost16exception_detail10clone_implINS0_10bad_alloc_EE7rethrowEv
 19210              	_ZTv0_n32_NK5boost16exception_detail10clone_implINS0_10bad_alloc_EE7rethrowEv:
 19211              	.LFB15716:
 492:/usr/include/boost/exception/exception.hpp ****                 {
 19212              		.loc 3 492 0 is_stmt 1
 19213              		.cfi_startproc
 19214 0057 4C8B17   		movq	(%rdi), %r10
 19215 005a 49037AE0 		addq	-32(%r10), %rdi
 19216 005e EBA0     		jmp	.LTHUNK267
 19217              		.cfi_endproc
 19218              	.LFE15716:
 19220              		.section	.text._ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function
 19221              		.align 2
 19222              		.weak	_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEE
 19224              	_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEEC1ERKS5
 19225              	.LFB15624:
 464:/usr/include/boost/exception/exception.hpp ****                 T(x)
 19226              		.loc 3 464 0
 19227              		.cfi_startproc
 19228              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
GAS LISTING /tmp/ccvUPO8Q.s 			page 733


 19229              		.cfi_lsda 0x1b,.LLSDA15624
 19230 0000 55       		pushq	%rbp
 19231              		.cfi_def_cfa_offset 16
 19232              		.cfi_offset 6, -16
 19233 0001 4889E5   		movq	%rsp, %rbp
 19234              		.cfi_def_cfa_register 6
 19235 0004 53       		pushq	%rbx
 19236 0005 4883EC18 		subq	$24, %rsp
 19237              		.cfi_offset 3, -24
 19238 0009 48897DE8 		movq	%rdi, -24(%rbp)
 19239 000d 488975E0 		movq	%rsi, -32(%rbp)
 19240              	.LBB158:
 465:/usr/include/boost/exception/exception.hpp ****                 {
 19241              		.loc 3 465 0
 19242 0011 488B45E8 		movq	-24(%rbp), %rax
 19243 0015 4883C038 		addq	$56, %rax
 19244 0019 4889C7   		movq	%rax, %rdi
 19245 001c E8000000 		call	_ZN5boost16exception_detail10clone_baseC2Ev
 19245      00
 19246 0021 488B55E0 		movq	-32(%rbp), %rdx
 19247 0025 488B45E8 		movq	-24(%rbp), %rax
 19248 0029 4889D6   		movq	%rdx, %rsi
 19249 002c 4889C7   		movq	%rax, %rdi
 19250              	.LEHB121:
 19251 002f E8000000 		call	_ZN5boost16exception_detail19error_info_injectorINS_17bad_function_callEEC2ERKS3_
 19251      00
 19252              	.LEHE121:
 465:/usr/include/boost/exception/exception.hpp ****                 {
 19253              		.loc 3 465 0 is_stmt 0 discriminator 5
 19254 0034 488D1500 		leaq	24+_ZTVN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_call
 19254      000000
 19255 003b 488B45E8 		movq	-24(%rbp), %rax
 19256 003f 488910   		movq	%rdx, (%rax)
 19257 0042 488D1500 		leaq	80+_ZTVN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_call
 19257      000000
 19258 0049 488B45E8 		movq	-24(%rbp), %rax
 19259 004d 48895010 		movq	%rdx, 16(%rax)
 19260 0051 488B45E8 		movq	-24(%rbp), %rax
 19261 0055 488D5038 		leaq	56(%rax), %rdx
 19262 0059 488D0500 		leaq	136+_ZTVN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_cal
 19262      000000
 19263 0060 488902   		movq	%rax, (%rdx)
 467:/usr/include/boost/exception/exception.hpp ****                 }
 19264              		.loc 3 467 0 is_stmt 1 discriminator 5
 19265 0063 488B45E0 		movq	-32(%rbp), %rax
 19266 0067 488D5010 		leaq	16(%rax), %rdx
 19267 006b 488B45E8 		movq	-24(%rbp), %rax
 19268 006f 4883C010 		addq	$16, %rax
 19269 0073 4889D6   		movq	%rdx, %rsi
 19270 0076 4889C7   		movq	%rax, %rdi
 19271              	.LEHB122:
 19272 0079 E8000000 		call	_ZN5boost16exception_detail20copy_boost_exceptionEPNS_9exceptionEPKS1_
 19272      00
 19273              	.LEHE122:
 19274              	.LBE158:
 468:/usr/include/boost/exception/exception.hpp **** 
 19275              		.loc 3 468 0
GAS LISTING /tmp/ccvUPO8Q.s 			page 734


 19276 007e EB2F     		jmp	.L957
 19277              	.L955:
 19278 0080 4889C3   		movq	%rax, %rbx
 19279              	.LBB159:
 465:/usr/include/boost/exception/exception.hpp ****                 {
 19280              		.loc 3 465 0
 19281 0083 488B45E8 		movq	-24(%rbp), %rax
 19282 0087 4889C7   		movq	%rax, %rdi
 19283 008a E8000000 		call	_ZN5boost16exception_detail19error_info_injectorINS_17bad_function_callEED2Ev
 19283      00
 19284 008f EB03     		jmp	.L956
 19285              	.L954:
 19286 0091 4889C3   		movq	%rax, %rbx
 19287              	.L956:
 465:/usr/include/boost/exception/exception.hpp ****                 {
 19288              		.loc 3 465 0 is_stmt 0 discriminator 6
 19289 0094 488B45E8 		movq	-24(%rbp), %rax
 19290 0098 4883C038 		addq	$56, %rax
 19291 009c 4889C7   		movq	%rax, %rdi
 19292 009f E8000000 		call	_ZN5boost16exception_detail10clone_baseD2Ev
 19292      00
 19293 00a4 4889D8   		movq	%rbx, %rax
 19294 00a7 4889C7   		movq	%rax, %rdi
 19295              	.LEHB123:
 19296 00aa E8000000 		call	_Unwind_Resume@PLT
 19296      00
 19297              	.LEHE123:
 19298              	.L957:
 19299              	.LBE159:
 468:/usr/include/boost/exception/exception.hpp **** 
 19300              		.loc 3 468 0 is_stmt 1
 19301 00af 4883C418 		addq	$24, %rsp
 19302 00b3 5B       		popq	%rbx
 19303 00b4 5D       		popq	%rbp
 19304              		.cfi_def_cfa 7, 8
 19305 00b5 C3       		ret
 19306              		.cfi_endproc
 19307              	.LFE15624:
 19308              		.section	.gcc_except_table
 19309              	.LLSDA15624:
 19310 02db FF       		.byte	0xff
 19311 02dc FF       		.byte	0xff
 19312 02dd 01       		.byte	0x1
 19313 02de 0F       		.uleb128 .LLSDACSE15624-.LLSDACSB15624
 19314              	.LLSDACSB15624:
 19315 02df 2F       		.uleb128 .LEHB121-.LFB15624
 19316 02e0 05       		.uleb128 .LEHE121-.LEHB121
 19317 02e1 9101     		.uleb128 .L954-.LFB15624
 19318 02e3 00       		.uleb128 0
 19319 02e4 79       		.uleb128 .LEHB122-.LFB15624
 19320 02e5 05       		.uleb128 .LEHE122-.LEHB122
 19321 02e6 8001     		.uleb128 .L955-.LFB15624
 19322 02e8 00       		.uleb128 0
 19323 02e9 AA01     		.uleb128 .LEHB123-.LFB15624
 19324 02eb 05       		.uleb128 .LEHE123-.LEHB123
 19325 02ec 00       		.uleb128 0
 19326 02ed 00       		.uleb128 0
GAS LISTING /tmp/ccvUPO8Q.s 			page 735


 19327              	.LLSDACSE15624:
 19328              		.section	.text._ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function
 19330              		.section	.text._ZN5boost16exception_detail10clone_implINS0_14bad_exception_EEC1ERKS3_NS3_9clone_ta
 19331              		.align 2
 19332              		.weak	_ZN5boost16exception_detail10clone_implINS0_14bad_exception_EEC1ERKS3_NS3_9clone_tagE
 19334              	_ZN5boost16exception_detail10clone_implINS0_14bad_exception_EEC1ERKS3_NS3_9clone_tagE:
 19335              	.LFB15642:
 464:/usr/include/boost/exception/exception.hpp ****                 T(x)
 19336              		.loc 3 464 0
 19337              		.cfi_startproc
 19338              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 19339              		.cfi_lsda 0x1b,.LLSDA15642
 19340 0000 55       		pushq	%rbp
 19341              		.cfi_def_cfa_offset 16
 19342              		.cfi_offset 6, -16
 19343 0001 4889E5   		movq	%rsp, %rbp
 19344              		.cfi_def_cfa_register 6
 19345 0004 53       		pushq	%rbx
 19346 0005 4883EC18 		subq	$24, %rsp
 19347              		.cfi_offset 3, -24
 19348 0009 48897DE8 		movq	%rdi, -24(%rbp)
 19349 000d 488975E0 		movq	%rsi, -32(%rbp)
 19350              	.LBB160:
 465:/usr/include/boost/exception/exception.hpp ****                 {
 19351              		.loc 3 465 0
 19352 0011 488B45E8 		movq	-24(%rbp), %rax
 19353 0015 4883C030 		addq	$48, %rax
 19354 0019 4889C7   		movq	%rax, %rdi
 19355 001c E8000000 		call	_ZN5boost16exception_detail10clone_baseC2Ev
 19355      00
 19356 0021 488B55E0 		movq	-32(%rbp), %rdx
 19357 0025 488B45E8 		movq	-24(%rbp), %rax
 19358 0029 4889D6   		movq	%rdx, %rsi
 19359 002c 4889C7   		movq	%rax, %rdi
 19360              	.LEHB124:
 19361 002f E8000000 		call	_ZN5boost16exception_detail14bad_exception_C2ERKS1_
 19361      00
 19362              	.LEHE124:
 465:/usr/include/boost/exception/exception.hpp ****                 {
 19363              		.loc 3 465 0 is_stmt 0 discriminator 5
 19364 0034 488D1500 		leaq	24+_ZTVN5boost16exception_detail10clone_implINS0_14bad_exception_EEE(%rip), %rdx
 19364      000000
 19365 003b 488B45E8 		movq	-24(%rbp), %rax
 19366 003f 488910   		movq	%rdx, (%rax)
 19367 0042 488D1500 		leaq	72+_ZTVN5boost16exception_detail10clone_implINS0_14bad_exception_EEE(%rip), %rdx
 19367      000000
 19368 0049 488B45E8 		movq	-24(%rbp), %rax
 19369 004d 48895028 		movq	%rdx, 40(%rax)
 19370 0051 488B45E8 		movq	-24(%rbp), %rax
 19371 0055 488D5030 		leaq	48(%rax), %rdx
 19372 0059 488D0500 		leaq	136+_ZTVN5boost16exception_detail10clone_implINS0_14bad_exception_EEE(%rip), %rax
 19372      000000
 19373 0060 488902   		movq	%rax, (%rdx)
 467:/usr/include/boost/exception/exception.hpp ****                 }
 19374              		.loc 3 467 0 is_stmt 1 discriminator 5
 19375 0063 488B55E0 		movq	-32(%rbp), %rdx
 19376 0067 488B45E8 		movq	-24(%rbp), %rax
GAS LISTING /tmp/ccvUPO8Q.s 			page 736


 19377 006b 4889D6   		movq	%rdx, %rsi
 19378 006e 4889C7   		movq	%rax, %rdi
 19379              	.LEHB125:
 19380 0071 E8000000 		call	_ZN5boost16exception_detail20copy_boost_exceptionEPNS_9exceptionEPKS1_
 19380      00
 19381              	.LEHE125:
 19382              	.LBE160:
 468:/usr/include/boost/exception/exception.hpp **** 
 19383              		.loc 3 468 0
 19384 0076 EB2F     		jmp	.L964
 19385              	.L962:
 19386 0078 4889C3   		movq	%rax, %rbx
 19387              	.LBB161:
 465:/usr/include/boost/exception/exception.hpp ****                 {
 19388              		.loc 3 465 0
 19389 007b 488B45E8 		movq	-24(%rbp), %rax
 19390 007f 4889C7   		movq	%rax, %rdi
 19391 0082 E8000000 		call	_ZN5boost16exception_detail14bad_exception_D2Ev
 19391      00
 19392 0087 EB03     		jmp	.L963
 19393              	.L961:
 19394 0089 4889C3   		movq	%rax, %rbx
 19395              	.L963:
 465:/usr/include/boost/exception/exception.hpp ****                 {
 19396              		.loc 3 465 0 is_stmt 0 discriminator 6
 19397 008c 488B45E8 		movq	-24(%rbp), %rax
 19398 0090 4883C030 		addq	$48, %rax
 19399 0094 4889C7   		movq	%rax, %rdi
 19400 0097 E8000000 		call	_ZN5boost16exception_detail10clone_baseD2Ev
 19400      00
 19401 009c 4889D8   		movq	%rbx, %rax
 19402 009f 4889C7   		movq	%rax, %rdi
 19403              	.LEHB126:
 19404 00a2 E8000000 		call	_Unwind_Resume@PLT
 19404      00
 19405              	.LEHE126:
 19406              	.L964:
 19407              	.LBE161:
 468:/usr/include/boost/exception/exception.hpp **** 
 19408              		.loc 3 468 0 is_stmt 1
 19409 00a7 4883C418 		addq	$24, %rsp
 19410 00ab 5B       		popq	%rbx
 19411 00ac 5D       		popq	%rbp
 19412              		.cfi_def_cfa 7, 8
 19413 00ad C3       		ret
 19414              		.cfi_endproc
 19415              	.LFE15642:
 19416              		.section	.gcc_except_table
 19417              	.LLSDA15642:
 19418 02ee FF       		.byte	0xff
 19419 02ef FF       		.byte	0xff
 19420 02f0 01       		.byte	0x1
 19421 02f1 0E       		.uleb128 .LLSDACSE15642-.LLSDACSB15642
 19422              	.LLSDACSB15642:
 19423 02f2 2F       		.uleb128 .LEHB124-.LFB15642
 19424 02f3 05       		.uleb128 .LEHE124-.LEHB124
 19425 02f4 8901     		.uleb128 .L961-.LFB15642
GAS LISTING /tmp/ccvUPO8Q.s 			page 737


 19426 02f6 00       		.uleb128 0
 19427 02f7 71       		.uleb128 .LEHB125-.LFB15642
 19428 02f8 05       		.uleb128 .LEHE125-.LEHB125
 19429 02f9 78       		.uleb128 .L962-.LFB15642
 19430 02fa 00       		.uleb128 0
 19431 02fb A201     		.uleb128 .LEHB126-.LFB15642
 19432 02fd 05       		.uleb128 .LEHE126-.LEHB126
 19433 02fe 00       		.uleb128 0
 19434 02ff 00       		.uleb128 0
 19435              	.LLSDACSE15642:
 19436              		.section	.text._ZN5boost16exception_detail10clone_implINS0_14bad_exception_EEC1ERKS3_NS3_9clone_ta
 19438              		.section	.text._ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EEC1ERKS3_NS3_9clone_tagE,"
 19439              		.align 2
 19440              		.weak	_ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EEC1ERKS3_NS3_9clone_tagE
 19442              	_ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EEC1ERKS3_NS3_9clone_tagE:
 19443              	.LFB15645:
 464:/usr/include/boost/exception/exception.hpp ****                 T(x)
 19444              		.loc 3 464 0
 19445              		.cfi_startproc
 19446              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 19447              		.cfi_lsda 0x1b,.LLSDA15645
 19448 0000 55       		pushq	%rbp
 19449              		.cfi_def_cfa_offset 16
 19450              		.cfi_offset 6, -16
 19451 0001 4889E5   		movq	%rsp, %rbp
 19452              		.cfi_def_cfa_register 6
 19453 0004 53       		pushq	%rbx
 19454 0005 4883EC18 		subq	$24, %rsp
 19455              		.cfi_offset 3, -24
 19456 0009 48897DE8 		movq	%rdi, -24(%rbp)
 19457 000d 488975E0 		movq	%rsi, -32(%rbp)
 19458              	.LBB162:
 465:/usr/include/boost/exception/exception.hpp ****                 {
 19459              		.loc 3 465 0
 19460 0011 488B45E8 		movq	-24(%rbp), %rax
 19461 0015 4883C030 		addq	$48, %rax
 19462 0019 4889C7   		movq	%rax, %rdi
 19463 001c E8000000 		call	_ZN5boost16exception_detail10clone_baseC2Ev
 19463      00
 19464 0021 488B55E0 		movq	-32(%rbp), %rdx
 19465 0025 488B45E8 		movq	-24(%rbp), %rax
 19466 0029 4889D6   		movq	%rdx, %rsi
 19467 002c 4889C7   		movq	%rax, %rdi
 19468              	.LEHB127:
 19469 002f E8000000 		call	_ZN5boost16exception_detail10bad_alloc_C2ERKS1_
 19469      00
 19470              	.LEHE127:
 465:/usr/include/boost/exception/exception.hpp ****                 {
 19471              		.loc 3 465 0 is_stmt 0 discriminator 5
 19472 0034 488D1500 		leaq	24+_ZTVN5boost16exception_detail10clone_implINS0_10bad_alloc_EEE(%rip), %rdx
 19472      000000
 19473 003b 488B45E8 		movq	-24(%rbp), %rax
 19474 003f 488910   		movq	%rdx, (%rax)
 19475 0042 488D1500 		leaq	72+_ZTVN5boost16exception_detail10clone_implINS0_10bad_alloc_EEE(%rip), %rdx
 19475      000000
 19476 0049 488B45E8 		movq	-24(%rbp), %rax
 19477 004d 48895028 		movq	%rdx, 40(%rax)
GAS LISTING /tmp/ccvUPO8Q.s 			page 738


 19478 0051 488B45E8 		movq	-24(%rbp), %rax
 19479 0055 488D5030 		leaq	48(%rax), %rdx
 19480 0059 488D0500 		leaq	136+_ZTVN5boost16exception_detail10clone_implINS0_10bad_alloc_EEE(%rip), %rax
 19480      000000
 19481 0060 488902   		movq	%rax, (%rdx)
 467:/usr/include/boost/exception/exception.hpp ****                 }
 19482              		.loc 3 467 0 is_stmt 1 discriminator 5
 19483 0063 488B55E0 		movq	-32(%rbp), %rdx
 19484 0067 488B45E8 		movq	-24(%rbp), %rax
 19485 006b 4889D6   		movq	%rdx, %rsi
 19486 006e 4889C7   		movq	%rax, %rdi
 19487              	.LEHB128:
 19488 0071 E8000000 		call	_ZN5boost16exception_detail20copy_boost_exceptionEPNS_9exceptionEPKS1_
 19488      00
 19489              	.LEHE128:
 19490              	.LBE162:
 468:/usr/include/boost/exception/exception.hpp **** 
 19491              		.loc 3 468 0
 19492 0076 EB2F     		jmp	.L971
 19493              	.L969:
 19494 0078 4889C3   		movq	%rax, %rbx
 19495              	.LBB163:
 465:/usr/include/boost/exception/exception.hpp ****                 {
 19496              		.loc 3 465 0
 19497 007b 488B45E8 		movq	-24(%rbp), %rax
 19498 007f 4889C7   		movq	%rax, %rdi
 19499 0082 E8000000 		call	_ZN5boost16exception_detail10bad_alloc_D2Ev
 19499      00
 19500 0087 EB03     		jmp	.L970
 19501              	.L968:
 19502 0089 4889C3   		movq	%rax, %rbx
 19503              	.L970:
 465:/usr/include/boost/exception/exception.hpp ****                 {
 19504              		.loc 3 465 0 is_stmt 0 discriminator 6
 19505 008c 488B45E8 		movq	-24(%rbp), %rax
 19506 0090 4883C030 		addq	$48, %rax
 19507 0094 4889C7   		movq	%rax, %rdi
 19508 0097 E8000000 		call	_ZN5boost16exception_detail10clone_baseD2Ev
 19508      00
 19509 009c 4889D8   		movq	%rbx, %rax
 19510 009f 4889C7   		movq	%rax, %rdi
 19511              	.LEHB129:
 19512 00a2 E8000000 		call	_Unwind_Resume@PLT
 19512      00
 19513              	.LEHE129:
 19514              	.L971:
 19515              	.LBE163:
 468:/usr/include/boost/exception/exception.hpp **** 
 19516              		.loc 3 468 0 is_stmt 1
 19517 00a7 4883C418 		addq	$24, %rsp
 19518 00ab 5B       		popq	%rbx
 19519 00ac 5D       		popq	%rbp
 19520              		.cfi_def_cfa 7, 8
 19521 00ad C3       		ret
 19522              		.cfi_endproc
 19523              	.LFE15645:
 19524              		.section	.gcc_except_table
GAS LISTING /tmp/ccvUPO8Q.s 			page 739


 19525              	.LLSDA15645:
 19526 0300 FF       		.byte	0xff
 19527 0301 FF       		.byte	0xff
 19528 0302 01       		.byte	0x1
 19529 0303 0E       		.uleb128 .LLSDACSE15645-.LLSDACSB15645
 19530              	.LLSDACSB15645:
 19531 0304 2F       		.uleb128 .LEHB127-.LFB15645
 19532 0305 05       		.uleb128 .LEHE127-.LEHB127
 19533 0306 8901     		.uleb128 .L968-.LFB15645
 19534 0308 00       		.uleb128 0
 19535 0309 71       		.uleb128 .LEHB128-.LFB15645
 19536 030a 05       		.uleb128 .LEHE128-.LEHB128
 19537 030b 78       		.uleb128 .L969-.LFB15645
 19538 030c 00       		.uleb128 0
 19539 030d A201     		.uleb128 .LEHB129-.LFB15645
 19540 030f 05       		.uleb128 .LEHE129-.LEHB129
 19541 0310 00       		.uleb128 0
 19542 0311 00       		.uleb128 0
 19543              	.LLSDACSE15645:
 19544              		.section	.text._ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EEC1ERKS3_NS3_9clone_tagE,"
 19546              		.text
 19548              	_GLOBAL__sub_I__ZN2gr5lfast7costas24makeEfi:
 19549              	.LFB15688:
 19550              		.loc 22 432 0
 19551              		.cfi_startproc
 19552 1971 55       		pushq	%rbp
 19553              		.cfi_def_cfa_offset 16
 19554              		.cfi_offset 6, -16
 19555 1972 4889E5   		movq	%rsp, %rbp
 19556              		.cfi_def_cfa_register 6
 19557              		.loc 22 432 0
 19558 1975 BEFFFF00 		movl	$65535, %esi
 19558      00
 19559 197a BF010000 		movl	$1, %edi
 19559      00
 19560 197f E8DCFEFF 		call	_Z41__static_initialization_and_destruction_0ii
 19560      FF
 19561 1984 5D       		popq	%rbp
 19562              		.cfi_def_cfa 7, 8
 19563 1985 C3       		ret
 19564              		.cfi_endproc
 19565              	.LFE15688:
 19567              		.section	.init_array,"aw"
 19568              		.align 8
 19569 0000 00000000 		.quad	_GLOBAL__sub_I__ZN2gr5lfast7costas24makeEfi
 19569      00000000 
 19570              		.section	.rodata
 19571 009e 0000     		.align 32
 19574              	_ZZN5boost16exception_detail27get_static_exception_objectINS0_10bad_alloc_EEENS_13exception_ptrEvE1
 19575 00a0 626F6F73 		.string	"boost::exception_ptr boost::exception_detail::get_static_exception_object() [with Excepti
 19575      743A3A65 
 19575      78636570 
 19575      74696F6E 
 19575      5F707472 
 19576 0123 00000000 		.align 32
 19576      00000000 
 19576      00000000 
GAS LISTING /tmp/ccvUPO8Q.s 			page 740


 19576      00000000 
 19576      00000000 
 19579              	_ZZN5boost16exception_detail27get_static_exception_objectINS0_14bad_exception_EEENS_13exception_ptr
 19580 0140 626F6F73 		.string	"boost::exception_ptr boost::exception_detail::get_static_exception_object() [with Excepti
 19580      743A3A65 
 19580      78636570 
 19580      74696F6E 
 19580      5F707472 
 19581 01c7 00000000 		.align 16
 19581      00000000 
 19581      00
 19582              	.LC0:
 19583 01d0 FFFFFF7F 		.long	2147483647
 19584 01d4 00000000 		.long	0
 19585 01d8 00000000 		.long	0
 19586 01dc 00000000 		.long	0
 19587              		.align 4
 19588              	.LC3:
 19589 01e0 0000003F 		.long	1056964608
 19590              		.align 4
 19591              	.LC5:
 19592 01e4 0000803F 		.long	1065353216
 19593              		.align 4
 19594              	.LC7:
 19595 01e8 000080BF 		.long	3212836864
 19596              		.align 4
 19597              	.LC8:
 19598 01ec 00002041 		.long	1092616192
 19599              		.align 16
 19600              	.LC10:
 19601 01f0 00000080 		.long	2147483648
 19602 01f4 00000000 		.long	0
 19603 01f8 00000000 		.long	0
 19604 01fc 00000000 		.long	0
 19605              		.align 8
 19606              	.LC11:
 19607 0200 182D4454 		.long	1413754136
 19608 0204 FB211940 		.long	1075388923
 19609              		.align 8
 19610              	.LC12:
 19611 0208 182D4454 		.long	1413754136
 19612 020c FB2119C0 		.long	-1072094725
 19613              		.text
 19614              	.Letext0:
 19615              		.file 52 "/usr/include/c++/6/bits/basic_string.h"
 19616              		.file 53 "/usr/include/c++/6/bits/basic_string.tcc"
 19617              		.file 54 "/usr/include/c++/6/bits/stringfwd.h"
 19618              		.file 55 "/usr/include/c++/6/cstddef"
 19619              		.file 56 "/usr/include/c++/6/cstdlib"
 19620              		.file 57 "/usr/include/c++/6/type_traits"
 19621              		.file 58 "/usr/include/c++/6/bits/stl_iterator_base_types.h"
 19622              		.file 59 "/usr/include/c++/6/debug/debug.h"
 19623              		.file 60 "/usr/include/x86_64-linux-gnu/c++/6/bits/c++config.h"
 19624              		.file 61 "/usr/include/c++/6/bits/exception_ptr.h"
 19625              		.file 62 "/usr/include/c++/6/cwchar"
 19626              		.file 63 "/usr/include/c++/6/bits/uses_allocator.h"
 19627              		.file 64 "/usr/include/c++/6/utility"
GAS LISTING /tmp/ccvUPO8Q.s 			page 741


 19628              		.file 65 "/usr/include/c++/6/bits/char_traits.h"
 19629              		.file 66 "/usr/include/c++/6/cstdint"
 19630              		.file 67 "/usr/include/c++/6/clocale"
 19631              		.file 68 "/usr/include/c++/6/cstdio"
 19632              		.file 69 "/usr/include/c++/6/initializer_list"
 19633              		.file 70 "/usr/include/c++/6/functional"
 19634              		.file 71 "/usr/include/c++/6/bits/shared_ptr_base.h"
 19635              		.file 72 "/usr/include/c++/6/bits/algorithmfwd.h"
 19636              		.file 73 "/usr/include/c++/6/bits/stl_algo.h"
 19637              		.file 74 "/usr/include/c++/6/system_error"
 19638              		.file 75 "/usr/include/c++/6/bits/ios_base.h"
 19639              		.file 76 "/usr/include/c++/6/cwctype"
 19640              		.file 77 "/usr/include/c++/6/cstring"
 19641              		.file 78 "/usr/include/c++/6/ctime"
 19642              		.file 79 "/usr/include/c++/6/iosfwd"
 19643              		.file 80 "/usr/include/c++/6/bits/uniform_int_dist.h"
 19644              		.file 81 "/usr/include/c++/6/bits/stl_deque.h"
 19645              		.file 82 "/usr/include/c++/6/bits/deque.tcc"
 19646              		.file 83 "/usr/include/c++/6/bits/ptr_traits.h"
 19647              		.file 84 "/usr/include/c++/6/bits/shared_ptr.h"
 19648              		.file 85 "/usr/include/c++/6/memory"
 19649              		.file 86 "/usr/include/c++/6/cstdarg"
 19650              		.file 87 "/usr/include/c++/6/bits/stl_iterator_base_funcs.h"
 19651              		.file 88 "/usr/include/c++/6/bits/predefined_ops.h"
 19652              		.file 89 "/usr/include/c++/6/ext/numeric_traits.h"
 19653              		.file 90 "/usr/include/c++/6/ext/concurrence.h"
 19654              		.file 91 "/usr/include/c++/6/ext/type_traits.h"
 19655              		.file 92 "/usr/lib/gcc/x86_64-linux-gnu/6/include/stddef.h"
 19656              		.file 93 "/usr/include/x86_64-linux-gnu/bits/types.h"
 19657              		.file 94 "/usr/include/unistd.h"
 19658              		.file 95 "/usr/include/getopt.h"
 19659              		.file 96 "/usr/include/stdlib.h"
 19660              		.file 97 "/usr/include/time.h"
 19661              		.file 98 "/usr/include/x86_64-linux-gnu/sys/types.h"
 19662              		.file 99 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h"
 19663              		.file 100 "/usr/include/stdio.h"
 19664              		.file 101 "/usr/include/libio.h"
 19665              		.file 102 "/usr/lib/gcc/x86_64-linux-gnu/6/include/stdarg.h"
 19666              		.file 103 "<built-in>"
 19667              		.file 104 "/usr/include/wchar.h"
 19668              		.file 105 "/usr/include/pthread.h"
 19669              		.file 106 "/usr/include/x86_64-linux-gnu/c++/6/bits/atomic_word.h"
 19670              		.file 107 "/usr/include/stdint.h"
 19671              		.file 108 "/usr/include/locale.h"
 19672              		.file 109 "/usr/include/_G_config.h"
 19673              		.file 110 "/usr/include/x86_64-linux-gnu/bits/sys_errlist.h"
 19674              		.file 111 "/usr/include/errno.h"
 19675              		.file 112 "/usr/include/boost/config/suffix.hpp"
 19676              		.file 113 "/usr/include/boost/exception/detail/type_info.hpp"
 19677              		.file 114 "/usr/include/boost/exception/detail/error_info_impl.hpp"
 19678              		.file 115 "/usr/include/boost/exception/detail/clone_current_exception.hpp"
 19679              		.file 116 "/usr/include/boost/core/demangle.hpp"
 19680              		.file 117 "/usr/include/boost/core/typeinfo.hpp"
 19681              		.file 118 "/usr/include/boost/current_function.hpp"
 19682              		.file 119 "/usr/include/boost/detail/sp_typeinfo.hpp"
 19683              		.file 120 "/usr/include/boost/smart_ptr/detail/sp_convertible.hpp"
 19684              		.file 121 "/usr/include/boost/smart_ptr/detail/spinlock_sync.hpp"
GAS LISTING /tmp/ccvUPO8Q.s 			page 742


 19685              		.file 122 "/usr/include/boost/smart_ptr/detail/sp_nullptr_t.hpp"
 19686              		.file 123 "/usr/include/boost/smart_ptr/detail/spinlock_pool.hpp"
 19687              		.file 124 "/usr/include/boost/integer_traits.hpp"
 19688              		.file 125 "/usr/include/boost/integer/static_log2.hpp"
 19689              		.file 126 "/usr/include/boost/type_traits/detail/has_binary_operator.hpp"
 19690              		.file 127 "/usr/include/boost/detail/indirect_traits.hpp"
 19691              		.file 128 "/usr/include/boost/thread/detail/nullary_function.hpp"
 19692              		.file 129 "/usr/include/boost/smart_ptr/detail/operator_bool.hpp"
 19693              		.file 130 "/usr/include/boost/type_traits/integral_constant.hpp"
 19694              		.file 131 "/usr/include/boost/mpl/aux_/adl_barrier.hpp"
 19695              		.file 132 "/usr/include/boost/mpl/aux_/value_wknd.hpp"
 19696              		.file 133 "/usr/include/boost/mpl/void_fwd.hpp"
 19697              		.file 134 "/usr/include/boost/mpl/bool_fwd.hpp"
 19698              		.file 135 "/usr/include/boost/mpl/integral_c_tag.hpp"
 19699              		.file 136 "/usr/include/boost/mpl/aux_/na_fwd.hpp"
 19700              		.file 137 "/usr/include/boost/mpl/aux_/preprocessed/gcc/placeholders.hpp"
 19701              		.file 138 "/usr/include/boost/type_index/type_index_facade.hpp"
 19702              		.file 139 "/usr/include/boost/type_index/stl_type_index.hpp"
 19703              		.file 140 "/usr/include/boost/type_index.hpp"
 19704              		.file 141 "/usr/include/boost/cstdint.hpp"
 19705              		.file 142 "/usr/include/boost/core/noncopyable.hpp"
 19706              		.file 143 "/usr/include/boost/type_traits/detail/is_function_ptr_helper.hpp"
 19707              		.file 144 "/usr/include/boost/type_traits/detail/yes_no_type.hpp"
 19708              		.file 145 "/usr/include/boost/type_traits/integral_promotion.hpp"
 19709              		.file 146 "/usr/include/boost/move/core.hpp"
 19710              		.file 147 "/usr/include/boost/move/detail/meta_utils.hpp"
 19711              		.file 148 "/usr/include/boost/thread/lock_options.hpp"
 19712              		.file 149 "/usr/include/boost/date_time/c_time.hpp"
 19713              		.file 150 "/usr/include/boost/date_time/time_defs.hpp"
 19714              		.file 151 "/usr/include/boost/date_time/special_defs.hpp"
 19715              		.file 152 "/usr/include/boost/date_time/time_resolution_traits.hpp"
 19716              		.file 153 "/usr/include/boost/date_time/int_adapter.hpp"
 19717              		.file 154 "/usr/include/boost/date_time/date_defs.hpp"
 19718              		.file 155 "/usr/include/boost/date_time/year_month_day.hpp"
 19719              		.file 156 "/usr/include/boost/date_time/gregorian_calendar.hpp"
 19720              		.file 157 "/usr/include/boost/date_time/gregorian_calendar.ipp"
 19721              		.file 158 "/usr/include/boost/date_time/date_duration.hpp"
 19722              		.file 159 "/usr/include/boost/date_time/date.hpp"
 19723              		.file 160 "/usr/include/boost/date_time/time_duration.hpp"
 19724              		.file 161 "/usr/include/boost/date_time/time_system_counted.hpp"
 19725              		.file 162 "/usr/include/boost/date_time/time.hpp"
 19726              		.file 163 "/usr/include/boost/operators.hpp"
 19727              		.file 164 "/usr/include/boost/date_time/constrained_value.hpp"
 19728              		.file 165 "/usr/include/boost/date_time/gregorian/greg_weekday.hpp"
 19729              		.file 166 "/usr/include/boost/date_time/gregorian/greg_day.hpp"
 19730              		.file 167 "/usr/include/boost/date_time/gregorian/greg_year.hpp"
 19731              		.file 168 "/usr/include/boost/date_time/gregorian/greg_month.hpp"
 19732              		.file 169 "/usr/include/boost/date_time/gregorian/greg_calendar.hpp"
 19733              		.file 170 "/usr/include/boost/date_time/gregorian/greg_day_of_year.hpp"
 19734              		.file 171 "/usr/include/boost/date_time/gregorian/greg_duration.hpp"
 19735              		.file 172 "/usr/include/boost/date_time/gregorian/greg_date.hpp"
 19736              		.file 173 "/usr/include/boost/date_time/posix_time/posix_time_config.hpp"
 19737              		.file 174 "/usr/include/boost/date_time/posix_time/ptime.hpp"
 19738              		.file 175 "/usr/include/boost/ratio/detail/overflow_helpers.hpp"
 19739              		.file 176 "/usr/include/boost/type_traits/add_rvalue_reference.hpp"
 19740              		.file 177 "/usr/include/boost/chrono/detail/is_evenly_divisible_by.hpp"
 19741              		.file 178 "/usr/include/boost/chrono/duration.hpp"
GAS LISTING /tmp/ccvUPO8Q.s 			page 743


 19742              		.file 179 "/usr/include/boost/chrono/system_clocks.hpp"
 19743              		.file 180 "/usr/include/boost/chrono/time_point.hpp"
 19744              		.file 181 "/usr/include/boost/thread/xtime.hpp"
 19745              		.file 182 "/usr/include/boost/thread/thread_time.hpp"
 19746              		.file 183 "/usr/include/boost/ratio/ratio.hpp"
 19747              		.file 184 "/usr/include/boost/thread/pthread/pthread_mutex_scoped_lock.hpp"
 19748              		.file 185 "/usr/include/boost/thread/pthread/mutex.hpp"
 19749              		.file 186 "/usr/include/boost/thread/lock_types.hpp"
 19750              		.file 187 "/usr/include/boost/thread/pthread/condition_variable_fwd.hpp"
 19751              		.file 188 "/usr/include/boost/thread/detail/move.hpp"
 19752              		.file 189 "/usr/include/boost/bind/storage.hpp"
 19753              		.file 190 "/usr/include/boost/bind/arg.hpp"
 19754              		.file 191 "/usr/include/boost/bind/placeholders.hpp"
 19755              		.file 192 "/usr/include/boost/io_fwd.hpp"
 19756              		.file 193 "/usr/include/boost/io/detail/quoted_manip.hpp"
 19757              		.file 194 "/usr/include/boost/integer_fwd.hpp"
 19758              		.file 195 "/usr/include/boost/functional/hash/detail/float_functions.hpp"
 19759              		.file 196 "/usr/include/boost/thread/pthread/thread_data.hpp"
 19760              		.file 197 "/usr/include/boost/thread/pthread/condition_variable.hpp"
 19761              		.file 198 "/usr/include/boost/move/detail/unique_ptr_meta_utils.hpp"
 19762              		.file 199 "/usr/include/boost/move/default_delete.hpp"
 19763              		.file 200 "/usr/include/boost/range/detail/sfinae.hpp"
 19764              		.file 201 "/usr/include/boost/range/end.hpp"
 19765              		.file 202 "/usr/include/boost/range/begin.hpp"
 19766              		.file 203 "/usr/include/boost/iterator/iterator_traits.hpp"
 19767              		.file 204 "/usr/include/boost/iterator/iterator_categories.hpp"
 19768              		.file 205 "/usr/include/boost/iterator/iterator_facade.hpp"
 19769              		.file 206 "/usr/include/boost/iterator/iterator_adaptor.hpp"
 19770              		.file 207 "/usr/include/boost/foreach.hpp"
 19771              		.file 208 "/usr/include/boost/foreach_fwd.hpp"
 19772              		.file 209 "/usr/include/boost/filesystem/path_traits.hpp"
 19773              		.file 210 "/usr/include/boost/filesystem/path.hpp"
 19774              		.file 211 "/usr/include/boost/memory_order.hpp"
 19775              		.file 212 "/usr/include/boost/atomic/detail/storage_type.hpp"
 19776              		.file 213 "/usr/include/boost/atomic/detail/ops_gcc_atomic.hpp"
 19777              		.file 214 "/usr/include/boost/atomic/fences.hpp"
 19778              		.file 215 "/usr/include/boost/atomic/detail/atomic_flag.hpp"
 19779              		.file 216 "/usr/include/boost/atomic/detail/atomic_template.hpp"
 19780              		.file 217 "/usr/include/boost/atomic/atomic_flag.hpp"
 19781              		.file 218 "/usr/include/boost/atomic/atomic.hpp"
 19782              		.file 219 "/usr/include/boost/thread/lockable_traits.hpp"
 19783              		.file 220 "/usr/include/boost/thread/csbl/memory/unique_ptr.hpp"
 19784              		.file 221 "/usr/include/boost/thread/csbl/memory/allocator_arg.hpp"
 19785              		.file 222 "/usr/include/boost/tuple/detail/tuple_basic.hpp"
 19786              		.file 223 "/usr/include/boost/exception/detail/is_output_streamable.hpp"
 19787              		.file 224 "/usr/include/boost/exception/to_string.hpp"
 19788              		.file 225 "/usr/include/boost/thread/cv_status.hpp"
 19789              		.file 226 "/usr/include/boost/thread/futures/future_error_code.hpp"
 19790              		.file 227 "/usr/include/boost/thread/futures/future_status.hpp"
 19791              		.file 228 "/usr/include/boost/thread/futures/launch.hpp"
 19792              		.file 229 "/usr/include/boost/thread/executors/work.hpp"
 19793              		.file 230 "/usr/include/boost/thread/executors/executor.hpp"
 19794              		.file 231 "/usr/include/boost/thread/executors/generic_executor_ref.hpp"
 19795              		.file 232 "/usr/include/boost/type_traits/type_with_alignment.hpp"
 19796              		.file 233 "/usr/include/boost/optional/detail/optional_aligned_storage.hpp"
 19797              		.file 234 "/usr/include/boost/align/detail/align_cxx11.hpp"
 19798              		.file 235 "/usr/include/boost/core/enable_if.hpp"
GAS LISTING /tmp/ccvUPO8Q.s 			page 744


 19799              		.file 236 "/usr/include/x86_64-linux-gnu/bits/mathdef.h"
 19800              		.file 237 "/usr/include/math.h"
 19801              		.file 238 "/usr/include/wctype.h"
 19802              		.file 239 "/home/mpiscopo/gnuradio/include/gnuradio/gr_complex.h"
 19803              		.file 240 "/home/mpiscopo/gnuradio/include/gnuradio/types.h"
 19804              		.file 241 "/home/mpiscopo/gnuradio/include/gnuradio/runtime_types.h"
 19805              		.file 242 "/home/mpiscopo/gnuradio/include/gnuradio/io_signature.h"
 19806              		.file 243 "/home/mpiscopo/gnuradio/include/gnuradio/blocks/control_loop.h"
 19807              		.file 244 "/usr/include/string.h"
 19808              		.file 245 "/usr/include/boost/mpl/bool.hpp"
 19809              		.file 246 "/usr/include/boost/mpl/void.hpp"
 19810              		.file 247 "/usr/include/boost/mpl/aux_/integral_wrapper.hpp"
 19811              		.file 248 "/usr/include/boost/mpl/aux_/preprocessed/gcc/arg.hpp"
 19812              		.file 249 "/usr/include/x86_64-linux-gnu/sys/time.h"
 19813              		.file 250 "/usr/include/boost/bind.hpp"
 19814              		.file 251 "/usr/include/c++/6/stdlib.h"
 19815              		.file 252 "/usr/include/log4cpp/Priority.hh"
 19816              		.file 253 "/usr/include/log4cpp/threading/PThreads.hh"
 19817              		.file 254 "clSComplex.h"
 19818              		.file 255 "/usr/include/c++/6/cxxabi.h"
 105227              		.align 8
 105230              	DW.ref.__gxx_personality_v0:
 105231 0000 00000000 		.quad	__gxx_personality_v0
 105231      00000000 
 105232              		.hidden	__dso_handle
 105233              		.ident	"GCC: (Debian 6.3.0-12) 6.3.0 20170406"
 105234              		.section	.note.GNU-stack,"",@progbits
GAS LISTING /tmp/ccvUPO8Q.s 			page 745


DEFINED SYMBOLS
                            *ABS*:0000000000000000 costas2_impl.cc
     /tmp/ccvUPO8Q.s:7      .rodata:0000000000000000 _ZStL19piecewise_construct
     /tmp/ccvUPO8Q.s:13     .text._ZNSt9exceptionC2Ev:0000000000000000 _ZNSt9exceptionC2Ev
     /tmp/ccvUPO8Q.s:13     .text._ZNSt9exceptionC2Ev:0000000000000000 _ZNSt9exceptionC1Ev
     /tmp/ccvUPO8Q.s:43     .text._ZNSt13bad_exceptionC2Ev:0000000000000000 _ZNSt13bad_exceptionC2Ev
     /tmp/ccvUPO8Q.s:43     .text._ZNSt13bad_exceptionC2Ev:0000000000000000 _ZNSt13bad_exceptionC1Ev
     /tmp/ccvUPO8Q.s:76     .text._ZNSt9bad_allocC2Ev:0000000000000000 _ZNSt9bad_allocC2Ev
     /tmp/ccvUPO8Q.s:76     .text._ZNSt9bad_allocC2Ev:0000000000000000 _ZNSt9bad_allocC1Ev
     /tmp/ccvUPO8Q.s:109    .text._ZnwmPv:0000000000000000 _ZnwmPv
     /tmp/ccvUPO8Q.s:131    .text._ZdlPvS_:0000000000000000 _ZdlPvS_
     /tmp/ccvUPO8Q.s:154    .rodata:0000000000000004 _ZN9__gnu_cxxL21__default_lock_policyE
     /tmp/ccvUPO8Q.s:160    .text._ZNSt9exceptionC2ERKS_:0000000000000000 _ZNSt9exceptionC2ERKS_
     /tmp/ccvUPO8Q.s:160    .text._ZNSt9exceptionC2ERKS_:0000000000000000 _ZNSt9exceptionC1ERKS_
     /tmp/ccvUPO8Q.s:189    .rodata:0000000000000008 _ZStL13allocator_arg
     /tmp/ccvUPO8Q.s:193    .rodata:0000000000000009 _ZStL6ignore
     /tmp/ccvUPO8Q.s:199    .text._ZN5boost10error_infoINS_15throw_function_EPKcEC2ES3_:0000000000000000 _ZN5boost10error_infoINS_15throw_function_EPKcEC2ES3_
     /tmp/ccvUPO8Q.s:199    .text._ZN5boost10error_infoINS_15throw_function_EPKcEC2ES3_:0000000000000000 _ZN5boost10error_infoINS_15throw_function_EPKcEC1ES3_
     /tmp/ccvUPO8Q.s:231    .text._ZN5boost10error_infoINS_11throw_file_EPKcEC2ES3_:0000000000000000 _ZN5boost10error_infoINS_11throw_file_EPKcEC2ES3_
     /tmp/ccvUPO8Q.s:231    .text._ZN5boost10error_infoINS_11throw_file_EPKcEC2ES3_:0000000000000000 _ZN5boost10error_infoINS_11throw_file_EPKcEC1ES3_
     /tmp/ccvUPO8Q.s:262    .text._ZN5boost10error_infoINS_11throw_line_EiEC2Ei:0000000000000000 _ZN5boost10error_infoINS_11throw_line_EiEC2Ei
     /tmp/ccvUPO8Q.s:262    .text._ZN5boost10error_infoINS_11throw_line_EiEC2Ei:0000000000000000 _ZN5boost10error_infoINS_11throw_line_EiEC1Ei
     /tmp/ccvUPO8Q.s:293    .text._ZN5boost9exceptionC2Ev:0000000000000000 _ZN5boost9exceptionC2Ev
     /tmp/ccvUPO8Q.s:18106  .data.rel.ro._ZTVN5boost9exceptionE:0000000000000000 _ZTVN5boost9exceptionE
     /tmp/ccvUPO8Q.s:5378   .text._ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEEC2Ev:0000000000000000 _ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEEC1Ev
     /tmp/ccvUPO8Q.s:293    .text._ZN5boost9exceptionC2Ev:0000000000000000 _ZN5boost9exceptionC1Ev
     /tmp/ccvUPO8Q.s:334    .text._ZN5boost9exceptionD2Ev:0000000000000000 _ZN5boost9exceptionD2Ev
     /tmp/ccvUPO8Q.s:5407   .text._ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEED2Ev:0000000000000000 _ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEED1Ev
     /tmp/ccvUPO8Q.s:334    .text._ZN5boost9exceptionD2Ev:0000000000000000 _ZN5boost9exceptionD1Ev
     /tmp/ccvUPO8Q.s:369    .text._ZN5boost9exceptionD0Ev:0000000000000000 _ZN5boost9exceptionD0Ev
     /tmp/ccvUPO8Q.s:398    .text._ZN5boost16exception_detail10clone_baseD2Ev:0000000000000000 _ZN5boost16exception_detail10clone_baseD2Ev
     /tmp/ccvUPO8Q.s:18094  .data.rel.ro._ZTVN5boost16exception_detail10clone_baseE:0000000000000000 _ZTVN5boost16exception_detail10clone_baseE
     /tmp/ccvUPO8Q.s:398    .text._ZN5boost16exception_detail10clone_baseD2Ev:0000000000000000 _ZN5boost16exception_detail10clone_baseD1Ev
     /tmp/ccvUPO8Q.s:428    .text._ZN5boost16exception_detail10clone_baseD0Ev:0000000000000000 _ZN5boost16exception_detail10clone_baseD0Ev
     /tmp/ccvUPO8Q.s:456    .text._ZN5boost16exception_detail20copy_boost_exceptionEPNS_9exceptionEPKS1_:0000000000000000 _ZN5boost16exception_detail20copy_boost_exceptionEPNS_9exceptionEPKS1_
     /tmp/ccvUPO8Q.s:105230  .data.DW.ref.__gxx_personality_v0:0000000000000000 DW.ref.__gxx_personality_v0
     /tmp/ccvUPO8Q.s:5449   .text._ZNK5boost16exception_detail12refcount_ptrINS0_20error_info_containerEE3getEv:0000000000000000 _ZNK5boost16exception_detail12refcount_ptrINS0_20error_info_containerEE3getEv
     /tmp/ccvUPO8Q.s:5473   .text._ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEEaSERKS3_:0000000000000000 _ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEEaSERKS3_
     /tmp/ccvUPO8Q.s:602    .text._ZN5boost36throw_exception_assert_compatibilityERKSt9exception:0000000000000000 _ZN5boost36throw_exception_assert_compatibilityERKSt9exception
     /tmp/ccvUPO8Q.s:624    .text._ZN5boost6detail23atomic_exchange_and_addEPii:0000000000000000 _ZN5boost6detail23atomic_exchange_and_addEPii
     /tmp/ccvUPO8Q.s:659    .text._ZN5boost6detail16atomic_incrementEPi:0000000000000000 _ZN5boost6detail16atomic_incrementEPi
     /tmp/ccvUPO8Q.s:690    .text._ZN5boost6detail15sp_counted_baseC2Ev:0000000000000000 _ZN5boost6detail15sp_counted_baseC2Ev
     /tmp/ccvUPO8Q.s:18080  .data.rel.ro._ZTVN5boost6detail15sp_counted_baseE:0000000000000000 _ZTVN5boost6detail15sp_counted_baseE
     /tmp/ccvUPO8Q.s:690    .text._ZN5boost6detail15sp_counted_baseC2Ev:0000000000000000 _ZN5boost6detail15sp_counted_baseC1Ev
     /tmp/ccvUPO8Q.s:724    .text._ZN5boost6detail15sp_counted_baseD2Ev:0000000000000000 _ZN5boost6detail15sp_counted_baseD2Ev
     /tmp/ccvUPO8Q.s:724    .text._ZN5boost6detail15sp_counted_baseD2Ev:0000000000000000 _ZN5boost6detail15sp_counted_baseD1Ev
     /tmp/ccvUPO8Q.s:754    .text._ZN5boost6detail15sp_counted_baseD0Ev:0000000000000000 _ZN5boost6detail15sp_counted_baseD0Ev
     /tmp/ccvUPO8Q.s:783    .text._ZN5boost6detail15sp_counted_base7destroyEv:0000000000000000 _ZN5boost6detail15sp_counted_base7destroyEv
     /tmp/ccvUPO8Q.s:819    .text._ZN5boost6detail15sp_counted_base12add_ref_copyEv:0000000000000000 _ZN5boost6detail15sp_counted_base12add_ref_copyEv
     /tmp/ccvUPO8Q.s:847    .text._ZN5boost6detail15sp_counted_base7releaseEv:0000000000000000 _ZN5boost6detail15sp_counted_base7releaseEv
     /tmp/ccvUPO8Q.s:894    .text._ZN5boost6detail15sp_counted_base12weak_releaseEv:0000000000000000 _ZN5boost6detail15sp_counted_base12weak_releaseEv
     /tmp/ccvUPO8Q.s:937    .text._ZN5boost6detail12shared_countC2Ev:0000000000000000 _ZN5boost6detail12shared_countC2Ev
     /tmp/ccvUPO8Q.s:937    .text._ZN5boost6detail12shared_countC2Ev:0000000000000000 _ZN5boost6detail12shared_countC1Ev
     /tmp/ccvUPO8Q.s:967    .text._ZN5boost6detail12shared_countD2Ev:0000000000000000 _ZN5boost6detail12shared_countD2Ev
     /tmp/ccvUPO8Q.s:967    .text._ZN5boost6detail12shared_countD2Ev:0000000000000000 _ZN5boost6detail12shared_countD1Ev
     /tmp/ccvUPO8Q.s:1016   .text._ZN5boost6detail12shared_countC2ERKS1_:0000000000000000 _ZN5boost6detail12shared_countC2ERKS1_
     /tmp/ccvUPO8Q.s:1016   .text._ZN5boost6detail12shared_countC2ERKS1_:0000000000000000 _ZN5boost6detail12shared_countC1ERKS1_
GAS LISTING /tmp/ccvUPO8Q.s 			page 746


     /tmp/ccvUPO8Q.s:1060   .text._ZN5boost6detail12shared_count4swapERS1_:0000000000000000 _ZN5boost6detail12shared_count4swapERS1_
     /tmp/ccvUPO8Q.s:1095   .text._ZN5boost6detail26sp_enable_shared_from_thisEz:0000000000000000 _ZN5boost6detail26sp_enable_shared_from_thisEz
     /tmp/ccvUPO8Q.s:1116   .text._ZSt3absf:0000000000000000 _ZSt3absf
     /tmp/ccvUPO8Q.s:1141   .text._ZNSt7complexIfEC2Eff:0000000000000000 _ZNSt7complexIfEC2Eff
     /tmp/ccvUPO8Q.s:1141   .text._ZNSt7complexIfEC2Eff:0000000000000000 _ZNSt7complexIfEC1Eff
     /tmp/ccvUPO8Q.s:1175   .text._ZNKSt7complexIfE4realB5cxx11Ev:0000000000000000 _ZNKSt7complexIfE4realB5cxx11Ev
     /tmp/ccvUPO8Q.s:1198   .text._ZNKSt7complexIfE4imagB5cxx11Ev:0000000000000000 _ZNKSt7complexIfE4imagB5cxx11Ev
     /tmp/ccvUPO8Q.s:1221   .text._ZNK3pmt10comparatorclERKN5boost13intrusive_ptrINS_8pmt_baseEEES6_:0000000000000000 _ZNK3pmt10comparatorclERKN5boost13intrusive_ptrINS_8pmt_baseEEES6_
     /tmp/ccvUPO8Q.s:5620   .text._ZNK5boost13intrusive_ptrIN3pmt8pmt_baseEE3getEv:0000000000000000 _ZNK5boost13intrusive_ptrIN3pmt8pmt_baseEE3getEv
     /tmp/ccvUPO8Q.s:1270   .bss:0000000000000000 _ZN5boost6systemL14posix_categoryE
     /tmp/ccvUPO8Q.s:1272   .bss:0000000000000008 _ZN5boost6systemL10errno_ecatE
     /tmp/ccvUPO8Q.s:1274   .bss:0000000000000010 _ZN5boost6systemL11native_ecatE
     /tmp/ccvUPO8Q.s:1279   .text._ZNK5boost6system10error_code5valueEv:0000000000000000 _ZNK5boost6system10error_code5valueEv
     /tmp/ccvUPO8Q.s:1303   .text._ZNK5boost6system10error_code7messageB5cxx11Ev:0000000000000000 _ZNK5boost6system10error_code7messageB5cxx11Ev
     /tmp/ccvUPO8Q.s:1347   .text._ZN5boost6system12system_errorD2Ev:0000000000000000 _ZN5boost6system12system_errorD2Ev
     /tmp/ccvUPO8Q.s:18069  .data.rel.ro.local._ZTVN5boost6system12system_errorE:0000000000000000 _ZTVN5boost6system12system_errorE
     /tmp/ccvUPO8Q.s:1347   .text._ZN5boost6system12system_errorD2Ev:0000000000000000 _ZN5boost6system12system_errorD1Ev
     /tmp/ccvUPO8Q.s:1385   .text._ZN5boost6system12system_errorD0Ev:0000000000000000 _ZN5boost6system12system_errorD0Ev
     /tmp/ccvUPO8Q.s:1417   .text._ZNK5boost6system12system_error4whatEv:0000000000000000 _ZNK5boost6system12system_error4whatEv
     /tmp/ccvUPO8Q.s:1580   .rodata:000000000000000d _ZN5boostL10defer_lockE
     /tmp/ccvUPO8Q.s:1584   .rodata:000000000000000e _ZN5boostL11try_to_lockE
     /tmp/ccvUPO8Q.s:1588   .rodata:000000000000000f _ZN5boostL10adopt_lockE
     /tmp/ccvUPO8Q.s:1274   .bss:0000000000000018 _ZStL8__ioinit
     /tmp/ccvUPO8Q.s:1594   .rodata:0000000000000010 _ZN5boost12placeholdersL2_1E
     /tmp/ccvUPO8Q.s:1598   .rodata:0000000000000011 _ZN5boost12placeholdersL2_2E
     /tmp/ccvUPO8Q.s:1602   .rodata:0000000000000012 _ZN5boost12placeholdersL2_3E
     /tmp/ccvUPO8Q.s:1606   .rodata:0000000000000013 _ZN5boost12placeholdersL2_4E
     /tmp/ccvUPO8Q.s:1610   .rodata:0000000000000014 _ZN5boost12placeholdersL2_5E
     /tmp/ccvUPO8Q.s:1614   .rodata:0000000000000015 _ZN5boost12placeholdersL2_6E
     /tmp/ccvUPO8Q.s:1618   .rodata:0000000000000016 _ZN5boost12placeholdersL2_7E
     /tmp/ccvUPO8Q.s:1622   .rodata:0000000000000017 _ZN5boost12placeholdersL2_8E
     /tmp/ccvUPO8Q.s:1626   .rodata:0000000000000018 _ZN5boost12placeholdersL2_9E
     /tmp/ccvUPO8Q.s:1631   .rodata:000000000000001c _ZN5boost6detail16static_log2_implL6n_zeroE
     /tmp/ccvUPO8Q.s:1636   .rodata:0000000000000020 _ZN5boost6detail16static_log2_implL9initial_nE
     /tmp/ccvUPO8Q.s:1642   .text._ZN5boost13function_baseC2Ev:0000000000000000 _ZN5boost13function_baseC2Ev
     /tmp/ccvUPO8Q.s:1642   .text._ZN5boost13function_baseC2Ev:0000000000000000 _ZN5boost13function_baseC1Ev
     /tmp/ccvUPO8Q.s:1671   .text._ZNK5boost13function_base5emptyEv:0000000000000000 _ZNK5boost13function_base5emptyEv
     /tmp/ccvUPO8Q.s:1696   .text._ZNK5boost13function_base28has_trivial_copy_and_destroyEv:0000000000000000 _ZNK5boost13function_base28has_trivial_copy_and_destroyEv
     /tmp/ccvUPO8Q.s:1726   .text._ZN5boost17bad_function_callC2Ev:0000000000000000 _ZN5boost17bad_function_callC2Ev
     /tmp/ccvUPO8Q.s:18058  .data.rel.ro._ZTVN5boost17bad_function_callE:0000000000000000 _ZTVN5boost17bad_function_callE
     /tmp/ccvUPO8Q.s:1726   .text._ZN5boost17bad_function_callC2Ev:0000000000000000 _ZN5boost17bad_function_callC1Ev
     /tmp/ccvUPO8Q.s:1760   .text._ZN5boost10shared_ptrIN2gr12io_signatureEED2Ev:0000000000000000 _ZN5boost10shared_ptrIN2gr12io_signatureEED2Ev
     /tmp/ccvUPO8Q.s:1760   .text._ZN5boost10shared_ptrIN2gr12io_signatureEED2Ev:0000000000000000 _ZN5boost10shared_ptrIN2gr12io_signatureEED1Ev
     /tmp/ccvUPO8Q.s:1791   .text._ZN2gr11basic_block15has_msg_handlerEN5boost13intrusive_ptrIN3pmt8pmt_baseEEE:0000000000000000 _ZN2gr11basic_block15has_msg_handlerEN5boost13intrusive_ptrIN3pmt8pmt_baseEEE
     /tmp/ccvUPO8Q.s:5673   .text._ZNSt3mapIN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS0_8functionIFvS4_EEENS2_10comparatorESaISt4pairIKS4_S7_EEE3endEv:0000000000000000 _ZNSt3mapIN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS0_8functionIFvS4_EEENS2_10comparatorESaISt4pairIKS4_S7_EEE3endEv
     /tmp/ccvUPO8Q.s:5644   .text._ZNSt3mapIN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS0_8functionIFvS4_EEENS2_10comparatorESaISt4pairIKS4_S7_EEE4findERSA_:0000000000000000 _ZNSt3mapIN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS0_8functionIFvS4_EEENS2_10comparatorESaISt4pairIKS4_S7_EEE4findERSA_
     /tmp/ccvUPO8Q.s:5698   .text._ZNKSt17_Rb_tree_iteratorISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS1_8functionIFvS5_EEEEEneERKSB_:0000000000000000 _ZNKSt17_Rb_tree_iteratorISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS1_8functionIFvS5_EEEEEneERKSB_
     /tmp/ccvUPO8Q.s:1833   .text._ZN2gr11basic_block12dispatch_msgEN5boost13intrusive_ptrIN3pmt8pmt_baseEEES5_:0000000000000000 _ZN2gr11basic_block12dispatch_msgEN5boost13intrusive_ptrIN3pmt8pmt_baseEEES5_
     /tmp/ccvUPO8Q.s:5727   .text._ZN5boost13intrusive_ptrIN3pmt8pmt_baseEEC2ERKS3_:0000000000000000 _ZN5boost13intrusive_ptrIN3pmt8pmt_baseEEC1ERKS3_
     /tmp/ccvUPO8Q.s:5535   .text._ZN5boost13intrusive_ptrIN3pmt8pmt_baseEED2Ev:0000000000000000 _ZN5boost13intrusive_ptrIN3pmt8pmt_baseEED1Ev
     /tmp/ccvUPO8Q.s:5868   .text._ZNSt3mapIN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS0_8functionIFvS4_EEENS2_10comparatorESaISt4pairIKS4_S7_EEEixERSA_:0000000000000000 _ZNSt3mapIN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS0_8functionIFvS4_EEENS2_10comparatorESaISt4pairIKS4_S7_EEEixERSA_
     /tmp/ccvUPO8Q.s:6080   .text._ZNK5boost9function1IvNS_13intrusive_ptrIN3pmt8pmt_baseEEEEclES4_:0000000000000000 _ZNK5boost9function1IvNS_13intrusive_ptrIN3pmt8pmt_baseEEEEclES4_
     /tmp/ccvUPO8Q.s:1967   .text._ZN2gr11basic_block20message_port_is_hierEN5boost13intrusive_ptrIN3pmt8pmt_baseEEE:0000000000000000 _ZN2gr11basic_block20message_port_is_hierEN5boost13intrusive_ptrIN3pmt8pmt_baseEEE
     /tmp/ccvUPO8Q.s:1990   .text._ZN2gr11basic_block23message_port_is_hier_inEN5boost13intrusive_ptrIN3pmt8pmt_baseEEE:0000000000000000 _ZN2gr11basic_block23message_port_is_hier_inEN5boost13intrusive_ptrIN3pmt8pmt_baseEEE
     /tmp/ccvUPO8Q.s:2013   .text._ZN2gr11basic_block24message_port_is_hier_outEN5boost13intrusive_ptrIN3pmt8pmt_baseEEE:0000000000000000 _ZN2gr11basic_block24message_port_is_hier_outEN5boost13intrusive_ptrIN3pmt8pmt_baseEEE
     /tmp/ccvUPO8Q.s:2036   .text._ZN2gr11basic_block12has_msg_portEN5boost13intrusive_ptrIN3pmt8pmt_baseEEE:0000000000000000 _ZN2gr11basic_block12has_msg_portEN5boost13intrusive_ptrIN3pmt8pmt_baseEEE
     /tmp/ccvUPO8Q.s:6231   .text._ZNSt3mapIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt5dequeIS4_SaIS4_EENS2_10comparatorESaISt4pairIKS4_S7_EEE3endEv:0000000000000000 _ZNSt3mapIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt5dequeIS4_SaIS4_EENS2_10comparatorESaISt4pairIKS4_S7_EEE3endEv
GAS LISTING /tmp/ccvUPO8Q.s 			page 747


     /tmp/ccvUPO8Q.s:6203   .text._ZNSt3mapIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt5dequeIS4_SaIS4_EENS2_10comparatorESaISt4pairIKS4_S7_EEE4findERSA_:0000000000000000 _ZNSt3mapIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt5dequeIS4_SaIS4_EENS2_10comparatorESaISt4pairIKS4_S7_EEE4findERSA_
     /tmp/ccvUPO8Q.s:6284   .text._ZNKSt17_Rb_tree_iteratorISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt5dequeIS5_SaIS5_EEEEneERKSB_:0000000000000000 _ZNKSt17_Rb_tree_iteratorISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt5dequeIS5_SaIS5_EEEEneERKSB_
     /tmp/ccvUPO8Q.s:2099   .text._ZN2gr11basic_block9setup_rpcEv:0000000000000000 _ZN2gr11basic_block9setup_rpcEv
     /tmp/ccvUPO8Q.s:2121   .text._ZN2gr11basic_block14check_topologyEii:0000000000000000 _ZN2gr11basic_block14check_topologyEii
     /tmp/ccvUPO8Q.s:2146   .text._ZN2gr5tag_taSERKS0_:0000000000000000 _ZN2gr5tag_taSERKS0_
     /tmp/ccvUPO8Q.s:6367   .text._ZN5boost13intrusive_ptrIN3pmt8pmt_baseEEaSERKS3_:0000000000000000 _ZN5boost13intrusive_ptrIN3pmt8pmt_baseEEaSERKS3_
     /tmp/ccvUPO8Q.s:2206   .text._ZN2gr5tag_tD2Ev:0000000000000000 _ZN2gr5tag_tD2Ev
     /tmp/ccvUPO8Q.s:6312   .text._ZNSt6vectorIlSaIlEED2Ev:0000000000000000 _ZNSt6vectorIlSaIlEED1Ev
     /tmp/ccvUPO8Q.s:2206   .text._ZN2gr5tag_tD2Ev:0000000000000000 _ZN2gr5tag_tD1Ev
     /tmp/ccvUPO8Q.s:2250   .rodata:0000000000000044 _ZN5boost16exception_detail30clone_current_exception_resultL7successE
     /tmp/ccvUPO8Q.s:2255   .rodata:0000000000000048 _ZN5boost16exception_detail30clone_current_exception_resultL9bad_allocE
     /tmp/ccvUPO8Q.s:2260   .rodata:000000000000004c _ZN5boost16exception_detail30clone_current_exception_resultL13bad_exceptionE
     /tmp/ccvUPO8Q.s:2265   .rodata:0000000000000050 _ZN5boost16exception_detail30clone_current_exception_resultL13not_supportedE
     /tmp/ccvUPO8Q.s:2271   .text._ZN5boost10shared_ptrIKNS_16exception_detail10clone_baseEED2Ev:0000000000000000 _ZN5boost10shared_ptrIKNS_16exception_detail10clone_baseEED2Ev
     /tmp/ccvUPO8Q.s:2271   .text._ZN5boost10shared_ptrIKNS_16exception_detail10clone_baseEED2Ev:0000000000000000 _ZN5boost10shared_ptrIKNS_16exception_detail10clone_baseEED1Ev
     /tmp/ccvUPO8Q.s:2302   .text._ZN5boost13exception_ptrC2ERKNS_10shared_ptrIKNS_16exception_detail10clone_baseEEE:0000000000000000 _ZN5boost13exception_ptrC2ERKNS_10shared_ptrIKNS_16exception_detail10clone_baseEEE
     /tmp/ccvUPO8Q.s:6479   .text._ZN5boost10shared_ptrIKNS_16exception_detail10clone_baseEEC2ERKS4_:0000000000000000 _ZN5boost10shared_ptrIKNS_16exception_detail10clone_baseEEC1ERKS4_
     /tmp/ccvUPO8Q.s:2302   .text._ZN5boost13exception_ptrC2ERKNS_10shared_ptrIKNS_16exception_detail10clone_baseEEE:0000000000000000 _ZN5boost13exception_ptrC1ERKNS_10shared_ptrIKNS_16exception_detail10clone_baseEEE
     /tmp/ccvUPO8Q.s:2337   .text._ZN5boost16exception_detail10bad_alloc_D2Ev:0000000000000000 _ZN5boost16exception_detail10bad_alloc_D2Ev
     /tmp/ccvUPO8Q.s:18043  .data.rel.ro._ZTVN5boost16exception_detail10bad_alloc_E:0000000000000000 _ZTVN5boost16exception_detail10bad_alloc_E
     /tmp/ccvUPO8Q.s:2374   .text._ZN5boost16exception_detail10bad_alloc_D2Ev:0000000000000048 _ZThn40_N5boost16exception_detail10bad_alloc_D1Ev
     /tmp/ccvUPO8Q.s:2337   .text._ZN5boost16exception_detail10bad_alloc_D2Ev:0000000000000000 _ZN5boost16exception_detail10bad_alloc_D1Ev
     /tmp/ccvUPO8Q.s:2389   .text._ZN5boost16exception_detail10bad_alloc_D0Ev:0000000000000000 _ZN5boost16exception_detail10bad_alloc_D0Ev
     /tmp/ccvUPO8Q.s:2417   .text._ZN5boost16exception_detail10bad_alloc_D0Ev:000000000000002b _ZThn40_N5boost16exception_detail10bad_alloc_D0Ev
     /tmp/ccvUPO8Q.s:2430   .text._ZN5boost16exception_detail14bad_exception_D2Ev:0000000000000000 _ZN5boost16exception_detail14bad_exception_D2Ev
     /tmp/ccvUPO8Q.s:18028  .data.rel.ro._ZTVN5boost16exception_detail14bad_exception_E:0000000000000000 _ZTVN5boost16exception_detail14bad_exception_E
     /tmp/ccvUPO8Q.s:2467   .text._ZN5boost16exception_detail14bad_exception_D2Ev:0000000000000048 _ZThn40_N5boost16exception_detail14bad_exception_D1Ev
     /tmp/ccvUPO8Q.s:2430   .text._ZN5boost16exception_detail14bad_exception_D2Ev:0000000000000000 _ZN5boost16exception_detail14bad_exception_D1Ev
     /tmp/ccvUPO8Q.s:2482   .text._ZN5boost16exception_detail14bad_exception_D0Ev:0000000000000000 _ZN5boost16exception_detail14bad_exception_D0Ev
     /tmp/ccvUPO8Q.s:2510   .text._ZN5boost16exception_detail14bad_exception_D0Ev:000000000000002b _ZThn40_N5boost16exception_detail14bad_exception_D0Ev
     /tmp/ccvUPO8Q.s:2523   .text._ZN5boost9exceptionC2ERKS0_:0000000000000000 _ZN5boost9exceptionC2ERKS0_
     /tmp/ccvUPO8Q.s:6442   .text._ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEEC2ERKS3_:0000000000000000 _ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEEC1ERKS3_
     /tmp/ccvUPO8Q.s:2523   .text._ZN5boost9exceptionC2ERKS0_:0000000000000000 _ZN5boost9exceptionC1ERKS0_
     /tmp/ccvUPO8Q.s:2573   .text._ZN5boost13exception_ptrD2Ev:0000000000000000 _ZN5boost13exception_ptrD2Ev
     /tmp/ccvUPO8Q.s:2573   .text._ZN5boost13exception_ptrD2Ev:0000000000000000 _ZN5boost13exception_ptrD1Ev
     /tmp/ccvUPO8Q.s:2603   .text._ZN5boost13exception_ptrC2ERKS0_:0000000000000000 _ZN5boost13exception_ptrC2ERKS0_
     /tmp/ccvUPO8Q.s:2603   .text._ZN5boost13exception_ptrC2ERKS0_:0000000000000000 _ZN5boost13exception_ptrC1ERKS0_
     /tmp/ccvUPO8Q.s:2636   .text._ZN5boost6none_tC2ENS0_8init_tagE:0000000000000000 _ZN5boost6none_tC2ENS0_8init_tagE
     /tmp/ccvUPO8Q.s:2636   .text._ZN5boost6none_tC2ENS0_8init_tagE:0000000000000000 _ZN5boost6none_tC1ENS0_8init_tagE
     /tmp/ccvUPO8Q.s:1591   .bss:0000000000000019 _ZN5boostL4noneE
     /tmp/ccvUPO8Q.s:2663   .text._ZN2gr5block18processor_affinityEv:0000000000000000 _ZN2gr5block18processor_affinityEv
     /tmp/ccvUPO8Q.s:7415   .text._ZNSt6vectorIiSaIiEEC2ERKS1_:0000000000000000 _ZNSt6vectorIiSaIiEEC1ERKS1_
     /tmp/ccvUPO8Q.s:2694   .data:0000000000000000 _ZN2gr6blocksL14tanh_lut_tableE
     /tmp/ccvUPO8Q.s:2955   .text._ZNK2gr5lfast12costas2_impl16phase_detector_2ESt7complexIfE:0000000000000000 _ZNK2gr5lfast12costas2_impl16phase_detector_2ESt7complexIfE
     /tmp/ccvUPO8Q.s:2991   .text:0000000000000000 _ZL7gr_expjf
     /tmp/ccvUPO8Q.s:3036   .text:000000000000006e _ZN2grL15branchless_clipEff
     /tmp/ccvUPO8Q.s:3079   .text._ZN5boost10shared_ptrIN2gr5lfast12costas2_implEED2Ev:0000000000000000 _ZN5boost10shared_ptrIN2gr5lfast12costas2_implEED2Ev
     /tmp/ccvUPO8Q.s:3079   .text._ZN5boost10shared_ptrIN2gr5lfast12costas2_implEED2Ev:0000000000000000 _ZN5boost10shared_ptrIN2gr5lfast12costas2_implEED1Ev
     /tmp/ccvUPO8Q.s:3110   .text:00000000000000d4 _ZN2gr5lfast7costas24makeEfi
     /tmp/ccvUPO8Q.s:3453   .text:0000000000000254 _ZN2gr5lfast12costas2_implC1Efi
     /tmp/ccvUPO8Q.s:7585   .text._ZN8gnuradio16get_initial_sptrIN2gr5lfast12costas2_implEEEN5boost10shared_ptrIT_EEPS6_:0000000000000000 _ZN8gnuradio16get_initial_sptrIN2gr5lfast12costas2_implEEEN5boost10shared_ptrIT_EEPS6_
     /tmp/ccvUPO8Q.s:7639   .text._ZN5boost10shared_ptrIN2gr5lfast7costas2EEC2INS2_12costas2_implEEEONS0_IT_EENS_6detail24sp_enable_if_convertibleIS7_S3_E4typeE:0000000000000000 _ZN5boost10shared_ptrIN2gr5lfast7costas2EEC1INS2_12costas2_implEEEONS0_IT_EENS_6detail24sp_enable_if_convertibleIS7_S3_E4typeE
     /tmp/ccvUPO8Q.s:3210   .text._ZN2gr10sync_blockD2Ev:0000000000000000 _ZN2gr10sync_blockD2Ev
     /tmp/ccvUPO8Q.s:3210   .text._ZN2gr10sync_blockD2Ev:0000000000000000 _ZN2gr10sync_blockD1Ev
     /tmp/ccvUPO8Q.s:3244   .text._ZN2gr10sync_blockD0Ev:0000000000000000 _ZN2gr10sync_blockD0Ev
     /tmp/ccvUPO8Q.s:3273   .text._ZN2gr5lfast7costas2C2Ev:0000000000000000 _ZN2gr5lfast7costas2C2Ev
     /tmp/ccvUPO8Q.s:3323   .text._ZN2gr5lfast7costas2D2Ev:0000000000000000 _ZN2gr5lfast7costas2D2Ev
GAS LISTING /tmp/ccvUPO8Q.s 			page 748


     /tmp/ccvUPO8Q.s:3372   .text:0000000000000172 _ZN2gr5lfast12costas2_implC2Efi
     /tmp/ccvUPO8Q.s:17952  .data.rel.ro.local._ZTTN2gr5lfast12costas2_implE:0000000000000000 _ZTTN2gr5lfast12costas2_implE
     /tmp/ccvUPO8Q.s:17887  .data.rel.ro._ZTVN2gr5lfast12costas2_implE:0000000000000000 _ZTVN2gr5lfast12costas2_implE
     /tmp/ccvUPO8Q.s:3665   .text:0000000000000452 _ZN2gr5lfast12costas2_implD2Ev
     /tmp/ccvUPO8Q.s:3721   .text:00000000000004d0 _ZN2gr5lfast12costas2_implD1Ev
     /tmp/ccvUPO8Q.s:3770   .text:000000000000054c _ZTv0_n24_N2gr5lfast12costas2_implD1Ev
     /tmp/ccvUPO8Q.s:3783   .text:0000000000000558 _ZN2gr5lfast12costas2_implD0Ev
     /tmp/ccvUPO8Q.s:3811   .text:0000000000000583 _ZTv0_n24_N2gr5lfast12costas2_implD0Ev
     /tmp/ccvUPO8Q.s:3824   .text:000000000000058c _ZNK2gr5lfast12costas2_impl5errorEv
     /tmp/ccvUPO8Q.s:3847   .text:00000000000005a0 _ZN2gr5lfast12costas2_impl16handle_set_noiseEN5boost13intrusive_ptrIN3pmt8pmt_baseEEE
     /tmp/ccvUPO8Q.s:3983   .text:000000000000068e _ZN2gr5lfast12costas2_impl13work_originalEiRSt6vectorIPKvSaIS4_EERS2_IPvSaIS8_EE
     /tmp/ccvUPO8Q.s:7689   .text._ZNSt6vectorIPKvSaIS1_EEixEm:0000000000000000 _ZNSt6vectorIPKvSaIS1_EEixEm
     /tmp/ccvUPO8Q.s:7716   .text._ZNSt6vectorIPvSaIS0_EEixEm:0000000000000000 _ZNSt6vectorIPvSaIS0_EEixEm
     /tmp/ccvUPO8Q.s:7743   .text._ZNKSt6vectorIPvSaIS0_EE4sizeEv:0000000000000000 _ZNKSt6vectorIPvSaIS0_EE4sizeEv
     /tmp/ccvUPO8Q.s:7772   .text._ZNSt6vectorIN2gr5tag_tESaIS1_EEC2Ev:0000000000000000 _ZNSt6vectorIN2gr5tag_tESaIS1_EEC1Ev
     /tmp/ccvUPO8Q.s:7867   .text._ZNKSt6vectorIN2gr5tag_tESaIS1_EE4sizeEv:0000000000000000 _ZNKSt6vectorIN2gr5tag_tESaIS1_EE4sizeEv
     /tmp/ccvUPO8Q.s:7899   .text._ZNSt6vectorIN2gr5tag_tESaIS1_EEixEm:0000000000000000 _ZNSt6vectorIN2gr5tag_tESaIS1_EEixEm
     /tmp/ccvUPO8Q.s:7929   .text._ZNSt6vectorIN2gr5tag_tESaIS1_EE5beginEv:0000000000000000 _ZNSt6vectorIN2gr5tag_tESaIS1_EE5beginEv
     /tmp/ccvUPO8Q.s:7957   .text._ZN9__gnu_cxx17__normal_iteratorIPKN2gr5tag_tESt6vectorIS2_SaIS2_EEEC2IPS2_EERKNS0_IT_NS_11__enable_ifIXsrSt10__are_sameISB_SA_E7__valueES7_E6__typeEEE:0000000000000000 _ZN9__gnu_cxx17__normal_iteratorIPKN2gr5tag_tESt6vectorIS2_SaIS2_EEEC1IPS2_EERKNS0_IT_NS_11__enable_ifIXsrSt10__are_sameISB_SA_E7__valueES7_E6__typeEEE
     /tmp/ccvUPO8Q.s:7992   .text._ZNSt6vectorIN2gr5tag_tESaIS1_EE5eraseEN9__gnu_cxx17__normal_iteratorIPKS1_S3_EE:0000000000000000 _ZNSt6vectorIN2gr5tag_tESaIS1_EE5eraseEN9__gnu_cxx17__normal_iteratorIPKS1_S3_EE
     /tmp/ccvUPO8Q.s:8041   .text._ZStmlIfESt7complexIT_ERKS2_S4_:0000000000000000 _ZStmlIfESt7complexIT_ERKS2_S4_
     /tmp/ccvUPO8Q.s:7813   .text._ZNSt6vectorIN2gr5tag_tESaIS1_EED2Ev:0000000000000000 _ZNSt6vectorIN2gr5tag_tESaIS1_EED1Ev
     /tmp/ccvUPO8Q.s:4546   .text:0000000000000dbc _ZN2gr5lfast12costas2_impl9work_testEiRSt6vectorIPKvSaIS4_EERS2_IPvSaIS8_EE
     /tmp/ccvUPO8Q.s:4938   .text:00000000000012fe _ZN2gr5lfast12costas2_impl4workEiRSt6vectorIPKvSaIS4_EERS2_IPvSaIS8_EE
     /tmp/ccvUPO8Q.s:5330   .text:000000000000183c _ZTv0_n176_N2gr5lfast12costas2_impl4workEiRSt6vectorIPKvSaIS4_EERS2_IPvSaIS8_EE
     /tmp/ccvUPO8Q.s:5343   .text:000000000000184c _ZN2gr5lfast12costas2_impl9setup_rpcEv
     /tmp/ccvUPO8Q.s:5364   .text:0000000000001857 _ZTv0_n88_N2gr5lfast12costas2_impl9setup_rpcEv
     /tmp/ccvUPO8Q.s:5378   .text._ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEEC2Ev:0000000000000000 _ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEEC2Ev
     /tmp/ccvUPO8Q.s:5407   .text._ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEED2Ev:0000000000000000 _ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEED2Ev
     /tmp/ccvUPO8Q.s:8084   .text._ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEE7releaseEv:0000000000000000 _ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEE7releaseEv
     /tmp/ccvUPO8Q.s:6406   .text._ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEE5adoptEPS2_:0000000000000000 _ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEE5adoptEPS2_
     /tmp/ccvUPO8Q.s:5505   .text._ZN5boost16exception_detail10clone_baseC2ERKS1_:0000000000000000 _ZN5boost16exception_detail10clone_baseC2ERKS1_
     /tmp/ccvUPO8Q.s:5505   .text._ZN5boost16exception_detail10clone_baseC2ERKS1_:0000000000000000 _ZN5boost16exception_detail10clone_baseC1ERKS1_
     /tmp/ccvUPO8Q.s:5535   .text._ZN5boost13intrusive_ptrIN3pmt8pmt_baseEED2Ev:0000000000000000 _ZN5boost13intrusive_ptrIN3pmt8pmt_baseEED2Ev
     /tmp/ccvUPO8Q.s:5585   .text._ZN5boost13intrusive_ptrIN3pmt8pmt_baseEEC2EOS3_:0000000000000000 _ZN5boost13intrusive_ptrIN3pmt8pmt_baseEEC2EOS3_
     /tmp/ccvUPO8Q.s:5585   .text._ZN5boost13intrusive_ptrIN3pmt8pmt_baseEEC2EOS3_:0000000000000000 _ZN5boost13intrusive_ptrIN3pmt8pmt_baseEEC1EOS3_
     /tmp/ccvUPO8Q.s:8185   .text._ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt10_Select1stISA_ENS2_10comparatorESaISA_EE4findERS6_:0000000000000000 _ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt10_Select1stISA_ENS2_10comparatorESaISA_EE4findERS6_
     /tmp/ccvUPO8Q.s:8309   .text._ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt10_Select1stISA_ENS2_10comparatorESaISA_EE3endEv:0000000000000000 _ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt10_Select1stISA_ENS2_10comparatorESaISA_EE3endEv
     /tmp/ccvUPO8Q.s:5727   .text._ZN5boost13intrusive_ptrIN3pmt8pmt_baseEEC2ERKS3_:0000000000000000 _ZN5boost13intrusive_ptrIN3pmt8pmt_baseEEC2ERKS3_
     /tmp/ccvUPO8Q.s:5771   .text._ZNSt10_Head_baseILm0ERKN5boost13intrusive_ptrIN3pmt8pmt_baseEEELb0EEC2ES6_:0000000000000000 _ZNSt10_Head_baseILm0ERKN5boost13intrusive_ptrIN3pmt8pmt_baseEEELb0EEC2ES6_
     /tmp/ccvUPO8Q.s:5771   .text._ZNSt10_Head_baseILm0ERKN5boost13intrusive_ptrIN3pmt8pmt_baseEEELb0EEC2ES6_:0000000000000000 _ZNSt10_Head_baseILm0ERKN5boost13intrusive_ptrIN3pmt8pmt_baseEEELb0EEC1ES6_
     /tmp/ccvUPO8Q.s:5802   .text._ZNSt11_Tuple_implILm0EJRKN5boost13intrusive_ptrIN3pmt8pmt_baseEEEEEC2ES6_:0000000000000000 _ZNSt11_Tuple_implILm0EJRKN5boost13intrusive_ptrIN3pmt8pmt_baseEEEEEC2ES6_
     /tmp/ccvUPO8Q.s:5802   .text._ZNSt11_Tuple_implILm0EJRKN5boost13intrusive_ptrIN3pmt8pmt_baseEEEEEC2ES6_:0000000000000000 _ZNSt11_Tuple_implILm0EJRKN5boost13intrusive_ptrIN3pmt8pmt_baseEEEEEC1ES6_
     /tmp/ccvUPO8Q.s:5835   .text._ZNSt5tupleIJRKN5boost13intrusive_ptrIN3pmt8pmt_baseEEEEEC2IvLb1EEES6_:0000000000000000 _ZNSt5tupleIJRKN5boost13intrusive_ptrIN3pmt8pmt_baseEEEEEC2IvLb1EEES6_
     /tmp/ccvUPO8Q.s:5835   .text._ZNSt5tupleIJRKN5boost13intrusive_ptrIN3pmt8pmt_baseEEEEEC2IvLb1EEES6_:0000000000000000 _ZNSt5tupleIJRKN5boost13intrusive_ptrIN3pmt8pmt_baseEEEEEC1IvLb1EEES6_
     /tmp/ccvUPO8Q.s:8338   .text._ZNSt3mapIN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS0_8functionIFvS4_EEENS2_10comparatorESaISt4pairIKS4_S7_EEE11lower_boundERSA_:0000000000000000 _ZNSt3mapIN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS0_8functionIFvS4_EEENS2_10comparatorESaISt4pairIKS4_S7_EEE11lower_boundERSA_
     /tmp/ccvUPO8Q.s:8366   .text._ZNKSt17_Rb_tree_iteratorISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS1_8functionIFvS5_EEEEEeqERKSB_:0000000000000000 _ZNKSt17_Rb_tree_iteratorISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS1_8functionIFvS5_EEEEEeqERKSB_
     /tmp/ccvUPO8Q.s:8424   .text._ZNKSt17_Rb_tree_iteratorISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS1_8functionIFvS5_EEEEEdeEv:0000000000000000 _ZNKSt17_Rb_tree_iteratorISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS1_8functionIFvS5_EEEEEdeEv
     /tmp/ccvUPO8Q.s:8394   .text._ZNKSt3mapIN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS0_8functionIFvS4_EEENS2_10comparatorESaISt4pairIKS4_S7_EEE8key_compEv:0000000000000000 _ZNKSt3mapIN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS0_8functionIFvS4_EEENS2_10comparatorESaISt4pairIKS4_S7_EEE8key_compEv
     /tmp/ccvUPO8Q.s:8450   .text._ZNSt23_Rb_tree_const_iteratorISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS1_8functionIFvS5_EEEEEC2ERKSt17_Rb_tree_iteratorISA_E:0000000000000000 _ZNSt23_Rb_tree_const_iteratorISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS1_8functionIFvS5_EEEEEC1ERKSt17_Rb_tree_iteratorISA_E
     /tmp/ccvUPO8Q.s:8545   .text._ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt10_Select1stISA_ENS2_10comparatorESaISA_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS6_EESK_IJEEEEESt17_Rb_tree_iteratorISA_ESt23_Rb_tree_const_iteratorISA_EDpOT_:0000000000000000 _ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt10_Select1stISA_ENS2_10comparatorESaISA_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS6_EESK_IJEEEEESt17_Rb_tree_iteratorISA_ESt23_Rb_tree_const_iteratorISA_EDpOT_
     /tmp/ccvUPO8Q.s:6018   .text._ZN5boost17bad_function_callD2Ev:0000000000000000 _ZN5boost17bad_function_callD2Ev
     /tmp/ccvUPO8Q.s:6018   .text._ZN5boost17bad_function_callD2Ev:0000000000000000 _ZN5boost17bad_function_callD1Ev
     /tmp/ccvUPO8Q.s:6051   .text._ZN5boost17bad_function_callD0Ev:0000000000000000 _ZN5boost17bad_function_callD0Ev
     /tmp/ccvUPO8Q.s:8918   .text._ZN5boost15throw_exceptionINS_17bad_function_callEEEvRKT_:0000000000000000 _ZN5boost15throw_exceptionINS_17bad_function_callEEEvRKT_
     /tmp/ccvUPO8Q.s:9011   .text._ZNK5boost9function1IvNS_13intrusive_ptrIN3pmt8pmt_baseEEEE10get_vtableEv:0000000000000000 _ZNK5boost9function1IvNS_13intrusive_ptrIN3pmt8pmt_baseEEEE10get_vtableEv
     /tmp/ccvUPO8Q.s:9035   .text._ZN5boost7forwardINS_13intrusive_ptrIN3pmt8pmt_baseEEEEEOT_RNS_11move_detail16remove_referenceIS5_E4typeE:0000000000000000 _ZN5boost7forwardINS_13intrusive_ptrIN3pmt8pmt_baseEEEEEOT_RNS_11move_detail16remove_referenceIS5_E4typeE
GAS LISTING /tmp/ccvUPO8Q.s 			page 749


     /tmp/ccvUPO8Q.s:9058   .text._ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_St5dequeIS4_SaIS4_EEESt10_Select1stISA_ENS2_10comparatorESaISA_EE4findERS6_:0000000000000000 _ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_St5dequeIS4_SaIS4_EEESt10_Select1stISA_ENS2_10comparatorESaISA_EE4findERS6_
     /tmp/ccvUPO8Q.s:9182   .text._ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_St5dequeIS4_SaIS4_EEESt10_Select1stISA_ENS2_10comparatorESaISA_EE3endEv:0000000000000000 _ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_St5dequeIS4_SaIS4_EEESt10_Select1stISA_ENS2_10comparatorESaISA_EE3endEv
     /tmp/ccvUPO8Q.s:6256   .text._ZNKSt17_Rb_tree_iteratorISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt5dequeIS5_SaIS5_EEEEeqERKSB_:0000000000000000 _ZNKSt17_Rb_tree_iteratorISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt5dequeIS5_SaIS5_EEEEeqERKSB_
     /tmp/ccvUPO8Q.s:6312   .text._ZNSt6vectorIlSaIlEED2Ev:0000000000000000 _ZNSt6vectorIlSaIlEED2Ev
     /tmp/ccvUPO8Q.s:9300   .text._ZNSt12_Vector_baseIlSaIlEE19_M_get_Tp_allocatorEv:0000000000000000 _ZNSt12_Vector_baseIlSaIlEE19_M_get_Tp_allocatorEv
     /tmp/ccvUPO8Q.s:9321   .text._ZSt8_DestroyIPllEvT_S1_RSaIT0_E:0000000000000000 _ZSt8_DestroyIPllEvT_S1_RSaIT0_E
     /tmp/ccvUPO8Q.s:9241   .text._ZNSt12_Vector_baseIlSaIlEED2Ev:0000000000000000 _ZNSt12_Vector_baseIlSaIlEED2Ev
     /tmp/ccvUPO8Q.s:9353   .text._ZN5boost13intrusive_ptrIN3pmt8pmt_baseEE4swapERS3_:0000000000000000 _ZN5boost13intrusive_ptrIN3pmt8pmt_baseEE4swapERS3_
     /tmp/ccvUPO8Q.s:9389   .text._ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEE7add_refEv:0000000000000000 _ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEE7add_refEv
     /tmp/ccvUPO8Q.s:6442   .text._ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEEC2ERKS3_:0000000000000000 _ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEEC2ERKS3_
     /tmp/ccvUPO8Q.s:6479   .text._ZN5boost10shared_ptrIKNS_16exception_detail10clone_baseEEC2ERKS4_:0000000000000000 _ZN5boost10shared_ptrIKNS_16exception_detail10clone_baseEEC2ERKS4_
     /tmp/ccvUPO8Q.s:6519   .text._ZN5boost16exception_detail10bad_alloc_C2Ev:0000000000000000 _ZN5boost16exception_detail10bad_alloc_C2Ev
     /tmp/ccvUPO8Q.s:6519   .text._ZN5boost16exception_detail10bad_alloc_C2Ev:0000000000000000 _ZN5boost16exception_detail10bad_alloc_C1Ev
     /tmp/ccvUPO8Q.s:6559   .text._ZNSt9bad_allocC2ERKS_:0000000000000000 _ZNSt9bad_allocC2ERKS_
     /tmp/ccvUPO8Q.s:6559   .text._ZNSt9bad_allocC2ERKS_:0000000000000000 _ZNSt9bad_allocC1ERKS_
     /tmp/ccvUPO8Q.s:6595   .text._ZN5boost16exception_detail10bad_alloc_C2ERKS1_:0000000000000000 _ZN5boost16exception_detail10bad_alloc_C2ERKS1_
     /tmp/ccvUPO8Q.s:6595   .text._ZN5boost16exception_detail10bad_alloc_C2ERKS1_:0000000000000000 _ZN5boost16exception_detail10bad_alloc_C1ERKS1_
     /tmp/ccvUPO8Q.s:6641   .text._ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EEC1ERKS3_:0000000000000000 _ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EEC1ERKS3_
     /tmp/ccvUPO8Q.s:17852  .data.rel.ro._ZTVN5boost16exception_detail10clone_implINS0_10bad_alloc_EEE:0000000000000000 _ZTVN5boost16exception_detail10clone_implINS0_10bad_alloc_EEE
     /tmp/ccvUPO8Q.s:6736   .bss._ZZN5boost16exception_detail27get_static_exception_objectINS0_10bad_alloc_EEENS_13exception_ptrEvE2ep:0000000000000000 _ZZN5boost16exception_detail27get_static_exception_objectINS0_10bad_alloc_EEENS_13exception_ptrEvE2ep
     /tmp/ccvUPO8Q.s:6743   .bss._ZGVZN5boost16exception_detail27get_static_exception_objectINS0_10bad_alloc_EEENS_13exception_ptrEvE2ep:0000000000000000 _ZGVZN5boost16exception_detail27get_static_exception_objectINS0_10bad_alloc_EEENS_13exception_ptrEvE2ep
     /tmp/ccvUPO8Q.s:6752   .text._ZN5boost16exception_detail27get_static_exception_objectINS0_10bad_alloc_EEENS_13exception_ptrEv:0000000000000000 _ZN5boost16exception_detail27get_static_exception_objectINS0_10bad_alloc_EEENS_13exception_ptrEv
     /tmp/ccvUPO8Q.s:9458   .text._ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EEC1ERKS2_:0000000000000000 _ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EEC1ERKS2_
     /tmp/ccvUPO8Q.s:19574  .rodata:00000000000000a0 _ZZN5boost16exception_detail27get_static_exception_objectINS0_10bad_alloc_EEENS_13exception_ptrEvE19__PRETTY_FUNCTION__
     /tmp/ccvUPO8Q.s:9707   .text._ZN5boostlsINS_16exception_detail10clone_implINS1_10bad_alloc_EEENS_15throw_function_EPKcEENS_9enable_ifINS1_23derives_boost_exceptionIT_EERKSA_E4typeESD_ONS_10error_infoIT0_T1_EE:0000000000000000 _ZN5boostlsINS_16exception_detail10clone_implINS1_10bad_alloc_EEENS_15throw_function_EPKcEENS_9enable_ifINS1_23derives_boost_exceptionIT_EERKSA_E4typeESD_ONS_10error_infoIT0_T1_EE
     /tmp/ccvUPO8Q.s:9760   .text._ZN5boostlsINS_16exception_detail10clone_implINS1_10bad_alloc_EEENS_11throw_file_EPKcEENS_9enable_ifINS1_23derives_boost_exceptionIT_EERKSA_E4typeESD_ONS_10error_infoIT0_T1_EE:0000000000000000 _ZN5boostlsINS_16exception_detail10clone_implINS1_10bad_alloc_EEENS_11throw_file_EPKcEENS_9enable_ifINS1_23derives_boost_exceptionIT_EERKSA_E4typeESD_ONS_10error_infoIT0_T1_EE
     /tmp/ccvUPO8Q.s:9812   .text._ZN5boostlsINS_16exception_detail10clone_implINS1_10bad_alloc_EEENS_11throw_line_EiEENS_9enable_ifINS1_23derives_boost_exceptionIT_EERKS8_E4typeESB_ONS_10error_infoIT0_T1_EE:0000000000000000 _ZN5boostlsINS_16exception_detail10clone_implINS1_10bad_alloc_EEENS_11throw_line_EiEENS_9enable_ifINS1_23derives_boost_exceptionIT_EERKS8_E4typeESB_ONS_10error_infoIT0_T1_EE
     /tmp/ccvUPO8Q.s:9844   .text._ZN5boost10shared_ptrIKNS_16exception_detail10clone_baseEEC2INS1_10clone_implINS1_10bad_alloc_EEEEEPT_:0000000000000000 _ZN5boost10shared_ptrIKNS_16exception_detail10clone_baseEEC1INS1_10clone_implINS1_10bad_alloc_EEEEEPT_
     /tmp/ccvUPO8Q.s:9566   .text._ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EED1Ev:0000000000000000 _ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EED1Ev
     /tmp/ccvUPO8Q.s:6969   .text._ZN5boost16exception_detail14bad_exception_C2Ev:0000000000000000 _ZN5boost16exception_detail14bad_exception_C2Ev
     /tmp/ccvUPO8Q.s:6969   .text._ZN5boost16exception_detail14bad_exception_C2Ev:0000000000000000 _ZN5boost16exception_detail14bad_exception_C1Ev
     /tmp/ccvUPO8Q.s:7009   .text._ZNSt13bad_exceptionC2ERKS_:0000000000000000 _ZNSt13bad_exceptionC2ERKS_
     /tmp/ccvUPO8Q.s:7009   .text._ZNSt13bad_exceptionC2ERKS_:0000000000000000 _ZNSt13bad_exceptionC1ERKS_
     /tmp/ccvUPO8Q.s:7045   .text._ZN5boost16exception_detail14bad_exception_C2ERKS1_:0000000000000000 _ZN5boost16exception_detail14bad_exception_C2ERKS1_
     /tmp/ccvUPO8Q.s:7045   .text._ZN5boost16exception_detail14bad_exception_C2ERKS1_:0000000000000000 _ZN5boost16exception_detail14bad_exception_C1ERKS1_
     /tmp/ccvUPO8Q.s:7091   .text._ZN5boost16exception_detail10clone_implINS0_14bad_exception_EEC1ERKS3_:0000000000000000 _ZN5boost16exception_detail10clone_implINS0_14bad_exception_EEC1ERKS3_
     /tmp/ccvUPO8Q.s:17817  .data.rel.ro._ZTVN5boost16exception_detail10clone_implINS0_14bad_exception_EEE:0000000000000000 _ZTVN5boost16exception_detail10clone_implINS0_14bad_exception_EEE
     /tmp/ccvUPO8Q.s:7186   .bss._ZZN5boost16exception_detail27get_static_exception_objectINS0_14bad_exception_EEENS_13exception_ptrEvE2ep:0000000000000000 _ZZN5boost16exception_detail27get_static_exception_objectINS0_14bad_exception_EEENS_13exception_ptrEvE2ep
     /tmp/ccvUPO8Q.s:7193   .bss._ZGVZN5boost16exception_detail27get_static_exception_objectINS0_14bad_exception_EEENS_13exception_ptrEvE2ep:0000000000000000 _ZGVZN5boost16exception_detail27get_static_exception_objectINS0_14bad_exception_EEENS_13exception_ptrEvE2ep
     /tmp/ccvUPO8Q.s:7198   .text._ZN5boost16exception_detail27get_static_exception_objectINS0_14bad_exception_EEENS_13exception_ptrEv:0000000000000000 _ZN5boost16exception_detail27get_static_exception_objectINS0_14bad_exception_EEENS_13exception_ptrEv
     /tmp/ccvUPO8Q.s:9944   .text._ZN5boost16exception_detail10clone_implINS0_14bad_exception_EEC1ERKS2_:0000000000000000 _ZN5boost16exception_detail10clone_implINS0_14bad_exception_EEC1ERKS2_
     /tmp/ccvUPO8Q.s:19579  .rodata:0000000000000140 _ZZN5boost16exception_detail27get_static_exception_objectINS0_14bad_exception_EEENS_13exception_ptrEvE19__PRETTY_FUNCTION__
     /tmp/ccvUPO8Q.s:10172  .text._ZN5boostlsINS_16exception_detail10clone_implINS1_14bad_exception_EEENS_15throw_function_EPKcEENS_9enable_ifINS1_23derives_boost_exceptionIT_EERKSA_E4typeESD_ONS_10error_infoIT0_T1_EE:0000000000000000 _ZN5boostlsINS_16exception_detail10clone_implINS1_14bad_exception_EEENS_15throw_function_EPKcEENS_9enable_ifINS1_23derives_boost_exceptionIT_EERKSA_E4typeESD_ONS_10error_infoIT0_T1_EE
     /tmp/ccvUPO8Q.s:10203  .text._ZN5boostlsINS_16exception_detail10clone_implINS1_14bad_exception_EEENS_11throw_file_EPKcEENS_9enable_ifINS1_23derives_boost_exceptionIT_EERKSA_E4typeESD_ONS_10error_infoIT0_T1_EE:0000000000000000 _ZN5boostlsINS_16exception_detail10clone_implINS1_14bad_exception_EEENS_11throw_file_EPKcEENS_9enable_ifINS1_23derives_boost_exceptionIT_EERKSA_E4typeESD_ONS_10error_infoIT0_T1_EE
     /tmp/ccvUPO8Q.s:10234  .text._ZN5boostlsINS_16exception_detail10clone_implINS1_14bad_exception_EEENS_11throw_line_EiEENS_9enable_ifINS1_23derives_boost_exceptionIT_EERKS8_E4typeESB_ONS_10error_infoIT0_T1_EE:0000000000000000 _ZN5boostlsINS_16exception_detail10clone_implINS1_14bad_exception_EEENS_11throw_line_EiEENS_9enable_ifINS1_23derives_boost_exceptionIT_EERKS8_E4typeESB_ONS_10error_infoIT0_T1_EE
     /tmp/ccvUPO8Q.s:10266  .text._ZN5boost10shared_ptrIKNS_16exception_detail10clone_baseEEC2INS1_10clone_implINS1_14bad_exception_EEEEEPT_:0000000000000000 _ZN5boost10shared_ptrIKNS_16exception_detail10clone_baseEEC1INS1_10clone_implINS1_14bad_exception_EEEEEPT_
     /tmp/ccvUPO8Q.s:10052  .text._ZN5boost16exception_detail10clone_implINS0_14bad_exception_EED1Ev:0000000000000000 _ZN5boost16exception_detail10clone_implINS0_14bad_exception_EED1Ev
     /tmp/ccvUPO8Q.s:7415   .text._ZNSt6vectorIiSaIiEEC2ERKS1_:0000000000000000 _ZNSt6vectorIiSaIiEEC2ERKS1_
     /tmp/ccvUPO8Q.s:10424  .text._ZNKSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv:0000000000000000 _ZNKSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv
     /tmp/ccvUPO8Q.s:10394  .text._ZN9__gnu_cxx14__alloc_traitsISaIiEE17_S_select_on_copyERKS1_:0000000000000000 _ZN9__gnu_cxx14__alloc_traitsISaIiEE17_S_select_on_copyERKS1_
     /tmp/ccvUPO8Q.s:10366  .text._ZNKSt6vectorIiSaIiEE4sizeEv:0000000000000000 _ZNKSt6vectorIiSaIiEE4sizeEv
     /tmp/ccvUPO8Q.s:10507  .text._ZNSt12_Vector_baseIiSaIiEEC2EmRKS0_:0000000000000000 _ZNSt12_Vector_baseIiSaIiEEC2EmRKS0_
     /tmp/ccvUPO8Q.s:10446  .text._ZNSaIiED2Ev:0000000000000000 _ZNSaIiED1Ev
     /tmp/ccvUPO8Q.s:10708  .text._ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv:0000000000000000 _ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv
     /tmp/ccvUPO8Q.s:10677  .text._ZNKSt6vectorIiSaIiEE3endEv:0000000000000000 _ZNKSt6vectorIiSaIiEE3endEv
     /tmp/ccvUPO8Q.s:10646  .text._ZNKSt6vectorIiSaIiEE5beginEv:0000000000000000 _ZNKSt6vectorIiSaIiEE5beginEv
     /tmp/ccvUPO8Q.s:10729  .text._ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEPiiET0_T_SA_S9_RSaIT1_E:0000000000000000 _ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEPiiET0_T_SA_S9_RSaIT1_E
GAS LISTING /tmp/ccvUPO8Q.s 			page 750


     /tmp/ccvUPO8Q.s:10587  .text._ZNSt12_Vector_baseIiSaIiEED2Ev:0000000000000000 _ZNSt12_Vector_baseIiSaIiEED2Ev
     /tmp/ccvUPO8Q.s:7555   .text._ZN5boost10shared_ptrIN2gr11basic_blockEED2Ev:0000000000000000 _ZN5boost10shared_ptrIN2gr11basic_blockEED2Ev
     /tmp/ccvUPO8Q.s:7555   .text._ZN5boost10shared_ptrIN2gr11basic_blockEED2Ev:0000000000000000 _ZN5boost10shared_ptrIN2gr11basic_blockEED1Ev
     /tmp/ccvUPO8Q.s:10784  .text._ZN5boost20dynamic_pointer_castIN2gr5lfast12costas2_implENS1_11basic_blockEEENS_10shared_ptrIT_EERKNS5_IT0_EE:0000000000000000 _ZN5boost20dynamic_pointer_castIN2gr5lfast12costas2_implENS1_11basic_blockEEENS_10shared_ptrIT_EERKNS5_IT0_EE
     /tmp/ccvUPO8Q.s:7639   .text._ZN5boost10shared_ptrIN2gr5lfast7costas2EEC2INS2_12costas2_implEEEONS0_IT_EENS_6detail24sp_enable_if_convertibleIS7_S3_E4typeE:0000000000000000 _ZN5boost10shared_ptrIN2gr5lfast7costas2EEC2INS2_12costas2_implEEEONS0_IT_EENS_6detail24sp_enable_if_convertibleIS7_S3_E4typeE
     /tmp/ccvUPO8Q.s:10843  .text._ZN5boost6detail21sp_assert_convertibleIN2gr5lfast12costas2_implENS3_7costas2EEEvv:0000000000000000 _ZN5boost6detail21sp_assert_convertibleIN2gr5lfast12costas2_implENS3_7costas2EEEvv
     /tmp/ccvUPO8Q.s:7772   .text._ZNSt6vectorIN2gr5tag_tESaIS1_EEC2Ev:0000000000000000 _ZNSt6vectorIN2gr5tag_tESaIS1_EEC2Ev
     /tmp/ccvUPO8Q.s:10894  .text._ZNSt12_Vector_baseIN2gr5tag_tESaIS1_EEC2Ev:0000000000000000 _ZNSt12_Vector_baseIN2gr5tag_tESaIS1_EEC2Ev
     /tmp/ccvUPO8Q.s:7813   .text._ZNSt6vectorIN2gr5tag_tESaIS1_EED2Ev:0000000000000000 _ZNSt6vectorIN2gr5tag_tESaIS1_EED2Ev
     /tmp/ccvUPO8Q.s:10986  .text._ZNSt12_Vector_baseIN2gr5tag_tESaIS1_EE19_M_get_Tp_allocatorEv:0000000000000000 _ZNSt12_Vector_baseIN2gr5tag_tESaIS1_EE19_M_get_Tp_allocatorEv
     /tmp/ccvUPO8Q.s:11007  .text._ZSt8_DestroyIPN2gr5tag_tES1_EvT_S3_RSaIT0_E:0000000000000000 _ZSt8_DestroyIPN2gr5tag_tES1_EvT_S3_RSaIT0_E
     /tmp/ccvUPO8Q.s:10924  .text._ZNSt12_Vector_baseIN2gr5tag_tESaIS1_EED2Ev:0000000000000000 _ZNSt12_Vector_baseIN2gr5tag_tESaIS1_EED2Ev
     /tmp/ccvUPO8Q.s:11038  .text._ZN9__gnu_cxx17__normal_iteratorIPN2gr5tag_tESt6vectorIS2_SaIS2_EEEC2ERKS3_:0000000000000000 _ZN9__gnu_cxx17__normal_iteratorIPN2gr5tag_tESt6vectorIS2_SaIS2_EEEC1ERKS3_
     /tmp/ccvUPO8Q.s:7957   .text._ZN9__gnu_cxx17__normal_iteratorIPKN2gr5tag_tESt6vectorIS2_SaIS2_EEEC2IPS2_EERKNS0_IT_NS_11__enable_ifIXsrSt10__are_sameISB_SA_E7__valueES7_E6__typeEEE:0000000000000000 _ZN9__gnu_cxx17__normal_iteratorIPKN2gr5tag_tESt6vectorIS2_SaIS2_EEEC2IPS2_EERKNS0_IT_NS_11__enable_ifIXsrSt10__are_sameISB_SA_E7__valueES7_E6__typeEEE
     /tmp/ccvUPO8Q.s:11069  .text._ZNK9__gnu_cxx17__normal_iteratorIPN2gr5tag_tESt6vectorIS2_SaIS2_EEE4baseEv:0000000000000000 _ZNK9__gnu_cxx17__normal_iteratorIPN2gr5tag_tESt6vectorIS2_SaIS2_EEE4baseEv
     /tmp/ccvUPO8Q.s:11091  .text._ZNKSt6vectorIN2gr5tag_tESaIS1_EE6cbeginEv:0000000000000000 _ZNKSt6vectorIN2gr5tag_tESaIS1_EE6cbeginEv
     /tmp/ccvUPO8Q.s:11121  .text._ZN9__gnu_cxxmiIPKN2gr5tag_tESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSB_SE_:0000000000000000 _ZN9__gnu_cxxmiIPKN2gr5tag_tESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSB_SE_
     /tmp/ccvUPO8Q.s:11163  .text._ZNK9__gnu_cxx17__normal_iteratorIPN2gr5tag_tESt6vectorIS2_SaIS2_EEEplEl:0000000000000000 _ZNK9__gnu_cxx17__normal_iteratorIPN2gr5tag_tESt6vectorIS2_SaIS2_EEEplEl
     /tmp/ccvUPO8Q.s:11201  .text._ZNSt6vectorIN2gr5tag_tESaIS1_EE8_M_eraseEN9__gnu_cxx17__normal_iteratorIPS1_S3_EE:0000000000000000 _ZNSt6vectorIN2gr5tag_tESaIS1_EE8_M_eraseEN9__gnu_cxx17__normal_iteratorIPS1_S3_EE
     /tmp/ccvUPO8Q.s:11277  .text._ZNSt7complexIfEmLIfEERS0_RKS_IT_E:0000000000000000 _ZNSt7complexIfEmLIfEERS0_RKS_IT_E
     /tmp/ccvUPO8Q.s:8139   .text._ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt10_Select1stISA_ENS2_10comparatorESaISA_EE8_M_beginEv:0000000000000000 _ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt10_Select1stISA_ENS2_10comparatorESaISA_EE8_M_beginEv
     /tmp/ccvUPO8Q.s:8162   .text._ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_St5dequeIS4_SaIS4_EEESt10_Select1stISA_ENS2_10comparatorESaISA_EE8_M_beginEv:0000000000000000 _ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_St5dequeIS4_SaIS4_EEESt10_Select1stISA_ENS2_10comparatorESaISA_EE8_M_beginEv
     /tmp/ccvUPO8Q.s:11467  .text._ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt10_Select1stISA_ENS2_10comparatorESaISA_EE6_M_endEv:0000000000000000 _ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt10_Select1stISA_ENS2_10comparatorESaISA_EE6_M_endEv
     /tmp/ccvUPO8Q.s:11490  .text._ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt10_Select1stISA_ENS2_10comparatorESaISA_EE14_M_lower_boundEPSt13_Rb_tree_nodeISA_EPSt18_Rb_tree_node_baseRS6_:0000000000000000 _ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt10_Select1stISA_ENS2_10comparatorESaISA_EE14_M_lower_boundEPSt13_Rb_tree_nodeISA_EPSt18_Rb_tree_node_baseRS6_
     /tmp/ccvUPO8Q.s:11555  .text._ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt10_Select1stISA_ENS2_10comparatorESaISA_EE6_S_keyEPKSt18_Rb_tree_node_base:0000000000000000 _ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt10_Select1stISA_ENS2_10comparatorESaISA_EE6_S_keyEPKSt18_Rb_tree_node_base
     /tmp/ccvUPO8Q.s:11585  .text._ZNSt17_Rb_tree_iteratorISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS1_8functionIFvS5_EEEEEC2EPSt18_Rb_tree_node_base:0000000000000000 _ZNSt17_Rb_tree_iteratorISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS1_8functionIFvS5_EEEEEC1EPSt18_Rb_tree_node_base
     /tmp/ccvUPO8Q.s:11615  .text._ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt10_Select1stISA_ENS2_10comparatorESaISA_EE11lower_boundERS6_:0000000000000000 _ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt10_Select1stISA_ENS2_10comparatorESaISA_EE11lower_boundERS6_
     /tmp/ccvUPO8Q.s:11656  .text._ZNKSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt10_Select1stISA_ENS2_10comparatorESaISA_EE8key_compEv:0000000000000000 _ZNKSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt10_Select1stISA_ENS2_10comparatorESaISA_EE8key_compEv
     /tmp/ccvUPO8Q.s:11677  .text._ZNSt13_Rb_tree_nodeISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS1_8functionIFvS5_EEEEE9_M_valptrEv:0000000000000000 _ZNSt13_Rb_tree_nodeISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS1_8functionIFvS5_EEEEE9_M_valptrEv
     /tmp/ccvUPO8Q.s:8450   .text._ZNSt23_Rb_tree_const_iteratorISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS1_8functionIFvS5_EEEEEC2ERKSt17_Rb_tree_iteratorISA_E:0000000000000000 _ZNSt23_Rb_tree_const_iteratorISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS1_8functionIFvS5_EEEEEC2ERKSt17_Rb_tree_iteratorISA_E
     /tmp/ccvUPO8Q.s:8480   .text._ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE:0000000000000000 _ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE
     /tmp/ccvUPO8Q.s:8502   .text._ZSt7forwardISt5tupleIJRKN5boost13intrusive_ptrIN3pmt8pmt_baseEEEEEEOT_RNSt16remove_referenceIS9_E4typeE:0000000000000000 _ZSt7forwardISt5tupleIJRKN5boost13intrusive_ptrIN3pmt8pmt_baseEEEEEEOT_RNSt16remove_referenceIS9_E4typeE
     /tmp/ccvUPO8Q.s:8523   .text._ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE:0000000000000000 _ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE
     /tmp/ccvUPO8Q.s:11703  .text._ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt10_Select1stISA_ENS2_10comparatorESaISA_EE14_M_create_nodeIJRKSt21piecewise_construct_tSt5tupleIJRS6_EESK_IJEEEEEPSt13_Rb_tree_nodeISA_EDpOT_:0000000000000000 _ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt10_Select1stISA_ENS2_10comparatorESaISA_EE14_M_create_nodeIJRKSt21piecewise_construct_tSt5tupleIJRS6_EESK_IJEEEEEPSt13_Rb_tree_nodeISA_EDpOT_
     /tmp/ccvUPO8Q.s:12214  .text._ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt10_Select1stISA_ENS2_10comparatorESaISA_EE6_S_keyEPKSt13_Rb_tree_nodeISA_E:0000000000000000 _ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt10_Select1stISA_ENS2_10comparatorESaISA_EE6_S_keyEPKSt13_Rb_tree_nodeISA_E
     /tmp/ccvUPO8Q.s:11902  .text._ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt10_Select1stISA_ENS2_10comparatorESaISA_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISA_ERS6_:0000000000000000 _ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt10_Select1stISA_ENS2_10comparatorESaISA_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISA_ERS6_
     /tmp/ccvUPO8Q.s:12244  .text._ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt10_Select1stISA_ENS2_10comparatorESaISA_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSH_PSt13_Rb_tree_nodeISA_E:0000000000000000 _ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt10_Select1stISA_ENS2_10comparatorESaISA_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSH_PSt13_Rb_tree_nodeISA_E
     /tmp/ccvUPO8Q.s:11387  .text._ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt10_Select1stISA_ENS2_10comparatorESaISA_EE12_M_drop_nodeEPSt13_Rb_tree_nodeISA_E:0000000000000000 _ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt10_Select1stISA_ENS2_10comparatorESaISA_EE12_M_drop_nodeEPSt13_Rb_tree_nodeISA_E
     /tmp/ccvUPO8Q.s:8703   .text._ZN5boost17bad_function_callC2ERKS0_:0000000000000000 _ZN5boost17bad_function_callC2ERKS0_
     /tmp/ccvUPO8Q.s:8703   .text._ZN5boost17bad_function_callC2ERKS0_:0000000000000000 _ZN5boost17bad_function_callC1ERKS0_
     /tmp/ccvUPO8Q.s:8739   .text._ZN5boost16exception_detail19error_info_injectorINS_17bad_function_callEEC2ERKS3_:0000000000000000 _ZN5boost16exception_detail19error_info_injectorINS_17bad_function_callEEC2ERKS3_
     /tmp/ccvUPO8Q.s:17802  .data.rel.ro._ZTVN5boost16exception_detail19error_info_injectorINS_17bad_function_callEEE:0000000000000000 _ZTVN5boost16exception_detail19error_info_injectorINS_17bad_function_callEEE
     /tmp/ccvUPO8Q.s:8739   .text._ZN5boost16exception_detail19error_info_injectorINS_17bad_function_callEEC2ERKS3_:0000000000000000 _ZN5boost16exception_detail19error_info_injectorINS_17bad_function_callEEC1ERKS3_
     /tmp/ccvUPO8Q.s:8825   .text._ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEEC1ERKS5_:0000000000000000 _ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEEC1ERKS5_
     /tmp/ccvUPO8Q.s:17767  .data.rel.ro._ZTVN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEEE:0000000000000000 _ZTVN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEEE
     /tmp/ccvUPO8Q.s:12329  .text._ZN5boost17enable_error_infoINS_17bad_function_callEEENS_16exception_detail29enable_error_info_return_typeIT_E4typeERKS4_:0000000000000000 _ZN5boost17enable_error_infoINS_17bad_function_callEEENS_16exception_detail29enable_error_info_return_typeIT_E4typeERKS4_
     /tmp/ccvUPO8Q.s:12451  .text._ZN5boost24enable_current_exceptionINS_16exception_detail19error_info_injectorINS_17bad_function_callEEEEENS1_10clone_implIT_EERKS6_:0000000000000000 _ZN5boost24enable_current_exceptionINS_16exception_detail19error_info_injectorINS_17bad_function_callEEEEENS1_10clone_implIT_EERKS6_
     /tmp/ccvUPO8Q.s:12359  .text._ZN5boost16exception_detail19error_info_injectorINS_17bad_function_callEED2Ev:0000000000000000 _ZN5boost16exception_detail19error_info_injectorINS_17bad_function_callEED1Ev
     /tmp/ccvUPO8Q.s:12481  .text._ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEED1Ev:0000000000000000 _ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEED1Ev
     /tmp/ccvUPO8Q.s:18148  .data.rel.ro._ZTIN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEEE:0000000000000000 _ZTIN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEEE
     /tmp/ccvUPO8Q.s:12602  .text._ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_St5dequeIS4_SaIS4_EEESt10_Select1stISA_ENS2_10comparatorESaISA_EE6_M_endEv:0000000000000000 _ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_St5dequeIS4_SaIS4_EEESt10_Select1stISA_ENS2_10comparatorESaISA_EE6_M_endEv
     /tmp/ccvUPO8Q.s:12625  .text._ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_St5dequeIS4_SaIS4_EEESt10_Select1stISA_ENS2_10comparatorESaISA_EE14_M_lower_boundEPSt13_Rb_tree_nodeISA_EPSt18_Rb_tree_node_baseRS6_:0000000000000000 _ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_St5dequeIS4_SaIS4_EEESt10_Select1stISA_ENS2_10comparatorESaISA_EE14_M_lower_boundEPSt13_Rb_tree_nodeISA_EPSt18_Rb_tree_node_baseRS6_
     /tmp/ccvUPO8Q.s:12690  .text._ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_St5dequeIS4_SaIS4_EEESt10_Select1stISA_ENS2_10comparatorESaISA_EE6_S_keyEPKSt18_Rb_tree_node_base:0000000000000000 _ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_St5dequeIS4_SaIS4_EEESt10_Select1stISA_ENS2_10comparatorESaISA_EE6_S_keyEPKSt18_Rb_tree_node_base
     /tmp/ccvUPO8Q.s:12720  .text._ZNSt17_Rb_tree_iteratorISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt5dequeIS5_SaIS5_EEEEC2EPSt18_Rb_tree_node_base:0000000000000000 _ZNSt17_Rb_tree_iteratorISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt5dequeIS5_SaIS5_EEEEC1EPSt18_Rb_tree_node_base
     /tmp/ccvUPO8Q.s:9211   .text._ZNSt12_Vector_baseIlSaIlEE12_Vector_implD2Ev:0000000000000000 _ZNSt12_Vector_baseIlSaIlEE12_Vector_implD2Ev
     /tmp/ccvUPO8Q.s:12779  .text._ZNSaIlED2Ev:0000000000000000 _ZNSaIlED2Ev
     /tmp/ccvUPO8Q.s:9211   .text._ZNSt12_Vector_baseIlSaIlEE12_Vector_implD2Ev:0000000000000000 _ZNSt12_Vector_baseIlSaIlEE12_Vector_implD1Ev
GAS LISTING /tmp/ccvUPO8Q.s 			page 751


     /tmp/ccvUPO8Q.s:12809  .text._ZNSt12_Vector_baseIlSaIlEE13_M_deallocateEPlm:0000000000000000 _ZNSt12_Vector_baseIlSaIlEE13_M_deallocateEPlm
     /tmp/ccvUPO8Q.s:9241   .text._ZNSt12_Vector_baseIlSaIlEED2Ev:0000000000000000 _ZNSt12_Vector_baseIlSaIlEED1Ev
     /tmp/ccvUPO8Q.s:12844  .text._ZSt8_DestroyIPlEvT_S1_:0000000000000000 _ZSt8_DestroyIPlEvT_S1_
     /tmp/ccvUPO8Q.s:9429   .text._ZN5boost16exception_detail10clone_baseC2Ev:0000000000000000 _ZN5boost16exception_detail10clone_baseC2Ev
     /tmp/ccvUPO8Q.s:9429   .text._ZN5boost16exception_detail10clone_baseC2Ev:0000000000000000 _ZN5boost16exception_detail10clone_baseC1Ev
     /tmp/ccvUPO8Q.s:9607   .text._ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EED1Ev:000000000000005a _ZThn40_N5boost16exception_detail10clone_implINS0_10bad_alloc_EED1Ev
     /tmp/ccvUPO8Q.s:9619   .text._ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EED1Ev:0000000000000060 _ZTv0_n40_N5boost16exception_detail10clone_implINS0_10bad_alloc_EED1Ev
     /tmp/ccvUPO8Q.s:9633   .text._ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EED0Ev:0000000000000000 _ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EED0Ev
     /tmp/ccvUPO8Q.s:9661   .text._ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EED0Ev:000000000000002b _ZThn40_N5boost16exception_detail10clone_implINS0_10bad_alloc_EED0Ev
     /tmp/ccvUPO8Q.s:9673   .text._ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EED0Ev:0000000000000031 _ZTv0_n40_N5boost16exception_detail10clone_implINS0_10bad_alloc_EED0Ev
     /tmp/ccvUPO8Q.s:9686   .text._ZSt4moveIRN5boost10error_infoINS0_15throw_function_EPKcEEEONSt16remove_referenceIT_E4typeEOS8_:0000000000000000 _ZSt4moveIRN5boost10error_infoINS0_15throw_function_EPKcEEEONSt16remove_referenceIT_E4typeEOS8_
     /tmp/ccvUPO8Q.s:12873  .text._ZN5boost16exception_detail8set_infoINS0_10clone_implINS0_10bad_alloc_EEENS_15throw_function_EPKcEERKT_SA_ONS_10error_infoIT0_T1_EE:0000000000000000 _ZN5boost16exception_detail8set_infoINS0_10clone_implINS0_10bad_alloc_EEENS_15throw_function_EPKcEERKT_SA_ONS_10error_infoIT0_T1_EE
     /tmp/ccvUPO8Q.s:9739   .text._ZSt4moveIRN5boost10error_infoINS0_11throw_file_EPKcEEEONSt16remove_referenceIT_E4typeEOS8_:0000000000000000 _ZSt4moveIRN5boost10error_infoINS0_11throw_file_EPKcEEEONSt16remove_referenceIT_E4typeEOS8_
     /tmp/ccvUPO8Q.s:12904  .text._ZN5boost16exception_detail8set_infoINS0_10clone_implINS0_10bad_alloc_EEENS_11throw_file_EPKcEERKT_SA_ONS_10error_infoIT0_T1_EE:0000000000000000 _ZN5boost16exception_detail8set_infoINS0_10clone_implINS0_10bad_alloc_EEENS_11throw_file_EPKcEERKT_SA_ONS_10error_infoIT0_T1_EE
     /tmp/ccvUPO8Q.s:9791   .text._ZSt4moveIRN5boost10error_infoINS0_11throw_line_EiEEEONSt16remove_referenceIT_E4typeEOS6_:0000000000000000 _ZSt4moveIRN5boost10error_infoINS0_11throw_line_EiEEEONSt16remove_referenceIT_E4typeEOS6_
     /tmp/ccvUPO8Q.s:12935  .text._ZN5boost16exception_detail8set_infoINS0_10clone_implINS0_10bad_alloc_EEENS_11throw_line_EiEERKT_S8_ONS_10error_infoIT0_T1_EE:0000000000000000 _ZN5boost16exception_detail8set_infoINS0_10clone_implINS0_10bad_alloc_EEENS_11throw_line_EiEERKT_S8_ONS_10error_infoIT0_T1_EE
     /tmp/ccvUPO8Q.s:9844   .text._ZN5boost10shared_ptrIKNS_16exception_detail10clone_baseEEC2INS1_10clone_implINS1_10bad_alloc_EEEEEPT_:0000000000000000 _ZN5boost10shared_ptrIKNS_16exception_detail10clone_baseEEC2INS1_10clone_implINS1_10bad_alloc_EEEEEPT_
     /tmp/ccvUPO8Q.s:12966  .text._ZN5boost6detail20sp_pointer_constructIKNS_16exception_detail10clone_baseENS2_10clone_implINS2_10bad_alloc_EEEEEvPNS_10shared_ptrIT_EEPT0_RNS0_12shared_countE:0000000000000000 _ZN5boost6detail20sp_pointer_constructIKNS_16exception_detail10clone_baseENS2_10clone_implINS2_10bad_alloc_EEEEEvPNS_10shared_ptrIT_EEPT0_RNS0_12shared_countE
     /tmp/ccvUPO8Q.s:10093  .text._ZN5boost16exception_detail10clone_implINS0_14bad_exception_EED1Ev:000000000000005a _ZThn40_N5boost16exception_detail10clone_implINS0_14bad_exception_EED1Ev
     /tmp/ccvUPO8Q.s:10105  .text._ZN5boost16exception_detail10clone_implINS0_14bad_exception_EED1Ev:0000000000000060 _ZTv0_n40_N5boost16exception_detail10clone_implINS0_14bad_exception_EED1Ev
     /tmp/ccvUPO8Q.s:10119  .text._ZN5boost16exception_detail10clone_implINS0_14bad_exception_EED0Ev:0000000000000000 _ZN5boost16exception_detail10clone_implINS0_14bad_exception_EED0Ev
     /tmp/ccvUPO8Q.s:10147  .text._ZN5boost16exception_detail10clone_implINS0_14bad_exception_EED0Ev:000000000000002b _ZThn40_N5boost16exception_detail10clone_implINS0_14bad_exception_EED0Ev
     /tmp/ccvUPO8Q.s:10159  .text._ZN5boost16exception_detail10clone_implINS0_14bad_exception_EED0Ev:0000000000000031 _ZTv0_n40_N5boost16exception_detail10clone_implINS0_14bad_exception_EED0Ev
     /tmp/ccvUPO8Q.s:13012  .text._ZN5boost16exception_detail8set_infoINS0_10clone_implINS0_14bad_exception_EEENS_15throw_function_EPKcEERKT_SA_ONS_10error_infoIT0_T1_EE:0000000000000000 _ZN5boost16exception_detail8set_infoINS0_10clone_implINS0_14bad_exception_EEENS_15throw_function_EPKcEERKT_SA_ONS_10error_infoIT0_T1_EE
     /tmp/ccvUPO8Q.s:13043  .text._ZN5boost16exception_detail8set_infoINS0_10clone_implINS0_14bad_exception_EEENS_11throw_file_EPKcEERKT_SA_ONS_10error_infoIT0_T1_EE:0000000000000000 _ZN5boost16exception_detail8set_infoINS0_10clone_implINS0_14bad_exception_EEENS_11throw_file_EPKcEERKT_SA_ONS_10error_infoIT0_T1_EE
     /tmp/ccvUPO8Q.s:13074  .text._ZN5boost16exception_detail8set_infoINS0_10clone_implINS0_14bad_exception_EEENS_11throw_line_EiEERKT_S8_ONS_10error_infoIT0_T1_EE:0000000000000000 _ZN5boost16exception_detail8set_infoINS0_10clone_implINS0_14bad_exception_EEENS_11throw_line_EiEERKT_S8_ONS_10error_infoIT0_T1_EE
     /tmp/ccvUPO8Q.s:10266  .text._ZN5boost10shared_ptrIKNS_16exception_detail10clone_baseEEC2INS1_10clone_implINS1_14bad_exception_EEEEEPT_:0000000000000000 _ZN5boost10shared_ptrIKNS_16exception_detail10clone_baseEEC2INS1_10clone_implINS1_14bad_exception_EEEEEPT_
     /tmp/ccvUPO8Q.s:13105  .text._ZN5boost6detail20sp_pointer_constructIKNS_16exception_detail10clone_baseENS2_10clone_implINS2_14bad_exception_EEEEEvPNS_10shared_ptrIT_EEPT0_RNS0_12shared_countE:0000000000000000 _ZN5boost6detail20sp_pointer_constructIKNS_16exception_detail10clone_baseENS2_10clone_implINS2_14bad_exception_EEEEEvPNS_10shared_ptrIT_EEPT0_RNS0_12shared_countE
     /tmp/ccvUPO8Q.s:13151  .text._ZNSt16allocator_traitsISaIiEE37select_on_container_copy_constructionERKS0_:0000000000000000 _ZNSt16allocator_traitsISaIiEE37select_on_container_copy_constructionERKS0_
     /tmp/ccvUPO8Q.s:10446  .text._ZNSaIiED2Ev:0000000000000000 _ZNSaIiED2Ev
     /tmp/ccvUPO8Q.s:13214  .text._ZN9__gnu_cxx13new_allocatorIiED2Ev:0000000000000000 _ZN9__gnu_cxx13new_allocatorIiED2Ev
     /tmp/ccvUPO8Q.s:10477  .text._ZNSt12_Vector_baseIiSaIiEE12_Vector_implD2Ev:0000000000000000 _ZNSt12_Vector_baseIiSaIiEE12_Vector_implD2Ev
     /tmp/ccvUPO8Q.s:10477  .text._ZNSt12_Vector_baseIiSaIiEE12_Vector_implD2Ev:0000000000000000 _ZNSt12_Vector_baseIiSaIiEE12_Vector_implD1Ev
     /tmp/ccvUPO8Q.s:13239  .text._ZNSt12_Vector_baseIiSaIiEE12_Vector_implC2ERKS0_:0000000000000000 _ZNSt12_Vector_baseIiSaIiEE12_Vector_implC1ERKS0_
     /tmp/ccvUPO8Q.s:13279  .text._ZNSt12_Vector_baseIiSaIiEE17_M_create_storageEm:0000000000000000 _ZNSt12_Vector_baseIiSaIiEE17_M_create_storageEm
     /tmp/ccvUPO8Q.s:10507  .text._ZNSt12_Vector_baseIiSaIiEEC2EmRKS0_:0000000000000000 _ZNSt12_Vector_baseIiSaIiEEC1EmRKS0_
     /tmp/ccvUPO8Q.s:13325  .text._ZNSt12_Vector_baseIiSaIiEE13_M_deallocateEPim:0000000000000000 _ZNSt12_Vector_baseIiSaIiEE13_M_deallocateEPim
     /tmp/ccvUPO8Q.s:10587  .text._ZNSt12_Vector_baseIiSaIiEED2Ev:0000000000000000 _ZNSt12_Vector_baseIiSaIiEED1Ev
     /tmp/ccvUPO8Q.s:13361  .text._ZN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEC2ERKS2_:0000000000000000 _ZN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEC1ERKS2_
     /tmp/ccvUPO8Q.s:13391  .text._ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEPiET0_T_SA_S9_:0000000000000000 _ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEPiET0_T_SA_S9_
     /tmp/ccvUPO8Q.s:10761  .text._ZNK5boost10shared_ptrIN2gr11basic_blockEE3getEv:0000000000000000 _ZNK5boost10shared_ptrIN2gr11basic_blockEE3getEv
     /tmp/ccvUPO8Q.s:18232  .data.rel.ro._ZTIN2gr5lfast12costas2_implE:0000000000000000 _ZTIN2gr5lfast12costas2_implE
     /tmp/ccvUPO8Q.s:13424  .text._ZN5boost10shared_ptrIN2gr5lfast12costas2_implEEC2INS1_11basic_blockEEERKNS0_IT_EEPS3_:0000000000000000 _ZN5boost10shared_ptrIN2gr5lfast12costas2_implEEC1INS1_11basic_blockEEERKNS0_IT_EEPS3_
     /tmp/ccvUPO8Q.s:13464  .text._ZN5boost10shared_ptrIN2gr5lfast12costas2_implEEC2Ev:0000000000000000 _ZN5boost10shared_ptrIN2gr5lfast12costas2_implEEC1Ev
     /tmp/ccvUPO8Q.s:10864  .text._ZNSt12_Vector_baseIN2gr5tag_tESaIS1_EE12_Vector_implD2Ev:0000000000000000 _ZNSt12_Vector_baseIN2gr5tag_tESaIS1_EE12_Vector_implD2Ev
     /tmp/ccvUPO8Q.s:13535  .text._ZNSaIN2gr5tag_tEED2Ev:0000000000000000 _ZNSaIN2gr5tag_tEED2Ev
     /tmp/ccvUPO8Q.s:10864  .text._ZNSt12_Vector_baseIN2gr5tag_tESaIS1_EE12_Vector_implD2Ev:0000000000000000 _ZNSt12_Vector_baseIN2gr5tag_tESaIS1_EE12_Vector_implD1Ev
     /tmp/ccvUPO8Q.s:13498  .text._ZNSt12_Vector_baseIN2gr5tag_tESaIS1_EE12_Vector_implC2Ev:0000000000000000 _ZNSt12_Vector_baseIN2gr5tag_tESaIS1_EE12_Vector_implC1Ev
     /tmp/ccvUPO8Q.s:10894  .text._ZNSt12_Vector_baseIN2gr5tag_tESaIS1_EEC2Ev:0000000000000000 _ZNSt12_Vector_baseIN2gr5tag_tESaIS1_EEC1Ev
     /tmp/ccvUPO8Q.s:13565  .text._ZNSt12_Vector_baseIN2gr5tag_tESaIS1_EE13_M_deallocateEPS1_m:0000000000000000 _ZNSt12_Vector_baseIN2gr5tag_tESaIS1_EE13_M_deallocateEPS1_m
     /tmp/ccvUPO8Q.s:10924  .text._ZNSt12_Vector_baseIN2gr5tag_tESaIS1_EED2Ev:0000000000000000 _ZNSt12_Vector_baseIN2gr5tag_tESaIS1_EED1Ev
     /tmp/ccvUPO8Q.s:13600  .text._ZSt8_DestroyIPN2gr5tag_tEEvT_S3_:0000000000000000 _ZSt8_DestroyIPN2gr5tag_tEEvT_S3_
     /tmp/ccvUPO8Q.s:11038  .text._ZN9__gnu_cxx17__normal_iteratorIPN2gr5tag_tESt6vectorIS2_SaIS2_EEEC2ERKS3_:0000000000000000 _ZN9__gnu_cxx17__normal_iteratorIPN2gr5tag_tESt6vectorIS2_SaIS2_EEEC2ERKS3_
     /tmp/ccvUPO8Q.s:13630  .text._ZN9__gnu_cxx17__normal_iteratorIPKN2gr5tag_tESt6vectorIS2_SaIS2_EEEC2ERKS4_:0000000000000000 _ZN9__gnu_cxx17__normal_iteratorIPKN2gr5tag_tESt6vectorIS2_SaIS2_EEEC1ERKS4_
     /tmp/ccvUPO8Q.s:13661  .text._ZNK9__gnu_cxx17__normal_iteratorIPKN2gr5tag_tESt6vectorIS2_SaIS2_EEE4baseEv:0000000000000000 _ZNK9__gnu_cxx17__normal_iteratorIPKN2gr5tag_tESt6vectorIS2_SaIS2_EEE4baseEv
     /tmp/ccvUPO8Q.s:13683  .text._ZNSt6vectorIN2gr5tag_tESaIS1_EE3endEv:0000000000000000 _ZNSt6vectorIN2gr5tag_tESaIS1_EE3endEv
     /tmp/ccvUPO8Q.s:13711  .text._ZN9__gnu_cxxneIPN2gr5tag_tESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_:0000000000000000 _ZN9__gnu_cxxneIPN2gr5tag_tESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_
GAS LISTING /tmp/ccvUPO8Q.s 			page 752


     /tmp/ccvUPO8Q.s:13747  .text._ZSt4moveIN9__gnu_cxx17__normal_iteratorIPN2gr5tag_tESt6vectorIS3_SaIS3_EEEES8_ET0_T_SA_S9_:0000000000000000 _ZSt4moveIN9__gnu_cxx17__normal_iteratorIPN2gr5tag_tESt6vectorIS3_SaIS3_EEEES8_ET0_T_SA_S9_
     /tmp/ccvUPO8Q.s:13790  .text._ZNSt16allocator_traitsISaIN2gr5tag_tEEE7destroyIS1_EEvRS2_PT_:0000000000000000 _ZNSt16allocator_traitsISaIN2gr5tag_tEEE7destroyIS1_EEvRS2_PT_
     /tmp/ccvUPO8Q.s:11342  .text._ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt10_Select1stISA_ENS2_10comparatorESaISA_EE8_S_rightEPSt18_Rb_tree_node_base:0000000000000000 _ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt10_Select1stISA_ENS2_10comparatorESaISA_EE8_S_rightEPSt18_Rb_tree_node_base
     /tmp/ccvUPO8Q.s:11364  .text._ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt10_Select1stISA_ENS2_10comparatorESaISA_EE7_S_leftEPSt18_Rb_tree_node_base:0000000000000000 _ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt10_Select1stISA_ENS2_10comparatorESaISA_EE7_S_leftEPSt18_Rb_tree_node_base
     /tmp/ccvUPO8Q.s:13819  .text._ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt10_Select1stISA_ENS2_10comparatorESaISA_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeISA_E:0000000000000000 _ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt10_Select1stISA_ENS2_10comparatorESaISA_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeISA_E
     /tmp/ccvUPO8Q.s:13869  .text._ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt10_Select1stISA_ENS2_10comparatorESaISA_EE11_M_put_nodeEPSt13_Rb_tree_nodeISA_E:0000000000000000 _ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt10_Select1stISA_ENS2_10comparatorESaISA_EE11_M_put_nodeEPSt13_Rb_tree_nodeISA_E
     /tmp/ccvUPO8Q.s:11422  .text._ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_St5dequeIS4_SaIS4_EEESt10_Select1stISA_ENS2_10comparatorESaISA_EE8_S_rightEPSt18_Rb_tree_node_base:0000000000000000 _ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_St5dequeIS4_SaIS4_EEESt10_Select1stISA_ENS2_10comparatorESaISA_EE8_S_rightEPSt18_Rb_tree_node_base
     /tmp/ccvUPO8Q.s:11444  .text._ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_St5dequeIS4_SaIS4_EEESt10_Select1stISA_ENS2_10comparatorESaISA_EE7_S_leftEPSt18_Rb_tree_node_base:0000000000000000 _ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_St5dequeIS4_SaIS4_EEESt10_Select1stISA_ENS2_10comparatorESaISA_EE7_S_leftEPSt18_Rb_tree_node_base
     /tmp/ccvUPO8Q.s:13912  .text._ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt10_Select1stISA_ENS2_10comparatorESaISA_EE8_S_valueEPKSt18_Rb_tree_node_base:0000000000000000 _ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt10_Select1stISA_ENS2_10comparatorESaISA_EE8_S_valueEPKSt18_Rb_tree_node_base
     /tmp/ccvUPO8Q.s:13937  .text._ZNKSt10_Select1stISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS1_8functionIFvS5_EEEEEclERKSA_:0000000000000000 _ZNKSt10_Select1stISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS1_8functionIFvS5_EEEEEclERKSA_
     /tmp/ccvUPO8Q.s:11585  .text._ZNSt17_Rb_tree_iteratorISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS1_8functionIFvS5_EEEEEC2EPSt18_Rb_tree_node_base:0000000000000000 _ZNSt17_Rb_tree_iteratorISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS1_8functionIFvS5_EEEEEC2EPSt18_Rb_tree_node_base
     /tmp/ccvUPO8Q.s:13961  .text._ZN9__gnu_cxx16__aligned_membufISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS2_8functionIFvS6_EEEEE6_M_ptrEv:0000000000000000 _ZN9__gnu_cxx16__aligned_membufISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS2_8functionIFvS6_EEEEE6_M_ptrEv
     /tmp/ccvUPO8Q.s:13987  .text._ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt10_Select1stISA_ENS2_10comparatorESaISA_EE11_M_get_nodeEv:0000000000000000 _ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt10_Select1stISA_ENS2_10comparatorESaISA_EE11_M_get_nodeEv
     /tmp/ccvUPO8Q.s:14097  .text._ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt10_Select1stISA_ENS2_10comparatorESaISA_EE17_M_construct_nodeIJRKSt21piecewise_construct_tSt5tupleIJRS6_EESK_IJEEEEEvPSt13_Rb_tree_nodeISA_EDpOT_:0000000000000000 _ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt10_Select1stISA_ENS2_10comparatorESaISA_EE17_M_construct_nodeIJRKSt21piecewise_construct_tSt5tupleIJRS6_EESK_IJEEEEEvPSt13_Rb_tree_nodeISA_EDpOT_
     /tmp/ccvUPO8Q.s:11760  .text._ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE:0000000000000000 _ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE
     /tmp/ccvUPO8Q.s:11782  .text._ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_Lb1EEERKS1_OT_:0000000000000000 _ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_Lb1EEERKS1_OT_
     /tmp/ccvUPO8Q.s:11782  .text._ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_Lb1EEERKS1_OT_:0000000000000000 _ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_Lb1EEERKS1_OT_
     /tmp/ccvUPO8Q.s:11822  .text._ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_S4_Lb1EEEOT_OT0_:0000000000000000 _ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_S4_Lb1EEEOT_OT0_
     /tmp/ccvUPO8Q.s:11822  .text._ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_S4_Lb1EEEOT_OT0_:0000000000000000 _ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_S4_Lb1EEEOT_OT0_
     /tmp/ccvUPO8Q.s:11863  .text._ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_Lb1EEEOT_RKS1_:0000000000000000 _ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_Lb1EEEOT_RKS1_
     /tmp/ccvUPO8Q.s:11863  .text._ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_Lb1EEEOT_RKS1_:0000000000000000 _ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_Lb1EEEOT_RKS1_
     /tmp/ccvUPO8Q.s:14233  .text._ZNKSt23_Rb_tree_const_iteratorISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS1_8functionIFvS5_EEEEE13_M_const_castEv:0000000000000000 _ZNKSt23_Rb_tree_const_iteratorISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS1_8functionIFvS5_EEEEE13_M_const_castEv
     /tmp/ccvUPO8Q.s:14262  .text._ZNKSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt10_Select1stISA_ENS2_10comparatorESaISA_EE4sizeEv:0000000000000000 _ZNKSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt10_Select1stISA_ENS2_10comparatorESaISA_EE4sizeEv
     /tmp/ccvUPO8Q.s:14285  .text._ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt10_Select1stISA_ENS2_10comparatorESaISA_EE12_M_rightmostEv:0000000000000000 _ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt10_Select1stISA_ENS2_10comparatorESaISA_EE12_M_rightmostEv
     /tmp/ccvUPO8Q.s:14370  .text._ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt10_Select1stISA_ENS2_10comparatorESaISA_EE24_M_get_insert_unique_posERS6_:0000000000000000 _ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt10_Select1stISA_ENS2_10comparatorESaISA_EE24_M_get_insert_unique_posERS6_
     /tmp/ccvUPO8Q.s:14514  .text._ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt10_Select1stISA_ENS2_10comparatorESaISA_EE11_M_leftmostEv:0000000000000000 _ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt10_Select1stISA_ENS2_10comparatorESaISA_EE11_M_leftmostEv
     /tmp/ccvUPO8Q.s:14537  .text._ZNSt17_Rb_tree_iteratorISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS1_8functionIFvS5_EEEEEmmEv:0000000000000000 _ZNSt17_Rb_tree_iteratorISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS1_8functionIFvS5_EEEEEmmEv
     /tmp/ccvUPO8Q.s:14569  .text._ZNSt17_Rb_tree_iteratorISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS1_8functionIFvS5_EEEEEppEv:0000000000000000 _ZNSt17_Rb_tree_iteratorISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS1_8functionIFvS5_EEEEEppEv
     /tmp/ccvUPO8Q.s:14600  .text._ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt10_Select1stISA_ENS2_10comparatorESaISA_EE8_S_valueEPKSt13_Rb_tree_nodeISA_E:0000000000000000 _ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt10_Select1stISA_ENS2_10comparatorESaISA_EE8_S_valueEPKSt13_Rb_tree_nodeISA_E
     /tmp/ccvUPO8Q.s:14625  .text._ZN5boost16exception_detail19error_info_injectorINS_17bad_function_callEEC2ERKS2_:0000000000000000 _ZN5boost16exception_detail19error_info_injectorINS_17bad_function_callEEC1ERKS2_
     /tmp/ccvUPO8Q.s:12359  .text._ZN5boost16exception_detail19error_info_injectorINS_17bad_function_callEED2Ev:0000000000000000 _ZN5boost16exception_detail19error_info_injectorINS_17bad_function_callEED2Ev
     /tmp/ccvUPO8Q.s:12398  .text._ZN5boost16exception_detail19error_info_injectorINS_17bad_function_callEED2Ev:0000000000000048 _ZThn16_N5boost16exception_detail19error_info_injectorINS_17bad_function_callEED1Ev
     /tmp/ccvUPO8Q.s:12411  .text._ZN5boost16exception_detail19error_info_injectorINS_17bad_function_callEED0Ev:0000000000000000 _ZN5boost16exception_detail19error_info_injectorINS_17bad_function_callEED0Ev
     /tmp/ccvUPO8Q.s:12439  .text._ZN5boost16exception_detail19error_info_injectorINS_17bad_function_callEED0Ev:000000000000002b _ZThn16_N5boost16exception_detail19error_info_injectorINS_17bad_function_callEED0Ev
     /tmp/ccvUPO8Q.s:14669  .text._ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEEC1ERKS4_:0000000000000000 _ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEEC1ERKS4_
     /tmp/ccvUPO8Q.s:12522  .text._ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEED1Ev:000000000000005a _ZThn16_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEED1Ev
     /tmp/ccvUPO8Q.s:12534  .text._ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEED1Ev:0000000000000060 _ZTv0_n40_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEED1Ev
     /tmp/ccvUPO8Q.s:12548  .text._ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEED0Ev:0000000000000000 _ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEED0Ev
     /tmp/ccvUPO8Q.s:12576  .text._ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEED0Ev:000000000000002b _ZThn16_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEED0Ev
     /tmp/ccvUPO8Q.s:12588  .text._ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEED0Ev:0000000000000031 _ZTv0_n40_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEED0Ev
     /tmp/ccvUPO8Q.s:12749  .text._ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_St5dequeIS4_SaIS4_EEESt10_Select1stISA_ENS2_10comparatorESaISA_EE6_S_keyEPKSt13_Rb_tree_nodeISA_E:0000000000000000 _ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_St5dequeIS4_SaIS4_EEESt10_Select1stISA_ENS2_10comparatorESaISA_EE6_S_keyEPKSt13_Rb_tree_nodeISA_E
     /tmp/ccvUPO8Q.s:14778  .text._ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_St5dequeIS4_SaIS4_EEESt10_Select1stISA_ENS2_10comparatorESaISA_EE8_S_valueEPKSt18_Rb_tree_node_base:0000000000000000 _ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_St5dequeIS4_SaIS4_EEESt10_Select1stISA_ENS2_10comparatorESaISA_EE8_S_valueEPKSt18_Rb_tree_node_base
     /tmp/ccvUPO8Q.s:14803  .text._ZNKSt10_Select1stISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt5dequeIS5_SaIS5_EEEEclERKSA_:0000000000000000 _ZNKSt10_Select1stISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt5dequeIS5_SaIS5_EEEEclERKSA_
     /tmp/ccvUPO8Q.s:12720  .text._ZNSt17_Rb_tree_iteratorISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt5dequeIS5_SaIS5_EEEEC2EPSt18_Rb_tree_node_base:0000000000000000 _ZNSt17_Rb_tree_iteratorISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt5dequeIS5_SaIS5_EEEEC2EPSt18_Rb_tree_node_base
     /tmp/ccvUPO8Q.s:14825  .text._ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_St5dequeIS4_SaIS4_EEESt10_Select1stISA_ENS2_10comparatorESaISA_EE8_S_valueEPKSt13_Rb_tree_nodeISA_E:0000000000000000 _ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_St5dequeIS4_SaIS4_EEESt10_Select1stISA_ENS2_10comparatorESaISA_EE8_S_valueEPKSt13_Rb_tree_nodeISA_E
     /tmp/ccvUPO8Q.s:14850  .text._ZN9__gnu_cxx13new_allocatorIlED2Ev:0000000000000000 _ZN9__gnu_cxx13new_allocatorIlED2Ev
     /tmp/ccvUPO8Q.s:12779  .text._ZNSaIlED2Ev:0000000000000000 _ZNSaIlED1Ev
     /tmp/ccvUPO8Q.s:14873  .text._ZNSt16allocator_traitsISaIlEE10deallocateERS0_Plm:0000000000000000 _ZNSt16allocator_traitsISaIlEE10deallocateERS0_Plm
     /tmp/ccvUPO8Q.s:14903  .text._ZNSt12_Destroy_auxILb1EE9__destroyIPlEEvT_S3_:0000000000000000 _ZNSt12_Destroy_auxILb1EE9__destroyIPlEEvT_S3_
     /tmp/ccvUPO8Q.s:14925  .text._ZN5boost16exception_detail11set_info_rvINS_10error_infoINS_15throw_function_EPKcEEE3setINS0_10clone_implINS0_10bad_alloc_EEEEERKT_SE_OS6_:0000000000000000 _ZN5boost16exception_detail11set_info_rvINS_10error_infoINS_15throw_function_EPKcEEE3setINS0_10clone_implINS0_10bad_alloc_EEEEERKT_SE_OS6_
     /tmp/ccvUPO8Q.s:14953  .text._ZN5boost16exception_detail11set_info_rvINS_10error_infoINS_11throw_file_EPKcEEE3setINS0_10clone_implINS0_10bad_alloc_EEEEERKT_SE_OS6_:0000000000000000 _ZN5boost16exception_detail11set_info_rvINS_10error_infoINS_11throw_file_EPKcEEE3setINS0_10clone_implINS0_10bad_alloc_EEEEERKT_SE_OS6_
     /tmp/ccvUPO8Q.s:14981  .text._ZN5boost16exception_detail11set_info_rvINS_10error_infoINS_11throw_line_EiEEE3setINS0_10clone_implINS0_10bad_alloc_EEEEERKT_SC_OS4_:0000000000000000 _ZN5boost16exception_detail11set_info_rvINS_10error_infoINS_11throw_line_EiEEE3setINS0_10clone_implINS0_10bad_alloc_EEEEERKT_SC_OS4_
     /tmp/ccvUPO8Q.s:15010  .text._ZN5boost6detail12shared_countC2INS_16exception_detail10clone_implINS3_10bad_alloc_EEEEEPT_:0000000000000000 _ZN5boost6detail12shared_countC1INS_16exception_detail10clone_implINS3_10bad_alloc_EEEEEPT_
     /tmp/ccvUPO8Q.s:15113  .text._ZN5boost16exception_detail11set_info_rvINS_10error_infoINS_15throw_function_EPKcEEE3setINS0_10clone_implINS0_14bad_exception_EEEEERKT_SE_OS6_:0000000000000000 _ZN5boost16exception_detail11set_info_rvINS_10error_infoINS_15throw_function_EPKcEEE3setINS0_10clone_implINS0_14bad_exception_EEEEERKT_SE_OS6_
     /tmp/ccvUPO8Q.s:15141  .text._ZN5boost16exception_detail11set_info_rvINS_10error_infoINS_11throw_file_EPKcEEE3setINS0_10clone_implINS0_14bad_exception_EEEEERKT_SE_OS6_:0000000000000000 _ZN5boost16exception_detail11set_info_rvINS_10error_infoINS_11throw_file_EPKcEEE3setINS0_10clone_implINS0_14bad_exception_EEEEERKT_SE_OS6_
     /tmp/ccvUPO8Q.s:15169  .text._ZN5boost16exception_detail11set_info_rvINS_10error_infoINS_11throw_line_EiEEE3setINS0_10clone_implINS0_14bad_exception_EEEEERKT_SC_OS4_:0000000000000000 _ZN5boost16exception_detail11set_info_rvINS_10error_infoINS_11throw_line_EiEEE3setINS0_10clone_implINS0_14bad_exception_EEEEERKT_SC_OS4_
     /tmp/ccvUPO8Q.s:15198  .text._ZN5boost6detail12shared_countC2INS_16exception_detail10clone_implINS3_14bad_exception_EEEEEPT_:0000000000000000 _ZN5boost6detail12shared_countC1INS_16exception_detail10clone_implINS3_14bad_exception_EEEEEPT_
GAS LISTING /tmp/ccvUPO8Q.s 			page 753


     /tmp/ccvUPO8Q.s:13181  .text._ZNSaIiEC2ERKS_:0000000000000000 _ZNSaIiEC1ERKS_
     /tmp/ccvUPO8Q.s:13181  .text._ZNSaIiEC2ERKS_:0000000000000000 _ZNSaIiEC2ERKS_
     /tmp/ccvUPO8Q.s:15302  .text._ZN9__gnu_cxx13new_allocatorIiEC2ERKS1_:0000000000000000 _ZN9__gnu_cxx13new_allocatorIiEC2ERKS1_
     /tmp/ccvUPO8Q.s:13214  .text._ZN9__gnu_cxx13new_allocatorIiED2Ev:0000000000000000 _ZN9__gnu_cxx13new_allocatorIiED1Ev
     /tmp/ccvUPO8Q.s:13239  .text._ZNSt12_Vector_baseIiSaIiEE12_Vector_implC2ERKS0_:0000000000000000 _ZNSt12_Vector_baseIiSaIiEE12_Vector_implC2ERKS0_
     /tmp/ccvUPO8Q.s:15327  .text._ZNSt12_Vector_baseIiSaIiEE11_M_allocateEm:0000000000000000 _ZNSt12_Vector_baseIiSaIiEE11_M_allocateEm
     /tmp/ccvUPO8Q.s:15363  .text._ZNSt16allocator_traitsISaIiEE10deallocateERS0_Pim:0000000000000000 _ZNSt16allocator_traitsISaIiEE10deallocateERS0_Pim
     /tmp/ccvUPO8Q.s:13361  .text._ZN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEC2ERKS2_:0000000000000000 _ZN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEC2ERKS2_
     /tmp/ccvUPO8Q.s:15393  .text._ZNSt20__uninitialized_copyILb1EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEPiEET0_T_SC_SB_:0000000000000000 _ZNSt20__uninitialized_copyILb1EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEPiEET0_T_SC_SB_
     /tmp/ccvUPO8Q.s:13424  .text._ZN5boost10shared_ptrIN2gr5lfast12costas2_implEEC2INS1_11basic_blockEEERKNS0_IT_EEPS3_:0000000000000000 _ZN5boost10shared_ptrIN2gr5lfast12costas2_implEEC2INS1_11basic_blockEEERKNS0_IT_EEPS3_
     /tmp/ccvUPO8Q.s:13464  .text._ZN5boost10shared_ptrIN2gr5lfast12costas2_implEEC2Ev:0000000000000000 _ZN5boost10shared_ptrIN2gr5lfast12costas2_implEEC2Ev
     /tmp/ccvUPO8Q.s:13498  .text._ZNSt12_Vector_baseIN2gr5tag_tESaIS1_EE12_Vector_implC2Ev:0000000000000000 _ZNSt12_Vector_baseIN2gr5tag_tESaIS1_EE12_Vector_implC2Ev
     /tmp/ccvUPO8Q.s:15423  .text._ZNSaIN2gr5tag_tEEC2Ev:0000000000000000 _ZNSaIN2gr5tag_tEEC2Ev
     /tmp/ccvUPO8Q.s:15453  .text._ZN9__gnu_cxx13new_allocatorIN2gr5tag_tEED2Ev:0000000000000000 _ZN9__gnu_cxx13new_allocatorIN2gr5tag_tEED2Ev
     /tmp/ccvUPO8Q.s:13535  .text._ZNSaIN2gr5tag_tEED2Ev:0000000000000000 _ZNSaIN2gr5tag_tEED1Ev
     /tmp/ccvUPO8Q.s:15476  .text._ZNSt16allocator_traitsISaIN2gr5tag_tEEE10deallocateERS2_PS1_m:0000000000000000 _ZNSt16allocator_traitsISaIN2gr5tag_tEEE10deallocateERS2_PS1_m
     /tmp/ccvUPO8Q.s:15506  .text._ZNSt12_Destroy_auxILb0EE9__destroyIPN2gr5tag_tEEEvT_S5_:0000000000000000 _ZNSt12_Destroy_auxILb0EE9__destroyIPN2gr5tag_tEEEvT_S5_
     /tmp/ccvUPO8Q.s:13630  .text._ZN9__gnu_cxx17__normal_iteratorIPKN2gr5tag_tESt6vectorIS2_SaIS2_EEEC2ERKS4_:0000000000000000 _ZN9__gnu_cxx17__normal_iteratorIPKN2gr5tag_tESt6vectorIS2_SaIS2_EEEC2ERKS4_
     /tmp/ccvUPO8Q.s:15544  .text._ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPN2gr5tag_tESt6vectorIS3_SaIS3_EEEEET_S9_:0000000000000000 _ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPN2gr5tag_tESt6vectorIS3_SaIS3_EEEEET_S9_
     /tmp/ccvUPO8Q.s:15566  .text._ZSt14__copy_move_a2ILb1EN9__gnu_cxx17__normal_iteratorIPN2gr5tag_tESt6vectorIS3_SaIS3_EEEES8_ET1_T0_SA_S9_:0000000000000000 _ZSt14__copy_move_a2ILb1EN9__gnu_cxx17__normal_iteratorIPN2gr5tag_tESt6vectorIS3_SaIS3_EEEES8_ET1_T0_SA_S9_
     /tmp/ccvUPO8Q.s:15621  .text._ZN9__gnu_cxx13new_allocatorIN2gr5tag_tEE7destroyIS2_EEvPT_:0000000000000000 _ZN9__gnu_cxx13new_allocatorIN2gr5tag_tEE7destroyIS2_EEvPT_
     /tmp/ccvUPO8Q.s:15648  .text._ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt10_Select1stISA_ENS2_10comparatorESaISA_EE21_M_get_Node_allocatorEv:0000000000000000 _ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt10_Select1stISA_ENS2_10comparatorESaISA_EE21_M_get_Node_allocatorEv
     /tmp/ccvUPO8Q.s:15669  .text._ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS2_8functionIFvS6_EEEEEEE7destroyISB_EEvRSD_PT_:0000000000000000 _ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS2_8functionIFvS6_EEEEEEE7destroyISB_EEvRSD_PT_
     /tmp/ccvUPO8Q.s:15697  .text._ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS2_8functionIFvS6_EEEEEEE10deallocateERSD_PSC_m:0000000000000000 _ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS2_8functionIFvS6_EEEEEEE10deallocateERSD_PSC_m
     /tmp/ccvUPO8Q.s:15728  .text._ZNKSt13_Rb_tree_nodeISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS1_8functionIFvS5_EEEEE9_M_valptrEv:0000000000000000 _ZNKSt13_Rb_tree_nodeISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS1_8functionIFvS5_EEEEE9_M_valptrEv
     /tmp/ccvUPO8Q.s:15754  .text._ZN9__gnu_cxx16__aligned_membufISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS2_8functionIFvS6_EEEEE7_M_addrEv:0000000000000000 _ZN9__gnu_cxx16__aligned_membufISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS2_8functionIFvS6_EEEEE7_M_addrEv
     /tmp/ccvUPO8Q.s:15775  .text._ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS2_8functionIFvS6_EEEEEEE8allocateERSD_m:0000000000000000 _ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS2_8functionIFvS6_EEEEEEE8allocateERSD_m
     /tmp/ccvUPO8Q.s:14015  .text._ZNSt18_Rb_tree_node_baseC2Ev:0000000000000000 _ZNSt18_Rb_tree_node_baseC2Ev
     /tmp/ccvUPO8Q.s:14015  .text._ZNSt18_Rb_tree_node_baseC2Ev:0000000000000000 _ZNSt18_Rb_tree_node_baseC1Ev
     /tmp/ccvUPO8Q.s:14039  .text._ZN9__gnu_cxx16__aligned_membufISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS2_8functionIFvS6_EEEEEC2Ev:0000000000000000 _ZN9__gnu_cxx16__aligned_membufISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS2_8functionIFvS6_EEEEEC2Ev
     /tmp/ccvUPO8Q.s:14039  .text._ZN9__gnu_cxx16__aligned_membufISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS2_8functionIFvS6_EEEEEC2Ev:0000000000000000 _ZN9__gnu_cxx16__aligned_membufISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS2_8functionIFvS6_EEEEEC1Ev
     /tmp/ccvUPO8Q.s:14063  .text._ZNSt13_Rb_tree_nodeISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS1_8functionIFvS5_EEEEEC2Ev:0000000000000000 _ZNSt13_Rb_tree_nodeISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS1_8functionIFvS5_EEEEEC2Ev
     /tmp/ccvUPO8Q.s:14063  .text._ZNSt13_Rb_tree_nodeISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS1_8functionIFvS5_EEEEEC2Ev:0000000000000000 _ZNSt13_Rb_tree_nodeISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS1_8functionIFvS5_EEEEEC1Ev
     /tmp/ccvUPO8Q.s:15803  .text._ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS2_8functionIFvS6_EEEEEEE9constructISB_JRKSt21piecewise_construct_tSt5tupleIJRS7_EESJ_IJEEEEEvRSD_PT_DpOT0_:0000000000000000 _ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS2_8functionIFvS6_EEEEEEE9constructISB_JRKSt21piecewise_construct_tSt5tupleIJRS7_EESJ_IJEEEEEvRSD_PT_DpOT0_
     /tmp/ccvUPO8Q.s:14307  .text._ZSt7forwardIRPSt13_Rb_tree_nodeISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS2_8functionIFvS6_EEEEEEOT_RNSt16remove_referenceISF_E4typeE:0000000000000000 _ZSt7forwardIRPSt13_Rb_tree_nodeISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS2_8functionIFvS6_EEEEEEOT_RNSt16remove_referenceISF_E4typeE
     /tmp/ccvUPO8Q.s:14329  .text._ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRPSt13_Rb_tree_nodeIS_IKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS5_8functionIFvS9_EEEEERS1_Lb1EEEOT_OT0_:0000000000000000 _ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRPSt13_Rb_tree_nodeIS_IKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS5_8functionIFvS9_EEEEERS1_Lb1EEEOT_OT0_
     /tmp/ccvUPO8Q.s:14329  .text._ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRPSt13_Rb_tree_nodeIS_IKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS5_8functionIFvS9_EEEEERS1_Lb1EEEOT_OT0_:0000000000000000 _ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeIS_IKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS5_8functionIFvS9_EEEEERS1_Lb1EEEOT_OT0_
     /tmp/ccvUPO8Q.s:15855  .text._ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt10_Select1stISA_ENS2_10comparatorESaISA_EE5beginEv:0000000000000000 _ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt10_Select1stISA_ENS2_10comparatorESaISA_EE5beginEv
     /tmp/ccvUPO8Q.s:14625  .text._ZN5boost16exception_detail19error_info_injectorINS_17bad_function_callEEC2ERKS2_:0000000000000000 _ZN5boost16exception_detail19error_info_injectorINS_17bad_function_callEEC2ERKS2_
     /tmp/ccvUPO8Q.s:15884  .text._ZNKSt13_Rb_tree_nodeISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt5dequeIS5_SaIS5_EEEE9_M_valptrEv:0000000000000000 _ZNKSt13_Rb_tree_nodeISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt5dequeIS5_SaIS5_EEEE9_M_valptrEv
     /tmp/ccvUPO8Q.s:14850  .text._ZN9__gnu_cxx13new_allocatorIlED2Ev:0000000000000000 _ZN9__gnu_cxx13new_allocatorIlED1Ev
     /tmp/ccvUPO8Q.s:15910  .text._ZN9__gnu_cxx13new_allocatorIlE10deallocateEPlm:0000000000000000 _ZN9__gnu_cxx13new_allocatorIlE10deallocateEPlm
     /tmp/ccvUPO8Q.s:15010  .text._ZN5boost6detail12shared_countC2INS_16exception_detail10clone_implINS3_10bad_alloc_EEEEEPT_:0000000000000000 _ZN5boost6detail12shared_countC2INS_16exception_detail10clone_implINS3_10bad_alloc_EEEEEPT_
     /tmp/ccvUPO8Q.s:15938  .text._ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEEC2EPS5_:0000000000000000 _ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEEC1EPS5_
     /tmp/ccvUPO8Q.s:15976  .text._ZN5boost14checked_deleteINS_16exception_detail10clone_implINS1_10bad_alloc_EEEEEvPT_:0000000000000000 _ZN5boost14checked_deleteINS_16exception_detail10clone_implINS1_10bad_alloc_EEEEEvPT_
     /tmp/ccvUPO8Q.s:15198  .text._ZN5boost6detail12shared_countC2INS_16exception_detail10clone_implINS3_14bad_exception_EEEEEPT_:0000000000000000 _ZN5boost6detail12shared_countC2INS_16exception_detail10clone_implINS3_14bad_exception_EEEEEPT_
     /tmp/ccvUPO8Q.s:16013  .text._ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_14bad_exception_EEEEC2EPS5_:0000000000000000 _ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_14bad_exception_EEEEC1EPS5_
     /tmp/ccvUPO8Q.s:16050  .text._ZN5boost14checked_deleteINS_16exception_detail10clone_implINS1_14bad_exception_EEEEEvPT_:0000000000000000 _ZN5boost14checked_deleteINS_16exception_detail10clone_implINS1_14bad_exception_EEEEEvPT_
     /tmp/ccvUPO8Q.s:15302  .text._ZN9__gnu_cxx13new_allocatorIiEC2ERKS1_:0000000000000000 _ZN9__gnu_cxx13new_allocatorIiEC1ERKS1_
     /tmp/ccvUPO8Q.s:16085  .text._ZNSt16allocator_traitsISaIiEE8allocateERS0_m:0000000000000000 _ZNSt16allocator_traitsISaIiEE8allocateERS0_m
     /tmp/ccvUPO8Q.s:16114  .text._ZN9__gnu_cxx13new_allocatorIiE10deallocateEPim:0000000000000000 _ZN9__gnu_cxx13new_allocatorIiE10deallocateEPim
     /tmp/ccvUPO8Q.s:16141  .text._ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEPiET0_T_SA_S9_:0000000000000000 _ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEPiET0_T_SA_S9_
     /tmp/ccvUPO8Q.s:16184  .text._ZN9__gnu_cxx13new_allocatorIN2gr5tag_tEEC2Ev:0000000000000000 _ZN9__gnu_cxx13new_allocatorIN2gr5tag_tEEC2Ev
     /tmp/ccvUPO8Q.s:15423  .text._ZNSaIN2gr5tag_tEEC2Ev:0000000000000000 _ZNSaIN2gr5tag_tEEC1Ev
     /tmp/ccvUPO8Q.s:15453  .text._ZN9__gnu_cxx13new_allocatorIN2gr5tag_tEED2Ev:0000000000000000 _ZN9__gnu_cxx13new_allocatorIN2gr5tag_tEED1Ev
     /tmp/ccvUPO8Q.s:16208  .text._ZN9__gnu_cxx13new_allocatorIN2gr5tag_tEE10deallocateEPS2_m:0000000000000000 _ZN9__gnu_cxx13new_allocatorIN2gr5tag_tEE10deallocateEPS2_m
     /tmp/ccvUPO8Q.s:16235  .text._ZSt11__addressofIN2gr5tag_tEEPT_RS2_:0000000000000000 _ZSt11__addressofIN2gr5tag_tEEPT_RS2_
GAS LISTING /tmp/ccvUPO8Q.s 			page 754


     /tmp/ccvUPO8Q.s:16257  .text._ZSt8_DestroyIN2gr5tag_tEEvPT_:0000000000000000 _ZSt8_DestroyIN2gr5tag_tEEvPT_
     /tmp/ccvUPO8Q.s:16282  .text._ZSt12__niter_baseIPN2gr5tag_tESt6vectorIS1_SaIS1_EEET_N9__gnu_cxx17__normal_iteratorIS6_T0_EE:0000000000000000 _ZSt12__niter_baseIPN2gr5tag_tESt6vectorIS1_SaIS1_EEET_N9__gnu_cxx17__normal_iteratorIS6_T0_EE
     /tmp/ccvUPO8Q.s:16307  .text._ZSt13__copy_move_aILb1EPN2gr5tag_tES2_ET1_T0_S4_S3_:0000000000000000 _ZSt13__copy_move_aILb1EPN2gr5tag_tES2_ET1_T0_S4_S3_
     /tmp/ccvUPO8Q.s:16404  .text._ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS3_8functionIFvS7_EEEEEE7destroyISC_EEvPT_:0000000000000000 _ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS3_8functionIFvS7_EEEEEE7destroyISC_EEvPT_
     /tmp/ccvUPO8Q.s:16431  .text._ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS3_8functionIFvS7_EEEEEE10deallocateEPSD_m:0000000000000000 _ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS3_8functionIFvS7_EEEEEE10deallocateEPSD_m
     /tmp/ccvUPO8Q.s:16459  .text._ZNK9__gnu_cxx16__aligned_membufISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS2_8functionIFvS6_EEEEE6_M_ptrEv:0000000000000000 _ZNK9__gnu_cxx16__aligned_membufISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS2_8functionIFvS6_EEEEE6_M_ptrEv
     /tmp/ccvUPO8Q.s:16484  .text._ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS3_8functionIFvS7_EEEEEE8allocateEmPKv:0000000000000000 _ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS3_8functionIFvS7_EEEEEE8allocateEmPKv
     /tmp/ccvUPO8Q.s:16665  .text._ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS3_8functionIFvS7_EEEEEE9constructISC_JRKSt21piecewise_construct_tSt5tupleIJRS8_EESJ_IJEEEEEvPT_DpOT0_:0000000000000000 _ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS3_8functionIFvS7_EEEEEE9constructISC_JRKSt21piecewise_construct_tSt5tupleIJRS8_EESJ_IJEEEEEvPT_DpOT0_
     /tmp/ccvUPO8Q.s:16770  .text._ZNK9__gnu_cxx16__aligned_membufISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt5dequeIS6_SaIS6_EEEE6_M_ptrEv:0000000000000000 _ZNK9__gnu_cxx16__aligned_membufISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt5dequeIS6_SaIS6_EEEE6_M_ptrEv
     /tmp/ccvUPO8Q.s:15938  .text._ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEEC2EPS5_:0000000000000000 _ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEEC2EPS5_
     /tmp/ccvUPO8Q.s:17691  .data.rel.ro.local._ZTVN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEEE:0000000000000000 _ZTVN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEEE
     /tmp/ccvUPO8Q.s:16013  .text._ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_14bad_exception_EEEEC2EPS5_:0000000000000000 _ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_14bad_exception_EEEEC2EPS5_
     /tmp/ccvUPO8Q.s:17615  .data.rel.ro.local._ZTVN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_14bad_exception_EEEEE:0000000000000000 _ZTVN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_14bad_exception_EEEEE
     /tmp/ccvUPO8Q.s:16795  .text._ZN9__gnu_cxx13new_allocatorIiE8allocateEmPKv:0000000000000000 _ZN9__gnu_cxx13new_allocatorIiE8allocateEmPKv
     /tmp/ccvUPO8Q.s:16834  .text._ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEET_S8_:0000000000000000 _ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEET_S8_
     /tmp/ccvUPO8Q.s:16855  .text._ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEPiET1_T0_SA_S9_:0000000000000000 _ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEPiET1_T0_SA_S9_
     /tmp/ccvUPO8Q.s:16184  .text._ZN9__gnu_cxx13new_allocatorIN2gr5tag_tEEC2Ev:0000000000000000 _ZN9__gnu_cxx13new_allocatorIN2gr5tag_tEEC1Ev
     /tmp/ccvUPO8Q.s:16923  .text._ZNSt11__copy_moveILb1ELb0ESt26random_access_iterator_tagE8__copy_mIPN2gr5tag_tES5_EET0_T_S7_S6_:0000000000000000 _ZNSt11__copy_moveILb1ELb0ESt26random_access_iterator_tagE8__copy_mIPN2gr5tag_tES5_EET0_T_S7_S6_
     /tmp/ccvUPO8Q.s:16340  .text._ZN5boost8functionIFvNS_13intrusive_ptrIN3pmt8pmt_baseEEEEED2Ev:0000000000000000 _ZN5boost8functionIFvNS_13intrusive_ptrIN3pmt8pmt_baseEEEEED2Ev
     /tmp/ccvUPO8Q.s:16982  .text._ZN5boost9function1IvNS_13intrusive_ptrIN3pmt8pmt_baseEEEED2Ev:0000000000000000 _ZN5boost9function1IvNS_13intrusive_ptrIN3pmt8pmt_baseEEEED2Ev
     /tmp/ccvUPO8Q.s:16340  .text._ZN5boost8functionIFvNS_13intrusive_ptrIN3pmt8pmt_baseEEEEED2Ev:0000000000000000 _ZN5boost8functionIFvNS_13intrusive_ptrIN3pmt8pmt_baseEEEEED1Ev
     /tmp/ccvUPO8Q.s:16370  .text._ZNSt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS0_8functionIFvS4_EEEED2Ev:0000000000000000 _ZNSt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS0_8functionIFvS4_EEEED2Ev
     /tmp/ccvUPO8Q.s:16370  .text._ZNSt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS0_8functionIFvS4_EEEED2Ev:0000000000000000 _ZNSt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS0_8functionIFvS4_EEEED1Ev
     /tmp/ccvUPO8Q.s:17023  .text._ZNK9__gnu_cxx16__aligned_membufISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS2_8functionIFvS6_EEEEE7_M_addrEv:0000000000000000 _ZNK9__gnu_cxx16__aligned_membufISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS2_8functionIFvS6_EEEEE7_M_addrEv
     /tmp/ccvUPO8Q.s:17045  .text._ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS3_8functionIFvS7_EEEEEE8max_sizeEv:0000000000000000 _ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS3_8functionIFvS7_EEEEEE8max_sizeEv
     /tmp/ccvUPO8Q.s:16526  .text._ZNSt10_Head_baseILm0ERKN5boost13intrusive_ptrIN3pmt8pmt_baseEEELb0EE7_M_headERS7_:0000000000000000 _ZNSt10_Head_baseILm0ERKN5boost13intrusive_ptrIN3pmt8pmt_baseEEELb0EE7_M_headERS7_
     /tmp/ccvUPO8Q.s:16548  .text._ZNSt11_Tuple_implILm0EJRKN5boost13intrusive_ptrIN3pmt8pmt_baseEEEEE7_M_headERS7_:0000000000000000 _ZNSt11_Tuple_implILm0EJRKN5boost13intrusive_ptrIN3pmt8pmt_baseEEEEE7_M_headERS7_
     /tmp/ccvUPO8Q.s:16572  .text._ZSt7forwardIRKN5boost13intrusive_ptrIN3pmt8pmt_baseEEEEOT_RNSt16remove_referenceIS7_E4typeE:0000000000000000 _ZSt7forwardIRKN5boost13intrusive_ptrIN3pmt8pmt_baseEEEEOT_RNSt16remove_referenceIS7_E4typeE
     /tmp/ccvUPO8Q.s:16594  .text._ZNSt11_Tuple_implILm0EJRKN5boost13intrusive_ptrIN3pmt8pmt_baseEEEEEC2EOS7_:0000000000000000 _ZNSt11_Tuple_implILm0EJRKN5boost13intrusive_ptrIN3pmt8pmt_baseEEEEEC2EOS7_
     /tmp/ccvUPO8Q.s:16594  .text._ZNSt11_Tuple_implILm0EJRKN5boost13intrusive_ptrIN3pmt8pmt_baseEEEEEC2EOS7_:0000000000000000 _ZNSt11_Tuple_implILm0EJRKN5boost13intrusive_ptrIN3pmt8pmt_baseEEEEEC1EOS7_
     /tmp/ccvUPO8Q.s:16632  .text._ZNSt5tupleIJRKN5boost13intrusive_ptrIN3pmt8pmt_baseEEEEEC2EOS7_:0000000000000000 _ZNSt5tupleIJRKN5boost13intrusive_ptrIN3pmt8pmt_baseEEEEEC2EOS7_
     /tmp/ccvUPO8Q.s:16632  .text._ZNSt5tupleIJRKN5boost13intrusive_ptrIN3pmt8pmt_baseEEEEEC2EOS7_:0000000000000000 _ZNSt5tupleIJRKN5boost13intrusive_ptrIN3pmt8pmt_baseEEEEEC1EOS7_
     /tmp/ccvUPO8Q.s:17067  .text._ZNSt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS0_8functionIFvS4_EEEEC2IJRS5_EJEEESt21piecewise_construct_tSt5tupleIJDpT_EESD_IJDpT0_EE:0000000000000000 _ZNSt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS0_8functionIFvS4_EEEEC1IJRS5_EJEEESt21piecewise_construct_tSt5tupleIJDpT_EESD_IJDpT0_EE
     /tmp/ccvUPO8Q.s:17105  .text._ZNK9__gnu_cxx16__aligned_membufISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt5dequeIS6_SaIS6_EEEE7_M_addrEv:0000000000000000 _ZNK9__gnu_cxx16__aligned_membufISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt5dequeIS6_SaIS6_EEEE7_M_addrEv
     /tmp/ccvUPO8Q.s:17127  .text._ZNK9__gnu_cxx13new_allocatorIiE8max_sizeEv:0000000000000000 _ZNK9__gnu_cxx13new_allocatorIiE8max_sizeEv
     /tmp/ccvUPO8Q.s:17173  .text._ZSt12__niter_baseIPiET_S1_:0000000000000000 _ZSt12__niter_baseIPiET_S1_
     /tmp/ccvUPO8Q.s:17148  .text._ZSt12__niter_baseIPKiSt6vectorIiSaIiEEET_N9__gnu_cxx17__normal_iteratorIS5_T0_EE:0000000000000000 _ZSt12__niter_baseIPKiSt6vectorIiSaIiEEET_N9__gnu_cxx17__normal_iteratorIS5_T0_EE
     /tmp/ccvUPO8Q.s:17194  .text._ZSt13__copy_move_aILb0EPKiPiET1_T0_S4_S3_:0000000000000000 _ZSt13__copy_move_aILb0EPKiPiET1_T0_S4_S3_
     /tmp/ccvUPO8Q.s:16902  .text._ZSt4moveIRN2gr5tag_tEEONSt16remove_referenceIT_E4typeEOS4_:0000000000000000 _ZSt4moveIRN2gr5tag_tEEONSt16remove_referenceIT_E4typeEOS4_
     /tmp/ccvUPO8Q.s:17227  .text._ZN5boost9function1IvNS_13intrusive_ptrIN3pmt8pmt_baseEEEE5clearEv:0000000000000000 _ZN5boost9function1IvNS_13intrusive_ptrIN3pmt8pmt_baseEEEE5clearEv
     /tmp/ccvUPO8Q.s:16982  .text._ZN5boost9function1IvNS_13intrusive_ptrIN3pmt8pmt_baseEEEED2Ev:0000000000000000 _ZN5boost9function1IvNS_13intrusive_ptrIN3pmt8pmt_baseEEEED1Ev
     /tmp/ccvUPO8Q.s:17067  .text._ZNSt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS0_8functionIFvS4_EEEEC2IJRS5_EJEEESt21piecewise_construct_tSt5tupleIJDpT_EESD_IJDpT0_EE:0000000000000000 _ZNSt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS0_8functionIFvS4_EEEEC2IJRS5_EJEEESt21piecewise_construct_tSt5tupleIJDpT_EESD_IJDpT0_EE
     /tmp/ccvUPO8Q.s:17328  .text._ZNSt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS0_8functionIFvS4_EEEEC2IJRS5_EJLm0EEJEJEEERSt5tupleIJDpT_EERSC_IJDpT1_EESt12_Index_tupleIJXspT0_EEESL_IJXspT2_EEE:0000000000000000 _ZNSt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS0_8functionIFvS4_EEEEC1IJRS5_EJLm0EEJEJEEERSt5tupleIJDpT_EERSC_IJDpT1_EESt12_Index_tupleIJXspT0_EEESL_IJXspT2_EEE
     /tmp/ccvUPO8Q.s:17419  .text._ZNK9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEE4baseEv:0000000000000000 _ZNK9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEE4baseEv
     /tmp/ccvUPO8Q.s:17440  .text._ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIiEEPT_PKS3_S6_S4_:0000000000000000 _ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIiEEPT_PKS3_S6_S4_
     /tmp/ccvUPO8Q.s:17488  .text._ZNK5boost6detail8function13basic_vtable1IvNS_13intrusive_ptrIN3pmt8pmt_baseEEEE5clearERNS1_15function_bufferE:0000000000000000 _ZNK5boost6detail8function13basic_vtable1IvNS_13intrusive_ptrIN3pmt8pmt_baseEEEE5clearERNS1_15function_bufferE
     /tmp/ccvUPO8Q.s:17279  .text._ZSt12__get_helperILm0ERKN5boost13intrusive_ptrIN3pmt8pmt_baseEEEJEERT0_RSt11_Tuple_implIXT_EJS7_DpT1_EE:0000000000000000 _ZSt12__get_helperILm0ERKN5boost13intrusive_ptrIN3pmt8pmt_baseEEEJEERT0_RSt11_Tuple_implIXT_EJS7_DpT1_EE
     /tmp/ccvUPO8Q.s:17303  .text._ZSt3getILm0EJRKN5boost13intrusive_ptrIN3pmt8pmt_baseEEEEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERSB_:0000000000000000 _ZSt3getILm0EJRKN5boost13intrusive_ptrIN3pmt8pmt_baseEEEEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERSB_
     /tmp/ccvUPO8Q.s:17328  .text._ZNSt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS0_8functionIFvS4_EEEEC2IJRS5_EJLm0EEJEJEEERSt5tupleIJDpT_EERSC_IJDpT1_EESt12_Index_tupleIJXspT0_EEESL_IJXspT2_EEE:0000000000000000 _ZNSt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS0_8functionIFvS4_EEEEC2IJRS5_EJLm0EEJEJEEERSt5tupleIJDpT_EERSC_IJDpT1_EESt12_Index_tupleIJXspT0_EEESL_IJXspT2_EEE
     /tmp/ccvUPO8Q.s:17527  .text._ZN5boost8functionIFvNS_13intrusive_ptrIN3pmt8pmt_baseEEEEEC2Ev:0000000000000000 _ZN5boost8functionIFvNS_13intrusive_ptrIN3pmt8pmt_baseEEEEEC1Ev
     /tmp/ccvUPO8Q.s:17527  .text._ZN5boost8functionIFvNS_13intrusive_ptrIN3pmt8pmt_baseEEEEEC2Ev:0000000000000000 _ZN5boost8functionIFvNS_13intrusive_ptrIN3pmt8pmt_baseEEEEEC2Ev
     /tmp/ccvUPO8Q.s:17581  .text._ZN5boost9function1IvNS_13intrusive_ptrIN3pmt8pmt_baseEEEEC2Ev:0000000000000000 _ZN5boost9function1IvNS_13intrusive_ptrIN3pmt8pmt_baseEEEEC2Ev
     /tmp/ccvUPO8Q.s:17557  .text._ZNSt14unary_functionIN5boost13intrusive_ptrIN3pmt8pmt_baseEEEvEC2Ev:0000000000000000 _ZNSt14unary_functionIN5boost13intrusive_ptrIN3pmt8pmt_baseEEEvEC2Ev
     /tmp/ccvUPO8Q.s:17557  .text._ZNSt14unary_functionIN5boost13intrusive_ptrIN3pmt8pmt_baseEEEvEC2Ev:0000000000000000 _ZNSt14unary_functionIN5boost13intrusive_ptrIN3pmt8pmt_baseEEEvEC1Ev
     /tmp/ccvUPO8Q.s:17581  .text._ZN5boost9function1IvNS_13intrusive_ptrIN3pmt8pmt_baseEEEEC2Ev:0000000000000000 _ZN5boost9function1IvNS_13intrusive_ptrIN3pmt8pmt_baseEEEEC1Ev
     /tmp/ccvUPO8Q.s:18116  .data.rel.ro._ZTIN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_14bad_exception_EEEEE:0000000000000000 _ZTIN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_14bad_exception_EEEEE
     /tmp/ccvUPO8Q.s:17628  .text._ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_14bad_exception_EEEED2Ev:0000000000000000 _ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_14bad_exception_EEEED1Ev
GAS LISTING /tmp/ccvUPO8Q.s 			page 755


     /tmp/ccvUPO8Q.s:17661  .text._ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_14bad_exception_EEEED0Ev:0000000000000000 _ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_14bad_exception_EEEED0Ev
     /tmp/ccvUPO8Q.s:18504  .text._ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_14bad_exception_EEEE7disposeEv:0000000000000000 _ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_14bad_exception_EEEE7disposeEv
     /tmp/ccvUPO8Q.s:18532  .text._ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_14bad_exception_EEEE11get_deleterERKSt9type_info:0000000000000000 _ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_14bad_exception_EEEE11get_deleterERKSt9type_info
     /tmp/ccvUPO8Q.s:18556  .text._ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_14bad_exception_EEEE19get_untyped_deleterEv:0000000000000000 _ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_14bad_exception_EEEE19get_untyped_deleterEv
     /tmp/ccvUPO8Q.s:17628  .text._ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_14bad_exception_EEEED2Ev:0000000000000000 _ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_14bad_exception_EEEED2Ev
     /tmp/ccvUPO8Q.s:18132  .data.rel.ro._ZTIN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEEE:0000000000000000 _ZTIN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEEE
     /tmp/ccvUPO8Q.s:17704  .text._ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEED2Ev:0000000000000000 _ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEED1Ev
     /tmp/ccvUPO8Q.s:17737  .text._ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEED0Ev:0000000000000000 _ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEED0Ev
     /tmp/ccvUPO8Q.s:18579  .text._ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEE7disposeEv:0000000000000000 _ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEE7disposeEv
     /tmp/ccvUPO8Q.s:18607  .text._ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEE11get_deleterERKSt9type_info:0000000000000000 _ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEE11get_deleterERKSt9type_info
     /tmp/ccvUPO8Q.s:18631  .text._ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEE19get_untyped_deleterEv:0000000000000000 _ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEE19get_untyped_deleterEv
     /tmp/ccvUPO8Q.s:17704  .text._ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEED2Ev:0000000000000000 _ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEED2Ev
     /tmp/ccvUPO8Q.s:18654  .text._ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEE5cloneEv:0000000000000000 _ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEE5cloneEv
     /tmp/ccvUPO8Q.s:18765  .text._ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEE7rethrowEv:0000000000000000 _ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEE7rethrowEv
     /tmp/ccvUPO8Q.s:18751  .text._ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEE5cloneEv:000000000000007c _ZTv0_n24_NK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEE5cloneEv
     /tmp/ccvUPO8Q.s:18830  .text._ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEE7rethrowEv:0000000000000057 _ZTv0_n32_NK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEE7rethrowEv
     /tmp/ccvUPO8Q.s:17794  .data.rel.ro.local._ZTTN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEEE:0000000000000000 _ZTTN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEEE
     /tmp/ccvUPO8Q.s:18169  .data.rel.ro._ZTIN5boost16exception_detail19error_info_injectorINS_17bad_function_callEEE:0000000000000000 _ZTIN5boost16exception_detail19error_info_injectorINS_17bad_function_callEEE
     /tmp/ccvUPO8Q.s:18190  .data.rel.ro._ZTIN5boost16exception_detail10clone_implINS0_14bad_exception_EEE:0000000000000000 _ZTIN5boost16exception_detail10clone_implINS0_14bad_exception_EEE
     /tmp/ccvUPO8Q.s:18844  .text._ZNK5boost16exception_detail10clone_implINS0_14bad_exception_EE5cloneEv:0000000000000000 _ZNK5boost16exception_detail10clone_implINS0_14bad_exception_EE5cloneEv
     /tmp/ccvUPO8Q.s:18955  .text._ZNK5boost16exception_detail10clone_implINS0_14bad_exception_EE7rethrowEv:0000000000000000 _ZNK5boost16exception_detail10clone_implINS0_14bad_exception_EE7rethrowEv
     /tmp/ccvUPO8Q.s:18941  .text._ZNK5boost16exception_detail10clone_implINS0_14bad_exception_EE5cloneEv:000000000000007c _ZTv0_n24_NK5boost16exception_detail10clone_implINS0_14bad_exception_EE5cloneEv
     /tmp/ccvUPO8Q.s:19020  .text._ZNK5boost16exception_detail10clone_implINS0_14bad_exception_EE7rethrowEv:0000000000000057 _ZTv0_n32_NK5boost16exception_detail10clone_implINS0_14bad_exception_EE7rethrowEv
     /tmp/ccvUPO8Q.s:17844  .data.rel.ro.local._ZTTN5boost16exception_detail10clone_implINS0_14bad_exception_EEE:0000000000000000 _ZTTN5boost16exception_detail10clone_implINS0_14bad_exception_EEE
     /tmp/ccvUPO8Q.s:18211  .data.rel.ro._ZTIN5boost16exception_detail10clone_implINS0_10bad_alloc_EEE:0000000000000000 _ZTIN5boost16exception_detail10clone_implINS0_10bad_alloc_EEE
     /tmp/ccvUPO8Q.s:19034  .text._ZNK5boost16exception_detail10clone_implINS0_10bad_alloc_EE5cloneEv:0000000000000000 _ZNK5boost16exception_detail10clone_implINS0_10bad_alloc_EE5cloneEv
     /tmp/ccvUPO8Q.s:19145  .text._ZNK5boost16exception_detail10clone_implINS0_10bad_alloc_EE7rethrowEv:0000000000000000 _ZNK5boost16exception_detail10clone_implINS0_10bad_alloc_EE7rethrowEv
     /tmp/ccvUPO8Q.s:19131  .text._ZNK5boost16exception_detail10clone_implINS0_10bad_alloc_EE5cloneEv:000000000000007c _ZTv0_n24_NK5boost16exception_detail10clone_implINS0_10bad_alloc_EE5cloneEv
     /tmp/ccvUPO8Q.s:19210  .text._ZNK5boost16exception_detail10clone_implINS0_10bad_alloc_EE7rethrowEv:0000000000000057 _ZTv0_n32_NK5boost16exception_detail10clone_implINS0_10bad_alloc_EE7rethrowEv
     /tmp/ccvUPO8Q.s:17879  .data.rel.ro.local._ZTTN5boost16exception_detail10clone_implINS0_10bad_alloc_EEE:0000000000000000 _ZTTN5boost16exception_detail10clone_implINS0_10bad_alloc_EEE
     /tmp/ccvUPO8Q.s:17965  .data.rel.ro._ZTCN2gr5lfast12costas2_implE0_NS0_7costas2E:0000000000000000 _ZTCN2gr5lfast12costas2_implE0_NS0_7costas2E
     /tmp/ccvUPO8Q.s:18248  .data.rel.ro._ZTIN2gr5lfast7costas2E:0000000000000000 _ZTIN2gr5lfast7costas2E
     /tmp/ccvUPO8Q.s:18269  .data.rel.ro._ZTIN5boost16exception_detail14bad_exception_E:0000000000000000 _ZTIN5boost16exception_detail14bad_exception_E
     /tmp/ccvUPO8Q.s:18290  .data.rel.ro._ZTIN5boost16exception_detail10bad_alloc_E:0000000000000000 _ZTIN5boost16exception_detail10bad_alloc_E
     /tmp/ccvUPO8Q.s:18311  .data.rel.ro._ZTIN5boost17bad_function_callE:0000000000000000 _ZTIN5boost17bad_function_callE
     /tmp/ccvUPO8Q.s:18327  .data.rel.ro._ZTIN5boost6system12system_errorE:0000000000000000 _ZTIN5boost6system12system_errorE
     /tmp/ccvUPO8Q.s:18343  .data.rel.ro._ZTIN5boost6detail15sp_counted_baseE:0000000000000000 _ZTIN5boost6detail15sp_counted_baseE
     /tmp/ccvUPO8Q.s:18358  .data.rel.ro._ZTIN5boost16exception_detail10clone_baseE:0000000000000000 _ZTIN5boost16exception_detail10clone_baseE
     /tmp/ccvUPO8Q.s:18373  .data.rel.ro._ZTIN5boost9exceptionE:0000000000000000 _ZTIN5boost9exceptionE
     /tmp/ccvUPO8Q.s:18125  .rodata._ZTSN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_14bad_exception_EEEEE:0000000000000000 _ZTSN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_14bad_exception_EEEEE
     /tmp/ccvUPO8Q.s:18141  .rodata._ZTSN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEEE:0000000000000000 _ZTSN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEEE
     /tmp/ccvUPO8Q.s:18162  .rodata._ZTSN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEEE:0000000000000000 _ZTSN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEEE
     /tmp/ccvUPO8Q.s:18183  .rodata._ZTSN5boost16exception_detail19error_info_injectorINS_17bad_function_callEEE:0000000000000000 _ZTSN5boost16exception_detail19error_info_injectorINS_17bad_function_callEEE
     /tmp/ccvUPO8Q.s:18204  .rodata._ZTSN5boost16exception_detail10clone_implINS0_14bad_exception_EEE:0000000000000000 _ZTSN5boost16exception_detail10clone_implINS0_14bad_exception_EEE
     /tmp/ccvUPO8Q.s:18225  .rodata._ZTSN5boost16exception_detail10clone_implINS0_10bad_alloc_EEE:0000000000000000 _ZTSN5boost16exception_detail10clone_implINS0_10bad_alloc_EEE
     /tmp/ccvUPO8Q.s:18241  .rodata._ZTSN2gr5lfast12costas2_implE:0000000000000000 _ZTSN2gr5lfast12costas2_implE
     /tmp/ccvUPO8Q.s:18262  .rodata._ZTSN2gr5lfast7costas2E:0000000000000000 _ZTSN2gr5lfast7costas2E
     /tmp/ccvUPO8Q.s:18283  .rodata._ZTSN5boost16exception_detail14bad_exception_E:0000000000000000 _ZTSN5boost16exception_detail14bad_exception_E
     /tmp/ccvUPO8Q.s:18304  .rodata._ZTSN5boost16exception_detail10bad_alloc_E:0000000000000000 _ZTSN5boost16exception_detail10bad_alloc_E
     /tmp/ccvUPO8Q.s:18320  .rodata._ZTSN5boost17bad_function_callE:0000000000000000 _ZTSN5boost17bad_function_callE
     /tmp/ccvUPO8Q.s:18336  .rodata._ZTSN5boost6system12system_errorE:0000000000000000 _ZTSN5boost6system12system_errorE
     /tmp/ccvUPO8Q.s:18351  .rodata._ZTSN5boost6detail15sp_counted_baseE:0000000000000000 _ZTSN5boost6detail15sp_counted_baseE
     /tmp/ccvUPO8Q.s:18366  .rodata._ZTSN5boost16exception_detail10clone_baseE:0000000000000000 _ZTSN5boost16exception_detail10clone_baseE
     /tmp/ccvUPO8Q.s:18381  .rodata._ZTSN5boost9exceptionE:0000000000000000 _ZTSN5boost9exceptionE
     /tmp/ccvUPO8Q.s:18388  .bss._ZN5boost16exception_detail37exception_ptr_static_exception_objectINS0_10bad_alloc_EE1eE:0000000000000000 _ZN5boost16exception_detail37exception_ptr_static_exception_objectINS0_10bad_alloc_EE1eE
     /tmp/ccvUPO8Q.s:18395  .bss._ZN5boost16exception_detail37exception_ptr_static_exception_objectINS0_14bad_exception_EE1eE:0000000000000000 _ZN5boost16exception_detail37exception_ptr_static_exception_objectINS0_14bad_exception_EE1eE
     /tmp/ccvUPO8Q.s:18402  .bss._ZGVN5boost16exception_detail37exception_ptr_static_exception_objectINS0_10bad_alloc_EE1eE:0000000000000000 _ZGVN5boost16exception_detail37exception_ptr_static_exception_objectINS0_10bad_alloc_EE1eE
GAS LISTING /tmp/ccvUPO8Q.s 			page 756


     /tmp/ccvUPO8Q.s:18409  .bss._ZGVN5boost16exception_detail37exception_ptr_static_exception_objectINS0_14bad_exception_EE1eE:0000000000000000 _ZGVN5boost16exception_detail37exception_ptr_static_exception_objectINS0_14bad_exception_EE1eE
     /tmp/ccvUPO8Q.s:18413  .text:0000000000001860 _Z41__static_initialization_and_destruction_0ii
     /tmp/ccvUPO8Q.s:19224  .text._ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEEC1ERKS5_NS5_9clone_tagE:0000000000000000 _ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEEC1ERKS5_NS5_9clone_tagE
     /tmp/ccvUPO8Q.s:19334  .text._ZN5boost16exception_detail10clone_implINS0_14bad_exception_EEC1ERKS3_NS3_9clone_tagE:0000000000000000 _ZN5boost16exception_detail10clone_implINS0_14bad_exception_EEC1ERKS3_NS3_9clone_tagE
     /tmp/ccvUPO8Q.s:19442  .text._ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EEC1ERKS3_NS3_9clone_tagE:0000000000000000 _ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EEC1ERKS3_NS3_9clone_tagE
     /tmp/ccvUPO8Q.s:19548  .text:0000000000001971 _GLOBAL__sub_I__ZN2gr5lfast7costas24makeEfi
                           .group:0000000000000000 _ZNSt9exceptionC5Ev
                           .group:0000000000000000 _ZNSt13bad_exceptionC5Ev
                           .group:0000000000000000 _ZNSt9bad_allocC5Ev
                           .group:0000000000000000 _ZNSt9exceptionC5ERKS_
                           .group:0000000000000000 _ZN5boost10error_infoINS_15throw_function_EPKcEC5ES3_
                           .group:0000000000000000 _ZN5boost10error_infoINS_11throw_file_EPKcEC5ES3_
                           .group:0000000000000000 _ZN5boost10error_infoINS_11throw_line_EiEC5Ei
                           .group:0000000000000000 _ZN5boost9exceptionC5Ev
                           .group:0000000000000000 _ZN5boost9exceptionD5Ev
                           .group:0000000000000000 _ZN5boost16exception_detail10clone_baseD5Ev
                           .group:0000000000000000 _ZN5boost6detail15sp_counted_baseC5Ev
                           .group:0000000000000000 _ZN5boost6detail15sp_counted_baseD5Ev
                           .group:0000000000000000 _ZN5boost6detail12shared_countC5Ev
                           .group:0000000000000000 _ZN5boost6detail12shared_countD5Ev
                           .group:0000000000000000 _ZN5boost6detail12shared_countC5ERKS1_
                           .group:0000000000000000 _ZNSt7complexIfEC5Eff
                           .group:0000000000000000 _ZN5boost6system12system_errorD5Ev
                           .group:0000000000000000 _ZN5boost13function_baseC5Ev
                           .group:0000000000000000 _ZN5boost17bad_function_callC5Ev
                           .group:0000000000000000 _ZN5boost10shared_ptrIN2gr12io_signatureEED5Ev
                           .group:0000000000000000 _ZN2gr5tag_tD5Ev
                           .group:0000000000000000 _ZN5boost10shared_ptrIKNS_16exception_detail10clone_baseEED5Ev
                           .group:0000000000000000 _ZN5boost13exception_ptrC5ERKNS_10shared_ptrIKNS_16exception_detail10clone_baseEEE
                           .group:0000000000000000 _ZN5boost16exception_detail10bad_alloc_D5Ev
                           .group:0000000000000000 _ZN5boost16exception_detail14bad_exception_D5Ev
                           .group:0000000000000000 _ZN5boost9exceptionC5ERKS0_
                           .group:0000000000000000 _ZN5boost13exception_ptrD5Ev
                           .group:0000000000000000 _ZN5boost13exception_ptrC5ERKS0_
                           .group:0000000000000000 _ZN5boost6none_tC5ENS0_8init_tagE
                           .group:0000000000000000 _ZN5boost10shared_ptrIN2gr5lfast12costas2_implEED5Ev
                           .group:0000000000000000 _ZN2gr10sync_blockD5Ev
                           .group:0000000000000000 _ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEEC5Ev
                           .group:0000000000000000 _ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEED5Ev
                           .group:0000000000000000 _ZN5boost16exception_detail10clone_baseC5ERKS1_
                           .group:0000000000000000 _ZN5boost13intrusive_ptrIN3pmt8pmt_baseEED5Ev
                           .group:0000000000000000 _ZN5boost13intrusive_ptrIN3pmt8pmt_baseEEC5EOS3_
                           .group:0000000000000000 _ZN5boost13intrusive_ptrIN3pmt8pmt_baseEEC5ERKS3_
                           .group:0000000000000000 _ZNSt10_Head_baseILm0ERKN5boost13intrusive_ptrIN3pmt8pmt_baseEEELb0EEC5ES6_
                           .group:0000000000000000 _ZNSt11_Tuple_implILm0EJRKN5boost13intrusive_ptrIN3pmt8pmt_baseEEEEEC5ES6_
                           .group:0000000000000000 _ZNSt5tupleIJRKN5boost13intrusive_ptrIN3pmt8pmt_baseEEEEEC5IvLb1EEES6_
                           .group:0000000000000000 _ZN5boost17bad_function_callD5Ev
                           .group:0000000000000000 _ZNSt6vectorIlSaIlEED5Ev
                           .group:0000000000000000 _ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEEC5ERKS3_
                           .group:0000000000000000 _ZN5boost10shared_ptrIKNS_16exception_detail10clone_baseEEC5ERKS4_
                           .group:0000000000000000 _ZN5boost16exception_detail10bad_alloc_C5Ev
                           .group:0000000000000000 _ZNSt9bad_allocC5ERKS_
                           .group:0000000000000000 _ZN5boost16exception_detail10bad_alloc_C5ERKS1_
                           .group:0000000000000000 _ZN5boost16exception_detail14bad_exception_C5Ev
                           .group:0000000000000000 _ZNSt13bad_exceptionC5ERKS_
                           .group:0000000000000000 _ZN5boost16exception_detail14bad_exception_C5ERKS1_
                           .group:0000000000000000 _ZNSt6vectorIiSaIiEEC5ERKS1_
GAS LISTING /tmp/ccvUPO8Q.s 			page 757


                           .group:0000000000000000 _ZN5boost10shared_ptrIN2gr11basic_blockEED5Ev
                           .group:0000000000000000 _ZN5boost10shared_ptrIN2gr5lfast7costas2EEC5INS2_12costas2_implEEEONS0_IT_EENS_6detail24sp_enable_if_convertibleIS7_S3_E4typeE
                           .group:0000000000000000 _ZNSt6vectorIN2gr5tag_tESaIS1_EEC5Ev
                           .group:0000000000000000 _ZNSt6vectorIN2gr5tag_tESaIS1_EED5Ev
                           .group:0000000000000000 _ZN9__gnu_cxx17__normal_iteratorIPKN2gr5tag_tESt6vectorIS2_SaIS2_EEEC5IPS2_EERKNS0_IT_NS_11__enable_ifIXsrSt10__are_sameISB_SA_E7__valueES7_E6__typeEEE
                           .group:0000000000000000 _ZNSt23_Rb_tree_const_iteratorISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS1_8functionIFvS5_EEEEEC5ERKSt17_Rb_tree_iteratorISA_E
                           .group:0000000000000000 _ZN5boost17bad_function_callC5ERKS0_
                           .group:0000000000000000 _ZN5boost16exception_detail19error_info_injectorINS_17bad_function_callEEC5ERKS3_
                           .group:0000000000000000 _ZNSt12_Vector_baseIlSaIlEE12_Vector_implD5Ev
                           .group:0000000000000000 _ZNSt12_Vector_baseIlSaIlEED5Ev
                           .group:0000000000000000 _ZN5boost16exception_detail10clone_baseC5Ev
                           .group:0000000000000000 _ZN5boost10shared_ptrIKNS_16exception_detail10clone_baseEEC5INS1_10clone_implINS1_10bad_alloc_EEEEEPT_
                           .group:0000000000000000 _ZN5boost10shared_ptrIKNS_16exception_detail10clone_baseEEC5INS1_10clone_implINS1_14bad_exception_EEEEEPT_
                           .group:0000000000000000 _ZNSaIiED5Ev
                           .group:0000000000000000 _ZNSt12_Vector_baseIiSaIiEE12_Vector_implD5Ev
                           .group:0000000000000000 _ZNSt12_Vector_baseIiSaIiEEC5EmRKS0_
                           .group:0000000000000000 _ZNSt12_Vector_baseIiSaIiEED5Ev
                           .group:0000000000000000 _ZNSt12_Vector_baseIN2gr5tag_tESaIS1_EE12_Vector_implD5Ev
                           .group:0000000000000000 _ZNSt12_Vector_baseIN2gr5tag_tESaIS1_EEC5Ev
                           .group:0000000000000000 _ZNSt12_Vector_baseIN2gr5tag_tESaIS1_EED5Ev
                           .group:0000000000000000 _ZN9__gnu_cxx17__normal_iteratorIPN2gr5tag_tESt6vectorIS2_SaIS2_EEEC5ERKS3_
                           .group:0000000000000000 _ZNSt17_Rb_tree_iteratorISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS1_8functionIFvS5_EEEEEC5EPSt18_Rb_tree_node_base
                           .group:0000000000000000 _ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC5IRS1_Lb1EEERKS1_OT_
                           .group:0000000000000000 _ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC5IRS1_S4_Lb1EEEOT_OT0_
                           .group:0000000000000000 _ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC5IRS1_Lb1EEEOT_RKS1_
                           .group:0000000000000000 _ZN5boost16exception_detail19error_info_injectorINS_17bad_function_callEED5Ev
                           .group:0000000000000000 _ZNSt17_Rb_tree_iteratorISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt5dequeIS5_SaIS5_EEEEC5EPSt18_Rb_tree_node_base
                           .group:0000000000000000 _ZNSaIlED5Ev
                           .group:0000000000000000 _ZNSaIiEC5ERKS_
                           .group:0000000000000000 _ZN9__gnu_cxx13new_allocatorIiED5Ev
                           .group:0000000000000000 _ZNSt12_Vector_baseIiSaIiEE12_Vector_implC5ERKS0_
                           .group:0000000000000000 _ZN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEC5ERKS2_
                           .group:0000000000000000 _ZN5boost10shared_ptrIN2gr5lfast12costas2_implEEC5INS1_11basic_blockEEERKNS0_IT_EEPS3_
                           .group:0000000000000000 _ZN5boost10shared_ptrIN2gr5lfast12costas2_implEEC5Ev
                           .group:0000000000000000 _ZNSt12_Vector_baseIN2gr5tag_tESaIS1_EE12_Vector_implC5Ev
                           .group:0000000000000000 _ZNSaIN2gr5tag_tEED5Ev
                           .group:0000000000000000 _ZN9__gnu_cxx17__normal_iteratorIPKN2gr5tag_tESt6vectorIS2_SaIS2_EEEC5ERKS4_
                           .group:0000000000000000 _ZNSt18_Rb_tree_node_baseC5Ev
                           .group:0000000000000000 _ZN9__gnu_cxx16__aligned_membufISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS2_8functionIFvS6_EEEEEC5Ev
                           .group:0000000000000000 _ZNSt13_Rb_tree_nodeISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS1_8functionIFvS5_EEEEEC5Ev
                           .group:0000000000000000 _ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC5IRPSt13_Rb_tree_nodeIS_IKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS5_8functionIFvS9_EEEEERS1_Lb1EEEOT_OT0_
                           .group:0000000000000000 _ZN5boost16exception_detail19error_info_injectorINS_17bad_function_callEEC5ERKS2_
                           .group:0000000000000000 _ZN9__gnu_cxx13new_allocatorIlED5Ev
                           .group:0000000000000000 _ZN5boost6detail12shared_countC5INS_16exception_detail10clone_implINS3_10bad_alloc_EEEEEPT_
                           .group:0000000000000000 _ZN5boost6detail12shared_countC5INS_16exception_detail10clone_implINS3_14bad_exception_EEEEEPT_
                           .group:0000000000000000 _ZN9__gnu_cxx13new_allocatorIiEC5ERKS1_
                           .group:0000000000000000 _ZNSaIN2gr5tag_tEEC5Ev
                           .group:0000000000000000 _ZN9__gnu_cxx13new_allocatorIN2gr5tag_tEED5Ev
                           .group:0000000000000000 _ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEEC5EPS5_
                           .group:0000000000000000 _ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_14bad_exception_EEEEC5EPS5_
                           .group:0000000000000000 _ZN9__gnu_cxx13new_allocatorIN2gr5tag_tEEC5Ev
                           .group:0000000000000000 _ZN5boost8functionIFvNS_13intrusive_ptrIN3pmt8pmt_baseEEEEED5Ev
                           .group:0000000000000000 _ZNSt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS0_8functionIFvS4_EEEED5Ev
                           .group:0000000000000000 _ZNSt11_Tuple_implILm0EJRKN5boost13intrusive_ptrIN3pmt8pmt_baseEEEEEC5EOS7_
                           .group:0000000000000000 _ZNSt5tupleIJRKN5boost13intrusive_ptrIN3pmt8pmt_baseEEEEEC5EOS7_
                           .group:0000000000000000 _ZN5boost9function1IvNS_13intrusive_ptrIN3pmt8pmt_baseEEEED5Ev
                           .group:0000000000000000 _ZNSt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS0_8functionIFvS4_EEEEC5IJRS5_EJEEESt21piecewise_construct_tSt5tupleIJDpT_EESD_IJDpT0_EE
GAS LISTING /tmp/ccvUPO8Q.s 			page 758


                           .group:0000000000000000 _ZNSt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS0_8functionIFvS4_EEEEC5IJRS5_EJLm0EEJEJEEERSt5tupleIJDpT_EERSC_IJDpT1_EESt12_Index_tupleIJXspT0_EEESL_IJXspT2_EEE
                           .group:0000000000000000 _ZN5boost8functionIFvNS_13intrusive_ptrIN3pmt8pmt_baseEEEEEC5Ev
                           .group:0000000000000000 _ZNSt14unary_functionIN5boost13intrusive_ptrIN3pmt8pmt_baseEEEvEC5Ev
                           .group:0000000000000000 _ZN5boost9function1IvNS_13intrusive_ptrIN3pmt8pmt_baseEEEEC5Ev
                           .group:0000000000000000 _ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_14bad_exception_EEEED5Ev
                           .group:0000000000000000 _ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEED5Ev

UNDEFINED SYMBOLS
_ZTVSt9exception
_ZTVSt13bad_exception
_ZTVSt9bad_alloc
_GLOBAL_OFFSET_TABLE_
_ZdlPvm
_Unwind_Resume
__gxx_personality_v0
_ZN3pmt3eqvERKN5boost13intrusive_ptrINS_8pmt_baseEEES5_
_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev
_ZNSt13runtime_errorD2Ev
_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5emptyEv
_ZNKSt13runtime_error4whatEv
_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEPKc
_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLEPKc
_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLERKS4_
_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv
__cxa_begin_catch
__cxa_end_catch
__cxa_call_unexpected
_ZNSt13runtime_errorC2EPKc
_ZN3pmt12dict_has_keyERKN5boost13intrusive_ptrINS_8pmt_baseEEES5_
_ZNSt9bad_allocD2Ev
_ZNSt13bad_exceptionD2Ev
_ZN2gr7sincosfEfPfS0_
_Znwm
_ZTVN2gr10sync_blockE
_ZN2gr5blockD2Ev
_ZN2gr12io_signature4makeEiii
_ZNSaIcEC1Ev
_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EPKcRKS3_
_ZN2gr10sync_blockC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN5boost10shared_ptrINS_12io_signatureEEESC_
_ZNSaIcED1Ev
_ZN2gr6blocks12control_loopC2Efff
_ZN2gr6blocks12control_loopD2Ev
_ZN3pmt7is_realEN5boost13intrusive_ptrINS_8pmt_baseEEE
_ZN3pmt9to_doubleEN5boost13intrusive_ptrINS_8pmt_baseEEE
powf
_ZN2gr5block11nitems_readEj
_ZN2gr6blocks12control_loop12advance_loopEf
_ZN2gr6blocks12control_loop10phase_wrapEv
_ZN2gr6blocks12control_loop15frequency_limitEv
sinf
cosf
_ZN3pmt21intrusive_ptr_releaseEPNS_8pmt_baseE
_ZN3pmt21intrusive_ptr_add_refEPNS_8pmt_baseE
__cxa_guard_acquire
__cxa_guard_release
__dso_handle
__cxa_atexit
GAS LISTING /tmp/ccvUPO8Q.s 			page 759


__cxa_guard_abort
_ZN8gnuradio6detail10sptr_magic18fetch_initial_sptrEPN2gr11basic_blockE
__cxa_rethrow
_ZNSt13runtime_errorC2ERKS_
__cxa_allocate_exception
__cxa_throw
__cxa_free_exception
_ZTIN2gr11basic_blockE
__dynamic_cast
__mulsc3
_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_
_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base
_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base
_ZdlPv
_ZSt17__throw_bad_allocv
memmove
_ZNKSt13bad_exception4whatEv
_ZNKSt9bad_alloc4whatEv
_ZN2gr12msg_accepter4postEN5boost13intrusive_ptrIN3pmt8pmt_baseEEES5_
_ZN2gr5block22set_processor_affinityERKSt6vectorIiSaIiEE
_ZN2gr5block24unset_processor_affinityEv
_ZN2gr10sync_block8forecastEiRSt6vectorIiSaIiEE
_ZN2gr10sync_block12general_workEiRSt6vectorIiSaIiEERS1_IPKvSaIS6_EERS1_IPvSaISA_EE
_ZN2gr5block5startEv
_ZN2gr5block4stopEv
_ZN2gr10sync_block28fixed_rate_ninput_to_noutputEi
_ZN2gr10sync_block28fixed_rate_noutput_to_ninputEi
_ZN2gr6blocks12control_loop18set_loop_bandwidthEf
__cxa_pure_virtual
_ZTVN10__cxxabiv120__si_class_type_infoE
_ZTVN10__cxxabiv121__vmi_class_type_infoE
_ZTIN2gr10sync_blockE
_ZTIN2gr6blocks12control_loopE
_ZTISt13bad_exception
_ZTISt9bad_alloc
_ZTISt13runtime_error
_ZTVN10__cxxabiv117__class_type_infoE
_ZN5boost6system16generic_categoryEv
_ZN5boost6system15system_categoryEv
_ZNSt8ios_base4InitC1Ev
_ZNSt8ios_base4InitD1Ev
