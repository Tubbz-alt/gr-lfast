GAS LISTING /tmp/ccsIN87E.s 			page 1


   1              		.file	"costas2_impl.cc"
   2              		.text
   3              	.Ltext0:
   4              		.section	.rodata
   7              	_ZStL19piecewise_construct:
   8 0000 00       		.zero	1
   9              		.section	.text._ZNSt9exceptionC2Ev,"axG",@progbits,_ZNSt9exceptionC5Ev,comdat
  10              		.align 2
  11              		.weak	_ZNSt9exceptionC2Ev
  13              	_ZNSt9exceptionC2Ev:
  14              	.LFB304:
  15              		.file 1 "/usr/include/c++/6/exception"
   1:/usr/include/c++/6/exception **** // Exception Handling support header for -*- C++ -*-
   2:/usr/include/c++/6/exception **** 
   3:/usr/include/c++/6/exception **** // Copyright (C) 1995-2016 Free Software Foundation, Inc.
   4:/usr/include/c++/6/exception **** //
   5:/usr/include/c++/6/exception **** // This file is part of GCC.
   6:/usr/include/c++/6/exception **** //
   7:/usr/include/c++/6/exception **** // GCC is free software; you can redistribute it and/or modify
   8:/usr/include/c++/6/exception **** // it under the terms of the GNU General Public License as published by
   9:/usr/include/c++/6/exception **** // the Free Software Foundation; either version 3, or (at your option)
  10:/usr/include/c++/6/exception **** // any later version.
  11:/usr/include/c++/6/exception **** //
  12:/usr/include/c++/6/exception **** // GCC is distributed in the hope that it will be useful,
  13:/usr/include/c++/6/exception **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  14:/usr/include/c++/6/exception **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  15:/usr/include/c++/6/exception **** // GNU General Public License for more details.
  16:/usr/include/c++/6/exception **** //
  17:/usr/include/c++/6/exception **** // Under Section 7 of GPL version 3, you are granted additional
  18:/usr/include/c++/6/exception **** // permissions described in the GCC Runtime Library Exception, version
  19:/usr/include/c++/6/exception **** // 3.1, as published by the Free Software Foundation.
  20:/usr/include/c++/6/exception **** 
  21:/usr/include/c++/6/exception **** // You should have received a copy of the GNU General Public License and
  22:/usr/include/c++/6/exception **** // a copy of the GCC Runtime Library Exception along with this program;
  23:/usr/include/c++/6/exception **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  24:/usr/include/c++/6/exception **** // <http://www.gnu.org/licenses/>.
  25:/usr/include/c++/6/exception **** 
  26:/usr/include/c++/6/exception **** /** @file exception
  27:/usr/include/c++/6/exception ****  *  This is a Standard C++ Library header.
  28:/usr/include/c++/6/exception ****  */
  29:/usr/include/c++/6/exception **** 
  30:/usr/include/c++/6/exception **** #ifndef __EXCEPTION__
  31:/usr/include/c++/6/exception **** #define __EXCEPTION__
  32:/usr/include/c++/6/exception **** 
  33:/usr/include/c++/6/exception **** #pragma GCC system_header
  34:/usr/include/c++/6/exception **** 
  35:/usr/include/c++/6/exception **** #pragma GCC visibility push(default)
  36:/usr/include/c++/6/exception **** 
  37:/usr/include/c++/6/exception **** #include <bits/c++config.h>
  38:/usr/include/c++/6/exception **** #if !(defined(__ARM_EABI__) && !defined(__ARM_PCS_VFP))
  39:/usr/include/c++/6/exception **** #include <bits/atomic_lockfree_defines.h>
  40:/usr/include/c++/6/exception **** #endif
  41:/usr/include/c++/6/exception **** 
  42:/usr/include/c++/6/exception **** extern "C++" {
  43:/usr/include/c++/6/exception **** 
  44:/usr/include/c++/6/exception **** namespace std
  45:/usr/include/c++/6/exception **** {
GAS LISTING /tmp/ccsIN87E.s 			page 2


  46:/usr/include/c++/6/exception ****   /**
  47:/usr/include/c++/6/exception ****    * @defgroup exceptions Exceptions
  48:/usr/include/c++/6/exception ****    * @ingroup diagnostics
  49:/usr/include/c++/6/exception ****    *
  50:/usr/include/c++/6/exception ****    * Classes and functions for reporting errors via exception classes.
  51:/usr/include/c++/6/exception ****    * @{
  52:/usr/include/c++/6/exception ****    */
  53:/usr/include/c++/6/exception **** 
  54:/usr/include/c++/6/exception ****   /**
  55:/usr/include/c++/6/exception ****    *  @brief Base class for all library exceptions.
  56:/usr/include/c++/6/exception ****    *
  57:/usr/include/c++/6/exception ****    *  This is the base class for all exceptions thrown by the standard
  58:/usr/include/c++/6/exception ****    *  library, and by certain language expressions.  You are free to derive
  59:/usr/include/c++/6/exception ****    *  your own %exception classes, or use a different hierarchy, or to
  60:/usr/include/c++/6/exception ****    *  throw non-class data (e.g., fundamental types).
  61:/usr/include/c++/6/exception ****    */
  62:/usr/include/c++/6/exception ****   class exception
  63:/usr/include/c++/6/exception ****   {
  64:/usr/include/c++/6/exception ****   public:
  65:/usr/include/c++/6/exception ****     exception() _GLIBCXX_USE_NOEXCEPT { }
  16              		.loc 1 65 0
  17              		.cfi_startproc
  18 0000 55       		pushq	%rbp
  19              		.cfi_def_cfa_offset 16
  20              		.cfi_offset 6, -16
  21 0001 4889E5   		movq	%rsp, %rbp
  22              		.cfi_def_cfa_register 6
  23 0004 48897DF8 		movq	%rdi, -8(%rbp)
  24              	.LBB2:
  25              		.loc 1 65 0
  26 0008 488D1500 		leaq	16+_ZTVSt9exception(%rip), %rdx
  26      000000
  27 000f 488B45F8 		movq	-8(%rbp), %rax
  28 0013 488910   		movq	%rdx, (%rax)
  29              	.LBE2:
  30 0016 90       		nop
  31 0017 5D       		popq	%rbp
  32              		.cfi_def_cfa 7, 8
  33 0018 C3       		ret
  34              		.cfi_endproc
  35              	.LFE304:
  37              		.weak	_ZNSt9exceptionC1Ev
  38              		.set	_ZNSt9exceptionC1Ev,_ZNSt9exceptionC2Ev
  39              		.section	.text._ZNSt13bad_exceptionC2Ev,"axG",@progbits,_ZNSt13bad_exceptionC5Ev,comdat
  40              		.align 2
  41              		.weak	_ZNSt13bad_exceptionC2Ev
  43              	_ZNSt13bad_exceptionC2Ev:
  44              	.LFB307:
  66:/usr/include/c++/6/exception ****     virtual ~exception() _GLIBCXX_TXN_SAFE_DYN _GLIBCXX_USE_NOEXCEPT;
  67:/usr/include/c++/6/exception **** 
  68:/usr/include/c++/6/exception ****     /** Returns a C-style character string describing the general cause
  69:/usr/include/c++/6/exception ****      *  of the current error.  */
  70:/usr/include/c++/6/exception ****     virtual const char*
  71:/usr/include/c++/6/exception ****     what() const _GLIBCXX_TXN_SAFE_DYN _GLIBCXX_USE_NOEXCEPT;
  72:/usr/include/c++/6/exception ****   };
  73:/usr/include/c++/6/exception **** 
  74:/usr/include/c++/6/exception ****   /** If an %exception is thrown which is not listed in a function's
GAS LISTING /tmp/ccsIN87E.s 			page 3


  75:/usr/include/c++/6/exception ****    *  %exception specification, one of these may be thrown.  */
  76:/usr/include/c++/6/exception ****   class bad_exception : public exception
  77:/usr/include/c++/6/exception ****   {
  78:/usr/include/c++/6/exception ****   public:
  79:/usr/include/c++/6/exception ****     bad_exception() _GLIBCXX_USE_NOEXCEPT { }
  45              		.loc 1 79 0
  46              		.cfi_startproc
  47 0000 55       		pushq	%rbp
  48              		.cfi_def_cfa_offset 16
  49              		.cfi_offset 6, -16
  50 0001 4889E5   		movq	%rsp, %rbp
  51              		.cfi_def_cfa_register 6
  52 0004 4883EC10 		subq	$16, %rsp
  53 0008 48897DF8 		movq	%rdi, -8(%rbp)
  54              	.LBB3:
  55              		.loc 1 79 0
  56 000c 488B45F8 		movq	-8(%rbp), %rax
  57 0010 4889C7   		movq	%rax, %rdi
  58 0013 E8000000 		call	_ZNSt9exceptionC2Ev
  58      00
  59 0018 488D1500 		leaq	16+_ZTVSt13bad_exception(%rip), %rdx
  59      000000
  60 001f 488B45F8 		movq	-8(%rbp), %rax
  61 0023 488910   		movq	%rdx, (%rax)
  62              	.LBE3:
  63 0026 90       		nop
  64 0027 C9       		leave
  65              		.cfi_def_cfa 7, 8
  66 0028 C3       		ret
  67              		.cfi_endproc
  68              	.LFE307:
  70              		.weak	_ZNSt13bad_exceptionC1Ev
  71              		.set	_ZNSt13bad_exceptionC1Ev,_ZNSt13bad_exceptionC2Ev
  72              		.section	.text._ZNSt9bad_allocC2Ev,"axG",@progbits,_ZNSt9bad_allocC5Ev,comdat
  73              		.align 2
  74              		.weak	_ZNSt9bad_allocC2Ev
  76              	_ZNSt9bad_allocC2Ev:
  77              	.LFB334:
  78              		.file 2 "/usr/include/c++/6/new"
   1:/usr/include/c++/6/new **** // The -*- C++ -*- dynamic memory management header.
   2:/usr/include/c++/6/new **** 
   3:/usr/include/c++/6/new **** // Copyright (C) 1994-2016 Free Software Foundation, Inc.
   4:/usr/include/c++/6/new **** 
   5:/usr/include/c++/6/new **** // This file is part of GCC.
   6:/usr/include/c++/6/new **** //
   7:/usr/include/c++/6/new **** // GCC is free software; you can redistribute it and/or modify
   8:/usr/include/c++/6/new **** // it under the terms of the GNU General Public License as published by
   9:/usr/include/c++/6/new **** // the Free Software Foundation; either version 3, or (at your option)
  10:/usr/include/c++/6/new **** // any later version.
  11:/usr/include/c++/6/new **** // 
  12:/usr/include/c++/6/new **** // GCC is distributed in the hope that it will be useful,
  13:/usr/include/c++/6/new **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  14:/usr/include/c++/6/new **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  15:/usr/include/c++/6/new **** // GNU General Public License for more details.
  16:/usr/include/c++/6/new **** // 
  17:/usr/include/c++/6/new **** // Under Section 7 of GPL version 3, you are granted additional
  18:/usr/include/c++/6/new **** // permissions described in the GCC Runtime Library Exception, version
GAS LISTING /tmp/ccsIN87E.s 			page 4


  19:/usr/include/c++/6/new **** // 3.1, as published by the Free Software Foundation.
  20:/usr/include/c++/6/new **** 
  21:/usr/include/c++/6/new **** // You should have received a copy of the GNU General Public License and
  22:/usr/include/c++/6/new **** // a copy of the GCC Runtime Library Exception along with this program;
  23:/usr/include/c++/6/new **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  24:/usr/include/c++/6/new **** // <http://www.gnu.org/licenses/>.
  25:/usr/include/c++/6/new **** 
  26:/usr/include/c++/6/new **** /** @file new
  27:/usr/include/c++/6/new ****  *  This is a Standard C++ Library header.
  28:/usr/include/c++/6/new ****  *
  29:/usr/include/c++/6/new ****  *  The header @c new defines several functions to manage dynamic memory and
  30:/usr/include/c++/6/new ****  *  handling memory allocation errors; see
  31:/usr/include/c++/6/new ****  *  http://gcc.gnu.org/onlinedocs/libstdc++/18_support/howto.html#4 for more.
  32:/usr/include/c++/6/new ****  */
  33:/usr/include/c++/6/new **** 
  34:/usr/include/c++/6/new **** #ifndef _NEW
  35:/usr/include/c++/6/new **** #define _NEW
  36:/usr/include/c++/6/new **** 
  37:/usr/include/c++/6/new **** #pragma GCC system_header
  38:/usr/include/c++/6/new **** 
  39:/usr/include/c++/6/new **** #include <bits/c++config.h>
  40:/usr/include/c++/6/new **** #include <exception>
  41:/usr/include/c++/6/new **** 
  42:/usr/include/c++/6/new **** #pragma GCC visibility push(default)
  43:/usr/include/c++/6/new **** 
  44:/usr/include/c++/6/new **** extern "C++" {
  45:/usr/include/c++/6/new **** 
  46:/usr/include/c++/6/new **** namespace std 
  47:/usr/include/c++/6/new **** {
  48:/usr/include/c++/6/new ****   /**
  49:/usr/include/c++/6/new ****    *  @brief  Exception possibly thrown by @c new.
  50:/usr/include/c++/6/new ****    *  @ingroup exceptions
  51:/usr/include/c++/6/new ****    *
  52:/usr/include/c++/6/new ****    *  @c bad_alloc (or classes derived from it) is used to report allocation
  53:/usr/include/c++/6/new ****    *  errors from the throwing forms of @c new.  */
  54:/usr/include/c++/6/new ****   class bad_alloc : public exception 
  55:/usr/include/c++/6/new ****   {
  56:/usr/include/c++/6/new ****   public:
  57:/usr/include/c++/6/new ****     bad_alloc() throw() { }
  79              		.loc 2 57 0
  80              		.cfi_startproc
  81 0000 55       		pushq	%rbp
  82              		.cfi_def_cfa_offset 16
  83              		.cfi_offset 6, -16
  84 0001 4889E5   		movq	%rsp, %rbp
  85              		.cfi_def_cfa_register 6
  86 0004 4883EC10 		subq	$16, %rsp
  87 0008 48897DF8 		movq	%rdi, -8(%rbp)
  88              	.LBB4:
  89              		.loc 2 57 0
  90 000c 488B45F8 		movq	-8(%rbp), %rax
  91 0010 4889C7   		movq	%rax, %rdi
  92 0013 E8000000 		call	_ZNSt9exceptionC2Ev
  92      00
  93 0018 488D1500 		leaq	16+_ZTVSt9bad_alloc(%rip), %rdx
  93      000000
  94 001f 488B45F8 		movq	-8(%rbp), %rax
GAS LISTING /tmp/ccsIN87E.s 			page 5


  95 0023 488910   		movq	%rdx, (%rax)
  96              	.LBE4:
  97 0026 90       		nop
  98 0027 C9       		leave
  99              		.cfi_def_cfa 7, 8
 100 0028 C3       		ret
 101              		.cfi_endproc
 102              	.LFE334:
 104              		.weak	_ZNSt9bad_allocC1Ev
 105              		.set	_ZNSt9bad_allocC1Ev,_ZNSt9bad_allocC2Ev
 106              		.section	.text._ZnwmPv,"axG",@progbits,_ZnwmPv,comdat
 107              		.weak	_ZnwmPv
 109              	_ZnwmPv:
 110              	.LFB339:
  58:/usr/include/c++/6/new **** 
  59:/usr/include/c++/6/new ****     // This declaration is not useless:
  60:/usr/include/c++/6/new ****     // http://gcc.gnu.org/onlinedocs/gcc-3.0.2/gcc_6.html#SEC118
  61:/usr/include/c++/6/new ****     virtual ~bad_alloc() throw();
  62:/usr/include/c++/6/new **** 
  63:/usr/include/c++/6/new ****     // See comment in eh_exception.cc.
  64:/usr/include/c++/6/new ****     virtual const char* what() const throw();
  65:/usr/include/c++/6/new ****   };
  66:/usr/include/c++/6/new **** 
  67:/usr/include/c++/6/new **** #if __cplusplus >= 201103L
  68:/usr/include/c++/6/new ****   class bad_array_new_length : public bad_alloc
  69:/usr/include/c++/6/new ****   {
  70:/usr/include/c++/6/new ****   public:
  71:/usr/include/c++/6/new ****     bad_array_new_length() throw() { };
  72:/usr/include/c++/6/new **** 
  73:/usr/include/c++/6/new ****     // This declaration is not useless:
  74:/usr/include/c++/6/new ****     // http://gcc.gnu.org/onlinedocs/gcc-3.0.2/gcc_6.html#SEC118
  75:/usr/include/c++/6/new ****     virtual ~bad_array_new_length() throw();
  76:/usr/include/c++/6/new **** 
  77:/usr/include/c++/6/new ****     // See comment in eh_exception.cc.
  78:/usr/include/c++/6/new ****     virtual const char* what() const throw();
  79:/usr/include/c++/6/new ****   };
  80:/usr/include/c++/6/new **** #endif
  81:/usr/include/c++/6/new **** 
  82:/usr/include/c++/6/new ****   struct nothrow_t
  83:/usr/include/c++/6/new ****   {
  84:/usr/include/c++/6/new **** #if __cplusplus >= 201103L
  85:/usr/include/c++/6/new ****     explicit nothrow_t() = default;
  86:/usr/include/c++/6/new **** #endif
  87:/usr/include/c++/6/new ****   };
  88:/usr/include/c++/6/new **** 
  89:/usr/include/c++/6/new ****   extern const nothrow_t nothrow;
  90:/usr/include/c++/6/new **** 
  91:/usr/include/c++/6/new ****   /** If you write your own error handler to be called by @c new, it must
  92:/usr/include/c++/6/new ****    *  be of this type.  */
  93:/usr/include/c++/6/new ****   typedef void (*new_handler)();
  94:/usr/include/c++/6/new **** 
  95:/usr/include/c++/6/new ****   /// Takes a replacement handler as the argument, returns the
  96:/usr/include/c++/6/new ****   /// previous handler.
  97:/usr/include/c++/6/new ****   new_handler set_new_handler(new_handler) throw();
  98:/usr/include/c++/6/new **** 
  99:/usr/include/c++/6/new **** #if __cplusplus >= 201103L
 100:/usr/include/c++/6/new ****   /// Return the current new handler.
GAS LISTING /tmp/ccsIN87E.s 			page 6


 101:/usr/include/c++/6/new ****   new_handler get_new_handler() noexcept;
 102:/usr/include/c++/6/new **** #endif
 103:/usr/include/c++/6/new **** } // namespace std
 104:/usr/include/c++/6/new **** 
 105:/usr/include/c++/6/new **** //@{
 106:/usr/include/c++/6/new **** /** These are replaceable signatures:
 107:/usr/include/c++/6/new ****  *  - normal single new and delete (no arguments, throw @c bad_alloc on error)
 108:/usr/include/c++/6/new ****  *  - normal array new and delete (same)
 109:/usr/include/c++/6/new ****  *  - @c nothrow single new and delete (take a @c nothrow argument, return
 110:/usr/include/c++/6/new ****  *    @c NULL on error)
 111:/usr/include/c++/6/new ****  *  - @c nothrow array new and delete (same)
 112:/usr/include/c++/6/new ****  *
 113:/usr/include/c++/6/new ****  *  Placement new and delete signatures (take a memory address argument,
 114:/usr/include/c++/6/new ****  *  does nothing) may not be replaced by a user's program.
 115:/usr/include/c++/6/new **** */
 116:/usr/include/c++/6/new **** void* operator new(std::size_t) _GLIBCXX_THROW (std::bad_alloc)
 117:/usr/include/c++/6/new ****   __attribute__((__externally_visible__));
 118:/usr/include/c++/6/new **** void* operator new[](std::size_t) _GLIBCXX_THROW (std::bad_alloc)
 119:/usr/include/c++/6/new ****   __attribute__((__externally_visible__));
 120:/usr/include/c++/6/new **** void operator delete(void*) _GLIBCXX_USE_NOEXCEPT
 121:/usr/include/c++/6/new ****   __attribute__((__externally_visible__));
 122:/usr/include/c++/6/new **** void operator delete[](void*) _GLIBCXX_USE_NOEXCEPT
 123:/usr/include/c++/6/new ****   __attribute__((__externally_visible__));
 124:/usr/include/c++/6/new **** #if __cpp_sized_deallocation
 125:/usr/include/c++/6/new **** void operator delete(void*, std::size_t) _GLIBCXX_USE_NOEXCEPT
 126:/usr/include/c++/6/new ****   __attribute__((__externally_visible__));
 127:/usr/include/c++/6/new **** void operator delete[](void*, std::size_t) _GLIBCXX_USE_NOEXCEPT
 128:/usr/include/c++/6/new ****   __attribute__((__externally_visible__));
 129:/usr/include/c++/6/new **** #endif
 130:/usr/include/c++/6/new **** void* operator new(std::size_t, const std::nothrow_t&) _GLIBCXX_USE_NOEXCEPT
 131:/usr/include/c++/6/new ****   __attribute__((__externally_visible__));
 132:/usr/include/c++/6/new **** void* operator new[](std::size_t, const std::nothrow_t&) _GLIBCXX_USE_NOEXCEPT
 133:/usr/include/c++/6/new ****   __attribute__((__externally_visible__));
 134:/usr/include/c++/6/new **** void operator delete(void*, const std::nothrow_t&) _GLIBCXX_USE_NOEXCEPT
 135:/usr/include/c++/6/new ****   __attribute__((__externally_visible__));
 136:/usr/include/c++/6/new **** void operator delete[](void*, const std::nothrow_t&) _GLIBCXX_USE_NOEXCEPT
 137:/usr/include/c++/6/new ****   __attribute__((__externally_visible__));
 138:/usr/include/c++/6/new **** #if __cpp_sized_deallocation
 139:/usr/include/c++/6/new **** void operator delete(void*, std::size_t, const std::nothrow_t&) _GLIBCXX_USE_NOEXCEPT
 140:/usr/include/c++/6/new ****   __attribute__((__externally_visible__));
 141:/usr/include/c++/6/new **** void operator delete[](void*, std::size_t, const std::nothrow_t&) _GLIBCXX_USE_NOEXCEPT
 142:/usr/include/c++/6/new ****   __attribute__((__externally_visible__));
 143:/usr/include/c++/6/new **** #endif
 144:/usr/include/c++/6/new **** 
 145:/usr/include/c++/6/new **** // Default placement versions of operator new.
 146:/usr/include/c++/6/new **** inline void* operator new(std::size_t, void* __p) _GLIBCXX_USE_NOEXCEPT
 147:/usr/include/c++/6/new **** { return __p; }
 111              		.loc 2 147 0
 112              		.cfi_startproc
 113 0000 55       		pushq	%rbp
 114              		.cfi_def_cfa_offset 16
 115              		.cfi_offset 6, -16
 116 0001 4889E5   		movq	%rsp, %rbp
 117              		.cfi_def_cfa_register 6
 118 0004 48897DF8 		movq	%rdi, -8(%rbp)
 119 0008 488975F0 		movq	%rsi, -16(%rbp)
 120              		.loc 2 147 0
GAS LISTING /tmp/ccsIN87E.s 			page 7


 121 000c 488B45F0 		movq	-16(%rbp), %rax
 122 0010 5D       		popq	%rbp
 123              		.cfi_def_cfa 7, 8
 124 0011 C3       		ret
 125              		.cfi_endproc
 126              	.LFE339:
 128              		.section	.text._ZdlPvS_,"axG",@progbits,_ZdlPvS_,comdat
 129              		.weak	_ZdlPvS_
 131              	_ZdlPvS_:
 132              	.LFB341:
 148:/usr/include/c++/6/new **** inline void* operator new[](std::size_t, void* __p) _GLIBCXX_USE_NOEXCEPT
 149:/usr/include/c++/6/new **** { return __p; }
 150:/usr/include/c++/6/new **** 
 151:/usr/include/c++/6/new **** // Default placement versions of operator delete.
 152:/usr/include/c++/6/new **** inline void operator delete  (void*, void*) _GLIBCXX_USE_NOEXCEPT { }
 133              		.loc 2 152 0
 134              		.cfi_startproc
 135 0000 55       		pushq	%rbp
 136              		.cfi_def_cfa_offset 16
 137              		.cfi_offset 6, -16
 138 0001 4889E5   		movq	%rsp, %rbp
 139              		.cfi_def_cfa_register 6
 140 0004 48897DF8 		movq	%rdi, -8(%rbp)
 141 0008 488975F0 		movq	%rsi, -16(%rbp)
 142              		.loc 2 152 0
 143 000c 90       		nop
 144 000d 5D       		popq	%rbp
 145              		.cfi_def_cfa 7, 8
 146 000e C3       		ret
 147              		.cfi_endproc
 148              	.LFE341:
 150              		.section	.rodata
 151 0001 000000   		.align 4
 154              	_ZN9__gnu_cxxL21__default_lock_policyE:
 155 0004 02000000 		.long	2
 156              		.section	.text._ZNSt9exceptionC2ERKS_,"axG",@progbits,_ZNSt9exceptionC5ERKS_,comdat
 157              		.align 2
 158              		.weak	_ZNSt9exceptionC2ERKS_
 160              	_ZNSt9exceptionC2ERKS_:
 161              	.LFB554:
  62:/usr/include/c++/6/exception ****   {
 162              		.loc 1 62 0
 163              		.cfi_startproc
 164 0000 55       		pushq	%rbp
 165              		.cfi_def_cfa_offset 16
 166              		.cfi_offset 6, -16
 167 0001 4889E5   		movq	%rsp, %rbp
 168              		.cfi_def_cfa_register 6
 169 0004 48897DF8 		movq	%rdi, -8(%rbp)
 170 0008 488975F0 		movq	%rsi, -16(%rbp)
 171              	.LBB5:
  62:/usr/include/c++/6/exception ****   {
 172              		.loc 1 62 0
 173 000c 488D1500 		leaq	16+_ZTVSt9exception(%rip), %rdx
 173      000000
 174 0013 488B45F8 		movq	-8(%rbp), %rax
 175 0017 488910   		movq	%rdx, (%rax)
GAS LISTING /tmp/ccsIN87E.s 			page 8


 176              	.LBE5:
 177 001a 90       		nop
 178 001b 5D       		popq	%rbp
 179              		.cfi_def_cfa 7, 8
 180 001c C3       		ret
 181              		.cfi_endproc
 182              	.LFE554:
 184              		.weak	_ZNSt9exceptionC1ERKS_
 185              		.set	_ZNSt9exceptionC1ERKS_,_ZNSt9exceptionC2ERKS_
 186              		.section	.rodata
 189              	_ZStL13allocator_arg:
 190 0008 00       		.zero	1
 193              	_ZStL6ignore:
 194 0009 00       		.zero	1
 195              		.section	.text._ZN5boost10error_infoINS_15throw_function_EPKcEC2ES3_,"axG",@progbits,_ZN5boost10er
 196              		.align 2
 197              		.weak	_ZN5boost10error_infoINS_15throw_function_EPKcEC2ES3_
 199              	_ZN5boost10error_infoINS_15throw_function_EPKcEC2ES3_:
 200              	.LFB1923:
 201              		.file 3 "/usr/include/boost/exception/exception.hpp"
   1:/usr/include/boost/exception/exception.hpp **** //Copyright (c) 2006-2009 Emil Dotchevski and Reverge Studios, Inc.
   2:/usr/include/boost/exception/exception.hpp **** 
   3:/usr/include/boost/exception/exception.hpp **** //Distributed under the Boost Software License, Version 1.0. (See accompanying
   4:/usr/include/boost/exception/exception.hpp **** //file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
   5:/usr/include/boost/exception/exception.hpp **** 
   6:/usr/include/boost/exception/exception.hpp **** #ifndef UUID_274DA366004E11DCB1DDFE2E56D89593
   7:/usr/include/boost/exception/exception.hpp **** #define UUID_274DA366004E11DCB1DDFE2E56D89593
   8:/usr/include/boost/exception/exception.hpp **** #if (__GNUC__*100+__GNUC_MINOR__>301) && !defined(BOOST_EXCEPTION_ENABLE_WARNINGS)
   9:/usr/include/boost/exception/exception.hpp **** #pragma GCC system_header
  10:/usr/include/boost/exception/exception.hpp **** #endif
  11:/usr/include/boost/exception/exception.hpp **** #if defined(_MSC_VER) && !defined(BOOST_EXCEPTION_ENABLE_WARNINGS)
  12:/usr/include/boost/exception/exception.hpp **** #pragma warning(push,1)
  13:/usr/include/boost/exception/exception.hpp **** #endif
  14:/usr/include/boost/exception/exception.hpp **** 
  15:/usr/include/boost/exception/exception.hpp **** namespace
  16:/usr/include/boost/exception/exception.hpp **** boost
  17:/usr/include/boost/exception/exception.hpp ****     {
  18:/usr/include/boost/exception/exception.hpp ****     namespace
  19:/usr/include/boost/exception/exception.hpp ****     exception_detail
  20:/usr/include/boost/exception/exception.hpp ****         {
  21:/usr/include/boost/exception/exception.hpp ****         template <class T>
  22:/usr/include/boost/exception/exception.hpp ****         class
  23:/usr/include/boost/exception/exception.hpp ****         refcount_ptr
  24:/usr/include/boost/exception/exception.hpp ****             {
  25:/usr/include/boost/exception/exception.hpp ****             public:
  26:/usr/include/boost/exception/exception.hpp **** 
  27:/usr/include/boost/exception/exception.hpp ****             refcount_ptr():
  28:/usr/include/boost/exception/exception.hpp ****                 px_(0)
  29:/usr/include/boost/exception/exception.hpp ****                 {
  30:/usr/include/boost/exception/exception.hpp ****                 }
  31:/usr/include/boost/exception/exception.hpp **** 
  32:/usr/include/boost/exception/exception.hpp ****             ~refcount_ptr()
  33:/usr/include/boost/exception/exception.hpp ****                 {
  34:/usr/include/boost/exception/exception.hpp ****                 release();
  35:/usr/include/boost/exception/exception.hpp ****                 }
  36:/usr/include/boost/exception/exception.hpp **** 
  37:/usr/include/boost/exception/exception.hpp ****             refcount_ptr( refcount_ptr const & x ):
GAS LISTING /tmp/ccsIN87E.s 			page 9


  38:/usr/include/boost/exception/exception.hpp ****                 px_(x.px_)
  39:/usr/include/boost/exception/exception.hpp ****                 {
  40:/usr/include/boost/exception/exception.hpp ****                 add_ref();
  41:/usr/include/boost/exception/exception.hpp ****                 }
  42:/usr/include/boost/exception/exception.hpp **** 
  43:/usr/include/boost/exception/exception.hpp ****             refcount_ptr &
  44:/usr/include/boost/exception/exception.hpp ****             operator=( refcount_ptr const & x )
  45:/usr/include/boost/exception/exception.hpp ****                 {
  46:/usr/include/boost/exception/exception.hpp ****                 adopt(x.px_);
  47:/usr/include/boost/exception/exception.hpp ****                 return *this;
  48:/usr/include/boost/exception/exception.hpp ****                 }
  49:/usr/include/boost/exception/exception.hpp **** 
  50:/usr/include/boost/exception/exception.hpp ****             void
  51:/usr/include/boost/exception/exception.hpp ****             adopt( T * px )
  52:/usr/include/boost/exception/exception.hpp ****                 {
  53:/usr/include/boost/exception/exception.hpp ****                 release();
  54:/usr/include/boost/exception/exception.hpp ****                 px_=px;
  55:/usr/include/boost/exception/exception.hpp ****                 add_ref();
  56:/usr/include/boost/exception/exception.hpp ****                 }
  57:/usr/include/boost/exception/exception.hpp **** 
  58:/usr/include/boost/exception/exception.hpp ****             T *
  59:/usr/include/boost/exception/exception.hpp ****             get() const
  60:/usr/include/boost/exception/exception.hpp ****                 {
  61:/usr/include/boost/exception/exception.hpp ****                 return px_;
  62:/usr/include/boost/exception/exception.hpp ****                 }
  63:/usr/include/boost/exception/exception.hpp **** 
  64:/usr/include/boost/exception/exception.hpp ****             private:
  65:/usr/include/boost/exception/exception.hpp **** 
  66:/usr/include/boost/exception/exception.hpp ****             T * px_;
  67:/usr/include/boost/exception/exception.hpp **** 
  68:/usr/include/boost/exception/exception.hpp ****             void
  69:/usr/include/boost/exception/exception.hpp ****             add_ref()
  70:/usr/include/boost/exception/exception.hpp ****                 {
  71:/usr/include/boost/exception/exception.hpp ****                 if( px_ )
  72:/usr/include/boost/exception/exception.hpp ****                     px_->add_ref();
  73:/usr/include/boost/exception/exception.hpp ****                 }
  74:/usr/include/boost/exception/exception.hpp **** 
  75:/usr/include/boost/exception/exception.hpp ****             void
  76:/usr/include/boost/exception/exception.hpp ****             release()
  77:/usr/include/boost/exception/exception.hpp ****                 {
  78:/usr/include/boost/exception/exception.hpp ****                 if( px_ && px_->release() )
  79:/usr/include/boost/exception/exception.hpp ****                     px_=0;
  80:/usr/include/boost/exception/exception.hpp ****                 }
  81:/usr/include/boost/exception/exception.hpp ****             };
  82:/usr/include/boost/exception/exception.hpp ****         }
  83:/usr/include/boost/exception/exception.hpp **** 
  84:/usr/include/boost/exception/exception.hpp ****     ////////////////////////////////////////////////////////////////////////
  85:/usr/include/boost/exception/exception.hpp **** 
  86:/usr/include/boost/exception/exception.hpp ****     template <class Tag,class T>
  87:/usr/include/boost/exception/exception.hpp ****     class error_info;
  88:/usr/include/boost/exception/exception.hpp **** 
  89:/usr/include/boost/exception/exception.hpp ****     typedef error_info<struct throw_function_,char const *> throw_function;
  90:/usr/include/boost/exception/exception.hpp ****     typedef error_info<struct throw_file_,char const *> throw_file;
  91:/usr/include/boost/exception/exception.hpp ****     typedef error_info<struct throw_line_,int> throw_line;
  92:/usr/include/boost/exception/exception.hpp **** 
  93:/usr/include/boost/exception/exception.hpp ****     template <>
  94:/usr/include/boost/exception/exception.hpp ****     class
GAS LISTING /tmp/ccsIN87E.s 			page 10


  95:/usr/include/boost/exception/exception.hpp ****     error_info<throw_function_,char const *>
  96:/usr/include/boost/exception/exception.hpp ****         {
  97:/usr/include/boost/exception/exception.hpp ****         public:
  98:/usr/include/boost/exception/exception.hpp ****         typedef char const * value_type;
  99:/usr/include/boost/exception/exception.hpp ****         value_type v_;
 100:/usr/include/boost/exception/exception.hpp ****         explicit
 101:/usr/include/boost/exception/exception.hpp ****         error_info( value_type v ):
 202              		.loc 3 101 0
 203              		.cfi_startproc
 204 0000 55       		pushq	%rbp
 205              		.cfi_def_cfa_offset 16
 206              		.cfi_offset 6, -16
 207 0001 4889E5   		movq	%rsp, %rbp
 208              		.cfi_def_cfa_register 6
 209 0004 48897DF8 		movq	%rdi, -8(%rbp)
 210 0008 488975F0 		movq	%rsi, -16(%rbp)
 211              	.LBB6:
 102:/usr/include/boost/exception/exception.hpp ****             v_(v)
 212              		.loc 3 102 0
 213 000c 488B45F8 		movq	-8(%rbp), %rax
 214 0010 488B55F0 		movq	-16(%rbp), %rdx
 215 0014 488910   		movq	%rdx, (%rax)
 216              	.LBE6:
 103:/usr/include/boost/exception/exception.hpp ****             {
 104:/usr/include/boost/exception/exception.hpp ****             }
 217              		.loc 3 104 0
 218 0017 90       		nop
 219 0018 5D       		popq	%rbp
 220              		.cfi_def_cfa 7, 8
 221 0019 C3       		ret
 222              		.cfi_endproc
 223              	.LFE1923:
 225              		.weak	_ZN5boost10error_infoINS_15throw_function_EPKcEC1ES3_
 226              		.set	_ZN5boost10error_infoINS_15throw_function_EPKcEC1ES3_,_ZN5boost10error_infoINS_15throw_functi
 227              		.section	.text._ZN5boost10error_infoINS_11throw_file_EPKcEC2ES3_,"axG",@progbits,_ZN5boost10error_
 228              		.align 2
 229              		.weak	_ZN5boost10error_infoINS_11throw_file_EPKcEC2ES3_
 231              	_ZN5boost10error_infoINS_11throw_file_EPKcEC2ES3_:
 232              	.LFB1926:
 105:/usr/include/boost/exception/exception.hpp ****         };
 106:/usr/include/boost/exception/exception.hpp **** 
 107:/usr/include/boost/exception/exception.hpp ****     template <>
 108:/usr/include/boost/exception/exception.hpp ****     class
 109:/usr/include/boost/exception/exception.hpp ****     error_info<throw_file_,char const *>
 110:/usr/include/boost/exception/exception.hpp ****         {
 111:/usr/include/boost/exception/exception.hpp ****         public:
 112:/usr/include/boost/exception/exception.hpp ****         typedef char const * value_type;
 113:/usr/include/boost/exception/exception.hpp ****         value_type v_;
 114:/usr/include/boost/exception/exception.hpp ****         explicit
 115:/usr/include/boost/exception/exception.hpp ****         error_info( value_type v ):
 233              		.loc 3 115 0
 234              		.cfi_startproc
 235 0000 55       		pushq	%rbp
 236              		.cfi_def_cfa_offset 16
 237              		.cfi_offset 6, -16
 238 0001 4889E5   		movq	%rsp, %rbp
 239              		.cfi_def_cfa_register 6
GAS LISTING /tmp/ccsIN87E.s 			page 11


 240 0004 48897DF8 		movq	%rdi, -8(%rbp)
 241 0008 488975F0 		movq	%rsi, -16(%rbp)
 242              	.LBB7:
 116:/usr/include/boost/exception/exception.hpp ****             v_(v)
 243              		.loc 3 116 0
 244 000c 488B45F8 		movq	-8(%rbp), %rax
 245 0010 488B55F0 		movq	-16(%rbp), %rdx
 246 0014 488910   		movq	%rdx, (%rax)
 247              	.LBE7:
 117:/usr/include/boost/exception/exception.hpp ****             {
 118:/usr/include/boost/exception/exception.hpp ****             }
 248              		.loc 3 118 0
 249 0017 90       		nop
 250 0018 5D       		popq	%rbp
 251              		.cfi_def_cfa 7, 8
 252 0019 C3       		ret
 253              		.cfi_endproc
 254              	.LFE1926:
 256              		.weak	_ZN5boost10error_infoINS_11throw_file_EPKcEC1ES3_
 257              		.set	_ZN5boost10error_infoINS_11throw_file_EPKcEC1ES3_,_ZN5boost10error_infoINS_11throw_file_EPKcE
 258              		.section	.text._ZN5boost10error_infoINS_11throw_line_EiEC2Ei,"axG",@progbits,_ZN5boost10error_info
 259              		.align 2
 260              		.weak	_ZN5boost10error_infoINS_11throw_line_EiEC2Ei
 262              	_ZN5boost10error_infoINS_11throw_line_EiEC2Ei:
 263              	.LFB1929:
 119:/usr/include/boost/exception/exception.hpp ****         };
 120:/usr/include/boost/exception/exception.hpp **** 
 121:/usr/include/boost/exception/exception.hpp ****     template <>
 122:/usr/include/boost/exception/exception.hpp ****     class
 123:/usr/include/boost/exception/exception.hpp ****     error_info<throw_line_,int>
 124:/usr/include/boost/exception/exception.hpp ****         {
 125:/usr/include/boost/exception/exception.hpp ****         public:
 126:/usr/include/boost/exception/exception.hpp ****         typedef int value_type;
 127:/usr/include/boost/exception/exception.hpp ****         value_type v_;
 128:/usr/include/boost/exception/exception.hpp ****         explicit
 129:/usr/include/boost/exception/exception.hpp ****         error_info( value_type v ):
 264              		.loc 3 129 0
 265              		.cfi_startproc
 266 0000 55       		pushq	%rbp
 267              		.cfi_def_cfa_offset 16
 268              		.cfi_offset 6, -16
 269 0001 4889E5   		movq	%rsp, %rbp
 270              		.cfi_def_cfa_register 6
 271 0004 48897DF8 		movq	%rdi, -8(%rbp)
 272 0008 8975F4   		movl	%esi, -12(%rbp)
 273              	.LBB8:
 130:/usr/include/boost/exception/exception.hpp ****             v_(v)
 274              		.loc 3 130 0
 275 000b 488B45F8 		movq	-8(%rbp), %rax
 276 000f 8B55F4   		movl	-12(%rbp), %edx
 277 0012 8910     		movl	%edx, (%rax)
 278              	.LBE8:
 131:/usr/include/boost/exception/exception.hpp ****             {
 132:/usr/include/boost/exception/exception.hpp ****             }
 279              		.loc 3 132 0
 280 0014 90       		nop
 281 0015 5D       		popq	%rbp
GAS LISTING /tmp/ccsIN87E.s 			page 12


 282              		.cfi_def_cfa 7, 8
 283 0016 C3       		ret
 284              		.cfi_endproc
 285              	.LFE1929:
 287              		.weak	_ZN5boost10error_infoINS_11throw_line_EiEC1Ei
 288              		.set	_ZN5boost10error_infoINS_11throw_line_EiEC1Ei,_ZN5boost10error_infoINS_11throw_line_EiEC2Ei
 289              		.section	.text._ZN5boost9exceptionC2Ev,"axG",@progbits,_ZN5boost9exceptionC5Ev,comdat
 290              		.align 2
 291              		.weak	_ZN5boost9exceptionC2Ev
 293              	_ZN5boost9exceptionC2Ev:
 294              	.LFB1935:
 133:/usr/include/boost/exception/exception.hpp ****         };
 134:/usr/include/boost/exception/exception.hpp **** 
 135:/usr/include/boost/exception/exception.hpp **** #if defined(__GNUC__)
 136:/usr/include/boost/exception/exception.hpp **** # if (__GNUC__ == 4 && __GNUC_MINOR__ >= 1) || (__GNUC__ > 4)
 137:/usr/include/boost/exception/exception.hpp **** #  pragma GCC visibility push (default)
 138:/usr/include/boost/exception/exception.hpp **** # endif
 139:/usr/include/boost/exception/exception.hpp **** #endif
 140:/usr/include/boost/exception/exception.hpp ****     class exception;
 141:/usr/include/boost/exception/exception.hpp **** #if defined(__GNUC__)
 142:/usr/include/boost/exception/exception.hpp **** # if (__GNUC__ == 4 && __GNUC_MINOR__ >= 1) || (__GNUC__ > 4)
 143:/usr/include/boost/exception/exception.hpp **** #  pragma GCC visibility pop
 144:/usr/include/boost/exception/exception.hpp **** # endif
 145:/usr/include/boost/exception/exception.hpp **** #endif
 146:/usr/include/boost/exception/exception.hpp **** 
 147:/usr/include/boost/exception/exception.hpp ****     template <class T>
 148:/usr/include/boost/exception/exception.hpp ****     class shared_ptr;
 149:/usr/include/boost/exception/exception.hpp **** 
 150:/usr/include/boost/exception/exception.hpp ****     namespace
 151:/usr/include/boost/exception/exception.hpp ****     exception_detail
 152:/usr/include/boost/exception/exception.hpp ****         {
 153:/usr/include/boost/exception/exception.hpp ****         class error_info_base;
 154:/usr/include/boost/exception/exception.hpp ****         struct type_info_;
 155:/usr/include/boost/exception/exception.hpp **** 
 156:/usr/include/boost/exception/exception.hpp ****         struct
 157:/usr/include/boost/exception/exception.hpp ****         error_info_container
 158:/usr/include/boost/exception/exception.hpp ****             {
 159:/usr/include/boost/exception/exception.hpp ****             virtual char const * diagnostic_information( char const * ) const = 0;
 160:/usr/include/boost/exception/exception.hpp ****             virtual shared_ptr<error_info_base> get( type_info_ const & ) const = 0;
 161:/usr/include/boost/exception/exception.hpp ****             virtual void set( shared_ptr<error_info_base> const &, type_info_ const & ) = 0;
 162:/usr/include/boost/exception/exception.hpp ****             virtual void add_ref() const = 0;
 163:/usr/include/boost/exception/exception.hpp ****             virtual bool release() const = 0;
 164:/usr/include/boost/exception/exception.hpp ****             virtual refcount_ptr<exception_detail::error_info_container> clone() const = 0;
 165:/usr/include/boost/exception/exception.hpp **** 
 166:/usr/include/boost/exception/exception.hpp ****             protected:
 167:/usr/include/boost/exception/exception.hpp **** 
 168:/usr/include/boost/exception/exception.hpp ****             ~error_info_container() throw()
 169:/usr/include/boost/exception/exception.hpp ****                 {
 170:/usr/include/boost/exception/exception.hpp ****                 }
 171:/usr/include/boost/exception/exception.hpp ****             };
 172:/usr/include/boost/exception/exception.hpp **** 
 173:/usr/include/boost/exception/exception.hpp ****         template <class>
 174:/usr/include/boost/exception/exception.hpp ****         struct get_info;
 175:/usr/include/boost/exception/exception.hpp **** 
 176:/usr/include/boost/exception/exception.hpp ****         template <>
 177:/usr/include/boost/exception/exception.hpp ****         struct get_info<throw_function>;
 178:/usr/include/boost/exception/exception.hpp **** 
GAS LISTING /tmp/ccsIN87E.s 			page 13


 179:/usr/include/boost/exception/exception.hpp ****         template <>
 180:/usr/include/boost/exception/exception.hpp ****         struct get_info<throw_file>;
 181:/usr/include/boost/exception/exception.hpp **** 
 182:/usr/include/boost/exception/exception.hpp ****         template <>
 183:/usr/include/boost/exception/exception.hpp ****         struct get_info<throw_line>;
 184:/usr/include/boost/exception/exception.hpp **** 
 185:/usr/include/boost/exception/exception.hpp ****         template <class>
 186:/usr/include/boost/exception/exception.hpp ****         struct set_info_rv;
 187:/usr/include/boost/exception/exception.hpp **** 
 188:/usr/include/boost/exception/exception.hpp ****         template <>
 189:/usr/include/boost/exception/exception.hpp ****         struct set_info_rv<throw_function>;
 190:/usr/include/boost/exception/exception.hpp **** 
 191:/usr/include/boost/exception/exception.hpp ****         template <>
 192:/usr/include/boost/exception/exception.hpp ****         struct set_info_rv<throw_file>;
 193:/usr/include/boost/exception/exception.hpp **** 
 194:/usr/include/boost/exception/exception.hpp ****         template <>
 195:/usr/include/boost/exception/exception.hpp ****         struct set_info_rv<throw_line>;
 196:/usr/include/boost/exception/exception.hpp **** 
 197:/usr/include/boost/exception/exception.hpp ****         char const * get_diagnostic_information( exception const &, char const * );
 198:/usr/include/boost/exception/exception.hpp **** 
 199:/usr/include/boost/exception/exception.hpp ****         void copy_boost_exception( exception *, exception const * );
 200:/usr/include/boost/exception/exception.hpp **** 
 201:/usr/include/boost/exception/exception.hpp ****         template <class E,class Tag,class T>
 202:/usr/include/boost/exception/exception.hpp ****         E const & set_info( E const &, error_info<Tag,T> const & );
 203:/usr/include/boost/exception/exception.hpp **** 
 204:/usr/include/boost/exception/exception.hpp ****         template <class E>
 205:/usr/include/boost/exception/exception.hpp ****         E const & set_info( E const &, throw_function const & );
 206:/usr/include/boost/exception/exception.hpp **** 
 207:/usr/include/boost/exception/exception.hpp ****         template <class E>
 208:/usr/include/boost/exception/exception.hpp ****         E const & set_info( E const &, throw_file const & );
 209:/usr/include/boost/exception/exception.hpp **** 
 210:/usr/include/boost/exception/exception.hpp ****         template <class E>
 211:/usr/include/boost/exception/exception.hpp ****         E const & set_info( E const &, throw_line const & );
 212:/usr/include/boost/exception/exception.hpp ****         }
 213:/usr/include/boost/exception/exception.hpp **** 
 214:/usr/include/boost/exception/exception.hpp **** #if defined(__GNUC__)
 215:/usr/include/boost/exception/exception.hpp **** # if (__GNUC__ == 4 && __GNUC_MINOR__ >= 1) || (__GNUC__ > 4)
 216:/usr/include/boost/exception/exception.hpp **** #  pragma GCC visibility push (default)
 217:/usr/include/boost/exception/exception.hpp **** # endif
 218:/usr/include/boost/exception/exception.hpp **** #endif
 219:/usr/include/boost/exception/exception.hpp ****     class
 220:/usr/include/boost/exception/exception.hpp ****     exception
 221:/usr/include/boost/exception/exception.hpp ****         {
 222:/usr/include/boost/exception/exception.hpp ****         //<N3757>
 223:/usr/include/boost/exception/exception.hpp ****         public:
 224:/usr/include/boost/exception/exception.hpp ****         template <class Tag> void set( typename Tag::type const & );
 225:/usr/include/boost/exception/exception.hpp ****         template <class Tag> typename Tag::type const * get() const;
 226:/usr/include/boost/exception/exception.hpp ****         //</N3757>
 227:/usr/include/boost/exception/exception.hpp **** 
 228:/usr/include/boost/exception/exception.hpp ****         protected:
 229:/usr/include/boost/exception/exception.hpp **** 
 230:/usr/include/boost/exception/exception.hpp ****         exception():
 295              		.loc 3 230 0
 296              		.cfi_startproc
 297 0000 55       		pushq	%rbp
 298              		.cfi_def_cfa_offset 16
 299              		.cfi_offset 6, -16
GAS LISTING /tmp/ccsIN87E.s 			page 14


 300 0001 4889E5   		movq	%rsp, %rbp
 301              		.cfi_def_cfa_register 6
 302 0004 4883EC10 		subq	$16, %rsp
 303 0008 48897DF8 		movq	%rdi, -8(%rbp)
 304              	.LBB9:
 231:/usr/include/boost/exception/exception.hpp ****             throw_function_(0),
 232:/usr/include/boost/exception/exception.hpp ****             throw_file_(0),
 233:/usr/include/boost/exception/exception.hpp ****             throw_line_(-1)
 305              		.loc 3 233 0
 306 000c 488D1500 		leaq	16+_ZTVN5boost9exceptionE(%rip), %rdx
 306      000000
 307 0013 488B45F8 		movq	-8(%rbp), %rax
 308 0017 488910   		movq	%rdx, (%rax)
 309 001a 488B45F8 		movq	-8(%rbp), %rax
 310 001e 4883C008 		addq	$8, %rax
 311 0022 4889C7   		movq	%rax, %rdi
 312 0025 E8000000 		call	_ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEEC1Ev
 312      00
 313 002a 488B45F8 		movq	-8(%rbp), %rax
 314 002e 48C74010 		movq	$0, 16(%rax)
 314      00000000 
 315 0036 488B45F8 		movq	-8(%rbp), %rax
 316 003a 48C74018 		movq	$0, 24(%rax)
 316      00000000 
 317 0042 488B45F8 		movq	-8(%rbp), %rax
 318 0046 C74020FF 		movl	$-1, 32(%rax)
 318      FFFFFF
 319              	.LBE9:
 234:/usr/include/boost/exception/exception.hpp ****             {
 235:/usr/include/boost/exception/exception.hpp ****             }
 320              		.loc 3 235 0
 321 004d 90       		nop
 322 004e C9       		leave
 323              		.cfi_def_cfa 7, 8
 324 004f C3       		ret
 325              		.cfi_endproc
 326              	.LFE1935:
 328              		.weak	_ZN5boost9exceptionC1Ev
 329              		.set	_ZN5boost9exceptionC1Ev,_ZN5boost9exceptionC2Ev
 330              		.section	.text._ZN5boost9exceptionD2Ev,"axG",@progbits,_ZN5boost9exceptionD5Ev,comdat
 331              		.align 2
 332              		.weak	_ZN5boost9exceptionD2Ev
 334              	_ZN5boost9exceptionD2Ev:
 335              	.LFB1938:
 236:/usr/include/boost/exception/exception.hpp **** 
 237:/usr/include/boost/exception/exception.hpp **** #ifdef __HP_aCC
 238:/usr/include/boost/exception/exception.hpp ****         //On HP aCC, this protected copy constructor prevents throwing boost::exception.
 239:/usr/include/boost/exception/exception.hpp ****         //On all other platforms, the same effect is achieved by the pure virtual destructor.
 240:/usr/include/boost/exception/exception.hpp ****         exception( exception const & x ) throw():
 241:/usr/include/boost/exception/exception.hpp ****             data_(x.data_),
 242:/usr/include/boost/exception/exception.hpp ****             throw_function_(x.throw_function_),
 243:/usr/include/boost/exception/exception.hpp ****             throw_file_(x.throw_file_),
 244:/usr/include/boost/exception/exception.hpp ****             throw_line_(x.throw_line_)
 245:/usr/include/boost/exception/exception.hpp ****             {
 246:/usr/include/boost/exception/exception.hpp ****             }
 247:/usr/include/boost/exception/exception.hpp **** #endif
 248:/usr/include/boost/exception/exception.hpp **** 
GAS LISTING /tmp/ccsIN87E.s 			page 15


 249:/usr/include/boost/exception/exception.hpp ****         virtual ~exception() throw()
 250:/usr/include/boost/exception/exception.hpp **** #ifndef __HP_aCC
 251:/usr/include/boost/exception/exception.hpp ****             = 0 //Workaround for HP aCC, =0 incorrectly leads to link errors.
 252:/usr/include/boost/exception/exception.hpp **** #endif
 253:/usr/include/boost/exception/exception.hpp ****             ;
 254:/usr/include/boost/exception/exception.hpp **** 
 255:/usr/include/boost/exception/exception.hpp **** #if (defined(__MWERKS__) && __MWERKS__<=0x3207) || (defined(_MSC_VER) && _MSC_VER<=1310)
 256:/usr/include/boost/exception/exception.hpp ****         public:
 257:/usr/include/boost/exception/exception.hpp **** #else
 258:/usr/include/boost/exception/exception.hpp ****         private:
 259:/usr/include/boost/exception/exception.hpp **** 
 260:/usr/include/boost/exception/exception.hpp ****         template <class E>
 261:/usr/include/boost/exception/exception.hpp ****         friend E const & exception_detail::set_info( E const &, throw_function const & );
 262:/usr/include/boost/exception/exception.hpp **** 
 263:/usr/include/boost/exception/exception.hpp ****         template <class E>
 264:/usr/include/boost/exception/exception.hpp ****         friend E const & exception_detail::set_info( E const &, throw_file const & );
 265:/usr/include/boost/exception/exception.hpp **** 
 266:/usr/include/boost/exception/exception.hpp ****         template <class E>
 267:/usr/include/boost/exception/exception.hpp ****         friend E const & exception_detail::set_info( E const &, throw_line const & );
 268:/usr/include/boost/exception/exception.hpp **** 
 269:/usr/include/boost/exception/exception.hpp ****         template <class E,class Tag,class T>
 270:/usr/include/boost/exception/exception.hpp ****         friend E const & exception_detail::set_info( E const &, error_info<Tag,T> const & );
 271:/usr/include/boost/exception/exception.hpp **** 
 272:/usr/include/boost/exception/exception.hpp ****         friend char const * exception_detail::get_diagnostic_information( exception const &, char c
 273:/usr/include/boost/exception/exception.hpp **** 
 274:/usr/include/boost/exception/exception.hpp ****         template <class>
 275:/usr/include/boost/exception/exception.hpp ****         friend struct exception_detail::get_info;
 276:/usr/include/boost/exception/exception.hpp ****         friend struct exception_detail::get_info<throw_function>;
 277:/usr/include/boost/exception/exception.hpp ****         friend struct exception_detail::get_info<throw_file>;
 278:/usr/include/boost/exception/exception.hpp ****         friend struct exception_detail::get_info<throw_line>;
 279:/usr/include/boost/exception/exception.hpp ****         template <class>
 280:/usr/include/boost/exception/exception.hpp ****         friend struct exception_detail::set_info_rv;
 281:/usr/include/boost/exception/exception.hpp ****         friend struct exception_detail::set_info_rv<throw_function>;
 282:/usr/include/boost/exception/exception.hpp ****         friend struct exception_detail::set_info_rv<throw_file>;
 283:/usr/include/boost/exception/exception.hpp ****         friend struct exception_detail::set_info_rv<throw_line>;
 284:/usr/include/boost/exception/exception.hpp ****         friend void exception_detail::copy_boost_exception( exception *, exception const * );
 285:/usr/include/boost/exception/exception.hpp **** #endif
 286:/usr/include/boost/exception/exception.hpp ****         mutable exception_detail::refcount_ptr<exception_detail::error_info_container> data_;
 287:/usr/include/boost/exception/exception.hpp ****         mutable char const * throw_function_;
 288:/usr/include/boost/exception/exception.hpp ****         mutable char const * throw_file_;
 289:/usr/include/boost/exception/exception.hpp ****         mutable int throw_line_;
 290:/usr/include/boost/exception/exception.hpp ****         };
 291:/usr/include/boost/exception/exception.hpp **** #if defined(__GNUC__)
 292:/usr/include/boost/exception/exception.hpp **** # if (__GNUC__ == 4 && __GNUC_MINOR__ >= 1) || (__GNUC__ > 4)
 293:/usr/include/boost/exception/exception.hpp **** #  pragma GCC visibility pop
 294:/usr/include/boost/exception/exception.hpp **** # endif
 295:/usr/include/boost/exception/exception.hpp **** #endif
 296:/usr/include/boost/exception/exception.hpp **** 
 297:/usr/include/boost/exception/exception.hpp ****     inline
 298:/usr/include/boost/exception/exception.hpp ****     exception::
 336              		.loc 3 298 0
 337              		.cfi_startproc
 338 0000 55       		pushq	%rbp
 339              		.cfi_def_cfa_offset 16
 340              		.cfi_offset 6, -16
 341 0001 4889E5   		movq	%rsp, %rbp
 342              		.cfi_def_cfa_register 6
GAS LISTING /tmp/ccsIN87E.s 			page 16


 343 0004 4883EC10 		subq	$16, %rsp
 344 0008 48897DF8 		movq	%rdi, -8(%rbp)
 345              	.LBB10:
 299:/usr/include/boost/exception/exception.hpp ****     ~exception() throw()
 346              		.loc 3 299 0
 347 000c 488D1500 		leaq	16+_ZTVN5boost9exceptionE(%rip), %rdx
 347      000000
 348 0013 488B45F8 		movq	-8(%rbp), %rax
 349 0017 488910   		movq	%rdx, (%rax)
 350 001a 488B45F8 		movq	-8(%rbp), %rax
 351 001e 4883C008 		addq	$8, %rax
 352 0022 4889C7   		movq	%rax, %rdi
 353 0025 E8000000 		call	_ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEED1Ev
 353      00
 354              	.LBE10:
 300:/usr/include/boost/exception/exception.hpp ****         {
 301:/usr/include/boost/exception/exception.hpp ****         }
 355              		.loc 3 301 0
 356 002a 90       		nop
 357 002b C9       		leave
 358              		.cfi_def_cfa 7, 8
 359 002c C3       		ret
 360              		.cfi_endproc
 361              	.LFE1938:
 363              		.weak	_ZN5boost9exceptionD1Ev
 364              		.set	_ZN5boost9exceptionD1Ev,_ZN5boost9exceptionD2Ev
 365              		.section	.text._ZN5boost9exceptionD0Ev,"axG",@progbits,_ZN5boost9exceptionD5Ev,comdat
 366              		.align 2
 367              		.weak	_ZN5boost9exceptionD0Ev
 369              	_ZN5boost9exceptionD0Ev:
 370              	.LFB1940:
 298:/usr/include/boost/exception/exception.hpp ****     ~exception() throw()
 371              		.loc 3 298 0
 372              		.cfi_startproc
 373 0000 55       		pushq	%rbp
 374              		.cfi_def_cfa_offset 16
 375              		.cfi_offset 6, -16
 376 0001 4889E5   		movq	%rsp, %rbp
 377              		.cfi_def_cfa_register 6
 378 0004 4883EC10 		subq	$16, %rsp
 379 0008 48897DF8 		movq	%rdi, -8(%rbp)
 380              		.loc 3 301 0
 381 000c 488B45F8 		movq	-8(%rbp), %rax
 382 0010 4889C7   		movq	%rax, %rdi
 383 0013 E8000000 		call	_ZN5boost9exceptionD1Ev
 383      00
 384 0018 488B45F8 		movq	-8(%rbp), %rax
 385 001c BE280000 		movl	$40, %esi
 385      00
 386 0021 4889C7   		movq	%rax, %rdi
 387 0024 E8000000 		call	_ZdlPvm@PLT
 387      00
 388 0029 C9       		leave
 389              		.cfi_def_cfa 7, 8
 390 002a C3       		ret
 391              		.cfi_endproc
 392              	.LFE1940:
GAS LISTING /tmp/ccsIN87E.s 			page 17


 394              		.section	.text._ZN5boost16exception_detail10clone_baseD2Ev,"axG",@progbits,_ZN5boost16exception_de
 395              		.align 2
 396              		.weak	_ZN5boost16exception_detail10clone_baseD2Ev
 398              	_ZN5boost16exception_detail10clone_baseD2Ev:
 399              	.LFB1948:
 302:/usr/include/boost/exception/exception.hpp **** 
 303:/usr/include/boost/exception/exception.hpp ****     namespace
 304:/usr/include/boost/exception/exception.hpp ****     exception_detail
 305:/usr/include/boost/exception/exception.hpp ****         {
 306:/usr/include/boost/exception/exception.hpp ****         template <class E>
 307:/usr/include/boost/exception/exception.hpp ****         E const &
 308:/usr/include/boost/exception/exception.hpp ****         set_info( E const & x, throw_function const & y )
 309:/usr/include/boost/exception/exception.hpp ****             {
 310:/usr/include/boost/exception/exception.hpp ****             x.throw_function_=y.v_;
 311:/usr/include/boost/exception/exception.hpp ****             return x;
 312:/usr/include/boost/exception/exception.hpp ****             }
 313:/usr/include/boost/exception/exception.hpp **** 
 314:/usr/include/boost/exception/exception.hpp ****         template <class E>
 315:/usr/include/boost/exception/exception.hpp ****         E const &
 316:/usr/include/boost/exception/exception.hpp ****         set_info( E const & x, throw_file const & y )
 317:/usr/include/boost/exception/exception.hpp ****             {
 318:/usr/include/boost/exception/exception.hpp ****             x.throw_file_=y.v_;
 319:/usr/include/boost/exception/exception.hpp ****             return x;
 320:/usr/include/boost/exception/exception.hpp ****             }
 321:/usr/include/boost/exception/exception.hpp **** 
 322:/usr/include/boost/exception/exception.hpp ****         template <class E>
 323:/usr/include/boost/exception/exception.hpp ****         E const &
 324:/usr/include/boost/exception/exception.hpp ****         set_info( E const & x, throw_line const & y )
 325:/usr/include/boost/exception/exception.hpp ****             {
 326:/usr/include/boost/exception/exception.hpp ****             x.throw_line_=y.v_;
 327:/usr/include/boost/exception/exception.hpp ****             return x;
 328:/usr/include/boost/exception/exception.hpp ****             }
 329:/usr/include/boost/exception/exception.hpp ****         }
 330:/usr/include/boost/exception/exception.hpp **** 
 331:/usr/include/boost/exception/exception.hpp ****     ////////////////////////////////////////////////////////////////////////
 332:/usr/include/boost/exception/exception.hpp **** 
 333:/usr/include/boost/exception/exception.hpp ****     namespace
 334:/usr/include/boost/exception/exception.hpp ****     exception_detail
 335:/usr/include/boost/exception/exception.hpp ****         {
 336:/usr/include/boost/exception/exception.hpp **** #if defined(__GNUC__)
 337:/usr/include/boost/exception/exception.hpp **** # if (__GNUC__ == 4 && __GNUC_MINOR__ >= 1) || (__GNUC__ > 4)
 338:/usr/include/boost/exception/exception.hpp **** #  pragma GCC visibility push (default)
 339:/usr/include/boost/exception/exception.hpp **** # endif
 340:/usr/include/boost/exception/exception.hpp **** #endif
 341:/usr/include/boost/exception/exception.hpp ****         template <class T>
 342:/usr/include/boost/exception/exception.hpp ****         struct
 343:/usr/include/boost/exception/exception.hpp ****         error_info_injector:
 344:/usr/include/boost/exception/exception.hpp ****             public T,
 345:/usr/include/boost/exception/exception.hpp ****             public exception
 346:/usr/include/boost/exception/exception.hpp ****             {
 347:/usr/include/boost/exception/exception.hpp ****             explicit
 348:/usr/include/boost/exception/exception.hpp ****             error_info_injector( T const & x ):
 349:/usr/include/boost/exception/exception.hpp ****                 T(x)
 350:/usr/include/boost/exception/exception.hpp ****                 {
 351:/usr/include/boost/exception/exception.hpp ****                 }
 352:/usr/include/boost/exception/exception.hpp **** 
 353:/usr/include/boost/exception/exception.hpp ****             ~error_info_injector() throw()
GAS LISTING /tmp/ccsIN87E.s 			page 18


 354:/usr/include/boost/exception/exception.hpp ****                 {
 355:/usr/include/boost/exception/exception.hpp ****                 }
 356:/usr/include/boost/exception/exception.hpp ****             };
 357:/usr/include/boost/exception/exception.hpp **** #if defined(__GNUC__)
 358:/usr/include/boost/exception/exception.hpp **** # if (__GNUC__ == 4 && __GNUC_MINOR__ >= 1) || (__GNUC__ > 4)
 359:/usr/include/boost/exception/exception.hpp **** #  pragma GCC visibility pop
 360:/usr/include/boost/exception/exception.hpp **** # endif
 361:/usr/include/boost/exception/exception.hpp **** #endif
 362:/usr/include/boost/exception/exception.hpp **** 
 363:/usr/include/boost/exception/exception.hpp ****         struct large_size { char c[256]; };
 364:/usr/include/boost/exception/exception.hpp ****         large_size dispatch_boost_exception( exception const * );
 365:/usr/include/boost/exception/exception.hpp **** 
 366:/usr/include/boost/exception/exception.hpp ****         struct small_size { };
 367:/usr/include/boost/exception/exception.hpp ****         small_size dispatch_boost_exception( void const * );
 368:/usr/include/boost/exception/exception.hpp **** 
 369:/usr/include/boost/exception/exception.hpp ****         template <class,int>
 370:/usr/include/boost/exception/exception.hpp ****         struct enable_error_info_helper;
 371:/usr/include/boost/exception/exception.hpp **** 
 372:/usr/include/boost/exception/exception.hpp ****         template <class T>
 373:/usr/include/boost/exception/exception.hpp ****         struct
 374:/usr/include/boost/exception/exception.hpp ****         enable_error_info_helper<T,sizeof(large_size)>
 375:/usr/include/boost/exception/exception.hpp ****             {
 376:/usr/include/boost/exception/exception.hpp ****             typedef T type;
 377:/usr/include/boost/exception/exception.hpp ****             };
 378:/usr/include/boost/exception/exception.hpp **** 
 379:/usr/include/boost/exception/exception.hpp ****         template <class T>
 380:/usr/include/boost/exception/exception.hpp ****         struct
 381:/usr/include/boost/exception/exception.hpp ****         enable_error_info_helper<T,sizeof(small_size)>
 382:/usr/include/boost/exception/exception.hpp ****             {
 383:/usr/include/boost/exception/exception.hpp ****             typedef error_info_injector<T> type;
 384:/usr/include/boost/exception/exception.hpp ****             };
 385:/usr/include/boost/exception/exception.hpp **** 
 386:/usr/include/boost/exception/exception.hpp ****         template <class T>
 387:/usr/include/boost/exception/exception.hpp ****         struct
 388:/usr/include/boost/exception/exception.hpp ****         enable_error_info_return_type
 389:/usr/include/boost/exception/exception.hpp ****             {
 390:/usr/include/boost/exception/exception.hpp ****             typedef typename enable_error_info_helper<T,sizeof(exception_detail::dispatch_boost_exc
 391:/usr/include/boost/exception/exception.hpp ****             };
 392:/usr/include/boost/exception/exception.hpp ****         }
 393:/usr/include/boost/exception/exception.hpp **** 
 394:/usr/include/boost/exception/exception.hpp ****     template <class T>
 395:/usr/include/boost/exception/exception.hpp ****     inline
 396:/usr/include/boost/exception/exception.hpp ****     typename
 397:/usr/include/boost/exception/exception.hpp ****     exception_detail::enable_error_info_return_type<T>::type
 398:/usr/include/boost/exception/exception.hpp ****     enable_error_info( T const & x )
 399:/usr/include/boost/exception/exception.hpp ****         {
 400:/usr/include/boost/exception/exception.hpp ****         typedef typename exception_detail::enable_error_info_return_type<T>::type rt;
 401:/usr/include/boost/exception/exception.hpp ****         return rt(x);
 402:/usr/include/boost/exception/exception.hpp ****         }
 403:/usr/include/boost/exception/exception.hpp **** 
 404:/usr/include/boost/exception/exception.hpp ****     ////////////////////////////////////////////////////////////////////////
 405:/usr/include/boost/exception/exception.hpp **** 
 406:/usr/include/boost/exception/exception.hpp ****     namespace
 407:/usr/include/boost/exception/exception.hpp ****     exception_detail
 408:/usr/include/boost/exception/exception.hpp ****         {
 409:/usr/include/boost/exception/exception.hpp **** #if defined(__GNUC__)
 410:/usr/include/boost/exception/exception.hpp **** # if (__GNUC__ == 4 && __GNUC_MINOR__ >= 1) || (__GNUC__ > 4)
GAS LISTING /tmp/ccsIN87E.s 			page 19


 411:/usr/include/boost/exception/exception.hpp **** #  pragma GCC visibility push (default)
 412:/usr/include/boost/exception/exception.hpp **** # endif
 413:/usr/include/boost/exception/exception.hpp **** #endif
 414:/usr/include/boost/exception/exception.hpp ****         class
 415:/usr/include/boost/exception/exception.hpp ****         clone_base
 416:/usr/include/boost/exception/exception.hpp ****             {
 417:/usr/include/boost/exception/exception.hpp ****             public:
 418:/usr/include/boost/exception/exception.hpp **** 
 419:/usr/include/boost/exception/exception.hpp ****             virtual clone_base const * clone() const = 0;
 420:/usr/include/boost/exception/exception.hpp ****             virtual void rethrow() const = 0;
 421:/usr/include/boost/exception/exception.hpp **** 
 422:/usr/include/boost/exception/exception.hpp ****             virtual
 423:/usr/include/boost/exception/exception.hpp ****             ~clone_base() throw()
 400              		.loc 3 423 0
 401              		.cfi_startproc
 402 0000 55       		pushq	%rbp
 403              		.cfi_def_cfa_offset 16
 404              		.cfi_offset 6, -16
 405 0001 4889E5   		movq	%rsp, %rbp
 406              		.cfi_def_cfa_register 6
 407 0004 48897DF8 		movq	%rdi, -8(%rbp)
 408              	.LBB11:
 424:/usr/include/boost/exception/exception.hpp ****                 {
 409              		.loc 3 424 0
 410 0008 488D1500 		leaq	16+_ZTVN5boost16exception_detail10clone_baseE(%rip), %rdx
 410      000000
 411 000f 488B45F8 		movq	-8(%rbp), %rax
 412 0013 488910   		movq	%rdx, (%rax)
 413              	.LBE11:
 425:/usr/include/boost/exception/exception.hpp ****                 }
 414              		.loc 3 425 0
 415 0016 90       		nop
 416 0017 5D       		popq	%rbp
 417              		.cfi_def_cfa 7, 8
 418 0018 C3       		ret
 419              		.cfi_endproc
 420              	.LFE1948:
 422              		.weak	_ZN5boost16exception_detail10clone_baseD1Ev
 423              		.set	_ZN5boost16exception_detail10clone_baseD1Ev,_ZN5boost16exception_detail10clone_baseD2Ev
 424              		.section	.text._ZN5boost16exception_detail10clone_baseD0Ev,"axG",@progbits,_ZN5boost16exception_de
 425              		.align 2
 426              		.weak	_ZN5boost16exception_detail10clone_baseD0Ev
 428              	_ZN5boost16exception_detail10clone_baseD0Ev:
 429              	.LFB1950:
 423:/usr/include/boost/exception/exception.hpp ****                 {
 430              		.loc 3 423 0
 431              		.cfi_startproc
 432 0000 55       		pushq	%rbp
 433              		.cfi_def_cfa_offset 16
 434              		.cfi_offset 6, -16
 435 0001 4889E5   		movq	%rsp, %rbp
 436              		.cfi_def_cfa_register 6
 437 0004 4883EC10 		subq	$16, %rsp
 438 0008 48897DF8 		movq	%rdi, -8(%rbp)
 439              		.loc 3 425 0
 440 000c 488B45F8 		movq	-8(%rbp), %rax
 441 0010 4889C7   		movq	%rax, %rdi
GAS LISTING /tmp/ccsIN87E.s 			page 20


 442 0013 E8000000 		call	_ZN5boost16exception_detail10clone_baseD1Ev
 442      00
 443 0018 488B45F8 		movq	-8(%rbp), %rax
 444 001c BE080000 		movl	$8, %esi
 444      00
 445 0021 4889C7   		movq	%rax, %rdi
 446 0024 E8000000 		call	_ZdlPvm@PLT
 446      00
 447 0029 C9       		leave
 448              		.cfi_def_cfa 7, 8
 449 002a C3       		ret
 450              		.cfi_endproc
 451              	.LFE1950:
 453              		.section	.text._ZN5boost16exception_detail20copy_boost_exceptionEPNS_9exceptionEPKS1_,"axG",@progb
 454              		.weak	_ZN5boost16exception_detail20copy_boost_exceptionEPNS_9exceptionEPKS1_
 456              	_ZN5boost16exception_detail20copy_boost_exceptionEPNS_9exceptionEPKS1_:
 457              	.LFB1951:
 426:/usr/include/boost/exception/exception.hpp ****             };
 427:/usr/include/boost/exception/exception.hpp **** #if defined(__GNUC__)
 428:/usr/include/boost/exception/exception.hpp **** # if (__GNUC__ == 4 && __GNUC_MINOR__ >= 1) || (__GNUC__ > 4)
 429:/usr/include/boost/exception/exception.hpp **** #  pragma GCC visibility pop
 430:/usr/include/boost/exception/exception.hpp **** # endif
 431:/usr/include/boost/exception/exception.hpp **** #endif
 432:/usr/include/boost/exception/exception.hpp **** 
 433:/usr/include/boost/exception/exception.hpp ****         inline
 434:/usr/include/boost/exception/exception.hpp ****         void
 435:/usr/include/boost/exception/exception.hpp ****         copy_boost_exception( exception * a, exception const * b )
 436:/usr/include/boost/exception/exception.hpp ****             {
 458              		.loc 3 436 0
 459              		.cfi_startproc
 460              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 461              		.cfi_lsda 0x1b,.LLSDA1951
 462 0000 55       		pushq	%rbp
 463              		.cfi_def_cfa_offset 16
 464              		.cfi_offset 6, -16
 465 0001 4889E5   		movq	%rsp, %rbp
 466              		.cfi_def_cfa_register 6
 467 0004 53       		pushq	%rbx
 468 0005 4883EC38 		subq	$56, %rsp
 469              		.cfi_offset 3, -24
 470 0009 48897DC8 		movq	%rdi, -56(%rbp)
 471 000d 488975C0 		movq	%rsi, -64(%rbp)
 437:/usr/include/boost/exception/exception.hpp ****             refcount_ptr<error_info_container> data;
 472              		.loc 3 437 0
 473 0011 488D45D8 		leaq	-40(%rbp), %rax
 474 0015 4889C7   		movq	%rax, %rdi
 475 0018 E8000000 		call	_ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEEC1Ev
 475      00
 476              	.LBB12:
 438:/usr/include/boost/exception/exception.hpp ****             if( error_info_container * d=b->data_.get() )
 477              		.loc 3 438 0
 478 001d 488B45C0 		movq	-64(%rbp), %rax
 479 0021 4883C008 		addq	$8, %rax
 480 0025 4889C7   		movq	%rax, %rdi
 481 0028 E8000000 		call	_ZNK5boost16exception_detail12refcount_ptrINS0_20error_info_containerEE3getEv
 481      00
 482 002d 488945E8 		movq	%rax, -24(%rbp)
GAS LISTING /tmp/ccsIN87E.s 			page 21


 483 0031 48837DE8 		cmpq	$0, -24(%rbp)
 483      00
 484 0036 743D     		je	.L17
 439:/usr/include/boost/exception/exception.hpp ****                 data = d->clone();
 485              		.loc 3 439 0
 486 0038 488B45E8 		movq	-24(%rbp), %rax
 487 003c 488B00   		movq	(%rax), %rax
 488 003f 4883C028 		addq	$40, %rax
 489 0043 488B00   		movq	(%rax), %rax
 490 0046 488D55E0 		leaq	-32(%rbp), %rdx
 491 004a 488B4DE8 		movq	-24(%rbp), %rcx
 492 004e 4889CE   		movq	%rcx, %rsi
 493 0051 4889D7   		movq	%rdx, %rdi
 494              	.LEHB0:
 495 0054 FFD0     		call	*%rax
 496              	.LVL0:
 497              	.LEHE0:
 498              		.loc 3 439 0 is_stmt 0 discriminator 1
 499 0056 488D55E0 		leaq	-32(%rbp), %rdx
 500 005a 488D45D8 		leaq	-40(%rbp), %rax
 501 005e 4889D6   		movq	%rdx, %rsi
 502 0061 4889C7   		movq	%rax, %rdi
 503              	.LEHB1:
 504 0064 E8000000 		call	_ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEEaSERKS3_
 504      00
 505              	.LEHE1:
 506              		.loc 3 439 0 discriminator 3
 507 0069 488D45E0 		leaq	-32(%rbp), %rax
 508 006d 4889C7   		movq	%rax, %rdi
 509 0070 E8000000 		call	_ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEED1Ev
 509      00
 510              	.L17:
 511              	.LBE12:
 440:/usr/include/boost/exception/exception.hpp ****             a->throw_file_ = b->throw_file_;
 512              		.loc 3 440 0 is_stmt 1
 513 0075 488B45C0 		movq	-64(%rbp), %rax
 514 0079 488B5018 		movq	24(%rax), %rdx
 515 007d 488B45C8 		movq	-56(%rbp), %rax
 516 0081 48895018 		movq	%rdx, 24(%rax)
 441:/usr/include/boost/exception/exception.hpp ****             a->throw_line_ = b->throw_line_;
 517              		.loc 3 441 0
 518 0085 488B45C0 		movq	-64(%rbp), %rax
 519 0089 8B5020   		movl	32(%rax), %edx
 520 008c 488B45C8 		movq	-56(%rbp), %rax
 521 0090 895020   		movl	%edx, 32(%rax)
 442:/usr/include/boost/exception/exception.hpp ****             a->throw_function_ = b->throw_function_;
 522              		.loc 3 442 0
 523 0093 488B45C0 		movq	-64(%rbp), %rax
 524 0097 488B5010 		movq	16(%rax), %rdx
 525 009b 488B45C8 		movq	-56(%rbp), %rax
 526 009f 48895010 		movq	%rdx, 16(%rax)
 443:/usr/include/boost/exception/exception.hpp ****             a->data_ = data;
 527              		.loc 3 443 0
 528 00a3 488B45C8 		movq	-56(%rbp), %rax
 529 00a7 488D5008 		leaq	8(%rax), %rdx
 530 00ab 488D45D8 		leaq	-40(%rbp), %rax
 531 00af 4889C6   		movq	%rax, %rsi
GAS LISTING /tmp/ccsIN87E.s 			page 22


 532 00b2 4889D7   		movq	%rdx, %rdi
 533              	.LEHB2:
 534 00b5 E8000000 		call	_ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEEaSERKS3_
 534      00
 535              	.LEHE2:
 437:/usr/include/boost/exception/exception.hpp ****             if( error_info_container * d=b->data_.get() )
 536              		.loc 3 437 0
 537 00ba 488D45D8 		leaq	-40(%rbp), %rax
 538 00be 4889C7   		movq	%rax, %rdi
 539 00c1 E8000000 		call	_ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEED1Ev
 539      00
 444:/usr/include/boost/exception/exception.hpp ****             }
 540              		.loc 3 444 0
 541 00c6 EB2B     		jmp	.L22
 542              	.L21:
 543 00c8 4889C3   		movq	%rax, %rbx
 544              	.LBB13:
 439:/usr/include/boost/exception/exception.hpp ****             a->throw_file_ = b->throw_file_;
 545              		.loc 3 439 0
 546 00cb 488D45E0 		leaq	-32(%rbp), %rax
 547 00cf 4889C7   		movq	%rax, %rdi
 548 00d2 E8000000 		call	_ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEED1Ev
 548      00
 549 00d7 EB03     		jmp	.L19
 550              	.L20:
 551 00d9 4889C3   		movq	%rax, %rbx
 552              	.L19:
 553              	.LBE13:
 437:/usr/include/boost/exception/exception.hpp ****             if( error_info_container * d=b->data_.get() )
 554              		.loc 3 437 0
 555 00dc 488D45D8 		leaq	-40(%rbp), %rax
 556 00e0 4889C7   		movq	%rax, %rdi
 557 00e3 E8000000 		call	_ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEED1Ev
 557      00
 558 00e8 4889D8   		movq	%rbx, %rax
 559 00eb 4889C7   		movq	%rax, %rdi
 560              	.LEHB3:
 561 00ee E8000000 		call	_Unwind_Resume@PLT
 561      00
 562              	.LEHE3:
 563              	.L22:
 564              		.loc 3 444 0
 565 00f3 4883C438 		addq	$56, %rsp
 566 00f7 5B       		popq	%rbx
 567 00f8 5D       		popq	%rbp
 568              		.cfi_def_cfa 7, 8
 569 00f9 C3       		ret
 570              		.cfi_endproc
 571              	.LFE1951:
 572              		.globl	__gxx_personality_v0
 573              		.section	.gcc_except_table._ZN5boost16exception_detail20copy_boost_exceptionEPNS_9exceptionEPKS1_,
 574              	.LLSDA1951:
 575 0000 FF       		.byte	0xff
 576 0001 FF       		.byte	0xff
 577 0002 01       		.byte	0x1
 578 0003 15       		.uleb128 .LLSDACSE1951-.LLSDACSB1951
 579              	.LLSDACSB1951:
GAS LISTING /tmp/ccsIN87E.s 			page 23


 580 0004 54       		.uleb128 .LEHB0-.LFB1951
 581 0005 02       		.uleb128 .LEHE0-.LEHB0
 582 0006 D901     		.uleb128 .L20-.LFB1951
 583 0008 00       		.uleb128 0
 584 0009 64       		.uleb128 .LEHB1-.LFB1951
 585 000a 05       		.uleb128 .LEHE1-.LEHB1
 586 000b C801     		.uleb128 .L21-.LFB1951
 587 000d 00       		.uleb128 0
 588 000e B501     		.uleb128 .LEHB2-.LFB1951
 589 0010 05       		.uleb128 .LEHE2-.LEHB2
 590 0011 D901     		.uleb128 .L20-.LFB1951
 591 0013 00       		.uleb128 0
 592 0014 EE01     		.uleb128 .LEHB3-.LFB1951
 593 0016 05       		.uleb128 .LEHE3-.LEHB3
 594 0017 00       		.uleb128 0
 595 0018 00       		.uleb128 0
 596              	.LLSDACSE1951:
 597              		.section	.text._ZN5boost16exception_detail20copy_boost_exceptionEPNS_9exceptionEPKS1_,"axG",@progb
 599              		.section	.text._ZN5boost36throw_exception_assert_compatibilityERKSt9exception,"axG",@progbits,_ZN5
 600              		.weak	_ZN5boost36throw_exception_assert_compatibilityERKSt9exception
 602              	_ZN5boost36throw_exception_assert_compatibilityERKSt9exception:
 603              	.LFB1960:
 604              		.file 4 "/usr/include/boost/throw_exception.hpp"
   1:/usr/include/boost/throw_exception.hpp **** #ifndef UUID_AA15E74A856F11E08B8D93F24824019B
   2:/usr/include/boost/throw_exception.hpp **** #define UUID_AA15E74A856F11E08B8D93F24824019B
   3:/usr/include/boost/throw_exception.hpp **** #if (__GNUC__*100+__GNUC_MINOR__>301) && !defined(BOOST_EXCEPTION_ENABLE_WARNINGS)
   4:/usr/include/boost/throw_exception.hpp **** #pragma GCC system_header
   5:/usr/include/boost/throw_exception.hpp **** #endif
   6:/usr/include/boost/throw_exception.hpp **** #if defined(_MSC_VER) && !defined(BOOST_EXCEPTION_ENABLE_WARNINGS)
   7:/usr/include/boost/throw_exception.hpp **** #pragma warning(push,1)
   8:/usr/include/boost/throw_exception.hpp **** #endif
   9:/usr/include/boost/throw_exception.hpp **** 
  10:/usr/include/boost/throw_exception.hpp **** // MS compatible compilers support #pragma once
  11:/usr/include/boost/throw_exception.hpp **** 
  12:/usr/include/boost/throw_exception.hpp **** #if defined(_MSC_VER) && (_MSC_VER >= 1020)
  13:/usr/include/boost/throw_exception.hpp **** # pragma once
  14:/usr/include/boost/throw_exception.hpp **** #endif
  15:/usr/include/boost/throw_exception.hpp **** 
  16:/usr/include/boost/throw_exception.hpp **** //
  17:/usr/include/boost/throw_exception.hpp **** //  boost/throw_exception.hpp
  18:/usr/include/boost/throw_exception.hpp **** //
  19:/usr/include/boost/throw_exception.hpp **** //  Copyright (c) 2002 Peter Dimov and Multi Media Ltd.
  20:/usr/include/boost/throw_exception.hpp **** //  Copyright (c) 2008-2009 Emil Dotchevski and Reverge Studios, Inc.
  21:/usr/include/boost/throw_exception.hpp **** //
  22:/usr/include/boost/throw_exception.hpp **** //  Distributed under the Boost Software License, Version 1.0. (See
  23:/usr/include/boost/throw_exception.hpp **** //  accompanying file LICENSE_1_0.txt or copy at
  24:/usr/include/boost/throw_exception.hpp **** //  http://www.boost.org/LICENSE_1_0.txt)
  25:/usr/include/boost/throw_exception.hpp **** //
  26:/usr/include/boost/throw_exception.hpp **** //  http://www.boost.org/libs/utility/throw_exception.html
  27:/usr/include/boost/throw_exception.hpp **** //
  28:/usr/include/boost/throw_exception.hpp **** 
  29:/usr/include/boost/throw_exception.hpp **** #include <boost/detail/workaround.hpp>
  30:/usr/include/boost/throw_exception.hpp **** #include <boost/config.hpp>
  31:/usr/include/boost/throw_exception.hpp **** #include <exception>
  32:/usr/include/boost/throw_exception.hpp **** 
  33:/usr/include/boost/throw_exception.hpp **** #if !defined( BOOST_EXCEPTION_DISABLE ) && defined( __BORLANDC__ ) && BOOST_WORKAROUND( __BORLANDC_
  34:/usr/include/boost/throw_exception.hpp **** # define BOOST_EXCEPTION_DISABLE
GAS LISTING /tmp/ccsIN87E.s 			page 24


  35:/usr/include/boost/throw_exception.hpp **** #endif
  36:/usr/include/boost/throw_exception.hpp **** 
  37:/usr/include/boost/throw_exception.hpp **** #if !defined( BOOST_EXCEPTION_DISABLE ) && defined( BOOST_MSVC ) && BOOST_WORKAROUND( BOOST_MSVC, <
  38:/usr/include/boost/throw_exception.hpp **** # define BOOST_EXCEPTION_DISABLE
  39:/usr/include/boost/throw_exception.hpp **** #endif
  40:/usr/include/boost/throw_exception.hpp **** 
  41:/usr/include/boost/throw_exception.hpp **** #if !defined( BOOST_EXCEPTION_DISABLE )
  42:/usr/include/boost/throw_exception.hpp **** # include <boost/exception/exception.hpp>
  43:/usr/include/boost/throw_exception.hpp **** #if !defined(BOOST_THROW_EXCEPTION_CURRENT_FUNCTION)
  44:/usr/include/boost/throw_exception.hpp **** # include <boost/current_function.hpp>
  45:/usr/include/boost/throw_exception.hpp **** # define BOOST_THROW_EXCEPTION_CURRENT_FUNCTION BOOST_CURRENT_FUNCTION
  46:/usr/include/boost/throw_exception.hpp **** #endif
  47:/usr/include/boost/throw_exception.hpp **** # define BOOST_THROW_EXCEPTION(x) ::boost::exception_detail::throw_exception_(x,BOOST_THROW_EXCEPTI
  48:/usr/include/boost/throw_exception.hpp **** #else
  49:/usr/include/boost/throw_exception.hpp **** # define BOOST_THROW_EXCEPTION(x) ::boost::throw_exception(x)
  50:/usr/include/boost/throw_exception.hpp **** #endif
  51:/usr/include/boost/throw_exception.hpp **** 
  52:/usr/include/boost/throw_exception.hpp **** namespace boost
  53:/usr/include/boost/throw_exception.hpp **** {
  54:/usr/include/boost/throw_exception.hpp **** #ifdef BOOST_NO_EXCEPTIONS
  55:/usr/include/boost/throw_exception.hpp **** 
  56:/usr/include/boost/throw_exception.hpp **** void throw_exception( std::exception const & e ); // user defined
  57:/usr/include/boost/throw_exception.hpp **** 
  58:/usr/include/boost/throw_exception.hpp **** #else
  59:/usr/include/boost/throw_exception.hpp **** 
  60:/usr/include/boost/throw_exception.hpp **** inline void throw_exception_assert_compatibility( std::exception const & ) { }
 605              		.loc 4 60 0
 606              		.cfi_startproc
 607 0000 55       		pushq	%rbp
 608              		.cfi_def_cfa_offset 16
 609              		.cfi_offset 6, -16
 610 0001 4889E5   		movq	%rsp, %rbp
 611              		.cfi_def_cfa_register 6
 612 0004 48897DF8 		movq	%rdi, -8(%rbp)
 613              		.loc 4 60 0
 614 0008 90       		nop
 615 0009 5D       		popq	%rbp
 616              		.cfi_def_cfa 7, 8
 617 000a C3       		ret
 618              		.cfi_endproc
 619              	.LFE1960:
 621              		.section	.text._ZN5boost6detail23atomic_exchange_and_addEPii,"axG",@progbits,_ZN5boost6detail23ato
 622              		.weak	_ZN5boost6detail23atomic_exchange_and_addEPii
 624              	_ZN5boost6detail23atomic_exchange_and_addEPii:
 625              	.LFB2012:
 626              		.file 5 "/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp"
   1:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp **** #ifndef BOOST_SMART_PTR_DETAIL_SP_COUNTED_BASE_GCC_X86_HPP_INCLUDED
   2:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp **** #define BOOST_SMART_PTR_DETAIL_SP_COUNTED_BASE_GCC_X86_HPP_INCLUDED
   3:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp **** 
   4:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp **** // MS compatible compilers support #pragma once
   5:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp **** 
   6:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp **** #if defined(_MSC_VER) && (_MSC_VER >= 1020)
   7:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp **** # pragma once
   8:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp **** #endif
   9:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp **** 
  10:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp **** //
  11:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp **** //  detail/sp_counted_base_gcc_x86.hpp - g++ on 486+ or AMD64
GAS LISTING /tmp/ccsIN87E.s 			page 25


  12:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp **** //
  13:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp **** //  Copyright (c) 2001, 2002, 2003 Peter Dimov and Multi Media Ltd.
  14:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp **** //  Copyright 2004-2005 Peter Dimov
  15:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp **** //
  16:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp **** //  Distributed under the Boost Software License, Version 1.0. (See
  17:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp **** //  accompanying file LICENSE_1_0.txt or copy at
  18:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp **** //  http://www.boost.org/LICENSE_1_0.txt)
  19:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp **** //
  20:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp **** //
  21:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp **** //  Lock-free algorithm by Alexander Terekhov
  22:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp **** //
  23:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp **** //  Thanks to Ben Hitchings for the #weak + (#shared != 0)
  24:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp **** //  formulation
  25:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp **** //
  26:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp **** 
  27:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp **** #include <boost/detail/sp_typeinfo.hpp>
  28:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp **** 
  29:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp **** namespace boost
  30:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp **** {
  31:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp **** 
  32:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp **** namespace detail
  33:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp **** {
  34:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp **** 
  35:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp **** inline int atomic_exchange_and_add( int * pw, int dv )
  36:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp **** {
 627              		.loc 5 36 0
 628              		.cfi_startproc
 629 0000 55       		pushq	%rbp
 630              		.cfi_def_cfa_offset 16
 631              		.cfi_offset 6, -16
 632 0001 4889E5   		movq	%rsp, %rbp
 633              		.cfi_def_cfa_register 6
 634 0004 48897DE8 		movq	%rdi, -24(%rbp)
 635 0008 8975E4   		movl	%esi, -28(%rbp)
  37:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp ****     // int r = *pw;
  38:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp ****     // *pw += dv;
  39:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp ****     // return r;
  40:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp **** 
  41:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp ****     int r;
  42:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp **** 
  43:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp ****     __asm__ __volatile__
  44:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp ****     (
  45:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp ****         "lock\n\t"
  46:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp ****         "xadd %1, %0":
  47:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp ****         "=m"( *pw ), "=r"( r ): // outputs (%0, %1)
  48:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp ****         "m"( *pw ), "1"( dv ): // inputs (%2, %3 == %1)
  49:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp ****         "memory", "cc" // clobbers
  50:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp ****     );
 636              		.loc 5 50 0
 637 000b 488B55E8 		movq	-24(%rbp), %rdx
 638 000f 488B4DE8 		movq	-24(%rbp), %rcx
 639 0013 8B45E4   		movl	-28(%rbp), %eax
 640              	#APP
 641              	# 50 "/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp" 1
  51 0017 0FC102   	
  52              	    return r;
 642              		lock
GAS LISTING /tmp/ccsIN87E.s 			page 26


 643              		xadd %eax, (%rdx)
 644              	# 0 "" 2
 645              	#NO_APP
 646 001a 8945FC   		movl	%eax, -4(%rbp)
 647              		.loc 5 52 0
 648 001d 8B45FC   		movl	-4(%rbp), %eax
  53:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp **** }
 649              		.loc 5 53 0
 650 0020 5D       		popq	%rbp
 651              		.cfi_def_cfa 7, 8
 652 0021 C3       		ret
 653              		.cfi_endproc
 654              	.LFE2012:
 656              		.section	.text._ZN5boost6detail16atomic_incrementEPi,"axG",@progbits,_ZN5boost6detail16atomic_incr
 657              		.weak	_ZN5boost6detail16atomic_incrementEPi
 659              	_ZN5boost6detail16atomic_incrementEPi:
 660              	.LFB2013:
  54:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp **** 
  55:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp **** inline void atomic_increment( int * pw )
  56:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp **** {
 661              		.loc 5 56 0
 662              		.cfi_startproc
 663 0000 55       		pushq	%rbp
 664              		.cfi_def_cfa_offset 16
 665              		.cfi_offset 6, -16
 666 0001 4889E5   		movq	%rsp, %rbp
 667              		.cfi_def_cfa_register 6
 668 0004 48897DF8 		movq	%rdi, -8(%rbp)
  57:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp ****     //atomic_exchange_and_add( pw, 1 );
  58:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp **** 
  59:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp ****     __asm__
  60:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp ****     (
  61:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp ****         "lock\n\t"
  62:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp ****         "incl %0":
  63:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp ****         "=m"( *pw ): // output (%0)
  64:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp ****         "m"( *pw ): // input (%1)
  65:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp ****         "cc" // clobbers
  66:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp ****     );
 669              		.loc 5 66 0
 670 0008 488B45F8 		movq	-8(%rbp), %rax
 671 000c 488B55F8 		movq	-8(%rbp), %rdx
 672              	#APP
 673              	# 66 "/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp" 1
  67 0011 FF00     	}
  68              	
  67:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp **** 
 674              		lock
 675              		incl (%rax)
 676              	# 0 "" 2
 677              		.loc 5 67 0
 678              	#NO_APP
 679 0013 90       		nop
 680 0014 5D       		popq	%rbp
 681              		.cfi_def_cfa 7, 8
 682 0015 C3       		ret
 683              		.cfi_endproc
 684              	.LFE2013:
GAS LISTING /tmp/ccsIN87E.s 			page 27


 686              		.section	.text._ZN5boost6detail15sp_counted_baseC2Ev,"axG",@progbits,_ZN5boost6detail15sp_counted_
 687              		.align 2
 688              		.weak	_ZN5boost6detail15sp_counted_baseC2Ev
 690              	_ZN5boost6detail15sp_counted_baseC2Ev:
 691              	.LFB2016:
  69:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp **** inline int atomic_conditional_increment( int * pw )
  70:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp **** {
  71:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp ****     // int rv = *pw;
  72:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp ****     // if( rv != 0 ) ++*pw;
  73:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp ****     // return rv;
  74:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp **** 
  75:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp ****     int rv, tmp;
  76:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp **** 
  77:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp ****     __asm__
  78:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp ****     (
  79:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp ****         "movl %0, %%eax\n\t"
  80:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp ****         "0:\n\t"
  81:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp ****         "test %%eax, %%eax\n\t"
  82:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp ****         "je 1f\n\t"
  83:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp ****         "movl %%eax, %2\n\t"
  84:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp ****         "incl %2\n\t"
  85:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp ****         "lock\n\t"
  86:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp ****         "cmpxchgl %2, %0\n\t"
  87:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp ****         "jne 0b\n\t"
  88:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp ****         "1:":
  89:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp ****         "=m"( *pw ), "=&a"( rv ), "=&r"( tmp ): // outputs (%0, %1, %2)
  90:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp ****         "m"( *pw ): // input (%3)
  91:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp ****         "cc" // clobbers
  92:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp ****     );
  93:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp **** 
  94:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp ****     return rv;
  95:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp **** }
  96:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp **** 
  97:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp **** class sp_counted_base
  98:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp **** {
  99:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp **** private:
 100:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp **** 
 101:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp ****     sp_counted_base( sp_counted_base const & );
 102:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp ****     sp_counted_base & operator= ( sp_counted_base const & );
 103:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp **** 
 104:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp ****     int use_count_;        // #shared
 105:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp ****     int weak_count_;       // #weak + (#shared != 0)
 106:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp **** 
 107:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp **** public:
 108:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp **** 
 109:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp ****     sp_counted_base(): use_count_( 1 ), weak_count_( 1 )
 692              		.loc 5 109 0
 693              		.cfi_startproc
 694 0000 55       		pushq	%rbp
 695              		.cfi_def_cfa_offset 16
 696              		.cfi_offset 6, -16
 697 0001 4889E5   		movq	%rsp, %rbp
 698              		.cfi_def_cfa_register 6
 699 0004 48897DF8 		movq	%rdi, -8(%rbp)
 700              	.LBB14:
 701              		.loc 5 109 0
 702 0008 488D1500 		leaq	16+_ZTVN5boost6detail15sp_counted_baseE(%rip), %rdx
GAS LISTING /tmp/ccsIN87E.s 			page 28


 702      000000
 703 000f 488B45F8 		movq	-8(%rbp), %rax
 704 0013 488910   		movq	%rdx, (%rax)
 705 0016 488B45F8 		movq	-8(%rbp), %rax
 706 001a C7400801 		movl	$1, 8(%rax)
 706      000000
 707 0021 488B45F8 		movq	-8(%rbp), %rax
 708 0025 C7400C01 		movl	$1, 12(%rax)
 708      000000
 709              	.LBE14:
 110:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp ****     {
 111:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp ****     }
 710              		.loc 5 111 0
 711 002c 90       		nop
 712 002d 5D       		popq	%rbp
 713              		.cfi_def_cfa 7, 8
 714 002e C3       		ret
 715              		.cfi_endproc
 716              	.LFE2016:
 718              		.weak	_ZN5boost6detail15sp_counted_baseC1Ev
 719              		.set	_ZN5boost6detail15sp_counted_baseC1Ev,_ZN5boost6detail15sp_counted_baseC2Ev
 720              		.section	.text._ZN5boost6detail15sp_counted_baseD2Ev,"axG",@progbits,_ZN5boost6detail15sp_counted_
 721              		.align 2
 722              		.weak	_ZN5boost6detail15sp_counted_baseD2Ev
 724              	_ZN5boost6detail15sp_counted_baseD2Ev:
 725              	.LFB2019:
 112:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp **** 
 113:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp ****     virtual ~sp_counted_base() // nothrow
 726              		.loc 5 113 0
 727              		.cfi_startproc
 728 0000 55       		pushq	%rbp
 729              		.cfi_def_cfa_offset 16
 730              		.cfi_offset 6, -16
 731 0001 4889E5   		movq	%rsp, %rbp
 732              		.cfi_def_cfa_register 6
 733 0004 48897DF8 		movq	%rdi, -8(%rbp)
 734              	.LBB15:
 114:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp ****     {
 735              		.loc 5 114 0
 736 0008 488D1500 		leaq	16+_ZTVN5boost6detail15sp_counted_baseE(%rip), %rdx
 736      000000
 737 000f 488B45F8 		movq	-8(%rbp), %rax
 738 0013 488910   		movq	%rdx, (%rax)
 739              	.LBE15:
 115:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp ****     }
 740              		.loc 5 115 0
 741 0016 90       		nop
 742 0017 5D       		popq	%rbp
 743              		.cfi_def_cfa 7, 8
 744 0018 C3       		ret
 745              		.cfi_endproc
 746              	.LFE2019:
 748              		.weak	_ZN5boost6detail15sp_counted_baseD1Ev
 749              		.set	_ZN5boost6detail15sp_counted_baseD1Ev,_ZN5boost6detail15sp_counted_baseD2Ev
 750              		.section	.text._ZN5boost6detail15sp_counted_baseD0Ev,"axG",@progbits,_ZN5boost6detail15sp_counted_
 751              		.align 2
 752              		.weak	_ZN5boost6detail15sp_counted_baseD0Ev
GAS LISTING /tmp/ccsIN87E.s 			page 29


 754              	_ZN5boost6detail15sp_counted_baseD0Ev:
 755              	.LFB2021:
 113:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp ****     {
 756              		.loc 5 113 0
 757              		.cfi_startproc
 758 0000 55       		pushq	%rbp
 759              		.cfi_def_cfa_offset 16
 760              		.cfi_offset 6, -16
 761 0001 4889E5   		movq	%rsp, %rbp
 762              		.cfi_def_cfa_register 6
 763 0004 4883EC10 		subq	$16, %rsp
 764 0008 48897DF8 		movq	%rdi, -8(%rbp)
 765              		.loc 5 115 0
 766 000c 488B45F8 		movq	-8(%rbp), %rax
 767 0010 4889C7   		movq	%rax, %rdi
 768 0013 E8000000 		call	_ZN5boost6detail15sp_counted_baseD1Ev
 768      00
 769 0018 488B45F8 		movq	-8(%rbp), %rax
 770 001c BE100000 		movl	$16, %esi
 770      00
 771 0021 4889C7   		movq	%rax, %rdi
 772 0024 E8000000 		call	_ZdlPvm@PLT
 772      00
 773 0029 C9       		leave
 774              		.cfi_def_cfa 7, 8
 775 002a C3       		ret
 776              		.cfi_endproc
 777              	.LFE2021:
 779              		.section	.text._ZN5boost6detail15sp_counted_base7destroyEv,"axG",@progbits,_ZN5boost6detail15sp_co
 780              		.align 2
 781              		.weak	_ZN5boost6detail15sp_counted_base7destroyEv
 783              	_ZN5boost6detail15sp_counted_base7destroyEv:
 784              	.LFB2022:
 116:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp **** 
 117:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp ****     // dispose() is called when use_count_ drops to zero, to release
 118:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp ****     // the resources managed by *this.
 119:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp **** 
 120:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp ****     virtual void dispose() = 0; // nothrow
 121:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp **** 
 122:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp ****     // destroy() is called when weak_count_ drops to zero.
 123:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp **** 
 124:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp ****     virtual void destroy() // nothrow
 785              		.loc 5 124 0
 786              		.cfi_startproc
 787 0000 55       		pushq	%rbp
 788              		.cfi_def_cfa_offset 16
 789              		.cfi_offset 6, -16
 790 0001 4889E5   		movq	%rsp, %rbp
 791              		.cfi_def_cfa_register 6
 792 0004 4883EC10 		subq	$16, %rsp
 793 0008 48897DF8 		movq	%rdi, -8(%rbp)
 125:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp ****     {
 126:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp ****         delete this;
 794              		.loc 5 126 0
 795 000c 48837DF8 		cmpq	$0, -8(%rbp)
 795      00
 796 0011 7417     		je	.L32
GAS LISTING /tmp/ccsIN87E.s 			page 30


 797              		.loc 5 126 0 is_stmt 0 discriminator 1
 798 0013 488B45F8 		movq	-8(%rbp), %rax
 799 0017 488B00   		movq	(%rax), %rax
 800 001a 4883C008 		addq	$8, %rax
 801 001e 488B00   		movq	(%rax), %rax
 802 0021 488B55F8 		movq	-8(%rbp), %rdx
 803 0025 4889D7   		movq	%rdx, %rdi
 804 0028 FFD0     		call	*%rax
 805              	.LVL1:
 806              	.L32:
 127:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp ****     }
 807              		.loc 5 127 0 is_stmt 1
 808 002a 90       		nop
 809 002b C9       		leave
 810              		.cfi_def_cfa 7, 8
 811 002c C3       		ret
 812              		.cfi_endproc
 813              	.LFE2022:
 815              		.section	.text._ZN5boost6detail15sp_counted_base12add_ref_copyEv,"axG",@progbits,_ZN5boost6detail1
 816              		.align 2
 817              		.weak	_ZN5boost6detail15sp_counted_base12add_ref_copyEv
 819              	_ZN5boost6detail15sp_counted_base12add_ref_copyEv:
 820              	.LFB2023:
 128:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp **** 
 129:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp ****     virtual void * get_deleter( sp_typeinfo const & ti ) = 0;
 130:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp ****     virtual void * get_untyped_deleter() = 0;
 131:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp **** 
 132:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp ****     void add_ref_copy()
 821              		.loc 5 132 0
 822              		.cfi_startproc
 823 0000 55       		pushq	%rbp
 824              		.cfi_def_cfa_offset 16
 825              		.cfi_offset 6, -16
 826 0001 4889E5   		movq	%rsp, %rbp
 827              		.cfi_def_cfa_register 6
 828 0004 4883EC10 		subq	$16, %rsp
 829 0008 48897DF8 		movq	%rdi, -8(%rbp)
 133:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp ****     {
 134:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp ****         atomic_increment( &use_count_ );
 830              		.loc 5 134 0
 831 000c 488B45F8 		movq	-8(%rbp), %rax
 832 0010 4883C008 		addq	$8, %rax
 833 0014 4889C7   		movq	%rax, %rdi
 834 0017 E8000000 		call	_ZN5boost6detail16atomic_incrementEPi
 834      00
 135:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp ****     }
 835              		.loc 5 135 0
 836 001c 90       		nop
 837 001d C9       		leave
 838              		.cfi_def_cfa 7, 8
 839 001e C3       		ret
 840              		.cfi_endproc
 841              	.LFE2023:
 843              		.section	.text._ZN5boost6detail15sp_counted_base7releaseEv,"axG",@progbits,_ZN5boost6detail15sp_co
 844              		.align 2
 845              		.weak	_ZN5boost6detail15sp_counted_base7releaseEv
 847              	_ZN5boost6detail15sp_counted_base7releaseEv:
GAS LISTING /tmp/ccsIN87E.s 			page 31


 848              	.LFB2025:
 136:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp **** 
 137:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp ****     bool add_ref_lock() // true on success
 138:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp ****     {
 139:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp ****         return atomic_conditional_increment( &use_count_ ) != 0;
 140:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp ****     }
 141:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp **** 
 142:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp ****     void release() // nothrow
 849              		.loc 5 142 0
 850              		.cfi_startproc
 851 0000 55       		pushq	%rbp
 852              		.cfi_def_cfa_offset 16
 853              		.cfi_offset 6, -16
 854 0001 4889E5   		movq	%rsp, %rbp
 855              		.cfi_def_cfa_register 6
 856 0004 4883EC10 		subq	$16, %rsp
 857 0008 48897DF8 		movq	%rdi, -8(%rbp)
 143:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp ****     {
 144:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp ****         if( atomic_exchange_and_add( &use_count_, -1 ) == 1 )
 858              		.loc 5 144 0
 859 000c 488B45F8 		movq	-8(%rbp), %rax
 860 0010 4883C008 		addq	$8, %rax
 861 0014 BEFFFFFF 		movl	$-1, %esi
 861      FF
 862 0019 4889C7   		movq	%rax, %rdi
 863 001c E8000000 		call	_ZN5boost6detail23atomic_exchange_and_addEPii
 863      00
 864 0021 83F801   		cmpl	$1, %eax
 865 0024 0F94C0   		sete	%al
 866 0027 84C0     		testb	%al, %al
 867 0029 7423     		je	.L36
 145:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp ****         {
 146:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp ****             dispose();
 868              		.loc 5 146 0
 869 002b 488B45F8 		movq	-8(%rbp), %rax
 870 002f 488B00   		movq	(%rax), %rax
 871 0032 4883C010 		addq	$16, %rax
 872 0036 488B00   		movq	(%rax), %rax
 873 0039 488B55F8 		movq	-8(%rbp), %rdx
 874 003d 4889D7   		movq	%rdx, %rdi
 875 0040 FFD0     		call	*%rax
 876              	.LVL2:
 147:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp ****             weak_release();
 877              		.loc 5 147 0
 878 0042 488B45F8 		movq	-8(%rbp), %rax
 879 0046 4889C7   		movq	%rax, %rdi
 880 0049 E8000000 		call	_ZN5boost6detail15sp_counted_base12weak_releaseEv
 880      00
 881              	.L36:
 148:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp ****         }
 149:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp ****     }
 882              		.loc 5 149 0
 883 004e 90       		nop
 884 004f C9       		leave
 885              		.cfi_def_cfa 7, 8
 886 0050 C3       		ret
 887              		.cfi_endproc
GAS LISTING /tmp/ccsIN87E.s 			page 32


 888              	.LFE2025:
 890              		.section	.text._ZN5boost6detail15sp_counted_base12weak_releaseEv,"axG",@progbits,_ZN5boost6detail1
 891              		.align 2
 892              		.weak	_ZN5boost6detail15sp_counted_base12weak_releaseEv
 894              	_ZN5boost6detail15sp_counted_base12weak_releaseEv:
 895              	.LFB2027:
 150:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp **** 
 151:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp ****     void weak_add_ref() // nothrow
 152:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp ****     {
 153:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp ****         atomic_increment( &weak_count_ );
 154:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp ****     }
 155:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp **** 
 156:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp ****     void weak_release() // nothrow
 896              		.loc 5 156 0
 897              		.cfi_startproc
 898 0000 55       		pushq	%rbp
 899              		.cfi_def_cfa_offset 16
 900              		.cfi_offset 6, -16
 901 0001 4889E5   		movq	%rsp, %rbp
 902              		.cfi_def_cfa_register 6
 903 0004 4883EC10 		subq	$16, %rsp
 904 0008 48897DF8 		movq	%rdi, -8(%rbp)
 157:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp ****     {
 158:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp ****         if( atomic_exchange_and_add( &weak_count_, -1 ) == 1 )
 905              		.loc 5 158 0
 906 000c 488B45F8 		movq	-8(%rbp), %rax
 907 0010 4883C00C 		addq	$12, %rax
 908 0014 BEFFFFFF 		movl	$-1, %esi
 908      FF
 909 0019 4889C7   		movq	%rax, %rdi
 910 001c E8000000 		call	_ZN5boost6detail23atomic_exchange_and_addEPii
 910      00
 911 0021 83F801   		cmpl	$1, %eax
 912 0024 0F94C0   		sete	%al
 913 0027 84C0     		testb	%al, %al
 914 0029 7417     		je	.L39
 159:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp ****         {
 160:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp ****             destroy();
 915              		.loc 5 160 0
 916 002b 488B45F8 		movq	-8(%rbp), %rax
 917 002f 488B00   		movq	(%rax), %rax
 918 0032 4883C018 		addq	$24, %rax
 919 0036 488B00   		movq	(%rax), %rax
 920 0039 488B55F8 		movq	-8(%rbp), %rdx
 921 003d 4889D7   		movq	%rdx, %rdi
 922 0040 FFD0     		call	*%rax
 923              	.LVL3:
 924              	.L39:
 161:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp ****         }
 162:/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp ****     }
 925              		.loc 5 162 0
 926 0042 90       		nop
 927 0043 C9       		leave
 928              		.cfi_def_cfa 7, 8
 929 0044 C3       		ret
 930              		.cfi_endproc
 931              	.LFE2027:
GAS LISTING /tmp/ccsIN87E.s 			page 33


 933              		.section	.text._ZN5boost6detail12shared_countC2Ev,"axG",@progbits,_ZN5boost6detail12shared_countC5
 934              		.align 2
 935              		.weak	_ZN5boost6detail12shared_countC2Ev
 937              	_ZN5boost6detail12shared_countC2Ev:
 938              	.LFB2056:
 939              		.file 6 "/usr/include/boost/smart_ptr/detail/shared_count.hpp"
   1:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #ifndef BOOST_SMART_PTR_DETAIL_SHARED_COUNT_HPP_INCLUDED
   2:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #define BOOST_SMART_PTR_DETAIL_SHARED_COUNT_HPP_INCLUDED
   3:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
   4:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** // MS compatible compilers support #pragma once
   5:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
   6:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #if defined(_MSC_VER) && (_MSC_VER >= 1020)
   7:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** # pragma once
   8:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #endif
   9:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
  10:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** //
  11:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** //  detail/shared_count.hpp
  12:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** //
  13:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** //  Copyright (c) 2001, 2002, 2003 Peter Dimov and Multi Media Ltd.
  14:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** //  Copyright 2004-2005 Peter Dimov
  15:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** //
  16:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** // Distributed under the Boost Software License, Version 1.0. (See
  17:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** // accompanying file LICENSE_1_0.txt or copy at
  18:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** // http://www.boost.org/LICENSE_1_0.txt)
  19:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** //
  20:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
  21:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #ifdef __BORLANDC__
  22:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** # pragma warn -8027     // Functions containing try are not expanded inline
  23:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #endif
  24:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
  25:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #include <boost/config.hpp>
  26:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #include <boost/checked_delete.hpp>
  27:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #include <boost/throw_exception.hpp>
  28:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #include <boost/smart_ptr/bad_weak_ptr.hpp>
  29:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #include <boost/smart_ptr/detail/sp_counted_base.hpp>
  30:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #include <boost/smart_ptr/detail/sp_counted_impl.hpp>
  31:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #include <boost/smart_ptr/detail/sp_disable_deprecated.hpp>
  32:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #include <boost/detail/workaround.hpp>
  33:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** // In order to avoid circular dependencies with Boost.TR1
  34:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** // we make sure that our include of <memory> doesn't try to
  35:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** // pull in the TR1 headers: that's why we use this header 
  36:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** // rather than including <memory> directly:
  37:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #include <boost/config/no_tr1/memory.hpp>  // std::auto_ptr
  38:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #include <functional>       // std::less
  39:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
  40:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #ifdef BOOST_NO_EXCEPTIONS
  41:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** # include <new>              // std::bad_alloc
  42:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #endif
  43:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
  44:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #include <boost/core/addressof.hpp>
  45:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
  46:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #if defined( BOOST_SP_DISABLE_DEPRECATED )
  47:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #pragma GCC diagnostic push
  48:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #pragma GCC diagnostic ignored "-Wdeprecated-declarations"
  49:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #endif
  50:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
  51:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** namespace boost
GAS LISTING /tmp/ccsIN87E.s 			page 34


  52:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** {
  53:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
  54:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** namespace movelib
  55:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** {
  56:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
  57:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****     template< class T, class D > class unique_ptr;
  58:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
  59:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** } // namespace movelib
  60:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
  61:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** namespace detail
  62:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** {
  63:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
  64:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #if defined(BOOST_SP_ENABLE_DEBUG_HOOKS)
  65:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
  66:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** int const shared_count_id = 0x2C35F101;
  67:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** int const   weak_count_id = 0x298C38A4;
  68:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
  69:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #endif
  70:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
  71:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** struct sp_nothrow_tag {};
  72:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
  73:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** template< class D > struct sp_inplace_tag
  74:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** {
  75:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** };
  76:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
  77:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** template< class T > class sp_reference_wrapper
  78:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** { 
  79:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** public:
  80:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
  81:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****     explicit sp_reference_wrapper( T & t): t_( boost::addressof( t ) )
  82:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****     {
  83:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****     }
  84:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
  85:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****     template< class Y > void operator()( Y * p ) const
  86:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****     {
  87:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         (*t_)( p );
  88:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****     }
  89:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
  90:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** private:
  91:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
  92:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****     T * t_;
  93:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** };
  94:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
  95:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** template< class D > struct sp_convert_reference
  96:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** {
  97:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****     typedef D type;
  98:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** };
  99:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 100:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** template< class D > struct sp_convert_reference< D& >
 101:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** {
 102:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****     typedef sp_reference_wrapper< D > type;
 103:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** };
 104:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 105:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** class weak_count;
 106:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 107:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** class shared_count
 108:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** {
GAS LISTING /tmp/ccsIN87E.s 			page 35


 109:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** private:
 110:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 111:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****     sp_counted_base * pi_;
 112:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 113:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #if defined(BOOST_SP_ENABLE_DEBUG_HOOKS)
 114:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****     int id_;
 115:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #endif
 116:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 117:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****     friend class weak_count;
 118:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 119:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** public:
 120:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 121:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****     shared_count(): pi_(0) // nothrow
 940              		.loc 6 121 0
 941              		.cfi_startproc
 942 0000 55       		pushq	%rbp
 943              		.cfi_def_cfa_offset 16
 944              		.cfi_offset 6, -16
 945 0001 4889E5   		movq	%rsp, %rbp
 946              		.cfi_def_cfa_register 6
 947 0004 48897DF8 		movq	%rdi, -8(%rbp)
 948              	.LBB16:
 949              		.loc 6 121 0
 950 0008 488B45F8 		movq	-8(%rbp), %rax
 951 000c 48C70000 		movq	$0, (%rax)
 951      000000
 952              	.LBE16:
 122:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #if defined(BOOST_SP_ENABLE_DEBUG_HOOKS)
 123:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         , id_(shared_count_id)
 124:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #endif
 125:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****     {
 126:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****     }
 953              		.loc 6 126 0
 954 0013 90       		nop
 955 0014 5D       		popq	%rbp
 956              		.cfi_def_cfa 7, 8
 957 0015 C3       		ret
 958              		.cfi_endproc
 959              	.LFE2056:
 961              		.weak	_ZN5boost6detail12shared_countC1Ev
 962              		.set	_ZN5boost6detail12shared_countC1Ev,_ZN5boost6detail12shared_countC2Ev
 963              		.section	.text._ZN5boost6detail12shared_countD2Ev,"axG",@progbits,_ZN5boost6detail12shared_countD5
 964              		.align 2
 965              		.weak	_ZN5boost6detail12shared_countD2Ev
 967              	_ZN5boost6detail12shared_countD2Ev:
 968              	.LFB2067:
 127:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 128:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****     template<class Y> explicit shared_count( Y * p ): pi_( 0 )
 129:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #if defined(BOOST_SP_ENABLE_DEBUG_HOOKS)
 130:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         , id_(shared_count_id)
 131:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #endif
 132:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****     {
 133:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #ifndef BOOST_NO_EXCEPTIONS
 134:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 135:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         try
 136:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         {
 137:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****             pi_ = new sp_counted_impl_p<Y>( p );
GAS LISTING /tmp/ccsIN87E.s 			page 36


 138:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         }
 139:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         catch(...)
 140:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         {
 141:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****             boost::checked_delete( p );
 142:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****             throw;
 143:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         }
 144:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 145:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #else
 146:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 147:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         pi_ = new sp_counted_impl_p<Y>( p );
 148:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 149:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         if( pi_ == 0 )
 150:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         {
 151:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****             boost::checked_delete( p );
 152:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****             boost::throw_exception( std::bad_alloc() );
 153:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         }
 154:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 155:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #endif
 156:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****     }
 157:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 158:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #if defined( BOOST_MSVC ) && BOOST_WORKAROUND( BOOST_MSVC, <= 1200 )
 159:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****     template<class Y, class D> shared_count( Y * p, D d ): pi_(0)
 160:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #else
 161:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****     template<class P, class D> shared_count( P p, D d ): pi_(0)
 162:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #endif
 163:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #if defined(BOOST_SP_ENABLE_DEBUG_HOOKS)
 164:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         , id_(shared_count_id)
 165:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #endif
 166:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****     {
 167:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #if defined( BOOST_MSVC ) && BOOST_WORKAROUND( BOOST_MSVC, <= 1200 )
 168:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         typedef Y* P;
 169:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #endif
 170:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #ifndef BOOST_NO_EXCEPTIONS
 171:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 172:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         try
 173:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         {
 174:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****             pi_ = new sp_counted_impl_pd<P, D>(p, d);
 175:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         }
 176:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         catch(...)
 177:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         {
 178:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****             d(p); // delete p
 179:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****             throw;
 180:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         }
 181:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 182:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #else
 183:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 184:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         pi_ = new sp_counted_impl_pd<P, D>(p, d);
 185:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 186:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         if(pi_ == 0)
 187:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         {
 188:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****             d(p); // delete p
 189:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****             boost::throw_exception(std::bad_alloc());
 190:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         }
 191:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 192:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #endif
 193:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****     }
 194:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
GAS LISTING /tmp/ccsIN87E.s 			page 37


 195:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #if !defined( BOOST_NO_FUNCTION_TEMPLATE_ORDERING )
 196:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 197:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****     template< class P, class D > shared_count( P p, sp_inplace_tag<D> ): pi_( 0 )
 198:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #if defined(BOOST_SP_ENABLE_DEBUG_HOOKS)
 199:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         , id_(shared_count_id)
 200:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #endif
 201:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****     {
 202:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #ifndef BOOST_NO_EXCEPTIONS
 203:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 204:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         try
 205:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         {
 206:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****             pi_ = new sp_counted_impl_pd< P, D >( p );
 207:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         }
 208:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         catch( ... )
 209:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         {
 210:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****             D::operator_fn( p ); // delete p
 211:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****             throw;
 212:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         }
 213:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 214:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #else
 215:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 216:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         pi_ = new sp_counted_impl_pd< P, D >( p );
 217:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 218:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         if( pi_ == 0 )
 219:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         {
 220:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****             D::operator_fn( p ); // delete p
 221:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****             boost::throw_exception( std::bad_alloc() );
 222:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         }
 223:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 224:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #endif // #ifndef BOOST_NO_EXCEPTIONS
 225:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****     }
 226:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 227:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #endif // !defined( BOOST_NO_FUNCTION_TEMPLATE_ORDERING )
 228:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 229:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****     template<class P, class D, class A> shared_count( P p, D d, A a ): pi_( 0 )
 230:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #if defined(BOOST_SP_ENABLE_DEBUG_HOOKS)
 231:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         , id_(shared_count_id)
 232:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #endif
 233:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****     {
 234:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         typedef sp_counted_impl_pda<P, D, A> impl_type;
 235:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 236:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #if !defined( BOOST_NO_CXX11_ALLOCATOR )
 237:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 238:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         typedef typename std::allocator_traits<A>::template rebind_alloc< impl_type > A2;
 239:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 240:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #else
 241:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 242:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         typedef typename A::template rebind< impl_type >::other A2;
 243:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 244:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #endif
 245:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 246:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         A2 a2( a );
 247:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 248:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #ifndef BOOST_NO_EXCEPTIONS
 249:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 250:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         try
 251:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         {
GAS LISTING /tmp/ccsIN87E.s 			page 38


 252:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #if !defined( BOOST_NO_CXX11_ALLOCATOR )
 253:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 254:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****             impl_type * pi = std::allocator_traits<A2>::allocate( a2, 1 );
 255:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****             pi_ = pi;
 256:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****             std::allocator_traits<A2>::construct( a2, pi, p, d, a );
 257:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 258:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #else
 259:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 260:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****             pi_ = a2.allocate( 1, static_cast< impl_type* >( 0 ) );
 261:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****             ::new( static_cast< void* >( pi_ ) ) impl_type( p, d, a );
 262:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 263:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #endif
 264:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         }
 265:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         catch(...)
 266:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         {
 267:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****             d( p );
 268:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 269:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****             if( pi_ != 0 )
 270:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****             {
 271:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****                 a2.deallocate( static_cast< impl_type* >( pi_ ), 1 );
 272:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****             }
 273:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 274:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****             throw;
 275:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         }
 276:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 277:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #else
 278:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 279:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #if !defined( BOOST_NO_CXX11_ALLOCATOR )
 280:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 281:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         impl_type * pi = std::allocator_traits<A2>::allocate( a2, 1 );
 282:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         pi_ = pi;
 283:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 284:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #else
 285:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 286:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         pi_ = a2.allocate( 1, static_cast< impl_type* >( 0 ) );
 287:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 288:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #endif
 289:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 290:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         if( pi_ != 0 )
 291:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         {
 292:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #if !defined( BOOST_NO_CXX11_ALLOCATOR )
 293:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 294:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****             std::allocator_traits<A2>::construct( a2, pi, p, d, a );
 295:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 296:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #else
 297:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 298:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****             ::new( static_cast< void* >( pi_ ) ) impl_type( p, d, a );
 299:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 300:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #endif
 301:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         }
 302:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         else
 303:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         {
 304:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****             d( p );
 305:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****             boost::throw_exception( std::bad_alloc() );
 306:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         }
 307:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 308:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #endif
GAS LISTING /tmp/ccsIN87E.s 			page 39


 309:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****     }
 310:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 311:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #if !defined( BOOST_NO_FUNCTION_TEMPLATE_ORDERING )
 312:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 313:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****     template< class P, class D, class A > shared_count( P p, sp_inplace_tag< D >, A a ): pi_( 0 )
 314:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #if defined(BOOST_SP_ENABLE_DEBUG_HOOKS)
 315:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         , id_(shared_count_id)
 316:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #endif
 317:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****     {
 318:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         typedef sp_counted_impl_pda< P, D, A > impl_type;
 319:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 320:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #if !defined( BOOST_NO_CXX11_ALLOCATOR )
 321:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 322:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         typedef typename std::allocator_traits<A>::template rebind_alloc< impl_type > A2;
 323:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 324:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #else
 325:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 326:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         typedef typename A::template rebind< impl_type >::other A2;
 327:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 328:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #endif
 329:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 330:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         A2 a2( a );
 331:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 332:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #ifndef BOOST_NO_EXCEPTIONS
 333:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 334:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         try
 335:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         {
 336:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #if !defined( BOOST_NO_CXX11_ALLOCATOR )
 337:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 338:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****             impl_type * pi = std::allocator_traits<A2>::allocate( a2, 1 );
 339:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****             pi_ = pi;
 340:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****             std::allocator_traits<A2>::construct( a2, pi, p, a );
 341:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 342:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #else
 343:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 344:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****             pi_ = a2.allocate( 1, static_cast< impl_type* >( 0 ) );
 345:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****             ::new( static_cast< void* >( pi_ ) ) impl_type( p, a );
 346:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 347:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #endif
 348:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         }
 349:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         catch(...)
 350:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         {
 351:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****             D::operator_fn( p );
 352:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 353:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****             if( pi_ != 0 )
 354:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****             {
 355:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****                 a2.deallocate( static_cast< impl_type* >( pi_ ), 1 );
 356:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****             }
 357:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 358:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****             throw;
 359:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         }
 360:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 361:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #else
 362:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 363:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #if !defined( BOOST_NO_CXX11_ALLOCATOR )
 364:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 365:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         impl_type * pi = std::allocator_traits<A2>::allocate( a2, 1 );
GAS LISTING /tmp/ccsIN87E.s 			page 40


 366:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         pi_ = pi;
 367:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 368:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #else
 369:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 370:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         pi_ = a2.allocate( 1, static_cast< impl_type* >( 0 ) );
 371:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 372:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #endif
 373:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 374:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         if( pi_ != 0 )
 375:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         {
 376:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #if !defined( BOOST_NO_CXX11_ALLOCATOR )
 377:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 378:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****             std::allocator_traits<A2>::construct( a2, pi, p, a );
 379:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 380:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #else
 381:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 382:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****             ::new( static_cast< void* >( pi_ ) ) impl_type( p, a );
 383:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 384:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #endif
 385:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         }
 386:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         else
 387:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         {
 388:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****             D::operator_fn( p );
 389:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****             boost::throw_exception( std::bad_alloc() );
 390:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         }
 391:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 392:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #endif // #ifndef BOOST_NO_EXCEPTIONS
 393:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****     }
 394:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 395:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #endif // !defined( BOOST_NO_FUNCTION_TEMPLATE_ORDERING )
 396:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 397:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #ifndef BOOST_NO_AUTO_PTR
 398:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 399:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****     // auto_ptr<Y> is special cased to provide the strong guarantee
 400:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 401:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****     template<class Y>
 402:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****     explicit shared_count( std::auto_ptr<Y> & r ): pi_( new sp_counted_impl_p<Y>( r.get() ) )
 403:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #if defined(BOOST_SP_ENABLE_DEBUG_HOOKS)
 404:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         , id_(shared_count_id)
 405:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #endif
 406:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****     {
 407:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #ifdef BOOST_NO_EXCEPTIONS
 408:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 409:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         if( pi_ == 0 )
 410:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         {
 411:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****             boost::throw_exception(std::bad_alloc());
 412:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         }
 413:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 414:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #endif
 415:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 416:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         r.release();
 417:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****     }
 418:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 419:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #endif 
 420:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 421:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #if !defined( BOOST_NO_CXX11_SMART_PTR )
 422:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
GAS LISTING /tmp/ccsIN87E.s 			page 41


 423:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****     template<class Y, class D>
 424:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****     explicit shared_count( std::unique_ptr<Y, D> & r ): pi_( 0 )
 425:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #if defined(BOOST_SP_ENABLE_DEBUG_HOOKS)
 426:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         , id_(shared_count_id)
 427:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #endif
 428:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****     {
 429:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         typedef typename sp_convert_reference<D>::type D2;
 430:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 431:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         D2 d2( r.get_deleter() );
 432:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         pi_ = new sp_counted_impl_pd< typename std::unique_ptr<Y, D>::pointer, D2 >( r.get(), d2 );
 433:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 434:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #ifdef BOOST_NO_EXCEPTIONS
 435:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 436:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         if( pi_ == 0 )
 437:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         {
 438:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****             boost::throw_exception( std::bad_alloc() );
 439:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         }
 440:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 441:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #endif
 442:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 443:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         r.release();
 444:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****     }
 445:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 446:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #endif
 447:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 448:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****     template<class Y, class D>
 449:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****     explicit shared_count( boost::movelib::unique_ptr<Y, D> & r ): pi_( 0 )
 450:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #if defined(BOOST_SP_ENABLE_DEBUG_HOOKS)
 451:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         , id_(shared_count_id)
 452:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #endif
 453:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****     {
 454:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         typedef typename sp_convert_reference<D>::type D2;
 455:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 456:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         D2 d2( r.get_deleter() );
 457:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         pi_ = new sp_counted_impl_pd< typename boost::movelib::unique_ptr<Y, D>::pointer, D2 >( r.g
 458:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 459:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #ifdef BOOST_NO_EXCEPTIONS
 460:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 461:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         if( pi_ == 0 )
 462:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         {
 463:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****             boost::throw_exception( std::bad_alloc() );
 464:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         }
 465:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 466:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #endif
 467:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 468:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         r.release();
 469:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****     }
 470:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 471:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****     ~shared_count() // nothrow
 969              		.loc 6 471 0
 970              		.cfi_startproc
 971              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 972              		.cfi_lsda 0x1b,.LLSDA2067
 973 0000 55       		pushq	%rbp
 974              		.cfi_def_cfa_offset 16
 975              		.cfi_offset 6, -16
 976 0001 4889E5   		movq	%rsp, %rbp
GAS LISTING /tmp/ccsIN87E.s 			page 42


 977              		.cfi_def_cfa_register 6
 978 0004 4883EC10 		subq	$16, %rsp
 979 0008 48897DF8 		movq	%rdi, -8(%rbp)
 980              	.LBB17:
 472:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****     {
 473:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         if( pi_ != 0 ) pi_->release();
 981              		.loc 6 473 0
 982 000c 488B45F8 		movq	-8(%rbp), %rax
 983 0010 488B00   		movq	(%rax), %rax
 984 0013 4885C0   		testq	%rax, %rax
 985 0016 740F     		je	.L43
 986              		.loc 6 473 0 is_stmt 0 discriminator 1
 987 0018 488B45F8 		movq	-8(%rbp), %rax
 988 001c 488B00   		movq	(%rax), %rax
 989 001f 4889C7   		movq	%rax, %rdi
 990 0022 E8000000 		call	_ZN5boost6detail15sp_counted_base7releaseEv
 990      00
 991              	.L43:
 992              	.LBE17:
 474:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #if defined(BOOST_SP_ENABLE_DEBUG_HOOKS)
 475:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         id_ = 0;
 476:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #endif
 477:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****     }
 993              		.loc 6 477 0 is_stmt 1
 994 0027 90       		nop
 995 0028 C9       		leave
 996              		.cfi_def_cfa 7, 8
 997 0029 C3       		ret
 998              		.cfi_endproc
 999              	.LFE2067:
 1000              		.section	.gcc_except_table._ZN5boost6detail12shared_countD2Ev,"aG",@progbits,_ZN5boost6detail12sha
 1001              	.LLSDA2067:
 1002 0000 FF       		.byte	0xff
 1003 0001 FF       		.byte	0xff
 1004 0002 01       		.byte	0x1
 1005 0003 00       		.uleb128 .LLSDACSE2067-.LLSDACSB2067
 1006              	.LLSDACSB2067:
 1007              	.LLSDACSE2067:
 1008              		.section	.text._ZN5boost6detail12shared_countD2Ev,"axG",@progbits,_ZN5boost6detail12shared_countD5
 1010              		.weak	_ZN5boost6detail12shared_countD1Ev
 1011              		.set	_ZN5boost6detail12shared_countD1Ev,_ZN5boost6detail12shared_countD2Ev
 1012              		.section	.text._ZN5boost6detail12shared_countC2ERKS1_,"axG",@progbits,_ZN5boost6detail12shared_cou
 1013              		.align 2
 1014              		.weak	_ZN5boost6detail12shared_countC2ERKS1_
 1016              	_ZN5boost6detail12shared_countC2ERKS1_:
 1017              	.LFB2070:
 478:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 479:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****     shared_count(shared_count const & r): pi_(r.pi_) // nothrow
 1018              		.loc 6 479 0
 1019              		.cfi_startproc
 1020 0000 55       		pushq	%rbp
 1021              		.cfi_def_cfa_offset 16
 1022              		.cfi_offset 6, -16
 1023 0001 4889E5   		movq	%rsp, %rbp
 1024              		.cfi_def_cfa_register 6
 1025 0004 4883EC10 		subq	$16, %rsp
 1026 0008 48897DF8 		movq	%rdi, -8(%rbp)
GAS LISTING /tmp/ccsIN87E.s 			page 43


 1027 000c 488975F0 		movq	%rsi, -16(%rbp)
 1028              	.LBB18:
 1029              		.loc 6 479 0
 1030 0010 488B45F0 		movq	-16(%rbp), %rax
 1031 0014 488B10   		movq	(%rax), %rdx
 1032 0017 488B45F8 		movq	-8(%rbp), %rax
 1033 001b 488910   		movq	%rdx, (%rax)
 480:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #if defined(BOOST_SP_ENABLE_DEBUG_HOOKS)
 481:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         , id_(shared_count_id)
 482:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #endif
 483:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****     {
 484:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         if( pi_ != 0 ) pi_->add_ref_copy();
 1034              		.loc 6 484 0
 1035 001e 488B45F8 		movq	-8(%rbp), %rax
 1036 0022 488B00   		movq	(%rax), %rax
 1037 0025 4885C0   		testq	%rax, %rax
 1038 0028 740F     		je	.L46
 1039              		.loc 6 484 0 is_stmt 0 discriminator 1
 1040 002a 488B45F8 		movq	-8(%rbp), %rax
 1041 002e 488B00   		movq	(%rax), %rax
 1042 0031 4889C7   		movq	%rax, %rdi
 1043 0034 E8000000 		call	_ZN5boost6detail15sp_counted_base12add_ref_copyEv
 1043      00
 1044              	.L46:
 1045              	.LBE18:
 485:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****     }
 1046              		.loc 6 485 0 is_stmt 1
 1047 0039 90       		nop
 1048 003a C9       		leave
 1049              		.cfi_def_cfa 7, 8
 1050 003b C3       		ret
 1051              		.cfi_endproc
 1052              	.LFE2070:
 1054              		.weak	_ZN5boost6detail12shared_countC1ERKS1_
 1055              		.set	_ZN5boost6detail12shared_countC1ERKS1_,_ZN5boost6detail12shared_countC2ERKS1_
 1056              		.section	.text._ZN5boost6detail12shared_count4swapERS1_,"axG",@progbits,_ZN5boost6detail12shared_c
 1057              		.align 2
 1058              		.weak	_ZN5boost6detail12shared_count4swapERS1_
 1060              	_ZN5boost6detail12shared_count4swapERS1_:
 1061              	.LFB2076:
 486:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 487:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #if !defined( BOOST_NO_CXX11_RVALUE_REFERENCES )
 488:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 489:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****     shared_count(shared_count && r): pi_(r.pi_) // nothrow
 490:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #if defined(BOOST_SP_ENABLE_DEBUG_HOOKS)
 491:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         , id_(shared_count_id)
 492:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #endif
 493:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****     {
 494:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         r.pi_ = 0;
 495:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****     }
 496:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 497:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #endif
 498:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 499:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****     explicit shared_count(weak_count const & r); // throws bad_weak_ptr when r.use_count() == 0
 500:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****     shared_count( weak_count const & r, sp_nothrow_tag ); // constructs an empty *this when r.use_c
 501:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 502:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****     shared_count & operator= (shared_count const & r) // nothrow
GAS LISTING /tmp/ccsIN87E.s 			page 44


 503:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****     {
 504:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         sp_counted_base * tmp = r.pi_;
 505:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 506:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         if( tmp != pi_ )
 507:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         {
 508:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****             if( tmp != 0 ) tmp->add_ref_copy();
 509:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****             if( pi_ != 0 ) pi_->release();
 510:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****             pi_ = tmp;
 511:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         }
 512:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 513:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         return *this;
 514:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****     }
 515:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 516:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****     void swap(shared_count & r) // nothrow
 1062              		.loc 6 516 0
 1063              		.cfi_startproc
 1064 0000 55       		pushq	%rbp
 1065              		.cfi_def_cfa_offset 16
 1066              		.cfi_offset 6, -16
 1067 0001 4889E5   		movq	%rsp, %rbp
 1068              		.cfi_def_cfa_register 6
 1069 0004 48897DE8 		movq	%rdi, -24(%rbp)
 1070 0008 488975E0 		movq	%rsi, -32(%rbp)
 517:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****     {
 518:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         sp_counted_base * tmp = r.pi_;
 1071              		.loc 6 518 0
 1072 000c 488B45E0 		movq	-32(%rbp), %rax
 1073 0010 488B00   		movq	(%rax), %rax
 1074 0013 488945F8 		movq	%rax, -8(%rbp)
 519:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         r.pi_ = pi_;
 1075              		.loc 6 519 0
 1076 0017 488B45E8 		movq	-24(%rbp), %rax
 1077 001b 488B10   		movq	(%rax), %rdx
 1078 001e 488B45E0 		movq	-32(%rbp), %rax
 1079 0022 488910   		movq	%rdx, (%rax)
 520:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         pi_ = tmp;
 1080              		.loc 6 520 0
 1081 0025 488B45E8 		movq	-24(%rbp), %rax
 1082 0029 488B55F8 		movq	-8(%rbp), %rdx
 1083 002d 488910   		movq	%rdx, (%rax)
 521:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****     }
 1084              		.loc 6 521 0
 1085 0030 90       		nop
 1086 0031 5D       		popq	%rbp
 1087              		.cfi_def_cfa 7, 8
 1088 0032 C3       		ret
 1089              		.cfi_endproc
 1090              	.LFE2076:
 1092              		.section	.text._ZN5boost6detail26sp_enable_shared_from_thisEz,"axG",@progbits,_ZN5boost6detail26sp
 1093              		.weak	_ZN5boost6detail26sp_enable_shared_from_thisEz
 1095              	_ZN5boost6detail26sp_enable_shared_from_thisEz:
 1096              	.LFB2542:
 1097              		.file 7 "/usr/include/boost/smart_ptr/shared_ptr.hpp"
   1:/usr/include/boost/smart_ptr/shared_ptr.hpp **** #ifndef BOOST_SMART_PTR_SHARED_PTR_HPP_INCLUDED
   2:/usr/include/boost/smart_ptr/shared_ptr.hpp **** #define BOOST_SMART_PTR_SHARED_PTR_HPP_INCLUDED
   3:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
   4:/usr/include/boost/smart_ptr/shared_ptr.hpp **** //
GAS LISTING /tmp/ccsIN87E.s 			page 45


   5:/usr/include/boost/smart_ptr/shared_ptr.hpp **** //  shared_ptr.hpp
   6:/usr/include/boost/smart_ptr/shared_ptr.hpp **** //
   7:/usr/include/boost/smart_ptr/shared_ptr.hpp **** //  (C) Copyright Greg Colvin and Beman Dawes 1998, 1999.
   8:/usr/include/boost/smart_ptr/shared_ptr.hpp **** //  Copyright (c) 2001-2008 Peter Dimov
   9:/usr/include/boost/smart_ptr/shared_ptr.hpp **** //
  10:/usr/include/boost/smart_ptr/shared_ptr.hpp **** //  Distributed under the Boost Software License, Version 1.0. (See
  11:/usr/include/boost/smart_ptr/shared_ptr.hpp **** //  accompanying file LICENSE_1_0.txt or copy at
  12:/usr/include/boost/smart_ptr/shared_ptr.hpp **** //  http://www.boost.org/LICENSE_1_0.txt)
  13:/usr/include/boost/smart_ptr/shared_ptr.hpp **** //
  14:/usr/include/boost/smart_ptr/shared_ptr.hpp **** //  See http://www.boost.org/libs/smart_ptr/shared_ptr.htm for documentation.
  15:/usr/include/boost/smart_ptr/shared_ptr.hpp **** //
  16:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
  17:/usr/include/boost/smart_ptr/shared_ptr.hpp **** #include <boost/config.hpp>   // for broken compiler workarounds
  18:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
  19:/usr/include/boost/smart_ptr/shared_ptr.hpp **** // In order to avoid circular dependencies with Boost.TR1
  20:/usr/include/boost/smart_ptr/shared_ptr.hpp **** // we make sure that our include of <memory> doesn't try to
  21:/usr/include/boost/smart_ptr/shared_ptr.hpp **** // pull in the TR1 headers: that's why we use this header 
  22:/usr/include/boost/smart_ptr/shared_ptr.hpp **** // rather than including <memory> directly:
  23:/usr/include/boost/smart_ptr/shared_ptr.hpp **** #include <boost/config/no_tr1/memory.hpp>  // std::auto_ptr
  24:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
  25:/usr/include/boost/smart_ptr/shared_ptr.hpp **** #include <boost/assert.hpp>
  26:/usr/include/boost/smart_ptr/shared_ptr.hpp **** #include <boost/checked_delete.hpp>
  27:/usr/include/boost/smart_ptr/shared_ptr.hpp **** #include <boost/throw_exception.hpp>
  28:/usr/include/boost/smart_ptr/shared_ptr.hpp **** #include <boost/smart_ptr/detail/shared_count.hpp>
  29:/usr/include/boost/smart_ptr/shared_ptr.hpp **** #include <boost/detail/workaround.hpp>
  30:/usr/include/boost/smart_ptr/shared_ptr.hpp **** #include <boost/smart_ptr/detail/sp_convertible.hpp>
  31:/usr/include/boost/smart_ptr/shared_ptr.hpp **** #include <boost/smart_ptr/detail/sp_nullptr_t.hpp>
  32:/usr/include/boost/smart_ptr/shared_ptr.hpp **** #include <boost/smart_ptr/detail/sp_disable_deprecated.hpp>
  33:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
  34:/usr/include/boost/smart_ptr/shared_ptr.hpp **** #if !defined(BOOST_SP_NO_ATOMIC_ACCESS)
  35:/usr/include/boost/smart_ptr/shared_ptr.hpp **** #include <boost/smart_ptr/detail/spinlock_pool.hpp>
  36:/usr/include/boost/smart_ptr/shared_ptr.hpp **** #endif
  37:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
  38:/usr/include/boost/smart_ptr/shared_ptr.hpp **** #include <algorithm>            // for std::swap
  39:/usr/include/boost/smart_ptr/shared_ptr.hpp **** #include <functional>           // for std::less
  40:/usr/include/boost/smart_ptr/shared_ptr.hpp **** #include <typeinfo>             // for std::bad_cast
  41:/usr/include/boost/smart_ptr/shared_ptr.hpp **** #include <cstddef>              // for std::size_t
  42:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
  43:/usr/include/boost/smart_ptr/shared_ptr.hpp **** #if !defined(BOOST_NO_IOSTREAM)
  44:/usr/include/boost/smart_ptr/shared_ptr.hpp **** #if !defined(BOOST_NO_IOSFWD)
  45:/usr/include/boost/smart_ptr/shared_ptr.hpp **** #include <iosfwd>               // for std::basic_ostream
  46:/usr/include/boost/smart_ptr/shared_ptr.hpp **** #else
  47:/usr/include/boost/smart_ptr/shared_ptr.hpp **** #include <ostream>
  48:/usr/include/boost/smart_ptr/shared_ptr.hpp **** #endif
  49:/usr/include/boost/smart_ptr/shared_ptr.hpp **** #endif
  50:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
  51:/usr/include/boost/smart_ptr/shared_ptr.hpp **** #if defined( BOOST_SP_DISABLE_DEPRECATED )
  52:/usr/include/boost/smart_ptr/shared_ptr.hpp **** #pragma GCC diagnostic push
  53:/usr/include/boost/smart_ptr/shared_ptr.hpp **** #pragma GCC diagnostic ignored "-Wdeprecated-declarations"
  54:/usr/include/boost/smart_ptr/shared_ptr.hpp **** #endif
  55:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
  56:/usr/include/boost/smart_ptr/shared_ptr.hpp **** namespace boost
  57:/usr/include/boost/smart_ptr/shared_ptr.hpp **** {
  58:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
  59:/usr/include/boost/smart_ptr/shared_ptr.hpp **** template<class T> class shared_ptr;
  60:/usr/include/boost/smart_ptr/shared_ptr.hpp **** template<class T> class weak_ptr;
  61:/usr/include/boost/smart_ptr/shared_ptr.hpp **** template<class T> class enable_shared_from_this;
GAS LISTING /tmp/ccsIN87E.s 			page 46


  62:/usr/include/boost/smart_ptr/shared_ptr.hpp **** class enable_shared_from_raw;
  63:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
  64:/usr/include/boost/smart_ptr/shared_ptr.hpp **** namespace movelib
  65:/usr/include/boost/smart_ptr/shared_ptr.hpp **** {
  66:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
  67:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     template< class T, class D > class unique_ptr;
  68:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
  69:/usr/include/boost/smart_ptr/shared_ptr.hpp **** } // namespace movelib
  70:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
  71:/usr/include/boost/smart_ptr/shared_ptr.hpp **** namespace detail
  72:/usr/include/boost/smart_ptr/shared_ptr.hpp **** {
  73:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
  74:/usr/include/boost/smart_ptr/shared_ptr.hpp **** // sp_element, element_type
  75:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
  76:/usr/include/boost/smart_ptr/shared_ptr.hpp **** template< class T > struct sp_element
  77:/usr/include/boost/smart_ptr/shared_ptr.hpp **** {
  78:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     typedef T type;
  79:/usr/include/boost/smart_ptr/shared_ptr.hpp **** };
  80:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
  81:/usr/include/boost/smart_ptr/shared_ptr.hpp **** #if !defined( BOOST_NO_TEMPLATE_PARTIAL_SPECIALIZATION )
  82:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
  83:/usr/include/boost/smart_ptr/shared_ptr.hpp **** template< class T > struct sp_element< T[] >
  84:/usr/include/boost/smart_ptr/shared_ptr.hpp **** {
  85:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     typedef T type;
  86:/usr/include/boost/smart_ptr/shared_ptr.hpp **** };
  87:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
  88:/usr/include/boost/smart_ptr/shared_ptr.hpp **** #if !defined( __BORLANDC__ ) || !BOOST_WORKAROUND( __BORLANDC__, < 0x600 )
  89:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
  90:/usr/include/boost/smart_ptr/shared_ptr.hpp **** template< class T, std::size_t N > struct sp_element< T[N] >
  91:/usr/include/boost/smart_ptr/shared_ptr.hpp **** {
  92:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     typedef T type;
  93:/usr/include/boost/smart_ptr/shared_ptr.hpp **** };
  94:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
  95:/usr/include/boost/smart_ptr/shared_ptr.hpp **** #endif
  96:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
  97:/usr/include/boost/smart_ptr/shared_ptr.hpp **** #endif // !defined( BOOST_NO_TEMPLATE_PARTIAL_SPECIALIZATION )
  98:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
  99:/usr/include/boost/smart_ptr/shared_ptr.hpp **** // sp_dereference, return type of operator*
 100:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 101:/usr/include/boost/smart_ptr/shared_ptr.hpp **** template< class T > struct sp_dereference
 102:/usr/include/boost/smart_ptr/shared_ptr.hpp **** {
 103:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     typedef T & type;
 104:/usr/include/boost/smart_ptr/shared_ptr.hpp **** };
 105:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 106:/usr/include/boost/smart_ptr/shared_ptr.hpp **** template<> struct sp_dereference< void >
 107:/usr/include/boost/smart_ptr/shared_ptr.hpp **** {
 108:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     typedef void type;
 109:/usr/include/boost/smart_ptr/shared_ptr.hpp **** };
 110:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 111:/usr/include/boost/smart_ptr/shared_ptr.hpp **** #if !defined(BOOST_NO_CV_VOID_SPECIALIZATIONS)
 112:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 113:/usr/include/boost/smart_ptr/shared_ptr.hpp **** template<> struct sp_dereference< void const >
 114:/usr/include/boost/smart_ptr/shared_ptr.hpp **** {
 115:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     typedef void type;
 116:/usr/include/boost/smart_ptr/shared_ptr.hpp **** };
 117:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 118:/usr/include/boost/smart_ptr/shared_ptr.hpp **** template<> struct sp_dereference< void volatile >
GAS LISTING /tmp/ccsIN87E.s 			page 47


 119:/usr/include/boost/smart_ptr/shared_ptr.hpp **** {
 120:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     typedef void type;
 121:/usr/include/boost/smart_ptr/shared_ptr.hpp **** };
 122:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 123:/usr/include/boost/smart_ptr/shared_ptr.hpp **** template<> struct sp_dereference< void const volatile >
 124:/usr/include/boost/smart_ptr/shared_ptr.hpp **** {
 125:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     typedef void type;
 126:/usr/include/boost/smart_ptr/shared_ptr.hpp **** };
 127:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 128:/usr/include/boost/smart_ptr/shared_ptr.hpp **** #endif // !defined(BOOST_NO_CV_VOID_SPECIALIZATIONS)
 129:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 130:/usr/include/boost/smart_ptr/shared_ptr.hpp **** #if !defined( BOOST_NO_TEMPLATE_PARTIAL_SPECIALIZATION )
 131:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 132:/usr/include/boost/smart_ptr/shared_ptr.hpp **** template< class T > struct sp_dereference< T[] >
 133:/usr/include/boost/smart_ptr/shared_ptr.hpp **** {
 134:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     typedef void type;
 135:/usr/include/boost/smart_ptr/shared_ptr.hpp **** };
 136:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 137:/usr/include/boost/smart_ptr/shared_ptr.hpp **** #if !defined( __BORLANDC__ ) || !BOOST_WORKAROUND( __BORLANDC__, < 0x600 )
 138:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 139:/usr/include/boost/smart_ptr/shared_ptr.hpp **** template< class T, std::size_t N > struct sp_dereference< T[N] >
 140:/usr/include/boost/smart_ptr/shared_ptr.hpp **** {
 141:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     typedef void type;
 142:/usr/include/boost/smart_ptr/shared_ptr.hpp **** };
 143:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 144:/usr/include/boost/smart_ptr/shared_ptr.hpp **** #endif
 145:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 146:/usr/include/boost/smart_ptr/shared_ptr.hpp **** #endif // !defined( BOOST_NO_TEMPLATE_PARTIAL_SPECIALIZATION )
 147:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 148:/usr/include/boost/smart_ptr/shared_ptr.hpp **** // sp_member_access, return type of operator->
 149:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 150:/usr/include/boost/smart_ptr/shared_ptr.hpp **** template< class T > struct sp_member_access
 151:/usr/include/boost/smart_ptr/shared_ptr.hpp **** {
 152:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     typedef T * type;
 153:/usr/include/boost/smart_ptr/shared_ptr.hpp **** };
 154:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 155:/usr/include/boost/smart_ptr/shared_ptr.hpp **** #if !defined( BOOST_NO_TEMPLATE_PARTIAL_SPECIALIZATION )
 156:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 157:/usr/include/boost/smart_ptr/shared_ptr.hpp **** template< class T > struct sp_member_access< T[] >
 158:/usr/include/boost/smart_ptr/shared_ptr.hpp **** {
 159:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     typedef void type;
 160:/usr/include/boost/smart_ptr/shared_ptr.hpp **** };
 161:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 162:/usr/include/boost/smart_ptr/shared_ptr.hpp **** #if !defined( __BORLANDC__ ) || !BOOST_WORKAROUND( __BORLANDC__, < 0x600 )
 163:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 164:/usr/include/boost/smart_ptr/shared_ptr.hpp **** template< class T, std::size_t N > struct sp_member_access< T[N] >
 165:/usr/include/boost/smart_ptr/shared_ptr.hpp **** {
 166:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     typedef void type;
 167:/usr/include/boost/smart_ptr/shared_ptr.hpp **** };
 168:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 169:/usr/include/boost/smart_ptr/shared_ptr.hpp **** #endif
 170:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 171:/usr/include/boost/smart_ptr/shared_ptr.hpp **** #endif // !defined( BOOST_NO_TEMPLATE_PARTIAL_SPECIALIZATION )
 172:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 173:/usr/include/boost/smart_ptr/shared_ptr.hpp **** // sp_array_access, return type of operator[]
 174:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 175:/usr/include/boost/smart_ptr/shared_ptr.hpp **** template< class T > struct sp_array_access
GAS LISTING /tmp/ccsIN87E.s 			page 48


 176:/usr/include/boost/smart_ptr/shared_ptr.hpp **** {
 177:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     typedef void type;
 178:/usr/include/boost/smart_ptr/shared_ptr.hpp **** };
 179:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 180:/usr/include/boost/smart_ptr/shared_ptr.hpp **** #if !defined( BOOST_NO_TEMPLATE_PARTIAL_SPECIALIZATION )
 181:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 182:/usr/include/boost/smart_ptr/shared_ptr.hpp **** template< class T > struct sp_array_access< T[] >
 183:/usr/include/boost/smart_ptr/shared_ptr.hpp **** {
 184:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     typedef T & type;
 185:/usr/include/boost/smart_ptr/shared_ptr.hpp **** };
 186:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 187:/usr/include/boost/smart_ptr/shared_ptr.hpp **** #if !defined( __BORLANDC__ ) || !BOOST_WORKAROUND( __BORLANDC__, < 0x600 )
 188:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 189:/usr/include/boost/smart_ptr/shared_ptr.hpp **** template< class T, std::size_t N > struct sp_array_access< T[N] >
 190:/usr/include/boost/smart_ptr/shared_ptr.hpp **** {
 191:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     typedef T & type;
 192:/usr/include/boost/smart_ptr/shared_ptr.hpp **** };
 193:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 194:/usr/include/boost/smart_ptr/shared_ptr.hpp **** #endif
 195:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 196:/usr/include/boost/smart_ptr/shared_ptr.hpp **** #endif // !defined( BOOST_NO_TEMPLATE_PARTIAL_SPECIALIZATION )
 197:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 198:/usr/include/boost/smart_ptr/shared_ptr.hpp **** // sp_extent, for operator[] index check
 199:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 200:/usr/include/boost/smart_ptr/shared_ptr.hpp **** template< class T > struct sp_extent
 201:/usr/include/boost/smart_ptr/shared_ptr.hpp **** {
 202:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     enum _vt { value = 0 };
 203:/usr/include/boost/smart_ptr/shared_ptr.hpp **** };
 204:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 205:/usr/include/boost/smart_ptr/shared_ptr.hpp **** #if !defined( BOOST_NO_TEMPLATE_PARTIAL_SPECIALIZATION )
 206:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 207:/usr/include/boost/smart_ptr/shared_ptr.hpp **** template< class T, std::size_t N > struct sp_extent< T[N] >
 208:/usr/include/boost/smart_ptr/shared_ptr.hpp **** {
 209:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     enum _vt { value = N };
 210:/usr/include/boost/smart_ptr/shared_ptr.hpp **** };
 211:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 212:/usr/include/boost/smart_ptr/shared_ptr.hpp **** #endif // !defined( BOOST_NO_TEMPLATE_PARTIAL_SPECIALIZATION )
 213:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 214:/usr/include/boost/smart_ptr/shared_ptr.hpp **** // enable_shared_from_this support
 215:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 216:/usr/include/boost/smart_ptr/shared_ptr.hpp **** template< class X, class Y, class T > inline void sp_enable_shared_from_this( boost::shared_ptr<X> 
 217:/usr/include/boost/smart_ptr/shared_ptr.hpp **** {
 218:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     if( pe != 0 )
 219:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     {
 220:/usr/include/boost/smart_ptr/shared_ptr.hpp ****         pe->_internal_accept_owner( ppx, const_cast< Y* >( py ) );
 221:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     }
 222:/usr/include/boost/smart_ptr/shared_ptr.hpp **** }
 223:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 224:/usr/include/boost/smart_ptr/shared_ptr.hpp **** template< class X, class Y > inline void sp_enable_shared_from_this( boost::shared_ptr<X> * ppx, Y 
 225:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 226:/usr/include/boost/smart_ptr/shared_ptr.hpp **** #ifdef _MANAGED
 227:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 228:/usr/include/boost/smart_ptr/shared_ptr.hpp **** // Avoid C4793, ... causes native code generation
 229:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 230:/usr/include/boost/smart_ptr/shared_ptr.hpp **** struct sp_any_pointer
 231:/usr/include/boost/smart_ptr/shared_ptr.hpp **** {
 232:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     template<class T> sp_any_pointer( T* ) {}
GAS LISTING /tmp/ccsIN87E.s 			page 49


 233:/usr/include/boost/smart_ptr/shared_ptr.hpp **** };
 234:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 235:/usr/include/boost/smart_ptr/shared_ptr.hpp **** inline void sp_enable_shared_from_this( sp_any_pointer, sp_any_pointer, sp_any_pointer )
 236:/usr/include/boost/smart_ptr/shared_ptr.hpp **** {
 237:/usr/include/boost/smart_ptr/shared_ptr.hpp **** }
 238:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 239:/usr/include/boost/smart_ptr/shared_ptr.hpp **** #else // _MANAGED
 240:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 241:/usr/include/boost/smart_ptr/shared_ptr.hpp **** inline void sp_enable_shared_from_this( ... )
 242:/usr/include/boost/smart_ptr/shared_ptr.hpp **** {
 1098              		.loc 7 242 0
 1099              		.cfi_startproc
 1100 0000 55       		pushq	%rbp
 1101              		.cfi_def_cfa_offset 16
 1102              		.cfi_offset 6, -16
 1103 0001 4889E5   		movq	%rsp, %rbp
 1104              		.cfi_def_cfa_register 6
 243:/usr/include/boost/smart_ptr/shared_ptr.hpp **** }
 1105              		.loc 7 243 0
 1106 0004 90       		nop
 1107 0005 5D       		popq	%rbp
 1108              		.cfi_def_cfa 7, 8
 1109 0006 C3       		ret
 1110              		.cfi_endproc
 1111              	.LFE2542:
 1113              		.section	.text._ZSt3absf,"axG",@progbits,_ZSt3absf,comdat
 1114              		.weak	_ZSt3absf
 1116              	_ZSt3absf:
 1117              	.LFB2921:
 1118              		.file 8 "/usr/include/c++/6/cmath"
   1:/usr/include/c++/6/cmath **** // -*- C++ -*- C forwarding header.
   2:/usr/include/c++/6/cmath **** 
   3:/usr/include/c++/6/cmath **** // Copyright (C) 1997-2016 Free Software Foundation, Inc.
   4:/usr/include/c++/6/cmath **** //
   5:/usr/include/c++/6/cmath **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/6/cmath **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/6/cmath **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/6/cmath **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/6/cmath **** // any later version.
  10:/usr/include/c++/6/cmath **** 
  11:/usr/include/c++/6/cmath **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/6/cmath **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/6/cmath **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/6/cmath **** // GNU General Public License for more details.
  15:/usr/include/c++/6/cmath **** 
  16:/usr/include/c++/6/cmath **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/6/cmath **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/6/cmath **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/6/cmath **** 
  20:/usr/include/c++/6/cmath **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/6/cmath **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/6/cmath **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/6/cmath **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/6/cmath **** 
  25:/usr/include/c++/6/cmath **** /** @file include/cmath
  26:/usr/include/c++/6/cmath ****  *  This is a Standard C++ Library file.  You should @c \#include this file
  27:/usr/include/c++/6/cmath ****  *  in your programs, rather than any of the @a *.h implementation files.
GAS LISTING /tmp/ccsIN87E.s 			page 50


  28:/usr/include/c++/6/cmath ****  *
  29:/usr/include/c++/6/cmath ****  *  This is the C++ version of the Standard C Library header @c math.h,
  30:/usr/include/c++/6/cmath ****  *  and its contents are (mostly) the same as that header, but are all
  31:/usr/include/c++/6/cmath ****  *  contained in the namespace @c std (except for names which are defined
  32:/usr/include/c++/6/cmath ****  *  as macros in C).
  33:/usr/include/c++/6/cmath ****  */
  34:/usr/include/c++/6/cmath **** 
  35:/usr/include/c++/6/cmath **** //
  36:/usr/include/c++/6/cmath **** // ISO C++ 14882: 26.5  C library
  37:/usr/include/c++/6/cmath **** //
  38:/usr/include/c++/6/cmath **** 
  39:/usr/include/c++/6/cmath **** #pragma GCC system_header
  40:/usr/include/c++/6/cmath **** 
  41:/usr/include/c++/6/cmath **** #include <bits/c++config.h>
  42:/usr/include/c++/6/cmath **** #include <bits/cpp_type_traits.h>
  43:/usr/include/c++/6/cmath **** #include <ext/type_traits.h>
  44:/usr/include/c++/6/cmath **** #define _GLIBCXX_INCLUDE_NEXT_C_HEADERS
  45:/usr/include/c++/6/cmath **** #include_next <math.h>
  46:/usr/include/c++/6/cmath **** #undef _GLIBCXX_INCLUDE_NEXT_C_HEADERS
  47:/usr/include/c++/6/cmath **** 
  48:/usr/include/c++/6/cmath **** #ifndef _GLIBCXX_CMATH
  49:/usr/include/c++/6/cmath **** #define _GLIBCXX_CMATH 1
  50:/usr/include/c++/6/cmath **** 
  51:/usr/include/c++/6/cmath **** // Get rid of those macros defined in <math.h> in lieu of real functions.
  52:/usr/include/c++/6/cmath **** #undef abs
  53:/usr/include/c++/6/cmath **** #undef div
  54:/usr/include/c++/6/cmath **** #undef acos
  55:/usr/include/c++/6/cmath **** #undef asin
  56:/usr/include/c++/6/cmath **** #undef atan
  57:/usr/include/c++/6/cmath **** #undef atan2
  58:/usr/include/c++/6/cmath **** #undef ceil
  59:/usr/include/c++/6/cmath **** #undef cos
  60:/usr/include/c++/6/cmath **** #undef cosh
  61:/usr/include/c++/6/cmath **** #undef exp
  62:/usr/include/c++/6/cmath **** #undef fabs
  63:/usr/include/c++/6/cmath **** #undef floor
  64:/usr/include/c++/6/cmath **** #undef fmod
  65:/usr/include/c++/6/cmath **** #undef frexp
  66:/usr/include/c++/6/cmath **** #undef ldexp
  67:/usr/include/c++/6/cmath **** #undef log
  68:/usr/include/c++/6/cmath **** #undef log10
  69:/usr/include/c++/6/cmath **** #undef modf
  70:/usr/include/c++/6/cmath **** #undef pow
  71:/usr/include/c++/6/cmath **** #undef sin
  72:/usr/include/c++/6/cmath **** #undef sinh
  73:/usr/include/c++/6/cmath **** #undef sqrt
  74:/usr/include/c++/6/cmath **** #undef tan
  75:/usr/include/c++/6/cmath **** #undef tanh
  76:/usr/include/c++/6/cmath **** 
  77:/usr/include/c++/6/cmath **** extern "C++"
  78:/usr/include/c++/6/cmath **** {
  79:/usr/include/c++/6/cmath **** namespace std _GLIBCXX_VISIBILITY(default)
  80:/usr/include/c++/6/cmath **** {
  81:/usr/include/c++/6/cmath **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  82:/usr/include/c++/6/cmath **** 
  83:/usr/include/c++/6/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
  84:/usr/include/c++/6/cmath ****   inline _GLIBCXX_CONSTEXPR double
GAS LISTING /tmp/ccsIN87E.s 			page 51


  85:/usr/include/c++/6/cmath ****   abs(double __x)
  86:/usr/include/c++/6/cmath ****   { return __builtin_fabs(__x); }
  87:/usr/include/c++/6/cmath **** #endif
  88:/usr/include/c++/6/cmath **** 
  89:/usr/include/c++/6/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
  90:/usr/include/c++/6/cmath ****   inline _GLIBCXX_CONSTEXPR float
  91:/usr/include/c++/6/cmath ****   abs(float __x)
  92:/usr/include/c++/6/cmath ****   { return __builtin_fabsf(__x); }
 1119              		.loc 8 92 0
 1120              		.cfi_startproc
 1121 0000 55       		pushq	%rbp
 1122              		.cfi_def_cfa_offset 16
 1123              		.cfi_offset 6, -16
 1124 0001 4889E5   		movq	%rsp, %rbp
 1125              		.cfi_def_cfa_register 6
 1126 0004 F30F1145 		movss	%xmm0, -4(%rbp)
 1126      FC
 1127              		.loc 8 92 0
 1128 0009 F30F104D 		movss	-4(%rbp), %xmm1
 1128      FC
 1129 000e F30F1005 		movss	.LC0(%rip), %xmm0
 1129      00000000 
 1130 0016 0F54C1   		andps	%xmm1, %xmm0
 1131 0019 5D       		popq	%rbp
 1132              		.cfi_def_cfa 7, 8
 1133 001a C3       		ret
 1134              		.cfi_endproc
 1135              	.LFE2921:
 1137              		.section	.text._ZNSt7complexIfEC2Eff,"axG",@progbits,_ZNSt7complexIfEC5Eff,comdat
 1138              		.align 2
 1139              		.weak	_ZNSt7complexIfEC2Eff
 1141              	_ZNSt7complexIfEC2Eff:
 1142              	.LFB3816:
 1143              		.file 9 "/usr/include/c++/6/complex"
   1:/usr/include/c++/6/complex **** // The template and inlines for the -*- C++ -*- complex number classes.
   2:/usr/include/c++/6/complex **** 
   3:/usr/include/c++/6/complex **** // Copyright (C) 1997-2016 Free Software Foundation, Inc.
   4:/usr/include/c++/6/complex **** //
   5:/usr/include/c++/6/complex **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/6/complex **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/6/complex **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/6/complex **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/6/complex **** // any later version.
  10:/usr/include/c++/6/complex **** 
  11:/usr/include/c++/6/complex **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/6/complex **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/6/complex **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/6/complex **** // GNU General Public License for more details.
  15:/usr/include/c++/6/complex **** 
  16:/usr/include/c++/6/complex **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/6/complex **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/6/complex **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/6/complex **** 
  20:/usr/include/c++/6/complex **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/6/complex **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/6/complex **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/6/complex **** // <http://www.gnu.org/licenses/>.
GAS LISTING /tmp/ccsIN87E.s 			page 52


  24:/usr/include/c++/6/complex **** 
  25:/usr/include/c++/6/complex **** /** @file include/complex
  26:/usr/include/c++/6/complex ****  *  This is a Standard C++ Library header.
  27:/usr/include/c++/6/complex ****  */
  28:/usr/include/c++/6/complex **** 
  29:/usr/include/c++/6/complex **** //
  30:/usr/include/c++/6/complex **** // ISO C++ 14882: 26.2  Complex Numbers
  31:/usr/include/c++/6/complex **** // Note: this is not a conforming implementation.
  32:/usr/include/c++/6/complex **** // Initially implemented by Ulrich Drepper <drepper@cygnus.com>
  33:/usr/include/c++/6/complex **** // Improved by Gabriel Dos Reis <dosreis@cmla.ens-cachan.fr>
  34:/usr/include/c++/6/complex **** //
  35:/usr/include/c++/6/complex **** 
  36:/usr/include/c++/6/complex **** #ifndef _GLIBCXX_COMPLEX
  37:/usr/include/c++/6/complex **** #define _GLIBCXX_COMPLEX 1
  38:/usr/include/c++/6/complex **** 
  39:/usr/include/c++/6/complex **** #pragma GCC system_header
  40:/usr/include/c++/6/complex **** 
  41:/usr/include/c++/6/complex **** #include <bits/c++config.h>
  42:/usr/include/c++/6/complex **** #include <bits/cpp_type_traits.h>
  43:/usr/include/c++/6/complex **** #include <ext/type_traits.h>
  44:/usr/include/c++/6/complex **** #include <cmath>
  45:/usr/include/c++/6/complex **** #include <sstream>
  46:/usr/include/c++/6/complex **** 
  47:/usr/include/c++/6/complex **** // Get rid of a macro possibly defined in <complex.h>
  48:/usr/include/c++/6/complex **** #undef complex
  49:/usr/include/c++/6/complex **** 
  50:/usr/include/c++/6/complex **** namespace std _GLIBCXX_VISIBILITY(default)
  51:/usr/include/c++/6/complex **** {
  52:/usr/include/c++/6/complex **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  53:/usr/include/c++/6/complex **** 
  54:/usr/include/c++/6/complex ****   /**
  55:/usr/include/c++/6/complex ****    * @defgroup complex_numbers Complex Numbers
  56:/usr/include/c++/6/complex ****    * @ingroup numerics
  57:/usr/include/c++/6/complex ****    *
  58:/usr/include/c++/6/complex ****    * Classes and functions for complex numbers.
  59:/usr/include/c++/6/complex ****    * @{
  60:/usr/include/c++/6/complex ****    */
  61:/usr/include/c++/6/complex **** 
  62:/usr/include/c++/6/complex ****   // Forward declarations.
  63:/usr/include/c++/6/complex ****   template<typename _Tp> class complex;
  64:/usr/include/c++/6/complex ****   template<> class complex<float>;
  65:/usr/include/c++/6/complex ****   template<> class complex<double>;
  66:/usr/include/c++/6/complex ****   template<> class complex<long double>;
  67:/usr/include/c++/6/complex **** 
  68:/usr/include/c++/6/complex ****   ///  Return magnitude of @a z.
  69:/usr/include/c++/6/complex ****   template<typename _Tp> _Tp abs(const complex<_Tp>&);
  70:/usr/include/c++/6/complex ****   ///  Return phase angle of @a z.
  71:/usr/include/c++/6/complex ****   template<typename _Tp> _Tp arg(const complex<_Tp>&);
  72:/usr/include/c++/6/complex ****   ///  Return @a z magnitude squared.
  73:/usr/include/c++/6/complex ****   template<typename _Tp> _Tp norm(const complex<_Tp>&);
  74:/usr/include/c++/6/complex **** 
  75:/usr/include/c++/6/complex ****   ///  Return complex conjugate of @a z.
  76:/usr/include/c++/6/complex ****   template<typename _Tp> complex<_Tp> conj(const complex<_Tp>&);
  77:/usr/include/c++/6/complex ****   ///  Return complex with magnitude @a rho and angle @a theta.
  78:/usr/include/c++/6/complex ****   template<typename _Tp> complex<_Tp> polar(const _Tp&, const _Tp& = 0);
  79:/usr/include/c++/6/complex **** 
  80:/usr/include/c++/6/complex ****   // Transcendentals:
GAS LISTING /tmp/ccsIN87E.s 			page 53


  81:/usr/include/c++/6/complex ****   /// Return complex cosine of @a z.
  82:/usr/include/c++/6/complex ****   template<typename _Tp> complex<_Tp> cos(const complex<_Tp>&);
  83:/usr/include/c++/6/complex ****   /// Return complex hyperbolic cosine of @a z.
  84:/usr/include/c++/6/complex ****   template<typename _Tp> complex<_Tp> cosh(const complex<_Tp>&);
  85:/usr/include/c++/6/complex ****   /// Return complex base e exponential of @a z.
  86:/usr/include/c++/6/complex ****   template<typename _Tp> complex<_Tp> exp(const complex<_Tp>&);
  87:/usr/include/c++/6/complex ****   /// Return complex natural logarithm of @a z.
  88:/usr/include/c++/6/complex ****   template<typename _Tp> complex<_Tp> log(const complex<_Tp>&);
  89:/usr/include/c++/6/complex ****   /// Return complex base 10 logarithm of @a z.
  90:/usr/include/c++/6/complex ****   template<typename _Tp> complex<_Tp> log10(const complex<_Tp>&);
  91:/usr/include/c++/6/complex ****   /// Return @a x to the @a y'th power.
  92:/usr/include/c++/6/complex ****   template<typename _Tp> complex<_Tp> pow(const complex<_Tp>&, int);
  93:/usr/include/c++/6/complex ****   /// Return @a x to the @a y'th power.
  94:/usr/include/c++/6/complex ****   template<typename _Tp> complex<_Tp> pow(const complex<_Tp>&, const _Tp&);
  95:/usr/include/c++/6/complex ****   /// Return @a x to the @a y'th power.
  96:/usr/include/c++/6/complex ****   template<typename _Tp> complex<_Tp> pow(const complex<_Tp>&, 
  97:/usr/include/c++/6/complex ****                                           const complex<_Tp>&);
  98:/usr/include/c++/6/complex ****   /// Return @a x to the @a y'th power.
  99:/usr/include/c++/6/complex ****   template<typename _Tp> complex<_Tp> pow(const _Tp&, const complex<_Tp>&);
 100:/usr/include/c++/6/complex ****   /// Return complex sine of @a z.
 101:/usr/include/c++/6/complex ****   template<typename _Tp> complex<_Tp> sin(const complex<_Tp>&);
 102:/usr/include/c++/6/complex ****   /// Return complex hyperbolic sine of @a z.
 103:/usr/include/c++/6/complex ****   template<typename _Tp> complex<_Tp> sinh(const complex<_Tp>&);
 104:/usr/include/c++/6/complex ****   /// Return complex square root of @a z.
 105:/usr/include/c++/6/complex ****   template<typename _Tp> complex<_Tp> sqrt(const complex<_Tp>&);
 106:/usr/include/c++/6/complex ****   /// Return complex tangent of @a z.
 107:/usr/include/c++/6/complex ****   template<typename _Tp> complex<_Tp> tan(const complex<_Tp>&);
 108:/usr/include/c++/6/complex ****   /// Return complex hyperbolic tangent of @a z.
 109:/usr/include/c++/6/complex ****   template<typename _Tp> complex<_Tp> tanh(const complex<_Tp>&);
 110:/usr/include/c++/6/complex ****     
 111:/usr/include/c++/6/complex ****     
 112:/usr/include/c++/6/complex ****   // 26.2.2  Primary template class complex
 113:/usr/include/c++/6/complex ****   /**
 114:/usr/include/c++/6/complex ****    *  Template to represent complex numbers.
 115:/usr/include/c++/6/complex ****    *
 116:/usr/include/c++/6/complex ****    *  Specializations for float, double, and long double are part of the
 117:/usr/include/c++/6/complex ****    *  library.  Results with any other type are not guaranteed.
 118:/usr/include/c++/6/complex ****    *
 119:/usr/include/c++/6/complex ****    *  @param  Tp  Type of real and imaginary values.
 120:/usr/include/c++/6/complex ****   */
 121:/usr/include/c++/6/complex ****   template<typename _Tp>
 122:/usr/include/c++/6/complex ****     struct complex
 123:/usr/include/c++/6/complex ****     {
 124:/usr/include/c++/6/complex ****       /// Value typedef.
 125:/usr/include/c++/6/complex ****       typedef _Tp value_type;
 126:/usr/include/c++/6/complex ****       
 127:/usr/include/c++/6/complex ****       ///  Default constructor.  First parameter is x, second parameter is y.
 128:/usr/include/c++/6/complex ****       ///  Unspecified parameters default to 0.
 129:/usr/include/c++/6/complex ****       _GLIBCXX_CONSTEXPR complex(const _Tp& __r = _Tp(), const _Tp& __i = _Tp())
 130:/usr/include/c++/6/complex ****       : _M_real(__r), _M_imag(__i) { }
 131:/usr/include/c++/6/complex **** 
 132:/usr/include/c++/6/complex ****       // Let the compiler synthesize the copy constructor
 133:/usr/include/c++/6/complex **** #if __cplusplus >= 201103L
 134:/usr/include/c++/6/complex ****       constexpr complex(const complex&) = default;
 135:/usr/include/c++/6/complex **** #endif
 136:/usr/include/c++/6/complex **** 
 137:/usr/include/c++/6/complex ****       ///  Converting constructor.
GAS LISTING /tmp/ccsIN87E.s 			page 54


 138:/usr/include/c++/6/complex ****       template<typename _Up>
 139:/usr/include/c++/6/complex ****         _GLIBCXX_CONSTEXPR complex(const complex<_Up>& __z)
 140:/usr/include/c++/6/complex **** 	: _M_real(__z.real()), _M_imag(__z.imag()) { }
 141:/usr/include/c++/6/complex **** 
 142:/usr/include/c++/6/complex **** #if __cplusplus >= 201103L
 143:/usr/include/c++/6/complex ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 144:/usr/include/c++/6/complex ****       // DR 387. std::complex over-encapsulated.
 145:/usr/include/c++/6/complex ****       _GLIBCXX_ABI_TAG_CXX11
 146:/usr/include/c++/6/complex ****       constexpr _Tp 
 147:/usr/include/c++/6/complex ****       real() const { return _M_real; }
 148:/usr/include/c++/6/complex **** 
 149:/usr/include/c++/6/complex ****       _GLIBCXX_ABI_TAG_CXX11
 150:/usr/include/c++/6/complex ****       constexpr _Tp 
 151:/usr/include/c++/6/complex ****       imag() const { return _M_imag; }
 152:/usr/include/c++/6/complex **** #else
 153:/usr/include/c++/6/complex ****       ///  Return real part of complex number.
 154:/usr/include/c++/6/complex ****       _Tp& 
 155:/usr/include/c++/6/complex ****       real() { return _M_real; }
 156:/usr/include/c++/6/complex **** 
 157:/usr/include/c++/6/complex ****       ///  Return real part of complex number.
 158:/usr/include/c++/6/complex ****       const _Tp& 
 159:/usr/include/c++/6/complex ****       real() const { return _M_real; }
 160:/usr/include/c++/6/complex **** 
 161:/usr/include/c++/6/complex ****       ///  Return imaginary part of complex number.
 162:/usr/include/c++/6/complex ****       _Tp& 
 163:/usr/include/c++/6/complex ****       imag() { return _M_imag; }
 164:/usr/include/c++/6/complex **** 
 165:/usr/include/c++/6/complex ****       ///  Return imaginary part of complex number.
 166:/usr/include/c++/6/complex ****       const _Tp& 
 167:/usr/include/c++/6/complex ****       imag() const { return _M_imag; }
 168:/usr/include/c++/6/complex **** #endif
 169:/usr/include/c++/6/complex **** 
 170:/usr/include/c++/6/complex ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 171:/usr/include/c++/6/complex ****       // DR 387. std::complex over-encapsulated.
 172:/usr/include/c++/6/complex ****       void 
 173:/usr/include/c++/6/complex ****       real(_Tp __val) { _M_real = __val; }
 174:/usr/include/c++/6/complex **** 
 175:/usr/include/c++/6/complex ****       void 
 176:/usr/include/c++/6/complex ****       imag(_Tp __val) { _M_imag = __val; }
 177:/usr/include/c++/6/complex **** 
 178:/usr/include/c++/6/complex ****       /// Assign a scalar to this complex number.
 179:/usr/include/c++/6/complex ****       complex<_Tp>& operator=(const _Tp&);
 180:/usr/include/c++/6/complex ****       
 181:/usr/include/c++/6/complex ****       /// Add a scalar to this complex number.
 182:/usr/include/c++/6/complex ****       // 26.2.5/1
 183:/usr/include/c++/6/complex ****       complex<_Tp>&
 184:/usr/include/c++/6/complex ****       operator+=(const _Tp& __t)
 185:/usr/include/c++/6/complex ****       {
 186:/usr/include/c++/6/complex **** 	_M_real += __t;
 187:/usr/include/c++/6/complex **** 	return *this;
 188:/usr/include/c++/6/complex ****       }
 189:/usr/include/c++/6/complex **** 
 190:/usr/include/c++/6/complex ****       /// Subtract a scalar from this complex number.
 191:/usr/include/c++/6/complex ****       // 26.2.5/3
 192:/usr/include/c++/6/complex ****       complex<_Tp>&
 193:/usr/include/c++/6/complex ****       operator-=(const _Tp& __t)
 194:/usr/include/c++/6/complex ****       {
GAS LISTING /tmp/ccsIN87E.s 			page 55


 195:/usr/include/c++/6/complex **** 	_M_real -= __t;
 196:/usr/include/c++/6/complex **** 	return *this;
 197:/usr/include/c++/6/complex ****       }
 198:/usr/include/c++/6/complex **** 
 199:/usr/include/c++/6/complex ****       /// Multiply this complex number by a scalar.
 200:/usr/include/c++/6/complex ****       complex<_Tp>& operator*=(const _Tp&);
 201:/usr/include/c++/6/complex ****       /// Divide this complex number by a scalar.
 202:/usr/include/c++/6/complex ****       complex<_Tp>& operator/=(const _Tp&);
 203:/usr/include/c++/6/complex **** 
 204:/usr/include/c++/6/complex ****       // Let the compiler synthesize the copy assignment operator
 205:/usr/include/c++/6/complex **** #if __cplusplus >= 201103L
 206:/usr/include/c++/6/complex ****       complex& operator=(const complex&) = default;
 207:/usr/include/c++/6/complex **** #endif
 208:/usr/include/c++/6/complex **** 
 209:/usr/include/c++/6/complex ****       /// Assign another complex number to this one.
 210:/usr/include/c++/6/complex ****       template<typename _Up>
 211:/usr/include/c++/6/complex ****         complex<_Tp>& operator=(const complex<_Up>&);
 212:/usr/include/c++/6/complex ****       /// Add another complex number to this one.
 213:/usr/include/c++/6/complex ****       template<typename _Up>
 214:/usr/include/c++/6/complex ****         complex<_Tp>& operator+=(const complex<_Up>&);
 215:/usr/include/c++/6/complex ****       /// Subtract another complex number from this one.
 216:/usr/include/c++/6/complex ****       template<typename _Up>
 217:/usr/include/c++/6/complex ****         complex<_Tp>& operator-=(const complex<_Up>&);
 218:/usr/include/c++/6/complex ****       /// Multiply this complex number by another.
 219:/usr/include/c++/6/complex ****       template<typename _Up>
 220:/usr/include/c++/6/complex ****         complex<_Tp>& operator*=(const complex<_Up>&);
 221:/usr/include/c++/6/complex ****       /// Divide this complex number by another.
 222:/usr/include/c++/6/complex ****       template<typename _Up>
 223:/usr/include/c++/6/complex ****         complex<_Tp>& operator/=(const complex<_Up>&);
 224:/usr/include/c++/6/complex **** 
 225:/usr/include/c++/6/complex ****       _GLIBCXX_CONSTEXPR complex __rep() const
 226:/usr/include/c++/6/complex ****       { return *this; }
 227:/usr/include/c++/6/complex **** 
 228:/usr/include/c++/6/complex ****     private:
 229:/usr/include/c++/6/complex ****       _Tp _M_real;
 230:/usr/include/c++/6/complex ****       _Tp _M_imag;
 231:/usr/include/c++/6/complex ****     };
 232:/usr/include/c++/6/complex **** 
 233:/usr/include/c++/6/complex ****   template<typename _Tp>
 234:/usr/include/c++/6/complex ****     complex<_Tp>&
 235:/usr/include/c++/6/complex ****     complex<_Tp>::operator=(const _Tp& __t)
 236:/usr/include/c++/6/complex ****     {
 237:/usr/include/c++/6/complex ****      _M_real = __t;
 238:/usr/include/c++/6/complex ****      _M_imag = _Tp();
 239:/usr/include/c++/6/complex ****      return *this;
 240:/usr/include/c++/6/complex ****     } 
 241:/usr/include/c++/6/complex **** 
 242:/usr/include/c++/6/complex ****   // 26.2.5/5
 243:/usr/include/c++/6/complex ****   template<typename _Tp>
 244:/usr/include/c++/6/complex ****     complex<_Tp>&
 245:/usr/include/c++/6/complex ****     complex<_Tp>::operator*=(const _Tp& __t)
 246:/usr/include/c++/6/complex ****     {
 247:/usr/include/c++/6/complex ****       _M_real *= __t;
 248:/usr/include/c++/6/complex ****       _M_imag *= __t;
 249:/usr/include/c++/6/complex ****       return *this;
 250:/usr/include/c++/6/complex ****     }
 251:/usr/include/c++/6/complex **** 
GAS LISTING /tmp/ccsIN87E.s 			page 56


 252:/usr/include/c++/6/complex ****   // 26.2.5/7
 253:/usr/include/c++/6/complex ****   template<typename _Tp>
 254:/usr/include/c++/6/complex ****     complex<_Tp>&
 255:/usr/include/c++/6/complex ****     complex<_Tp>::operator/=(const _Tp& __t)
 256:/usr/include/c++/6/complex ****     {
 257:/usr/include/c++/6/complex ****       _M_real /= __t;
 258:/usr/include/c++/6/complex ****       _M_imag /= __t;
 259:/usr/include/c++/6/complex ****       return *this;
 260:/usr/include/c++/6/complex ****     }
 261:/usr/include/c++/6/complex **** 
 262:/usr/include/c++/6/complex ****   template<typename _Tp>
 263:/usr/include/c++/6/complex ****     template<typename _Up>
 264:/usr/include/c++/6/complex ****     complex<_Tp>&
 265:/usr/include/c++/6/complex ****     complex<_Tp>::operator=(const complex<_Up>& __z)
 266:/usr/include/c++/6/complex ****     {
 267:/usr/include/c++/6/complex ****       _M_real = __z.real();
 268:/usr/include/c++/6/complex ****       _M_imag = __z.imag();
 269:/usr/include/c++/6/complex ****       return *this;
 270:/usr/include/c++/6/complex ****     }
 271:/usr/include/c++/6/complex **** 
 272:/usr/include/c++/6/complex ****   // 26.2.5/9
 273:/usr/include/c++/6/complex ****   template<typename _Tp>
 274:/usr/include/c++/6/complex ****     template<typename _Up>
 275:/usr/include/c++/6/complex ****     complex<_Tp>&
 276:/usr/include/c++/6/complex ****     complex<_Tp>::operator+=(const complex<_Up>& __z)
 277:/usr/include/c++/6/complex ****     {
 278:/usr/include/c++/6/complex ****       _M_real += __z.real();
 279:/usr/include/c++/6/complex ****       _M_imag += __z.imag();
 280:/usr/include/c++/6/complex ****       return *this;
 281:/usr/include/c++/6/complex ****     }
 282:/usr/include/c++/6/complex **** 
 283:/usr/include/c++/6/complex ****   // 26.2.5/11
 284:/usr/include/c++/6/complex ****   template<typename _Tp>
 285:/usr/include/c++/6/complex ****     template<typename _Up>
 286:/usr/include/c++/6/complex ****     complex<_Tp>&
 287:/usr/include/c++/6/complex ****     complex<_Tp>::operator-=(const complex<_Up>& __z)
 288:/usr/include/c++/6/complex ****     {
 289:/usr/include/c++/6/complex ****       _M_real -= __z.real();
 290:/usr/include/c++/6/complex ****       _M_imag -= __z.imag();
 291:/usr/include/c++/6/complex ****       return *this;
 292:/usr/include/c++/6/complex ****     }
 293:/usr/include/c++/6/complex **** 
 294:/usr/include/c++/6/complex ****   // 26.2.5/13
 295:/usr/include/c++/6/complex ****   // XXX: This is a grammar school implementation.
 296:/usr/include/c++/6/complex ****   template<typename _Tp>
 297:/usr/include/c++/6/complex ****     template<typename _Up>
 298:/usr/include/c++/6/complex ****     complex<_Tp>&
 299:/usr/include/c++/6/complex ****     complex<_Tp>::operator*=(const complex<_Up>& __z)
 300:/usr/include/c++/6/complex ****     {
 301:/usr/include/c++/6/complex ****       const _Tp __r = _M_real * __z.real() - _M_imag * __z.imag();
 302:/usr/include/c++/6/complex ****       _M_imag = _M_real * __z.imag() + _M_imag * __z.real();
 303:/usr/include/c++/6/complex ****       _M_real = __r;
 304:/usr/include/c++/6/complex ****       return *this;
 305:/usr/include/c++/6/complex ****     }
 306:/usr/include/c++/6/complex **** 
 307:/usr/include/c++/6/complex ****   // 26.2.5/15
 308:/usr/include/c++/6/complex ****   // XXX: This is a grammar school implementation.
GAS LISTING /tmp/ccsIN87E.s 			page 57


 309:/usr/include/c++/6/complex ****   template<typename _Tp>
 310:/usr/include/c++/6/complex ****     template<typename _Up>
 311:/usr/include/c++/6/complex ****     complex<_Tp>&
 312:/usr/include/c++/6/complex ****     complex<_Tp>::operator/=(const complex<_Up>& __z)
 313:/usr/include/c++/6/complex ****     {
 314:/usr/include/c++/6/complex ****       const _Tp __r =  _M_real * __z.real() + _M_imag * __z.imag();
 315:/usr/include/c++/6/complex ****       const _Tp __n = std::norm(__z);
 316:/usr/include/c++/6/complex ****       _M_imag = (_M_imag * __z.real() - _M_real * __z.imag()) / __n;
 317:/usr/include/c++/6/complex ****       _M_real = __r / __n;
 318:/usr/include/c++/6/complex ****       return *this;
 319:/usr/include/c++/6/complex ****     }
 320:/usr/include/c++/6/complex ****     
 321:/usr/include/c++/6/complex ****   // Operators:
 322:/usr/include/c++/6/complex ****   //@{
 323:/usr/include/c++/6/complex ****   ///  Return new complex value @a x plus @a y.
 324:/usr/include/c++/6/complex ****   template<typename _Tp>
 325:/usr/include/c++/6/complex ****     inline complex<_Tp>
 326:/usr/include/c++/6/complex ****     operator+(const complex<_Tp>& __x, const complex<_Tp>& __y)
 327:/usr/include/c++/6/complex ****     {
 328:/usr/include/c++/6/complex ****       complex<_Tp> __r = __x;
 329:/usr/include/c++/6/complex ****       __r += __y;
 330:/usr/include/c++/6/complex ****       return __r;
 331:/usr/include/c++/6/complex ****     }
 332:/usr/include/c++/6/complex **** 
 333:/usr/include/c++/6/complex ****   template<typename _Tp>
 334:/usr/include/c++/6/complex ****     inline complex<_Tp>
 335:/usr/include/c++/6/complex ****     operator+(const complex<_Tp>& __x, const _Tp& __y)
 336:/usr/include/c++/6/complex ****     {
 337:/usr/include/c++/6/complex ****       complex<_Tp> __r = __x;
 338:/usr/include/c++/6/complex ****       __r += __y;
 339:/usr/include/c++/6/complex ****       return __r;
 340:/usr/include/c++/6/complex ****     }
 341:/usr/include/c++/6/complex **** 
 342:/usr/include/c++/6/complex ****   template<typename _Tp>
 343:/usr/include/c++/6/complex ****     inline complex<_Tp>
 344:/usr/include/c++/6/complex ****     operator+(const _Tp& __x, const complex<_Tp>& __y)
 345:/usr/include/c++/6/complex ****     {
 346:/usr/include/c++/6/complex ****       complex<_Tp> __r = __y;
 347:/usr/include/c++/6/complex ****       __r += __x;
 348:/usr/include/c++/6/complex ****       return __r;
 349:/usr/include/c++/6/complex ****     }
 350:/usr/include/c++/6/complex ****   //@}
 351:/usr/include/c++/6/complex **** 
 352:/usr/include/c++/6/complex ****   //@{
 353:/usr/include/c++/6/complex ****   ///  Return new complex value @a x minus @a y.
 354:/usr/include/c++/6/complex ****   template<typename _Tp>
 355:/usr/include/c++/6/complex ****     inline complex<_Tp>
 356:/usr/include/c++/6/complex ****     operator-(const complex<_Tp>& __x, const complex<_Tp>& __y)
 357:/usr/include/c++/6/complex ****     {
 358:/usr/include/c++/6/complex ****       complex<_Tp> __r = __x;
 359:/usr/include/c++/6/complex ****       __r -= __y;
 360:/usr/include/c++/6/complex ****       return __r;
 361:/usr/include/c++/6/complex ****     }
 362:/usr/include/c++/6/complex ****     
 363:/usr/include/c++/6/complex ****   template<typename _Tp>
 364:/usr/include/c++/6/complex ****     inline complex<_Tp>
 365:/usr/include/c++/6/complex ****     operator-(const complex<_Tp>& __x, const _Tp& __y)
GAS LISTING /tmp/ccsIN87E.s 			page 58


 366:/usr/include/c++/6/complex ****     {
 367:/usr/include/c++/6/complex ****       complex<_Tp> __r = __x;
 368:/usr/include/c++/6/complex ****       __r -= __y;
 369:/usr/include/c++/6/complex ****       return __r;
 370:/usr/include/c++/6/complex ****     }
 371:/usr/include/c++/6/complex **** 
 372:/usr/include/c++/6/complex ****   template<typename _Tp>
 373:/usr/include/c++/6/complex ****     inline complex<_Tp>
 374:/usr/include/c++/6/complex ****     operator-(const _Tp& __x, const complex<_Tp>& __y)
 375:/usr/include/c++/6/complex ****     {
 376:/usr/include/c++/6/complex ****       complex<_Tp> __r(__x, -__y.imag());
 377:/usr/include/c++/6/complex ****       __r -= __y.real();
 378:/usr/include/c++/6/complex ****       return __r;
 379:/usr/include/c++/6/complex ****     }
 380:/usr/include/c++/6/complex ****   //@}
 381:/usr/include/c++/6/complex **** 
 382:/usr/include/c++/6/complex ****   //@{
 383:/usr/include/c++/6/complex ****   ///  Return new complex value @a x times @a y.
 384:/usr/include/c++/6/complex ****   template<typename _Tp>
 385:/usr/include/c++/6/complex ****     inline complex<_Tp>
 386:/usr/include/c++/6/complex ****     operator*(const complex<_Tp>& __x, const complex<_Tp>& __y)
 387:/usr/include/c++/6/complex ****     {
 388:/usr/include/c++/6/complex ****       complex<_Tp> __r = __x;
 389:/usr/include/c++/6/complex ****       __r *= __y;
 390:/usr/include/c++/6/complex ****       return __r;
 391:/usr/include/c++/6/complex ****     }
 392:/usr/include/c++/6/complex **** 
 393:/usr/include/c++/6/complex ****   template<typename _Tp>
 394:/usr/include/c++/6/complex ****     inline complex<_Tp>
 395:/usr/include/c++/6/complex ****     operator*(const complex<_Tp>& __x, const _Tp& __y)
 396:/usr/include/c++/6/complex ****     {
 397:/usr/include/c++/6/complex ****       complex<_Tp> __r = __x;
 398:/usr/include/c++/6/complex ****       __r *= __y;
 399:/usr/include/c++/6/complex ****       return __r;
 400:/usr/include/c++/6/complex ****     }
 401:/usr/include/c++/6/complex **** 
 402:/usr/include/c++/6/complex ****   template<typename _Tp>
 403:/usr/include/c++/6/complex ****     inline complex<_Tp>
 404:/usr/include/c++/6/complex ****     operator*(const _Tp& __x, const complex<_Tp>& __y)
 405:/usr/include/c++/6/complex ****     {
 406:/usr/include/c++/6/complex ****       complex<_Tp> __r = __y;
 407:/usr/include/c++/6/complex ****       __r *= __x;
 408:/usr/include/c++/6/complex ****       return __r;
 409:/usr/include/c++/6/complex ****     }
 410:/usr/include/c++/6/complex ****   //@}
 411:/usr/include/c++/6/complex **** 
 412:/usr/include/c++/6/complex ****   //@{
 413:/usr/include/c++/6/complex ****   ///  Return new complex value @a x divided by @a y.
 414:/usr/include/c++/6/complex ****   template<typename _Tp>
 415:/usr/include/c++/6/complex ****     inline complex<_Tp>
 416:/usr/include/c++/6/complex ****     operator/(const complex<_Tp>& __x, const complex<_Tp>& __y)
 417:/usr/include/c++/6/complex ****     {
 418:/usr/include/c++/6/complex ****       complex<_Tp> __r = __x;
 419:/usr/include/c++/6/complex ****       __r /= __y;
 420:/usr/include/c++/6/complex ****       return __r;
 421:/usr/include/c++/6/complex ****     }
 422:/usr/include/c++/6/complex ****     
GAS LISTING /tmp/ccsIN87E.s 			page 59


 423:/usr/include/c++/6/complex ****   template<typename _Tp>
 424:/usr/include/c++/6/complex ****     inline complex<_Tp>
 425:/usr/include/c++/6/complex ****     operator/(const complex<_Tp>& __x, const _Tp& __y)
 426:/usr/include/c++/6/complex ****     {
 427:/usr/include/c++/6/complex ****       complex<_Tp> __r = __x;
 428:/usr/include/c++/6/complex ****       __r /= __y;
 429:/usr/include/c++/6/complex ****       return __r;
 430:/usr/include/c++/6/complex ****     }
 431:/usr/include/c++/6/complex **** 
 432:/usr/include/c++/6/complex ****   template<typename _Tp>
 433:/usr/include/c++/6/complex ****     inline complex<_Tp>
 434:/usr/include/c++/6/complex ****     operator/(const _Tp& __x, const complex<_Tp>& __y)
 435:/usr/include/c++/6/complex ****     {
 436:/usr/include/c++/6/complex ****       complex<_Tp> __r = __x;
 437:/usr/include/c++/6/complex ****       __r /= __y;
 438:/usr/include/c++/6/complex ****       return __r;
 439:/usr/include/c++/6/complex ****     }
 440:/usr/include/c++/6/complex ****   //@}
 441:/usr/include/c++/6/complex **** 
 442:/usr/include/c++/6/complex ****   ///  Return @a x.
 443:/usr/include/c++/6/complex ****   template<typename _Tp>
 444:/usr/include/c++/6/complex ****     inline complex<_Tp>
 445:/usr/include/c++/6/complex ****     operator+(const complex<_Tp>& __x)
 446:/usr/include/c++/6/complex ****     { return __x; }
 447:/usr/include/c++/6/complex **** 
 448:/usr/include/c++/6/complex ****   ///  Return complex negation of @a x.
 449:/usr/include/c++/6/complex ****   template<typename _Tp>
 450:/usr/include/c++/6/complex ****     inline complex<_Tp>
 451:/usr/include/c++/6/complex ****     operator-(const complex<_Tp>& __x)
 452:/usr/include/c++/6/complex ****     {  return complex<_Tp>(-__x.real(), -__x.imag()); }
 453:/usr/include/c++/6/complex **** 
 454:/usr/include/c++/6/complex ****   //@{
 455:/usr/include/c++/6/complex ****   ///  Return true if @a x is equal to @a y.
 456:/usr/include/c++/6/complex ****   template<typename _Tp>
 457:/usr/include/c++/6/complex ****     inline _GLIBCXX_CONSTEXPR bool
 458:/usr/include/c++/6/complex ****     operator==(const complex<_Tp>& __x, const complex<_Tp>& __y)
 459:/usr/include/c++/6/complex ****     { return __x.real() == __y.real() && __x.imag() == __y.imag(); }
 460:/usr/include/c++/6/complex **** 
 461:/usr/include/c++/6/complex ****   template<typename _Tp>
 462:/usr/include/c++/6/complex ****     inline _GLIBCXX_CONSTEXPR bool
 463:/usr/include/c++/6/complex ****     operator==(const complex<_Tp>& __x, const _Tp& __y)
 464:/usr/include/c++/6/complex ****     { return __x.real() == __y && __x.imag() == _Tp(); }
 465:/usr/include/c++/6/complex **** 
 466:/usr/include/c++/6/complex ****   template<typename _Tp>
 467:/usr/include/c++/6/complex ****     inline _GLIBCXX_CONSTEXPR bool
 468:/usr/include/c++/6/complex ****     operator==(const _Tp& __x, const complex<_Tp>& __y)
 469:/usr/include/c++/6/complex ****     { return __x == __y.real() && _Tp() == __y.imag(); }
 470:/usr/include/c++/6/complex ****   //@}
 471:/usr/include/c++/6/complex **** 
 472:/usr/include/c++/6/complex ****   //@{
 473:/usr/include/c++/6/complex ****   ///  Return false if @a x is equal to @a y.
 474:/usr/include/c++/6/complex ****   template<typename _Tp>
 475:/usr/include/c++/6/complex ****     inline _GLIBCXX_CONSTEXPR bool
 476:/usr/include/c++/6/complex ****     operator!=(const complex<_Tp>& __x, const complex<_Tp>& __y)
 477:/usr/include/c++/6/complex ****     { return __x.real() != __y.real() || __x.imag() != __y.imag(); }
 478:/usr/include/c++/6/complex **** 
 479:/usr/include/c++/6/complex ****   template<typename _Tp>
GAS LISTING /tmp/ccsIN87E.s 			page 60


 480:/usr/include/c++/6/complex ****     inline _GLIBCXX_CONSTEXPR bool
 481:/usr/include/c++/6/complex ****     operator!=(const complex<_Tp>& __x, const _Tp& __y)
 482:/usr/include/c++/6/complex ****     { return __x.real() != __y || __x.imag() != _Tp(); }
 483:/usr/include/c++/6/complex **** 
 484:/usr/include/c++/6/complex ****   template<typename _Tp>
 485:/usr/include/c++/6/complex ****     inline _GLIBCXX_CONSTEXPR bool
 486:/usr/include/c++/6/complex ****     operator!=(const _Tp& __x, const complex<_Tp>& __y)
 487:/usr/include/c++/6/complex ****     { return __x != __y.real() || _Tp() != __y.imag(); }
 488:/usr/include/c++/6/complex ****   //@}
 489:/usr/include/c++/6/complex **** 
 490:/usr/include/c++/6/complex ****   ///  Extraction operator for complex values.
 491:/usr/include/c++/6/complex ****   template<typename _Tp, typename _CharT, class _Traits>
 492:/usr/include/c++/6/complex ****     basic_istream<_CharT, _Traits>&
 493:/usr/include/c++/6/complex ****     operator>>(basic_istream<_CharT, _Traits>& __is, complex<_Tp>& __x)
 494:/usr/include/c++/6/complex ****     {
 495:/usr/include/c++/6/complex ****       _Tp __re_x, __im_x;
 496:/usr/include/c++/6/complex ****       _CharT __ch;
 497:/usr/include/c++/6/complex ****       __is >> __ch;
 498:/usr/include/c++/6/complex ****       if (__ch == '(') 
 499:/usr/include/c++/6/complex **** 	{
 500:/usr/include/c++/6/complex **** 	  __is >> __re_x >> __ch;
 501:/usr/include/c++/6/complex **** 	  if (__ch == ',') 
 502:/usr/include/c++/6/complex **** 	    {
 503:/usr/include/c++/6/complex **** 	      __is >> __im_x >> __ch;
 504:/usr/include/c++/6/complex **** 	      if (__ch == ')') 
 505:/usr/include/c++/6/complex **** 		__x = complex<_Tp>(__re_x, __im_x);
 506:/usr/include/c++/6/complex **** 	      else
 507:/usr/include/c++/6/complex **** 		__is.setstate(ios_base::failbit);
 508:/usr/include/c++/6/complex **** 	    }
 509:/usr/include/c++/6/complex **** 	  else if (__ch == ')') 
 510:/usr/include/c++/6/complex **** 	    __x = __re_x;
 511:/usr/include/c++/6/complex **** 	  else
 512:/usr/include/c++/6/complex **** 	    __is.setstate(ios_base::failbit);
 513:/usr/include/c++/6/complex **** 	}
 514:/usr/include/c++/6/complex ****       else 
 515:/usr/include/c++/6/complex **** 	{
 516:/usr/include/c++/6/complex **** 	  __is.putback(__ch);
 517:/usr/include/c++/6/complex **** 	  __is >> __re_x;
 518:/usr/include/c++/6/complex **** 	  __x = __re_x;
 519:/usr/include/c++/6/complex **** 	}
 520:/usr/include/c++/6/complex ****       return __is;
 521:/usr/include/c++/6/complex ****     }
 522:/usr/include/c++/6/complex **** 
 523:/usr/include/c++/6/complex ****   ///  Insertion operator for complex values.
 524:/usr/include/c++/6/complex ****   template<typename _Tp, typename _CharT, class _Traits>
 525:/usr/include/c++/6/complex ****     basic_ostream<_CharT, _Traits>&
 526:/usr/include/c++/6/complex ****     operator<<(basic_ostream<_CharT, _Traits>& __os, const complex<_Tp>& __x)
 527:/usr/include/c++/6/complex ****     {
 528:/usr/include/c++/6/complex ****       basic_ostringstream<_CharT, _Traits> __s;
 529:/usr/include/c++/6/complex ****       __s.flags(__os.flags());
 530:/usr/include/c++/6/complex ****       __s.imbue(__os.getloc());
 531:/usr/include/c++/6/complex ****       __s.precision(__os.precision());
 532:/usr/include/c++/6/complex ****       __s << '(' << __x.real() << ',' << __x.imag() << ')';
 533:/usr/include/c++/6/complex ****       return __os << __s.str();
 534:/usr/include/c++/6/complex ****     }
 535:/usr/include/c++/6/complex **** 
 536:/usr/include/c++/6/complex ****   // Values
GAS LISTING /tmp/ccsIN87E.s 			page 61


 537:/usr/include/c++/6/complex **** #if __cplusplus >= 201103L
 538:/usr/include/c++/6/complex ****   template<typename _Tp>
 539:/usr/include/c++/6/complex ****     constexpr _Tp
 540:/usr/include/c++/6/complex ****     real(const complex<_Tp>& __z)
 541:/usr/include/c++/6/complex ****     { return __z.real(); }
 542:/usr/include/c++/6/complex **** 
 543:/usr/include/c++/6/complex ****   template<typename _Tp>
 544:/usr/include/c++/6/complex ****     constexpr _Tp
 545:/usr/include/c++/6/complex ****     imag(const complex<_Tp>& __z)
 546:/usr/include/c++/6/complex ****     { return __z.imag(); }
 547:/usr/include/c++/6/complex **** #else
 548:/usr/include/c++/6/complex ****   template<typename _Tp>
 549:/usr/include/c++/6/complex ****     inline _Tp&
 550:/usr/include/c++/6/complex ****     real(complex<_Tp>& __z)
 551:/usr/include/c++/6/complex ****     { return __z.real(); }
 552:/usr/include/c++/6/complex ****     
 553:/usr/include/c++/6/complex ****   template<typename _Tp>
 554:/usr/include/c++/6/complex ****     inline const _Tp&
 555:/usr/include/c++/6/complex ****     real(const complex<_Tp>& __z)
 556:/usr/include/c++/6/complex ****     { return __z.real(); }
 557:/usr/include/c++/6/complex ****     
 558:/usr/include/c++/6/complex ****   template<typename _Tp>
 559:/usr/include/c++/6/complex ****     inline _Tp&
 560:/usr/include/c++/6/complex ****     imag(complex<_Tp>& __z)
 561:/usr/include/c++/6/complex ****     { return __z.imag(); }
 562:/usr/include/c++/6/complex ****     
 563:/usr/include/c++/6/complex ****   template<typename _Tp>
 564:/usr/include/c++/6/complex ****     inline const _Tp&
 565:/usr/include/c++/6/complex ****     imag(const complex<_Tp>& __z)
 566:/usr/include/c++/6/complex ****     { return __z.imag(); }
 567:/usr/include/c++/6/complex **** #endif
 568:/usr/include/c++/6/complex **** 
 569:/usr/include/c++/6/complex ****   // 26.2.7/3 abs(__z):  Returns the magnitude of __z.
 570:/usr/include/c++/6/complex ****   template<typename _Tp>
 571:/usr/include/c++/6/complex ****     inline _Tp
 572:/usr/include/c++/6/complex ****     __complex_abs(const complex<_Tp>& __z)
 573:/usr/include/c++/6/complex ****     {
 574:/usr/include/c++/6/complex ****       _Tp __x = __z.real();
 575:/usr/include/c++/6/complex ****       _Tp __y = __z.imag();
 576:/usr/include/c++/6/complex ****       const _Tp __s = std::max(abs(__x), abs(__y));
 577:/usr/include/c++/6/complex ****       if (__s == _Tp())  // well ...
 578:/usr/include/c++/6/complex ****         return __s;
 579:/usr/include/c++/6/complex ****       __x /= __s; 
 580:/usr/include/c++/6/complex ****       __y /= __s;
 581:/usr/include/c++/6/complex ****       return __s * sqrt(__x * __x + __y * __y);
 582:/usr/include/c++/6/complex ****     }
 583:/usr/include/c++/6/complex **** 
 584:/usr/include/c++/6/complex **** #if _GLIBCXX_USE_C99_COMPLEX
 585:/usr/include/c++/6/complex ****   inline float
 586:/usr/include/c++/6/complex ****   __complex_abs(__complex__ float __z) { return __builtin_cabsf(__z); }
 587:/usr/include/c++/6/complex **** 
 588:/usr/include/c++/6/complex ****   inline double
 589:/usr/include/c++/6/complex ****   __complex_abs(__complex__ double __z) { return __builtin_cabs(__z); }
 590:/usr/include/c++/6/complex **** 
 591:/usr/include/c++/6/complex ****   inline long double
 592:/usr/include/c++/6/complex ****   __complex_abs(const __complex__ long double& __z)
 593:/usr/include/c++/6/complex ****   { return __builtin_cabsl(__z); }
GAS LISTING /tmp/ccsIN87E.s 			page 62


 594:/usr/include/c++/6/complex **** 
 595:/usr/include/c++/6/complex ****   template<typename _Tp>
 596:/usr/include/c++/6/complex ****     inline _Tp
 597:/usr/include/c++/6/complex ****     abs(const complex<_Tp>& __z) { return __complex_abs(__z.__rep()); }
 598:/usr/include/c++/6/complex **** #else
 599:/usr/include/c++/6/complex ****   template<typename _Tp>
 600:/usr/include/c++/6/complex ****     inline _Tp
 601:/usr/include/c++/6/complex ****     abs(const complex<_Tp>& __z) { return __complex_abs(__z); }
 602:/usr/include/c++/6/complex **** #endif  
 603:/usr/include/c++/6/complex **** 
 604:/usr/include/c++/6/complex **** 
 605:/usr/include/c++/6/complex ****   // 26.2.7/4: arg(__z): Returns the phase angle of __z.
 606:/usr/include/c++/6/complex ****   template<typename _Tp>
 607:/usr/include/c++/6/complex ****     inline _Tp
 608:/usr/include/c++/6/complex ****     __complex_arg(const complex<_Tp>& __z)
 609:/usr/include/c++/6/complex ****     { return  atan2(__z.imag(), __z.real()); }
 610:/usr/include/c++/6/complex **** 
 611:/usr/include/c++/6/complex **** #if _GLIBCXX_USE_C99_COMPLEX
 612:/usr/include/c++/6/complex ****   inline float
 613:/usr/include/c++/6/complex ****   __complex_arg(__complex__ float __z) { return __builtin_cargf(__z); }
 614:/usr/include/c++/6/complex **** 
 615:/usr/include/c++/6/complex ****   inline double
 616:/usr/include/c++/6/complex ****   __complex_arg(__complex__ double __z) { return __builtin_carg(__z); }
 617:/usr/include/c++/6/complex **** 
 618:/usr/include/c++/6/complex ****   inline long double
 619:/usr/include/c++/6/complex ****   __complex_arg(const __complex__ long double& __z)
 620:/usr/include/c++/6/complex ****   { return __builtin_cargl(__z); }
 621:/usr/include/c++/6/complex **** 
 622:/usr/include/c++/6/complex ****   template<typename _Tp>
 623:/usr/include/c++/6/complex ****     inline _Tp
 624:/usr/include/c++/6/complex ****     arg(const complex<_Tp>& __z) { return __complex_arg(__z.__rep()); }
 625:/usr/include/c++/6/complex **** #else
 626:/usr/include/c++/6/complex ****   template<typename _Tp>
 627:/usr/include/c++/6/complex ****     inline _Tp
 628:/usr/include/c++/6/complex ****     arg(const complex<_Tp>& __z) { return __complex_arg(__z); }
 629:/usr/include/c++/6/complex **** #endif
 630:/usr/include/c++/6/complex **** 
 631:/usr/include/c++/6/complex ****   // 26.2.7/5: norm(__z) returns the squared magnitude of __z.
 632:/usr/include/c++/6/complex ****   //     As defined, norm() is -not- a norm is the common mathematical
 633:/usr/include/c++/6/complex ****   //     sense used in numerics.  The helper class _Norm_helper<> tries to
 634:/usr/include/c++/6/complex ****   //     distinguish between builtin floating point and the rest, so as
 635:/usr/include/c++/6/complex ****   //     to deliver an answer as close as possible to the real value.
 636:/usr/include/c++/6/complex ****   template<bool>
 637:/usr/include/c++/6/complex ****     struct _Norm_helper
 638:/usr/include/c++/6/complex ****     {
 639:/usr/include/c++/6/complex ****       template<typename _Tp>
 640:/usr/include/c++/6/complex ****         static inline _Tp _S_do_it(const complex<_Tp>& __z)
 641:/usr/include/c++/6/complex ****         {
 642:/usr/include/c++/6/complex ****           const _Tp __x = __z.real();
 643:/usr/include/c++/6/complex ****           const _Tp __y = __z.imag();
 644:/usr/include/c++/6/complex ****           return __x * __x + __y * __y;
 645:/usr/include/c++/6/complex ****         }
 646:/usr/include/c++/6/complex ****     };
 647:/usr/include/c++/6/complex **** 
 648:/usr/include/c++/6/complex ****   template<>
 649:/usr/include/c++/6/complex ****     struct _Norm_helper<true>
 650:/usr/include/c++/6/complex ****     {
GAS LISTING /tmp/ccsIN87E.s 			page 63


 651:/usr/include/c++/6/complex ****       template<typename _Tp>
 652:/usr/include/c++/6/complex ****         static inline _Tp _S_do_it(const complex<_Tp>& __z)
 653:/usr/include/c++/6/complex ****         {
 654:/usr/include/c++/6/complex ****           _Tp __res = std::abs(__z);
 655:/usr/include/c++/6/complex ****           return __res * __res;
 656:/usr/include/c++/6/complex ****         }
 657:/usr/include/c++/6/complex ****     };
 658:/usr/include/c++/6/complex ****   
 659:/usr/include/c++/6/complex ****   template<typename _Tp>
 660:/usr/include/c++/6/complex ****     inline _Tp
 661:/usr/include/c++/6/complex ****     norm(const complex<_Tp>& __z)
 662:/usr/include/c++/6/complex ****     {
 663:/usr/include/c++/6/complex ****       return _Norm_helper<__is_floating<_Tp>::__value 
 664:/usr/include/c++/6/complex **** 	&& !_GLIBCXX_FAST_MATH>::_S_do_it(__z);
 665:/usr/include/c++/6/complex ****     }
 666:/usr/include/c++/6/complex **** 
 667:/usr/include/c++/6/complex ****   template<typename _Tp>
 668:/usr/include/c++/6/complex ****     inline complex<_Tp>
 669:/usr/include/c++/6/complex ****     polar(const _Tp& __rho, const _Tp& __theta)
 670:/usr/include/c++/6/complex ****     {
 671:/usr/include/c++/6/complex ****       __glibcxx_assert( __rho >= 0 );
 672:/usr/include/c++/6/complex ****       return complex<_Tp>(__rho * cos(__theta), __rho * sin(__theta));
 673:/usr/include/c++/6/complex ****     }
 674:/usr/include/c++/6/complex **** 
 675:/usr/include/c++/6/complex ****   template<typename _Tp>
 676:/usr/include/c++/6/complex ****     inline complex<_Tp>
 677:/usr/include/c++/6/complex ****     conj(const complex<_Tp>& __z)
 678:/usr/include/c++/6/complex ****     { return complex<_Tp>(__z.real(), -__z.imag()); }
 679:/usr/include/c++/6/complex ****   
 680:/usr/include/c++/6/complex ****   // Transcendentals
 681:/usr/include/c++/6/complex **** 
 682:/usr/include/c++/6/complex ****   // 26.2.8/1 cos(__z):  Returns the cosine of __z.
 683:/usr/include/c++/6/complex ****   template<typename _Tp>
 684:/usr/include/c++/6/complex ****     inline complex<_Tp>
 685:/usr/include/c++/6/complex ****     __complex_cos(const complex<_Tp>& __z)
 686:/usr/include/c++/6/complex ****     {
 687:/usr/include/c++/6/complex ****       const _Tp __x = __z.real();
 688:/usr/include/c++/6/complex ****       const _Tp __y = __z.imag();
 689:/usr/include/c++/6/complex ****       return complex<_Tp>(cos(__x) * cosh(__y), -sin(__x) * sinh(__y));
 690:/usr/include/c++/6/complex ****     }
 691:/usr/include/c++/6/complex **** 
 692:/usr/include/c++/6/complex **** #if _GLIBCXX_USE_C99_COMPLEX
 693:/usr/include/c++/6/complex ****   inline __complex__ float
 694:/usr/include/c++/6/complex ****   __complex_cos(__complex__ float __z) { return __builtin_ccosf(__z); }
 695:/usr/include/c++/6/complex **** 
 696:/usr/include/c++/6/complex ****   inline __complex__ double
 697:/usr/include/c++/6/complex ****   __complex_cos(__complex__ double __z) { return __builtin_ccos(__z); }
 698:/usr/include/c++/6/complex **** 
 699:/usr/include/c++/6/complex ****   inline __complex__ long double
 700:/usr/include/c++/6/complex ****   __complex_cos(const __complex__ long double& __z)
 701:/usr/include/c++/6/complex ****   { return __builtin_ccosl(__z); }
 702:/usr/include/c++/6/complex **** 
 703:/usr/include/c++/6/complex ****   template<typename _Tp>
 704:/usr/include/c++/6/complex ****     inline complex<_Tp>
 705:/usr/include/c++/6/complex ****     cos(const complex<_Tp>& __z) { return __complex_cos(__z.__rep()); }
 706:/usr/include/c++/6/complex **** #else
 707:/usr/include/c++/6/complex ****   template<typename _Tp>
GAS LISTING /tmp/ccsIN87E.s 			page 64


 708:/usr/include/c++/6/complex ****     inline complex<_Tp>
 709:/usr/include/c++/6/complex ****     cos(const complex<_Tp>& __z) { return __complex_cos(__z); }
 710:/usr/include/c++/6/complex **** #endif
 711:/usr/include/c++/6/complex **** 
 712:/usr/include/c++/6/complex ****   // 26.2.8/2 cosh(__z): Returns the hyperbolic cosine of __z.
 713:/usr/include/c++/6/complex ****   template<typename _Tp>
 714:/usr/include/c++/6/complex ****     inline complex<_Tp>
 715:/usr/include/c++/6/complex ****     __complex_cosh(const complex<_Tp>& __z)
 716:/usr/include/c++/6/complex ****     {
 717:/usr/include/c++/6/complex ****       const _Tp __x = __z.real();
 718:/usr/include/c++/6/complex ****       const _Tp __y = __z.imag();
 719:/usr/include/c++/6/complex ****       return complex<_Tp>(cosh(__x) * cos(__y), sinh(__x) * sin(__y));
 720:/usr/include/c++/6/complex ****     }
 721:/usr/include/c++/6/complex **** 
 722:/usr/include/c++/6/complex **** #if _GLIBCXX_USE_C99_COMPLEX
 723:/usr/include/c++/6/complex ****   inline __complex__ float
 724:/usr/include/c++/6/complex ****   __complex_cosh(__complex__ float __z) { return __builtin_ccoshf(__z); }
 725:/usr/include/c++/6/complex **** 
 726:/usr/include/c++/6/complex ****   inline __complex__ double
 727:/usr/include/c++/6/complex ****   __complex_cosh(__complex__ double __z) { return __builtin_ccosh(__z); }
 728:/usr/include/c++/6/complex **** 
 729:/usr/include/c++/6/complex ****   inline __complex__ long double
 730:/usr/include/c++/6/complex ****   __complex_cosh(const __complex__ long double& __z)
 731:/usr/include/c++/6/complex ****   { return __builtin_ccoshl(__z); }
 732:/usr/include/c++/6/complex **** 
 733:/usr/include/c++/6/complex ****   template<typename _Tp>
 734:/usr/include/c++/6/complex ****     inline complex<_Tp>
 735:/usr/include/c++/6/complex ****     cosh(const complex<_Tp>& __z) { return __complex_cosh(__z.__rep()); }
 736:/usr/include/c++/6/complex **** #else
 737:/usr/include/c++/6/complex ****   template<typename _Tp>
 738:/usr/include/c++/6/complex ****     inline complex<_Tp>
 739:/usr/include/c++/6/complex ****     cosh(const complex<_Tp>& __z) { return __complex_cosh(__z); }
 740:/usr/include/c++/6/complex **** #endif
 741:/usr/include/c++/6/complex **** 
 742:/usr/include/c++/6/complex ****   // 26.2.8/3 exp(__z): Returns the complex base e exponential of x
 743:/usr/include/c++/6/complex ****   template<typename _Tp>
 744:/usr/include/c++/6/complex ****     inline complex<_Tp>
 745:/usr/include/c++/6/complex ****     __complex_exp(const complex<_Tp>& __z)
 746:/usr/include/c++/6/complex ****     { return std::polar<_Tp>(exp(__z.real()), __z.imag()); }
 747:/usr/include/c++/6/complex **** 
 748:/usr/include/c++/6/complex **** #if _GLIBCXX_USE_C99_COMPLEX
 749:/usr/include/c++/6/complex ****   inline __complex__ float
 750:/usr/include/c++/6/complex ****   __complex_exp(__complex__ float __z) { return __builtin_cexpf(__z); }
 751:/usr/include/c++/6/complex **** 
 752:/usr/include/c++/6/complex ****   inline __complex__ double
 753:/usr/include/c++/6/complex ****   __complex_exp(__complex__ double __z) { return __builtin_cexp(__z); }
 754:/usr/include/c++/6/complex **** 
 755:/usr/include/c++/6/complex ****   inline __complex__ long double
 756:/usr/include/c++/6/complex ****   __complex_exp(const __complex__ long double& __z)
 757:/usr/include/c++/6/complex ****   { return __builtin_cexpl(__z); }
 758:/usr/include/c++/6/complex **** 
 759:/usr/include/c++/6/complex ****   template<typename _Tp>
 760:/usr/include/c++/6/complex ****     inline complex<_Tp>
 761:/usr/include/c++/6/complex ****     exp(const complex<_Tp>& __z) { return __complex_exp(__z.__rep()); }
 762:/usr/include/c++/6/complex **** #else
 763:/usr/include/c++/6/complex ****   template<typename _Tp>
 764:/usr/include/c++/6/complex ****     inline complex<_Tp>
GAS LISTING /tmp/ccsIN87E.s 			page 65


 765:/usr/include/c++/6/complex ****     exp(const complex<_Tp>& __z) { return __complex_exp(__z); }
 766:/usr/include/c++/6/complex **** #endif
 767:/usr/include/c++/6/complex **** 
 768:/usr/include/c++/6/complex ****   // 26.2.8/5 log(__z): Returns the natural complex logarithm of __z.
 769:/usr/include/c++/6/complex ****   //                    The branch cut is along the negative axis.
 770:/usr/include/c++/6/complex ****   template<typename _Tp>
 771:/usr/include/c++/6/complex ****     inline complex<_Tp>
 772:/usr/include/c++/6/complex ****     __complex_log(const complex<_Tp>& __z)
 773:/usr/include/c++/6/complex ****     { return complex<_Tp>(log(std::abs(__z)), std::arg(__z)); }
 774:/usr/include/c++/6/complex **** 
 775:/usr/include/c++/6/complex **** #if _GLIBCXX_USE_C99_COMPLEX
 776:/usr/include/c++/6/complex ****   inline __complex__ float
 777:/usr/include/c++/6/complex ****   __complex_log(__complex__ float __z) { return __builtin_clogf(__z); }
 778:/usr/include/c++/6/complex **** 
 779:/usr/include/c++/6/complex ****   inline __complex__ double
 780:/usr/include/c++/6/complex ****   __complex_log(__complex__ double __z) { return __builtin_clog(__z); }
 781:/usr/include/c++/6/complex **** 
 782:/usr/include/c++/6/complex ****   inline __complex__ long double
 783:/usr/include/c++/6/complex ****   __complex_log(const __complex__ long double& __z)
 784:/usr/include/c++/6/complex ****   { return __builtin_clogl(__z); }
 785:/usr/include/c++/6/complex **** 
 786:/usr/include/c++/6/complex ****   template<typename _Tp>
 787:/usr/include/c++/6/complex ****     inline complex<_Tp>
 788:/usr/include/c++/6/complex ****     log(const complex<_Tp>& __z) { return __complex_log(__z.__rep()); }
 789:/usr/include/c++/6/complex **** #else
 790:/usr/include/c++/6/complex ****   template<typename _Tp>
 791:/usr/include/c++/6/complex ****     inline complex<_Tp>
 792:/usr/include/c++/6/complex ****     log(const complex<_Tp>& __z) { return __complex_log(__z); }
 793:/usr/include/c++/6/complex **** #endif
 794:/usr/include/c++/6/complex **** 
 795:/usr/include/c++/6/complex ****   template<typename _Tp>
 796:/usr/include/c++/6/complex ****     inline complex<_Tp>
 797:/usr/include/c++/6/complex ****     log10(const complex<_Tp>& __z)
 798:/usr/include/c++/6/complex ****     { return std::log(__z) / log(_Tp(10.0)); }
 799:/usr/include/c++/6/complex **** 
 800:/usr/include/c++/6/complex ****   // 26.2.8/10 sin(__z): Returns the sine of __z.
 801:/usr/include/c++/6/complex ****   template<typename _Tp>
 802:/usr/include/c++/6/complex ****     inline complex<_Tp>
 803:/usr/include/c++/6/complex ****     __complex_sin(const complex<_Tp>& __z)
 804:/usr/include/c++/6/complex ****     {
 805:/usr/include/c++/6/complex ****       const _Tp __x = __z.real();
 806:/usr/include/c++/6/complex ****       const _Tp __y = __z.imag();
 807:/usr/include/c++/6/complex ****       return complex<_Tp>(sin(__x) * cosh(__y), cos(__x) * sinh(__y)); 
 808:/usr/include/c++/6/complex ****     }
 809:/usr/include/c++/6/complex **** 
 810:/usr/include/c++/6/complex **** #if _GLIBCXX_USE_C99_COMPLEX
 811:/usr/include/c++/6/complex ****   inline __complex__ float
 812:/usr/include/c++/6/complex ****   __complex_sin(__complex__ float __z) { return __builtin_csinf(__z); }
 813:/usr/include/c++/6/complex **** 
 814:/usr/include/c++/6/complex ****   inline __complex__ double
 815:/usr/include/c++/6/complex ****   __complex_sin(__complex__ double __z) { return __builtin_csin(__z); }
 816:/usr/include/c++/6/complex **** 
 817:/usr/include/c++/6/complex ****   inline __complex__ long double
 818:/usr/include/c++/6/complex ****   __complex_sin(const __complex__ long double& __z)
 819:/usr/include/c++/6/complex ****   { return __builtin_csinl(__z); }
 820:/usr/include/c++/6/complex **** 
 821:/usr/include/c++/6/complex ****   template<typename _Tp>
GAS LISTING /tmp/ccsIN87E.s 			page 66


 822:/usr/include/c++/6/complex ****     inline complex<_Tp>
 823:/usr/include/c++/6/complex ****     sin(const complex<_Tp>& __z) { return __complex_sin(__z.__rep()); }
 824:/usr/include/c++/6/complex **** #else
 825:/usr/include/c++/6/complex ****   template<typename _Tp>
 826:/usr/include/c++/6/complex ****     inline complex<_Tp>
 827:/usr/include/c++/6/complex ****     sin(const complex<_Tp>& __z) { return __complex_sin(__z); }
 828:/usr/include/c++/6/complex **** #endif
 829:/usr/include/c++/6/complex **** 
 830:/usr/include/c++/6/complex ****   // 26.2.8/11 sinh(__z): Returns the hyperbolic sine of __z.
 831:/usr/include/c++/6/complex ****   template<typename _Tp>
 832:/usr/include/c++/6/complex ****     inline complex<_Tp>
 833:/usr/include/c++/6/complex ****     __complex_sinh(const complex<_Tp>& __z)
 834:/usr/include/c++/6/complex ****     {
 835:/usr/include/c++/6/complex ****       const _Tp __x = __z.real();
 836:/usr/include/c++/6/complex ****       const _Tp  __y = __z.imag();
 837:/usr/include/c++/6/complex ****       return complex<_Tp>(sinh(__x) * cos(__y), cosh(__x) * sin(__y));
 838:/usr/include/c++/6/complex ****     }
 839:/usr/include/c++/6/complex **** 
 840:/usr/include/c++/6/complex **** #if _GLIBCXX_USE_C99_COMPLEX
 841:/usr/include/c++/6/complex ****   inline __complex__ float
 842:/usr/include/c++/6/complex ****   __complex_sinh(__complex__ float __z) { return __builtin_csinhf(__z); }      
 843:/usr/include/c++/6/complex **** 
 844:/usr/include/c++/6/complex ****   inline __complex__ double
 845:/usr/include/c++/6/complex ****   __complex_sinh(__complex__ double __z) { return __builtin_csinh(__z); }      
 846:/usr/include/c++/6/complex **** 
 847:/usr/include/c++/6/complex ****   inline __complex__ long double
 848:/usr/include/c++/6/complex ****   __complex_sinh(const __complex__ long double& __z)
 849:/usr/include/c++/6/complex ****   { return __builtin_csinhl(__z); }      
 850:/usr/include/c++/6/complex **** 
 851:/usr/include/c++/6/complex ****   template<typename _Tp>
 852:/usr/include/c++/6/complex ****     inline complex<_Tp>
 853:/usr/include/c++/6/complex ****     sinh(const complex<_Tp>& __z) { return __complex_sinh(__z.__rep()); }
 854:/usr/include/c++/6/complex **** #else
 855:/usr/include/c++/6/complex ****   template<typename _Tp>
 856:/usr/include/c++/6/complex ****     inline complex<_Tp>
 857:/usr/include/c++/6/complex ****     sinh(const complex<_Tp>& __z) { return __complex_sinh(__z); }
 858:/usr/include/c++/6/complex **** #endif
 859:/usr/include/c++/6/complex **** 
 860:/usr/include/c++/6/complex ****   // 26.2.8/13 sqrt(__z): Returns the complex square root of __z.
 861:/usr/include/c++/6/complex ****   //                     The branch cut is on the negative axis.
 862:/usr/include/c++/6/complex ****   template<typename _Tp>
 863:/usr/include/c++/6/complex ****     complex<_Tp>
 864:/usr/include/c++/6/complex ****     __complex_sqrt(const complex<_Tp>& __z)
 865:/usr/include/c++/6/complex ****     {
 866:/usr/include/c++/6/complex ****       _Tp __x = __z.real();
 867:/usr/include/c++/6/complex ****       _Tp __y = __z.imag();
 868:/usr/include/c++/6/complex **** 
 869:/usr/include/c++/6/complex ****       if (__x == _Tp())
 870:/usr/include/c++/6/complex ****         {
 871:/usr/include/c++/6/complex ****           _Tp __t = sqrt(abs(__y) / 2);
 872:/usr/include/c++/6/complex ****           return complex<_Tp>(__t, __y < _Tp() ? -__t : __t);
 873:/usr/include/c++/6/complex ****         }
 874:/usr/include/c++/6/complex ****       else
 875:/usr/include/c++/6/complex ****         {
 876:/usr/include/c++/6/complex ****           _Tp __t = sqrt(2 * (std::abs(__z) + abs(__x)));
 877:/usr/include/c++/6/complex ****           _Tp __u = __t / 2;
 878:/usr/include/c++/6/complex ****           return __x > _Tp()
GAS LISTING /tmp/ccsIN87E.s 			page 67


 879:/usr/include/c++/6/complex ****             ? complex<_Tp>(__u, __y / __t)
 880:/usr/include/c++/6/complex ****             : complex<_Tp>(abs(__y) / __t, __y < _Tp() ? -__u : __u);
 881:/usr/include/c++/6/complex ****         }
 882:/usr/include/c++/6/complex ****     }
 883:/usr/include/c++/6/complex **** 
 884:/usr/include/c++/6/complex **** #if _GLIBCXX_USE_C99_COMPLEX
 885:/usr/include/c++/6/complex ****   inline __complex__ float
 886:/usr/include/c++/6/complex ****   __complex_sqrt(__complex__ float __z) { return __builtin_csqrtf(__z); }
 887:/usr/include/c++/6/complex **** 
 888:/usr/include/c++/6/complex ****   inline __complex__ double
 889:/usr/include/c++/6/complex ****   __complex_sqrt(__complex__ double __z) { return __builtin_csqrt(__z); }
 890:/usr/include/c++/6/complex **** 
 891:/usr/include/c++/6/complex ****   inline __complex__ long double
 892:/usr/include/c++/6/complex ****   __complex_sqrt(const __complex__ long double& __z)
 893:/usr/include/c++/6/complex ****   { return __builtin_csqrtl(__z); }
 894:/usr/include/c++/6/complex **** 
 895:/usr/include/c++/6/complex ****   template<typename _Tp>
 896:/usr/include/c++/6/complex ****     inline complex<_Tp>
 897:/usr/include/c++/6/complex ****     sqrt(const complex<_Tp>& __z) { return __complex_sqrt(__z.__rep()); }
 898:/usr/include/c++/6/complex **** #else
 899:/usr/include/c++/6/complex ****   template<typename _Tp>
 900:/usr/include/c++/6/complex ****     inline complex<_Tp>
 901:/usr/include/c++/6/complex ****     sqrt(const complex<_Tp>& __z) { return __complex_sqrt(__z); }
 902:/usr/include/c++/6/complex **** #endif
 903:/usr/include/c++/6/complex **** 
 904:/usr/include/c++/6/complex ****   // 26.2.8/14 tan(__z):  Return the complex tangent of __z.
 905:/usr/include/c++/6/complex ****   
 906:/usr/include/c++/6/complex ****   template<typename _Tp>
 907:/usr/include/c++/6/complex ****     inline complex<_Tp>
 908:/usr/include/c++/6/complex ****     __complex_tan(const complex<_Tp>& __z)
 909:/usr/include/c++/6/complex ****     { return std::sin(__z) / std::cos(__z); }
 910:/usr/include/c++/6/complex **** 
 911:/usr/include/c++/6/complex **** #if _GLIBCXX_USE_C99_COMPLEX
 912:/usr/include/c++/6/complex ****   inline __complex__ float
 913:/usr/include/c++/6/complex ****   __complex_tan(__complex__ float __z) { return __builtin_ctanf(__z); }
 914:/usr/include/c++/6/complex **** 
 915:/usr/include/c++/6/complex ****   inline __complex__ double
 916:/usr/include/c++/6/complex ****   __complex_tan(__complex__ double __z) { return __builtin_ctan(__z); }
 917:/usr/include/c++/6/complex **** 
 918:/usr/include/c++/6/complex ****   inline __complex__ long double
 919:/usr/include/c++/6/complex ****   __complex_tan(const __complex__ long double& __z)
 920:/usr/include/c++/6/complex ****   { return __builtin_ctanl(__z); }
 921:/usr/include/c++/6/complex **** 
 922:/usr/include/c++/6/complex ****   template<typename _Tp>
 923:/usr/include/c++/6/complex ****     inline complex<_Tp>
 924:/usr/include/c++/6/complex ****     tan(const complex<_Tp>& __z) { return __complex_tan(__z.__rep()); }
 925:/usr/include/c++/6/complex **** #else
 926:/usr/include/c++/6/complex ****   template<typename _Tp>
 927:/usr/include/c++/6/complex ****     inline complex<_Tp>
 928:/usr/include/c++/6/complex ****     tan(const complex<_Tp>& __z) { return __complex_tan(__z); }
 929:/usr/include/c++/6/complex **** #endif
 930:/usr/include/c++/6/complex **** 
 931:/usr/include/c++/6/complex **** 
 932:/usr/include/c++/6/complex ****   // 26.2.8/15 tanh(__z):  Returns the hyperbolic tangent of __z.
 933:/usr/include/c++/6/complex ****   
 934:/usr/include/c++/6/complex ****   template<typename _Tp>
 935:/usr/include/c++/6/complex ****     inline complex<_Tp>
GAS LISTING /tmp/ccsIN87E.s 			page 68


 936:/usr/include/c++/6/complex ****     __complex_tanh(const complex<_Tp>& __z)
 937:/usr/include/c++/6/complex ****     { return std::sinh(__z) / std::cosh(__z); }
 938:/usr/include/c++/6/complex **** 
 939:/usr/include/c++/6/complex **** #if _GLIBCXX_USE_C99_COMPLEX
 940:/usr/include/c++/6/complex ****   inline __complex__ float
 941:/usr/include/c++/6/complex ****   __complex_tanh(__complex__ float __z) { return __builtin_ctanhf(__z); }
 942:/usr/include/c++/6/complex **** 
 943:/usr/include/c++/6/complex ****   inline __complex__ double
 944:/usr/include/c++/6/complex ****   __complex_tanh(__complex__ double __z) { return __builtin_ctanh(__z); }
 945:/usr/include/c++/6/complex **** 
 946:/usr/include/c++/6/complex ****   inline __complex__ long double
 947:/usr/include/c++/6/complex ****   __complex_tanh(const __complex__ long double& __z)
 948:/usr/include/c++/6/complex ****   { return __builtin_ctanhl(__z); }
 949:/usr/include/c++/6/complex **** 
 950:/usr/include/c++/6/complex ****   template<typename _Tp>
 951:/usr/include/c++/6/complex ****     inline complex<_Tp>
 952:/usr/include/c++/6/complex ****     tanh(const complex<_Tp>& __z) { return __complex_tanh(__z.__rep()); }
 953:/usr/include/c++/6/complex **** #else
 954:/usr/include/c++/6/complex ****   template<typename _Tp>
 955:/usr/include/c++/6/complex ****     inline complex<_Tp>
 956:/usr/include/c++/6/complex ****     tanh(const complex<_Tp>& __z) { return __complex_tanh(__z); }
 957:/usr/include/c++/6/complex **** #endif
 958:/usr/include/c++/6/complex **** 
 959:/usr/include/c++/6/complex **** 
 960:/usr/include/c++/6/complex ****   // 26.2.8/9  pow(__x, __y): Returns the complex power base of __x
 961:/usr/include/c++/6/complex ****   //                          raised to the __y-th power.  The branch
 962:/usr/include/c++/6/complex ****   //                          cut is on the negative axis.
 963:/usr/include/c++/6/complex ****   template<typename _Tp>
 964:/usr/include/c++/6/complex ****     complex<_Tp>
 965:/usr/include/c++/6/complex ****     __complex_pow_unsigned(complex<_Tp> __x, unsigned __n)
 966:/usr/include/c++/6/complex ****     {
 967:/usr/include/c++/6/complex ****       complex<_Tp> __y = __n % 2 ? __x : complex<_Tp>(1);
 968:/usr/include/c++/6/complex **** 
 969:/usr/include/c++/6/complex ****       while (__n >>= 1)
 970:/usr/include/c++/6/complex ****         {
 971:/usr/include/c++/6/complex ****           __x *= __x;
 972:/usr/include/c++/6/complex ****           if (__n % 2)
 973:/usr/include/c++/6/complex ****             __y *= __x;
 974:/usr/include/c++/6/complex ****         }
 975:/usr/include/c++/6/complex **** 
 976:/usr/include/c++/6/complex ****       return __y;
 977:/usr/include/c++/6/complex ****     }
 978:/usr/include/c++/6/complex **** 
 979:/usr/include/c++/6/complex ****   // In C++11 mode we used to implement the resolution of
 980:/usr/include/c++/6/complex ****   // DR 844. complex pow return type is ambiguous.
 981:/usr/include/c++/6/complex ****   // thus the following overload was disabled in that mode.  However, doing
 982:/usr/include/c++/6/complex ****   // that causes all sorts of issues, see, for example:
 983:/usr/include/c++/6/complex ****   //   http://gcc.gnu.org/ml/libstdc++/2013-01/msg00058.html
 984:/usr/include/c++/6/complex ****   // and also PR57974.
 985:/usr/include/c++/6/complex ****   template<typename _Tp>
 986:/usr/include/c++/6/complex ****     inline complex<_Tp>
 987:/usr/include/c++/6/complex ****     pow(const complex<_Tp>& __z, int __n)
 988:/usr/include/c++/6/complex ****     {
 989:/usr/include/c++/6/complex ****       return __n < 0
 990:/usr/include/c++/6/complex **** 	? complex<_Tp>(1) / std::__complex_pow_unsigned(__z, -(unsigned)__n)
 991:/usr/include/c++/6/complex ****         : std::__complex_pow_unsigned(__z, __n);
 992:/usr/include/c++/6/complex ****     }
GAS LISTING /tmp/ccsIN87E.s 			page 69


 993:/usr/include/c++/6/complex **** 
 994:/usr/include/c++/6/complex ****   template<typename _Tp>
 995:/usr/include/c++/6/complex ****     complex<_Tp>
 996:/usr/include/c++/6/complex ****     pow(const complex<_Tp>& __x, const _Tp& __y)
 997:/usr/include/c++/6/complex ****     {
 998:/usr/include/c++/6/complex **** #if ! _GLIBCXX_USE_C99_COMPLEX
 999:/usr/include/c++/6/complex ****       if (__x == _Tp())
1000:/usr/include/c++/6/complex **** 	return _Tp();
1001:/usr/include/c++/6/complex **** #endif
1002:/usr/include/c++/6/complex ****       if (__x.imag() == _Tp() && __x.real() > _Tp())
1003:/usr/include/c++/6/complex ****         return pow(__x.real(), __y);
1004:/usr/include/c++/6/complex **** 
1005:/usr/include/c++/6/complex ****       complex<_Tp> __t = std::log(__x);
1006:/usr/include/c++/6/complex ****       return std::polar<_Tp>(exp(__y * __t.real()), __y * __t.imag());
1007:/usr/include/c++/6/complex ****     }
1008:/usr/include/c++/6/complex **** 
1009:/usr/include/c++/6/complex ****   template<typename _Tp>
1010:/usr/include/c++/6/complex ****     inline complex<_Tp>
1011:/usr/include/c++/6/complex ****     __complex_pow(const complex<_Tp>& __x, const complex<_Tp>& __y)
1012:/usr/include/c++/6/complex ****     { return __x == _Tp() ? _Tp() : std::exp(__y * std::log(__x)); }
1013:/usr/include/c++/6/complex **** 
1014:/usr/include/c++/6/complex **** #if _GLIBCXX_USE_C99_COMPLEX
1015:/usr/include/c++/6/complex ****   inline __complex__ float
1016:/usr/include/c++/6/complex ****   __complex_pow(__complex__ float __x, __complex__ float __y)
1017:/usr/include/c++/6/complex ****   { return __builtin_cpowf(__x, __y); }
1018:/usr/include/c++/6/complex **** 
1019:/usr/include/c++/6/complex ****   inline __complex__ double
1020:/usr/include/c++/6/complex ****   __complex_pow(__complex__ double __x, __complex__ double __y)
1021:/usr/include/c++/6/complex ****   { return __builtin_cpow(__x, __y); }
1022:/usr/include/c++/6/complex **** 
1023:/usr/include/c++/6/complex ****   inline __complex__ long double
1024:/usr/include/c++/6/complex ****   __complex_pow(const __complex__ long double& __x,
1025:/usr/include/c++/6/complex **** 		const __complex__ long double& __y)
1026:/usr/include/c++/6/complex ****   { return __builtin_cpowl(__x, __y); }
1027:/usr/include/c++/6/complex **** 
1028:/usr/include/c++/6/complex ****   template<typename _Tp>
1029:/usr/include/c++/6/complex ****     inline complex<_Tp>
1030:/usr/include/c++/6/complex ****     pow(const complex<_Tp>& __x, const complex<_Tp>& __y)
1031:/usr/include/c++/6/complex ****     { return __complex_pow(__x.__rep(), __y.__rep()); }
1032:/usr/include/c++/6/complex **** #else
1033:/usr/include/c++/6/complex ****   template<typename _Tp>
1034:/usr/include/c++/6/complex ****     inline complex<_Tp>
1035:/usr/include/c++/6/complex ****     pow(const complex<_Tp>& __x, const complex<_Tp>& __y)
1036:/usr/include/c++/6/complex ****     { return __complex_pow(__x, __y); }
1037:/usr/include/c++/6/complex **** #endif
1038:/usr/include/c++/6/complex **** 
1039:/usr/include/c++/6/complex ****   template<typename _Tp>
1040:/usr/include/c++/6/complex ****     inline complex<_Tp>
1041:/usr/include/c++/6/complex ****     pow(const _Tp& __x, const complex<_Tp>& __y)
1042:/usr/include/c++/6/complex ****     {
1043:/usr/include/c++/6/complex ****       return __x > _Tp() ? std::polar<_Tp>(pow(__x, __y.real()),
1044:/usr/include/c++/6/complex **** 					   __y.imag() * log(__x))
1045:/usr/include/c++/6/complex **** 	                 : std::pow(complex<_Tp>(__x), __y);
1046:/usr/include/c++/6/complex ****     }
1047:/usr/include/c++/6/complex **** 
1048:/usr/include/c++/6/complex ****   /// 26.2.3  complex specializations
1049:/usr/include/c++/6/complex ****   /// complex<float> specialization
GAS LISTING /tmp/ccsIN87E.s 			page 70


1050:/usr/include/c++/6/complex ****   template<>
1051:/usr/include/c++/6/complex ****     struct complex<float>
1052:/usr/include/c++/6/complex ****     {
1053:/usr/include/c++/6/complex ****       typedef float value_type;
1054:/usr/include/c++/6/complex ****       typedef __complex__ float _ComplexT;
1055:/usr/include/c++/6/complex **** 
1056:/usr/include/c++/6/complex ****       _GLIBCXX_CONSTEXPR complex(_ComplexT __z) : _M_value(__z) { }
1057:/usr/include/c++/6/complex **** 
1058:/usr/include/c++/6/complex ****       _GLIBCXX_CONSTEXPR complex(float __r = 0.0f, float __i = 0.0f)
 1144              		.loc 9 1058 0
 1145              		.cfi_startproc
 1146 0000 55       		pushq	%rbp
 1147              		.cfi_def_cfa_offset 16
 1148              		.cfi_offset 6, -16
 1149 0001 4889E5   		movq	%rsp, %rbp
 1150              		.cfi_def_cfa_register 6
 1151 0004 48897DF8 		movq	%rdi, -8(%rbp)
 1152 0008 F30F1145 		movss	%xmm0, -12(%rbp)
 1152      F4
 1153 000d F30F114D 		movss	%xmm1, -16(%rbp)
 1153      F0
 1154              	.LBB19:
1059:/usr/include/c++/6/complex **** #if __cplusplus >= 201103L
1060:/usr/include/c++/6/complex ****       : _M_value{ __r, __i } { }
 1155              		.loc 9 1060 0
 1156 0012 F30F104D 		movss	-12(%rbp), %xmm1
 1156      F4
 1157 0017 F30F1045 		movss	-16(%rbp), %xmm0
 1157      F0
 1158 001c 488B45F8 		movq	-8(%rbp), %rax
 1159 0020 F30F1108 		movss	%xmm1, (%rax)
 1160 0024 F30F1140 		movss	%xmm0, 4(%rax)
 1160      04
 1161              	.LBE19:
 1162 0029 90       		nop
 1163 002a 5D       		popq	%rbp
 1164              		.cfi_def_cfa 7, 8
 1165 002b C3       		ret
 1166              		.cfi_endproc
 1167              	.LFE3816:
 1169              		.weak	_ZNSt7complexIfEC1Eff
 1170              		.set	_ZNSt7complexIfEC1Eff,_ZNSt7complexIfEC2Eff
 1171              		.section	.text._ZNKSt7complexIfE4realB5cxx11Ev,"axG",@progbits,_ZNKSt7complexIfE4realB5cxx11Ev,com
 1172              		.align 2
 1173              		.weak	_ZNKSt7complexIfE4realB5cxx11Ev
 1175              	_ZNKSt7complexIfE4realB5cxx11Ev:
 1176              	.LFB3818:
1061:/usr/include/c++/6/complex **** #else
1062:/usr/include/c++/6/complex ****       {
1063:/usr/include/c++/6/complex **** 	__real__ _M_value = __r;
1064:/usr/include/c++/6/complex **** 	__imag__ _M_value = __i;
1065:/usr/include/c++/6/complex ****       }
1066:/usr/include/c++/6/complex **** #endif
1067:/usr/include/c++/6/complex **** 
1068:/usr/include/c++/6/complex ****       explicit _GLIBCXX_CONSTEXPR complex(const complex<double>&);
1069:/usr/include/c++/6/complex ****       explicit _GLIBCXX_CONSTEXPR complex(const complex<long double>&);	
1070:/usr/include/c++/6/complex **** 
GAS LISTING /tmp/ccsIN87E.s 			page 71


1071:/usr/include/c++/6/complex **** #if __cplusplus >= 201103L
1072:/usr/include/c++/6/complex ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
1073:/usr/include/c++/6/complex ****       // DR 387. std::complex over-encapsulated.
1074:/usr/include/c++/6/complex ****       __attribute ((__abi_tag__ ("cxx11")))
1075:/usr/include/c++/6/complex ****       constexpr float 
1076:/usr/include/c++/6/complex ****       real() const { return __real__ _M_value; }
 1177              		.loc 9 1076 0
 1178              		.cfi_startproc
 1179 0000 55       		pushq	%rbp
 1180              		.cfi_def_cfa_offset 16
 1181              		.cfi_offset 6, -16
 1182 0001 4889E5   		movq	%rsp, %rbp
 1183              		.cfi_def_cfa_register 6
 1184 0004 48897DF8 		movq	%rdi, -8(%rbp)
 1185              		.loc 9 1076 0
 1186 0008 488B45F8 		movq	-8(%rbp), %rax
 1187 000c F30F1000 		movss	(%rax), %xmm0
 1188 0010 5D       		popq	%rbp
 1189              		.cfi_def_cfa 7, 8
 1190 0011 C3       		ret
 1191              		.cfi_endproc
 1192              	.LFE3818:
 1194              		.section	.text._ZNKSt7complexIfE4imagB5cxx11Ev,"axG",@progbits,_ZNKSt7complexIfE4imagB5cxx11Ev,com
 1195              		.align 2
 1196              		.weak	_ZNKSt7complexIfE4imagB5cxx11Ev
 1198              	_ZNKSt7complexIfE4imagB5cxx11Ev:
 1199              	.LFB3819:
1077:/usr/include/c++/6/complex **** 
1078:/usr/include/c++/6/complex ****       __attribute ((__abi_tag__ ("cxx11")))
1079:/usr/include/c++/6/complex ****       constexpr float 
1080:/usr/include/c++/6/complex ****       imag() const { return __imag__ _M_value; }
 1200              		.loc 9 1080 0
 1201              		.cfi_startproc
 1202 0000 55       		pushq	%rbp
 1203              		.cfi_def_cfa_offset 16
 1204              		.cfi_offset 6, -16
 1205 0001 4889E5   		movq	%rsp, %rbp
 1206              		.cfi_def_cfa_register 6
 1207 0004 48897DF8 		movq	%rdi, -8(%rbp)
 1208              		.loc 9 1080 0
 1209 0008 488B45F8 		movq	-8(%rbp), %rax
 1210 000c F30F1040 		movss	4(%rax), %xmm0
 1210      04
 1211 0011 5D       		popq	%rbp
 1212              		.cfi_def_cfa 7, 8
 1213 0012 C3       		ret
 1214              		.cfi_endproc
 1215              	.LFE3819:
 1217              		.section	.text._ZNK3pmt10comparatorclERKN5boost13intrusive_ptrINS_8pmt_baseEEES6_,"axG",@progbits,
 1218              		.align 2
 1219              		.weak	_ZNK3pmt10comparatorclERKN5boost13intrusive_ptrINS_8pmt_baseEEES6_
 1221              	_ZNK3pmt10comparatorclERKN5boost13intrusive_ptrINS_8pmt_baseEEES6_:
 1222              	.LFB4089:
 1223              		.file 10 "/home/mpiscopo/gnuradio/include/pmt/pmt.h"
   1:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** /* -*- c++ -*- */
   2:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** /*
   3:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * Copyright 2006,2009,2010,2013 Free Software Foundation, Inc.
GAS LISTING /tmp/ccsIN87E.s 			page 72


   4:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  *
   5:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * This file is part of GNU Radio
   6:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  *
   7:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * GNU Radio is free software; you can redistribute it and/or modify
   8:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * it under the terms of the GNU General Public License as published by
   9:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * the Free Software Foundation; either version 3, or (at your option)
  10:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * any later version.
  11:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  *
  12:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * GNU Radio is distributed in the hope that it will be useful,
  13:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  14:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  15:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * GNU General Public License for more details.
  16:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  *
  17:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * You should have received a copy of the GNU General Public License
  18:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * along with GNU Radio; see the file COPYING.  If not, write to
  19:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * the Free Software Foundation, Inc., 51 Franklin Street,
  20:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * Boston, MA 02110-1301, USA.
  21:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  */
  22:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
  23:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** #ifndef INCLUDED_PMT_H
  24:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** #define INCLUDED_PMT_H
  25:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
  26:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** #include <pmt/api.h>
  27:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** #include <boost/intrusive_ptr.hpp>
  28:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** #include <boost/shared_ptr.hpp>
  29:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** #include <boost/any.hpp>
  30:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** #include <complex>
  31:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** #include <string>
  32:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** #include <stdint.h>
  33:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** #include <iosfwd>
  34:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** #include <stdexcept>
  35:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** #include <vector>
  36:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
  37:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** namespace gr {
  38:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****   namespace messages {
  39:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****     class msg_accepter;
  40:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****   }
  41:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** }
  42:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
  43:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** /*!
  44:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * This file defines a polymorphic type and the operations on it.
  45:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  *
  46:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * It draws heavily on the idea of scheme and lisp data types.
  47:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * The interface parallels that in Guile 1.8, with the notable
  48:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * exception that these objects are transparently reference counted.
  49:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  */
  50:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
  51:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** namespace pmt {
  52:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
  53:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** /*!
  54:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * \brief base class of all pmt types
  55:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  */
  56:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** class pmt_base;
  57:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
  58:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** /*!
  59:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * \brief typedef for shared pointer (transparent reference counting).
  60:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * See http://www.boost.org/libs/smart_ptr/smart_ptr.htm
GAS LISTING /tmp/ccsIN87E.s 			page 73


  61:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  */
  62:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** typedef boost::intrusive_ptr<pmt_base> pmt_t;
  63:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
  64:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** extern PMT_API void intrusive_ptr_add_ref(pmt_base*);
  65:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** extern PMT_API void intrusive_ptr_release(pmt_base*);
  66:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
  67:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** class PMT_API exception : public std::logic_error
  68:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** {
  69:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** public:
  70:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****   exception(const std::string &msg, pmt_t obj);
  71:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** };
  72:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
  73:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** class PMT_API wrong_type : public exception
  74:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** {
  75:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** public:
  76:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****   wrong_type(const std::string &msg, pmt_t obj);
  77:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** };
  78:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
  79:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** class PMT_API out_of_range : public exception
  80:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** {
  81:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** public:
  82:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****   out_of_range(const std::string &msg, pmt_t obj);
  83:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** };
  84:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
  85:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** class PMT_API notimplemented : public exception
  86:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** {
  87:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** public:
  88:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****   notimplemented(const std::string &msg, pmt_t obj);
  89:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** };
  90:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
  91:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
  92:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** /*
  93:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * ------------------------------------------------------------------------
  94:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * Constants
  95:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * ------------------------------------------------------------------------
  96:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  */
  97:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
  98:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API pmt_t get_PMT_NIL();
  99:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API pmt_t get_PMT_T();
 100:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API pmt_t get_PMT_F();
 101:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API pmt_t get_PMT_EOF();
 102:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 103:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** #define PMT_NIL get_PMT_NIL()
 104:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** #define PMT_T get_PMT_T()
 105:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** #define PMT_F get_PMT_F()
 106:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** #define PMT_EOF get_PMT_EOF()
 107:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 108:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 109:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 110:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** /*
 111:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * ------------------------------------------------------------------------
 112:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * Booleans.  Two constants, #t and #f.
 113:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  *
 114:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * In predicates, anything that is not #f is considered true.
 115:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * I.e., there is a single false value, #f.
 116:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * ------------------------------------------------------------------------
 117:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  */
GAS LISTING /tmp/ccsIN87E.s 			page 74


 118:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 119:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** //! Return true if obj is \#t or \#f, else return false.
 120:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API bool is_bool(pmt_t obj);
 121:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 122:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** //! Return false if obj is \#f, else return true.
 123:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API bool is_true(pmt_t obj);
 124:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 125:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** //! Return true if obj is \#f, else return true.
 126:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API bool is_false(pmt_t obj);
 127:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 128:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** //! Return \#f is val is false, else return \#t.
 129:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API pmt_t from_bool(bool val);
 130:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 131:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** //! Return true if val is pmt::True, return false when val is pmt::PMT_F,
 132:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** // else raise wrong_type exception.
 133:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API bool to_bool(pmt_t val);
 134:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 135:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** /*
 136:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * ------------------------------------------------------------------------
 137:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  *			       Symbols
 138:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * ------------------------------------------------------------------------
 139:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  */
 140:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 141:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** //! Return true if obj is a symbol, else false.
 142:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API bool is_symbol(const pmt_t& obj);
 143:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 144:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** //! Return the symbol whose name is \p s.
 145:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API pmt_t string_to_symbol(const std::string &s);
 146:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 147:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** //! Alias for pmt_string_to_symbol
 148:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API pmt_t intern(const std::string &s);
 149:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 150:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 151:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** /*!
 152:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * If \p is a symbol, return the name of the symbol as a string.
 153:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * Otherwise, raise the wrong_type exception.
 154:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  */
 155:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API const std::string symbol_to_string(const pmt_t& sym);
 156:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 157:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** /*
 158:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * ------------------------------------------------------------------------
 159:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  *           Numbers: we support integer, real and complex
 160:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * ------------------------------------------------------------------------
 161:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  */
 162:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 163:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** //! Return true if obj is any kind of number, else false.
 164:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API bool is_number(pmt_t obj);
 165:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 166:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** /*
 167:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * ------------------------------------------------------------------------
 168:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  *			       Integers
 169:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * ------------------------------------------------------------------------
 170:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  */
 171:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 172:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** //! Return true if \p x is an integer number, else false
 173:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API bool is_integer(pmt_t x);
 174:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
GAS LISTING /tmp/ccsIN87E.s 			page 75


 175:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** //! Return the pmt value that represents the integer \p x.
 176:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API pmt_t from_long(long x);
 177:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 178:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** /*!
 179:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * \brief Convert pmt to long if possible.
 180:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  *
 181:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * When \p x represents an exact integer that fits in a long,
 182:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * return that integer.  Else raise an exception, either wrong_type
 183:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * when x is not an exact integer, or out_of_range when it doesn't fit.
 184:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  */
 185:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API long to_long(pmt_t x);
 186:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 187:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** /*
 188:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * ------------------------------------------------------------------------
 189:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  *			       uint64_t
 190:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * ------------------------------------------------------------------------
 191:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  */
 192:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 193:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** //! Return true if \p x is an uint64 number, else false
 194:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API bool is_uint64(pmt_t x);
 195:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 196:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** //! Return the pmt value that represents the uint64 \p x.
 197:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API pmt_t from_uint64(uint64_t x);
 198:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 199:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** /*!
 200:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * \brief Convert pmt to uint64 if possible.
 201:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  *
 202:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * When \p x represents an exact integer that fits in a uint64,
 203:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * return that uint64.  Else raise an exception, either wrong_type
 204:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * when x is not an exact uint64, or out_of_range when it doesn't fit.
 205:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  */
 206:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API uint64_t to_uint64(pmt_t x);
 207:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 208:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** /*
 209:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * ------------------------------------------------------------------------
 210:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  *				Reals
 211:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * ------------------------------------------------------------------------
 212:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  */
 213:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 214:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** /*
 215:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * \brief Return true if \p obj is a real number, else false.
 216:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  */
 217:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API bool is_real(pmt_t obj);
 218:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 219:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** //! Return the pmt value that represents double \p x.
 220:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API pmt_t from_double(double x);
 221:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API pmt_t from_float(float x);
 222:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 223:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** /*!
 224:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * \brief Convert pmt to double if possible.
 225:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  *
 226:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * Returns the number closest to \p val that is representable
 227:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * as a double.  The argument \p val must be a real or integer, otherwise
 228:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * a wrong_type exception is raised.
 229:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  */
 230:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API double to_double(pmt_t x);
 231:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
GAS LISTING /tmp/ccsIN87E.s 			page 76


 232:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** /*!
 233:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * \brief Convert pmt to float if possible.
 234:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  *
 235:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * This basically is to_double() with a type-cast; the PMT stores
 236:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * the value as a double in any case. Use this when strict typing
 237:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * is required.
 238:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  */
 239:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API float to_float(pmt_t x);
 240:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 241:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** /*
 242:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * ------------------------------------------------------------------------
 243:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  *			       Complex
 244:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * ------------------------------------------------------------------------
 245:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  */
 246:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 247:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** /*!
 248:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * \brief return true if \p obj is a complex number, false otherwise.
 249:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  */
 250:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API bool is_complex(pmt_t obj);
 251:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 252:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** //! Return a complex number constructed of the given real and imaginary parts.
 253:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API pmt_t make_rectangular(double re, double im);
 254:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 255:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** //! Return a complex number constructed of the given real and imaginary parts.
 256:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API pmt_t from_complex(double re, double im);
 257:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 258:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** //! Return a complex number constructed of the given a complex number.
 259:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API pmt_t from_complex(const std::complex<double> &z);
 260:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 261:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** //! Return a complex number constructed of the given real and imaginary parts.
 262:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API pmt_t pmt_from_complex(double re, double im);
 263:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 264:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** //! Return a complex number constructed of the given a complex number.
 265:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API pmt_t pmt_from_complex(const std::complex<double> &z);
 266:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 267:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** /*!
 268:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * If \p z is complex, real or integer, return the closest complex<double>.
 269:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * Otherwise, raise the wrong_type exception.
 270:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  */
 271:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API std::complex<double> to_complex(pmt_t z);
 272:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 273:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** /*
 274:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * ------------------------------------------------------------------------
 275:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  *				Pairs
 276:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * ------------------------------------------------------------------------
 277:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  */
 278:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 279:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** //! Return true if \p x is the empty list, otherwise return false.
 280:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API bool is_null(const pmt_t& x);
 281:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 282:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** //! Return true if \p obj is a pair, else false (warning: also returns true for a dict)
 283:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API bool is_pair(const pmt_t& obj);
 284:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 285:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** //! Return a newly allocated pair whose car is \p x and whose cdr is \p y.
 286:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API pmt_t cons(const pmt_t& x, const pmt_t& y);
 287:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 288:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** //! If \p pair is a pair, return the car of the \p pair, otherwise raise wrong_type.
GAS LISTING /tmp/ccsIN87E.s 			page 77


 289:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API pmt_t car(const pmt_t& pair);
 290:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 291:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** //! If \p pair is a pair, return the cdr of the \p pair, otherwise raise wrong_type.
 292:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API pmt_t cdr(const pmt_t& pair);
 293:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 294:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** //! Stores \p value in the car field of \p pair.
 295:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API void set_car(pmt_t pair, pmt_t value);
 296:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 297:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** //! Stores \p value in the cdr field of \p pair.
 298:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API void set_cdr(pmt_t pair, pmt_t value);
 299:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 300:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API pmt_t caar(pmt_t pair);
 301:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API pmt_t cadr(pmt_t pair);
 302:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API pmt_t cdar(pmt_t pair);
 303:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API pmt_t cddr(pmt_t pair);
 304:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API pmt_t caddr(pmt_t pair);
 305:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API pmt_t cadddr(pmt_t pair);
 306:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 307:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** /*
 308:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * ------------------------------------------------------------------------
 309:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  *			          Tuples
 310:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  *
 311:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * Store a fixed number of objects.  Tuples are not modifiable, and thus
 312:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * are excellent for use as messages.  Indexing is zero based.
 313:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * Access time to an element is O(1).
 314:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * ------------------------------------------------------------------------
 315:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  */
 316:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 317:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** //! Return true if \p x is a tuple, othewise false.
 318:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API bool is_tuple(pmt_t x);
 319:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 320:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API pmt_t make_tuple();
 321:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API pmt_t make_tuple(const pmt_t &e0);
 322:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API pmt_t make_tuple(const pmt_t &e0, const pmt_t &e1);
 323:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API pmt_t make_tuple(const pmt_t &e0, const pmt_t &e1, const pmt_t &e2);
 324:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API pmt_t make_tuple(const pmt_t &e0, const pmt_t &e1, const pmt_t &e2, const pmt_t &e3);
 325:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API pmt_t make_tuple(const pmt_t &e0, const pmt_t &e1, const pmt_t &e2, const pmt_t &e3, const 
 326:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API pmt_t make_tuple(const pmt_t &e0, const pmt_t &e1, const pmt_t &e2, const pmt_t &e3, const 
 327:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API pmt_t make_tuple(const pmt_t &e0, const pmt_t &e1, const pmt_t &e2, const pmt_t &e3, const 
 328:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API pmt_t make_tuple(const pmt_t &e0, const pmt_t &e1, const pmt_t &e2, const pmt_t &e3, const 
 329:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API pmt_t make_tuple(const pmt_t &e0, const pmt_t &e1, const pmt_t &e2, const pmt_t &e3, const 
 330:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API pmt_t make_tuple(const pmt_t &e0, const pmt_t &e1, const pmt_t &e2, const pmt_t &e3, const 
 331:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 332:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** /*!
 333:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * If \p x is a vector or proper list, return a tuple containing the elements of x
 334:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  */
 335:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API pmt_t to_tuple(const pmt_t &x);
 336:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 337:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** /*!
 338:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * Return the contents of position \p k of \p tuple.
 339:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * \p k must be a valid index of \p tuple.
 340:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  */
 341:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API pmt_t tuple_ref(const pmt_t &tuple, size_t k);
 342:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 343:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** /*
 344:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * ------------------------------------------------------------------------
 345:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  *			       Vectors
GAS LISTING /tmp/ccsIN87E.s 			page 78


 346:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  *
 347:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * These vectors can hold any kind of objects.  Indexing is zero based.
 348:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * ------------------------------------------------------------------------
 349:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  */
 350:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 351:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** //! Return true if \p x is a vector, othewise false.
 352:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API bool is_vector(pmt_t x);
 353:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 354:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** //! Make a vector of length \p k, with initial values set to \p fill
 355:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API pmt_t make_vector(size_t k, pmt_t fill);
 356:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 357:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** /*!
 358:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * Return the contents of position \p k of \p vector.
 359:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * \p k must be a valid index of \p vector.
 360:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  */
 361:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API pmt_t vector_ref(pmt_t vector, size_t k);
 362:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 363:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** //! Store \p obj in position \p k.
 364:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API void vector_set(pmt_t vector, size_t k, pmt_t obj);
 365:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 366:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** //! Store \p fill in every position of \p vector
 367:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API void vector_fill(pmt_t vector, pmt_t fill);
 368:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 369:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** /*
 370:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * ------------------------------------------------------------------------
 371:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  *		      Binary Large Objects (BLOBs)
 372:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  *
 373:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * Handy for passing around uninterpreted chunks of memory.
 374:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * ------------------------------------------------------------------------
 375:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  */
 376:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 377:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** //! Return true if \p x is a blob, othewise false.
 378:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API bool is_blob(pmt_t x);
 379:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 380:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** /*!
 381:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * \brief Make a blob given a pointer and length in bytes
 382:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  *
 383:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * \param buf is the pointer to data to use to create blob
 384:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * \param len is the size of the data in bytes.
 385:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  *
 386:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * The data is copied into the blob.
 387:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  */
 388:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API pmt_t make_blob(const void *buf, size_t len);
 389:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 390:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** //! Return a pointer to the blob's data
 391:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API const void *blob_data(pmt_t blob);
 392:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 393:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** //! Return the blob's length in bytes
 394:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API size_t blob_length(pmt_t blob);
 395:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 396:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** /*!
 397:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * <pre>
 398:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  *		       Uniform Numeric Vectors
 399:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  *
 400:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * A uniform numeric vector is a vector whose elements are all of single
 401:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * numeric type.  pmt offers uniform numeric vectors for signed and
 402:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * unsigned 8-bit, 16-bit, 32-bit, and 64-bit integers, two sizes of
GAS LISTING /tmp/ccsIN87E.s 			page 79


 403:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * floating point values, and complex floating-point numbers of these
 404:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * two sizes.  Indexing is zero based.
 405:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  *
 406:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * The names of the functions include these tags in their names:
 407:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  *
 408:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  *    u8  unsigned 8-bit integers
 409:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  *    s8  signed 8-bit integers
 410:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  *   u16  unsigned 16-bit integers
 411:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  *   s16  signed 16-bit integers
 412:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  *   u32  unsigned 32-bit integers
 413:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  *   s32  signed 32-bit integers
 414:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  *   u64  unsigned 64-bit integers
 415:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  *   s64  signed 64-bit integers
 416:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  *   f32  the C++ type float
 417:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  *   f64  the C++ type double
 418:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  *   c32  the C++ type complex<float>
 419:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  *   c64  the C++ type complex<double>
 420:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * </pre>
 421:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  */
 422:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 423:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** //! true if \p x is any kind of uniform numeric vector
 424:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API bool is_uniform_vector(pmt_t x);
 425:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 426:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API bool is_u8vector(pmt_t x);
 427:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API bool is_s8vector(pmt_t x);
 428:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API bool is_u16vector(pmt_t x);
 429:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API bool is_s16vector(pmt_t x);
 430:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API bool is_u32vector(pmt_t x);
 431:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API bool is_s32vector(pmt_t x);
 432:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API bool is_u64vector(pmt_t x);
 433:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API bool is_s64vector(pmt_t x);
 434:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API bool is_f32vector(pmt_t x);
 435:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API bool is_f64vector(pmt_t x);
 436:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API bool is_c32vector(pmt_t x);
 437:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API bool is_c64vector(pmt_t x);
 438:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 439:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** //! item size in bytes if \p x is any kind of uniform numeric vector
 440:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API size_t uniform_vector_itemsize(pmt_t x);
 441:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 442:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API pmt_t make_u8vector(size_t k, uint8_t fill);
 443:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API pmt_t make_s8vector(size_t k, int8_t fill);
 444:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API pmt_t make_u16vector(size_t k, uint16_t fill);
 445:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API pmt_t make_s16vector(size_t k, int16_t fill);
 446:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API pmt_t make_u32vector(size_t k, uint32_t fill);
 447:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API pmt_t make_s32vector(size_t k, int32_t fill);
 448:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API pmt_t make_u64vector(size_t k, uint64_t fill);
 449:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API pmt_t make_s64vector(size_t k, int64_t fill);
 450:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API pmt_t make_f32vector(size_t k, float fill);
 451:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API pmt_t make_f64vector(size_t k, double fill);
 452:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API pmt_t make_c32vector(size_t k, std::complex<float> fill);
 453:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API pmt_t make_c64vector(size_t k, std::complex<double> fill);
 454:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 455:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API pmt_t init_u8vector(size_t k, const uint8_t *data);
 456:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API pmt_t init_u8vector(size_t k, const std::vector<uint8_t> &data);
 457:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API pmt_t init_s8vector(size_t k, const int8_t *data);
 458:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API pmt_t init_s8vector(size_t k, const std::vector<int8_t> &data);
 459:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API pmt_t init_u16vector(size_t k, const uint16_t *data);
GAS LISTING /tmp/ccsIN87E.s 			page 80


 460:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API pmt_t init_u16vector(size_t k, const std::vector<uint16_t> &data);
 461:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API pmt_t init_s16vector(size_t k, const int16_t *data);
 462:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API pmt_t init_s16vector(size_t k, const std::vector<int16_t> &data);
 463:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API pmt_t init_u32vector(size_t k, const uint32_t *data);
 464:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API pmt_t init_u32vector(size_t k, const std::vector<uint32_t> &data);
 465:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API pmt_t init_s32vector(size_t k, const int32_t *data);
 466:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API pmt_t init_s32vector(size_t k, const std::vector<int32_t> &data);
 467:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API pmt_t init_u64vector(size_t k, const uint64_t *data);
 468:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API pmt_t init_u64vector(size_t k, const std::vector<uint64_t> &data);
 469:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API pmt_t init_s64vector(size_t k, const int64_t *data);
 470:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API pmt_t init_s64vector(size_t k, const std::vector<int64_t> &data);
 471:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API pmt_t init_f32vector(size_t k, const float *data);
 472:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API pmt_t init_f32vector(size_t k, const std::vector<float> &data);
 473:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API pmt_t init_f64vector(size_t k, const double *data);
 474:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API pmt_t init_f64vector(size_t k, const std::vector<double> &data);
 475:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API pmt_t init_c32vector(size_t k, const std::complex<float> *data);
 476:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API pmt_t init_c32vector(size_t k, const std::vector<std::complex<float> > &data);
 477:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API pmt_t init_c64vector(size_t k, const std::complex<double> *data);
 478:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API pmt_t init_c64vector(size_t k, const std::vector<std::complex<double> > &data);
 479:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 480:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API uint8_t  u8vector_ref(pmt_t v, size_t k);
 481:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API int8_t   s8vector_ref(pmt_t v, size_t k);
 482:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API uint16_t u16vector_ref(pmt_t v, size_t k);
 483:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API int16_t  s16vector_ref(pmt_t v, size_t k);
 484:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API uint32_t u32vector_ref(pmt_t v, size_t k);
 485:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API int32_t  s32vector_ref(pmt_t v, size_t k);
 486:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API uint64_t u64vector_ref(pmt_t v, size_t k);
 487:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API int64_t  s64vector_ref(pmt_t v, size_t k);
 488:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API float    f32vector_ref(pmt_t v, size_t k);
 489:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API double   f64vector_ref(pmt_t v, size_t k);
 490:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API std::complex<float>  c32vector_ref(pmt_t v, size_t k);
 491:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API std::complex<double> c64vector_ref(pmt_t v, size_t k);
 492:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 493:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API void u8vector_set(pmt_t v, size_t k, uint8_t x);  //< v[k] = x
 494:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API void s8vector_set(pmt_t v, size_t k, int8_t x);
 495:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API void u16vector_set(pmt_t v, size_t k, uint16_t x);
 496:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API void s16vector_set(pmt_t v, size_t k, int16_t x);
 497:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API void u32vector_set(pmt_t v, size_t k, uint32_t x);
 498:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API void s32vector_set(pmt_t v, size_t k, int32_t x);
 499:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API void u64vector_set(pmt_t v, size_t k, uint64_t x);
 500:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API void s64vector_set(pmt_t v, size_t k, int64_t x);
 501:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API void f32vector_set(pmt_t v, size_t k, float x);
 502:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API void f64vector_set(pmt_t v, size_t k, double x);
 503:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API void c32vector_set(pmt_t v, size_t k, std::complex<float> x);
 504:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API void c64vector_set(pmt_t v, size_t k, std::complex<double> x);
 505:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 506:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** // Return const pointers to the elements
 507:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 508:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API const void *uniform_vector_elements(pmt_t v, size_t &len);  //< works with any; len is in b
 509:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 510:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API const uint8_t  *u8vector_elements(pmt_t v, size_t &len);  //< len is in elements
 511:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API const int8_t   *s8vector_elements(pmt_t v, size_t &len);  //< len is in elements
 512:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API const uint16_t *u16vector_elements(pmt_t v, size_t &len); //< len is in elements
 513:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API const int16_t  *s16vector_elements(pmt_t v, size_t &len); //< len is in elements
 514:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API const uint32_t *u32vector_elements(pmt_t v, size_t &len); //< len is in elements
 515:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API const int32_t  *s32vector_elements(pmt_t v, size_t &len); //< len is in elements
 516:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API const uint64_t *u64vector_elements(pmt_t v, size_t &len); //< len is in elements
GAS LISTING /tmp/ccsIN87E.s 			page 81


 517:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API const int64_t  *s64vector_elements(pmt_t v, size_t &len); //< len is in elements
 518:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API const float    *f32vector_elements(pmt_t v, size_t &len); //< len is in elements
 519:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API const double   *f64vector_elements(pmt_t v, size_t &len); //< len is in elements
 520:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API const std::complex<float>  *c32vector_elements(pmt_t v, size_t &len); //< len is in element
 521:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API const std::complex<double> *c64vector_elements(pmt_t v, size_t &len); //< len is in element
 522:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 523:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** // len is in elements
 524:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API const std::vector<uint8_t>  u8vector_elements(pmt_t v);
 525:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API const std::vector<int8_t>   s8vector_elements(pmt_t v);
 526:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API const std::vector<uint16_t> u16vector_elements(pmt_t v);
 527:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API const std::vector<int16_t>  s16vector_elements(pmt_t v);
 528:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API const std::vector<uint32_t> u32vector_elements(pmt_t v);
 529:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API const std::vector<int32_t>  s32vector_elements(pmt_t v);
 530:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API const std::vector<uint64_t> u64vector_elements(pmt_t v);
 531:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API const std::vector<int64_t>  s64vector_elements(pmt_t v);
 532:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API const std::vector<float>    f32vector_elements(pmt_t v);
 533:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API const std::vector<double>   f64vector_elements(pmt_t v);
 534:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API const std::vector<std::complex<float> > c32vector_elements(pmt_t v);
 535:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API const std::vector<std::complex<double> > c64vector_elements(pmt_t v);
 536:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 537:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** // len is in elements
 538:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API const std::vector<uint8_t>  pmt_u8vector_elements(pmt_t v);
 539:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API const std::vector<int8_t>   pmt_s8vector_elements(pmt_t v);
 540:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API const std::vector<uint16_t> pmt_u16vector_elements(pmt_t v);
 541:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API const std::vector<int16_t>  pmt_s16vector_elements(pmt_t v);
 542:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API const std::vector<uint32_t> pmt_u32vector_elements(pmt_t v);
 543:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API const std::vector<int32_t>  pmt_s32vector_elements(pmt_t v);
 544:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API const std::vector<uint64_t> pmt_u64vector_elements(pmt_t v);
 545:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API const std::vector<int64_t>  pmt_s64vector_elements(pmt_t v);
 546:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API const std::vector<float>    pmt_f32vector_elements(pmt_t v);
 547:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API const std::vector<double>   pmt_f64vector_elements(pmt_t v);
 548:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API const std::vector<std::complex<float> > pmt_c32vector_elements(pmt_t v);
 549:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API const std::vector<std::complex<double> > pmt_c64vector_elements(pmt_t v);
 550:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 551:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** // Return non-const pointers to the elements
 552:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 553:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API void *uniform_vector_writable_elements(pmt_t v, size_t &len);  //< works with any; len is i
 554:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 555:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API uint8_t  *u8vector_writable_elements(pmt_t v, size_t &len);  //< len is in elements
 556:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API int8_t   *s8vector_writable_elements(pmt_t v, size_t &len);  //< len is in elements
 557:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API uint16_t *u16vector_writable_elements(pmt_t v, size_t &len); //< len is in elements
 558:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API int16_t  *s16vector_writable_elements(pmt_t v, size_t &len); //< len is in elements
 559:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API uint32_t *u32vector_writable_elements(pmt_t v, size_t &len); //< len is in elements
 560:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API int32_t  *s32vector_writable_elements(pmt_t v, size_t &len); //< len is in elements
 561:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API uint64_t *u64vector_writable_elements(pmt_t v, size_t &len); //< len is in elements
 562:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API int64_t  *s64vector_writable_elements(pmt_t v, size_t &len); //< len is in elements
 563:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API float    *f32vector_writable_elements(pmt_t v, size_t &len); //< len is in elements
 564:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API double   *f64vector_writable_elements(pmt_t v, size_t &len); //< len is in elements
 565:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API std::complex<float>  *c32vector_writable_elements(pmt_t v, size_t &len); //< len is in elem
 566:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API std::complex<double> *c64vector_writable_elements(pmt_t v, size_t &len); //< len is in elem
 567:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 568:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** /*
 569:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * ------------------------------------------------------------------------
 570:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  *	   Dictionary (a.k.a associative array, hash, map)
 571:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  *
 572:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * This is a functional data structure that is persistent.  Updating a
 573:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * functional data structure does not destroy the existing version, but
GAS LISTING /tmp/ccsIN87E.s 			page 82


 574:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * rather creates a new version that coexists with the old.
 575:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * ------------------------------------------------------------------------
 576:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  */
 577:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 578:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** //! Return true if \p obj is a dictionary (warning: also returns true for a pair)
 579:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API bool is_dict(const pmt_t &obj);
 580:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 581:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** //! Make an empty dictionary
 582:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API pmt_t make_dict();
 583:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 584:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** //! Return a new dictionary with \p key associated with \p value.
 585:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API pmt_t dict_add(const pmt_t &dict, const pmt_t &key, const pmt_t &value);
 586:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 587:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** //! Return a new dictionary with \p key removed.
 588:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API pmt_t dict_delete(const pmt_t &dict, const pmt_t &key);
 589:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 590:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** //! Return true if \p key exists in \p dict
 591:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API bool  dict_has_key(const pmt_t &dict, const pmt_t &key);
 592:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 593:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** //! If \p key exists in \p dict, return associated value; otherwise return \p not_found.
 594:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API pmt_t dict_ref(const pmt_t &dict, const pmt_t &key, const pmt_t &not_found);
 595:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 596:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** //! Return list of (key . value) pairs
 597:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API pmt_t dict_items(pmt_t dict);
 598:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 599:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** //! Return list of keys
 600:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API pmt_t dict_keys(pmt_t dict);
 601:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 602:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** //! Return a new dictionary \p dict1 with k=>v pairs from \p dict2 added.
 603:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API pmt_t dict_update(const pmt_t &dict1, const pmt_t &dict2);
 604:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 605:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** //! Return list of values
 606:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API pmt_t dict_values(pmt_t dict);
 607:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 608:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** /*
 609:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * ------------------------------------------------------------------------
 610:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  *   Any (wraps boost::any -- can be used to wrap pretty much anything)
 611:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  *
 612:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * Cannot be serialized or used across process boundaries.
 613:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * See http://www.boost.org/doc/html/any.html
 614:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * ------------------------------------------------------------------------
 615:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  */
 616:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 617:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** //! Return true if \p obj is an any
 618:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API bool is_any(pmt_t obj);
 619:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 620:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** //! make an any
 621:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API pmt_t make_any(const boost::any &any);
 622:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 623:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** //! Return underlying boost::any
 624:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API boost::any any_ref(pmt_t obj);
 625:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 626:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** //! Store \p any in \p obj
 627:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API void any_set(pmt_t obj, const boost::any &any);
 628:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 629:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 630:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** /*
GAS LISTING /tmp/ccsIN87E.s 			page 83


 631:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * ------------------------------------------------------------------------
 632:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  *    msg_accepter -- pmt representation of pmt::msg_accepter
 633:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * ------------------------------------------------------------------------
 634:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  */
 635:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** //! Return true if \p obj is a msg_accepter
 636:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API bool is_msg_accepter(const pmt_t &obj);
 637:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 638:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** //! make a msg_accepter
 639:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API pmt_t make_msg_accepter(boost::shared_ptr<gr::messages::msg_accepter> ma);
 640:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 641:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** //! Return underlying msg_accepter
 642:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API boost::shared_ptr<gr::messages::msg_accepter> msg_accepter_ref(const pmt_t &obj);
 643:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 644:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** /*
 645:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * ------------------------------------------------------------------------
 646:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  *			  General functions
 647:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * ------------------------------------------------------------------------
 648:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  */
 649:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 650:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** //! Return true if x and y are the same object; otherwise return false.
 651:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API bool eq(const pmt_t& x, const pmt_t& y);
 652:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 653:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** /*!
 654:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * \brief Return true if x and y should normally be regarded as the same object, else false.
 655:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  *
 656:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * <pre>
 657:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * eqv returns true if:
 658:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  *   x and y are the same object.
 659:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  *   x and y are both \#t or both \#f.
 660:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  *   x and y are both symbols and their names are the same.
 661:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  *   x and y are both numbers, and are numerically equal.
 662:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  *   x and y are both the empty list (nil).
 663:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  *   x and y are pairs or vectors that denote same location in store.
 664:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * </pre>
 665:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  */
 666:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API bool eqv(const pmt_t& x, const pmt_t& y);
 667:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 668:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** /*!
 669:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * pmt::equal recursively compares the contents of pairs and vectors,
 670:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * applying pmt::eqv on other objects such as numbers and symbols.
 671:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * pmt::equal may fail to terminate if its arguments are circular data
 672:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * structures.
 673:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  */
 674:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API bool equal(const pmt_t& x, const pmt_t& y);
 675:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 676:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 677:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** //! Return the number of elements in v
 678:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API size_t length(const pmt_t& v);
 679:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 680:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** /*!
 681:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * \brief Find the first pair in \p alist whose car field is \p obj
 682:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  *  and return that pair.
 683:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  *
 684:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * \p alist (for "association list") must be a list of pairs.  If no pair
 685:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * in \p alist has \p obj as its car then \#f is returned.
 686:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * Uses pmt::eq to compare \p obj with car fields of the pairs in \p alist.
 687:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  */
GAS LISTING /tmp/ccsIN87E.s 			page 84


 688:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API pmt_t assq(pmt_t obj, pmt_t alist);
 689:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 690:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** /*!
 691:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * \brief Find the first pair in \p alist whose car field is \p obj
 692:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  *  and return that pair.
 693:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  *
 694:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * \p alist (for "association list") must be a list of pairs.  If no pair
 695:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * in \p alist has \p obj as its car then \#f is returned.
 696:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * Uses pmt::eqv to compare \p obj with car fields of the pairs in \p alist.
 697:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  */
 698:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API pmt_t assv(pmt_t obj, pmt_t alist);
 699:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 700:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** /*!
 701:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * \brief Find the first pair in \p alist whose car field is \p obj
 702:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  *  and return that pair.
 703:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  *
 704:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * \p alist (for "association list") must be a list of pairs.  If no pair
 705:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * in \p alist has \p obj as its car then \#f is returned.
 706:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * Uses pmt::equal to compare \p obj with car fields of the pairs in \p alist.
 707:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  */
 708:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API pmt_t assoc(pmt_t obj, pmt_t alist);
 709:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 710:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** /*!
 711:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * \brief Apply \p proc element-wise to the elements of list and returns
 712:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * a list of the results, in order.
 713:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  *
 714:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * \p list must be a list.  The dynamic order in which \p proc is
 715:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * applied to the elements of \p list is unspecified.
 716:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  */
 717:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API pmt_t map(pmt_t proc(const pmt_t&), pmt_t list);
 718:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 719:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** /*!
 720:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * \brief reverse \p list.
 721:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  *
 722:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * \p list must be a proper list.
 723:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  */
 724:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API pmt_t reverse(pmt_t list);
 725:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 726:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** /*!
 727:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * \brief destructively reverse \p list.
 728:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  *
 729:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * \p list must be a proper list.
 730:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  */
 731:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API pmt_t reverse_x(pmt_t list);
 732:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 733:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** /*!
 734:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * \brief (acons x y a) == (cons (cons x y) a)
 735:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  */
 736:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** inline static pmt_t
 737:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** acons(pmt_t x, pmt_t y, pmt_t a)
 738:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** {
 739:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****   return cons(cons(x, y), a);
 740:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** }
 741:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 742:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** /*!
 743:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * \brief locates \p nth element of \n list where the car is the 'zeroth' element.
 744:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  */
GAS LISTING /tmp/ccsIN87E.s 			page 85


 745:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API pmt_t nth(size_t n, pmt_t list);
 746:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 747:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** /*!
 748:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * \brief returns the tail of \p list that would be obtained by calling
 749:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * cdr \p n times in succession.
 750:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  */
 751:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API pmt_t nthcdr(size_t n, pmt_t list);
 752:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 753:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** /*!
 754:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * \brief Return the first sublist of \p list whose car is \p obj.
 755:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * If \p obj does not occur in \p list, then \#f is returned.
 756:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * pmt::memq use pmt::eq to compare \p obj with the elements of \p list.
 757:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  */
 758:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API pmt_t memq(pmt_t obj, pmt_t list);
 759:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 760:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** /*!
 761:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * \brief Return the first sublist of \p list whose car is \p obj.
 762:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * If \p obj does not occur in \p list, then \#f is returned.
 763:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * pmt::memv use pmt::eqv to compare \p obj with the elements of \p list.
 764:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  */
 765:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API pmt_t memv(pmt_t obj, pmt_t list);
 766:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 767:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** /*!
 768:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * \brief Return the first sublist of \p list whose car is \p obj.
 769:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * If \p obj does not occur in \p list, then \#f is returned.
 770:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * pmt::member use pmt::equal to compare \p obj with the elements of \p list.
 771:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  */
 772:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API pmt_t member(pmt_t obj, pmt_t list);
 773:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 774:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** /*!
 775:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * \brief Return true if every element of \p list1 appears in \p list2, and false otherwise.
 776:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * Comparisons are done with pmt::eqv.
 777:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  */
 778:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API bool subsetp(pmt_t list1, pmt_t list2);
 779:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 780:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** /*!
 781:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * \brief Return a list of length 1 containing \p x1
 782:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  */
 783:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API pmt_t list1(const pmt_t& x1);
 784:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 785:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** /*!
 786:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * \brief Return a list of length 2 containing \p x1, \p x2
 787:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  */
 788:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API pmt_t list2(const pmt_t& x1, const pmt_t& x2);
 789:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 790:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** /*!
 791:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * \brief Return a list of length 3 containing \p x1, \p x2, \p x3
 792:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  */
 793:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API pmt_t list3(const pmt_t& x1, const pmt_t& x2, const pmt_t& x3);
 794:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 795:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** /*!
 796:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * \brief Return a list of length 4 containing \p x1, \p x2, \p x3, \p x4
 797:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  */
 798:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API pmt_t list4(const pmt_t& x1, const pmt_t& x2, const pmt_t& x3, const pmt_t& x4);
 799:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 800:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** /*!
 801:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * \brief Return a list of length 5 containing \p x1, \p x2, \p x3, \p x4, \p x5
GAS LISTING /tmp/ccsIN87E.s 			page 86


 802:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  */
 803:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API pmt_t list5(const pmt_t& x1, const pmt_t& x2, const pmt_t& x3, const pmt_t& x4, const pmt_t
 804:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 805:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** /*!
 806:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * \brief Return a list of length 6 containing \p x1, \p x2, \p x3, \p x4, \p
 807:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * x5, \p x6
 808:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  */
 809:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API pmt_t list6(const pmt_t& x1, const pmt_t& x2, const pmt_t& x3, const pmt_t& x4, const pmt_t
 810:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 811:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** /*!
 812:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * \brief Return \p list with \p item added to it.
 813:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  */
 814:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API pmt_t list_add(pmt_t list, const pmt_t& item);
 815:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 816:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** /*!
 817:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * \brief Return \p list with \p item removed from it.
 818:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  */
 819:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API pmt_t list_rm(pmt_t list, const pmt_t& item);
 820:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 821:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** /*!
 822:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * \brief Return bool of \p list contains \p item
 823:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  */
 824:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API bool list_has(pmt_t list, const pmt_t& item);
 825:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 826:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 827:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** /*
 828:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * ------------------------------------------------------------------------
 829:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  *			     read / write
 830:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * ------------------------------------------------------------------------
 831:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  */
 832:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 833:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** //! return true if obj is the EOF object, otherwise return false.
 834:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API bool is_eof_object(pmt_t obj);
 835:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 836:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** /*!
 837:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * read converts external representations of pmt objects into the
 838:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * objects themselves.  Read returns the next object parsable from
 839:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * the given input port, updating port to point to the first
 840:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * character past the end of the external representation of the
 841:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * object.
 842:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  *
 843:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * If an end of file is encountered in the input before any
 844:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * characters are found that can begin an object, then an end of file
 845:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * object is returned.   The port remains open, and further attempts
 846:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * to read will also return an end of file object.  If an end of file
 847:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * is encountered after the beginning of an object's external
 848:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * representation, but the external representation is incomplete and
 849:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * therefore not parsable, an error is signaled.
 850:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  */
 851:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API pmt_t read(std::istream &port);
 852:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 853:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** /*!
 854:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * Write a written representation of \p obj to the given \p port.
 855:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  */
 856:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API void write(pmt_t obj, std::ostream &port);
 857:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 858:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** /*!
GAS LISTING /tmp/ccsIN87E.s 			page 87


 859:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * Return a string representation of \p obj.
 860:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * This is the same output as would be generated by pmt::write.
 861:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  */
 862:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API std::string write_string(pmt_t obj);
 863:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 864:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 865:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API std::ostream& operator<<(std::ostream &os, pmt_t obj);
 866:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 867:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** /*!
 868:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * \brief Write pmt string representation to stdout.
 869:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  */
 870:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API void print(pmt_t v);
 871:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 872:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 873:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** /*
 874:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * ------------------------------------------------------------------------
 875:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  *		      portable byte stream representation
 876:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * ------------------------------------------------------------------------
 877:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  */
 878:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** /*!
 879:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * \brief Write portable byte-serial representation of \p obj to \p sink
 880:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  */
 881:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API bool serialize(pmt_t obj, std::streambuf &sink);
 882:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 883:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** /*!
 884:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * \brief Create obj from portable byte-serial representation
 885:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  */
 886:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API pmt_t deserialize(std::streambuf &source);
 887:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 888:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 889:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API void dump_sizeof();	// debugging
 890:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 891:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** /*!
 892:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * \brief Provide a simple string generating interface to pmt's serialize function
 893:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  */
 894:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API std::string serialize_str(pmt_t obj);
 895:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 896:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** /*!
 897:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * \brief Provide a simple string generating interface to pmt's deserialize function
 898:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  */
 899:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** PMT_API pmt_t deserialize_str(std::string str);
 900:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** 
 901:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** /*!
 902:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  * \brief Provide a comparator function object to allow pmt use in stl types
 903:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****  */
 904:/home/mpiscopo/gnuradio/include/pmt/pmt.h **** class comparator {
 905:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****     public:
 906:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****         bool operator()(pmt::pmt_t const& p1, pmt::pmt_t const& p2) const
 1224              		.loc 10 906 0
 1225              		.cfi_startproc
 1226 0000 55       		pushq	%rbp
 1227              		.cfi_def_cfa_offset 16
 1228              		.cfi_offset 6, -16
 1229 0001 4889E5   		movq	%rsp, %rbp
 1230              		.cfi_def_cfa_register 6
 1231 0004 53       		pushq	%rbx
 1232 0005 4883EC28 		subq	$40, %rsp
GAS LISTING /tmp/ccsIN87E.s 			page 88


 1233              		.cfi_offset 3, -24
 1234 0009 48897DE8 		movq	%rdi, -24(%rbp)
 1235 000d 488975E0 		movq	%rsi, -32(%rbp)
 1236 0011 488955D8 		movq	%rdx, -40(%rbp)
 907:/home/mpiscopo/gnuradio/include/pmt/pmt.h ****             { return pmt::eqv(p1,p2)?false:p1.get()>p2.get(); }
 1237              		.loc 10 907 0
 1238 0015 488B55D8 		movq	-40(%rbp), %rdx
 1239 0019 488B45E0 		movq	-32(%rbp), %rax
 1240 001d 4889D6   		movq	%rdx, %rsi
 1241 0020 4889C7   		movq	%rax, %rdi
 1242 0023 E8000000 		call	_ZN3pmt3eqvERKN5boost13intrusive_ptrINS_8pmt_baseEEES5_@PLT
 1242      00
 1243 0028 84C0     		testb	%al, %al
 1244 002a 7407     		je	.L57
 1245              		.loc 10 907 0 is_stmt 0 discriminator 1
 1246 002c B8000000 		movl	$0, %eax
 1246      00
 1247 0031 EB21     		jmp	.L59
 1248              	.L57:
 1249              		.loc 10 907 0 discriminator 2
 1250 0033 488B45E0 		movq	-32(%rbp), %rax
 1251 0037 4889C7   		movq	%rax, %rdi
 1252 003a E8000000 		call	_ZNK5boost13intrusive_ptrIN3pmt8pmt_baseEE3getEv
 1252      00
 1253 003f 4889C3   		movq	%rax, %rbx
 1254 0042 488B45D8 		movq	-40(%rbp), %rax
 1255 0046 4889C7   		movq	%rax, %rdi
 1256 0049 E8000000 		call	_ZNK5boost13intrusive_ptrIN3pmt8pmt_baseEE3getEv
 1256      00
 1257 004e 4839C3   		cmpq	%rax, %rbx
 1258 0051 0F97C0   		seta	%al
 1259              	.L59:
 1260              		.loc 10 907 0 discriminator 5
 1261 0054 4883C428 		addq	$40, %rsp
 1262 0058 5B       		popq	%rbx
 1263 0059 5D       		popq	%rbp
 1264              		.cfi_def_cfa 7, 8
 1265 005a C3       		ret
 1266              		.cfi_endproc
 1267              	.LFE4089:
 1269              		.local	_ZN5boost6systemL14posix_categoryE
 1270              		.comm	_ZN5boost6systemL14posix_categoryE,8,8
 1271              		.local	_ZN5boost6systemL10errno_ecatE
 1272              		.comm	_ZN5boost6systemL10errno_ecatE,8,8
 1273              		.local	_ZN5boost6systemL11native_ecatE
 1274              		.comm	_ZN5boost6systemL11native_ecatE,8,8
 1275              		.section	.text._ZNK5boost6system10error_code5valueEv,"axG",@progbits,_ZNK5boost6system10error_code
 1276              		.align 2
 1277              		.weak	_ZNK5boost6system10error_code5valueEv
 1279              	_ZNK5boost6system10error_code5valueEv:
 1280              	.LFB4157:
 1281              		.file 11 "/usr/include/boost/system/error_code.hpp"
   1:/usr/include/boost/system/error_code.hpp **** //  boost/system/error_code.hpp  ---------------------------------------------//
   2:/usr/include/boost/system/error_code.hpp **** 
   3:/usr/include/boost/system/error_code.hpp **** //  Copyright Beman Dawes 2006, 2007
   4:/usr/include/boost/system/error_code.hpp **** //  Copyright Christoper Kohlhoff 2007
   5:/usr/include/boost/system/error_code.hpp **** 
GAS LISTING /tmp/ccsIN87E.s 			page 89


   6:/usr/include/boost/system/error_code.hpp **** //  Distributed under the Boost Software License, Version 1.0. (See accompanying
   7:/usr/include/boost/system/error_code.hpp **** //  file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
   8:/usr/include/boost/system/error_code.hpp **** 
   9:/usr/include/boost/system/error_code.hpp **** //  See library home page at http://www.boost.org/libs/system
  10:/usr/include/boost/system/error_code.hpp **** 
  11:/usr/include/boost/system/error_code.hpp **** #ifndef BOOST_ERROR_CODE_HPP
  12:/usr/include/boost/system/error_code.hpp **** #define BOOST_ERROR_CODE_HPP
  13:/usr/include/boost/system/error_code.hpp **** 
  14:/usr/include/boost/system/error_code.hpp **** #include <boost/system/config.hpp>
  15:/usr/include/boost/system/error_code.hpp **** #include <boost/cstdint.hpp>
  16:/usr/include/boost/system/error_code.hpp **** #include <boost/assert.hpp>
  17:/usr/include/boost/system/error_code.hpp **** #include <boost/noncopyable.hpp>
  18:/usr/include/boost/system/error_code.hpp **** #include <boost/utility/enable_if.hpp>
  19:/usr/include/boost/system/error_code.hpp **** #include <ostream>
  20:/usr/include/boost/system/error_code.hpp **** #include <string>
  21:/usr/include/boost/system/error_code.hpp **** #include <stdexcept>
  22:/usr/include/boost/system/error_code.hpp **** #include <functional>
  23:/usr/include/boost/system/error_code.hpp **** 
  24:/usr/include/boost/system/error_code.hpp **** // TODO: undef these macros if not already defined
  25:/usr/include/boost/system/error_code.hpp **** #include <boost/cerrno.hpp>
  26:/usr/include/boost/system/error_code.hpp **** 
  27:/usr/include/boost/system/error_code.hpp **** #if !defined(BOOST_POSIX_API) && !defined(BOOST_WINDOWS_API)
  28:/usr/include/boost/system/error_code.hpp **** #  error BOOST_POSIX_API or BOOST_WINDOWS_API must be defined
  29:/usr/include/boost/system/error_code.hpp **** #endif
  30:/usr/include/boost/system/error_code.hpp **** 
  31:/usr/include/boost/system/error_code.hpp **** #include <boost/config/abi_prefix.hpp> // must be the last #include
  32:/usr/include/boost/system/error_code.hpp **** 
  33:/usr/include/boost/system/error_code.hpp **** #ifndef BOOST_SYSTEM_NOEXCEPT
  34:/usr/include/boost/system/error_code.hpp **** #define BOOST_SYSTEM_NOEXCEPT BOOST_NOEXCEPT
  35:/usr/include/boost/system/error_code.hpp **** #endif
  36:/usr/include/boost/system/error_code.hpp **** 
  37:/usr/include/boost/system/error_code.hpp **** namespace boost
  38:/usr/include/boost/system/error_code.hpp **** {
  39:/usr/include/boost/system/error_code.hpp ****   namespace system
  40:/usr/include/boost/system/error_code.hpp ****   {
  41:/usr/include/boost/system/error_code.hpp **** 
  42:/usr/include/boost/system/error_code.hpp ****     class error_code;
  43:/usr/include/boost/system/error_code.hpp ****     class error_condition;
  44:/usr/include/boost/system/error_code.hpp **** 
  45:/usr/include/boost/system/error_code.hpp ****     //  "Concept" helpers  ---------------------------------------------------//
  46:/usr/include/boost/system/error_code.hpp **** 
  47:/usr/include/boost/system/error_code.hpp ****     template< class T >
  48:/usr/include/boost/system/error_code.hpp ****     struct is_error_code_enum { static const bool value = false; };
  49:/usr/include/boost/system/error_code.hpp **** 
  50:/usr/include/boost/system/error_code.hpp ****     template< class T >
  51:/usr/include/boost/system/error_code.hpp ****     struct is_error_condition_enum { static const bool value = false; };
  52:/usr/include/boost/system/error_code.hpp **** 
  53:/usr/include/boost/system/error_code.hpp ****     //  generic error_conditions  --------------------------------------------//
  54:/usr/include/boost/system/error_code.hpp **** 
  55:/usr/include/boost/system/error_code.hpp ****     namespace errc
  56:/usr/include/boost/system/error_code.hpp ****     {
  57:/usr/include/boost/system/error_code.hpp ****       enum errc_t
  58:/usr/include/boost/system/error_code.hpp ****       {
  59:/usr/include/boost/system/error_code.hpp ****         success = 0,
  60:/usr/include/boost/system/error_code.hpp ****         address_family_not_supported = EAFNOSUPPORT,
  61:/usr/include/boost/system/error_code.hpp ****         address_in_use = EADDRINUSE,
  62:/usr/include/boost/system/error_code.hpp ****         address_not_available = EADDRNOTAVAIL,
GAS LISTING /tmp/ccsIN87E.s 			page 90


  63:/usr/include/boost/system/error_code.hpp ****         already_connected = EISCONN,
  64:/usr/include/boost/system/error_code.hpp ****         argument_list_too_long = E2BIG,
  65:/usr/include/boost/system/error_code.hpp ****         argument_out_of_domain = EDOM,
  66:/usr/include/boost/system/error_code.hpp ****         bad_address = EFAULT,
  67:/usr/include/boost/system/error_code.hpp ****         bad_file_descriptor = EBADF,
  68:/usr/include/boost/system/error_code.hpp ****         bad_message = EBADMSG,
  69:/usr/include/boost/system/error_code.hpp ****         broken_pipe = EPIPE,
  70:/usr/include/boost/system/error_code.hpp ****         connection_aborted = ECONNABORTED,
  71:/usr/include/boost/system/error_code.hpp ****         connection_already_in_progress = EALREADY,
  72:/usr/include/boost/system/error_code.hpp ****         connection_refused = ECONNREFUSED,
  73:/usr/include/boost/system/error_code.hpp ****         connection_reset = ECONNRESET,
  74:/usr/include/boost/system/error_code.hpp ****         cross_device_link = EXDEV,
  75:/usr/include/boost/system/error_code.hpp ****         destination_address_required = EDESTADDRREQ,
  76:/usr/include/boost/system/error_code.hpp ****         device_or_resource_busy = EBUSY,
  77:/usr/include/boost/system/error_code.hpp ****         directory_not_empty = ENOTEMPTY,
  78:/usr/include/boost/system/error_code.hpp ****         executable_format_error = ENOEXEC,
  79:/usr/include/boost/system/error_code.hpp ****         file_exists = EEXIST,
  80:/usr/include/boost/system/error_code.hpp ****         file_too_large = EFBIG,
  81:/usr/include/boost/system/error_code.hpp ****         filename_too_long = ENAMETOOLONG,
  82:/usr/include/boost/system/error_code.hpp ****         function_not_supported = ENOSYS,
  83:/usr/include/boost/system/error_code.hpp ****         host_unreachable = EHOSTUNREACH,
  84:/usr/include/boost/system/error_code.hpp ****         identifier_removed = EIDRM,
  85:/usr/include/boost/system/error_code.hpp ****         illegal_byte_sequence = EILSEQ,
  86:/usr/include/boost/system/error_code.hpp ****         inappropriate_io_control_operation = ENOTTY,
  87:/usr/include/boost/system/error_code.hpp ****         interrupted = EINTR,
  88:/usr/include/boost/system/error_code.hpp ****         invalid_argument = EINVAL,
  89:/usr/include/boost/system/error_code.hpp ****         invalid_seek = ESPIPE,
  90:/usr/include/boost/system/error_code.hpp ****         io_error = EIO,
  91:/usr/include/boost/system/error_code.hpp ****         is_a_directory = EISDIR,
  92:/usr/include/boost/system/error_code.hpp ****         message_size = EMSGSIZE,
  93:/usr/include/boost/system/error_code.hpp ****         network_down = ENETDOWN,
  94:/usr/include/boost/system/error_code.hpp ****         network_reset = ENETRESET,
  95:/usr/include/boost/system/error_code.hpp ****         network_unreachable = ENETUNREACH,
  96:/usr/include/boost/system/error_code.hpp ****         no_buffer_space = ENOBUFS,
  97:/usr/include/boost/system/error_code.hpp ****         no_child_process = ECHILD,
  98:/usr/include/boost/system/error_code.hpp ****         no_link = ENOLINK,
  99:/usr/include/boost/system/error_code.hpp ****         no_lock_available = ENOLCK,
 100:/usr/include/boost/system/error_code.hpp ****         no_message_available = ENODATA,
 101:/usr/include/boost/system/error_code.hpp ****         no_message = ENOMSG,
 102:/usr/include/boost/system/error_code.hpp ****         no_protocol_option = ENOPROTOOPT,
 103:/usr/include/boost/system/error_code.hpp ****         no_space_on_device = ENOSPC,
 104:/usr/include/boost/system/error_code.hpp ****         no_stream_resources = ENOSR,
 105:/usr/include/boost/system/error_code.hpp ****         no_such_device_or_address = ENXIO,
 106:/usr/include/boost/system/error_code.hpp ****         no_such_device = ENODEV,
 107:/usr/include/boost/system/error_code.hpp ****         no_such_file_or_directory = ENOENT,
 108:/usr/include/boost/system/error_code.hpp ****         no_such_process = ESRCH,
 109:/usr/include/boost/system/error_code.hpp ****         not_a_directory = ENOTDIR,
 110:/usr/include/boost/system/error_code.hpp ****         not_a_socket = ENOTSOCK,
 111:/usr/include/boost/system/error_code.hpp ****         not_a_stream = ENOSTR,
 112:/usr/include/boost/system/error_code.hpp ****         not_connected = ENOTCONN,
 113:/usr/include/boost/system/error_code.hpp ****         not_enough_memory = ENOMEM,
 114:/usr/include/boost/system/error_code.hpp ****         not_supported = ENOTSUP,
 115:/usr/include/boost/system/error_code.hpp ****         operation_canceled = ECANCELED,
 116:/usr/include/boost/system/error_code.hpp ****         operation_in_progress = EINPROGRESS,
 117:/usr/include/boost/system/error_code.hpp ****         operation_not_permitted = EPERM,
 118:/usr/include/boost/system/error_code.hpp ****         operation_not_supported = EOPNOTSUPP,
 119:/usr/include/boost/system/error_code.hpp ****         operation_would_block = EWOULDBLOCK,
GAS LISTING /tmp/ccsIN87E.s 			page 91


 120:/usr/include/boost/system/error_code.hpp ****         owner_dead = EOWNERDEAD,
 121:/usr/include/boost/system/error_code.hpp ****         permission_denied = EACCES,
 122:/usr/include/boost/system/error_code.hpp ****         protocol_error = EPROTO,
 123:/usr/include/boost/system/error_code.hpp ****         protocol_not_supported = EPROTONOSUPPORT,
 124:/usr/include/boost/system/error_code.hpp ****         read_only_file_system = EROFS,
 125:/usr/include/boost/system/error_code.hpp ****         resource_deadlock_would_occur = EDEADLK,
 126:/usr/include/boost/system/error_code.hpp ****         resource_unavailable_try_again = EAGAIN,
 127:/usr/include/boost/system/error_code.hpp ****         result_out_of_range = ERANGE,
 128:/usr/include/boost/system/error_code.hpp ****         state_not_recoverable = ENOTRECOVERABLE,
 129:/usr/include/boost/system/error_code.hpp ****         stream_timeout = ETIME,
 130:/usr/include/boost/system/error_code.hpp ****         text_file_busy = ETXTBSY,
 131:/usr/include/boost/system/error_code.hpp ****         timed_out = ETIMEDOUT,
 132:/usr/include/boost/system/error_code.hpp ****         too_many_files_open_in_system = ENFILE,
 133:/usr/include/boost/system/error_code.hpp ****         too_many_files_open = EMFILE,
 134:/usr/include/boost/system/error_code.hpp ****         too_many_links = EMLINK,
 135:/usr/include/boost/system/error_code.hpp ****         too_many_symbolic_link_levels = ELOOP,
 136:/usr/include/boost/system/error_code.hpp ****         value_too_large = EOVERFLOW,
 137:/usr/include/boost/system/error_code.hpp ****         wrong_protocol_type = EPROTOTYPE
 138:/usr/include/boost/system/error_code.hpp ****       };
 139:/usr/include/boost/system/error_code.hpp **** 
 140:/usr/include/boost/system/error_code.hpp ****     } // namespace errc
 141:/usr/include/boost/system/error_code.hpp **** 
 142:/usr/include/boost/system/error_code.hpp **** # ifndef BOOST_SYSTEM_NO_DEPRECATED
 143:/usr/include/boost/system/error_code.hpp ****     namespace posix = errc;
 144:/usr/include/boost/system/error_code.hpp ****     namespace posix_error = errc;
 145:/usr/include/boost/system/error_code.hpp **** # endif
 146:/usr/include/boost/system/error_code.hpp **** 
 147:/usr/include/boost/system/error_code.hpp ****     template<> struct is_error_condition_enum<errc::errc_t>
 148:/usr/include/boost/system/error_code.hpp ****       { static const bool value = true; };
 149:/usr/include/boost/system/error_code.hpp **** 
 150:/usr/include/boost/system/error_code.hpp **** 
 151:/usr/include/boost/system/error_code.hpp ****     //  ----------------------------------------------------------------------//
 152:/usr/include/boost/system/error_code.hpp **** 
 153:/usr/include/boost/system/error_code.hpp ****     //  Operating system specific interfaces  --------------------------------//
 154:/usr/include/boost/system/error_code.hpp **** 
 155:/usr/include/boost/system/error_code.hpp **** 
 156:/usr/include/boost/system/error_code.hpp ****     //  The interface is divided into general and system-specific portions to
 157:/usr/include/boost/system/error_code.hpp ****     //  meet these requirements:
 158:/usr/include/boost/system/error_code.hpp ****     //
 159:/usr/include/boost/system/error_code.hpp ****     //  * Code calling an operating system API can create an error_code with
 160:/usr/include/boost/system/error_code.hpp ****     //    a single category (system_category), even for POSIX-like operating
 161:/usr/include/boost/system/error_code.hpp ****     //    systems that return some POSIX errno values and some native errno
 162:/usr/include/boost/system/error_code.hpp ****     //    values. This code should not have to pay the cost of distinguishing
 163:/usr/include/boost/system/error_code.hpp ****     //    between categories, since it is not yet known if that is needed.
 164:/usr/include/boost/system/error_code.hpp ****     //
 165:/usr/include/boost/system/error_code.hpp ****     //  * Users wishing to write system-specific code should be given enums for
 166:/usr/include/boost/system/error_code.hpp ****     //    at least the common error cases.
 167:/usr/include/boost/system/error_code.hpp ****     //
 168:/usr/include/boost/system/error_code.hpp ****     //  * System specific code should fail at compile time if moved to another
 169:/usr/include/boost/system/error_code.hpp ****     //    operating system.
 170:/usr/include/boost/system/error_code.hpp **** 
 171:/usr/include/boost/system/error_code.hpp ****     //  The system specific portions of the interface are located in headers
 172:/usr/include/boost/system/error_code.hpp ****     //  with names reflecting the operating system. For example,
 173:/usr/include/boost/system/error_code.hpp ****     //
 174:/usr/include/boost/system/error_code.hpp ****     //       <boost/system/cygwin_error.hpp>
 175:/usr/include/boost/system/error_code.hpp ****     //       <boost/system/linux_error.hpp>
 176:/usr/include/boost/system/error_code.hpp ****     //       <boost/system/windows_error.hpp>
GAS LISTING /tmp/ccsIN87E.s 			page 92


 177:/usr/include/boost/system/error_code.hpp ****     //
 178:/usr/include/boost/system/error_code.hpp ****     //  These headers are effectively empty for compiles on operating systems
 179:/usr/include/boost/system/error_code.hpp ****     //  where they are not applicable.
 180:/usr/include/boost/system/error_code.hpp **** 
 181:/usr/include/boost/system/error_code.hpp ****     //  ----------------------------------------------------------------------//
 182:/usr/include/boost/system/error_code.hpp **** 
 183:/usr/include/boost/system/error_code.hpp ****     //  class error_category  ------------------------------------------------//
 184:/usr/include/boost/system/error_code.hpp **** 
 185:/usr/include/boost/system/error_code.hpp ****     class error_category : public noncopyable
 186:/usr/include/boost/system/error_code.hpp ****     {
 187:/usr/include/boost/system/error_code.hpp ****     public:
 188:/usr/include/boost/system/error_code.hpp ****       virtual ~error_category(){}
 189:/usr/include/boost/system/error_code.hpp **** 
 190:/usr/include/boost/system/error_code.hpp ****       virtual const char *     name() const BOOST_SYSTEM_NOEXCEPT = 0;
 191:/usr/include/boost/system/error_code.hpp ****       virtual std::string      message( int ev ) const = 0;
 192:/usr/include/boost/system/error_code.hpp ****       inline virtual error_condition  default_error_condition( int ev ) const  BOOST_SYSTEM_NOEXCEP
 193:/usr/include/boost/system/error_code.hpp ****       inline virtual bool             equivalent( int code,
 194:/usr/include/boost/system/error_code.hpp ****                                            const error_condition & condition ) const  BOOST_SYSTEM_
 195:/usr/include/boost/system/error_code.hpp ****       inline virtual bool             equivalent( const error_code & code,
 196:/usr/include/boost/system/error_code.hpp ****                                            int condition ) const  BOOST_SYSTEM_NOEXCEPT;
 197:/usr/include/boost/system/error_code.hpp **** 
 198:/usr/include/boost/system/error_code.hpp ****       bool operator==(const error_category & rhs) const BOOST_SYSTEM_NOEXCEPT { return this == &rhs
 199:/usr/include/boost/system/error_code.hpp ****       bool operator!=(const error_category & rhs) const BOOST_SYSTEM_NOEXCEPT { return this != &rhs
 200:/usr/include/boost/system/error_code.hpp ****       bool operator<( const error_category & rhs ) const BOOST_SYSTEM_NOEXCEPT
 201:/usr/include/boost/system/error_code.hpp ****       {
 202:/usr/include/boost/system/error_code.hpp ****         return std::less<const error_category*>()( this, &rhs );
 203:/usr/include/boost/system/error_code.hpp ****       }
 204:/usr/include/boost/system/error_code.hpp ****     };
 205:/usr/include/boost/system/error_code.hpp **** 
 206:/usr/include/boost/system/error_code.hpp ****     //  predefined error categories  -----------------------------------------//
 207:/usr/include/boost/system/error_code.hpp **** 
 208:/usr/include/boost/system/error_code.hpp **** # ifdef BOOST_ERROR_CODE_HEADER_ONLY
 209:/usr/include/boost/system/error_code.hpp ****     inline const error_category &  system_category() BOOST_SYSTEM_NOEXCEPT;
 210:/usr/include/boost/system/error_code.hpp ****     inline const error_category &  generic_category() BOOST_SYSTEM_NOEXCEPT;
 211:/usr/include/boost/system/error_code.hpp **** #else
 212:/usr/include/boost/system/error_code.hpp ****     BOOST_SYSTEM_DECL const error_category &  system_category() BOOST_SYSTEM_NOEXCEPT;
 213:/usr/include/boost/system/error_code.hpp ****     BOOST_SYSTEM_DECL const error_category &  generic_category() BOOST_SYSTEM_NOEXCEPT;
 214:/usr/include/boost/system/error_code.hpp **** #endif
 215:/usr/include/boost/system/error_code.hpp ****     //  deprecated synonyms --------------------------------------------------//
 216:/usr/include/boost/system/error_code.hpp **** 
 217:/usr/include/boost/system/error_code.hpp **** # ifndef BOOST_SYSTEM_NO_DEPRECATED
 218:/usr/include/boost/system/error_code.hpp ****     inline const error_category &  get_system_category() { return system_category(); }
 219:/usr/include/boost/system/error_code.hpp ****     inline const error_category &  get_generic_category() { return generic_category(); }
 220:/usr/include/boost/system/error_code.hpp ****     inline const error_category &  get_posix_category() { return generic_category(); }
 221:/usr/include/boost/system/error_code.hpp ****     static const error_category &  posix_category = generic_category();
 222:/usr/include/boost/system/error_code.hpp ****     static const error_category &  errno_ecat     = generic_category();
 223:/usr/include/boost/system/error_code.hpp ****     static const error_category &  native_ecat    = system_category();
 224:/usr/include/boost/system/error_code.hpp **** # endif
 225:/usr/include/boost/system/error_code.hpp **** 
 226:/usr/include/boost/system/error_code.hpp ****     //  class error_condition  -----------------------------------------------//
 227:/usr/include/boost/system/error_code.hpp **** 
 228:/usr/include/boost/system/error_code.hpp ****     //  error_conditions are portable, error_codes are system or library specific
 229:/usr/include/boost/system/error_code.hpp **** 
 230:/usr/include/boost/system/error_code.hpp ****     class error_condition
 231:/usr/include/boost/system/error_code.hpp ****     {
 232:/usr/include/boost/system/error_code.hpp ****     public:
 233:/usr/include/boost/system/error_code.hpp **** 
GAS LISTING /tmp/ccsIN87E.s 			page 93


 234:/usr/include/boost/system/error_code.hpp ****       // constructors:
 235:/usr/include/boost/system/error_code.hpp ****       error_condition() BOOST_SYSTEM_NOEXCEPT : m_val(0), m_cat(&generic_category()) {}
 236:/usr/include/boost/system/error_code.hpp ****       error_condition( int val, const error_category & cat ) BOOST_SYSTEM_NOEXCEPT : m_val(val), m_
 237:/usr/include/boost/system/error_code.hpp **** 
 238:/usr/include/boost/system/error_code.hpp ****       template <class ErrorConditionEnum>
 239:/usr/include/boost/system/error_code.hpp ****         error_condition(ErrorConditionEnum e,
 240:/usr/include/boost/system/error_code.hpp ****           typename boost::enable_if<is_error_condition_enum<ErrorConditionEnum> >::type* = 0) BOOST
 241:/usr/include/boost/system/error_code.hpp ****       {
 242:/usr/include/boost/system/error_code.hpp ****         *this = make_error_condition(e);
 243:/usr/include/boost/system/error_code.hpp ****       }
 244:/usr/include/boost/system/error_code.hpp **** 
 245:/usr/include/boost/system/error_code.hpp ****       // modifiers:
 246:/usr/include/boost/system/error_code.hpp **** 
 247:/usr/include/boost/system/error_code.hpp ****       void assign( int val, const error_category & cat ) BOOST_SYSTEM_NOEXCEPT
 248:/usr/include/boost/system/error_code.hpp ****       {
 249:/usr/include/boost/system/error_code.hpp ****         m_val = val;
 250:/usr/include/boost/system/error_code.hpp ****         m_cat = &cat;
 251:/usr/include/boost/system/error_code.hpp ****       }
 252:/usr/include/boost/system/error_code.hpp **** 
 253:/usr/include/boost/system/error_code.hpp ****       template<typename ErrorConditionEnum>
 254:/usr/include/boost/system/error_code.hpp ****         typename boost::enable_if<is_error_condition_enum<ErrorConditionEnum>, error_condition>::ty
 255:/usr/include/boost/system/error_code.hpp ****           operator=( ErrorConditionEnum val ) BOOST_SYSTEM_NOEXCEPT
 256:/usr/include/boost/system/error_code.hpp ****       {
 257:/usr/include/boost/system/error_code.hpp ****         *this = make_error_condition(val);
 258:/usr/include/boost/system/error_code.hpp ****         return *this;
 259:/usr/include/boost/system/error_code.hpp ****       }
 260:/usr/include/boost/system/error_code.hpp **** 
 261:/usr/include/boost/system/error_code.hpp ****       void clear() BOOST_SYSTEM_NOEXCEPT
 262:/usr/include/boost/system/error_code.hpp ****       {
 263:/usr/include/boost/system/error_code.hpp ****         m_val = 0;
 264:/usr/include/boost/system/error_code.hpp ****         m_cat = &generic_category();
 265:/usr/include/boost/system/error_code.hpp ****       }
 266:/usr/include/boost/system/error_code.hpp **** 
 267:/usr/include/boost/system/error_code.hpp ****       // observers:
 268:/usr/include/boost/system/error_code.hpp ****       int                     value() const BOOST_SYSTEM_NOEXCEPT    { return m_val; }
 269:/usr/include/boost/system/error_code.hpp ****       const error_category &  category() const BOOST_SYSTEM_NOEXCEPT { return *m_cat; }
 270:/usr/include/boost/system/error_code.hpp ****       std::string             message() const  { return m_cat->message(value()); }
 271:/usr/include/boost/system/error_code.hpp **** 
 272:/usr/include/boost/system/error_code.hpp ****       typedef void (*unspecified_bool_type)();
 273:/usr/include/boost/system/error_code.hpp ****       static void unspecified_bool_true() {}
 274:/usr/include/boost/system/error_code.hpp **** 
 275:/usr/include/boost/system/error_code.hpp ****       operator unspecified_bool_type() const BOOST_SYSTEM_NOEXCEPT  // true if error
 276:/usr/include/boost/system/error_code.hpp ****       {
 277:/usr/include/boost/system/error_code.hpp ****         return m_val == 0 ? 0 : unspecified_bool_true;
 278:/usr/include/boost/system/error_code.hpp ****       }
 279:/usr/include/boost/system/error_code.hpp **** 
 280:/usr/include/boost/system/error_code.hpp ****       bool operator!() const BOOST_SYSTEM_NOEXCEPT  // true if no error
 281:/usr/include/boost/system/error_code.hpp ****       {
 282:/usr/include/boost/system/error_code.hpp ****         return m_val == 0;
 283:/usr/include/boost/system/error_code.hpp ****       }
 284:/usr/include/boost/system/error_code.hpp **** 
 285:/usr/include/boost/system/error_code.hpp ****       // relationals:
 286:/usr/include/boost/system/error_code.hpp ****       //  the more symmetrical non-member syntax allows enum
 287:/usr/include/boost/system/error_code.hpp ****       //  conversions work for both rhs and lhs.
 288:/usr/include/boost/system/error_code.hpp ****       inline friend bool operator==( const error_condition & lhs,
 289:/usr/include/boost/system/error_code.hpp ****                                      const error_condition & rhs ) BOOST_SYSTEM_NOEXCEPT
 290:/usr/include/boost/system/error_code.hpp ****       {
GAS LISTING /tmp/ccsIN87E.s 			page 94


 291:/usr/include/boost/system/error_code.hpp ****         return lhs.m_cat == rhs.m_cat && lhs.m_val == rhs.m_val;
 292:/usr/include/boost/system/error_code.hpp ****       }
 293:/usr/include/boost/system/error_code.hpp **** 
 294:/usr/include/boost/system/error_code.hpp ****       inline friend bool operator<( const error_condition & lhs,
 295:/usr/include/boost/system/error_code.hpp ****                                     const error_condition & rhs ) BOOST_SYSTEM_NOEXCEPT
 296:/usr/include/boost/system/error_code.hpp ****         //  the more symmetrical non-member syntax allows enum
 297:/usr/include/boost/system/error_code.hpp ****         //  conversions work for both rhs and lhs.
 298:/usr/include/boost/system/error_code.hpp ****       {
 299:/usr/include/boost/system/error_code.hpp ****         return lhs.m_cat < rhs.m_cat
 300:/usr/include/boost/system/error_code.hpp ****           || (lhs.m_cat == rhs.m_cat && lhs.m_val < rhs.m_val);
 301:/usr/include/boost/system/error_code.hpp ****       }
 302:/usr/include/boost/system/error_code.hpp **** 
 303:/usr/include/boost/system/error_code.hpp ****     private:
 304:/usr/include/boost/system/error_code.hpp ****       int                     m_val;
 305:/usr/include/boost/system/error_code.hpp ****       const error_category *  m_cat;
 306:/usr/include/boost/system/error_code.hpp **** 
 307:/usr/include/boost/system/error_code.hpp ****     };
 308:/usr/include/boost/system/error_code.hpp **** 
 309:/usr/include/boost/system/error_code.hpp ****     //  class error_code  ----------------------------------------------------//
 310:/usr/include/boost/system/error_code.hpp **** 
 311:/usr/include/boost/system/error_code.hpp ****     //  We want error_code to be a value type that can be copied without slicing
 312:/usr/include/boost/system/error_code.hpp ****     //  and without requiring heap allocation, but we also want it to have
 313:/usr/include/boost/system/error_code.hpp ****     //  polymorphic behavior based on the error category. This is achieved by
 314:/usr/include/boost/system/error_code.hpp ****     //  abstract base class error_category supplying the polymorphic behavior,
 315:/usr/include/boost/system/error_code.hpp ****     //  and error_code containing a pointer to an object of a type derived
 316:/usr/include/boost/system/error_code.hpp ****     //  from error_category.
 317:/usr/include/boost/system/error_code.hpp ****     class error_code
 318:/usr/include/boost/system/error_code.hpp ****     {
 319:/usr/include/boost/system/error_code.hpp ****     public:
 320:/usr/include/boost/system/error_code.hpp **** 
 321:/usr/include/boost/system/error_code.hpp ****       // constructors:
 322:/usr/include/boost/system/error_code.hpp ****       error_code() BOOST_SYSTEM_NOEXCEPT : m_val(0), m_cat(&system_category()) {}
 323:/usr/include/boost/system/error_code.hpp ****       error_code( int val, const error_category & cat ) BOOST_SYSTEM_NOEXCEPT : m_val(val), m_cat(&
 324:/usr/include/boost/system/error_code.hpp **** 
 325:/usr/include/boost/system/error_code.hpp ****       template <class ErrorCodeEnum>
 326:/usr/include/boost/system/error_code.hpp ****         error_code(ErrorCodeEnum e,
 327:/usr/include/boost/system/error_code.hpp ****           typename boost::enable_if<is_error_code_enum<ErrorCodeEnum> >::type* = 0) BOOST_SYSTEM_NO
 328:/usr/include/boost/system/error_code.hpp ****       {
 329:/usr/include/boost/system/error_code.hpp ****         *this = make_error_code(e);
 330:/usr/include/boost/system/error_code.hpp ****       }
 331:/usr/include/boost/system/error_code.hpp **** 
 332:/usr/include/boost/system/error_code.hpp ****       // modifiers:
 333:/usr/include/boost/system/error_code.hpp ****       void assign( int val, const error_category & cat ) BOOST_SYSTEM_NOEXCEPT
 334:/usr/include/boost/system/error_code.hpp ****       {
 335:/usr/include/boost/system/error_code.hpp ****         m_val = val;
 336:/usr/include/boost/system/error_code.hpp ****         m_cat = &cat;
 337:/usr/include/boost/system/error_code.hpp ****       }
 338:/usr/include/boost/system/error_code.hpp **** 
 339:/usr/include/boost/system/error_code.hpp ****       template<typename ErrorCodeEnum>
 340:/usr/include/boost/system/error_code.hpp ****         typename boost::enable_if<is_error_code_enum<ErrorCodeEnum>, error_code>::type &
 341:/usr/include/boost/system/error_code.hpp ****           operator=( ErrorCodeEnum val ) BOOST_SYSTEM_NOEXCEPT
 342:/usr/include/boost/system/error_code.hpp ****       {
 343:/usr/include/boost/system/error_code.hpp ****         *this = make_error_code(val);
 344:/usr/include/boost/system/error_code.hpp ****         return *this;
 345:/usr/include/boost/system/error_code.hpp ****       }
 346:/usr/include/boost/system/error_code.hpp **** 
 347:/usr/include/boost/system/error_code.hpp ****       void clear() BOOST_SYSTEM_NOEXCEPT
GAS LISTING /tmp/ccsIN87E.s 			page 95


 348:/usr/include/boost/system/error_code.hpp ****       {
 349:/usr/include/boost/system/error_code.hpp ****         m_val = 0;
 350:/usr/include/boost/system/error_code.hpp ****         m_cat = &system_category();
 351:/usr/include/boost/system/error_code.hpp ****       }
 352:/usr/include/boost/system/error_code.hpp **** 
 353:/usr/include/boost/system/error_code.hpp ****       // observers:
 354:/usr/include/boost/system/error_code.hpp ****       int                     value() const  BOOST_SYSTEM_NOEXCEPT   { return m_val; }
 1282              		.loc 11 354 0 is_stmt 1
 1283              		.cfi_startproc
 1284 0000 55       		pushq	%rbp
 1285              		.cfi_def_cfa_offset 16
 1286              		.cfi_offset 6, -16
 1287 0001 4889E5   		movq	%rsp, %rbp
 1288              		.cfi_def_cfa_register 6
 1289 0004 48897DF8 		movq	%rdi, -8(%rbp)
 1290              		.loc 11 354 0
 1291 0008 488B45F8 		movq	-8(%rbp), %rax
 1292 000c 8B00     		movl	(%rax), %eax
 1293 000e 5D       		popq	%rbp
 1294              		.cfi_def_cfa 7, 8
 1295 000f C3       		ret
 1296              		.cfi_endproc
 1297              	.LFE4157:
 1299              		.section	.text._ZNK5boost6system10error_code7messageB5cxx11Ev,"axG",@progbits,_ZNK5boost6system10e
 1300              		.align 2
 1301              		.weak	_ZNK5boost6system10error_code7messageB5cxx11Ev
 1303              	_ZNK5boost6system10error_code7messageB5cxx11Ev:
 1304              	.LFB4160:
 355:/usr/include/boost/system/error_code.hpp ****       const error_category &  category() const BOOST_SYSTEM_NOEXCEPT { return *m_cat; }
 356:/usr/include/boost/system/error_code.hpp ****       error_condition         default_error_condition() const BOOST_SYSTEM_NOEXCEPT  { return m_cat
 357:/usr/include/boost/system/error_code.hpp ****       std::string             message() const  { return m_cat->message(value()); }
 1305              		.loc 11 357 0
 1306              		.cfi_startproc
 1307 0000 55       		pushq	%rbp
 1308              		.cfi_def_cfa_offset 16
 1309              		.cfi_offset 6, -16
 1310 0001 4889E5   		movq	%rsp, %rbp
 1311              		.cfi_def_cfa_register 6
 1312 0004 53       		pushq	%rbx
 1313 0005 4883EC18 		subq	$24, %rsp
 1314              		.cfi_offset 3, -24
 1315 0009 48897DE8 		movq	%rdi, -24(%rbp)
 1316 000d 488975E0 		movq	%rsi, -32(%rbp)
 1317              		.loc 11 357 0
 1318 0011 488B45E0 		movq	-32(%rbp), %rax
 1319 0015 488B4008 		movq	8(%rax), %rax
 1320 0019 488B00   		movq	(%rax), %rax
 1321 001c 4883C018 		addq	$24, %rax
 1322 0020 488B18   		movq	(%rax), %rbx
 1323 0023 488B45E0 		movq	-32(%rbp), %rax
 1324 0027 4889C7   		movq	%rax, %rdi
 1325 002a E8000000 		call	_ZNK5boost6system10error_code5valueEv
 1325      00
 1326 002f 89C2     		movl	%eax, %edx
 1327 0031 488B45E0 		movq	-32(%rbp), %rax
 1328 0035 488B4808 		movq	8(%rax), %rcx
 1329 0039 488B45E8 		movq	-24(%rbp), %rax
GAS LISTING /tmp/ccsIN87E.s 			page 96


 1330 003d 4889CE   		movq	%rcx, %rsi
 1331 0040 4889C7   		movq	%rax, %rdi
 1332 0043 FFD3     		call	*%rbx
 1333              	.LVL4:
 1334 0045 488B45E8 		movq	-24(%rbp), %rax
 1335 0049 4883C418 		addq	$24, %rsp
 1336 004d 5B       		popq	%rbx
 1337 004e 5D       		popq	%rbp
 1338              		.cfi_def_cfa 7, 8
 1339 004f C3       		ret
 1340              		.cfi_endproc
 1341              	.LFE4160:
 1343              		.section	.text._ZN5boost6system12system_errorD2Ev,"axG",@progbits,_ZN5boost6system12system_errorD5
 1344              		.align 2
 1345              		.weak	_ZN5boost6system12system_errorD2Ev
 1347              	_ZN5boost6system12system_errorD2Ev:
 1348              	.LFB4200:
 1349              		.file 12 "/usr/include/boost/system/system_error.hpp"
   1:/usr/include/boost/system/system_error.hpp **** //  Boost system_error.hpp  --------------------------------------------------//
   2:/usr/include/boost/system/system_error.hpp **** 
   3:/usr/include/boost/system/system_error.hpp **** //  Copyright Beman Dawes 2006
   4:/usr/include/boost/system/system_error.hpp **** 
   5:/usr/include/boost/system/system_error.hpp **** //  Distributed under the Boost Software License, Version 1.0. (See accompanying
   6:/usr/include/boost/system/system_error.hpp **** //  file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
   7:/usr/include/boost/system/system_error.hpp **** 
   8:/usr/include/boost/system/system_error.hpp **** #ifndef BOOST_SYSTEM_ERROR_HPP
   9:/usr/include/boost/system/system_error.hpp **** #define BOOST_SYSTEM_ERROR_HPP
  10:/usr/include/boost/system/system_error.hpp **** 
  11:/usr/include/boost/system/system_error.hpp **** #include <string>
  12:/usr/include/boost/system/system_error.hpp **** #include <stdexcept>
  13:/usr/include/boost/system/system_error.hpp **** #include <cassert>
  14:/usr/include/boost/system/system_error.hpp **** #include <boost/system/error_code.hpp>
  15:/usr/include/boost/system/system_error.hpp **** 
  16:/usr/include/boost/system/system_error.hpp **** namespace boost
  17:/usr/include/boost/system/system_error.hpp **** {
  18:/usr/include/boost/system/system_error.hpp ****   namespace system
  19:/usr/include/boost/system/system_error.hpp ****   {
  20:/usr/include/boost/system/system_error.hpp ****     //  class system_error  ------------------------------------------------------------//
  21:/usr/include/boost/system/system_error.hpp **** 
  22:/usr/include/boost/system/system_error.hpp ****     class BOOST_SYMBOL_VISIBLE system_error : public std::runtime_error
  23:/usr/include/boost/system/system_error.hpp ****     // BOOST_SYMBOL_VISIBLE is needed by GCC to ensure system_error thrown from a shared
  24:/usr/include/boost/system/system_error.hpp ****     // library can be caught. See svn.boost.org/trac/boost/ticket/3697
  25:/usr/include/boost/system/system_error.hpp ****     {
  26:/usr/include/boost/system/system_error.hpp ****     public:
  27:/usr/include/boost/system/system_error.hpp ****       system_error( error_code ec )
  28:/usr/include/boost/system/system_error.hpp ****           : std::runtime_error(""), m_error_code(ec) {}
  29:/usr/include/boost/system/system_error.hpp **** 
  30:/usr/include/boost/system/system_error.hpp ****       system_error( error_code ec, const std::string & what_arg )
  31:/usr/include/boost/system/system_error.hpp ****           : std::runtime_error(what_arg), m_error_code(ec) {}
  32:/usr/include/boost/system/system_error.hpp **** 
  33:/usr/include/boost/system/system_error.hpp ****       system_error( error_code ec, const char* what_arg )
  34:/usr/include/boost/system/system_error.hpp ****           : std::runtime_error(what_arg), m_error_code(ec) {}
  35:/usr/include/boost/system/system_error.hpp **** 
  36:/usr/include/boost/system/system_error.hpp ****       system_error( int ev, const error_category & ecat )
  37:/usr/include/boost/system/system_error.hpp ****           : std::runtime_error(""), m_error_code(ev,ecat) {}
  38:/usr/include/boost/system/system_error.hpp **** 
  39:/usr/include/boost/system/system_error.hpp ****       system_error( int ev, const error_category & ecat,
GAS LISTING /tmp/ccsIN87E.s 			page 97


  40:/usr/include/boost/system/system_error.hpp ****         const std::string & what_arg )
  41:/usr/include/boost/system/system_error.hpp ****           : std::runtime_error(what_arg), m_error_code(ev,ecat) {}
  42:/usr/include/boost/system/system_error.hpp **** 
  43:/usr/include/boost/system/system_error.hpp ****       system_error( int ev, const error_category & ecat,
  44:/usr/include/boost/system/system_error.hpp ****         const char * what_arg )
  45:/usr/include/boost/system/system_error.hpp ****           : std::runtime_error(what_arg), m_error_code(ev,ecat) {}
  46:/usr/include/boost/system/system_error.hpp **** 
  47:/usr/include/boost/system/system_error.hpp ****       virtual ~system_error() throw() {}
 1350              		.loc 12 47 0
 1351              		.cfi_startproc
 1352 0000 55       		pushq	%rbp
 1353              		.cfi_def_cfa_offset 16
 1354              		.cfi_offset 6, -16
 1355 0001 4889E5   		movq	%rsp, %rbp
 1356              		.cfi_def_cfa_register 6
 1357 0004 4883EC10 		subq	$16, %rsp
 1358 0008 48897DF8 		movq	%rdi, -8(%rbp)
 1359              	.LBB20:
 1360              		.loc 12 47 0
 1361 000c 488D1500 		leaq	16+_ZTVN5boost6system12system_errorE(%rip), %rdx
 1361      000000
 1362 0013 488B45F8 		movq	-8(%rbp), %rax
 1363 0017 488910   		movq	%rdx, (%rax)
 1364 001a 488B45F8 		movq	-8(%rbp), %rax
 1365 001e 4883C020 		addq	$32, %rax
 1366 0022 4889C7   		movq	%rax, %rdi
 1367 0025 E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@PLT
 1367      00
 1368 002a 488B45F8 		movq	-8(%rbp), %rax
 1369 002e 4889C7   		movq	%rax, %rdi
 1370 0031 E8000000 		call	_ZNSt13runtime_errorD2Ev@PLT
 1370      00
 1371              	.LBE20:
 1372 0036 90       		nop
 1373 0037 C9       		leave
 1374              		.cfi_def_cfa 7, 8
 1375 0038 C3       		ret
 1376              		.cfi_endproc
 1377              	.LFE4200:
 1379              		.weak	_ZN5boost6system12system_errorD1Ev
 1380              		.set	_ZN5boost6system12system_errorD1Ev,_ZN5boost6system12system_errorD2Ev
 1381              		.section	.text._ZN5boost6system12system_errorD0Ev,"axG",@progbits,_ZN5boost6system12system_errorD5
 1382              		.align 2
 1383              		.weak	_ZN5boost6system12system_errorD0Ev
 1385              	_ZN5boost6system12system_errorD0Ev:
 1386              	.LFB4202:
 1387              		.loc 12 47 0
 1388              		.cfi_startproc
 1389 0000 55       		pushq	%rbp
 1390              		.cfi_def_cfa_offset 16
 1391              		.cfi_offset 6, -16
 1392 0001 4889E5   		movq	%rsp, %rbp
 1393              		.cfi_def_cfa_register 6
 1394 0004 4883EC10 		subq	$16, %rsp
 1395 0008 48897DF8 		movq	%rdi, -8(%rbp)
 1396              		.loc 12 47 0
 1397 000c 488B45F8 		movq	-8(%rbp), %rax
GAS LISTING /tmp/ccsIN87E.s 			page 98


 1398 0010 4889C7   		movq	%rax, %rdi
 1399 0013 E8000000 		call	_ZN5boost6system12system_errorD1Ev
 1399      00
 1400 0018 488B45F8 		movq	-8(%rbp), %rax
 1401 001c BE400000 		movl	$64, %esi
 1401      00
 1402 0021 4889C7   		movq	%rax, %rdi
 1403 0024 E8000000 		call	_ZdlPvm@PLT
 1403      00
 1404 0029 C9       		leave
 1405              		.cfi_def_cfa 7, 8
 1406 002a C3       		ret
 1407              		.cfi_endproc
 1408              	.LFE4202:
 1410              		.section	.rodata
 1411              	.LC1:
 1412 000a 3A2000   		.string	": "
 1413              		.section	.text._ZNK5boost6system12system_error4whatEv,"axG",@progbits,_ZNK5boost6system12system_er
 1414              		.align 2
 1415              		.weak	_ZNK5boost6system12system_error4whatEv
 1417              	_ZNK5boost6system12system_error4whatEv:
 1418              	.LFB4204:
  48:/usr/include/boost/system/system_error.hpp **** 
  49:/usr/include/boost/system/system_error.hpp ****       const error_code &  code() const throw() { return m_error_code; }
  50:/usr/include/boost/system/system_error.hpp ****       const char *        what() const throw();
  51:/usr/include/boost/system/system_error.hpp **** 
  52:/usr/include/boost/system/system_error.hpp ****     private:
  53:/usr/include/boost/system/system_error.hpp ****       error_code           m_error_code;
  54:/usr/include/boost/system/system_error.hpp ****       mutable std::string  m_what;
  55:/usr/include/boost/system/system_error.hpp ****     };
  56:/usr/include/boost/system/system_error.hpp **** 
  57:/usr/include/boost/system/system_error.hpp ****     //  implementation  ------------------------------------------------------//
  58:/usr/include/boost/system/system_error.hpp **** 
  59:/usr/include/boost/system/system_error.hpp ****     inline const char * system_error::what() const throw()
  60:/usr/include/boost/system/system_error.hpp ****     // see http://www.boost.org/more/error_handling.html for lazy build rationale
  61:/usr/include/boost/system/system_error.hpp ****     {
 1419              		.loc 12 61 0
 1420              		.cfi_startproc
 1421              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 1422              		.cfi_lsda 0x1b,.LLSDA4204
 1423 0000 55       		pushq	%rbp
 1424              		.cfi_def_cfa_offset 16
 1425              		.cfi_offset 6, -16
 1426 0001 4889E5   		movq	%rsp, %rbp
 1427              		.cfi_def_cfa_register 6
 1428 0004 53       		pushq	%rbx
 1429 0005 4883EC38 		subq	$56, %rsp
 1430              		.cfi_offset 3, -24
 1431 0009 48897DC8 		movq	%rdi, -56(%rbp)
  62:/usr/include/boost/system/system_error.hpp ****       if ( m_what.empty() )
 1432              		.loc 12 62 0
 1433 000d 488B45C8 		movq	-56(%rbp), %rax
 1434 0011 4883C020 		addq	$32, %rax
 1435 0015 4889C7   		movq	%rax, %rdi
 1436 0018 E8000000 		call	_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5emptyEv@PLT
 1436      00
 1437 001d 84C0     		testb	%al, %al
GAS LISTING /tmp/ccsIN87E.s 			page 99


 1438 001f 0F848A00 		je	.L67
 1438      0000
  63:/usr/include/boost/system/system_error.hpp ****       {
  64:/usr/include/boost/system/system_error.hpp **** #ifndef BOOST_NO_EXCEPTIONS
  65:/usr/include/boost/system/system_error.hpp ****         try
  66:/usr/include/boost/system/system_error.hpp **** #endif
  67:/usr/include/boost/system/system_error.hpp ****         {
  68:/usr/include/boost/system/system_error.hpp ****           m_what = this->std::runtime_error::what();
 1439              		.loc 12 68 0
 1440 0025 488B45C8 		movq	-56(%rbp), %rax
 1441 0029 4889C7   		movq	%rax, %rdi
 1442 002c E8000000 		call	_ZNKSt13runtime_error4whatEv@PLT
 1442      00
 1443 0031 4889C2   		movq	%rax, %rdx
 1444 0034 488B45C8 		movq	-56(%rbp), %rax
 1445 0038 4883C020 		addq	$32, %rax
 1446 003c 4889D6   		movq	%rdx, %rsi
 1447 003f 4889C7   		movq	%rax, %rdi
 1448              	.LEHB4:
 1449 0042 E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEPKc@PLT
 1449      00
  69:/usr/include/boost/system/system_error.hpp ****           if ( !m_what.empty() ) m_what += ": ";
 1450              		.loc 12 69 0
 1451 0047 488B45C8 		movq	-56(%rbp), %rax
 1452 004b 4883C020 		addq	$32, %rax
 1453 004f 4889C7   		movq	%rax, %rdi
 1454 0052 E8000000 		call	_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5emptyEv@PLT
 1454      00
 1455 0057 83F001   		xorl	$1, %eax
 1456 005a 84C0     		testb	%al, %al
 1457 005c 7417     		je	.L68
 1458              		.loc 12 69 0 is_stmt 0 discriminator 1
 1459 005e 488B45C8 		movq	-56(%rbp), %rax
 1460 0062 4883C020 		addq	$32, %rax
 1461 0066 488D3500 		leaq	.LC1(%rip), %rsi
 1461      000000
 1462 006d 4889C7   		movq	%rax, %rdi
 1463 0070 E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLEPKc@PLT
 1463      00
 1464              	.L68:
  70:/usr/include/boost/system/system_error.hpp ****           m_what += m_error_code.message();
 1465              		.loc 12 70 0 is_stmt 1
 1466 0075 488B45C8 		movq	-56(%rbp), %rax
 1467 0079 488D5010 		leaq	16(%rax), %rdx
 1468 007d 488D45D0 		leaq	-48(%rbp), %rax
 1469 0081 4889D6   		movq	%rdx, %rsi
 1470 0084 4889C7   		movq	%rax, %rdi
 1471 0087 E8000000 		call	_ZNK5boost6system10error_code7messageB5cxx11Ev
 1471      00
 1472              	.LEHE4:
 1473              		.loc 12 70 0 is_stmt 0 discriminator 1
 1474 008c 488B45C8 		movq	-56(%rbp), %rax
 1475 0090 488D5020 		leaq	32(%rax), %rdx
 1476 0094 488D45D0 		leaq	-48(%rbp), %rax
 1477 0098 4889C6   		movq	%rax, %rsi
 1478 009b 4889D7   		movq	%rdx, %rdi
 1479              	.LEHB5:
GAS LISTING /tmp/ccsIN87E.s 			page 100


 1480 009e E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLERKS4_@PLT
 1480      00
 1481              	.LEHE5:
 1482              		.loc 12 70 0 discriminator 3
 1483 00a3 488D45D0 		leaq	-48(%rbp), %rax
 1484 00a7 4889C7   		movq	%rax, %rdi
 1485 00aa E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@PLT
 1485      00
 1486              	.L67:
  71:/usr/include/boost/system/system_error.hpp ****         }
  72:/usr/include/boost/system/system_error.hpp **** #ifndef BOOST_NO_EXCEPTIONS
  73:/usr/include/boost/system/system_error.hpp ****         catch (...) { return std::runtime_error::what(); }
  74:/usr/include/boost/system/system_error.hpp **** #endif
  75:/usr/include/boost/system/system_error.hpp ****       }
  76:/usr/include/boost/system/system_error.hpp ****       return m_what.c_str();
 1487              		.loc 12 76 0 is_stmt 1
 1488 00af 488B45C8 		movq	-56(%rbp), %rax
 1489 00b3 4883C020 		addq	$32, %rax
 1490 00b7 4889C7   		movq	%rax, %rdi
 1491 00ba E8000000 		call	_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv@PLT
 1491      00
 1492 00bf 4889C3   		movq	%rax, %rbx
 1493              	.L69:
 1494 00c2 4889D8   		movq	%rbx, %rax
 1495 00c5 EB48     		jmp	.L77
 1496              	.L75:
 1497 00c7 4889C3   		movq	%rax, %rbx
  70:/usr/include/boost/system/system_error.hpp ****           m_what += m_error_code.message();
 1498              		.loc 12 70 0
 1499 00ca 488D45D0 		leaq	-48(%rbp), %rax
 1500 00ce 4889C7   		movq	%rax, %rdi
 1501 00d1 E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@PLT
 1501      00
 1502 00d6 4889D8   		movq	%rbx, %rax
 1503 00d9 EB00     		jmp	.L71
 1504              	.L74:
 1505              	.L71:
  73:/usr/include/boost/system/system_error.hpp **** #endif
 1506              		.loc 12 73 0
 1507 00db 4889C7   		movq	%rax, %rdi
 1508 00de E8000000 		call	__cxa_begin_catch@PLT
 1508      00
 1509 00e3 488B45C8 		movq	-56(%rbp), %rax
 1510 00e7 4889C7   		movq	%rax, %rdi
 1511 00ea E8000000 		call	_ZNKSt13runtime_error4whatEv@PLT
 1511      00
 1512 00ef 4889C3   		movq	%rax, %rbx
 1513              	.LEHB6:
 1514 00f2 E8000000 		call	__cxa_end_catch@PLT
 1514      00
 1515              	.LEHE6:
 1516 00f7 EBC9     		jmp	.L69
 1517              	.L76:
 1518 00f9 4883FAFF 		cmpq	$-1, %rdx
 1519 00fd 7408     		je	.L73
 1520 00ff 4889C7   		movq	%rax, %rdi
 1521              	.LEHB7:
GAS LISTING /tmp/ccsIN87E.s 			page 101


 1522 0102 E8000000 		call	_Unwind_Resume@PLT
 1522      00
 1523              	.L73:
  59:/usr/include/boost/system/system_error.hpp ****     // see http://www.boost.org/more/error_handling.html for lazy build rationale
 1524              		.loc 12 59 0
 1525 0107 4889C7   		movq	%rax, %rdi
 1526 010a E8000000 		call	__cxa_call_unexpected@PLT
 1526      00
 1527              	.LEHE7:
 1528              	.L77:
  77:/usr/include/boost/system/system_error.hpp ****     }
 1529              		.loc 12 77 0
 1530 010f 4883C438 		addq	$56, %rsp
 1531 0113 5B       		popq	%rbx
 1532 0114 5D       		popq	%rbp
 1533              		.cfi_def_cfa 7, 8
 1534 0115 C3       		ret
 1535              		.cfi_endproc
 1536              	.LFE4204:
 1537              		.section	.gcc_except_table._ZNK5boost6system12system_error4whatEv,"aG",@progbits,_ZNK5boost6system
 1538              		.align 4
 1539              	.LLSDA4204:
 1540 0000 FF       		.byte	0xff
 1541 0001 9B       		.byte	0x9b
 1542 0002 25       		.uleb128 .LLSDATT4204-.LLSDATTD4204
 1543              	.LLSDATTD4204:
 1544 0003 01       		.byte	0x1
 1545 0004 16       		.uleb128 .LLSDACSE4204-.LLSDACSB4204
 1546              	.LLSDACSB4204:
 1547 0005 42       		.uleb128 .LEHB4-.LFB4204
 1548 0006 4A       		.uleb128 .LEHE4-.LEHB4
 1549 0007 DB01     		.uleb128 .L74-.LFB4204
 1550 0009 01       		.uleb128 0x1
 1551 000a 9E01     		.uleb128 .LEHB5-.LFB4204
 1552 000c 05       		.uleb128 .LEHE5-.LEHB5
 1553 000d C701     		.uleb128 .L75-.LFB4204
 1554 000f 03       		.uleb128 0x3
 1555 0010 F201     		.uleb128 .LEHB6-.LFB4204
 1556 0012 05       		.uleb128 .LEHE6-.LEHB6
 1557 0013 F901     		.uleb128 .L76-.LFB4204
 1558 0015 05       		.uleb128 0x5
 1559 0016 8202     		.uleb128 .LEHB7-.LFB4204
 1560 0018 0D       		.uleb128 .LEHE7-.LEHB7
 1561 0019 00       		.uleb128 0
 1562 001a 00       		.uleb128 0
 1563              	.LLSDACSE4204:
 1564 001b 01       		.byte	0x1
 1565 001c 00       		.byte	0
 1566 001d 00       		.byte	0
 1567 001e 7D       		.byte	0x7d
 1568 001f 7F       		.byte	0x7f
 1569 0020 00       		.byte	0
 1570 0021 000000   		.align 4
 1571 0024 00000000 		.long	0
 1572              	
 1573              	.LLSDATT4204:
 1574 0028 00       		.byte	0
GAS LISTING /tmp/ccsIN87E.s 			page 102


 1575              		.section	.text._ZNK5boost6system12system_error4whatEv,"axG",@progbits,_ZNK5boost6system12system_er
 1577              		.section	.rodata
 1580              	_ZN5boostL10defer_lockE:
 1581 000d 00       		.zero	1
 1584              	_ZN5boostL11try_to_lockE:
 1585 000e 00       		.zero	1
 1588              	_ZN5boostL10adopt_lockE:
 1589 000f 00       		.zero	1
 1590              		.local	_ZStL8__ioinit
 1591              		.comm	_ZStL8__ioinit,1,1
 1594              	_ZN5boost12placeholdersL2_1E:
 1595 0010 00       		.zero	1
 1598              	_ZN5boost12placeholdersL2_2E:
 1599 0011 00       		.zero	1
 1602              	_ZN5boost12placeholdersL2_3E:
 1603 0012 00       		.zero	1
 1606              	_ZN5boost12placeholdersL2_4E:
 1607 0013 00       		.zero	1
 1610              	_ZN5boost12placeholdersL2_5E:
 1611 0014 00       		.zero	1
 1614              	_ZN5boost12placeholdersL2_6E:
 1615 0015 00       		.zero	1
 1618              	_ZN5boost12placeholdersL2_7E:
 1619 0016 00       		.zero	1
 1622              	_ZN5boost12placeholdersL2_8E:
 1623 0017 00       		.zero	1
 1626              	_ZN5boost12placeholdersL2_9E:
 1627 0018 00       		.zero	1
 1628 0019 000000   		.align 4
 1631              	_ZN5boost6detail16static_log2_implL6n_zeroE:
 1632 001c 10000000 		.long	16
 1633              		.align 4
 1636              	_ZN5boost6detail16static_log2_implL9initial_nE:
 1637 0020 20000000 		.long	32
 1638              		.section	.text._ZN5boost13function_baseC2Ev,"axG",@progbits,_ZN5boost13function_baseC5Ev,comdat
 1639              		.align 2
 1640              		.weak	_ZN5boost13function_baseC2Ev
 1642              	_ZN5boost13function_baseC2Ev:
 1643              	.LFB7759:
 1644              		.file 13 "/usr/include/boost/function/function_base.hpp"
   1:/usr/include/boost/function/function_base.hpp **** // Boost.Function library
   2:/usr/include/boost/function/function_base.hpp **** 
   3:/usr/include/boost/function/function_base.hpp **** //  Copyright Douglas Gregor 2001-2006
   4:/usr/include/boost/function/function_base.hpp **** //  Copyright Emil Dotchevski 2007
   5:/usr/include/boost/function/function_base.hpp **** //  Use, modification and distribution is subject to the Boost Software License, Version 1.0.
   6:/usr/include/boost/function/function_base.hpp **** //  (See accompanying file LICENSE_1_0.txt or copy at
   7:/usr/include/boost/function/function_base.hpp **** //  http://www.boost.org/LICENSE_1_0.txt)
   8:/usr/include/boost/function/function_base.hpp **** 
   9:/usr/include/boost/function/function_base.hpp **** // For more information, see http://www.boost.org
  10:/usr/include/boost/function/function_base.hpp **** 
  11:/usr/include/boost/function/function_base.hpp **** #ifndef BOOST_FUNCTION_BASE_HEADER
  12:/usr/include/boost/function/function_base.hpp **** #define BOOST_FUNCTION_BASE_HEADER
  13:/usr/include/boost/function/function_base.hpp **** 
  14:/usr/include/boost/function/function_base.hpp **** #include <stdexcept>
  15:/usr/include/boost/function/function_base.hpp **** #include <string>
  16:/usr/include/boost/function/function_base.hpp **** #include <memory>
  17:/usr/include/boost/function/function_base.hpp **** #include <new>
GAS LISTING /tmp/ccsIN87E.s 			page 103


  18:/usr/include/boost/function/function_base.hpp **** #include <boost/config.hpp>
  19:/usr/include/boost/function/function_base.hpp **** #include <boost/assert.hpp>
  20:/usr/include/boost/function/function_base.hpp **** #include <boost/integer.hpp>
  21:/usr/include/boost/function/function_base.hpp **** #include <boost/type_index.hpp>
  22:/usr/include/boost/function/function_base.hpp **** #include <boost/type_traits/has_trivial_copy.hpp>
  23:/usr/include/boost/function/function_base.hpp **** #include <boost/type_traits/has_trivial_destructor.hpp>
  24:/usr/include/boost/function/function_base.hpp **** #include <boost/type_traits/is_const.hpp>
  25:/usr/include/boost/function/function_base.hpp **** #include <boost/type_traits/is_integral.hpp>
  26:/usr/include/boost/function/function_base.hpp **** #include <boost/type_traits/is_volatile.hpp>
  27:/usr/include/boost/function/function_base.hpp **** #include <boost/type_traits/composite_traits.hpp>
  28:/usr/include/boost/function/function_base.hpp **** #include <boost/ref.hpp>
  29:/usr/include/boost/function/function_base.hpp **** #include <boost/mpl/if.hpp>
  30:/usr/include/boost/function/function_base.hpp **** #include <boost/detail/workaround.hpp>
  31:/usr/include/boost/function/function_base.hpp **** #include <boost/type_traits/alignment_of.hpp>
  32:/usr/include/boost/function/function_base.hpp **** #ifndef BOOST_NO_SFINAE
  33:/usr/include/boost/function/function_base.hpp **** #  include "boost/utility/enable_if.hpp"
  34:/usr/include/boost/function/function_base.hpp **** #else
  35:/usr/include/boost/function/function_base.hpp **** #  include "boost/mpl/bool.hpp"
  36:/usr/include/boost/function/function_base.hpp **** #endif
  37:/usr/include/boost/function/function_base.hpp **** #include <boost/function_equal.hpp>
  38:/usr/include/boost/function/function_base.hpp **** #include <boost/function/function_fwd.hpp>
  39:/usr/include/boost/function/function_base.hpp **** 
  40:/usr/include/boost/function/function_base.hpp **** #if defined(BOOST_MSVC)
  41:/usr/include/boost/function/function_base.hpp **** #   pragma warning( push )
  42:/usr/include/boost/function/function_base.hpp **** #   pragma warning( disable : 4793 ) // complaint about native code generation
  43:/usr/include/boost/function/function_base.hpp **** #   pragma warning( disable : 4127 ) // "conditional expression is constant"
  44:/usr/include/boost/function/function_base.hpp **** #endif
  45:/usr/include/boost/function/function_base.hpp **** 
  46:/usr/include/boost/function/function_base.hpp **** #if defined(__ICL) && __ICL <= 600 || defined(__MWERKS__) && __MWERKS__ < 0x2406 && !defined(BOOST_
  47:/usr/include/boost/function/function_base.hpp **** #  define BOOST_FUNCTION_TARGET_FIX(x) x
  48:/usr/include/boost/function/function_base.hpp **** #else
  49:/usr/include/boost/function/function_base.hpp **** #  define BOOST_FUNCTION_TARGET_FIX(x)
  50:/usr/include/boost/function/function_base.hpp **** #endif // __ICL etc
  51:/usr/include/boost/function/function_base.hpp **** 
  52:/usr/include/boost/function/function_base.hpp **** #  define BOOST_FUNCTION_ENABLE_IF_NOT_INTEGRAL(Functor,Type)              \
  53:/usr/include/boost/function/function_base.hpp ****       typename ::boost::enable_if_c<          \
  54:/usr/include/boost/function/function_base.hpp ****                            !(::boost::is_integral<Functor>::value), \
  55:/usr/include/boost/function/function_base.hpp ****                            Type>::type
  56:/usr/include/boost/function/function_base.hpp **** 
  57:/usr/include/boost/function/function_base.hpp **** namespace boost {
  58:/usr/include/boost/function/function_base.hpp ****   namespace detail {
  59:/usr/include/boost/function/function_base.hpp ****     namespace function {
  60:/usr/include/boost/function/function_base.hpp ****       class X;
  61:/usr/include/boost/function/function_base.hpp **** 
  62:/usr/include/boost/function/function_base.hpp ****       /**
  63:/usr/include/boost/function/function_base.hpp ****        * A buffer used to store small function objects in
  64:/usr/include/boost/function/function_base.hpp ****        * boost::function. It is a union containing function pointers,
  65:/usr/include/boost/function/function_base.hpp ****        * object pointers, and a structure that resembles a bound
  66:/usr/include/boost/function/function_base.hpp ****        * member function pointer.
  67:/usr/include/boost/function/function_base.hpp ****        */
  68:/usr/include/boost/function/function_base.hpp ****       union function_buffer_members
  69:/usr/include/boost/function/function_base.hpp ****       {
  70:/usr/include/boost/function/function_base.hpp ****         // For pointers to function objects
  71:/usr/include/boost/function/function_base.hpp ****         typedef void* obj_ptr_t;
  72:/usr/include/boost/function/function_base.hpp ****         mutable obj_ptr_t obj_ptr;
  73:/usr/include/boost/function/function_base.hpp **** 
  74:/usr/include/boost/function/function_base.hpp ****         // For pointers to std::type_info objects
GAS LISTING /tmp/ccsIN87E.s 			page 104


  75:/usr/include/boost/function/function_base.hpp ****         struct type_t {
  76:/usr/include/boost/function/function_base.hpp ****           // (get_functor_type_tag, check_functor_type_tag).
  77:/usr/include/boost/function/function_base.hpp ****           const boost::typeindex::type_info* type;
  78:/usr/include/boost/function/function_base.hpp **** 
  79:/usr/include/boost/function/function_base.hpp ****           // Whether the type is const-qualified.
  80:/usr/include/boost/function/function_base.hpp ****           bool const_qualified;
  81:/usr/include/boost/function/function_base.hpp ****           // Whether the type is volatile-qualified.
  82:/usr/include/boost/function/function_base.hpp ****           bool volatile_qualified;
  83:/usr/include/boost/function/function_base.hpp ****         } type;
  84:/usr/include/boost/function/function_base.hpp **** 
  85:/usr/include/boost/function/function_base.hpp ****         // For function pointers of all kinds
  86:/usr/include/boost/function/function_base.hpp ****         typedef void (*func_ptr_t)();
  87:/usr/include/boost/function/function_base.hpp ****         mutable func_ptr_t func_ptr;
  88:/usr/include/boost/function/function_base.hpp **** 
  89:/usr/include/boost/function/function_base.hpp ****         // For bound member pointers
  90:/usr/include/boost/function/function_base.hpp ****         struct bound_memfunc_ptr_t {
  91:/usr/include/boost/function/function_base.hpp ****           void (X::*memfunc_ptr)(int);
  92:/usr/include/boost/function/function_base.hpp ****           void* obj_ptr;
  93:/usr/include/boost/function/function_base.hpp ****         } bound_memfunc_ptr;
  94:/usr/include/boost/function/function_base.hpp **** 
  95:/usr/include/boost/function/function_base.hpp ****         // For references to function objects. We explicitly keep
  96:/usr/include/boost/function/function_base.hpp ****         // track of the cv-qualifiers on the object referenced.
  97:/usr/include/boost/function/function_base.hpp ****         struct obj_ref_t {
  98:/usr/include/boost/function/function_base.hpp ****           mutable void* obj_ptr;
  99:/usr/include/boost/function/function_base.hpp ****           bool is_const_qualified;
 100:/usr/include/boost/function/function_base.hpp ****           bool is_volatile_qualified;
 101:/usr/include/boost/function/function_base.hpp ****         } obj_ref;
 102:/usr/include/boost/function/function_base.hpp ****       };
 103:/usr/include/boost/function/function_base.hpp **** 
 104:/usr/include/boost/function/function_base.hpp ****       union function_buffer
 105:/usr/include/boost/function/function_base.hpp ****       {
 106:/usr/include/boost/function/function_base.hpp ****         // Type-specific union members
 107:/usr/include/boost/function/function_base.hpp ****         mutable function_buffer_members members;
 108:/usr/include/boost/function/function_base.hpp **** 
 109:/usr/include/boost/function/function_base.hpp ****         // To relax aliasing constraints
 110:/usr/include/boost/function/function_base.hpp ****         mutable char data[sizeof(function_buffer_members)];
 111:/usr/include/boost/function/function_base.hpp ****       };
 112:/usr/include/boost/function/function_base.hpp **** 
 113:/usr/include/boost/function/function_base.hpp ****       /**
 114:/usr/include/boost/function/function_base.hpp ****        * The unusable class is a placeholder for unused function arguments
 115:/usr/include/boost/function/function_base.hpp ****        * It is also completely unusable except that it constructable from
 116:/usr/include/boost/function/function_base.hpp ****        * anything. This helps compilers without partial specialization to
 117:/usr/include/boost/function/function_base.hpp ****        * handle Boost.Function objects returning void.
 118:/usr/include/boost/function/function_base.hpp ****        */
 119:/usr/include/boost/function/function_base.hpp ****       struct unusable
 120:/usr/include/boost/function/function_base.hpp ****       {
 121:/usr/include/boost/function/function_base.hpp ****         unusable() {}
 122:/usr/include/boost/function/function_base.hpp ****         template<typename T> unusable(const T&) {}
 123:/usr/include/boost/function/function_base.hpp ****       };
 124:/usr/include/boost/function/function_base.hpp **** 
 125:/usr/include/boost/function/function_base.hpp ****       /* Determine the return type. This supports compilers that do not support
 126:/usr/include/boost/function/function_base.hpp ****        * void returns or partial specialization by silently changing the return
 127:/usr/include/boost/function/function_base.hpp ****        * type to "unusable".
 128:/usr/include/boost/function/function_base.hpp ****        */
 129:/usr/include/boost/function/function_base.hpp ****       template<typename T> struct function_return_type { typedef T type; };
 130:/usr/include/boost/function/function_base.hpp **** 
 131:/usr/include/boost/function/function_base.hpp ****       template<>
GAS LISTING /tmp/ccsIN87E.s 			page 105


 132:/usr/include/boost/function/function_base.hpp ****       struct function_return_type<void>
 133:/usr/include/boost/function/function_base.hpp ****       {
 134:/usr/include/boost/function/function_base.hpp ****         typedef unusable type;
 135:/usr/include/boost/function/function_base.hpp ****       };
 136:/usr/include/boost/function/function_base.hpp **** 
 137:/usr/include/boost/function/function_base.hpp ****       // The operation type to perform on the given functor/function pointer
 138:/usr/include/boost/function/function_base.hpp ****       enum functor_manager_operation_type {
 139:/usr/include/boost/function/function_base.hpp ****         clone_functor_tag,
 140:/usr/include/boost/function/function_base.hpp ****         move_functor_tag,
 141:/usr/include/boost/function/function_base.hpp ****         destroy_functor_tag,
 142:/usr/include/boost/function/function_base.hpp ****         check_functor_type_tag,
 143:/usr/include/boost/function/function_base.hpp ****         get_functor_type_tag
 144:/usr/include/boost/function/function_base.hpp ****       };
 145:/usr/include/boost/function/function_base.hpp **** 
 146:/usr/include/boost/function/function_base.hpp ****       // Tags used to decide between different types of functions
 147:/usr/include/boost/function/function_base.hpp ****       struct function_ptr_tag {};
 148:/usr/include/boost/function/function_base.hpp ****       struct function_obj_tag {};
 149:/usr/include/boost/function/function_base.hpp ****       struct member_ptr_tag {};
 150:/usr/include/boost/function/function_base.hpp ****       struct function_obj_ref_tag {};
 151:/usr/include/boost/function/function_base.hpp **** 
 152:/usr/include/boost/function/function_base.hpp ****       template<typename F>
 153:/usr/include/boost/function/function_base.hpp ****       class get_function_tag
 154:/usr/include/boost/function/function_base.hpp ****       {
 155:/usr/include/boost/function/function_base.hpp ****         typedef typename mpl::if_c<(is_pointer<F>::value),
 156:/usr/include/boost/function/function_base.hpp ****                                    function_ptr_tag,
 157:/usr/include/boost/function/function_base.hpp ****                                    function_obj_tag>::type ptr_or_obj_tag;
 158:/usr/include/boost/function/function_base.hpp **** 
 159:/usr/include/boost/function/function_base.hpp ****         typedef typename mpl::if_c<(is_member_pointer<F>::value),
 160:/usr/include/boost/function/function_base.hpp ****                                    member_ptr_tag,
 161:/usr/include/boost/function/function_base.hpp ****                                    ptr_or_obj_tag>::type ptr_or_obj_or_mem_tag;
 162:/usr/include/boost/function/function_base.hpp **** 
 163:/usr/include/boost/function/function_base.hpp ****         typedef typename mpl::if_c<(is_reference_wrapper<F>::value),
 164:/usr/include/boost/function/function_base.hpp ****                                    function_obj_ref_tag,
 165:/usr/include/boost/function/function_base.hpp ****                                    ptr_or_obj_or_mem_tag>::type or_ref_tag;
 166:/usr/include/boost/function/function_base.hpp **** 
 167:/usr/include/boost/function/function_base.hpp ****       public:
 168:/usr/include/boost/function/function_base.hpp ****         typedef or_ref_tag type;
 169:/usr/include/boost/function/function_base.hpp ****       };
 170:/usr/include/boost/function/function_base.hpp **** 
 171:/usr/include/boost/function/function_base.hpp ****       // The trivial manager does nothing but return the same pointer (if we
 172:/usr/include/boost/function/function_base.hpp ****       // are cloning) or return the null pointer (if we are deleting).
 173:/usr/include/boost/function/function_base.hpp ****       template<typename F>
 174:/usr/include/boost/function/function_base.hpp ****       struct reference_manager
 175:/usr/include/boost/function/function_base.hpp ****       {
 176:/usr/include/boost/function/function_base.hpp ****         static inline void
 177:/usr/include/boost/function/function_base.hpp ****         manage(const function_buffer& in_buffer, function_buffer& out_buffer,
 178:/usr/include/boost/function/function_base.hpp ****                functor_manager_operation_type op)
 179:/usr/include/boost/function/function_base.hpp ****         {
 180:/usr/include/boost/function/function_base.hpp ****           switch (op) {
 181:/usr/include/boost/function/function_base.hpp ****           case clone_functor_tag:
 182:/usr/include/boost/function/function_base.hpp ****             out_buffer.members.obj_ref = in_buffer.members.obj_ref;
 183:/usr/include/boost/function/function_base.hpp ****             return;
 184:/usr/include/boost/function/function_base.hpp **** 
 185:/usr/include/boost/function/function_base.hpp ****           case move_functor_tag:
 186:/usr/include/boost/function/function_base.hpp ****             out_buffer.members.obj_ref = in_buffer.members.obj_ref;
 187:/usr/include/boost/function/function_base.hpp ****             in_buffer.members.obj_ref.obj_ptr = 0;
 188:/usr/include/boost/function/function_base.hpp ****             return;
GAS LISTING /tmp/ccsIN87E.s 			page 106


 189:/usr/include/boost/function/function_base.hpp **** 
 190:/usr/include/boost/function/function_base.hpp ****           case destroy_functor_tag:
 191:/usr/include/boost/function/function_base.hpp ****             out_buffer.members.obj_ref.obj_ptr = 0;
 192:/usr/include/boost/function/function_base.hpp ****             return;
 193:/usr/include/boost/function/function_base.hpp **** 
 194:/usr/include/boost/function/function_base.hpp ****           case check_functor_type_tag:
 195:/usr/include/boost/function/function_base.hpp ****             {
 196:/usr/include/boost/function/function_base.hpp ****               // Check whether we have the same type. We can add
 197:/usr/include/boost/function/function_base.hpp ****               // cv-qualifiers, but we can't take them away.
 198:/usr/include/boost/function/function_base.hpp ****               if (*out_buffer.members.type.type == boost::typeindex::type_id<F>()
 199:/usr/include/boost/function/function_base.hpp ****                   && (!in_buffer.members.obj_ref.is_const_qualified
 200:/usr/include/boost/function/function_base.hpp ****                       || out_buffer.members.type.const_qualified)
 201:/usr/include/boost/function/function_base.hpp ****                   && (!in_buffer.members.obj_ref.is_volatile_qualified
 202:/usr/include/boost/function/function_base.hpp ****                       || out_buffer.members.type.volatile_qualified))
 203:/usr/include/boost/function/function_base.hpp ****                 out_buffer.members.obj_ptr = in_buffer.members.obj_ref.obj_ptr;
 204:/usr/include/boost/function/function_base.hpp ****               else
 205:/usr/include/boost/function/function_base.hpp ****                 out_buffer.members.obj_ptr = 0;
 206:/usr/include/boost/function/function_base.hpp ****             }
 207:/usr/include/boost/function/function_base.hpp ****             return;
 208:/usr/include/boost/function/function_base.hpp **** 
 209:/usr/include/boost/function/function_base.hpp ****           case get_functor_type_tag:
 210:/usr/include/boost/function/function_base.hpp ****             out_buffer.members.type.type = &boost::typeindex::type_id<F>().type_info();
 211:/usr/include/boost/function/function_base.hpp ****             out_buffer.members.type.const_qualified = in_buffer.members.obj_ref.is_const_qualified;
 212:/usr/include/boost/function/function_base.hpp ****             out_buffer.members.type.volatile_qualified = in_buffer.members.obj_ref.is_volatile_qual
 213:/usr/include/boost/function/function_base.hpp ****             return;
 214:/usr/include/boost/function/function_base.hpp ****           }
 215:/usr/include/boost/function/function_base.hpp ****         }
 216:/usr/include/boost/function/function_base.hpp ****       };
 217:/usr/include/boost/function/function_base.hpp **** 
 218:/usr/include/boost/function/function_base.hpp ****       /**
 219:/usr/include/boost/function/function_base.hpp ****        * Determine if boost::function can use the small-object
 220:/usr/include/boost/function/function_base.hpp ****        * optimization with the function object type F.
 221:/usr/include/boost/function/function_base.hpp ****        */
 222:/usr/include/boost/function/function_base.hpp ****       template<typename F>
 223:/usr/include/boost/function/function_base.hpp ****       struct function_allows_small_object_optimization
 224:/usr/include/boost/function/function_base.hpp ****       {
 225:/usr/include/boost/function/function_base.hpp ****         BOOST_STATIC_CONSTANT
 226:/usr/include/boost/function/function_base.hpp ****           (bool,
 227:/usr/include/boost/function/function_base.hpp ****            value = ((sizeof(F) <= sizeof(function_buffer) &&
 228:/usr/include/boost/function/function_base.hpp ****                      (alignment_of<function_buffer>::value
 229:/usr/include/boost/function/function_base.hpp ****                       % alignment_of<F>::value == 0))));
 230:/usr/include/boost/function/function_base.hpp ****       };
 231:/usr/include/boost/function/function_base.hpp **** 
 232:/usr/include/boost/function/function_base.hpp ****       template <typename F,typename A>
 233:/usr/include/boost/function/function_base.hpp ****       struct functor_wrapper: public F, public A
 234:/usr/include/boost/function/function_base.hpp ****       {
 235:/usr/include/boost/function/function_base.hpp ****         functor_wrapper( F f, A a ):
 236:/usr/include/boost/function/function_base.hpp ****           F(f),
 237:/usr/include/boost/function/function_base.hpp ****           A(a)
 238:/usr/include/boost/function/function_base.hpp ****         {
 239:/usr/include/boost/function/function_base.hpp ****         }
 240:/usr/include/boost/function/function_base.hpp **** 
 241:/usr/include/boost/function/function_base.hpp ****         functor_wrapper(const functor_wrapper& f) :
 242:/usr/include/boost/function/function_base.hpp ****           F(static_cast<const F&>(f)),
 243:/usr/include/boost/function/function_base.hpp ****           A(static_cast<const A&>(f))
 244:/usr/include/boost/function/function_base.hpp ****         {
 245:/usr/include/boost/function/function_base.hpp ****         }
GAS LISTING /tmp/ccsIN87E.s 			page 107


 246:/usr/include/boost/function/function_base.hpp ****       };
 247:/usr/include/boost/function/function_base.hpp **** 
 248:/usr/include/boost/function/function_base.hpp ****       /**
 249:/usr/include/boost/function/function_base.hpp ****        * The functor_manager class contains a static function "manage" which
 250:/usr/include/boost/function/function_base.hpp ****        * can clone or destroy the given function/function object pointer.
 251:/usr/include/boost/function/function_base.hpp ****        */
 252:/usr/include/boost/function/function_base.hpp ****       template<typename Functor>
 253:/usr/include/boost/function/function_base.hpp ****       struct functor_manager_common
 254:/usr/include/boost/function/function_base.hpp ****       {
 255:/usr/include/boost/function/function_base.hpp ****         typedef Functor functor_type;
 256:/usr/include/boost/function/function_base.hpp **** 
 257:/usr/include/boost/function/function_base.hpp ****         // Function pointers
 258:/usr/include/boost/function/function_base.hpp ****         static inline void
 259:/usr/include/boost/function/function_base.hpp ****         manage_ptr(const function_buffer& in_buffer, function_buffer& out_buffer,
 260:/usr/include/boost/function/function_base.hpp ****                 functor_manager_operation_type op)
 261:/usr/include/boost/function/function_base.hpp ****         {
 262:/usr/include/boost/function/function_base.hpp ****           if (op == clone_functor_tag)
 263:/usr/include/boost/function/function_base.hpp ****             out_buffer.members.func_ptr = in_buffer.members.func_ptr;
 264:/usr/include/boost/function/function_base.hpp ****           else if (op == move_functor_tag) {
 265:/usr/include/boost/function/function_base.hpp ****             out_buffer.members.func_ptr = in_buffer.members.func_ptr;
 266:/usr/include/boost/function/function_base.hpp ****             in_buffer.members.func_ptr = 0;
 267:/usr/include/boost/function/function_base.hpp ****           } else if (op == destroy_functor_tag)
 268:/usr/include/boost/function/function_base.hpp ****             out_buffer.members.func_ptr = 0;
 269:/usr/include/boost/function/function_base.hpp ****           else if (op == check_functor_type_tag) {
 270:/usr/include/boost/function/function_base.hpp ****             if (*out_buffer.members.type.type == boost::typeindex::type_id<Functor>())
 271:/usr/include/boost/function/function_base.hpp ****               out_buffer.members.obj_ptr = &in_buffer.members.func_ptr;
 272:/usr/include/boost/function/function_base.hpp ****             else
 273:/usr/include/boost/function/function_base.hpp ****               out_buffer.members.obj_ptr = 0;
 274:/usr/include/boost/function/function_base.hpp ****           } else /* op == get_functor_type_tag */ {
 275:/usr/include/boost/function/function_base.hpp ****             out_buffer.members.type.type = &boost::typeindex::type_id<Functor>().type_info();
 276:/usr/include/boost/function/function_base.hpp ****             out_buffer.members.type.const_qualified = false;
 277:/usr/include/boost/function/function_base.hpp ****             out_buffer.members.type.volatile_qualified = false;
 278:/usr/include/boost/function/function_base.hpp ****           }
 279:/usr/include/boost/function/function_base.hpp ****         }
 280:/usr/include/boost/function/function_base.hpp **** 
 281:/usr/include/boost/function/function_base.hpp ****         // Function objects that fit in the small-object buffer.
 282:/usr/include/boost/function/function_base.hpp ****         static inline void
 283:/usr/include/boost/function/function_base.hpp ****         manage_small(const function_buffer& in_buffer, function_buffer& out_buffer,
 284:/usr/include/boost/function/function_base.hpp ****                 functor_manager_operation_type op)
 285:/usr/include/boost/function/function_base.hpp ****         {
 286:/usr/include/boost/function/function_base.hpp ****           if (op == clone_functor_tag || op == move_functor_tag) {
 287:/usr/include/boost/function/function_base.hpp ****             const functor_type* in_functor =
 288:/usr/include/boost/function/function_base.hpp ****               reinterpret_cast<const functor_type*>(in_buffer.data);
 289:/usr/include/boost/function/function_base.hpp ****             new (reinterpret_cast<void*>(out_buffer.data)) functor_type(*in_functor);
 290:/usr/include/boost/function/function_base.hpp **** 
 291:/usr/include/boost/function/function_base.hpp ****             if (op == move_functor_tag) {
 292:/usr/include/boost/function/function_base.hpp ****               functor_type* f = reinterpret_cast<functor_type*>(in_buffer.data);
 293:/usr/include/boost/function/function_base.hpp ****               (void)f; // suppress warning about the value of f not being used (MSVC)
 294:/usr/include/boost/function/function_base.hpp ****               f->~Functor();
 295:/usr/include/boost/function/function_base.hpp ****             }
 296:/usr/include/boost/function/function_base.hpp ****           } else if (op == destroy_functor_tag) {
 297:/usr/include/boost/function/function_base.hpp ****             // Some compilers (Borland, vc6, ...) are unhappy with ~functor_type.
 298:/usr/include/boost/function/function_base.hpp ****              functor_type* f = reinterpret_cast<functor_type*>(out_buffer.data);
 299:/usr/include/boost/function/function_base.hpp ****              (void)f; // suppress warning about the value of f not being used (MSVC)
 300:/usr/include/boost/function/function_base.hpp ****              f->~Functor();
 301:/usr/include/boost/function/function_base.hpp ****           } else if (op == check_functor_type_tag) {
 302:/usr/include/boost/function/function_base.hpp ****              if (*out_buffer.members.type.type == boost::typeindex::type_id<Functor>())
GAS LISTING /tmp/ccsIN87E.s 			page 108


 303:/usr/include/boost/function/function_base.hpp ****               out_buffer.members.obj_ptr = in_buffer.data;
 304:/usr/include/boost/function/function_base.hpp ****             else
 305:/usr/include/boost/function/function_base.hpp ****               out_buffer.members.obj_ptr = 0;
 306:/usr/include/boost/function/function_base.hpp ****           } else /* op == get_functor_type_tag */ {
 307:/usr/include/boost/function/function_base.hpp ****             out_buffer.members.type.type = &boost::typeindex::type_id<Functor>().type_info();
 308:/usr/include/boost/function/function_base.hpp ****             out_buffer.members.type.const_qualified = false;
 309:/usr/include/boost/function/function_base.hpp ****             out_buffer.members.type.volatile_qualified = false;
 310:/usr/include/boost/function/function_base.hpp ****           }
 311:/usr/include/boost/function/function_base.hpp ****         }
 312:/usr/include/boost/function/function_base.hpp ****       };
 313:/usr/include/boost/function/function_base.hpp **** 
 314:/usr/include/boost/function/function_base.hpp ****       template<typename Functor>
 315:/usr/include/boost/function/function_base.hpp ****       struct functor_manager
 316:/usr/include/boost/function/function_base.hpp ****       {
 317:/usr/include/boost/function/function_base.hpp ****       private:
 318:/usr/include/boost/function/function_base.hpp ****         typedef Functor functor_type;
 319:/usr/include/boost/function/function_base.hpp **** 
 320:/usr/include/boost/function/function_base.hpp ****         // Function pointers
 321:/usr/include/boost/function/function_base.hpp ****         static inline void
 322:/usr/include/boost/function/function_base.hpp ****         manager(const function_buffer& in_buffer, function_buffer& out_buffer,
 323:/usr/include/boost/function/function_base.hpp ****                 functor_manager_operation_type op, function_ptr_tag)
 324:/usr/include/boost/function/function_base.hpp ****         {
 325:/usr/include/boost/function/function_base.hpp ****           functor_manager_common<Functor>::manage_ptr(in_buffer,out_buffer,op);
 326:/usr/include/boost/function/function_base.hpp ****         }
 327:/usr/include/boost/function/function_base.hpp **** 
 328:/usr/include/boost/function/function_base.hpp ****         // Function objects that fit in the small-object buffer.
 329:/usr/include/boost/function/function_base.hpp ****         static inline void
 330:/usr/include/boost/function/function_base.hpp ****         manager(const function_buffer& in_buffer, function_buffer& out_buffer,
 331:/usr/include/boost/function/function_base.hpp ****                 functor_manager_operation_type op, mpl::true_)
 332:/usr/include/boost/function/function_base.hpp ****         {
 333:/usr/include/boost/function/function_base.hpp ****           functor_manager_common<Functor>::manage_small(in_buffer,out_buffer,op);
 334:/usr/include/boost/function/function_base.hpp ****         }
 335:/usr/include/boost/function/function_base.hpp **** 
 336:/usr/include/boost/function/function_base.hpp ****         // Function objects that require heap allocation
 337:/usr/include/boost/function/function_base.hpp ****         static inline void
 338:/usr/include/boost/function/function_base.hpp ****         manager(const function_buffer& in_buffer, function_buffer& out_buffer,
 339:/usr/include/boost/function/function_base.hpp ****                 functor_manager_operation_type op, mpl::false_)
 340:/usr/include/boost/function/function_base.hpp ****         {
 341:/usr/include/boost/function/function_base.hpp ****           if (op == clone_functor_tag) {
 342:/usr/include/boost/function/function_base.hpp ****             // Clone the functor
 343:/usr/include/boost/function/function_base.hpp ****             // GCC 2.95.3 gets the CV qualifiers wrong here, so we
 344:/usr/include/boost/function/function_base.hpp ****             // can't do the static_cast that we should do.
 345:/usr/include/boost/function/function_base.hpp ****             // jewillco: Changing this to static_cast because GCC 2.95.3 is
 346:/usr/include/boost/function/function_base.hpp ****             // obsolete.
 347:/usr/include/boost/function/function_base.hpp ****             const functor_type* f =
 348:/usr/include/boost/function/function_base.hpp ****               static_cast<const functor_type*>(in_buffer.members.obj_ptr);
 349:/usr/include/boost/function/function_base.hpp ****             functor_type* new_f = new functor_type(*f);
 350:/usr/include/boost/function/function_base.hpp ****             out_buffer.members.obj_ptr = new_f;
 351:/usr/include/boost/function/function_base.hpp ****           } else if (op == move_functor_tag) {
 352:/usr/include/boost/function/function_base.hpp ****             out_buffer.members.obj_ptr = in_buffer.members.obj_ptr;
 353:/usr/include/boost/function/function_base.hpp ****             in_buffer.members.obj_ptr = 0;
 354:/usr/include/boost/function/function_base.hpp ****           } else if (op == destroy_functor_tag) {
 355:/usr/include/boost/function/function_base.hpp ****             /* Cast from the void pointer to the functor pointer type */
 356:/usr/include/boost/function/function_base.hpp ****             functor_type* f =
 357:/usr/include/boost/function/function_base.hpp ****               static_cast<functor_type*>(out_buffer.members.obj_ptr);
 358:/usr/include/boost/function/function_base.hpp ****             delete f;
 359:/usr/include/boost/function/function_base.hpp ****             out_buffer.members.obj_ptr = 0;
GAS LISTING /tmp/ccsIN87E.s 			page 109


 360:/usr/include/boost/function/function_base.hpp ****           } else if (op == check_functor_type_tag) {
 361:/usr/include/boost/function/function_base.hpp ****             if (*out_buffer.members.type.type == boost::typeindex::type_id<Functor>())
 362:/usr/include/boost/function/function_base.hpp ****               out_buffer.members.obj_ptr = in_buffer.members.obj_ptr;
 363:/usr/include/boost/function/function_base.hpp ****             else
 364:/usr/include/boost/function/function_base.hpp ****               out_buffer.members.obj_ptr = 0;
 365:/usr/include/boost/function/function_base.hpp ****           } else /* op == get_functor_type_tag */ {
 366:/usr/include/boost/function/function_base.hpp ****             out_buffer.members.type.type = &boost::typeindex::type_id<Functor>().type_info();
 367:/usr/include/boost/function/function_base.hpp ****             out_buffer.members.type.const_qualified = false;
 368:/usr/include/boost/function/function_base.hpp ****             out_buffer.members.type.volatile_qualified = false;
 369:/usr/include/boost/function/function_base.hpp ****           }
 370:/usr/include/boost/function/function_base.hpp ****         }
 371:/usr/include/boost/function/function_base.hpp **** 
 372:/usr/include/boost/function/function_base.hpp ****         // For function objects, we determine whether the function
 373:/usr/include/boost/function/function_base.hpp ****         // object can use the small-object optimization buffer or
 374:/usr/include/boost/function/function_base.hpp ****         // whether we need to allocate it on the heap.
 375:/usr/include/boost/function/function_base.hpp ****         static inline void
 376:/usr/include/boost/function/function_base.hpp ****         manager(const function_buffer& in_buffer, function_buffer& out_buffer,
 377:/usr/include/boost/function/function_base.hpp ****                 functor_manager_operation_type op, function_obj_tag)
 378:/usr/include/boost/function/function_base.hpp ****         {
 379:/usr/include/boost/function/function_base.hpp ****           manager(in_buffer, out_buffer, op,
 380:/usr/include/boost/function/function_base.hpp ****                   mpl::bool_<(function_allows_small_object_optimization<functor_type>::value)>());
 381:/usr/include/boost/function/function_base.hpp ****         }
 382:/usr/include/boost/function/function_base.hpp **** 
 383:/usr/include/boost/function/function_base.hpp ****         // For member pointers, we use the small-object optimization buffer.
 384:/usr/include/boost/function/function_base.hpp ****         static inline void
 385:/usr/include/boost/function/function_base.hpp ****         manager(const function_buffer& in_buffer, function_buffer& out_buffer,
 386:/usr/include/boost/function/function_base.hpp ****                 functor_manager_operation_type op, member_ptr_tag)
 387:/usr/include/boost/function/function_base.hpp ****         {
 388:/usr/include/boost/function/function_base.hpp ****           manager(in_buffer, out_buffer, op, mpl::true_());
 389:/usr/include/boost/function/function_base.hpp ****         }
 390:/usr/include/boost/function/function_base.hpp **** 
 391:/usr/include/boost/function/function_base.hpp ****       public:
 392:/usr/include/boost/function/function_base.hpp ****         /* Dispatch to an appropriate manager based on whether we have a
 393:/usr/include/boost/function/function_base.hpp ****            function pointer or a function object pointer. */
 394:/usr/include/boost/function/function_base.hpp ****         static inline void
 395:/usr/include/boost/function/function_base.hpp ****         manage(const function_buffer& in_buffer, function_buffer& out_buffer,
 396:/usr/include/boost/function/function_base.hpp ****                functor_manager_operation_type op)
 397:/usr/include/boost/function/function_base.hpp ****         {
 398:/usr/include/boost/function/function_base.hpp ****           typedef typename get_function_tag<functor_type>::type tag_type;
 399:/usr/include/boost/function/function_base.hpp ****           switch (op) {
 400:/usr/include/boost/function/function_base.hpp ****           case get_functor_type_tag:
 401:/usr/include/boost/function/function_base.hpp ****             out_buffer.members.type.type = &boost::typeindex::type_id<functor_type>().type_info();
 402:/usr/include/boost/function/function_base.hpp ****             out_buffer.members.type.const_qualified = false;
 403:/usr/include/boost/function/function_base.hpp ****             out_buffer.members.type.volatile_qualified = false;
 404:/usr/include/boost/function/function_base.hpp ****             return;
 405:/usr/include/boost/function/function_base.hpp **** 
 406:/usr/include/boost/function/function_base.hpp ****           default:
 407:/usr/include/boost/function/function_base.hpp ****             manager(in_buffer, out_buffer, op, tag_type());
 408:/usr/include/boost/function/function_base.hpp ****             return;
 409:/usr/include/boost/function/function_base.hpp ****           }
 410:/usr/include/boost/function/function_base.hpp ****         }
 411:/usr/include/boost/function/function_base.hpp ****       };
 412:/usr/include/boost/function/function_base.hpp **** 
 413:/usr/include/boost/function/function_base.hpp ****       template<typename Functor, typename Allocator>
 414:/usr/include/boost/function/function_base.hpp ****       struct functor_manager_a
 415:/usr/include/boost/function/function_base.hpp ****       {
 416:/usr/include/boost/function/function_base.hpp ****       private:
GAS LISTING /tmp/ccsIN87E.s 			page 110


 417:/usr/include/boost/function/function_base.hpp ****         typedef Functor functor_type;
 418:/usr/include/boost/function/function_base.hpp **** 
 419:/usr/include/boost/function/function_base.hpp ****         // Function pointers
 420:/usr/include/boost/function/function_base.hpp ****         static inline void
 421:/usr/include/boost/function/function_base.hpp ****         manager(const function_buffer& in_buffer, function_buffer& out_buffer,
 422:/usr/include/boost/function/function_base.hpp ****                 functor_manager_operation_type op, function_ptr_tag)
 423:/usr/include/boost/function/function_base.hpp ****         {
 424:/usr/include/boost/function/function_base.hpp ****           functor_manager_common<Functor>::manage_ptr(in_buffer,out_buffer,op);
 425:/usr/include/boost/function/function_base.hpp ****         }
 426:/usr/include/boost/function/function_base.hpp **** 
 427:/usr/include/boost/function/function_base.hpp ****         // Function objects that fit in the small-object buffer.
 428:/usr/include/boost/function/function_base.hpp ****         static inline void
 429:/usr/include/boost/function/function_base.hpp ****         manager(const function_buffer& in_buffer, function_buffer& out_buffer,
 430:/usr/include/boost/function/function_base.hpp ****                 functor_manager_operation_type op, mpl::true_)
 431:/usr/include/boost/function/function_base.hpp ****         {
 432:/usr/include/boost/function/function_base.hpp ****           functor_manager_common<Functor>::manage_small(in_buffer,out_buffer,op);
 433:/usr/include/boost/function/function_base.hpp ****         }
 434:/usr/include/boost/function/function_base.hpp **** 
 435:/usr/include/boost/function/function_base.hpp ****         // Function objects that require heap allocation
 436:/usr/include/boost/function/function_base.hpp ****         static inline void
 437:/usr/include/boost/function/function_base.hpp ****         manager(const function_buffer& in_buffer, function_buffer& out_buffer,
 438:/usr/include/boost/function/function_base.hpp ****                 functor_manager_operation_type op, mpl::false_)
 439:/usr/include/boost/function/function_base.hpp ****         {
 440:/usr/include/boost/function/function_base.hpp ****           typedef functor_wrapper<Functor,Allocator> functor_wrapper_type;
 441:/usr/include/boost/function/function_base.hpp ****           typedef typename Allocator::template rebind<functor_wrapper_type>::other
 442:/usr/include/boost/function/function_base.hpp ****             wrapper_allocator_type;
 443:/usr/include/boost/function/function_base.hpp ****           typedef typename wrapper_allocator_type::pointer wrapper_allocator_pointer_type;
 444:/usr/include/boost/function/function_base.hpp **** 
 445:/usr/include/boost/function/function_base.hpp ****           if (op == clone_functor_tag) {
 446:/usr/include/boost/function/function_base.hpp ****             // Clone the functor
 447:/usr/include/boost/function/function_base.hpp ****             // GCC 2.95.3 gets the CV qualifiers wrong here, so we
 448:/usr/include/boost/function/function_base.hpp ****             // can't do the static_cast that we should do.
 449:/usr/include/boost/function/function_base.hpp ****             const functor_wrapper_type* f =
 450:/usr/include/boost/function/function_base.hpp ****               static_cast<const functor_wrapper_type*>(in_buffer.members.obj_ptr);
 451:/usr/include/boost/function/function_base.hpp ****             wrapper_allocator_type wrapper_allocator(static_cast<Allocator const &>(*f));
 452:/usr/include/boost/function/function_base.hpp ****             wrapper_allocator_pointer_type copy = wrapper_allocator.allocate(1);
 453:/usr/include/boost/function/function_base.hpp ****             wrapper_allocator.construct(copy, *f);
 454:/usr/include/boost/function/function_base.hpp **** 
 455:/usr/include/boost/function/function_base.hpp ****             // Get back to the original pointer type
 456:/usr/include/boost/function/function_base.hpp ****             functor_wrapper_type* new_f = static_cast<functor_wrapper_type*>(copy);
 457:/usr/include/boost/function/function_base.hpp ****             out_buffer.members.obj_ptr = new_f;
 458:/usr/include/boost/function/function_base.hpp ****           } else if (op == move_functor_tag) {
 459:/usr/include/boost/function/function_base.hpp ****             out_buffer.members.obj_ptr = in_buffer.members.obj_ptr;
 460:/usr/include/boost/function/function_base.hpp ****             in_buffer.members.obj_ptr = 0;
 461:/usr/include/boost/function/function_base.hpp ****           } else if (op == destroy_functor_tag) {
 462:/usr/include/boost/function/function_base.hpp ****             /* Cast from the void pointer to the functor_wrapper_type */
 463:/usr/include/boost/function/function_base.hpp ****             functor_wrapper_type* victim =
 464:/usr/include/boost/function/function_base.hpp ****               static_cast<functor_wrapper_type*>(in_buffer.members.obj_ptr);
 465:/usr/include/boost/function/function_base.hpp ****             wrapper_allocator_type wrapper_allocator(static_cast<Allocator const &>(*victim));
 466:/usr/include/boost/function/function_base.hpp ****             wrapper_allocator.destroy(victim);
 467:/usr/include/boost/function/function_base.hpp ****             wrapper_allocator.deallocate(victim,1);
 468:/usr/include/boost/function/function_base.hpp ****             out_buffer.members.obj_ptr = 0;
 469:/usr/include/boost/function/function_base.hpp ****           } else if (op == check_functor_type_tag) {
 470:/usr/include/boost/function/function_base.hpp ****             if (*out_buffer.members.type.type == boost::typeindex::type_id<Functor>())
 471:/usr/include/boost/function/function_base.hpp ****               out_buffer.members.obj_ptr = in_buffer.members.obj_ptr;
 472:/usr/include/boost/function/function_base.hpp ****             else
 473:/usr/include/boost/function/function_base.hpp ****               out_buffer.members.obj_ptr = 0;
GAS LISTING /tmp/ccsIN87E.s 			page 111


 474:/usr/include/boost/function/function_base.hpp ****           } else /* op == get_functor_type_tag */ {
 475:/usr/include/boost/function/function_base.hpp ****             out_buffer.members.type.type = &boost::typeindex::type_id<Functor>().type_info();
 476:/usr/include/boost/function/function_base.hpp ****             out_buffer.members.type.const_qualified = false;
 477:/usr/include/boost/function/function_base.hpp ****             out_buffer.members.type.volatile_qualified = false;
 478:/usr/include/boost/function/function_base.hpp ****           }
 479:/usr/include/boost/function/function_base.hpp ****         }
 480:/usr/include/boost/function/function_base.hpp **** 
 481:/usr/include/boost/function/function_base.hpp ****         // For function objects, we determine whether the function
 482:/usr/include/boost/function/function_base.hpp ****         // object can use the small-object optimization buffer or
 483:/usr/include/boost/function/function_base.hpp ****         // whether we need to allocate it on the heap.
 484:/usr/include/boost/function/function_base.hpp ****         static inline void
 485:/usr/include/boost/function/function_base.hpp ****         manager(const function_buffer& in_buffer, function_buffer& out_buffer,
 486:/usr/include/boost/function/function_base.hpp ****                 functor_manager_operation_type op, function_obj_tag)
 487:/usr/include/boost/function/function_base.hpp ****         {
 488:/usr/include/boost/function/function_base.hpp ****           manager(in_buffer, out_buffer, op,
 489:/usr/include/boost/function/function_base.hpp ****                   mpl::bool_<(function_allows_small_object_optimization<functor_type>::value)>());
 490:/usr/include/boost/function/function_base.hpp ****         }
 491:/usr/include/boost/function/function_base.hpp **** 
 492:/usr/include/boost/function/function_base.hpp ****       public:
 493:/usr/include/boost/function/function_base.hpp ****         /* Dispatch to an appropriate manager based on whether we have a
 494:/usr/include/boost/function/function_base.hpp ****            function pointer or a function object pointer. */
 495:/usr/include/boost/function/function_base.hpp ****         static inline void
 496:/usr/include/boost/function/function_base.hpp ****         manage(const function_buffer& in_buffer, function_buffer& out_buffer,
 497:/usr/include/boost/function/function_base.hpp ****                functor_manager_operation_type op)
 498:/usr/include/boost/function/function_base.hpp ****         {
 499:/usr/include/boost/function/function_base.hpp ****           typedef typename get_function_tag<functor_type>::type tag_type;
 500:/usr/include/boost/function/function_base.hpp ****           switch (op) {
 501:/usr/include/boost/function/function_base.hpp ****           case get_functor_type_tag:
 502:/usr/include/boost/function/function_base.hpp ****             out_buffer.members.type.type = &boost::typeindex::type_id<functor_type>().type_info();
 503:/usr/include/boost/function/function_base.hpp ****             out_buffer.members.type.const_qualified = false;
 504:/usr/include/boost/function/function_base.hpp ****             out_buffer.members.type.volatile_qualified = false;
 505:/usr/include/boost/function/function_base.hpp ****             return;
 506:/usr/include/boost/function/function_base.hpp **** 
 507:/usr/include/boost/function/function_base.hpp ****           default:
 508:/usr/include/boost/function/function_base.hpp ****             manager(in_buffer, out_buffer, op, tag_type());
 509:/usr/include/boost/function/function_base.hpp ****             return;
 510:/usr/include/boost/function/function_base.hpp ****           }
 511:/usr/include/boost/function/function_base.hpp ****         }
 512:/usr/include/boost/function/function_base.hpp ****       };
 513:/usr/include/boost/function/function_base.hpp **** 
 514:/usr/include/boost/function/function_base.hpp ****       // A type that is only used for comparisons against zero
 515:/usr/include/boost/function/function_base.hpp ****       struct useless_clear_type {};
 516:/usr/include/boost/function/function_base.hpp **** 
 517:/usr/include/boost/function/function_base.hpp **** #ifdef BOOST_NO_SFINAE
 518:/usr/include/boost/function/function_base.hpp ****       // These routines perform comparisons between a Boost.Function
 519:/usr/include/boost/function/function_base.hpp ****       // object and an arbitrary function object (when the last
 520:/usr/include/boost/function/function_base.hpp ****       // parameter is mpl::bool_<false>) or against zero (when the
 521:/usr/include/boost/function/function_base.hpp ****       // last parameter is mpl::bool_<true>). They are only necessary
 522:/usr/include/boost/function/function_base.hpp ****       // for compilers that don't support SFINAE.
 523:/usr/include/boost/function/function_base.hpp ****       template<typename Function, typename Functor>
 524:/usr/include/boost/function/function_base.hpp ****         bool
 525:/usr/include/boost/function/function_base.hpp ****         compare_equal(const Function& f, const Functor&, int, mpl::bool_<true>)
 526:/usr/include/boost/function/function_base.hpp ****         { return f.empty(); }
 527:/usr/include/boost/function/function_base.hpp **** 
 528:/usr/include/boost/function/function_base.hpp ****       template<typename Function, typename Functor>
 529:/usr/include/boost/function/function_base.hpp ****         bool
 530:/usr/include/boost/function/function_base.hpp ****         compare_not_equal(const Function& f, const Functor&, int,
GAS LISTING /tmp/ccsIN87E.s 			page 112


 531:/usr/include/boost/function/function_base.hpp ****                           mpl::bool_<true>)
 532:/usr/include/boost/function/function_base.hpp ****         { return !f.empty(); }
 533:/usr/include/boost/function/function_base.hpp **** 
 534:/usr/include/boost/function/function_base.hpp ****       template<typename Function, typename Functor>
 535:/usr/include/boost/function/function_base.hpp ****         bool
 536:/usr/include/boost/function/function_base.hpp ****         compare_equal(const Function& f, const Functor& g, long,
 537:/usr/include/boost/function/function_base.hpp ****                       mpl::bool_<false>)
 538:/usr/include/boost/function/function_base.hpp ****         {
 539:/usr/include/boost/function/function_base.hpp ****           if (const Functor* fp = f.template target<Functor>())
 540:/usr/include/boost/function/function_base.hpp ****             return function_equal(*fp, g);
 541:/usr/include/boost/function/function_base.hpp ****           else return false;
 542:/usr/include/boost/function/function_base.hpp ****         }
 543:/usr/include/boost/function/function_base.hpp **** 
 544:/usr/include/boost/function/function_base.hpp ****       template<typename Function, typename Functor>
 545:/usr/include/boost/function/function_base.hpp ****         bool
 546:/usr/include/boost/function/function_base.hpp ****         compare_equal(const Function& f, const reference_wrapper<Functor>& g,
 547:/usr/include/boost/function/function_base.hpp ****                       int, mpl::bool_<false>)
 548:/usr/include/boost/function/function_base.hpp ****         {
 549:/usr/include/boost/function/function_base.hpp ****           if (const Functor* fp = f.template target<Functor>())
 550:/usr/include/boost/function/function_base.hpp ****             return fp == g.get_pointer();
 551:/usr/include/boost/function/function_base.hpp ****           else return false;
 552:/usr/include/boost/function/function_base.hpp ****         }
 553:/usr/include/boost/function/function_base.hpp **** 
 554:/usr/include/boost/function/function_base.hpp ****       template<typename Function, typename Functor>
 555:/usr/include/boost/function/function_base.hpp ****         bool
 556:/usr/include/boost/function/function_base.hpp ****         compare_not_equal(const Function& f, const Functor& g, long,
 557:/usr/include/boost/function/function_base.hpp ****                           mpl::bool_<false>)
 558:/usr/include/boost/function/function_base.hpp ****         {
 559:/usr/include/boost/function/function_base.hpp ****           if (const Functor* fp = f.template target<Functor>())
 560:/usr/include/boost/function/function_base.hpp ****             return !function_equal(*fp, g);
 561:/usr/include/boost/function/function_base.hpp ****           else return true;
 562:/usr/include/boost/function/function_base.hpp ****         }
 563:/usr/include/boost/function/function_base.hpp **** 
 564:/usr/include/boost/function/function_base.hpp ****       template<typename Function, typename Functor>
 565:/usr/include/boost/function/function_base.hpp ****         bool
 566:/usr/include/boost/function/function_base.hpp ****         compare_not_equal(const Function& f,
 567:/usr/include/boost/function/function_base.hpp ****                           const reference_wrapper<Functor>& g, int,
 568:/usr/include/boost/function/function_base.hpp ****                           mpl::bool_<false>)
 569:/usr/include/boost/function/function_base.hpp ****         {
 570:/usr/include/boost/function/function_base.hpp ****           if (const Functor* fp = f.template target<Functor>())
 571:/usr/include/boost/function/function_base.hpp ****             return fp != g.get_pointer();
 572:/usr/include/boost/function/function_base.hpp ****           else return true;
 573:/usr/include/boost/function/function_base.hpp ****         }
 574:/usr/include/boost/function/function_base.hpp **** #endif // BOOST_NO_SFINAE
 575:/usr/include/boost/function/function_base.hpp **** 
 576:/usr/include/boost/function/function_base.hpp ****       /**
 577:/usr/include/boost/function/function_base.hpp ****        * Stores the "manager" portion of the vtable for a
 578:/usr/include/boost/function/function_base.hpp ****        * boost::function object.
 579:/usr/include/boost/function/function_base.hpp ****        */
 580:/usr/include/boost/function/function_base.hpp ****       struct vtable_base
 581:/usr/include/boost/function/function_base.hpp ****       {
 582:/usr/include/boost/function/function_base.hpp ****         void (*manager)(const function_buffer& in_buffer,
 583:/usr/include/boost/function/function_base.hpp ****                         function_buffer& out_buffer,
 584:/usr/include/boost/function/function_base.hpp ****                         functor_manager_operation_type op);
 585:/usr/include/boost/function/function_base.hpp ****       };
 586:/usr/include/boost/function/function_base.hpp ****     } // end namespace function
 587:/usr/include/boost/function/function_base.hpp ****   } // end namespace detail
GAS LISTING /tmp/ccsIN87E.s 			page 113


 588:/usr/include/boost/function/function_base.hpp **** 
 589:/usr/include/boost/function/function_base.hpp **** /**
 590:/usr/include/boost/function/function_base.hpp ****  * The function_base class contains the basic elements needed for the
 591:/usr/include/boost/function/function_base.hpp ****  * function1, function2, function3, etc. classes. It is common to all
 592:/usr/include/boost/function/function_base.hpp ****  * functions (and as such can be used to tell if we have one of the
 593:/usr/include/boost/function/function_base.hpp ****  * functionN objects).
 594:/usr/include/boost/function/function_base.hpp ****  */
 595:/usr/include/boost/function/function_base.hpp **** class function_base
 596:/usr/include/boost/function/function_base.hpp **** {
 597:/usr/include/boost/function/function_base.hpp **** public:
 598:/usr/include/boost/function/function_base.hpp ****   function_base() : vtable(0) { }
 1645              		.loc 13 598 0
 1646              		.cfi_startproc
 1647 0000 55       		pushq	%rbp
 1648              		.cfi_def_cfa_offset 16
 1649              		.cfi_offset 6, -16
 1650 0001 4889E5   		movq	%rsp, %rbp
 1651              		.cfi_def_cfa_register 6
 1652 0004 48897DF8 		movq	%rdi, -8(%rbp)
 1653              	.LBB21:
 1654              		.loc 13 598 0
 1655 0008 488B45F8 		movq	-8(%rbp), %rax
 1656 000c 48C70000 		movq	$0, (%rax)
 1656      000000
 1657              	.LBE21:
 1658 0013 90       		nop
 1659 0014 5D       		popq	%rbp
 1660              		.cfi_def_cfa 7, 8
 1661 0015 C3       		ret
 1662              		.cfi_endproc
 1663              	.LFE7759:
 1665              		.weak	_ZN5boost13function_baseC1Ev
 1666              		.set	_ZN5boost13function_baseC1Ev,_ZN5boost13function_baseC2Ev
 1667              		.section	.text._ZNK5boost13function_base5emptyEv,"axG",@progbits,_ZNK5boost13function_base5emptyEv
 1668              		.align 2
 1669              		.weak	_ZNK5boost13function_base5emptyEv
 1671              	_ZNK5boost13function_base5emptyEv:
 1672              	.LFB7761:
 599:/usr/include/boost/function/function_base.hpp **** 
 600:/usr/include/boost/function/function_base.hpp ****   /** Determine if the function is empty (i.e., has no target). */
 601:/usr/include/boost/function/function_base.hpp ****   bool empty() const { return !vtable; }
 1673              		.loc 13 601 0
 1674              		.cfi_startproc
 1675 0000 55       		pushq	%rbp
 1676              		.cfi_def_cfa_offset 16
 1677              		.cfi_offset 6, -16
 1678 0001 4889E5   		movq	%rsp, %rbp
 1679              		.cfi_def_cfa_register 6
 1680 0004 48897DF8 		movq	%rdi, -8(%rbp)
 1681              		.loc 13 601 0
 1682 0008 488B45F8 		movq	-8(%rbp), %rax
 1683 000c 488B00   		movq	(%rax), %rax
 1684 000f 4885C0   		testq	%rax, %rax
 1685 0012 0F94C0   		sete	%al
 1686 0015 5D       		popq	%rbp
 1687              		.cfi_def_cfa 7, 8
 1688 0016 C3       		ret
GAS LISTING /tmp/ccsIN87E.s 			page 114


 1689              		.cfi_endproc
 1690              	.LFE7761:
 1692              		.section	.text._ZNK5boost13function_base28has_trivial_copy_and_destroyEv,"axG",@progbits,_ZNK5boos
 1693              		.align 2
 1694              		.weak	_ZNK5boost13function_base28has_trivial_copy_and_destroyEv
 1696              	_ZNK5boost13function_base28has_trivial_copy_and_destroyEv:
 1697              	.LFB7767:
 602:/usr/include/boost/function/function_base.hpp **** 
 603:/usr/include/boost/function/function_base.hpp ****   /** Retrieve the type of the stored function object, or type_id<void>()
 604:/usr/include/boost/function/function_base.hpp ****       if this is empty. */
 605:/usr/include/boost/function/function_base.hpp ****   const boost::typeindex::type_info& target_type() const
 606:/usr/include/boost/function/function_base.hpp ****   {
 607:/usr/include/boost/function/function_base.hpp ****     if (!vtable) return boost::typeindex::type_id<void>().type_info();
 608:/usr/include/boost/function/function_base.hpp **** 
 609:/usr/include/boost/function/function_base.hpp ****     detail::function::function_buffer type;
 610:/usr/include/boost/function/function_base.hpp ****     get_vtable()->manager(functor, type, detail::function::get_functor_type_tag);
 611:/usr/include/boost/function/function_base.hpp ****     return *type.members.type.type;
 612:/usr/include/boost/function/function_base.hpp ****   }
 613:/usr/include/boost/function/function_base.hpp **** 
 614:/usr/include/boost/function/function_base.hpp ****   template<typename Functor>
 615:/usr/include/boost/function/function_base.hpp ****     Functor* target()
 616:/usr/include/boost/function/function_base.hpp ****     {
 617:/usr/include/boost/function/function_base.hpp ****       if (!vtable) return 0;
 618:/usr/include/boost/function/function_base.hpp **** 
 619:/usr/include/boost/function/function_base.hpp ****       detail::function::function_buffer type_result;
 620:/usr/include/boost/function/function_base.hpp ****       type_result.members.type.type = &boost::typeindex::type_id<Functor>().type_info();
 621:/usr/include/boost/function/function_base.hpp ****       type_result.members.type.const_qualified = is_const<Functor>::value;
 622:/usr/include/boost/function/function_base.hpp ****       type_result.members.type.volatile_qualified = is_volatile<Functor>::value;
 623:/usr/include/boost/function/function_base.hpp ****       get_vtable()->manager(functor, type_result,
 624:/usr/include/boost/function/function_base.hpp ****                       detail::function::check_functor_type_tag);
 625:/usr/include/boost/function/function_base.hpp ****       return static_cast<Functor*>(type_result.members.obj_ptr);
 626:/usr/include/boost/function/function_base.hpp ****     }
 627:/usr/include/boost/function/function_base.hpp **** 
 628:/usr/include/boost/function/function_base.hpp ****   template<typename Functor>
 629:/usr/include/boost/function/function_base.hpp ****     const Functor* target() const
 630:/usr/include/boost/function/function_base.hpp ****     {
 631:/usr/include/boost/function/function_base.hpp ****       if (!vtable) return 0;
 632:/usr/include/boost/function/function_base.hpp **** 
 633:/usr/include/boost/function/function_base.hpp ****       detail::function::function_buffer type_result;
 634:/usr/include/boost/function/function_base.hpp ****       type_result.members.type.type = &boost::typeindex::type_id<Functor>().type_info();
 635:/usr/include/boost/function/function_base.hpp ****       type_result.members.type.const_qualified = true;
 636:/usr/include/boost/function/function_base.hpp ****       type_result.members.type.volatile_qualified = is_volatile<Functor>::value;
 637:/usr/include/boost/function/function_base.hpp ****       get_vtable()->manager(functor, type_result,
 638:/usr/include/boost/function/function_base.hpp ****                       detail::function::check_functor_type_tag);
 639:/usr/include/boost/function/function_base.hpp ****       // GCC 2.95.3 gets the CV qualifiers wrong here, so we
 640:/usr/include/boost/function/function_base.hpp ****       // can't do the static_cast that we should do.
 641:/usr/include/boost/function/function_base.hpp ****       return static_cast<const Functor*>(type_result.members.obj_ptr);
 642:/usr/include/boost/function/function_base.hpp ****     }
 643:/usr/include/boost/function/function_base.hpp **** 
 644:/usr/include/boost/function/function_base.hpp ****   template<typename F>
 645:/usr/include/boost/function/function_base.hpp ****     bool contains(const F& f) const
 646:/usr/include/boost/function/function_base.hpp ****     {
 647:/usr/include/boost/function/function_base.hpp ****       if (const F* fp = this->template target<F>())
 648:/usr/include/boost/function/function_base.hpp ****       {
 649:/usr/include/boost/function/function_base.hpp ****         return function_equal(*fp, f);
 650:/usr/include/boost/function/function_base.hpp ****       } else {
 651:/usr/include/boost/function/function_base.hpp ****         return false;
GAS LISTING /tmp/ccsIN87E.s 			page 115


 652:/usr/include/boost/function/function_base.hpp ****       }
 653:/usr/include/boost/function/function_base.hpp ****     }
 654:/usr/include/boost/function/function_base.hpp **** 
 655:/usr/include/boost/function/function_base.hpp **** #if defined(__GNUC__) && __GNUC__ == 3 && __GNUC_MINOR__ <= 3
 656:/usr/include/boost/function/function_base.hpp ****   // GCC 3.3 and newer cannot copy with the global operator==, due to
 657:/usr/include/boost/function/function_base.hpp ****   // problems with instantiation of function return types before it
 658:/usr/include/boost/function/function_base.hpp ****   // has been verified that the argument types match up.
 659:/usr/include/boost/function/function_base.hpp ****   template<typename Functor>
 660:/usr/include/boost/function/function_base.hpp ****     BOOST_FUNCTION_ENABLE_IF_NOT_INTEGRAL(Functor, bool)
 661:/usr/include/boost/function/function_base.hpp ****     operator==(Functor g) const
 662:/usr/include/boost/function/function_base.hpp ****     {
 663:/usr/include/boost/function/function_base.hpp ****       if (const Functor* fp = target<Functor>())
 664:/usr/include/boost/function/function_base.hpp ****         return function_equal(*fp, g);
 665:/usr/include/boost/function/function_base.hpp ****       else return false;
 666:/usr/include/boost/function/function_base.hpp ****     }
 667:/usr/include/boost/function/function_base.hpp **** 
 668:/usr/include/boost/function/function_base.hpp ****   template<typename Functor>
 669:/usr/include/boost/function/function_base.hpp ****     BOOST_FUNCTION_ENABLE_IF_NOT_INTEGRAL(Functor, bool)
 670:/usr/include/boost/function/function_base.hpp ****     operator!=(Functor g) const
 671:/usr/include/boost/function/function_base.hpp ****     {
 672:/usr/include/boost/function/function_base.hpp ****       if (const Functor* fp = target<Functor>())
 673:/usr/include/boost/function/function_base.hpp ****         return !function_equal(*fp, g);
 674:/usr/include/boost/function/function_base.hpp ****       else return true;
 675:/usr/include/boost/function/function_base.hpp ****     }
 676:/usr/include/boost/function/function_base.hpp **** #endif
 677:/usr/include/boost/function/function_base.hpp **** 
 678:/usr/include/boost/function/function_base.hpp **** public: // should be protected, but GCC 2.95.3 will fail to allow access
 679:/usr/include/boost/function/function_base.hpp ****   detail::function::vtable_base* get_vtable() const {
 680:/usr/include/boost/function/function_base.hpp ****     return reinterpret_cast<detail::function::vtable_base*>(
 681:/usr/include/boost/function/function_base.hpp ****              reinterpret_cast<std::size_t>(vtable) & ~static_cast<std::size_t>(0x01));
 682:/usr/include/boost/function/function_base.hpp ****   }
 683:/usr/include/boost/function/function_base.hpp **** 
 684:/usr/include/boost/function/function_base.hpp ****   bool has_trivial_copy_and_destroy() const {
 1698              		.loc 13 684 0
 1699              		.cfi_startproc
 1700 0000 55       		pushq	%rbp
 1701              		.cfi_def_cfa_offset 16
 1702              		.cfi_offset 6, -16
 1703 0001 4889E5   		movq	%rsp, %rbp
 1704              		.cfi_def_cfa_register 6
 1705 0004 48897DF8 		movq	%rdi, -8(%rbp)
 685:/usr/include/boost/function/function_base.hpp ****     return reinterpret_cast<std::size_t>(vtable) & 0x01;
 1706              		.loc 13 685 0
 1707 0008 488B45F8 		movq	-8(%rbp), %rax
 1708 000c 488B00   		movq	(%rax), %rax
 1709 000f 83E001   		andl	$1, %eax
 1710 0012 4885C0   		testq	%rax, %rax
 1711 0015 0F95C0   		setne	%al
 686:/usr/include/boost/function/function_base.hpp ****   }
 1712              		.loc 13 686 0
 1713 0018 5D       		popq	%rbp
 1714              		.cfi_def_cfa 7, 8
 1715 0019 C3       		ret
 1716              		.cfi_endproc
 1717              	.LFE7767:
 1719              		.section	.rodata
 1720              	.LC2:
GAS LISTING /tmp/ccsIN87E.s 			page 116


 1721 0024 63616C6C 		.string	"call to empty boost::function"
 1721      20746F20 
 1721      656D7074 
 1721      7920626F 
 1721      6F73743A 
 1722              		.section	.text._ZN5boost17bad_function_callC2Ev,"axG",@progbits,_ZN5boost17bad_function_callC5Ev,c
 1723              		.align 2
 1724              		.weak	_ZN5boost17bad_function_callC2Ev
 1726              	_ZN5boost17bad_function_callC2Ev:
 1727              	.LFB7769:
 687:/usr/include/boost/function/function_base.hpp **** 
 688:/usr/include/boost/function/function_base.hpp ****   detail::function::vtable_base* vtable;
 689:/usr/include/boost/function/function_base.hpp ****   mutable detail::function::function_buffer functor;
 690:/usr/include/boost/function/function_base.hpp **** };
 691:/usr/include/boost/function/function_base.hpp **** 
 692:/usr/include/boost/function/function_base.hpp **** /**
 693:/usr/include/boost/function/function_base.hpp ****  * The bad_function_call exception class is thrown when a boost::function
 694:/usr/include/boost/function/function_base.hpp ****  * object is invoked
 695:/usr/include/boost/function/function_base.hpp ****  */
 696:/usr/include/boost/function/function_base.hpp **** class bad_function_call : public std::runtime_error
 697:/usr/include/boost/function/function_base.hpp **** {
 698:/usr/include/boost/function/function_base.hpp **** public:
 699:/usr/include/boost/function/function_base.hpp ****   bad_function_call() : std::runtime_error("call to empty boost::function") {}
 1728              		.loc 13 699 0
 1729              		.cfi_startproc
 1730 0000 55       		pushq	%rbp
 1731              		.cfi_def_cfa_offset 16
 1732              		.cfi_offset 6, -16
 1733 0001 4889E5   		movq	%rsp, %rbp
 1734              		.cfi_def_cfa_register 6
 1735 0004 4883EC10 		subq	$16, %rsp
 1736 0008 48897DF8 		movq	%rdi, -8(%rbp)
 1737              	.LBB22:
 1738              		.loc 13 699 0
 1739 000c 488B45F8 		movq	-8(%rbp), %rax
 1740 0010 488D3500 		leaq	.LC2(%rip), %rsi
 1740      000000
 1741 0017 4889C7   		movq	%rax, %rdi
 1742 001a E8000000 		call	_ZNSt13runtime_errorC2EPKc@PLT
 1742      00
 1743 001f 488D1500 		leaq	16+_ZTVN5boost17bad_function_callE(%rip), %rdx
 1743      000000
 1744 0026 488B45F8 		movq	-8(%rbp), %rax
 1745 002a 488910   		movq	%rdx, (%rax)
 1746              	.LBE22:
 1747 002d 90       		nop
 1748 002e C9       		leave
 1749              		.cfi_def_cfa 7, 8
 1750 002f C3       		ret
 1751              		.cfi_endproc
 1752              	.LFE7769:
 1754              		.weak	_ZN5boost17bad_function_callC1Ev
 1755              		.set	_ZN5boost17bad_function_callC1Ev,_ZN5boost17bad_function_callC2Ev
 1756              		.section	.text._ZN5boost10shared_ptrIN2gr12io_signatureEED2Ev,"axG",@progbits,_ZN5boost10shared_pt
 1757              		.align 2
 1758              		.weak	_ZN5boost10shared_ptrIN2gr12io_signatureEED2Ev
 1760              	_ZN5boost10shared_ptrIN2gr12io_signatureEED2Ev:
GAS LISTING /tmp/ccsIN87E.s 			page 117


 1761              	.LFB8623:
 244:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 245:/usr/include/boost/smart_ptr/shared_ptr.hpp **** #endif // _MANAGED
 246:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 247:/usr/include/boost/smart_ptr/shared_ptr.hpp **** #if !defined( BOOST_NO_SFINAE ) && !defined( BOOST_NO_TEMPLATE_PARTIAL_SPECIALIZATION ) && !defined
 248:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 249:/usr/include/boost/smart_ptr/shared_ptr.hpp **** // rvalue auto_ptr support based on a technique by Dave Abrahams
 250:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 251:/usr/include/boost/smart_ptr/shared_ptr.hpp **** template< class T, class R > struct sp_enable_if_auto_ptr
 252:/usr/include/boost/smart_ptr/shared_ptr.hpp **** {
 253:/usr/include/boost/smart_ptr/shared_ptr.hpp **** };
 254:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 255:/usr/include/boost/smart_ptr/shared_ptr.hpp **** template< class T, class R > struct sp_enable_if_auto_ptr< std::auto_ptr< T >, R >
 256:/usr/include/boost/smart_ptr/shared_ptr.hpp **** {
 257:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     typedef R type;
 258:/usr/include/boost/smart_ptr/shared_ptr.hpp **** }; 
 259:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 260:/usr/include/boost/smart_ptr/shared_ptr.hpp **** #endif
 261:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 262:/usr/include/boost/smart_ptr/shared_ptr.hpp **** // sp_assert_convertible
 263:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 264:/usr/include/boost/smart_ptr/shared_ptr.hpp **** template< class Y, class T > inline void sp_assert_convertible()
 265:/usr/include/boost/smart_ptr/shared_ptr.hpp **** {
 266:/usr/include/boost/smart_ptr/shared_ptr.hpp **** #if !defined( BOOST_SP_NO_SP_CONVERTIBLE )
 267:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 268:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     // static_assert( sp_convertible< Y, T >::value );
 269:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     typedef char tmp[ sp_convertible< Y, T >::value? 1: -1 ];
 270:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     (void)sizeof( tmp );
 271:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 272:/usr/include/boost/smart_ptr/shared_ptr.hpp **** #else
 273:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 274:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     T* p = static_cast< Y* >( 0 );
 275:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     (void)p;
 276:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 277:/usr/include/boost/smart_ptr/shared_ptr.hpp **** #endif
 278:/usr/include/boost/smart_ptr/shared_ptr.hpp **** }
 279:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 280:/usr/include/boost/smart_ptr/shared_ptr.hpp **** // pointer constructor helper
 281:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 282:/usr/include/boost/smart_ptr/shared_ptr.hpp **** template< class T, class Y > inline void sp_pointer_construct( boost::shared_ptr< T > * ppx, Y * p,
 283:/usr/include/boost/smart_ptr/shared_ptr.hpp **** {
 284:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     boost::detail::shared_count( p ).swap( pn );
 285:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     boost::detail::sp_enable_shared_from_this( ppx, p, p );
 286:/usr/include/boost/smart_ptr/shared_ptr.hpp **** }
 287:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 288:/usr/include/boost/smart_ptr/shared_ptr.hpp **** #if !defined( BOOST_NO_TEMPLATE_PARTIAL_SPECIALIZATION )
 289:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 290:/usr/include/boost/smart_ptr/shared_ptr.hpp **** template< class T, class Y > inline void sp_pointer_construct( boost::shared_ptr< T[] > * /*ppx*/, 
 291:/usr/include/boost/smart_ptr/shared_ptr.hpp **** {
 292:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     sp_assert_convertible< Y[], T[] >();
 293:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     boost::detail::shared_count( p, boost::checked_array_deleter< T >() ).swap( pn );
 294:/usr/include/boost/smart_ptr/shared_ptr.hpp **** }
 295:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 296:/usr/include/boost/smart_ptr/shared_ptr.hpp **** template< class T, std::size_t N, class Y > inline void sp_pointer_construct( boost::shared_ptr< T[
 297:/usr/include/boost/smart_ptr/shared_ptr.hpp **** {
 298:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     sp_assert_convertible< Y[N], T[N] >();
 299:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     boost::detail::shared_count( p, boost::checked_array_deleter< T >() ).swap( pn );
GAS LISTING /tmp/ccsIN87E.s 			page 118


 300:/usr/include/boost/smart_ptr/shared_ptr.hpp **** }
 301:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 302:/usr/include/boost/smart_ptr/shared_ptr.hpp **** #endif // !defined( BOOST_NO_TEMPLATE_PARTIAL_SPECIALIZATION )
 303:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 304:/usr/include/boost/smart_ptr/shared_ptr.hpp **** // deleter constructor helper
 305:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 306:/usr/include/boost/smart_ptr/shared_ptr.hpp **** template< class T, class Y > inline void sp_deleter_construct( boost::shared_ptr< T > * ppx, Y * p 
 307:/usr/include/boost/smart_ptr/shared_ptr.hpp **** {
 308:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     boost::detail::sp_enable_shared_from_this( ppx, p, p );
 309:/usr/include/boost/smart_ptr/shared_ptr.hpp **** }
 310:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 311:/usr/include/boost/smart_ptr/shared_ptr.hpp **** #if !defined( BOOST_NO_TEMPLATE_PARTIAL_SPECIALIZATION )
 312:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 313:/usr/include/boost/smart_ptr/shared_ptr.hpp **** template< class T, class Y > inline void sp_deleter_construct( boost::shared_ptr< T[] > * /*ppx*/, 
 314:/usr/include/boost/smart_ptr/shared_ptr.hpp **** {
 315:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     sp_assert_convertible< Y[], T[] >();
 316:/usr/include/boost/smart_ptr/shared_ptr.hpp **** }
 317:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 318:/usr/include/boost/smart_ptr/shared_ptr.hpp **** template< class T, std::size_t N, class Y > inline void sp_deleter_construct( boost::shared_ptr< T[
 319:/usr/include/boost/smart_ptr/shared_ptr.hpp **** {
 320:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     sp_assert_convertible< Y[N], T[N] >();
 321:/usr/include/boost/smart_ptr/shared_ptr.hpp **** }
 322:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 323:/usr/include/boost/smart_ptr/shared_ptr.hpp **** #endif // !defined( BOOST_NO_TEMPLATE_PARTIAL_SPECIALIZATION )
 324:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 325:/usr/include/boost/smart_ptr/shared_ptr.hpp **** } // namespace detail
 326:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 327:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 328:/usr/include/boost/smart_ptr/shared_ptr.hpp **** //
 329:/usr/include/boost/smart_ptr/shared_ptr.hpp **** //  shared_ptr
 330:/usr/include/boost/smart_ptr/shared_ptr.hpp **** //
 331:/usr/include/boost/smart_ptr/shared_ptr.hpp **** //  An enhanced relative of scoped_ptr with reference counted copy semantics.
 332:/usr/include/boost/smart_ptr/shared_ptr.hpp **** //  The object pointed to is deleted when the last shared_ptr pointing to it
 333:/usr/include/boost/smart_ptr/shared_ptr.hpp **** //  is destroyed or reset.
 334:/usr/include/boost/smart_ptr/shared_ptr.hpp **** //
 335:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 336:/usr/include/boost/smart_ptr/shared_ptr.hpp **** template<class T> class shared_ptr
 1762              		.loc 7 336 0
 1763              		.cfi_startproc
 1764 0000 55       		pushq	%rbp
 1765              		.cfi_def_cfa_offset 16
 1766              		.cfi_offset 6, -16
 1767 0001 4889E5   		movq	%rsp, %rbp
 1768              		.cfi_def_cfa_register 6
 1769 0004 4883EC10 		subq	$16, %rsp
 1770 0008 48897DF8 		movq	%rdi, -8(%rbp)
 1771              	.LBB23:
 1772              		.loc 7 336 0
 1773 000c 488B45F8 		movq	-8(%rbp), %rax
 1774 0010 4883C008 		addq	$8, %rax
 1775 0014 4889C7   		movq	%rax, %rdi
 1776 0017 E8000000 		call	_ZN5boost6detail12shared_countD1Ev
 1776      00
 1777              	.LBE23:
 1778 001c 90       		nop
 1779 001d C9       		leave
 1780              		.cfi_def_cfa 7, 8
GAS LISTING /tmp/ccsIN87E.s 			page 119


 1781 001e C3       		ret
 1782              		.cfi_endproc
 1783              	.LFE8623:
 1785              		.weak	_ZN5boost10shared_ptrIN2gr12io_signatureEED1Ev
 1786              		.set	_ZN5boost10shared_ptrIN2gr12io_signatureEED1Ev,_ZN5boost10shared_ptrIN2gr12io_signatureEED2Ev
 1787              		.section	.text._ZN2gr11basic_block15has_msg_handlerEN5boost13intrusive_ptrIN3pmt8pmt_baseEEE,"axG"
 1788              		.align 2
 1789              		.weak	_ZN2gr11basic_block15has_msg_handlerEN5boost13intrusive_ptrIN3pmt8pmt_baseEEE
 1791              	_ZN2gr11basic_block15has_msg_handlerEN5boost13intrusive_ptrIN3pmt8pmt_baseEEE:
 1792              	.LFB8637:
 1793              		.file 14 "/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h"
   1:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h **** /* -*- c++ -*- */
   2:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h **** /*
   3:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****  * Copyright 2006,2008,2009,2011,2013 Free Software Foundation, Inc.
   4:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****  *
   5:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****  * This file is part of GNU Radio
   6:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****  *
   7:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****  * GNU Radio is free software; you can redistribute it and/or modify
   8:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****  * it under the terms of the GNU General Public License as published by
   9:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****  * the Free Software Foundation; either version 3, or (at your option)
  10:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****  * any later version.
  11:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****  *
  12:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****  * GNU Radio is distributed in the hope that it will be useful,
  13:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  14:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  15:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****  * GNU General Public License for more details.
  16:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****  *
  17:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****  * You should have received a copy of the GNU General Public License
  18:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****  * along with GNU Radio; see the file COPYING.  If not, write to
  19:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****  * the Free Software Foundation, Inc., 51 Franklin Street,
  20:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****  * Boston, MA 02110-1301, USA.
  21:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****  */
  22:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h **** 
  23:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h **** #ifndef INCLUDED_GR_BASIC_BLOCK_H
  24:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h **** #define INCLUDED_GR_BASIC_BLOCK_H
  25:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h **** 
  26:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h **** #include <gnuradio/api.h>
  27:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h **** #include <gnuradio/sptr_magic.h>
  28:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h **** #include <gnuradio/msg_accepter.h>
  29:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h **** #include <gnuradio/runtime_types.h>
  30:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h **** #include <gnuradio/io_signature.h>
  31:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h **** #include <gnuradio/thread/thread.h>
  32:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h **** #include <boost/enable_shared_from_this.hpp>
  33:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h **** #include <boost/function.hpp>
  34:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h **** #include <boost/foreach.hpp>
  35:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h **** #include <boost/thread/condition_variable.hpp>
  36:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h **** #include <iostream>
  37:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h **** #include <string>
  38:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h **** #include <deque>
  39:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h **** #include <map>
  40:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h **** 
  41:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h **** #ifdef GR_CTRLPORT
  42:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h **** #include <gnuradio/rpcregisterhelpers.h>
  43:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h **** #endif
  44:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h **** 
  45:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h **** namespace gr {
  46:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h **** 
GAS LISTING /tmp/ccsIN87E.s 			page 120


  47:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****   /*!
  48:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****    * \brief The abstract base class for all signal processing blocks.
  49:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****    * \ingroup internal
  50:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****    *
  51:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****    * Basic blocks are the bare abstraction of an entity that has a
  52:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****    * name, a set of inputs and outputs, and a message queue.  These
  53:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****    * are never instantiated directly; rather, this is the abstract
  54:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****    * parent class of both gr_hier_block, which is a recursive
  55:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****    * container, and block, which implements actual signal
  56:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****    * processing functions.
  57:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****    */
  58:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****   class GR_RUNTIME_API basic_block : public msg_accepter,
  59:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****                                      public boost::enable_shared_from_this<basic_block>
  60:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****   {
  61:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     typedef boost::function<void(pmt::pmt_t)> msg_handler_t;
  62:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h **** 
  63:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****   private:
  64:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     typedef std::map<pmt::pmt_t , msg_handler_t, pmt::comparator> d_msg_handlers_t;
  65:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     d_msg_handlers_t d_msg_handlers;
  66:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h **** 
  67:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     typedef std::deque<pmt::pmt_t> msg_queue_t;
  68:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     typedef std::map<pmt::pmt_t, msg_queue_t, pmt::comparator> msg_queue_map_t;
  69:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     typedef std::map<pmt::pmt_t, msg_queue_t, pmt::comparator>::iterator msg_queue_map_itr;
  70:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     std::map<pmt::pmt_t, boost::shared_ptr<boost::condition_variable>, pmt::comparator> msg_queue_r
  71:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h **** 
  72:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     gr::thread::mutex mutex;          //< protects all vars
  73:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h **** 
  74:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****   protected:
  75:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     friend class flowgraph;
  76:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     friend class flat_flowgraph; // TODO: will be redundant
  77:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     friend class tpb_thread_body;
  78:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h **** 
  79:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     enum vcolor { WHITE, GREY, BLACK };
  80:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h **** 
  81:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     std::string       d_name;
  82:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     gr::io_signature::sptr d_input_signature;
  83:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     gr::io_signature::sptr d_output_signature;
  84:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     long              d_unique_id;
  85:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     long              d_symbolic_id;
  86:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     std::string       d_symbol_name;
  87:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     std::string       d_symbol_alias;
  88:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     vcolor            d_color;
  89:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     bool              d_rpc_set;
  90:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h **** 
  91:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     msg_queue_map_t msg_queue;
  92:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     std::vector<boost::any> d_rpc_vars; // container for all RPC variables
  93:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h **** 
  94:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     basic_block(void) {} // allows pure virtual interface sub-classes
  95:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h **** 
  96:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     //! Protected constructor prevents instantiation by non-derived classes
  97:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     basic_block(const std::string &name,
  98:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****                 gr::io_signature::sptr input_signature,
  99:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****                 gr::io_signature::sptr output_signature);
 100:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h **** 
 101:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     //! may only be called during constructor
 102:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     void set_input_signature(gr::io_signature::sptr iosig) {
 103:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****       d_input_signature = iosig;
GAS LISTING /tmp/ccsIN87E.s 			page 121


 104:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     }
 105:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h **** 
 106:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     //! may only be called during constructor
 107:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     void set_output_signature(gr::io_signature::sptr iosig) {
 108:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****       d_output_signature = iosig;
 109:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     }
 110:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h **** 
 111:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     /*!
 112:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****      * \brief Allow the flowgraph to set for sorting and partitioning
 113:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****      */
 114:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     void set_color(vcolor color) { d_color = color; }
 115:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     vcolor color() const { return d_color; }
 116:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h **** 
 117:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     /*!
 118:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****      * \brief Tests if there is a handler attached to port \p which_port
 119:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****      */
 120:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     virtual bool has_msg_handler(pmt::pmt_t which_port) {
 1794              		.loc 14 120 0
 1795              		.cfi_startproc
 1796 0000 55       		pushq	%rbp
 1797              		.cfi_def_cfa_offset 16
 1798              		.cfi_offset 6, -16
 1799 0001 4889E5   		movq	%rsp, %rbp
 1800              		.cfi_def_cfa_register 6
 1801 0004 4883EC20 		subq	$32, %rsp
 1802 0008 48897DE8 		movq	%rdi, -24(%rbp)
 1803 000c 488975E0 		movq	%rsi, -32(%rbp)
 121:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****       return (d_msg_handlers.find(which_port) != d_msg_handlers.end());
 1804              		.loc 14 121 0
 1805 0010 488B45E8 		movq	-24(%rbp), %rax
 1806 0014 4883C018 		addq	$24, %rax
 1807 0018 4889C7   		movq	%rax, %rdi
 1808 001b E8000000 		call	_ZNSt3mapIN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS0_8functionIFvS4_EEENS2_10comparatorESaIS
 1808      00
 1809 0020 488945F0 		movq	%rax, -16(%rbp)
 1810 0024 488B45E8 		movq	-24(%rbp), %rax
 1811 0028 488D5018 		leaq	24(%rax), %rdx
 1812 002c 488B45E0 		movq	-32(%rbp), %rax
 1813 0030 4889C6   		movq	%rax, %rsi
 1814 0033 4889D7   		movq	%rdx, %rdi
 1815 0036 E8000000 		call	_ZNSt3mapIN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS0_8functionIFvS4_EEENS2_10comparatorESaIS
 1815      00
 1816 003b 488945F8 		movq	%rax, -8(%rbp)
 1817 003f 488D55F0 		leaq	-16(%rbp), %rdx
 1818 0043 488D45F8 		leaq	-8(%rbp), %rax
 1819 0047 4889D6   		movq	%rdx, %rsi
 1820 004a 4889C7   		movq	%rax, %rdi
 1821 004d E8000000 		call	_ZNKSt17_Rb_tree_iteratorISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS1_8functionIFvS5
 1821      00
 122:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     }
 1822              		.loc 14 122 0
 1823 0052 C9       		leave
 1824              		.cfi_def_cfa 7, 8
 1825 0053 C3       		ret
 1826              		.cfi_endproc
 1827              	.LFE8637:
 1829              		.section	.text._ZN2gr11basic_block12dispatch_msgEN5boost13intrusive_ptrIN3pmt8pmt_baseEEES5_,"axG"
GAS LISTING /tmp/ccsIN87E.s 			page 122


 1830              		.align 2
 1831              		.weak	_ZN2gr11basic_block12dispatch_msgEN5boost13intrusive_ptrIN3pmt8pmt_baseEEES5_
 1833              	_ZN2gr11basic_block12dispatch_msgEN5boost13intrusive_ptrIN3pmt8pmt_baseEEES5_:
 1834              	.LFB8638:
 123:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h **** 
 124:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     /*
 125:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****      * This function is called by the runtime system to dispatch messages.
 126:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****      *
 127:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****      * The thread-safety guarantees mentioned in set_msg_handler are
 128:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****      * implemented by the callers of this method.
 129:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****      */
 130:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     virtual void dispatch_msg(pmt::pmt_t which_port, pmt::pmt_t msg)
 1835              		.loc 14 130 0
 1836              		.cfi_startproc
 1837              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 1838              		.cfi_lsda 0x1b,.LLSDA8638
 1839 0000 55       		pushq	%rbp
 1840              		.cfi_def_cfa_offset 16
 1841              		.cfi_offset 6, -16
 1842 0001 4889E5   		movq	%rsp, %rbp
 1843              		.cfi_def_cfa_register 6
 1844 0004 53       		pushq	%rbx
 1845 0005 4883EC38 		subq	$56, %rsp
 1846              		.cfi_offset 3, -24
 1847 0009 48897DD8 		movq	%rdi, -40(%rbp)
 1848 000d 488975D0 		movq	%rsi, -48(%rbp)
 1849 0011 488955C8 		movq	%rdx, -56(%rbp)
 131:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     {
 132:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****       // AA Update this
 133:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****       if(has_msg_handler(which_port)) {  // Is there a handler?
 1850              		.loc 14 133 0
 1851 0015 488B45D8 		movq	-40(%rbp), %rax
 1852 0019 488B00   		movq	(%rax), %rax
 1853 001c 4883C018 		addq	$24, %rax
 1854 0020 488B18   		movq	(%rax), %rbx
 1855 0023 488B55D0 		movq	-48(%rbp), %rdx
 1856 0027 488D45E0 		leaq	-32(%rbp), %rax
 1857 002b 4889D6   		movq	%rdx, %rsi
 1858 002e 4889C7   		movq	%rax, %rdi
 1859              	.LEHB8:
 1860 0031 E8000000 		call	_ZN5boost13intrusive_ptrIN3pmt8pmt_baseEEC1ERKS3_
 1860      00
 1861              	.LEHE8:
 1862 0036 488D55E0 		leaq	-32(%rbp), %rdx
 1863 003a 488B45D8 		movq	-40(%rbp), %rax
 1864 003e 4889D6   		movq	%rdx, %rsi
 1865 0041 4889C7   		movq	%rax, %rdi
 1866              	.LEHB9:
 1867 0044 FFD3     		call	*%rbx
 1868              	.LVL5:
 1869              	.LEHE9:
 1870 0046 89C3     		movl	%eax, %ebx
 1871 0048 488D45E0 		leaq	-32(%rbp), %rax
 1872 004c 4889C7   		movq	%rax, %rdi
 1873 004f E8000000 		call	_ZN5boost13intrusive_ptrIN3pmt8pmt_baseEED1Ev
 1873      00
 1874 0054 84DB     		testb	%bl, %bl
GAS LISTING /tmp/ccsIN87E.s 			page 123


 1875 0056 747E     		je	.L93
 134:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****         d_msg_handlers[which_port](msg); // Yes, invoke it.
 1876              		.loc 14 134 0
 1877 0058 488B55C8 		movq	-56(%rbp), %rdx
 1878 005c 488D45E8 		leaq	-24(%rbp), %rax
 1879 0060 4889D6   		movq	%rdx, %rsi
 1880 0063 4889C7   		movq	%rax, %rdi
 1881              	.LEHB10:
 1882 0066 E8000000 		call	_ZN5boost13intrusive_ptrIN3pmt8pmt_baseEEC1ERKS3_
 1882      00
 1883              	.LEHE10:
 1884 006b 488B45D8 		movq	-40(%rbp), %rax
 1885 006f 488D5018 		leaq	24(%rax), %rdx
 1886 0073 488B45D0 		movq	-48(%rbp), %rax
 1887 0077 4889C6   		movq	%rax, %rsi
 1888 007a 4889D7   		movq	%rdx, %rdi
 1889              	.LEHB11:
 1890 007d E8000000 		call	_ZNSt3mapIN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS0_8functionIFvS4_EEENS2_10comparatorESaIS
 1890      00
 1891 0082 4889C2   		movq	%rax, %rdx
 1892 0085 488D45E8 		leaq	-24(%rbp), %rax
 1893 0089 4889C6   		movq	%rax, %rsi
 1894 008c 4889D7   		movq	%rdx, %rdi
 1895 008f E8000000 		call	_ZNK5boost9function1IvNS_13intrusive_ptrIN3pmt8pmt_baseEEEEclES4_
 1895      00
 1896              	.LEHE11:
 1897              		.loc 14 134 0 is_stmt 0 discriminator 4
 1898 0094 488D45E8 		leaq	-24(%rbp), %rax
 1899 0098 4889C7   		movq	%rax, %rdi
 1900 009b E8000000 		call	_ZN5boost13intrusive_ptrIN3pmt8pmt_baseEED1Ev
 1900      00
 135:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****       }
 136:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     }
 1901              		.loc 14 136 0 is_stmt 1 discriminator 4
 1902 00a0 EB34     		jmp	.L93
 1903              	.L91:
 1904 00a2 4889C3   		movq	%rax, %rbx
 133:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****         d_msg_handlers[which_port](msg); // Yes, invoke it.
 1905              		.loc 14 133 0
 1906 00a5 488D45E0 		leaq	-32(%rbp), %rax
 1907 00a9 4889C7   		movq	%rax, %rdi
 1908 00ac E8000000 		call	_ZN5boost13intrusive_ptrIN3pmt8pmt_baseEED1Ev
 1908      00
 1909 00b1 4889D8   		movq	%rbx, %rax
 1910 00b4 4889C7   		movq	%rax, %rdi
 1911              	.LEHB12:
 1912 00b7 E8000000 		call	_Unwind_Resume@PLT
 1912      00
 1913              	.L92:
 1914 00bc 4889C3   		movq	%rax, %rbx
 134:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****         d_msg_handlers[which_port](msg); // Yes, invoke it.
 1915              		.loc 14 134 0
 1916 00bf 488D45E8 		leaq	-24(%rbp), %rax
 1917 00c3 4889C7   		movq	%rax, %rdi
 1918 00c6 E8000000 		call	_ZN5boost13intrusive_ptrIN3pmt8pmt_baseEED1Ev
 1918      00
 1919 00cb 4889D8   		movq	%rbx, %rax
GAS LISTING /tmp/ccsIN87E.s 			page 124


 1920 00ce 4889C7   		movq	%rax, %rdi
 1921 00d1 E8000000 		call	_Unwind_Resume@PLT
 1921      00
 1922              	.LEHE12:
 1923              	.L93:
 1924              		.loc 14 136 0
 1925 00d6 90       		nop
 1926 00d7 4883C438 		addq	$56, %rsp
 1927 00db 5B       		popq	%rbx
 1928 00dc 5D       		popq	%rbp
 1929              		.cfi_def_cfa 7, 8
 1930 00dd C3       		ret
 1931              		.cfi_endproc
 1932              	.LFE8638:
 1933              		.section	.gcc_except_table._ZN2gr11basic_block12dispatch_msgEN5boost13intrusive_ptrIN3pmt8pmt_base
 1934              	.LLSDA8638:
 1935 0000 FF       		.byte	0xff
 1936 0001 FF       		.byte	0xff
 1937 0002 01       		.byte	0x1
 1938 0003 17       		.uleb128 .LLSDACSE8638-.LLSDACSB8638
 1939              	.LLSDACSB8638:
 1940 0004 31       		.uleb128 .LEHB8-.LFB8638
 1941 0005 05       		.uleb128 .LEHE8-.LEHB8
 1942 0006 00       		.uleb128 0
 1943 0007 00       		.uleb128 0
 1944 0008 44       		.uleb128 .LEHB9-.LFB8638
 1945 0009 02       		.uleb128 .LEHE9-.LEHB9
 1946 000a A201     		.uleb128 .L91-.LFB8638
 1947 000c 00       		.uleb128 0
 1948 000d 66       		.uleb128 .LEHB10-.LFB8638
 1949 000e 05       		.uleb128 .LEHE10-.LEHB10
 1950 000f 00       		.uleb128 0
 1951 0010 00       		.uleb128 0
 1952 0011 7D       		.uleb128 .LEHB11-.LFB8638
 1953 0012 17       		.uleb128 .LEHE11-.LEHB11
 1954 0013 BC01     		.uleb128 .L92-.LFB8638
 1955 0015 00       		.uleb128 0
 1956 0016 B701     		.uleb128 .LEHB12-.LFB8638
 1957 0018 1F       		.uleb128 .LEHE12-.LEHB12
 1958 0019 00       		.uleb128 0
 1959 001a 00       		.uleb128 0
 1960              	.LLSDACSE8638:
 1961              		.section	.text._ZN2gr11basic_block12dispatch_msgEN5boost13intrusive_ptrIN3pmt8pmt_baseEEES5_,"axG"
 1963              		.section	.text._ZN2gr11basic_block20message_port_is_hierEN5boost13intrusive_ptrIN3pmt8pmt_baseEEE,
 1964              		.align 2
 1965              		.weak	_ZN2gr11basic_block20message_port_is_hierEN5boost13intrusive_ptrIN3pmt8pmt_baseEEE
 1967              	_ZN2gr11basic_block20message_port_is_hierEN5boost13intrusive_ptrIN3pmt8pmt_baseEEE:
 1968              	.LFB8648:
 137:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h **** 
 138:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     // Message passing interface
 139:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     pmt::pmt_t d_message_subscribers;
 140:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h **** 
 141:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****   public:
 142:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     pmt::pmt_t message_subscribers(pmt::pmt_t port);
 143:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     virtual ~basic_block();
 144:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     long unique_id() const { return d_unique_id; }
 145:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     long symbolic_id() const { return d_symbolic_id; }
GAS LISTING /tmp/ccsIN87E.s 			page 125


 146:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h **** 
 147:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     /*! The name of the block */
 148:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     std::string name() const { return d_name; }
 149:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h **** 
 150:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     /*!
 151:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****      * The sybolic name of the block, which is used in the
 152:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****      * block_registry. The name is assigned by the block's constructor
 153:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****      * and never changes during the life of the block.
 154:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****      */
 155:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     std::string symbol_name() const { return d_symbol_name; }
 156:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h **** 
 157:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     gr::io_signature::sptr input_signature() const  { return d_input_signature; }
 158:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     gr::io_signature::sptr output_signature() const { return d_output_signature; }
 159:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     basic_block_sptr to_basic_block(); // Needed for Python type coercion
 160:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h **** 
 161:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     /*!
 162:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****      * True if the block has an alias (see set_block_alias).
 163:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****      */
 164:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     bool alias_set() { return !d_symbol_alias.empty(); }
 165:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h **** 
 166:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     /*!
 167:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****      * Returns the block's alias as a string.
 168:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****      */
 169:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     std::string alias(){ return alias_set()?d_symbol_alias:symbol_name(); }
 170:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h **** 
 171:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     /*!
 172:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****      * Returns the block's alias as PMT.
 173:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****      */
 174:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     pmt::pmt_t alias_pmt(){ return pmt::intern(alias()); }
 175:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h **** 
 176:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     /*!
 177:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****      * Set's a new alias for the block; also adds an entry into the
 178:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****      * block_registry to get the block using either the alias or the
 179:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****      * original symbol name.
 180:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****      */
 181:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     void set_block_alias(std::string name);
 182:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h **** 
 183:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     // ** Message passing interface **
 184:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     void message_port_register_in(pmt::pmt_t port_id);
 185:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     void message_port_register_out(pmt::pmt_t port_id);
 186:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     void message_port_pub(pmt::pmt_t port_id, pmt::pmt_t msg);
 187:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     void message_port_sub(pmt::pmt_t port_id, pmt::pmt_t target);
 188:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     void message_port_unsub(pmt::pmt_t port_id, pmt::pmt_t target);
 189:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h **** 
 190:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     virtual bool message_port_is_hier(pmt::pmt_t port_id) { (void) port_id; return false; }
 1969              		.loc 14 190 0
 1970              		.cfi_startproc
 1971 0000 55       		pushq	%rbp
 1972              		.cfi_def_cfa_offset 16
 1973              		.cfi_offset 6, -16
 1974 0001 4889E5   		movq	%rsp, %rbp
 1975              		.cfi_def_cfa_register 6
 1976 0004 48897DF8 		movq	%rdi, -8(%rbp)
 1977 0008 488975F0 		movq	%rsi, -16(%rbp)
 1978              		.loc 14 190 0
 1979 000c B8000000 		movl	$0, %eax
 1979      00
GAS LISTING /tmp/ccsIN87E.s 			page 126


 1980 0011 5D       		popq	%rbp
 1981              		.cfi_def_cfa 7, 8
 1982 0012 C3       		ret
 1983              		.cfi_endproc
 1984              	.LFE8648:
 1986              		.section	.text._ZN2gr11basic_block23message_port_is_hier_inEN5boost13intrusive_ptrIN3pmt8pmt_baseE
 1987              		.align 2
 1988              		.weak	_ZN2gr11basic_block23message_port_is_hier_inEN5boost13intrusive_ptrIN3pmt8pmt_baseEEE
 1990              	_ZN2gr11basic_block23message_port_is_hier_inEN5boost13intrusive_ptrIN3pmt8pmt_baseEEE:
 1991              	.LFB8649:
 191:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     virtual bool message_port_is_hier_in(pmt::pmt_t port_id) { (void) port_id; return false; }
 1992              		.loc 14 191 0
 1993              		.cfi_startproc
 1994 0000 55       		pushq	%rbp
 1995              		.cfi_def_cfa_offset 16
 1996              		.cfi_offset 6, -16
 1997 0001 4889E5   		movq	%rsp, %rbp
 1998              		.cfi_def_cfa_register 6
 1999 0004 48897DF8 		movq	%rdi, -8(%rbp)
 2000 0008 488975F0 		movq	%rsi, -16(%rbp)
 2001              		.loc 14 191 0
 2002 000c B8000000 		movl	$0, %eax
 2002      00
 2003 0011 5D       		popq	%rbp
 2004              		.cfi_def_cfa 7, 8
 2005 0012 C3       		ret
 2006              		.cfi_endproc
 2007              	.LFE8649:
 2009              		.section	.text._ZN2gr11basic_block24message_port_is_hier_outEN5boost13intrusive_ptrIN3pmt8pmt_base
 2010              		.align 2
 2011              		.weak	_ZN2gr11basic_block24message_port_is_hier_outEN5boost13intrusive_ptrIN3pmt8pmt_baseEEE
 2013              	_ZN2gr11basic_block24message_port_is_hier_outEN5boost13intrusive_ptrIN3pmt8pmt_baseEEE:
 2014              	.LFB8650:
 192:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     virtual bool message_port_is_hier_out(pmt::pmt_t port_id) { (void) port_id; return false; }
 2015              		.loc 14 192 0
 2016              		.cfi_startproc
 2017 0000 55       		pushq	%rbp
 2018              		.cfi_def_cfa_offset 16
 2019              		.cfi_offset 6, -16
 2020 0001 4889E5   		movq	%rsp, %rbp
 2021              		.cfi_def_cfa_register 6
 2022 0004 48897DF8 		movq	%rdi, -8(%rbp)
 2023 0008 488975F0 		movq	%rsi, -16(%rbp)
 2024              		.loc 14 192 0
 2025 000c B8000000 		movl	$0, %eax
 2025      00
 2026 0011 5D       		popq	%rbp
 2027              		.cfi_def_cfa 7, 8
 2028 0012 C3       		ret
 2029              		.cfi_endproc
 2030              	.LFE8650:
 2032              		.section	.text._ZN2gr11basic_block12has_msg_portEN5boost13intrusive_ptrIN3pmt8pmt_baseEEE,"axG",@p
 2033              		.align 2
 2034              		.weak	_ZN2gr11basic_block12has_msg_portEN5boost13intrusive_ptrIN3pmt8pmt_baseEEE
 2036              	_ZN2gr11basic_block12has_msg_portEN5boost13intrusive_ptrIN3pmt8pmt_baseEEE:
 2037              	.LFB8658:
 193:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h **** 
GAS LISTING /tmp/ccsIN87E.s 			page 127


 194:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     /*!
 195:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****      * \brief Get input message port names.
 196:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****      *
 197:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****      * Returns the available input message ports for a block. The
 198:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****      * return object is a PMT vector that is filled with PMT symbols.
 199:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****      */
 200:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     pmt::pmt_t message_ports_in();
 201:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h **** 
 202:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     /*!
 203:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****      * \brief Get output message port names.
 204:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****      *
 205:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****      * Returns the available output message ports for a block. The
 206:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****      * return object is a PMT vector that is filled with PMT symbols.
 207:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****      */
 208:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     pmt::pmt_t message_ports_out();
 209:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h **** 
 210:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     /*!
 211:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****      * Accept msg, place in queue, arrange for thread to be awakened if it's not already.
 212:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****      */
 213:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     void _post(pmt::pmt_t which_port, pmt::pmt_t msg);
 214:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h **** 
 215:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     //! is the queue empty?
 216:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     bool empty_p(pmt::pmt_t which_port) {
 217:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****       if(msg_queue.find(which_port) == msg_queue.end())
 218:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****         throw std::runtime_error("port does not exist!");
 219:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****       return msg_queue[which_port].empty();
 220:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     }
 221:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     bool empty_p() {
 222:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****       bool rv = true;
 223:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****       BOOST_FOREACH(msg_queue_map_t::value_type &i, msg_queue) {
 224:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****         rv &= msg_queue[i.first].empty();
 225:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****       }
 226:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****       return rv;
 227:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     }
 228:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h **** 
 229:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     //! are all msg ports with handlers empty?
 230:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     bool empty_handled_p(pmt::pmt_t which_port){
 231:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****         return (empty_p(which_port) || !has_msg_handler(which_port));
 232:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     }
 233:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     bool empty_handled_p() {
 234:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****       bool rv = true;
 235:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****       BOOST_FOREACH(msg_queue_map_t::value_type &i, msg_queue) {
 236:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****         rv &= empty_handled_p(i.first);
 237:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****       }
 238:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****       return rv;
 239:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     }
 240:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h **** 
 241:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     //! How many messages in the queue?
 242:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     size_t nmsgs(pmt::pmt_t which_port) {
 243:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****       if(msg_queue.find(which_port) == msg_queue.end())
 244:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****         throw std::runtime_error("port does not exist!");
 245:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****       return msg_queue[which_port].size();
 246:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     }
 247:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h **** 
 248:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     //| Acquires and release the mutex
 249:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     void insert_tail( pmt::pmt_t which_port, pmt::pmt_t msg);
 250:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     /*!
GAS LISTING /tmp/ccsIN87E.s 			page 128


 251:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****      * \returns returns pmt at head of queue or pmt::pmt_t() if empty.
 252:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****      */
 253:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     pmt::pmt_t delete_head_nowait( pmt::pmt_t which_port);
 254:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h **** 
 255:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     /*!
 256:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****      * \param[in] which_port The message port from which to get the message.
 257:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****      * \param[in] millisec Optional timeout value (0=no timeout).
 258:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****      * \returns returns pmt at head of queue or pmt::pmt_t() if empty.
 259:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****      */
 260:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     pmt::pmt_t delete_head_blocking(pmt::pmt_t which_port, unsigned int millisec = 0);
 261:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h **** 
 262:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     msg_queue_t::iterator get_iterator(pmt::pmt_t which_port) {
 263:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****       return msg_queue[which_port].begin();
 264:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     }
 265:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h **** 
 266:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     void erase_msg(pmt::pmt_t which_port, msg_queue_t::iterator it) {
 267:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****       msg_queue[which_port].erase(it);
 268:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     }
 269:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h **** 
 270:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     virtual bool has_msg_port(pmt::pmt_t which_port) {
 2038              		.loc 14 270 0
 2039              		.cfi_startproc
 2040 0000 55       		pushq	%rbp
 2041              		.cfi_def_cfa_offset 16
 2042              		.cfi_offset 6, -16
 2043 0001 4889E5   		movq	%rsp, %rbp
 2044              		.cfi_def_cfa_register 6
 2045 0004 4883EC20 		subq	$32, %rsp
 2046 0008 48897DE8 		movq	%rdi, -24(%rbp)
 2047 000c 488975E0 		movq	%rsi, -32(%rbp)
 271:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****       if(msg_queue.find(which_port) != msg_queue.end()) {
 2048              		.loc 14 271 0
 2049 0010 488B45E8 		movq	-24(%rbp), %rax
 2050 0014 48053801 		addq	$312, %rax
 2050      0000
 2051 001a 4889C7   		movq	%rax, %rdi
 2052 001d E8000000 		call	_ZNSt3mapIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt5dequeIS4_SaIS4_EENS2_10comparatorESaISt4
 2052      00
 2053 0022 488945F0 		movq	%rax, -16(%rbp)
 2054 0026 488B45E8 		movq	-24(%rbp), %rax
 2055 002a 488D9038 		leaq	312(%rax), %rdx
 2055      010000
 2056 0031 488B45E0 		movq	-32(%rbp), %rax
 2057 0035 4889C6   		movq	%rax, %rsi
 2058 0038 4889D7   		movq	%rdx, %rdi
 2059 003b E8000000 		call	_ZNSt3mapIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt5dequeIS4_SaIS4_EENS2_10comparatorESaISt4
 2059      00
 2060 0040 488945F8 		movq	%rax, -8(%rbp)
 2061 0044 488D55F0 		leaq	-16(%rbp), %rdx
 2062 0048 488D45F8 		leaq	-8(%rbp), %rax
 2063 004c 4889D6   		movq	%rdx, %rsi
 2064 004f 4889C7   		movq	%rax, %rdi
 2065 0052 E8000000 		call	_ZNKSt17_Rb_tree_iteratorISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt5dequeIS5_SaIS5_
 2065      00
 2066 0057 84C0     		testb	%al, %al
 2067 0059 7407     		je	.L101
 272:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****         return true;
GAS LISTING /tmp/ccsIN87E.s 			page 129


 2068              		.loc 14 272 0
 2069 005b B8010000 		movl	$1, %eax
 2069      00
 2070 0060 EB2A     		jmp	.L102
 2071              	.L101:
 273:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****       }
 274:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****       if(pmt::dict_has_key(d_message_subscribers, which_port)) {
 2072              		.loc 14 274 0
 2073 0062 488B45E8 		movq	-24(%rbp), %rax
 2074 0066 488D9080 		leaq	384(%rax), %rdx
 2074      010000
 2075 006d 488B45E0 		movq	-32(%rbp), %rax
 2076 0071 4889C6   		movq	%rax, %rsi
 2077 0074 4889D7   		movq	%rdx, %rdi
 2078 0077 E8000000 		call	_ZN3pmt12dict_has_keyERKN5boost13intrusive_ptrINS_8pmt_baseEEES5_@PLT
 2078      00
 2079 007c 84C0     		testb	%al, %al
 2080 007e 7407     		je	.L103
 275:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****         return true;
 2081              		.loc 14 275 0
 2082 0080 B8010000 		movl	$1, %eax
 2082      00
 2083 0085 EB05     		jmp	.L102
 2084              	.L103:
 276:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****       }
 277:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****       return false;
 2085              		.loc 14 277 0
 2086 0087 B8000000 		movl	$0, %eax
 2086      00
 2087              	.L102:
 278:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     }
 2088              		.loc 14 278 0
 2089 008c C9       		leave
 2090              		.cfi_def_cfa 7, 8
 2091 008d C3       		ret
 2092              		.cfi_endproc
 2093              	.LFE8658:
 2095              		.section	.text._ZN2gr11basic_block9setup_rpcEv,"axG",@progbits,_ZN2gr11basic_block9setup_rpcEv,com
 2096              		.align 2
 2097              		.weak	_ZN2gr11basic_block9setup_rpcEv
 2099              	_ZN2gr11basic_block9setup_rpcEv:
 2100              	.LFB8660:
 279:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h **** 
 280:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     const msg_queue_map_t& get_msg_map(void) const {
 281:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****       return msg_queue;
 282:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     }
 283:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h **** 
 284:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h **** #ifdef GR_CTRLPORT
 285:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     /*!
 286:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****      * \brief Add an RPC variable (get or set).
 287:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****      *
 288:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****      * Using controlport, we create new getters/setters and need to
 289:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****      * store them. Each block has a vector to do this, and these never
 290:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****      * need to be accessed again once they are registered with the RPC
 291:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****      * backend. This function takes a
 292:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****      * boost::shared_sptr<rpcbasic_base> so that when the block is
 293:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****      * deleted, all RPC registered variables are cleaned up.
GAS LISTING /tmp/ccsIN87E.s 			page 130


 294:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****      *
 295:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****      * \param s an rpcbasic_sptr of the new RPC variable register to store.
 296:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****      */
 297:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     void add_rpc_variable(rpcbasic_sptr s)
 298:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     {
 299:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****       d_rpc_vars.push_back(s);
 300:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     }
 301:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h **** #endif /* GR_CTRLPORT */
 302:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h **** 
 303:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     /*!
 304:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****      * \brief Set up the RPC registered variables.
 305:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****      *
 306:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****      * This must be overloaded by a block that wants to use
 307:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****      * controlport. This is where rpcbasic_register_{get,set} pointers
 308:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****      * are created, which then get wrapped as shared pointers
 309:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****      * (rpcbasic_sptr(...)) and stored using add_rpc_variable.
 310:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****      */
 311:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     virtual void setup_rpc() {};
 2101              		.loc 14 311 0
 2102              		.cfi_startproc
 2103 0000 55       		pushq	%rbp
 2104              		.cfi_def_cfa_offset 16
 2105              		.cfi_offset 6, -16
 2106 0001 4889E5   		movq	%rsp, %rbp
 2107              		.cfi_def_cfa_register 6
 2108 0004 48897DF8 		movq	%rdi, -8(%rbp)
 2109              		.loc 14 311 0
 2110 0008 90       		nop
 2111 0009 5D       		popq	%rbp
 2112              		.cfi_def_cfa 7, 8
 2113 000a C3       		ret
 2114              		.cfi_endproc
 2115              	.LFE8660:
 2117              		.section	.text._ZN2gr11basic_block14check_topologyEii,"axG",@progbits,_ZN2gr11basic_block14check_t
 2118              		.align 2
 2119              		.weak	_ZN2gr11basic_block14check_topologyEii
 2121              	_ZN2gr11basic_block14check_topologyEii:
 2122              	.LFB8663:
 312:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h **** 
 313:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     /*!
 314:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****      * \brief Ask if this block has been registered to the RPC.
 315:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****      *
 316:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****      * We can only register a block once, so we use this to protect us
 317:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****      * from calling it multiple times.
 318:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****      */
 319:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     bool is_rpc_set() { return d_rpc_set; }
 320:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h **** 
 321:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     /*!
 322:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****      * \brief When the block is registered with the RPC, set this.
 323:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****      */
 324:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     void rpc_set() { d_rpc_set = true; }
 325:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h **** 
 326:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     /*!
 327:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****      * \brief Confirm that ninputs and noutputs is an acceptable combination.
 328:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****      *
 329:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****      * \param ninputs	number of input streams connected
 330:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****      * \param noutputs	number of output streams connected
GAS LISTING /tmp/ccsIN87E.s 			page 131


 331:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****      *
 332:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****      * \returns true if this is a valid configuration for this block.
 333:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****      *
 334:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****      * This function is called by the runtime system whenever the
 335:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****      * topology changes. Most classes do not need to override this.
 336:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****      * This check is in addition to the constraints specified by the
 337:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****      * input and output gr::io_signatures.
 338:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****      */
 339:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     virtual bool check_topology(int ninputs, int noutputs) {
 2123              		.loc 14 339 0
 2124              		.cfi_startproc
 2125 0000 55       		pushq	%rbp
 2126              		.cfi_def_cfa_offset 16
 2127              		.cfi_offset 6, -16
 2128 0001 4889E5   		movq	%rsp, %rbp
 2129              		.cfi_def_cfa_register 6
 2130 0004 48897DF8 		movq	%rdi, -8(%rbp)
 2131 0008 8975F4   		movl	%esi, -12(%rbp)
 2132 000b 8955F0   		movl	%edx, -16(%rbp)
 340:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****       (void)ninputs;
 341:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****       (void)noutputs;
 342:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****       return true;
 2133              		.loc 14 342 0
 2134 000e B8010000 		movl	$1, %eax
 2134      00
 343:/home/mpiscopo/gnuradio/include/gnuradio/basic_block.h ****     }
 2135              		.loc 14 343 0
 2136 0013 5D       		popq	%rbp
 2137              		.cfi_def_cfa 7, 8
 2138 0014 C3       		ret
 2139              		.cfi_endproc
 2140              	.LFE8663:
 2142              		.section	.text._ZN2gr5tag_taSERKS0_,"axG",@progbits,_ZN2gr5tag_taSERKS0_,comdat
 2143              		.align 2
 2144              		.weak	_ZN2gr5tag_taSERKS0_
 2146              	_ZN2gr5tag_taSERKS0_:
 2147              	.LFB8678:
 2148              		.file 15 "/home/mpiscopo/gnuradio/include/gnuradio/tags.h"
   1:/home/mpiscopo/gnuradio/include/gnuradio/tags.h **** /* -*- c++ -*- */
   2:/home/mpiscopo/gnuradio/include/gnuradio/tags.h **** /*
   3:/home/mpiscopo/gnuradio/include/gnuradio/tags.h ****  * Copyright 2011,2013 Free Software Foundation, Inc.
   4:/home/mpiscopo/gnuradio/include/gnuradio/tags.h ****  *
   5:/home/mpiscopo/gnuradio/include/gnuradio/tags.h ****  * This file is part of GNU Radio
   6:/home/mpiscopo/gnuradio/include/gnuradio/tags.h ****  *
   7:/home/mpiscopo/gnuradio/include/gnuradio/tags.h ****  * GNU Radio is free software; you can redistribute it and/or modify
   8:/home/mpiscopo/gnuradio/include/gnuradio/tags.h ****  * it under the terms of the GNU General Public License as published by
   9:/home/mpiscopo/gnuradio/include/gnuradio/tags.h ****  * the Free Software Foundation; either version 3, or (at your option)
  10:/home/mpiscopo/gnuradio/include/gnuradio/tags.h ****  * any later version.
  11:/home/mpiscopo/gnuradio/include/gnuradio/tags.h ****  *
  12:/home/mpiscopo/gnuradio/include/gnuradio/tags.h ****  * GNU Radio is distributed in the hope that it will be useful,
  13:/home/mpiscopo/gnuradio/include/gnuradio/tags.h ****  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  14:/home/mpiscopo/gnuradio/include/gnuradio/tags.h ****  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  15:/home/mpiscopo/gnuradio/include/gnuradio/tags.h ****  * GNU General Public License for more details.
  16:/home/mpiscopo/gnuradio/include/gnuradio/tags.h ****  *
  17:/home/mpiscopo/gnuradio/include/gnuradio/tags.h ****  * You should have received a copy of the GNU General Public License
  18:/home/mpiscopo/gnuradio/include/gnuradio/tags.h ****  * along with GNU Radio; see the file COPYING.  If not, write to
  19:/home/mpiscopo/gnuradio/include/gnuradio/tags.h ****  * the Free Software Foundation, Inc., 51 Franklin Street,
GAS LISTING /tmp/ccsIN87E.s 			page 132


  20:/home/mpiscopo/gnuradio/include/gnuradio/tags.h ****  * Boston, MA 02110-1301, USA.
  21:/home/mpiscopo/gnuradio/include/gnuradio/tags.h ****  */
  22:/home/mpiscopo/gnuradio/include/gnuradio/tags.h **** 
  23:/home/mpiscopo/gnuradio/include/gnuradio/tags.h **** #ifndef INCLUDED_GR_TAGS_H
  24:/home/mpiscopo/gnuradio/include/gnuradio/tags.h **** #define INCLUDED_GR_TAGS_H
  25:/home/mpiscopo/gnuradio/include/gnuradio/tags.h **** 
  26:/home/mpiscopo/gnuradio/include/gnuradio/tags.h **** #include <gnuradio/api.h>
  27:/home/mpiscopo/gnuradio/include/gnuradio/tags.h **** #include <pmt/pmt.h>
  28:/home/mpiscopo/gnuradio/include/gnuradio/tags.h **** 
  29:/home/mpiscopo/gnuradio/include/gnuradio/tags.h **** namespace gr {
  30:/home/mpiscopo/gnuradio/include/gnuradio/tags.h **** 
  31:/home/mpiscopo/gnuradio/include/gnuradio/tags.h ****   struct GR_RUNTIME_API tag_t
  32:/home/mpiscopo/gnuradio/include/gnuradio/tags.h ****   {
  33:/home/mpiscopo/gnuradio/include/gnuradio/tags.h ****     //! the item \p tag occurred at (as a uint64_t)
  34:/home/mpiscopo/gnuradio/include/gnuradio/tags.h ****     uint64_t offset;
  35:/home/mpiscopo/gnuradio/include/gnuradio/tags.h **** 
  36:/home/mpiscopo/gnuradio/include/gnuradio/tags.h ****     //! the key of \p tag (as a PMT symbol)
  37:/home/mpiscopo/gnuradio/include/gnuradio/tags.h ****     pmt::pmt_t key;
  38:/home/mpiscopo/gnuradio/include/gnuradio/tags.h **** 
  39:/home/mpiscopo/gnuradio/include/gnuradio/tags.h ****     //! the value of \p tag (as a PMT)
  40:/home/mpiscopo/gnuradio/include/gnuradio/tags.h ****     pmt::pmt_t value;
  41:/home/mpiscopo/gnuradio/include/gnuradio/tags.h **** 
  42:/home/mpiscopo/gnuradio/include/gnuradio/tags.h ****     //! the source ID of \p tag (as a PMT)
  43:/home/mpiscopo/gnuradio/include/gnuradio/tags.h ****     pmt::pmt_t srcid;
  44:/home/mpiscopo/gnuradio/include/gnuradio/tags.h **** 
  45:/home/mpiscopo/gnuradio/include/gnuradio/tags.h ****     //! Used by gr_buffer to mark a tagged as deleted by a specific block. You can usually ignore t
  46:/home/mpiscopo/gnuradio/include/gnuradio/tags.h ****     std::vector<long> marked_deleted;
  47:/home/mpiscopo/gnuradio/include/gnuradio/tags.h **** 
  48:/home/mpiscopo/gnuradio/include/gnuradio/tags.h ****     /*!
  49:/home/mpiscopo/gnuradio/include/gnuradio/tags.h ****      * Comparison function to test which tag, \p x or \p y, came
  50:/home/mpiscopo/gnuradio/include/gnuradio/tags.h ****      * first in time
  51:/home/mpiscopo/gnuradio/include/gnuradio/tags.h ****      */
  52:/home/mpiscopo/gnuradio/include/gnuradio/tags.h ****     static inline bool offset_compare(const tag_t &x,
  53:/home/mpiscopo/gnuradio/include/gnuradio/tags.h ****                                       const tag_t &y)
  54:/home/mpiscopo/gnuradio/include/gnuradio/tags.h ****     {
  55:/home/mpiscopo/gnuradio/include/gnuradio/tags.h ****       return x.offset < y.offset;
  56:/home/mpiscopo/gnuradio/include/gnuradio/tags.h ****     }
  57:/home/mpiscopo/gnuradio/include/gnuradio/tags.h **** 
  58:/home/mpiscopo/gnuradio/include/gnuradio/tags.h ****     inline bool operator == (const tag_t &t) const
  59:/home/mpiscopo/gnuradio/include/gnuradio/tags.h ****     {
  60:/home/mpiscopo/gnuradio/include/gnuradio/tags.h ****       return (t.key == key) && (t.value == value) && \
  61:/home/mpiscopo/gnuradio/include/gnuradio/tags.h ****       (t.srcid == srcid) && (t.offset == offset);
  62:/home/mpiscopo/gnuradio/include/gnuradio/tags.h ****     }
  63:/home/mpiscopo/gnuradio/include/gnuradio/tags.h **** 
  64:/home/mpiscopo/gnuradio/include/gnuradio/tags.h ****     tag_t()
  65:/home/mpiscopo/gnuradio/include/gnuradio/tags.h ****       : offset(0),
  66:/home/mpiscopo/gnuradio/include/gnuradio/tags.h ****         key(pmt::PMT_NIL),
  67:/home/mpiscopo/gnuradio/include/gnuradio/tags.h ****         value(pmt::PMT_NIL),
  68:/home/mpiscopo/gnuradio/include/gnuradio/tags.h ****         srcid(pmt::PMT_F)    // consistent with default srcid value in block::add_item_tag
  69:/home/mpiscopo/gnuradio/include/gnuradio/tags.h ****     {
  70:/home/mpiscopo/gnuradio/include/gnuradio/tags.h ****     }
  71:/home/mpiscopo/gnuradio/include/gnuradio/tags.h **** 
  72:/home/mpiscopo/gnuradio/include/gnuradio/tags.h ****     tag_t(const tag_t &rhs)
  73:/home/mpiscopo/gnuradio/include/gnuradio/tags.h ****       : offset(rhs.offset),
  74:/home/mpiscopo/gnuradio/include/gnuradio/tags.h ****         key(rhs.key),
  75:/home/mpiscopo/gnuradio/include/gnuradio/tags.h ****         value(rhs.value),
  76:/home/mpiscopo/gnuradio/include/gnuradio/tags.h ****         srcid(rhs.srcid)
GAS LISTING /tmp/ccsIN87E.s 			page 133


  77:/home/mpiscopo/gnuradio/include/gnuradio/tags.h ****     {
  78:/home/mpiscopo/gnuradio/include/gnuradio/tags.h ****     }
  79:/home/mpiscopo/gnuradio/include/gnuradio/tags.h ****     tag_t& operator=(const tag_t &rhs)
 2149              		.loc 15 79 0
 2150              		.cfi_startproc
 2151 0000 55       		pushq	%rbp
 2152              		.cfi_def_cfa_offset 16
 2153              		.cfi_offset 6, -16
 2154 0001 4889E5   		movq	%rsp, %rbp
 2155              		.cfi_def_cfa_register 6
 2156 0004 4883EC10 		subq	$16, %rsp
 2157 0008 48897DF8 		movq	%rdi, -8(%rbp)
 2158 000c 488975F0 		movq	%rsi, -16(%rbp)
  80:/home/mpiscopo/gnuradio/include/gnuradio/tags.h ****     {
  81:/home/mpiscopo/gnuradio/include/gnuradio/tags.h ****       if (this != &rhs) {
 2159              		.loc 15 81 0
 2160 0010 488B45F8 		movq	-8(%rbp), %rax
 2161 0014 483B45F0 		cmpq	-16(%rbp), %rax
 2162 0018 745F     		je	.L108
  82:/home/mpiscopo/gnuradio/include/gnuradio/tags.h ****         offset = rhs.offset;
 2163              		.loc 15 82 0
 2164 001a 488B45F0 		movq	-16(%rbp), %rax
 2165 001e 488B10   		movq	(%rax), %rdx
 2166 0021 488B45F8 		movq	-8(%rbp), %rax
 2167 0025 488910   		movq	%rdx, (%rax)
  83:/home/mpiscopo/gnuradio/include/gnuradio/tags.h ****         key = rhs.key;
 2168              		.loc 15 83 0
 2169 0028 488B45F0 		movq	-16(%rbp), %rax
 2170 002c 488D5008 		leaq	8(%rax), %rdx
 2171 0030 488B45F8 		movq	-8(%rbp), %rax
 2172 0034 4883C008 		addq	$8, %rax
 2173 0038 4889D6   		movq	%rdx, %rsi
 2174 003b 4889C7   		movq	%rax, %rdi
 2175 003e E8000000 		call	_ZN5boost13intrusive_ptrIN3pmt8pmt_baseEEaSERKS3_
 2175      00
  84:/home/mpiscopo/gnuradio/include/gnuradio/tags.h ****         value = rhs.value;
 2176              		.loc 15 84 0
 2177 0043 488B45F0 		movq	-16(%rbp), %rax
 2178 0047 488D5010 		leaq	16(%rax), %rdx
 2179 004b 488B45F8 		movq	-8(%rbp), %rax
 2180 004f 4883C010 		addq	$16, %rax
 2181 0053 4889D6   		movq	%rdx, %rsi
 2182 0056 4889C7   		movq	%rax, %rdi
 2183 0059 E8000000 		call	_ZN5boost13intrusive_ptrIN3pmt8pmt_baseEEaSERKS3_
 2183      00
  85:/home/mpiscopo/gnuradio/include/gnuradio/tags.h ****         srcid = rhs.srcid;
 2184              		.loc 15 85 0
 2185 005e 488B45F0 		movq	-16(%rbp), %rax
 2186 0062 488D5018 		leaq	24(%rax), %rdx
 2187 0066 488B45F8 		movq	-8(%rbp), %rax
 2188 006a 4883C018 		addq	$24, %rax
 2189 006e 4889D6   		movq	%rdx, %rsi
 2190 0071 4889C7   		movq	%rax, %rdi
 2191 0074 E8000000 		call	_ZN5boost13intrusive_ptrIN3pmt8pmt_baseEEaSERKS3_
 2191      00
 2192              	.L108:
  86:/home/mpiscopo/gnuradio/include/gnuradio/tags.h ****       }
GAS LISTING /tmp/ccsIN87E.s 			page 134


  87:/home/mpiscopo/gnuradio/include/gnuradio/tags.h ****       return (*this);
 2193              		.loc 15 87 0
 2194 0079 488B45F8 		movq	-8(%rbp), %rax
  88:/home/mpiscopo/gnuradio/include/gnuradio/tags.h ****     }
 2195              		.loc 15 88 0
 2196 007d C9       		leave
 2197              		.cfi_def_cfa 7, 8
 2198 007e C3       		ret
 2199              		.cfi_endproc
 2200              	.LFE8678:
 2202              		.section	.text._ZN2gr5tag_tD2Ev,"axG",@progbits,_ZN2gr5tag_tD5Ev,comdat
 2203              		.align 2
 2204              		.weak	_ZN2gr5tag_tD2Ev
 2206              	_ZN2gr5tag_tD2Ev:
 2207              	.LFB8680:
  89:/home/mpiscopo/gnuradio/include/gnuradio/tags.h **** 
  90:/home/mpiscopo/gnuradio/include/gnuradio/tags.h ****     ~tag_t()
 2208              		.loc 15 90 0
 2209              		.cfi_startproc
 2210 0000 55       		pushq	%rbp
 2211              		.cfi_def_cfa_offset 16
 2212              		.cfi_offset 6, -16
 2213 0001 4889E5   		movq	%rsp, %rbp
 2214              		.cfi_def_cfa_register 6
 2215 0004 4883EC10 		subq	$16, %rsp
 2216 0008 48897DF8 		movq	%rdi, -8(%rbp)
 2217              	.LBB24:
  91:/home/mpiscopo/gnuradio/include/gnuradio/tags.h ****     {
 2218              		.loc 15 91 0
 2219 000c 488B45F8 		movq	-8(%rbp), %rax
 2220 0010 4883C020 		addq	$32, %rax
 2221 0014 4889C7   		movq	%rax, %rdi
 2222 0017 E8000000 		call	_ZNSt6vectorIlSaIlEED1Ev
 2222      00
 2223 001c 488B45F8 		movq	-8(%rbp), %rax
 2224 0020 4883C018 		addq	$24, %rax
 2225 0024 4889C7   		movq	%rax, %rdi
 2226 0027 E8000000 		call	_ZN5boost13intrusive_ptrIN3pmt8pmt_baseEED1Ev
 2226      00
 2227 002c 488B45F8 		movq	-8(%rbp), %rax
 2228 0030 4883C010 		addq	$16, %rax
 2229 0034 4889C7   		movq	%rax, %rdi
 2230 0037 E8000000 		call	_ZN5boost13intrusive_ptrIN3pmt8pmt_baseEED1Ev
 2230      00
 2231 003c 488B45F8 		movq	-8(%rbp), %rax
 2232 0040 4883C008 		addq	$8, %rax
 2233 0044 4889C7   		movq	%rax, %rdi
 2234 0047 E8000000 		call	_ZN5boost13intrusive_ptrIN3pmt8pmt_baseEED1Ev
 2234      00
 2235              	.LBE24:
  92:/home/mpiscopo/gnuradio/include/gnuradio/tags.h ****     }
 2236              		.loc 15 92 0
 2237 004c 90       		nop
 2238 004d C9       		leave
 2239              		.cfi_def_cfa 7, 8
 2240 004e C3       		ret
 2241              		.cfi_endproc
GAS LISTING /tmp/ccsIN87E.s 			page 135


 2242              	.LFE8680:
 2244              		.weak	_ZN2gr5tag_tD1Ev
 2245              		.set	_ZN2gr5tag_tD1Ev,_ZN2gr5tag_tD2Ev
 2246              		.section	.rodata
 2247 0042 0000     		.align 4
 2250              	_ZN5boost16exception_detail30clone_current_exception_resultL7successE:
 2251 0044 00000000 		.zero	4
 2252              		.align 4
 2255              	_ZN5boost16exception_detail30clone_current_exception_resultL9bad_allocE:
 2256 0048 01000000 		.long	1
 2257              		.align 4
 2260              	_ZN5boost16exception_detail30clone_current_exception_resultL13bad_exceptionE:
 2261 004c 02000000 		.long	2
 2262              		.align 4
 2265              	_ZN5boost16exception_detail30clone_current_exception_resultL13not_supportedE:
 2266 0050 03000000 		.long	3
 2267              		.section	.text._ZN5boost10shared_ptrIKNS_16exception_detail10clone_baseEED2Ev,"axG",@progbits,_ZN5
 2268              		.align 2
 2269              		.weak	_ZN5boost10shared_ptrIKNS_16exception_detail10clone_baseEED2Ev
 2271              	_ZN5boost10shared_ptrIKNS_16exception_detail10clone_baseEED2Ev:
 2272              	.LFB9839:
 2273              		.loc 7 336 0
 2274              		.cfi_startproc
 2275 0000 55       		pushq	%rbp
 2276              		.cfi_def_cfa_offset 16
 2277              		.cfi_offset 6, -16
 2278 0001 4889E5   		movq	%rsp, %rbp
 2279              		.cfi_def_cfa_register 6
 2280 0004 4883EC10 		subq	$16, %rsp
 2281 0008 48897DF8 		movq	%rdi, -8(%rbp)
 2282              	.LBB25:
 2283              		.loc 7 336 0
 2284 000c 488B45F8 		movq	-8(%rbp), %rax
 2285 0010 4883C008 		addq	$8, %rax
 2286 0014 4889C7   		movq	%rax, %rdi
 2287 0017 E8000000 		call	_ZN5boost6detail12shared_countD1Ev
 2287      00
 2288              	.LBE25:
 2289 001c 90       		nop
 2290 001d C9       		leave
 2291              		.cfi_def_cfa 7, 8
 2292 001e C3       		ret
 2293              		.cfi_endproc
 2294              	.LFE9839:
 2296              		.weak	_ZN5boost10shared_ptrIKNS_16exception_detail10clone_baseEED1Ev
 2297              		.set	_ZN5boost10shared_ptrIKNS_16exception_detail10clone_baseEED1Ev,_ZN5boost10shared_ptrIKNS_16ex
 2298              		.section	.text._ZN5boost13exception_ptrC2ERKNS_10shared_ptrIKNS_16exception_detail10clone_baseEEE,
 2299              		.align 2
 2300              		.weak	_ZN5boost13exception_ptrC2ERKNS_10shared_ptrIKNS_16exception_detail10clone_baseEEE
 2302              	_ZN5boost13exception_ptrC2ERKNS_10shared_ptrIKNS_16exception_detail10clone_baseEEE:
 2303              	.LFB9844:
 2304              		.file 16 "/usr/include/boost/exception/detail/exception_ptr.hpp"
   1:/usr/include/boost/exception/detail/exception_ptr.hpp **** //Copyright (c) 2006-2009 Emil Dotchevski and Reverge Studios, Inc.
   2:/usr/include/boost/exception/detail/exception_ptr.hpp **** 
   3:/usr/include/boost/exception/detail/exception_ptr.hpp **** //Distributed under the Boost Software License, Version 1.0. (See accompanying
   4:/usr/include/boost/exception/detail/exception_ptr.hpp **** //file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
   5:/usr/include/boost/exception/detail/exception_ptr.hpp **** 
GAS LISTING /tmp/ccsIN87E.s 			page 136


   6:/usr/include/boost/exception/detail/exception_ptr.hpp **** #ifndef UUID_618474C2DE1511DEB74A388C56D89593
   7:/usr/include/boost/exception/detail/exception_ptr.hpp **** #define UUID_618474C2DE1511DEB74A388C56D89593
   8:/usr/include/boost/exception/detail/exception_ptr.hpp **** #if (__GNUC__*100+__GNUC_MINOR__>301) && !defined(BOOST_EXCEPTION_ENABLE_WARNINGS)
   9:/usr/include/boost/exception/detail/exception_ptr.hpp **** #pragma GCC system_header
  10:/usr/include/boost/exception/detail/exception_ptr.hpp **** #endif
  11:/usr/include/boost/exception/detail/exception_ptr.hpp **** #if defined(_MSC_VER) && !defined(BOOST_EXCEPTION_ENABLE_WARNINGS)
  12:/usr/include/boost/exception/detail/exception_ptr.hpp **** #pragma warning(push,1)
  13:/usr/include/boost/exception/detail/exception_ptr.hpp **** #endif
  14:/usr/include/boost/exception/detail/exception_ptr.hpp **** 
  15:/usr/include/boost/exception/detail/exception_ptr.hpp **** #include <boost/config.hpp>
  16:/usr/include/boost/exception/detail/exception_ptr.hpp **** #ifdef BOOST_NO_EXCEPTIONS
  17:/usr/include/boost/exception/detail/exception_ptr.hpp **** #error This header requires exception handling to be enabled.
  18:/usr/include/boost/exception/detail/exception_ptr.hpp **** #endif
  19:/usr/include/boost/exception/detail/exception_ptr.hpp **** #include <boost/exception/exception.hpp>
  20:/usr/include/boost/exception/detail/exception_ptr.hpp **** #include <boost/exception/info.hpp>
  21:/usr/include/boost/exception/detail/exception_ptr.hpp **** #include <boost/exception/diagnostic_information.hpp>
  22:/usr/include/boost/exception/detail/exception_ptr.hpp **** #include <boost/exception/detail/type_info.hpp>
  23:/usr/include/boost/exception/detail/exception_ptr.hpp **** #include <boost/exception/detail/clone_current_exception.hpp>
  24:/usr/include/boost/exception/detail/exception_ptr.hpp **** #ifndef BOOST_NO_RTTI
  25:/usr/include/boost/exception/detail/exception_ptr.hpp **** #include <boost/core/demangle.hpp>
  26:/usr/include/boost/exception/detail/exception_ptr.hpp **** #endif
  27:/usr/include/boost/exception/detail/exception_ptr.hpp **** #include <boost/shared_ptr.hpp>
  28:/usr/include/boost/exception/detail/exception_ptr.hpp **** #include <stdexcept>
  29:/usr/include/boost/exception/detail/exception_ptr.hpp **** #include <new>
  30:/usr/include/boost/exception/detail/exception_ptr.hpp **** #include <ios>
  31:/usr/include/boost/exception/detail/exception_ptr.hpp **** #include <stdlib.h>
  32:/usr/include/boost/exception/detail/exception_ptr.hpp **** 
  33:/usr/include/boost/exception/detail/exception_ptr.hpp **** namespace
  34:/usr/include/boost/exception/detail/exception_ptr.hpp **** boost
  35:/usr/include/boost/exception/detail/exception_ptr.hpp ****     {
  36:/usr/include/boost/exception/detail/exception_ptr.hpp ****     class exception_ptr;
  37:/usr/include/boost/exception/detail/exception_ptr.hpp ****     BOOST_NORETURN void rethrow_exception( exception_ptr const & );
  38:/usr/include/boost/exception/detail/exception_ptr.hpp ****     exception_ptr current_exception();
  39:/usr/include/boost/exception/detail/exception_ptr.hpp **** 
  40:/usr/include/boost/exception/detail/exception_ptr.hpp ****     class
  41:/usr/include/boost/exception/detail/exception_ptr.hpp ****     exception_ptr
  42:/usr/include/boost/exception/detail/exception_ptr.hpp ****         {
  43:/usr/include/boost/exception/detail/exception_ptr.hpp ****         typedef boost::shared_ptr<exception_detail::clone_base const> impl;
  44:/usr/include/boost/exception/detail/exception_ptr.hpp ****         impl ptr_;
  45:/usr/include/boost/exception/detail/exception_ptr.hpp ****         friend void rethrow_exception( exception_ptr const & );
  46:/usr/include/boost/exception/detail/exception_ptr.hpp ****         typedef exception_detail::clone_base const * (impl::*unspecified_bool_type)() const;
  47:/usr/include/boost/exception/detail/exception_ptr.hpp ****         public:
  48:/usr/include/boost/exception/detail/exception_ptr.hpp ****         exception_ptr()
  49:/usr/include/boost/exception/detail/exception_ptr.hpp ****             {
  50:/usr/include/boost/exception/detail/exception_ptr.hpp ****             }
  51:/usr/include/boost/exception/detail/exception_ptr.hpp ****         explicit
  52:/usr/include/boost/exception/detail/exception_ptr.hpp ****         exception_ptr( impl const & ptr ):
 2305              		.loc 16 52 0
 2306              		.cfi_startproc
 2307 0000 55       		pushq	%rbp
 2308              		.cfi_def_cfa_offset 16
 2309              		.cfi_offset 6, -16
 2310 0001 4889E5   		movq	%rsp, %rbp
 2311              		.cfi_def_cfa_register 6
 2312 0004 4883EC10 		subq	$16, %rsp
 2313 0008 48897DF8 		movq	%rdi, -8(%rbp)
 2314 000c 488975F0 		movq	%rsi, -16(%rbp)
GAS LISTING /tmp/ccsIN87E.s 			page 137


 2315              	.LBB26:
  53:/usr/include/boost/exception/detail/exception_ptr.hpp ****             ptr_(ptr)
 2316              		.loc 16 53 0
 2317 0010 488B45F8 		movq	-8(%rbp), %rax
 2318 0014 488B55F0 		movq	-16(%rbp), %rdx
 2319 0018 4889D6   		movq	%rdx, %rsi
 2320 001b 4889C7   		movq	%rax, %rdi
 2321 001e E8000000 		call	_ZN5boost10shared_ptrIKNS_16exception_detail10clone_baseEEC1ERKS4_
 2321      00
 2322              	.LBE26:
  54:/usr/include/boost/exception/detail/exception_ptr.hpp ****             {
  55:/usr/include/boost/exception/detail/exception_ptr.hpp ****             }
 2323              		.loc 16 55 0
 2324 0023 90       		nop
 2325 0024 C9       		leave
 2326              		.cfi_def_cfa 7, 8
 2327 0025 C3       		ret
 2328              		.cfi_endproc
 2329              	.LFE9844:
 2331              		.weak	_ZN5boost13exception_ptrC1ERKNS_10shared_ptrIKNS_16exception_detail10clone_baseEEE
 2332              		.set	_ZN5boost13exception_ptrC1ERKNS_10shared_ptrIKNS_16exception_detail10clone_baseEEE,_ZN5boost1
 2333              		.section	.text._ZN5boost16exception_detail10bad_alloc_D2Ev,"axG",@progbits,_ZN5boost16exception_de
 2334              		.align 2
 2335              		.weak	_ZN5boost16exception_detail10bad_alloc_D2Ev
 2337              	_ZN5boost16exception_detail10bad_alloc_D2Ev:
 2338              	.LFB9852:
  56:/usr/include/boost/exception/detail/exception_ptr.hpp ****         bool
  57:/usr/include/boost/exception/detail/exception_ptr.hpp ****         operator==( exception_ptr const & other ) const
  58:/usr/include/boost/exception/detail/exception_ptr.hpp ****             {
  59:/usr/include/boost/exception/detail/exception_ptr.hpp ****             return ptr_==other.ptr_;
  60:/usr/include/boost/exception/detail/exception_ptr.hpp ****             }
  61:/usr/include/boost/exception/detail/exception_ptr.hpp ****         bool
  62:/usr/include/boost/exception/detail/exception_ptr.hpp ****         operator!=( exception_ptr const & other ) const
  63:/usr/include/boost/exception/detail/exception_ptr.hpp ****             {
  64:/usr/include/boost/exception/detail/exception_ptr.hpp ****             return ptr_!=other.ptr_;
  65:/usr/include/boost/exception/detail/exception_ptr.hpp ****             }
  66:/usr/include/boost/exception/detail/exception_ptr.hpp ****         operator unspecified_bool_type() const
  67:/usr/include/boost/exception/detail/exception_ptr.hpp ****             {
  68:/usr/include/boost/exception/detail/exception_ptr.hpp ****             return ptr_?&impl::get:0;
  69:/usr/include/boost/exception/detail/exception_ptr.hpp ****             }
  70:/usr/include/boost/exception/detail/exception_ptr.hpp ****         };
  71:/usr/include/boost/exception/detail/exception_ptr.hpp **** 
  72:/usr/include/boost/exception/detail/exception_ptr.hpp ****     template <class T>
  73:/usr/include/boost/exception/detail/exception_ptr.hpp ****     inline
  74:/usr/include/boost/exception/detail/exception_ptr.hpp ****     exception_ptr
  75:/usr/include/boost/exception/detail/exception_ptr.hpp ****     copy_exception( T const & e )
  76:/usr/include/boost/exception/detail/exception_ptr.hpp ****         {
  77:/usr/include/boost/exception/detail/exception_ptr.hpp ****         try
  78:/usr/include/boost/exception/detail/exception_ptr.hpp ****             {
  79:/usr/include/boost/exception/detail/exception_ptr.hpp ****             throw enable_current_exception(e);
  80:/usr/include/boost/exception/detail/exception_ptr.hpp ****             }
  81:/usr/include/boost/exception/detail/exception_ptr.hpp ****         catch(
  82:/usr/include/boost/exception/detail/exception_ptr.hpp ****         ... )
  83:/usr/include/boost/exception/detail/exception_ptr.hpp ****             {
  84:/usr/include/boost/exception/detail/exception_ptr.hpp ****             return current_exception();
  85:/usr/include/boost/exception/detail/exception_ptr.hpp ****             }
  86:/usr/include/boost/exception/detail/exception_ptr.hpp ****         }
GAS LISTING /tmp/ccsIN87E.s 			page 138


  87:/usr/include/boost/exception/detail/exception_ptr.hpp **** 
  88:/usr/include/boost/exception/detail/exception_ptr.hpp **** #ifndef BOOST_NO_RTTI
  89:/usr/include/boost/exception/detail/exception_ptr.hpp ****     typedef error_info<struct tag_original_exception_type,std::type_info const *> original_exceptio
  90:/usr/include/boost/exception/detail/exception_ptr.hpp **** 
  91:/usr/include/boost/exception/detail/exception_ptr.hpp ****     inline
  92:/usr/include/boost/exception/detail/exception_ptr.hpp ****     std::string
  93:/usr/include/boost/exception/detail/exception_ptr.hpp ****     to_string( original_exception_type const & x )
  94:/usr/include/boost/exception/detail/exception_ptr.hpp ****         {
  95:/usr/include/boost/exception/detail/exception_ptr.hpp ****         return core::demangle(x.value()->name());
  96:/usr/include/boost/exception/detail/exception_ptr.hpp ****         }
  97:/usr/include/boost/exception/detail/exception_ptr.hpp **** #endif
  98:/usr/include/boost/exception/detail/exception_ptr.hpp **** 
  99:/usr/include/boost/exception/detail/exception_ptr.hpp ****     namespace
 100:/usr/include/boost/exception/detail/exception_ptr.hpp ****     exception_detail
 101:/usr/include/boost/exception/detail/exception_ptr.hpp ****         {
 102:/usr/include/boost/exception/detail/exception_ptr.hpp ****         struct
 103:/usr/include/boost/exception/detail/exception_ptr.hpp ****         bad_alloc_:
 104:/usr/include/boost/exception/detail/exception_ptr.hpp ****             boost::exception,
 105:/usr/include/boost/exception/detail/exception_ptr.hpp ****             std::bad_alloc
 106:/usr/include/boost/exception/detail/exception_ptr.hpp ****                 {
 107:/usr/include/boost/exception/detail/exception_ptr.hpp ****                 ~bad_alloc_() throw() { }
 2339              		.loc 16 107 0
 2340              		.cfi_startproc
 2341 0000 55       		pushq	%rbp
 2342              		.cfi_def_cfa_offset 16
 2343              		.cfi_offset 6, -16
 2344 0001 4889E5   		movq	%rsp, %rbp
 2345              		.cfi_def_cfa_register 6
 2346 0004 4883EC10 		subq	$16, %rsp
 2347 0008 48897DF8 		movq	%rdi, -8(%rbp)
 2348              	.LBB27:
 2349              		.loc 16 107 0
 2350 000c 488D1500 		leaq	16+_ZTVN5boost16exception_detail10bad_alloc_E(%rip), %rdx
 2350      000000
 2351 0013 488B45F8 		movq	-8(%rbp), %rax
 2352 0017 488910   		movq	%rdx, (%rax)
 2353 001a 488D1500 		leaq	48+_ZTVN5boost16exception_detail10bad_alloc_E(%rip), %rdx
 2353      000000
 2354 0021 488B45F8 		movq	-8(%rbp), %rax
 2355 0025 48895028 		movq	%rdx, 40(%rax)
 2356 0029 488B45F8 		movq	-8(%rbp), %rax
 2357 002d 4883C028 		addq	$40, %rax
 2358 0031 4889C7   		movq	%rax, %rdi
 2359 0034 E8000000 		call	_ZNSt9bad_allocD2Ev@PLT
 2359      00
 2360 0039 488B45F8 		movq	-8(%rbp), %rax
 2361 003d 4889C7   		movq	%rax, %rdi
 2362 0040 E8000000 		call	_ZN5boost9exceptionD2Ev
 2362      00
 2363              	.LBE27:
 2364 0045 90       		nop
 2365 0046 C9       		leave
 2366              		.cfi_def_cfa 7, 8
 2367 0047 C3       		ret
 2368              		.cfi_endproc
 2369              	.LFE9852:
 2371              		.set	.LTHUNK0,_ZN5boost16exception_detail10bad_alloc_D2Ev
GAS LISTING /tmp/ccsIN87E.s 			page 139


 2372              		.weak	_ZThn40_N5boost16exception_detail10bad_alloc_D1Ev
 2374              	_ZThn40_N5boost16exception_detail10bad_alloc_D1Ev:
 2375              	.LFB15689:
 2376              		.loc 16 107 0
 2377              		.cfi_startproc
 2378 0048 4883EF28 		subq	$40, %rdi
 2379 004c EBB2     		jmp	.LTHUNK0
 2380              		.cfi_endproc
 2381              	.LFE15689:
 2383              		.weak	_ZN5boost16exception_detail10bad_alloc_D1Ev
 2384              		.set	_ZN5boost16exception_detail10bad_alloc_D1Ev,_ZN5boost16exception_detail10bad_alloc_D2Ev
 2385              		.section	.text._ZN5boost16exception_detail10bad_alloc_D0Ev,"axG",@progbits,_ZN5boost16exception_de
 2386              		.align 2
 2387              		.weak	_ZN5boost16exception_detail10bad_alloc_D0Ev
 2389              	_ZN5boost16exception_detail10bad_alloc_D0Ev:
 2390              	.LFB9854:
 2391              		.loc 16 107 0
 2392              		.cfi_startproc
 2393 0000 55       		pushq	%rbp
 2394              		.cfi_def_cfa_offset 16
 2395              		.cfi_offset 6, -16
 2396 0001 4889E5   		movq	%rsp, %rbp
 2397              		.cfi_def_cfa_register 6
 2398 0004 4883EC10 		subq	$16, %rsp
 2399 0008 48897DF8 		movq	%rdi, -8(%rbp)
 2400              		.loc 16 107 0
 2401 000c 488B45F8 		movq	-8(%rbp), %rax
 2402 0010 4889C7   		movq	%rax, %rdi
 2403 0013 E8000000 		call	_ZN5boost16exception_detail10bad_alloc_D1Ev
 2403      00
 2404 0018 488B45F8 		movq	-8(%rbp), %rax
 2405 001c BE300000 		movl	$48, %esi
 2405      00
 2406 0021 4889C7   		movq	%rax, %rdi
 2407 0024 E8000000 		call	_ZdlPvm@PLT
 2407      00
 2408 0029 C9       		leave
 2409              		.cfi_def_cfa 7, 8
 2410 002a C3       		ret
 2411              		.cfi_endproc
 2412              	.LFE9854:
 2414              		.set	.LTHUNK1,_ZN5boost16exception_detail10bad_alloc_D0Ev
 2415              		.weak	_ZThn40_N5boost16exception_detail10bad_alloc_D0Ev
 2417              	_ZThn40_N5boost16exception_detail10bad_alloc_D0Ev:
 2418              	.LFB15690:
 2419              		.loc 16 107 0
 2420              		.cfi_startproc
 2421 002b 4883EF28 		subq	$40, %rdi
 2422 002f EBCF     		jmp	.LTHUNK1
 2423              		.cfi_endproc
 2424              	.LFE15690:
 2426              		.section	.text._ZN5boost16exception_detail14bad_exception_D2Ev,"axG",@progbits,_ZN5boost16exceptio
 2427              		.align 2
 2428              		.weak	_ZN5boost16exception_detail14bad_exception_D2Ev
 2430              	_ZN5boost16exception_detail14bad_exception_D2Ev:
 2431              	.LFB9856:
 108:/usr/include/boost/exception/detail/exception_ptr.hpp ****                 };
GAS LISTING /tmp/ccsIN87E.s 			page 140


 109:/usr/include/boost/exception/detail/exception_ptr.hpp **** 
 110:/usr/include/boost/exception/detail/exception_ptr.hpp ****         struct
 111:/usr/include/boost/exception/detail/exception_ptr.hpp ****         bad_exception_:
 112:/usr/include/boost/exception/detail/exception_ptr.hpp ****             boost::exception,
 113:/usr/include/boost/exception/detail/exception_ptr.hpp ****             std::bad_exception
 114:/usr/include/boost/exception/detail/exception_ptr.hpp ****                 {
 115:/usr/include/boost/exception/detail/exception_ptr.hpp ****                 ~bad_exception_() throw() { }
 2432              		.loc 16 115 0
 2433              		.cfi_startproc
 2434 0000 55       		pushq	%rbp
 2435              		.cfi_def_cfa_offset 16
 2436              		.cfi_offset 6, -16
 2437 0001 4889E5   		movq	%rsp, %rbp
 2438              		.cfi_def_cfa_register 6
 2439 0004 4883EC10 		subq	$16, %rsp
 2440 0008 48897DF8 		movq	%rdi, -8(%rbp)
 2441              	.LBB28:
 2442              		.loc 16 115 0
 2443 000c 488D1500 		leaq	16+_ZTVN5boost16exception_detail14bad_exception_E(%rip), %rdx
 2443      000000
 2444 0013 488B45F8 		movq	-8(%rbp), %rax
 2445 0017 488910   		movq	%rdx, (%rax)
 2446 001a 488D1500 		leaq	48+_ZTVN5boost16exception_detail14bad_exception_E(%rip), %rdx
 2446      000000
 2447 0021 488B45F8 		movq	-8(%rbp), %rax
 2448 0025 48895028 		movq	%rdx, 40(%rax)
 2449 0029 488B45F8 		movq	-8(%rbp), %rax
 2450 002d 4883C028 		addq	$40, %rax
 2451 0031 4889C7   		movq	%rax, %rdi
 2452 0034 E8000000 		call	_ZNSt13bad_exceptionD2Ev@PLT
 2452      00
 2453 0039 488B45F8 		movq	-8(%rbp), %rax
 2454 003d 4889C7   		movq	%rax, %rdi
 2455 0040 E8000000 		call	_ZN5boost9exceptionD2Ev
 2455      00
 2456              	.LBE28:
 2457 0045 90       		nop
 2458 0046 C9       		leave
 2459              		.cfi_def_cfa 7, 8
 2460 0047 C3       		ret
 2461              		.cfi_endproc
 2462              	.LFE9856:
 2464              		.set	.LTHUNK2,_ZN5boost16exception_detail14bad_exception_D2Ev
 2465              		.weak	_ZThn40_N5boost16exception_detail14bad_exception_D1Ev
 2467              	_ZThn40_N5boost16exception_detail14bad_exception_D1Ev:
 2468              	.LFB15691:
 2469              		.loc 16 115 0
 2470              		.cfi_startproc
 2471 0048 4883EF28 		subq	$40, %rdi
 2472 004c EBB2     		jmp	.LTHUNK2
 2473              		.cfi_endproc
 2474              	.LFE15691:
 2476              		.weak	_ZN5boost16exception_detail14bad_exception_D1Ev
 2477              		.set	_ZN5boost16exception_detail14bad_exception_D1Ev,_ZN5boost16exception_detail14bad_exception_D2
 2478              		.section	.text._ZN5boost16exception_detail14bad_exception_D0Ev,"axG",@progbits,_ZN5boost16exceptio
 2479              		.align 2
 2480              		.weak	_ZN5boost16exception_detail14bad_exception_D0Ev
GAS LISTING /tmp/ccsIN87E.s 			page 141


 2482              	_ZN5boost16exception_detail14bad_exception_D0Ev:
 2483              	.LFB9858:
 2484              		.loc 16 115 0
 2485              		.cfi_startproc
 2486 0000 55       		pushq	%rbp
 2487              		.cfi_def_cfa_offset 16
 2488              		.cfi_offset 6, -16
 2489 0001 4889E5   		movq	%rsp, %rbp
 2490              		.cfi_def_cfa_register 6
 2491 0004 4883EC10 		subq	$16, %rsp
 2492 0008 48897DF8 		movq	%rdi, -8(%rbp)
 2493              		.loc 16 115 0
 2494 000c 488B45F8 		movq	-8(%rbp), %rax
 2495 0010 4889C7   		movq	%rax, %rdi
 2496 0013 E8000000 		call	_ZN5boost16exception_detail14bad_exception_D1Ev
 2496      00
 2497 0018 488B45F8 		movq	-8(%rbp), %rax
 2498 001c BE300000 		movl	$48, %esi
 2498      00
 2499 0021 4889C7   		movq	%rax, %rdi
 2500 0024 E8000000 		call	_ZdlPvm@PLT
 2500      00
 2501 0029 C9       		leave
 2502              		.cfi_def_cfa 7, 8
 2503 002a C3       		ret
 2504              		.cfi_endproc
 2505              	.LFE9858:
 2507              		.set	.LTHUNK3,_ZN5boost16exception_detail14bad_exception_D0Ev
 2508              		.weak	_ZThn40_N5boost16exception_detail14bad_exception_D0Ev
 2510              	_ZThn40_N5boost16exception_detail14bad_exception_D0Ev:
 2511              	.LFB15692:
 2512              		.loc 16 115 0
 2513              		.cfi_startproc
 2514 002b 4883EF28 		subq	$40, %rdi
 2515 002f EBCF     		jmp	.LTHUNK3
 2516              		.cfi_endproc
 2517              	.LFE15692:
 2519              		.section	.text._ZN5boost9exceptionC2ERKS0_,"axG",@progbits,_ZN5boost9exceptionC5ERKS0_,comdat
 2520              		.align 2
 2521              		.weak	_ZN5boost9exceptionC2ERKS0_
 2523              	_ZN5boost9exceptionC2ERKS0_:
 2524              	.LFB9868:
 220:/usr/include/boost/exception/exception.hpp ****         {
 2525              		.loc 3 220 0
 2526              		.cfi_startproc
 2527 0000 55       		pushq	%rbp
 2528              		.cfi_def_cfa_offset 16
 2529              		.cfi_offset 6, -16
 2530 0001 4889E5   		movq	%rsp, %rbp
 2531              		.cfi_def_cfa_register 6
 2532 0004 4883EC10 		subq	$16, %rsp
 2533 0008 48897DF8 		movq	%rdi, -8(%rbp)
 2534 000c 488975F0 		movq	%rsi, -16(%rbp)
 2535              	.LBB29:
 220:/usr/include/boost/exception/exception.hpp ****         {
 2536              		.loc 3 220 0
 2537 0010 488D1500 		leaq	16+_ZTVN5boost9exceptionE(%rip), %rdx
GAS LISTING /tmp/ccsIN87E.s 			page 142


 2537      000000
 2538 0017 488B45F8 		movq	-8(%rbp), %rax
 2539 001b 488910   		movq	%rdx, (%rax)
 2540 001e 488B45F0 		movq	-16(%rbp), %rax
 2541 0022 488D5008 		leaq	8(%rax), %rdx
 2542 0026 488B45F8 		movq	-8(%rbp), %rax
 2543 002a 4883C008 		addq	$8, %rax
 2544 002e 4889D6   		movq	%rdx, %rsi
 2545 0031 4889C7   		movq	%rax, %rdi
 2546 0034 E8000000 		call	_ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEEC1ERKS3_
 2546      00
 2547 0039 488B45F0 		movq	-16(%rbp), %rax
 2548 003d 488B5010 		movq	16(%rax), %rdx
 2549 0041 488B45F8 		movq	-8(%rbp), %rax
 2550 0045 48895010 		movq	%rdx, 16(%rax)
 2551 0049 488B45F0 		movq	-16(%rbp), %rax
 2552 004d 488B5018 		movq	24(%rax), %rdx
 2553 0051 488B45F8 		movq	-8(%rbp), %rax
 2554 0055 48895018 		movq	%rdx, 24(%rax)
 2555 0059 488B45F0 		movq	-16(%rbp), %rax
 2556 005d 8B5020   		movl	32(%rax), %edx
 2557 0060 488B45F8 		movq	-8(%rbp), %rax
 2558 0064 895020   		movl	%edx, 32(%rax)
 2559              	.LBE29:
 2560 0067 90       		nop
 2561 0068 C9       		leave
 2562              		.cfi_def_cfa 7, 8
 2563 0069 C3       		ret
 2564              		.cfi_endproc
 2565              	.LFE9868:
 2567              		.weak	_ZN5boost9exceptionC1ERKS0_
 2568              		.set	_ZN5boost9exceptionC1ERKS0_,_ZN5boost9exceptionC2ERKS0_
 2569              		.section	.text._ZN5boost13exception_ptrD2Ev,"axG",@progbits,_ZN5boost13exception_ptrD5Ev,comdat
 2570              		.align 2
 2571              		.weak	_ZN5boost13exception_ptrD2Ev
 2573              	_ZN5boost13exception_ptrD2Ev:
 2574              	.LFB9885:
  41:/usr/include/boost/exception/detail/exception_ptr.hpp ****         {
 2575              		.loc 16 41 0
 2576              		.cfi_startproc
 2577 0000 55       		pushq	%rbp
 2578              		.cfi_def_cfa_offset 16
 2579              		.cfi_offset 6, -16
 2580 0001 4889E5   		movq	%rsp, %rbp
 2581              		.cfi_def_cfa_register 6
 2582 0004 4883EC10 		subq	$16, %rsp
 2583 0008 48897DF8 		movq	%rdi, -8(%rbp)
 2584              	.LBB30:
  41:/usr/include/boost/exception/detail/exception_ptr.hpp ****         {
 2585              		.loc 16 41 0
 2586 000c 488B45F8 		movq	-8(%rbp), %rax
 2587 0010 4889C7   		movq	%rax, %rdi
 2588 0013 E8000000 		call	_ZN5boost10shared_ptrIKNS_16exception_detail10clone_baseEED1Ev
 2588      00
 2589              	.LBE30:
 2590 0018 90       		nop
 2591 0019 C9       		leave
GAS LISTING /tmp/ccsIN87E.s 			page 143


 2592              		.cfi_def_cfa 7, 8
 2593 001a C3       		ret
 2594              		.cfi_endproc
 2595              	.LFE9885:
 2597              		.weak	_ZN5boost13exception_ptrD1Ev
 2598              		.set	_ZN5boost13exception_ptrD1Ev,_ZN5boost13exception_ptrD2Ev
 2599              		.section	.text._ZN5boost13exception_ptrC2ERKS0_,"axG",@progbits,_ZN5boost13exception_ptrC5ERKS0_,c
 2600              		.align 2
 2601              		.weak	_ZN5boost13exception_ptrC2ERKS0_
 2603              	_ZN5boost13exception_ptrC2ERKS0_:
 2604              	.LFB9894:
  41:/usr/include/boost/exception/detail/exception_ptr.hpp ****         {
 2605              		.loc 16 41 0
 2606              		.cfi_startproc
 2607 0000 55       		pushq	%rbp
 2608              		.cfi_def_cfa_offset 16
 2609              		.cfi_offset 6, -16
 2610 0001 4889E5   		movq	%rsp, %rbp
 2611              		.cfi_def_cfa_register 6
 2612 0004 4883EC10 		subq	$16, %rsp
 2613 0008 48897DF8 		movq	%rdi, -8(%rbp)
 2614 000c 488975F0 		movq	%rsi, -16(%rbp)
 2615              	.LBB31:
  41:/usr/include/boost/exception/detail/exception_ptr.hpp ****         {
 2616              		.loc 16 41 0
 2617 0010 488B55F0 		movq	-16(%rbp), %rdx
 2618 0014 488B45F8 		movq	-8(%rbp), %rax
 2619 0018 4889D6   		movq	%rdx, %rsi
 2620 001b 4889C7   		movq	%rax, %rdi
 2621 001e E8000000 		call	_ZN5boost10shared_ptrIKNS_16exception_detail10clone_baseEEC1ERKS4_
 2621      00
 2622              	.LBE31:
 2623 0023 90       		nop
 2624 0024 C9       		leave
 2625              		.cfi_def_cfa 7, 8
 2626 0025 C3       		ret
 2627              		.cfi_endproc
 2628              	.LFE9894:
 2630              		.weak	_ZN5boost13exception_ptrC1ERKS0_
 2631              		.set	_ZN5boost13exception_ptrC1ERKS0_,_ZN5boost13exception_ptrC2ERKS0_
 2632              		.section	.text._ZN5boost6none_tC2ENS0_8init_tagE,"axG",@progbits,_ZN5boost6none_tC5ENS0_8init_tagE
 2633              		.align 2
 2634              		.weak	_ZN5boost6none_tC2ENS0_8init_tagE
 2636              	_ZN5boost6none_tC2ENS0_8init_tagE:
 2637              	.LFB10011:
 2638              		.file 17 "/usr/include/boost/none_t.hpp"
   1:/usr/include/boost/none_t.hpp **** // Copyright (C) 2003, Fernando Luis Cacciola Carballal.
   2:/usr/include/boost/none_t.hpp **** // Copyright (C) 2014, 2015 Andrzej Krzemienski.
   3:/usr/include/boost/none_t.hpp **** //
   4:/usr/include/boost/none_t.hpp **** // Use, modification, and distribution is subject to the Boost Software
   5:/usr/include/boost/none_t.hpp **** // License, Version 1.0. (See accompanying file LICENSE_1_0.txt or copy at
   6:/usr/include/boost/none_t.hpp **** // http://www.boost.org/LICENSE_1_0.txt)
   7:/usr/include/boost/none_t.hpp **** //
   8:/usr/include/boost/none_t.hpp **** // See http://www.boost.org/libs/optional for documentation.
   9:/usr/include/boost/none_t.hpp **** //
  10:/usr/include/boost/none_t.hpp **** // You are welcome to contact the author at:
  11:/usr/include/boost/none_t.hpp **** //  fernando_cacciola@hotmail.com
GAS LISTING /tmp/ccsIN87E.s 			page 144


  12:/usr/include/boost/none_t.hpp **** //
  13:/usr/include/boost/none_t.hpp **** #ifndef BOOST_NONE_T_17SEP2003_HPP
  14:/usr/include/boost/none_t.hpp **** #define BOOST_NONE_T_17SEP2003_HPP
  15:/usr/include/boost/none_t.hpp **** 
  16:/usr/include/boost/none_t.hpp **** namespace boost {
  17:/usr/include/boost/none_t.hpp **** 
  18:/usr/include/boost/none_t.hpp **** #ifdef BOOST_OPTIONAL_USE_OLD_DEFINITION_OF_NONE
  19:/usr/include/boost/none_t.hpp **** 
  20:/usr/include/boost/none_t.hpp **** namespace detail { struct none_helper{}; }
  21:/usr/include/boost/none_t.hpp **** typedef int detail::none_helper::*none_t ;
  22:/usr/include/boost/none_t.hpp **** 
  23:/usr/include/boost/none_t.hpp **** #elif defined BOOST_OPTIONAL_USE_SINGLETON_DEFINITION_OF_NONE
  24:/usr/include/boost/none_t.hpp **** 
  25:/usr/include/boost/none_t.hpp **** class none_t {};
  26:/usr/include/boost/none_t.hpp **** 
  27:/usr/include/boost/none_t.hpp **** #else
  28:/usr/include/boost/none_t.hpp **** 
  29:/usr/include/boost/none_t.hpp **** struct none_t
  30:/usr/include/boost/none_t.hpp **** {
  31:/usr/include/boost/none_t.hpp ****   struct init_tag{};
  32:/usr/include/boost/none_t.hpp ****   explicit none_t(init_tag){} // to disable default constructor
 2639              		.loc 17 32 0
 2640              		.cfi_startproc
 2641 0000 55       		pushq	%rbp
 2642              		.cfi_def_cfa_offset 16
 2643              		.cfi_offset 6, -16
 2644 0001 4889E5   		movq	%rsp, %rbp
 2645              		.cfi_def_cfa_register 6
 2646 0004 48897DF8 		movq	%rdi, -8(%rbp)
 2647              		.loc 17 32 0
 2648 0008 90       		nop
 2649 0009 5D       		popq	%rbp
 2650              		.cfi_def_cfa 7, 8
 2651 000a C3       		ret
 2652              		.cfi_endproc
 2653              	.LFE10011:
 2655              		.weak	_ZN5boost6none_tC1ENS0_8init_tagE
 2656              		.set	_ZN5boost6none_tC1ENS0_8init_tagE,_ZN5boost6none_tC2ENS0_8init_tagE
 2657              		.local	_ZN5boostL4noneE
 2658              		.comm	_ZN5boostL4noneE,1,1
 2659              		.section	.text._ZN2gr5block18processor_affinityEv,"axG",@progbits,_ZN2gr5block18processor_affinity
 2660              		.align 2
 2661              		.weak	_ZN2gr5block18processor_affinityEv
 2663              	_ZN2gr5block18processor_affinityEv:
 2664              	.LFB10906:
 2665              		.file 18 "/home/mpiscopo/gnuradio/include/gnuradio/block.h"
   1:/home/mpiscopo/gnuradio/include/gnuradio/block.h **** /* -*- c++ -*- */
   2:/home/mpiscopo/gnuradio/include/gnuradio/block.h **** /*
   3:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****  * Copyright 2004,2007,2009,2010,2013 Free Software Foundation, Inc.
   4:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****  *
   5:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****  * This file is part of GNU Radio
   6:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****  *
   7:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****  * GNU Radio is free software; you can redistribute it and/or modify
   8:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****  * it under the terms of the GNU General Public License as published by
   9:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****  * the Free Software Foundation; either version 3, or (at your option)
  10:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****  * any later version.
  11:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****  *
GAS LISTING /tmp/ccsIN87E.s 			page 145


  12:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****  * GNU Radio is distributed in the hope that it will be useful,
  13:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  14:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  15:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****  * GNU General Public License for more details.
  16:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****  *
  17:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****  * You should have received a copy of the GNU General Public License
  18:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****  * along with GNU Radio; see the file COPYING.  If not, write to
  19:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****  * the Free Software Foundation, Inc., 51 Franklin Street,
  20:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****  * Boston, MA 02110-1301, USA.
  21:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****  */
  22:/home/mpiscopo/gnuradio/include/gnuradio/block.h **** 
  23:/home/mpiscopo/gnuradio/include/gnuradio/block.h **** #ifndef INCLUDED_GR_RUNTIME_BLOCK_H
  24:/home/mpiscopo/gnuradio/include/gnuradio/block.h **** #define INCLUDED_GR_RUNTIME_BLOCK_H
  25:/home/mpiscopo/gnuradio/include/gnuradio/block.h **** 
  26:/home/mpiscopo/gnuradio/include/gnuradio/block.h **** #include <gnuradio/api.h>
  27:/home/mpiscopo/gnuradio/include/gnuradio/block.h **** #include <gnuradio/basic_block.h>
  28:/home/mpiscopo/gnuradio/include/gnuradio/block.h **** #include <gnuradio/tags.h>
  29:/home/mpiscopo/gnuradio/include/gnuradio/block.h **** #include <gnuradio/logger.h>
  30:/home/mpiscopo/gnuradio/include/gnuradio/block.h **** 
  31:/home/mpiscopo/gnuradio/include/gnuradio/block.h **** namespace gr {
  32:/home/mpiscopo/gnuradio/include/gnuradio/block.h **** 
  33:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****   /*!
  34:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****    * \brief The abstract base class for all 'terminal' processing blocks.
  35:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****    * \ingroup base_blk
  36:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****    *
  37:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****    * A signal processing flow is constructed by creating a tree of
  38:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****    * hierarchical blocks, which at any level may also contain terminal
  39:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****    * nodes that actually implement signal processing functions. This
  40:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****    * is the base class for all such leaf nodes.
  41:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****    *
  42:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****    * Blocks have a set of input streams and output streams.  The
  43:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****    * input_signature and output_signature define the number of input
  44:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****    * streams and output streams respectively, and the type of the data
  45:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****    * items in each stream.
  46:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****    *
  47:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****    * Although blocks may consume data on each input stream at a
  48:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****    * different rate, all outputs streams must produce data at the same
  49:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****    * rate.  That rate may be different from any of the input rates.
  50:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****    *
  51:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****    * User derived blocks override two methods, forecast and
  52:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****    * general_work, to implement their signal processing
  53:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****    * behavior. forecast is called by the system scheduler to determine
  54:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****    * how many items are required on each input stream in order to
  55:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****    * produce a given number of output items.
  56:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****    *
  57:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****    * general_work is called to perform the signal processing in the
  58:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****    * block.  It reads the input items and writes the output items.
  59:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****    */
  60:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****   class GR_RUNTIME_API block : public basic_block
  61:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****   {
  62:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****   public:
  63:/home/mpiscopo/gnuradio/include/gnuradio/block.h **** 
  64:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     //! Magic return values from general_work
  65:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     enum {
  66:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****       WORK_CALLED_PRODUCE = -2,
  67:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****       WORK_DONE = -1
  68:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     };
GAS LISTING /tmp/ccsIN87E.s 			page 146


  69:/home/mpiscopo/gnuradio/include/gnuradio/block.h **** 
  70:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     enum tag_propagation_policy_t {
  71:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****       TPP_DONT = 0,
  72:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****       TPP_ALL_TO_ALL = 1,
  73:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****       TPP_ONE_TO_ONE = 2
  74:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     };
  75:/home/mpiscopo/gnuradio/include/gnuradio/block.h **** 
  76:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     virtual ~block();
  77:/home/mpiscopo/gnuradio/include/gnuradio/block.h **** 
  78:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     /*!
  79:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * Assume block computes y_i = f(x_i, x_i-1, x_i-2, x_i-3...)
  80:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * History is the number of x_i's that are examined to produce one y_i.
  81:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * This comes in handy for FIR filters, where we use history to
  82:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * ensure that our input contains the appropriate "history" for the
  83:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * filter. History should be equal to the number of filter taps. First
  84:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * history samples (when there are no previous samples) are
  85:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * initialized with zeroes.
  86:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      */
  87:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     unsigned history() const;
  88:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     void  set_history(unsigned history);
  89:/home/mpiscopo/gnuradio/include/gnuradio/block.h **** 
  90:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     /*!
  91:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * Declares the block's delay in samples. Since the delay of
  92:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * blocks like filters is derived from the taps and not the block
  93:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * itself, we cannot automatically calculate this value and so
  94:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * leave it as a user-defined property. It defaults to 0 is not
  95:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * set.
  96:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      *
  97:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * This does not actively set the delay; it just tells the
  98:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * scheduler what the delay is.
  99:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      *
 100:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * This delay is mostly used to adjust the placement of the tags
 101:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * and is not currently used for any signal processing. When a tag
 102:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * is passed through a block with internal delay, its location
 103:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * should be moved based on the delay of the block. This interface
 104:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * allows us to tell the scheduler this value.
 105:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      *
 106:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * \param which The buffer on which to set the delay.
 107:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * \param delay The sample delay of the data stream.
 108:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      */
 109:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     void declare_sample_delay(int which, unsigned delay);
 110:/home/mpiscopo/gnuradio/include/gnuradio/block.h **** 
 111:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     /*!
 112:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * Convenience wrapper to gr::block::declare_delay(int which, unsigned delay)
 113:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * to set all ports to the same delay.
 114:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      */
 115:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     void declare_sample_delay(unsigned delay);
 116:/home/mpiscopo/gnuradio/include/gnuradio/block.h **** 
 117:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     /*!
 118:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * Gets the delay of the block. Since the delay of blocks like
 119:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * filters is derived from the taps and not the block itself, we
 120:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * cannot automatically calculate this value and so leave it as a
 121:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * user-defined property. It defaults to 0 is not set.
 122:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      *
 123:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * \param which Which port from which to get the sample delay.
 124:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      */
 125:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     unsigned sample_delay(int which) const;
GAS LISTING /tmp/ccsIN87E.s 			page 147


 126:/home/mpiscopo/gnuradio/include/gnuradio/block.h **** 
 127:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     /*!
 128:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * \brief Return true if this block has a fixed input to output rate.
 129:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      *
 130:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * If true, then fixed_rate_in_to_out and fixed_rate_out_to_in may be called.
 131:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      */
 132:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     bool fixed_rate() const { return d_fixed_rate; }
 133:/home/mpiscopo/gnuradio/include/gnuradio/block.h **** 
 134:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     // ----------------------------------------------------------------
 135:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     //		override these to define your behavior
 136:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     // ----------------------------------------------------------------
 137:/home/mpiscopo/gnuradio/include/gnuradio/block.h **** 
 138:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     /*!
 139:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * \brief  Estimate input requirements given output request
 140:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      *
 141:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * \param noutput_items           number of output items to produce
 142:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * \param ninput_items_required   number of input items required on each input stream
 143:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      *
 144:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * Given a request to product \p noutput_items, estimate the
 145:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * number of data items required on each input stream.  The
 146:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * estimate doesn't have to be exact, but should be close.
 147:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      */
 148:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     virtual void forecast(int noutput_items,
 149:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****                           gr_vector_int &ninput_items_required);
 150:/home/mpiscopo/gnuradio/include/gnuradio/block.h **** 
 151:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     /*!
 152:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * \brief compute output items from input items
 153:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      *
 154:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * \param noutput_items	number of output items to write on each output stream
 155:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * \param ninput_items	number of input items available on each input stream
 156:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * \param input_items	vector of pointers to the input items, one entry per input stream
 157:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * \param output_items	vector of pointers to the output items, one entry per output stream
 158:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      *
 159:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * \returns number of items actually written to each output stream, or -1 on EOF.
 160:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * It is OK to return a value less than noutput_items.  -1 <= return value <= noutput_items
 161:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      *
 162:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * general_work must call consume or consume_each to indicate how
 163:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * many items were consumed on each input stream.
 164:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      */
 165:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     virtual int general_work(int noutput_items,
 166:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****                              gr_vector_int &ninput_items,
 167:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****                              gr_vector_const_void_star &input_items,
 168:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****                              gr_vector_void_star &output_items);
 169:/home/mpiscopo/gnuradio/include/gnuradio/block.h **** 
 170:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     /*!
 171:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * \brief Called to enable drivers, etc for i/o devices.
 172:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      *
 173:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * This allows a block to enable an associated driver to begin
 174:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * transferring data just before we start to execute the scheduler.
 175:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * The end result is that this reduces latency in the pipeline
 176:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * when dealing with audio devices, usrps, etc.
 177:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      */
 178:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     virtual bool start();
 179:/home/mpiscopo/gnuradio/include/gnuradio/block.h **** 
 180:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     /*!
 181:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * \brief Called to disable drivers, etc for i/o devices.
 182:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      */
GAS LISTING /tmp/ccsIN87E.s 			page 148


 183:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     virtual bool stop();
 184:/home/mpiscopo/gnuradio/include/gnuradio/block.h **** 
 185:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     // ----------------------------------------------------------------
 186:/home/mpiscopo/gnuradio/include/gnuradio/block.h **** 
 187:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     /*!
 188:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * \brief Constrain the noutput_items argument passed to forecast and general_work
 189:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      *
 190:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * set_output_multiple causes the scheduler to ensure that the
 191:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * noutput_items argument passed to forecast and general_work will
 192:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * be an integer multiple of \param multiple The default value of
 193:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * output multiple is 1.
 194:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      */
 195:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     void set_output_multiple(int multiple);
 196:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     int  output_multiple() const { return d_output_multiple; }
 197:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     bool output_multiple_set() const { return d_output_multiple_set; }
 198:/home/mpiscopo/gnuradio/include/gnuradio/block.h **** 
 199:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     /*!
 200:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * \brief Constrains buffers to work on a set item alignment (for SIMD)
 201:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      *
 202:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * set_alignment_multiple causes the scheduler to ensure that the
 203:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * noutput_items argument passed to forecast and general_work will
 204:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * be an integer multiple of \param multiple The default value is
 205:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * 1.
 206:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      *
 207:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * This control is similar to the output_multiple setting, except
 208:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * that if the number of items passed to the block is less than
 209:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * the output_multiple, this value is ignored and the block can
 210:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * produce like normal. The d_unaligned value is set to the number
 211:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * of items the block is off by. In the next call to general_work,
 212:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * the noutput_items is set to d_unaligned or less until
 213:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * d_unaligned==0. The buffers are now aligned again and the
 214:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * aligned calls can be performed again.
 215:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      */
 216:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     void set_alignment(int multiple);
 217:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     int  alignment() const { return d_output_multiple; }
 218:/home/mpiscopo/gnuradio/include/gnuradio/block.h **** 
 219:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     void set_unaligned(int na);
 220:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     int  unaligned() const { return d_unaligned; }
 221:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     void set_is_unaligned(bool u);
 222:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     bool is_unaligned() const { return d_is_unaligned; }
 223:/home/mpiscopo/gnuradio/include/gnuradio/block.h **** 
 224:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     /*!
 225:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * \brief Tell the scheduler \p how_many_items of input stream \p
 226:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * which_input were consumed.
 227:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * This function should be called at the end of work() or general_work(), after all processing 
 228:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      */
 229:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     void consume(int which_input, int how_many_items);
 230:/home/mpiscopo/gnuradio/include/gnuradio/block.h **** 
 231:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     /*!
 232:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * \brief Tell the scheduler \p how_many_items were consumed on
 233:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * each input stream.
 234:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      */
 235:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     void consume_each(int how_many_items);
 236:/home/mpiscopo/gnuradio/include/gnuradio/block.h **** 
 237:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     /*!
 238:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * \brief Tell the scheduler \p how_many_items were produced on
 239:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * output stream \p which_output.
GAS LISTING /tmp/ccsIN87E.s 			page 149


 240:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      *
 241:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * If the block's general_work method calls produce, \p
 242:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * general_work must return WORK_CALLED_PRODUCE.
 243:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      */
 244:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     void produce(int which_output, int how_many_items);
 245:/home/mpiscopo/gnuradio/include/gnuradio/block.h **** 
 246:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     /*!
 247:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * \brief Set the approximate output rate / input rate
 248:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      *
 249:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * Provide a hint to the buffer allocator and scheduler.
 250:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * The default relative_rate is 1.0
 251:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      *
 252:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * decimators have relative_rates < 1.0
 253:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * interpolators have relative_rates > 1.0
 254:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      */
 255:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     void set_relative_rate(double relative_rate);
 256:/home/mpiscopo/gnuradio/include/gnuradio/block.h **** 
 257:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     /*!
 258:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * \brief return the approximate output rate / input rate
 259:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      */
 260:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     double relative_rate() const { return d_relative_rate; }
 261:/home/mpiscopo/gnuradio/include/gnuradio/block.h **** 
 262:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     /*
 263:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * The following two methods provide special case info to the
 264:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * scheduler in the event that a block has a fixed input to output
 265:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * ratio.  sync_block, sync_decimator and
 266:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * sync_interpolator override these.  If you're fixed rate,
 267:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * subclass one of those.
 268:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      */
 269:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     /*!
 270:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * \brief Given ninput samples, return number of output samples that will be produced.
 271:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * N.B. this is only defined if fixed_rate returns true.
 272:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * Generally speaking, you don't need to override this.
 273:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      */
 274:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     virtual int fixed_rate_ninput_to_noutput(int ninput);
 275:/home/mpiscopo/gnuradio/include/gnuradio/block.h **** 
 276:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     /*!
 277:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * \brief Given noutput samples, return number of input samples required to produce noutput.
 278:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * N.B. this is only defined if fixed_rate returns true.
 279:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * Generally speaking, you don't need to override this.
 280:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      */
 281:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     virtual int fixed_rate_noutput_to_ninput(int noutput);
 282:/home/mpiscopo/gnuradio/include/gnuradio/block.h **** 
 283:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     /*!
 284:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * \brief Return the number of items read on input stream which_input
 285:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      */
 286:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     uint64_t nitems_read(unsigned int which_input);
 287:/home/mpiscopo/gnuradio/include/gnuradio/block.h **** 
 288:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     /*!
 289:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * \brief  Return the number of items written on output stream which_output
 290:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      */
 291:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     uint64_t nitems_written(unsigned int which_output);
 292:/home/mpiscopo/gnuradio/include/gnuradio/block.h **** 
 293:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     /*!
 294:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * \brief Asks for the policy used by the scheduler to moved tags downstream.
 295:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      */
 296:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     tag_propagation_policy_t tag_propagation_policy();
GAS LISTING /tmp/ccsIN87E.s 			page 150


 297:/home/mpiscopo/gnuradio/include/gnuradio/block.h **** 
 298:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     /*!
 299:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * \brief Set the policy by the scheduler to determine how tags are moved downstream.
 300:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      */
 301:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     void set_tag_propagation_policy(tag_propagation_policy_t p);
 302:/home/mpiscopo/gnuradio/include/gnuradio/block.h **** 
 303:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     /*!
 304:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * \brief Return the minimum number of output items this block can
 305:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * produce during a call to work.
 306:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      *
 307:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * Should be 0 for most blocks.  Useful if we're dealing with
 308:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * packets and the block produces one packet per call to work.
 309:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      */
 310:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     int min_noutput_items() const { return d_min_noutput_items; }
 311:/home/mpiscopo/gnuradio/include/gnuradio/block.h **** 
 312:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     /*!
 313:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * \brief Set the minimum number of output items this block can
 314:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * produce during a call to work.
 315:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      *
 316:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * \param m the minimum noutput_items this block can produce.
 317:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      */
 318:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     void set_min_noutput_items(int m) { d_min_noutput_items = m; }
 319:/home/mpiscopo/gnuradio/include/gnuradio/block.h **** 
 320:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     /*!
 321:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * \brief Return the maximum number of output items this block will
 322:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * handle during a call to work.
 323:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      */
 324:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     int max_noutput_items();
 325:/home/mpiscopo/gnuradio/include/gnuradio/block.h **** 
 326:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     /*!
 327:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * \brief Set the maximum number of output items this block will
 328:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * handle during a call to work.
 329:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      *
 330:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * \param m the maximum noutput_items this block will handle.
 331:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      */
 332:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     void set_max_noutput_items(int m);
 333:/home/mpiscopo/gnuradio/include/gnuradio/block.h **** 
 334:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     /*!
 335:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * \brief Clear the switch for using the max_noutput_items value of this block.
 336:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      *
 337:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * When is_set_max_noutput_items() returns 'true', the scheduler
 338:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * will use the value returned by max_noutput_items() to limit the
 339:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * size of the number of items possible for this block's work
 340:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * function. If is_set_max_notput_items() returns 'false', then
 341:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * the scheduler ignores the internal value and uses the value set
 342:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * globally in the top_block.
 343:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      *
 344:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * Use this value to clear the 'is_set' flag so the scheduler will
 345:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * ignore this. Use the set_max_noutput_items(m) call to both set
 346:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * a new value for max_noutput_items and to re-enable its use in
 347:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * the scheduler.
 348:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      */
 349:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     void unset_max_noutput_items();
 350:/home/mpiscopo/gnuradio/include/gnuradio/block.h **** 
 351:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     /*!
 352:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * \brief Ask the block if the flag is or is not set to use the
 353:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * internal value of max_noutput_items during a call to work.
GAS LISTING /tmp/ccsIN87E.s 			page 151


 354:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      */
 355:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     bool is_set_max_noutput_items();
 356:/home/mpiscopo/gnuradio/include/gnuradio/block.h **** 
 357:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     /*
 358:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * Used to expand the vectors that hold the min/max buffer sizes.
 359:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      *
 360:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * Specifically, when -1 is used, the vectors are just initialized
 361:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * with 1 value; this is used by the flat_flowgraph to expand when
 362:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * required to add a new value for new ports on these blocks.
 363:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      */
 364:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     void expand_minmax_buffer(int port);
 365:/home/mpiscopo/gnuradio/include/gnuradio/block.h **** 
 366:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     /*!
 367:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * \brief Returns max buffer size on output port \p i.
 368:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      */
 369:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     long max_output_buffer(size_t i);
 370:/home/mpiscopo/gnuradio/include/gnuradio/block.h **** 
 371:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     /*!
 372:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * \brief Request limit on max buffer size on all output ports.
 373:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      *
 374:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * \details
 375:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * This is an advanced feature. Calling this can affect some
 376:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * fundamental assumptions about the system behavior and
 377:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * performance.
 378:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      *
 379:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * The actual buffer size is determined by a number of other
 380:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * factors from the block and system. This function only provides
 381:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * a requested maximum. The buffers will always be a multiple of
 382:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * the system page size, which may be larger than the value asked
 383:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * for here.
 384:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      *
 385:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * \param max_output_buffer the requested maximum output size in items.
 386:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      */
 387:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     void set_max_output_buffer(long max_output_buffer);
 388:/home/mpiscopo/gnuradio/include/gnuradio/block.h **** 
 389:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     /*!
 390:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * \brief Request limit on max buffer size on output port \p port.
 391:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      *
 392:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * \details
 393:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * This is an advanced feature. Calling this can affect some
 394:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * fundamental assumptions about the system behavior and
 395:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * performance.
 396:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      *
 397:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * The actual buffer size is determined by a number of other
 398:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * factors from the block and system. This function only provides
 399:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * a requested maximum. The buffers will always be a multiple of
 400:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * the system page size, which may be larger than the value asked
 401:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * for here.
 402:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      *
 403:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * \param port the output port the request applies to.
 404:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * \param max_output_buffer the requested maximum output size in items.
 405:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      */
 406:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     void set_max_output_buffer(int port, long max_output_buffer);
 407:/home/mpiscopo/gnuradio/include/gnuradio/block.h **** 
 408:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     /*!
 409:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * \brief Returns min buffer size on output port \p i.
 410:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      */
GAS LISTING /tmp/ccsIN87E.s 			page 152


 411:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     long min_output_buffer(size_t i);
 412:/home/mpiscopo/gnuradio/include/gnuradio/block.h **** 
 413:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     /*!
 414:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * \brief Request limit on the minimum buffer size on all output
 415:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * ports.
 416:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      *
 417:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * \details
 418:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * This is an advanced feature. Calling this can affect some
 419:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * fundamental assumptions about the system behavior and
 420:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * performance.
 421:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      *
 422:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * The actual buffer size is determined by a number of other
 423:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * factors from the block and system. This function only provides
 424:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * a requested minimum. The buffers will always be a multiple of
 425:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * the system page size, which may be larger than the value asked
 426:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * for here.
 427:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      *
 428:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * \param min_output_buffer the requested minimum output size in items.
 429:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      */
 430:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     void set_min_output_buffer(long min_output_buffer);
 431:/home/mpiscopo/gnuradio/include/gnuradio/block.h **** 
 432:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     /*!
 433:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * \brief Request limit on min buffer size on output port \p port.
 434:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      *
 435:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * \details
 436:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * This is an advanced feature. Calling this can affect some
 437:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * fundamental assumptions about the system behavior and
 438:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * performance.
 439:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      *
 440:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * The actual buffer size is determined by a number of other
 441:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * factors from the block and system. This function only provides
 442:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * a requested minimum. The buffers will always be a multiple of
 443:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * the system page size, which may be larger than the value asked
 444:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * for here.
 445:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      *
 446:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * \param port the output port the request applies to.
 447:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * \param min_output_buffer the requested minimum output size in items.
 448:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      */
 449:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     void set_min_output_buffer(int port, long min_output_buffer);
 450:/home/mpiscopo/gnuradio/include/gnuradio/block.h **** 
 451:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     // --------------- Performance counter functions -------------
 452:/home/mpiscopo/gnuradio/include/gnuradio/block.h **** 
 453:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     /*!
 454:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * \brief Gets instantaneous noutput_items performance counter.
 455:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      */
 456:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     float pc_noutput_items();
 457:/home/mpiscopo/gnuradio/include/gnuradio/block.h **** 
 458:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     /*!
 459:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * \brief Gets average noutput_items performance counter.
 460:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      */
 461:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     float pc_noutput_items_avg();
 462:/home/mpiscopo/gnuradio/include/gnuradio/block.h **** 
 463:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     /*!
 464:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * \brief Gets variance of noutput_items performance counter.
 465:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      */
 466:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     float pc_noutput_items_var();
 467:/home/mpiscopo/gnuradio/include/gnuradio/block.h **** 
GAS LISTING /tmp/ccsIN87E.s 			page 153


 468:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     /*!
 469:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * \brief Gets instantaneous num items produced performance counter.
 470:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      */
 471:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     float pc_nproduced();
 472:/home/mpiscopo/gnuradio/include/gnuradio/block.h **** 
 473:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     /*!
 474:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * \brief Gets average num items produced performance counter.
 475:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      */
 476:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     float pc_nproduced_avg();
 477:/home/mpiscopo/gnuradio/include/gnuradio/block.h **** 
 478:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     /*!
 479:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * \brief Gets variance of  num items produced performance counter.
 480:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      */
 481:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     float pc_nproduced_var();
 482:/home/mpiscopo/gnuradio/include/gnuradio/block.h **** 
 483:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     /*!
 484:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * \brief Gets instantaneous fullness of \p which input buffer.
 485:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      */
 486:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     float pc_input_buffers_full(int which);
 487:/home/mpiscopo/gnuradio/include/gnuradio/block.h **** 
 488:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     /*!
 489:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * \brief Gets average fullness of \p which input buffer.
 490:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      */
 491:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     float pc_input_buffers_full_avg(int which);
 492:/home/mpiscopo/gnuradio/include/gnuradio/block.h **** 
 493:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     /*!
 494:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * \brief Gets variance of fullness of \p which input buffer.
 495:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      */
 496:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     float pc_input_buffers_full_var(int which);
 497:/home/mpiscopo/gnuradio/include/gnuradio/block.h **** 
 498:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     /*!
 499:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * \brief Gets instantaneous fullness of all input buffers.
 500:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      */
 501:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     std::vector<float> pc_input_buffers_full();
 502:/home/mpiscopo/gnuradio/include/gnuradio/block.h **** 
 503:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     /*!
 504:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * \brief Gets average fullness of all input buffers.
 505:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      */
 506:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     std::vector<float> pc_input_buffers_full_avg();
 507:/home/mpiscopo/gnuradio/include/gnuradio/block.h **** 
 508:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     /*!
 509:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * \brief Gets variance of fullness of all input buffers.
 510:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      */
 511:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     std::vector<float> pc_input_buffers_full_var();
 512:/home/mpiscopo/gnuradio/include/gnuradio/block.h **** 
 513:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     /*!
 514:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * \brief Gets instantaneous fullness of \p which input buffer.
 515:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      */
 516:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     float pc_output_buffers_full(int which);
 517:/home/mpiscopo/gnuradio/include/gnuradio/block.h **** 
 518:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     /*!
 519:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * \brief Gets average fullness of \p which input buffer.
 520:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      */
 521:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     float pc_output_buffers_full_avg(int which);
 522:/home/mpiscopo/gnuradio/include/gnuradio/block.h **** 
 523:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     /*!
 524:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * \brief Gets variance of fullness of \p which input buffer.
GAS LISTING /tmp/ccsIN87E.s 			page 154


 525:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      */
 526:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     float pc_output_buffers_full_var(int which);
 527:/home/mpiscopo/gnuradio/include/gnuradio/block.h **** 
 528:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     /*!
 529:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * \brief Gets instantaneous fullness of all output buffers.
 530:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      */
 531:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     std::vector<float> pc_output_buffers_full();
 532:/home/mpiscopo/gnuradio/include/gnuradio/block.h **** 
 533:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     /*!
 534:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * \brief Gets average fullness of all output buffers.
 535:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      */
 536:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     std::vector<float> pc_output_buffers_full_avg();
 537:/home/mpiscopo/gnuradio/include/gnuradio/block.h **** 
 538:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     /*!
 539:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * \brief Gets variance of fullness of all output buffers.
 540:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      */
 541:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     std::vector<float> pc_output_buffers_full_var();
 542:/home/mpiscopo/gnuradio/include/gnuradio/block.h **** 
 543:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     /*!
 544:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * \brief Gets instantaneous clock cycles spent in work.
 545:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      */
 546:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     float pc_work_time();
 547:/home/mpiscopo/gnuradio/include/gnuradio/block.h **** 
 548:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     /*!
 549:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * \brief Gets average clock cycles spent in work.
 550:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      */
 551:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     float pc_work_time_avg();
 552:/home/mpiscopo/gnuradio/include/gnuradio/block.h **** 
 553:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     /*!
 554:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * \brief Gets average clock cycles spent in work.
 555:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      */
 556:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     float pc_work_time_var();
 557:/home/mpiscopo/gnuradio/include/gnuradio/block.h **** 
 558:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     /*!
 559:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * \brief Gets total clock cycles spent in work.
 560:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      */
 561:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     float pc_work_time_total();
 562:/home/mpiscopo/gnuradio/include/gnuradio/block.h **** 
 563:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     /*!
 564:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * \brief Gets average throughput.
 565:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      */
 566:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     float pc_throughput_avg();
 567:/home/mpiscopo/gnuradio/include/gnuradio/block.h **** 
 568:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     /*!
 569:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * \brief Resets the performance counters
 570:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      */
 571:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     void reset_perf_counters();
 572:/home/mpiscopo/gnuradio/include/gnuradio/block.h **** 
 573:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     /*!
 574:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * \brief Sets up export of perf. counters to ControlPort. Only
 575:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * called by the scheduler.
 576:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      */
 577:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     void setup_pc_rpc();
 578:/home/mpiscopo/gnuradio/include/gnuradio/block.h **** 
 579:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     /*!
 580:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * \brief Checks if this block is already exporting perf. counters
 581:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * to ControlPort.
GAS LISTING /tmp/ccsIN87E.s 			page 155


 582:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      */
 583:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     bool is_pc_rpc_set() { return d_pc_rpc_set; }
 584:/home/mpiscopo/gnuradio/include/gnuradio/block.h **** 
 585:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     /*!
 586:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * \brief If the block calls this in its constructor, it's
 587:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * perf. counters will not be exported.
 588:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      */
 589:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     void no_pc_rpc() { d_pc_rpc_set = true; }
 590:/home/mpiscopo/gnuradio/include/gnuradio/block.h **** 
 591:/home/mpiscopo/gnuradio/include/gnuradio/block.h **** 
 592:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     // ----------------------------------------------------------------------------
 593:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     // Functions to handle thread affinity
 594:/home/mpiscopo/gnuradio/include/gnuradio/block.h **** 
 595:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     /*!
 596:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * \brief Set the thread's affinity to processor core \p n.
 597:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      *
 598:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * \param mask a vector of ints of the core numbers available to this block.
 599:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      */
 600:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     void set_processor_affinity(const std::vector<int> &mask);
 601:/home/mpiscopo/gnuradio/include/gnuradio/block.h **** 
 602:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     /*!
 603:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * \brief Remove processor affinity to a specific core.
 604:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      */
 605:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     void unset_processor_affinity();
 606:/home/mpiscopo/gnuradio/include/gnuradio/block.h **** 
 607:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     /*!
 608:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      * \brief Get the current processor affinity.
 609:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****      */
 610:/home/mpiscopo/gnuradio/include/gnuradio/block.h ****     std::vector<int> processor_affinity() { return d_affinity; }
 2666              		.loc 18 610 0
 2667              		.cfi_startproc
 2668 0000 55       		pushq	%rbp
 2669              		.cfi_def_cfa_offset 16
 2670              		.cfi_offset 6, -16
 2671 0001 4889E5   		movq	%rsp, %rbp
 2672              		.cfi_def_cfa_register 6
 2673 0004 4883EC10 		subq	$16, %rsp
 2674 0008 48897DF8 		movq	%rdi, -8(%rbp)
 2675 000c 488975F0 		movq	%rsi, -16(%rbp)
 2676              		.loc 18 610 0
 2677 0010 488B45F0 		movq	-16(%rbp), %rax
 2678 0014 488D90C8 		leaq	456(%rax), %rdx
 2678      010000
 2679 001b 488B45F8 		movq	-8(%rbp), %rax
 2680 001f 4889D6   		movq	%rdx, %rsi
 2681 0022 4889C7   		movq	%rax, %rdi
 2682 0025 E8000000 		call	_ZNSt6vectorIiSaIiEEC1ERKS1_
 2682      00
 2683 002a 488B45F8 		movq	-8(%rbp), %rax
 2684 002e C9       		leave
 2685              		.cfi_def_cfa 7, 8
 2686 002f C3       		ret
 2687              		.cfi_endproc
 2688              	.LFE10906:
 2690              		.data
 2691              		.align 32
 2694              	_ZN2gr6blocksL14tanh_lut_tableE:
GAS LISTING /tmp/ccsIN87E.s 			page 156


 2695 0000 83CA76BF 		.long	3212233347
 2696 0004 C68076BF 		.long	3212214470
 2697 0008 C63476BF 		.long	3212195014
 2698 000c 71E675BF 		.long	3212174961
 2699 0010 B89575BF 		.long	3212154296
 2700 0014 874275BF 		.long	3212132999
 2701 0018 CCEC74BF 		.long	3212111052
 2702 001c 749474BF 		.long	3212088436
 2703 0020 6D3974BF 		.long	3212065133
 2704 0024 A1DB73BF 		.long	3212041121
 2705 0028 FD7A73BF 		.long	3212016381
 2706 002c 6B1773BF 		.long	3211990891
 2707 0030 D7B072BF 		.long	3211964631
 2708 0034 2A4772BF 		.long	3211937578
 2709 0038 4EDA71BF 		.long	3211909710
 2710 003c 2B6A71BF 		.long	3211881003
 2711 0040 ABF670BF 		.long	3211851435
 2712 0044 B47F70BF 		.long	3211820980
 2713 0048 2F0570BF 		.long	3211789615
 2714 004c 01876FBF 		.long	3211757313
 2715 0050 11056FBF 		.long	3211724049
 2716 0054 447F6EBF 		.long	3211689796
 2717 0058 7FF56DBF 		.long	3211654527
 2718 005c A7676DBF 		.long	3211618215
 2719 0060 9ED56CBF 		.long	3211580830
 2720 0064 493F6CBF 		.long	3211542345
 2721 0068 89A46BBF 		.long	3211502729
 2722 006c 41056BBF 		.long	3211461953
 2723 0070 51616ABF 		.long	3211419985
 2724 0074 9AB869BF 		.long	3211376794
 2725 0078 FC0A69BF 		.long	3211332348
 2726 007c 575868BF 		.long	3211286615
 2727 0080 89A067BF 		.long	3211239561
 2728 0084 6FE366BF 		.long	3211191151
 2729 0088 E92066BF 		.long	3211141353
 2730 008c D25865BF 		.long	3211090130
 2731 0090 088B64BF 		.long	3211037448
 2732 0094 64B763BF 		.long	3210983268
 2733 0098 C4DD62BF 		.long	3210927556
 2734 009c 01FE61BF 		.long	3210870273
 2735 00a0 F51761BF 		.long	3210811381
 2736 00a4 7A2B60BF 		.long	3210750842
 2737 00a8 69385FBF 		.long	3210688617
 2738 00ac 9B3E5EBF 		.long	3210624667
 2739 00b0 E73D5DBF 		.long	3210558951
 2740 00b4 24365CBF 		.long	3210491428
 2741 00b8 2B275BBF 		.long	3210422059
 2742 00bc D2105ABF 		.long	3210350802
 2743 00c0 EEF258BF 		.long	3210277614
 2744 00c4 57CD57BF 		.long	3210202455
 2745 00c8 E29F56BF 		.long	3210125282
 2746 00cc 636A55BF 		.long	3210046051
 2747 00d0 B22C54BF 		.long	3209964722
 2748 00d4 A2E652BF 		.long	3209881250
 2749 00d8 089851BF 		.long	3209795592
 2750 00dc BA4050BF 		.long	3209707706
 2751 00e0 8DE04EBF 		.long	3209617549
GAS LISTING /tmp/ccsIN87E.s 			page 157


 2752 00e4 54774DBF 		.long	3209525076
 2753 00e8 E5044CBF 		.long	3209430245
 2754 00ec 16894ABF 		.long	3209333014
 2755 00f0 BB0349BF 		.long	3209233339
 2756 00f4 AA7447BF 		.long	3209131178
 2757 00f8 BADB45BF 		.long	3209026490
 2758 00fc C03844BF 		.long	3208919232
 2759 0100 948B42BF 		.long	3208809364
 2760 0104 0DD440BF 		.long	3208696845
 2761 0108 03123FBF 		.long	3208581635
 2762 010c 50453DBF 		.long	3208463696
 2763 0110 CE6D3BBF 		.long	3208342990
 2764 0114 578B39BF 		.long	3208219479
 2765 0118 C79D37BF 		.long	3208093127
 2766 011c FDA435BF 		.long	3207963901
 2767 0120 D5A033BF 		.long	3207831765
 2768 0124 319131BF 		.long	3207696689
 2769 0128 F1752FBF 		.long	3207558641
 2770 012c F94E2DBF 		.long	3207417593
 2771 0130 2E1C2BBF 		.long	3207273518
 2772 0134 75DD28BF 		.long	3207126389
 2773 0138 B89226BF 		.long	3206976184
 2774 013c E23B24BF 		.long	3206822882
 2775 0140 DED821BF 		.long	3206666462
 2776 0144 9E691FBF 		.long	3206506910
 2777 0148 12EE1CBF 		.long	3206344210
 2778 014c 2F661ABF 		.long	3206178351
 2779 0150 ECD117BF 		.long	3206009324
 2780 0154 433115BF 		.long	3205837123
 2781 0158 318412BF 		.long	3205661745
 2782 015c B6CA0FBF 		.long	3205483190
 2783 0160 D4040DBF 		.long	3205301460
 2784 0164 93320ABF 		.long	3205116563
 2785 0168 FC5307BF 		.long	3204928508
 2786 016c 1C6904BF 		.long	3204737308
 2787 0170 047201BF 		.long	3204542980
 2788 0174 93DDFCBE 		.long	3204242835
 2789 0178 09BFF6BE 		.long	3203841801
 2790 017c A188F0BE 		.long	3203434657
 2791 0180 9D3AEABE 		.long	3203021469
 2792 0184 44D5E3BE 		.long	3202602308
 2793 0188 E758DDBE 		.long	3202177255
 2794 018c DEC5D6BE 		.long	3201746398
 2795 0190 8A1CD0BE 		.long	3201309834
 2796 0194 535DC9BE 		.long	3200867667
 2797 0198 AC88C2BE 		.long	3200420012
 2798 019c 0C9FBBBE 		.long	3199966988
 2799 01a0 F7A0B4BE 		.long	3199508727
 2800 01a4 F78EADBE 		.long	3199045367
 2801 01a8 9C69A6BE 		.long	3198577052
 2802 01ac 82319FBE 		.long	3198103938
 2803 01b0 4BE797BE 		.long	3197626187
 2804 01b4 A18B90BE 		.long	3197143969
 2805 01b8 351F89BE 		.long	3196657461
 2806 01bc C0A281BE 		.long	3196166848
 2807 01c0 062E74BE 		.long	3195284998
 2808 01c4 8AF964BE 		.long	3194288522
GAS LISTING /tmp/ccsIN87E.s 			page 158


 2809 01c8 A8A955BE 		.long	3193285032
 2810 01cc 074046BE 		.long	3192274951
 2811 01d0 5DBE36BE 		.long	3191258717
 2812 01d4 6B2627BE 		.long	3190236779
 2813 01d8 F97917BE 		.long	3189209593
 2814 01dc DFBA07BE 		.long	3188177631
 2815 01e0 F0D5EFBD 		.long	3186611696
 2816 01e4 5618D0BD 		.long	3184531542
 2817 01e8 CC40B0BD 		.long	3182444748
 2818 01ec 385390BD 		.long	3180352312
 2819 01f0 1AA760BD 		.long	3177228058
 2820 01f4 918B20BD 		.long	3173026705
 2821 01f8 A6B7C0BC 		.long	3166746534
 2822 01fc D87F00BC 		.long	3154149336
 2823 0200 D87F003C 		.long	1006665688
 2824 0204 A6B7C03C 		.long	1019262886
 2825 0208 918B203D 		.long	1025543057
 2826 020c 1AA7603D 		.long	1029744410
 2827 0210 3853903D 		.long	1032868664
 2828 0214 CC40B03D 		.long	1034961100
 2829 0218 5618D03D 		.long	1037047894
 2830 021c F0D5EF3D 		.long	1039128048
 2831 0220 DFBA073E 		.long	1040693983
 2832 0224 F979173E 		.long	1041725945
 2833 0228 6B26273E 		.long	1042753131
 2834 022c 5DBE363E 		.long	1043775069
 2835 0230 0740463E 		.long	1044791303
 2836 0234 A8A9553E 		.long	1045801384
 2837 0238 8AF9643E 		.long	1046804874
 2838 023c 062E743E 		.long	1047801350
 2839 0240 C0A2813E 		.long	1048683200
 2840 0244 351F893E 		.long	1049173813
 2841 0248 A18B903E 		.long	1049660321
 2842 024c 4BE7973E 		.long	1050142539
 2843 0250 82319F3E 		.long	1050620290
 2844 0254 9C69A63E 		.long	1051093404
 2845 0258 F78EAD3E 		.long	1051561719
 2846 025c F7A0B43E 		.long	1052025079
 2847 0260 0C9FBB3E 		.long	1052483340
 2848 0264 AC88C23E 		.long	1052936364
 2849 0268 535DC93E 		.long	1053384019
 2850 026c 8A1CD03E 		.long	1053826186
 2851 0270 DEC5D63E 		.long	1054262750
 2852 0274 E758DD3E 		.long	1054693607
 2853 0278 44D5E33E 		.long	1055118660
 2854 027c 9D3AEA3E 		.long	1055537821
 2855 0280 A188F03E 		.long	1055951009
 2856 0284 09BFF63E 		.long	1056358153
 2857 0288 93DDFC3E 		.long	1056759187
 2858 028c 0472013F 		.long	1057059332
 2859 0290 1C69043F 		.long	1057253660
 2860 0294 FC53073F 		.long	1057444860
 2861 0298 93320A3F 		.long	1057632915
 2862 029c D4040D3F 		.long	1057817812
 2863 02a0 B6CA0F3F 		.long	1057999542
 2864 02a4 3184123F 		.long	1058178097
 2865 02a8 4331153F 		.long	1058353475
GAS LISTING /tmp/ccsIN87E.s 			page 159


 2866 02ac ECD1173F 		.long	1058525676
 2867 02b0 2F661A3F 		.long	1058694703
 2868 02b4 12EE1C3F 		.long	1058860562
 2869 02b8 9E691F3F 		.long	1059023262
 2870 02bc DED8213F 		.long	1059182814
 2871 02c0 E23B243F 		.long	1059339234
 2872 02c4 B892263F 		.long	1059492536
 2873 02c8 75DD283F 		.long	1059642741
 2874 02cc 2E1C2B3F 		.long	1059789870
 2875 02d0 F94E2D3F 		.long	1059933945
 2876 02d4 F1752F3F 		.long	1060074993
 2877 02d8 3191313F 		.long	1060213041
 2878 02dc D5A0333F 		.long	1060348117
 2879 02e0 FDA4353F 		.long	1060480253
 2880 02e4 C79D373F 		.long	1060609479
 2881 02e8 578B393F 		.long	1060735831
 2882 02ec CE6D3B3F 		.long	1060859342
 2883 02f0 50453D3F 		.long	1060980048
 2884 02f4 03123F3F 		.long	1061097987
 2885 02f8 0DD4403F 		.long	1061213197
 2886 02fc 948B423F 		.long	1061325716
 2887 0300 C038443F 		.long	1061435584
 2888 0304 BADB453F 		.long	1061542842
 2889 0308 AA74473F 		.long	1061647530
 2890 030c BB03493F 		.long	1061749691
 2891 0310 16894A3F 		.long	1061849366
 2892 0314 E5044C3F 		.long	1061946597
 2893 0318 54774D3F 		.long	1062041428
 2894 031c 8DE04E3F 		.long	1062133901
 2895 0320 BA40503F 		.long	1062224058
 2896 0324 0898513F 		.long	1062311944
 2897 0328 A2E6523F 		.long	1062397602
 2898 032c B22C543F 		.long	1062481074
 2899 0330 636A553F 		.long	1062562403
 2900 0334 E29F563F 		.long	1062641634
 2901 0338 57CD573F 		.long	1062718807
 2902 033c EEF2583F 		.long	1062793966
 2903 0340 D2105A3F 		.long	1062867154
 2904 0344 2B275B3F 		.long	1062938411
 2905 0348 24365C3F 		.long	1063007780
 2906 034c E73D5D3F 		.long	1063075303
 2907 0350 9B3E5E3F 		.long	1063141019
 2908 0354 69385F3F 		.long	1063204969
 2909 0358 7A2B603F 		.long	1063267194
 2910 035c F517613F 		.long	1063327733
 2911 0360 01FE613F 		.long	1063386625
 2912 0364 C4DD623F 		.long	1063443908
 2913 0368 64B7633F 		.long	1063499620
 2914 036c 088B643F 		.long	1063553800
 2915 0370 D258653F 		.long	1063606482
 2916 0374 E920663F 		.long	1063657705
 2917 0378 6FE3663F 		.long	1063707503
 2918 037c 89A0673F 		.long	1063755913
 2919 0380 5758683F 		.long	1063802967
 2920 0384 FC0A693F 		.long	1063848700
 2921 0388 9AB8693F 		.long	1063893146
 2922 038c 51616A3F 		.long	1063936337
GAS LISTING /tmp/ccsIN87E.s 			page 160


 2923 0390 41056B3F 		.long	1063978305
 2924 0394 89A46B3F 		.long	1064019081
 2925 0398 493F6C3F 		.long	1064058697
 2926 039c 9ED56C3F 		.long	1064097182
 2927 03a0 A7676D3F 		.long	1064134567
 2928 03a4 7FF56D3F 		.long	1064170879
 2929 03a8 447F6E3F 		.long	1064206148
 2930 03ac 11056F3F 		.long	1064240401
 2931 03b0 01876F3F 		.long	1064273665
 2932 03b4 2F05703F 		.long	1064305967
 2933 03b8 B47F703F 		.long	1064337332
 2934 03bc ABF6703F 		.long	1064367787
 2935 03c0 2B6A713F 		.long	1064397355
 2936 03c4 4EDA713F 		.long	1064426062
 2937 03c8 2A47723F 		.long	1064453930
 2938 03cc D7B0723F 		.long	1064480983
 2939 03d0 6B17733F 		.long	1064507243
 2940 03d4 FD7A733F 		.long	1064532733
 2941 03d8 A1DB733F 		.long	1064557473
 2942 03dc 6D39743F 		.long	1064581485
 2943 03e0 7494743F 		.long	1064604788
 2944 03e4 CCEC743F 		.long	1064627404
 2945 03e8 8742753F 		.long	1064649351
 2946 03ec B895753F 		.long	1064670648
 2947 03f0 71E6753F 		.long	1064691313
 2948 03f4 C634763F 		.long	1064711366
 2949 03f8 C680763F 		.long	1064730822
 2950 03fc 83CA763F 		.long	1064749699
 2951              		.section	.text._ZNK2gr5lfast12costas2_impl16phase_detector_2ESt7complexIfE,"axG",@progbits,_ZNK2gr
 2952              		.align 2
 2953              		.weak	_ZNK2gr5lfast12costas2_impl16phase_detector_2ESt7complexIfE
 2955              	_ZNK2gr5lfast12costas2_impl16phase_detector_2ESt7complexIfE:
 2956              	.LFB10930:
 2957              		.file 19 "costas2_impl.h"
   1:costas2_impl.h **** /* -*- c++ -*- */
   2:costas2_impl.h **** /* 
   3:costas2_impl.h ****  * Copyright 2017 ghostop14.
   4:costas2_impl.h ****  * 
   5:costas2_impl.h ****  * This is free software; you can redistribute it and/or modify
   6:costas2_impl.h ****  * it under the terms of the GNU General Public License as published by
   7:costas2_impl.h ****  * the Free Software Foundation; either version 3, or (at your option)
   8:costas2_impl.h ****  * any later version.
   9:costas2_impl.h ****  * 
  10:costas2_impl.h ****  * This software is distributed in the hope that it will be useful,
  11:costas2_impl.h ****  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  12:costas2_impl.h ****  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  13:costas2_impl.h ****  * GNU General Public License for more details.
  14:costas2_impl.h ****  * 
  15:costas2_impl.h ****  * You should have received a copy of the GNU General Public License
  16:costas2_impl.h ****  * along with this software; see the file COPYING.  If not, write to
  17:costas2_impl.h ****  * the Free Software Foundation, Inc., 51 Franklin Street,
  18:costas2_impl.h ****  * Boston, MA 02110-1301, USA.
  19:costas2_impl.h ****  */
  20:costas2_impl.h **** 
  21:costas2_impl.h **** #ifndef INCLUDED_LFAST_COSTAS2_IMPL_H
  22:costas2_impl.h **** #define INCLUDED_LFAST_COSTAS2_IMPL_H
  23:costas2_impl.h **** 
GAS LISTING /tmp/ccsIN87E.s 			page 161


  24:costas2_impl.h **** #include <lfast/costas2.h>
  25:costas2_impl.h **** 
  26:costas2_impl.h **** namespace gr {
  27:costas2_impl.h ****   namespace lfast {
  28:costas2_impl.h **** 
  29:costas2_impl.h ****     class costas2_impl : public costas2
  30:costas2_impl.h ****     {
  31:costas2_impl.h ****      private:
  32:costas2_impl.h ****        int d_order;
  33:costas2_impl.h ****        float d_error;
  34:costas2_impl.h ****        float d_noise;
  35:costas2_impl.h **** 
  36:costas2_impl.h ****        float
  37:costas2_impl.h ****        phase_detector_2(gr_complex sample) const
 2958              		.loc 19 37 0
 2959              		.cfi_startproc
 2960 0000 55       		pushq	%rbp
 2961              		.cfi_def_cfa_offset 16
 2962              		.cfi_offset 6, -16
 2963 0001 4889E5   		movq	%rsp, %rbp
 2964              		.cfi_def_cfa_register 6
 2965 0004 4883EC20 		subq	$32, %rsp
 2966 0008 48897DF8 		movq	%rdi, -8(%rbp)
 2967 000c 66480F7E 		movq	%xmm0, %rax
 2967      C0
 2968 0011 488945F0 		movq	%rax, -16(%rbp)
 2969 0015 F30F104D 		movss	-16(%rbp), %xmm1
 2969      F0
 2970 001a F30F1045 		movss	-12(%rbp), %xmm0
 2970      F4
 2971 001f F30F114D 		movss	%xmm1, -24(%rbp)
 2971      E8
 2972 0024 F30F1145 		movss	%xmm0, -20(%rbp)
 2972      EC
  38:costas2_impl.h ****        {
  39:costas2_impl.h ****          return (sample.real()*sample.imag());
 2973              		.loc 19 39 0
 2974 0029 488D45E8 		leaq	-24(%rbp), %rax
 2975 002d 4889C7   		movq	%rax, %rdi
 2976 0030 E8000000 		call	_ZNKSt7complexIfE4realB5cxx11Ev
 2976      00
 2977 0035 F30F1145 		movss	%xmm0, -28(%rbp)
 2977      E4
 2978 003a 488D45E8 		leaq	-24(%rbp), %rax
 2979 003e 4889C7   		movq	%rax, %rdi
 2980 0041 E8000000 		call	_ZNKSt7complexIfE4imagB5cxx11Ev
 2980      00
 2981 0046 F30F5945 		mulss	-28(%rbp), %xmm0
 2981      E4
  40:costas2_impl.h ****        }
 2982              		.loc 19 40 0
 2983 004b C9       		leave
 2984              		.cfi_def_cfa 7, 8
 2985 004c C3       		ret
 2986              		.cfi_endproc
 2987              	.LFE10930:
 2989              		.text
GAS LISTING /tmp/ccsIN87E.s 			page 162


 2991              	_ZL7gr_expjf:
 2992              	.LFB10931:
 2993              		.file 20 "/home/mpiscopo/gnuradio/include/gnuradio/expj.h"
   1:/home/mpiscopo/gnuradio/include/gnuradio/expj.h **** /* -*- c++ -*- */
   2:/home/mpiscopo/gnuradio/include/gnuradio/expj.h **** /*
   3:/home/mpiscopo/gnuradio/include/gnuradio/expj.h ****  * Copyright 2006 Free Software Foundation, Inc.
   4:/home/mpiscopo/gnuradio/include/gnuradio/expj.h ****  *
   5:/home/mpiscopo/gnuradio/include/gnuradio/expj.h ****  * This file is part of GNU Radio
   6:/home/mpiscopo/gnuradio/include/gnuradio/expj.h ****  *
   7:/home/mpiscopo/gnuradio/include/gnuradio/expj.h ****  * GNU Radio is free software; you can redistribute it and/or modify
   8:/home/mpiscopo/gnuradio/include/gnuradio/expj.h ****  * it under the terms of the GNU General Public License as published by
   9:/home/mpiscopo/gnuradio/include/gnuradio/expj.h ****  * the Free Software Foundation; either version 3, or (at your option)
  10:/home/mpiscopo/gnuradio/include/gnuradio/expj.h ****  * any later version.
  11:/home/mpiscopo/gnuradio/include/gnuradio/expj.h ****  *
  12:/home/mpiscopo/gnuradio/include/gnuradio/expj.h ****  * GNU Radio is distributed in the hope that it will be useful,
  13:/home/mpiscopo/gnuradio/include/gnuradio/expj.h ****  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  14:/home/mpiscopo/gnuradio/include/gnuradio/expj.h ****  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  15:/home/mpiscopo/gnuradio/include/gnuradio/expj.h ****  * GNU General Public License for more details.
  16:/home/mpiscopo/gnuradio/include/gnuradio/expj.h ****  *
  17:/home/mpiscopo/gnuradio/include/gnuradio/expj.h ****  * You should have received a copy of the GNU General Public License
  18:/home/mpiscopo/gnuradio/include/gnuradio/expj.h ****  * along with GNU Radio; see the file COPYING.  If not, write to
  19:/home/mpiscopo/gnuradio/include/gnuradio/expj.h ****  * the Free Software Foundation, Inc., 51 Franklin Street,
  20:/home/mpiscopo/gnuradio/include/gnuradio/expj.h ****  * Boston, MA 02110-1301, USA.
  21:/home/mpiscopo/gnuradio/include/gnuradio/expj.h ****  */
  22:/home/mpiscopo/gnuradio/include/gnuradio/expj.h **** #ifndef INCLUDED_GR_EXPJ_H
  23:/home/mpiscopo/gnuradio/include/gnuradio/expj.h **** #define INCLUDED_GR_EXPJ_H
  24:/home/mpiscopo/gnuradio/include/gnuradio/expj.h **** 
  25:/home/mpiscopo/gnuradio/include/gnuradio/expj.h **** #include <gnuradio/api.h>
  26:/home/mpiscopo/gnuradio/include/gnuradio/expj.h **** #include <gnuradio/sincos.h>
  27:/home/mpiscopo/gnuradio/include/gnuradio/expj.h **** #include <gnuradio/types.h>
  28:/home/mpiscopo/gnuradio/include/gnuradio/expj.h **** 
  29:/home/mpiscopo/gnuradio/include/gnuradio/expj.h **** static inline gr_complex
  30:/home/mpiscopo/gnuradio/include/gnuradio/expj.h **** gr_expj(float phase)
  31:/home/mpiscopo/gnuradio/include/gnuradio/expj.h **** {
 2994              		.loc 20 31 0
 2995              		.cfi_startproc
 2996 0000 55       		pushq	%rbp
 2997              		.cfi_def_cfa_offset 16
 2998              		.cfi_offset 6, -16
 2999 0001 4889E5   		movq	%rsp, %rbp
 3000              		.cfi_def_cfa_register 6
 3001 0004 4883EC30 		subq	$48, %rsp
 3002 0008 F30F1145 		movss	%xmm0, -20(%rbp)
 3002      EC
  32:/home/mpiscopo/gnuradio/include/gnuradio/expj.h ****   float	t_imag, t_real;
  33:/home/mpiscopo/gnuradio/include/gnuradio/expj.h ****   gr::sincosf(phase, &t_imag, &t_real);
 3003              		.loc 20 33 0
 3004 000d 488D4DF0 		leaq	-16(%rbp), %rcx
 3005 0011 488D55F4 		leaq	-12(%rbp), %rdx
 3006 0015 8B45EC   		movl	-20(%rbp), %eax
 3007 0018 4889CE   		movq	%rcx, %rsi
 3008 001b 4889D7   		movq	%rdx, %rdi
 3009 001e 8945D8   		movl	%eax, -40(%rbp)
 3010 0021 F30F1045 		movss	-40(%rbp), %xmm0
 3010      D8
 3011 0026 E8000000 		call	_ZN2gr7sincosfEfPfS0_@PLT
 3011      00
GAS LISTING /tmp/ccsIN87E.s 			page 163


  34:/home/mpiscopo/gnuradio/include/gnuradio/expj.h ****   return gr_complex(t_real, t_imag);
 3012              		.loc 20 34 0
 3013 002b F30F1045 		movss	-12(%rbp), %xmm0
 3013      F4
 3014 0030 8B55F0   		movl	-16(%rbp), %edx
 3015 0033 488D45F8 		leaq	-8(%rbp), %rax
 3016 0037 0F28C8   		movaps	%xmm0, %xmm1
 3017 003a 8955D8   		movl	%edx, -40(%rbp)
 3018 003d F30F1045 		movss	-40(%rbp), %xmm0
 3018      D8
 3019 0042 4889C7   		movq	%rax, %rdi
 3020 0045 E8000000 		call	_ZNSt7complexIfEC1Eff
 3020      00
 3021 004a F30F104D 		movss	-8(%rbp), %xmm1
 3021      F8
 3022 004f F30F1045 		movss	-4(%rbp), %xmm0
 3022      FC
 3023 0054 F30F114D 		movss	%xmm1, -28(%rbp)
 3023      E4
 3024 0059 F30F1145 		movss	%xmm0, -24(%rbp)
 3024      E8
 3025 005e 488B45E4 		movq	-28(%rbp), %rax
  35:/home/mpiscopo/gnuradio/include/gnuradio/expj.h **** }
 3026              		.loc 20 35 0
 3027 0062 488945D8 		movq	%rax, -40(%rbp)
 3028 0066 F30F7E45 		movq	-40(%rbp), %xmm0
 3028      D8
 3029 006b C9       		leave
 3030              		.cfi_def_cfa 7, 8
 3031 006c C3       		ret
 3032              		.cfi_endproc
 3033              	.LFE10931:
 3036              	_ZN2grL15branchless_clipEff:
 3037              	.LFB10934:
 3038              		.file 21 "/home/mpiscopo/gnuradio/include/gnuradio/math.h"
   1:/home/mpiscopo/gnuradio/include/gnuradio/math.h **** /* -*- c++ -*- */
   2:/home/mpiscopo/gnuradio/include/gnuradio/math.h **** /*
   3:/home/mpiscopo/gnuradio/include/gnuradio/math.h ****  * Copyright 2003,2005,2008,2013 Free Software Foundation, Inc.
   4:/home/mpiscopo/gnuradio/include/gnuradio/math.h ****  *
   5:/home/mpiscopo/gnuradio/include/gnuradio/math.h ****  * This file is part of GNU Radio
   6:/home/mpiscopo/gnuradio/include/gnuradio/math.h ****  *
   7:/home/mpiscopo/gnuradio/include/gnuradio/math.h ****  * GNU Radio is free software; you can redistribute it and/or modify
   8:/home/mpiscopo/gnuradio/include/gnuradio/math.h ****  * it under the terms of the GNU General Public License as published by
   9:/home/mpiscopo/gnuradio/include/gnuradio/math.h ****  * the Free Software Foundation; either version 3, or (at your option)
  10:/home/mpiscopo/gnuradio/include/gnuradio/math.h ****  * any later version.
  11:/home/mpiscopo/gnuradio/include/gnuradio/math.h ****  *
  12:/home/mpiscopo/gnuradio/include/gnuradio/math.h ****  * GNU Radio is distributed in the hope that it will be useful,
  13:/home/mpiscopo/gnuradio/include/gnuradio/math.h ****  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  14:/home/mpiscopo/gnuradio/include/gnuradio/math.h ****  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  15:/home/mpiscopo/gnuradio/include/gnuradio/math.h ****  * GNU General Public License for more details.
  16:/home/mpiscopo/gnuradio/include/gnuradio/math.h ****  *
  17:/home/mpiscopo/gnuradio/include/gnuradio/math.h ****  * You should have received a copy of the GNU General Public License
  18:/home/mpiscopo/gnuradio/include/gnuradio/math.h ****  * along with GNU Radio; see the file COPYING.  If not, write to
  19:/home/mpiscopo/gnuradio/include/gnuradio/math.h ****  * the Free Software Foundation, Inc., 51 Franklin Street,
  20:/home/mpiscopo/gnuradio/include/gnuradio/math.h ****  * Boston, MA 02110-1301, USA.
  21:/home/mpiscopo/gnuradio/include/gnuradio/math.h ****  */
  22:/home/mpiscopo/gnuradio/include/gnuradio/math.h **** 
GAS LISTING /tmp/ccsIN87E.s 			page 164


  23:/home/mpiscopo/gnuradio/include/gnuradio/math.h **** /*
  24:/home/mpiscopo/gnuradio/include/gnuradio/math.h ****  * mathematical odds and ends.
  25:/home/mpiscopo/gnuradio/include/gnuradio/math.h ****  */
  26:/home/mpiscopo/gnuradio/include/gnuradio/math.h **** 
  27:/home/mpiscopo/gnuradio/include/gnuradio/math.h **** #ifndef _GR_MATH_H_
  28:/home/mpiscopo/gnuradio/include/gnuradio/math.h **** #define _GR_MATH_H_
  29:/home/mpiscopo/gnuradio/include/gnuradio/math.h **** 
  30:/home/mpiscopo/gnuradio/include/gnuradio/math.h **** #include <cmath>
  31:/home/mpiscopo/gnuradio/include/gnuradio/math.h **** #include <gnuradio/api.h>
  32:/home/mpiscopo/gnuradio/include/gnuradio/math.h **** #include <gnuradio/gr_complex.h>
  33:/home/mpiscopo/gnuradio/include/gnuradio/math.h **** 
  34:/home/mpiscopo/gnuradio/include/gnuradio/math.h **** namespace gr {
  35:/home/mpiscopo/gnuradio/include/gnuradio/math.h **** 
  36:/home/mpiscopo/gnuradio/include/gnuradio/math.h ****   static inline bool
  37:/home/mpiscopo/gnuradio/include/gnuradio/math.h ****   is_power_of_2(long x)
  38:/home/mpiscopo/gnuradio/include/gnuradio/math.h ****   {
  39:/home/mpiscopo/gnuradio/include/gnuradio/math.h ****     return x != 0 && (x & (x-1)) == 0;
  40:/home/mpiscopo/gnuradio/include/gnuradio/math.h ****   }
  41:/home/mpiscopo/gnuradio/include/gnuradio/math.h **** 
  42:/home/mpiscopo/gnuradio/include/gnuradio/math.h ****   /*!
  43:/home/mpiscopo/gnuradio/include/gnuradio/math.h ****    * \brief Fast arc tangent using table lookup and linear interpolation
  44:/home/mpiscopo/gnuradio/include/gnuradio/math.h ****    * \ingroup misc
  45:/home/mpiscopo/gnuradio/include/gnuradio/math.h ****    *
  46:/home/mpiscopo/gnuradio/include/gnuradio/math.h ****    * \param y component of input vector
  47:/home/mpiscopo/gnuradio/include/gnuradio/math.h ****    * \param x component of input vector
  48:/home/mpiscopo/gnuradio/include/gnuradio/math.h ****    * \returns float angle angle of vector (x, y) in radians
  49:/home/mpiscopo/gnuradio/include/gnuradio/math.h ****    *
  50:/home/mpiscopo/gnuradio/include/gnuradio/math.h ****    * This function calculates the angle of the vector (x,y) based on a
  51:/home/mpiscopo/gnuradio/include/gnuradio/math.h ****    * table lookup and linear interpolation. The table uses a 256 point
  52:/home/mpiscopo/gnuradio/include/gnuradio/math.h ****    * table covering -45 to +45 degrees and uses symetry to determine
  53:/home/mpiscopo/gnuradio/include/gnuradio/math.h ****    * the final angle value in the range of -180 to 180 degrees. Note
  54:/home/mpiscopo/gnuradio/include/gnuradio/math.h ****    * that this function uses the small angle approximation for values
  55:/home/mpiscopo/gnuradio/include/gnuradio/math.h ****    * close to zero. This routine calculates the arc tangent with an
  56:/home/mpiscopo/gnuradio/include/gnuradio/math.h ****    * average error of +/- 0.045 degrees.
  57:/home/mpiscopo/gnuradio/include/gnuradio/math.h ****    */
  58:/home/mpiscopo/gnuradio/include/gnuradio/math.h ****   GR_RUNTIME_API float fast_atan2f(float y, float x);
  59:/home/mpiscopo/gnuradio/include/gnuradio/math.h **** 
  60:/home/mpiscopo/gnuradio/include/gnuradio/math.h ****   static inline float
  61:/home/mpiscopo/gnuradio/include/gnuradio/math.h ****   fast_atan2f(gr_complex z)
  62:/home/mpiscopo/gnuradio/include/gnuradio/math.h ****   {
  63:/home/mpiscopo/gnuradio/include/gnuradio/math.h ****     return fast_atan2f(z.imag(), z.real());
  64:/home/mpiscopo/gnuradio/include/gnuradio/math.h ****   }
  65:/home/mpiscopo/gnuradio/include/gnuradio/math.h **** 
  66:/home/mpiscopo/gnuradio/include/gnuradio/math.h ****   /* This bounds x by +/- clip without a branch */
  67:/home/mpiscopo/gnuradio/include/gnuradio/math.h ****   static inline float
  68:/home/mpiscopo/gnuradio/include/gnuradio/math.h ****   branchless_clip(float x, float clip)
  69:/home/mpiscopo/gnuradio/include/gnuradio/math.h ****   {
 3039              		.loc 21 69 0
 3040              		.cfi_startproc
 3041 006d 55       		pushq	%rbp
 3042              		.cfi_def_cfa_offset 16
 3043              		.cfi_offset 6, -16
 3044 006e 4889E5   		movq	%rsp, %rbp
 3045              		.cfi_def_cfa_register 6
 3046 0071 F30F1145 		movss	%xmm0, -20(%rbp)
 3046      EC
 3047 0076 F30F114D 		movss	%xmm1, -24(%rbp)
GAS LISTING /tmp/ccsIN87E.s 			page 165


 3047      E8
  70:/home/mpiscopo/gnuradio/include/gnuradio/math.h ****     float x1 = fabsf(x+clip);
 3048              		.loc 21 70 0
 3049 007b F30F1045 		movss	-20(%rbp), %xmm0
 3049      EC
 3050 0080 F30F5845 		addss	-24(%rbp), %xmm0
 3050      E8
 3051 0085 F30F100D 		movss	.LC0(%rip), %xmm1
 3051      00000000 
 3052 008d 0F54C1   		andps	%xmm1, %xmm0
 3053 0090 F30F1145 		movss	%xmm0, -4(%rbp)
 3053      FC
  71:/home/mpiscopo/gnuradio/include/gnuradio/math.h ****     float x2 = fabsf(x-clip);
 3054              		.loc 21 71 0
 3055 0095 F30F1045 		movss	-20(%rbp), %xmm0
 3055      EC
 3056 009a F30F5C45 		subss	-24(%rbp), %xmm0
 3056      E8
 3057 009f F30F100D 		movss	.LC0(%rip), %xmm1
 3057      00000000 
 3058 00a7 0F54C1   		andps	%xmm1, %xmm0
 3059 00aa F30F1145 		movss	%xmm0, -8(%rbp)
 3059      F8
  72:/home/mpiscopo/gnuradio/include/gnuradio/math.h ****     x1 -= x2;
 3060              		.loc 21 72 0
 3061 00af F30F1045 		movss	-4(%rbp), %xmm0
 3061      FC
 3062 00b4 F30F5C45 		subss	-8(%rbp), %xmm0
 3062      F8
 3063 00b9 F30F1145 		movss	%xmm0, -4(%rbp)
 3063      FC
  73:/home/mpiscopo/gnuradio/include/gnuradio/math.h ****     return 0.5*x1;
 3064              		.loc 21 73 0
 3065 00be F30F104D 		movss	-4(%rbp), %xmm1
 3065      FC
 3066 00c3 F30F1005 		movss	.LC3(%rip), %xmm0
 3066      00000000 
 3067 00cb F30F59C1 		mulss	%xmm1, %xmm0
  74:/home/mpiscopo/gnuradio/include/gnuradio/math.h ****   }
 3068              		.loc 21 74 0
 3069 00cf 5D       		popq	%rbp
 3070              		.cfi_def_cfa 7, 8
 3071 00d0 C3       		ret
 3072              		.cfi_endproc
 3073              	.LFE10934:
 3075              		.section	.text._ZN5boost10shared_ptrIN2gr5lfast12costas2_implEED2Ev,"axG",@progbits,_ZN5boost10sha
 3076              		.align 2
 3077              		.weak	_ZN5boost10shared_ptrIN2gr5lfast12costas2_implEED2Ev
 3079              	_ZN5boost10shared_ptrIN2gr5lfast12costas2_implEED2Ev:
 3080              	.LFB10952:
 3081              		.loc 7 336 0
 3082              		.cfi_startproc
 3083 0000 55       		pushq	%rbp
 3084              		.cfi_def_cfa_offset 16
 3085              		.cfi_offset 6, -16
 3086 0001 4889E5   		movq	%rsp, %rbp
 3087              		.cfi_def_cfa_register 6
GAS LISTING /tmp/ccsIN87E.s 			page 166


 3088 0004 4883EC10 		subq	$16, %rsp
 3089 0008 48897DF8 		movq	%rdi, -8(%rbp)
 3090              	.LBB32:
 3091              		.loc 7 336 0
 3092 000c 488B45F8 		movq	-8(%rbp), %rax
 3093 0010 4883C008 		addq	$8, %rax
 3094 0014 4889C7   		movq	%rax, %rdi
 3095 0017 E8000000 		call	_ZN5boost6detail12shared_countD1Ev
 3095      00
 3096              	.LBE32:
 3097 001c 90       		nop
 3098 001d C9       		leave
 3099              		.cfi_def_cfa 7, 8
 3100 001e C3       		ret
 3101              		.cfi_endproc
 3102              	.LFE10952:
 3104              		.weak	_ZN5boost10shared_ptrIN2gr5lfast12costas2_implEED1Ev
 3105              		.set	_ZN5boost10shared_ptrIN2gr5lfast12costas2_implEED1Ev,_ZN5boost10shared_ptrIN2gr5lfast12costas
 3106              		.text
 3107 00d1 90       		.align 2
 3108              		.globl	_ZN2gr5lfast7costas24makeEfi
 3110              	_ZN2gr5lfast7costas24makeEfi:
 3111              	.LFB10950:
 3112              		.file 22 "costas2_impl.cc"
   1:costas2_impl.cc **** /* -*- c++ -*- */
   2:costas2_impl.cc **** /* 
   3:costas2_impl.cc ****  * Copyright 2017 ghostop14.
   4:costas2_impl.cc ****  * 
   5:costas2_impl.cc ****  * This is free software; you can redistribute it and/or modify
   6:costas2_impl.cc ****  * it under the terms of the GNU General Public License as published by
   7:costas2_impl.cc ****  * the Free Software Foundation; either version 3, or (at your option)
   8:costas2_impl.cc ****  * any later version.
   9:costas2_impl.cc ****  * 
  10:costas2_impl.cc ****  * This software is distributed in the hope that it will be useful,
  11:costas2_impl.cc ****  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  12:costas2_impl.cc ****  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  13:costas2_impl.cc ****  * GNU General Public License for more details.
  14:costas2_impl.cc ****  * 
  15:costas2_impl.cc ****  * You should have received a copy of the GNU General Public License
  16:costas2_impl.cc ****  * along with this software; see the file COPYING.  If not, write to
  17:costas2_impl.cc ****  * the Free Software Foundation, Inc., 51 Franklin Street,
  18:costas2_impl.cc ****  * Boston, MA 02110-1301, USA.
  19:costas2_impl.cc ****  */
  20:costas2_impl.cc **** 
  21:costas2_impl.cc **** 
  22:costas2_impl.cc **** //  Note:  To compile and generate intermingled assembly, use this command:
  23:costas2_impl.cc **** // gcc -I $Gnuradio_DIR/include -g -S -o costas2_impl.s costas2_impl.cc
  24:costas2_impl.cc **** // gcc -I $Gnuradio_DIR/include -c -g -Wa,-a,-ad costas2_impl.cc > costas2_impl.s
  25:costas2_impl.cc **** 
  26:costas2_impl.cc **** #ifdef HAVE_CONFIG_H
  27:costas2_impl.cc **** #include "config.h"
  28:costas2_impl.cc **** #endif
  29:costas2_impl.cc **** 
  30:costas2_impl.cc **** #include <gnuradio/io_signature.h>
  31:costas2_impl.cc **** #include "costas2_impl.h"
  32:costas2_impl.cc **** #include <gnuradio/sincos.h>
  33:costas2_impl.cc **** #include <gnuradio/expj.h>
GAS LISTING /tmp/ccsIN87E.s 			page 167


  34:costas2_impl.cc **** #include <gnuradio/math.h>
  35:costas2_impl.cc **** #include "clSComplex.h"
  36:costas2_impl.cc **** 
  37:costas2_impl.cc **** #define CL_TWO_PI 6.28318530717958647692
  38:costas2_impl.cc **** #define CL_MINUS_TWO_PI -6.28318530717958647692
  39:costas2_impl.cc **** 
  40:costas2_impl.cc **** // assisted detection of Fused Multiply Add (FMA) functionality
  41:costas2_impl.cc **** #if !defined(__FMA__) && defined(__AVX2__)
  42:costas2_impl.cc **** #define __FMA__ 1
  43:costas2_impl.cc **** #endif
  44:costas2_impl.cc **** 
  45:costas2_impl.cc **** #if defined(FP_FAST_FMA)
  46:costas2_impl.cc **** #define __FMA__ 1
  47:costas2_impl.cc **** #endif
  48:costas2_impl.cc **** 
  49:costas2_impl.cc **** #if defined(__FMA__)
  50:costas2_impl.cc **** #pragma message "FMA support detected.  Compiling for Fused Multiply/Add support."
  51:costas2_impl.cc **** #else
  52:costas2_impl.cc **** #pragma message "No FMA support detected.  Compiling for normal math."
  53:costas2_impl.cc **** #endif
  54:costas2_impl.cc **** 
  55:costas2_impl.cc **** namespace gr {
  56:costas2_impl.cc ****   namespace lfast {
  57:costas2_impl.cc **** 
  58:costas2_impl.cc ****     costas2::sptr
  59:costas2_impl.cc ****     costas2::make(float loop_bw, int order)
  60:costas2_impl.cc ****     {
 3113              		.loc 22 60 0
 3114              		.cfi_startproc
 3115              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 3116              		.cfi_lsda 0x1b,.LLSDA10950
 3117 00d2 55       		pushq	%rbp
 3118              		.cfi_def_cfa_offset 16
 3119              		.cfi_offset 6, -16
 3120 00d3 4889E5   		movq	%rsp, %rbp
 3121              		.cfi_def_cfa_register 6
 3122 00d6 4154     		pushq	%r12
 3123 00d8 53       		pushq	%rbx
 3124 00d9 4883EC40 		subq	$64, %rsp
 3125              		.cfi_offset 12, -24
 3126              		.cfi_offset 3, -32
 3127 00dd 48897DC8 		movq	%rdi, -56(%rbp)
 3128 00e1 F30F1145 		movss	%xmm0, -60(%rbp)
 3128      C4
 3129 00e6 8975C0   		movl	%esi, -64(%rbp)
  61:costas2_impl.cc ****       return gnuradio::get_initial_sptr
  62:costas2_impl.cc ****         (new costas2_impl(loop_bw, order));
 3130              		.loc 22 62 0
 3131 00e9 BFA00200 		movl	$672, %edi
 3131      00
 3132              	.LEHB13:
 3133 00ee E8000000 		call	_Znwm@PLT
 3133      00
 3134              	.LEHE13:
 3135 00f3 4889C3   		movq	%rax, %rbx
 3136 00f6 8B55C0   		movl	-64(%rbp), %edx
 3137 00f9 8B45C4   		movl	-60(%rbp), %eax
GAS LISTING /tmp/ccsIN87E.s 			page 168


 3138 00fc 89D6     		movl	%edx, %esi
 3139 00fe 8945BC   		movl	%eax, -68(%rbp)
 3140 0101 F30F1045 		movss	-68(%rbp), %xmm0
 3140      BC
 3141 0106 4889DF   		movq	%rbx, %rdi
 3142              	.LEHB14:
 3143 0109 E8000000 		call	_ZN2gr5lfast12costas2_implC1Efi
 3143      00
 3144              	.LEHE14:
 3145              		.loc 22 62 0 is_stmt 0 discriminator 4
 3146 010e 488D45E0 		leaq	-32(%rbp), %rax
 3147 0112 4889DE   		movq	%rbx, %rsi
 3148 0115 4889C7   		movq	%rax, %rdi
 3149              	.LEHB15:
 3150 0118 E8000000 		call	_ZN8gnuradio16get_initial_sptrIN2gr5lfast12costas2_implEEEN5boost10shared_ptrIT_EEPS6_
 3150      00
 3151 011d 488D55E0 		leaq	-32(%rbp), %rdx
 3152 0121 488B45C8 		movq	-56(%rbp), %rax
 3153 0125 4883EC08 		subq	$8, %rsp
 3154 0129 4154     		pushq	%r12
 3155 012b 4889D6   		movq	%rdx, %rsi
 3156 012e 4889C7   		movq	%rax, %rdi
 3157 0131 E8000000 		call	_ZN5boost10shared_ptrIN2gr5lfast7costas2EEC1INS2_12costas2_implEEEONS0_IT_EENS_6detail24sp_en
 3157      00
 3158 0136 4883C410 		addq	$16, %rsp
 3159 013a 488D45E0 		leaq	-32(%rbp), %rax
 3160 013e 4889C7   		movq	%rax, %rdi
 3161 0141 E8000000 		call	_ZN5boost10shared_ptrIN2gr5lfast12costas2_implEED1Ev
 3161      00
 3162 0146 EB1B     		jmp	.L134
 3163              	.L133:
 3164 0148 4989C4   		movq	%rax, %r12
 3165              		.loc 22 62 0
 3166 014b BEA00200 		movl	$672, %esi
 3166      00
 3167 0150 4889DF   		movq	%rbx, %rdi
 3168 0153 E8000000 		call	_ZdlPvm@PLT
 3168      00
 3169 0158 4C89E0   		movq	%r12, %rax
 3170 015b 4889C7   		movq	%rax, %rdi
 3171 015e E8000000 		call	_Unwind_Resume@PLT
 3171      00
 3172              	.LEHE15:
 3173              	.L134:
  63:costas2_impl.cc ****     }
 3174              		.loc 22 63 0 is_stmt 1
 3175 0163 488B45C8 		movq	-56(%rbp), %rax
 3176 0167 488D65F0 		leaq	-16(%rbp), %rsp
 3177 016b 5B       		popq	%rbx
 3178 016c 415C     		popq	%r12
 3179 016e 5D       		popq	%rbp
 3180              		.cfi_def_cfa 7, 8
 3181 016f C3       		ret
 3182              		.cfi_endproc
 3183              	.LFE10950:
 3184              		.section	.gcc_except_table,"a",@progbits
 3185              	.LLSDA10950:
GAS LISTING /tmp/ccsIN87E.s 			page 169


 3186 0000 FF       		.byte	0xff
 3187 0001 FF       		.byte	0xff
 3188 0002 01       		.byte	0x1
 3189 0003 0C       		.uleb128 .LLSDACSE10950-.LLSDACSB10950
 3190              	.LLSDACSB10950:
 3191 0004 1C       		.uleb128 .LEHB13-.LFB10950
 3192 0005 05       		.uleb128 .LEHE13-.LEHB13
 3193 0006 00       		.uleb128 0
 3194 0007 00       		.uleb128 0
 3195 0008 37       		.uleb128 .LEHB14-.LFB10950
 3196 0009 05       		.uleb128 .LEHE14-.LEHB14
 3197 000a 76       		.uleb128 .L133-.LFB10950
 3198 000b 00       		.uleb128 0
 3199 000c 46       		.uleb128 .LEHB15-.LFB10950
 3200 000d 4B       		.uleb128 .LEHE15-.LEHB15
 3201 000e 00       		.uleb128 0
 3202 000f 00       		.uleb128 0
 3203              	.LLSDACSE10950:
 3204              		.text
 3206              		.section	.text._ZN2gr10sync_blockD2Ev,"axG",@progbits,_ZN2gr10sync_blockD5Ev,comdat
 3207              		.align 2
 3208              		.weak	_ZN2gr10sync_blockD2Ev
 3210              	_ZN2gr10sync_blockD2Ev:
 3211              	.LFB10959:
 3212              		.file 23 "/home/mpiscopo/gnuradio/include/gnuradio/sync_block.h"
   1:/home/mpiscopo/gnuradio/include/gnuradio/sync_block.h **** /* -*- c++ -*- */
   2:/home/mpiscopo/gnuradio/include/gnuradio/sync_block.h **** /*
   3:/home/mpiscopo/gnuradio/include/gnuradio/sync_block.h ****  * Copyright 2004,2013 Free Software Foundation, Inc.
   4:/home/mpiscopo/gnuradio/include/gnuradio/sync_block.h ****  *
   5:/home/mpiscopo/gnuradio/include/gnuradio/sync_block.h ****  * This file is part of GNU Radio
   6:/home/mpiscopo/gnuradio/include/gnuradio/sync_block.h ****  *
   7:/home/mpiscopo/gnuradio/include/gnuradio/sync_block.h ****  * GNU Radio is free software; you can redistribute it and/or modify
   8:/home/mpiscopo/gnuradio/include/gnuradio/sync_block.h ****  * it under the terms of the GNU General Public License as published by
   9:/home/mpiscopo/gnuradio/include/gnuradio/sync_block.h ****  * the Free Software Foundation; either version 3, or (at your option)
  10:/home/mpiscopo/gnuradio/include/gnuradio/sync_block.h ****  * any later version.
  11:/home/mpiscopo/gnuradio/include/gnuradio/sync_block.h ****  *
  12:/home/mpiscopo/gnuradio/include/gnuradio/sync_block.h ****  * GNU Radio is distributed in the hope that it will be useful,
  13:/home/mpiscopo/gnuradio/include/gnuradio/sync_block.h ****  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  14:/home/mpiscopo/gnuradio/include/gnuradio/sync_block.h ****  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  15:/home/mpiscopo/gnuradio/include/gnuradio/sync_block.h ****  * GNU General Public License for more details.
  16:/home/mpiscopo/gnuradio/include/gnuradio/sync_block.h ****  *
  17:/home/mpiscopo/gnuradio/include/gnuradio/sync_block.h ****  * You should have received a copy of the GNU General Public License
  18:/home/mpiscopo/gnuradio/include/gnuradio/sync_block.h ****  * along with GNU Radio; see the file COPYING.  If not, write to
  19:/home/mpiscopo/gnuradio/include/gnuradio/sync_block.h ****  * the Free Software Foundation, Inc., 51 Franklin Street,
  20:/home/mpiscopo/gnuradio/include/gnuradio/sync_block.h ****  * Boston, MA 02110-1301, USA.
  21:/home/mpiscopo/gnuradio/include/gnuradio/sync_block.h ****  */
  22:/home/mpiscopo/gnuradio/include/gnuradio/sync_block.h **** 
  23:/home/mpiscopo/gnuradio/include/gnuradio/sync_block.h **** #ifndef INCLUDED_GR_RUNTIME_SYNC_BLOCK_H
  24:/home/mpiscopo/gnuradio/include/gnuradio/sync_block.h **** #define INCLUDED_GR_RUNTIME_SYNC_BLOCK_H
  25:/home/mpiscopo/gnuradio/include/gnuradio/sync_block.h **** 
  26:/home/mpiscopo/gnuradio/include/gnuradio/sync_block.h **** #include <gnuradio/api.h>
  27:/home/mpiscopo/gnuradio/include/gnuradio/sync_block.h **** #include <gnuradio/block.h>
  28:/home/mpiscopo/gnuradio/include/gnuradio/sync_block.h **** 
  29:/home/mpiscopo/gnuradio/include/gnuradio/sync_block.h **** namespace gr {
  30:/home/mpiscopo/gnuradio/include/gnuradio/sync_block.h **** 
  31:/home/mpiscopo/gnuradio/include/gnuradio/sync_block.h ****   /*!
  32:/home/mpiscopo/gnuradio/include/gnuradio/sync_block.h ****    * \brief synchronous 1:1 input to output with history
GAS LISTING /tmp/ccsIN87E.s 			page 170


  33:/home/mpiscopo/gnuradio/include/gnuradio/sync_block.h ****    * \ingroup base_blk
  34:/home/mpiscopo/gnuradio/include/gnuradio/sync_block.h ****    *
  35:/home/mpiscopo/gnuradio/include/gnuradio/sync_block.h ****    * Override work to provide the signal processing implementation.
  36:/home/mpiscopo/gnuradio/include/gnuradio/sync_block.h ****    */
  37:/home/mpiscopo/gnuradio/include/gnuradio/sync_block.h ****   class GR_RUNTIME_API sync_block : public block
 3213              		.loc 23 37 0
 3214              		.cfi_startproc
 3215 0000 55       		pushq	%rbp
 3216              		.cfi_def_cfa_offset 16
 3217              		.cfi_offset 6, -16
 3218 0001 4889E5   		movq	%rsp, %rbp
 3219              		.cfi_def_cfa_register 6
 3220 0004 4883EC10 		subq	$16, %rsp
 3221 0008 48897DF8 		movq	%rdi, -8(%rbp)
 3222              	.LBB33:
 3223              		.loc 23 37 0
 3224 000c 488D1500 		leaq	16+_ZTVN2gr10sync_blockE(%rip), %rdx
 3224      000000
 3225 0013 488B45F8 		movq	-8(%rbp), %rax
 3226 0017 488910   		movq	%rdx, (%rax)
 3227 001a 488B45F8 		movq	-8(%rbp), %rax
 3228 001e 4889C7   		movq	%rax, %rdi
 3229 0021 E8000000 		call	_ZN2gr5blockD2Ev@PLT
 3229      00
 3230              	.LBE33:
 3231 0026 90       		nop
 3232 0027 C9       		leave
 3233              		.cfi_def_cfa 7, 8
 3234 0028 C3       		ret
 3235              		.cfi_endproc
 3236              	.LFE10959:
 3238              		.weak	_ZN2gr10sync_blockD1Ev
 3239              		.set	_ZN2gr10sync_blockD1Ev,_ZN2gr10sync_blockD2Ev
 3240              		.section	.text._ZN2gr10sync_blockD0Ev,"axG",@progbits,_ZN2gr10sync_blockD5Ev,comdat
 3241              		.align 2
 3242              		.weak	_ZN2gr10sync_blockD0Ev
 3244              	_ZN2gr10sync_blockD0Ev:
 3245              	.LFB10961:
 3246              		.loc 23 37 0
 3247              		.cfi_startproc
 3248 0000 55       		pushq	%rbp
 3249              		.cfi_def_cfa_offset 16
 3250              		.cfi_offset 6, -16
 3251 0001 4889E5   		movq	%rsp, %rbp
 3252              		.cfi_def_cfa_register 6
 3253 0004 4883EC10 		subq	$16, %rsp
 3254 0008 48897DF8 		movq	%rdi, -8(%rbp)
 3255              		.loc 23 37 0
 3256 000c 488B45F8 		movq	-8(%rbp), %rax
 3257 0010 4889C7   		movq	%rax, %rdi
 3258 0013 E8000000 		call	_ZN2gr10sync_blockD1Ev
 3258      00
 3259 0018 488B45F8 		movq	-8(%rbp), %rax
 3260 001c BE500200 		movl	$592, %esi
 3260      00
 3261 0021 4889C7   		movq	%rax, %rdi
 3262 0024 E8000000 		call	_ZdlPvm@PLT
GAS LISTING /tmp/ccsIN87E.s 			page 171


 3262      00
 3263 0029 C9       		leave
 3264              		.cfi_def_cfa 7, 8
 3265 002a C3       		ret
 3266              		.cfi_endproc
 3267              	.LFE10961:
 3269              		.section	.text._ZN2gr5lfast7costas2C2Ev,"axG",@progbits,_ZN2gr5lfast7costas2C2Ev,comdat
 3270              		.align 2
 3271              		.weak	_ZN2gr5lfast7costas2C2Ev
 3273              	_ZN2gr5lfast7costas2C2Ev:
 3274              	.LFB10963:
 3275              		.file 24 "/home/mpiscopo/gnuradio/include/lfast/costas2.h"
   1:/home/mpiscopo/gnuradio/include/lfast/costas2.h **** /* -*- c++ -*- */
   2:/home/mpiscopo/gnuradio/include/lfast/costas2.h **** /* 
   3:/home/mpiscopo/gnuradio/include/lfast/costas2.h ****  * Copyright 2017 ghostop14.
   4:/home/mpiscopo/gnuradio/include/lfast/costas2.h ****  * 
   5:/home/mpiscopo/gnuradio/include/lfast/costas2.h ****  * This is free software; you can redistribute it and/or modify
   6:/home/mpiscopo/gnuradio/include/lfast/costas2.h ****  * it under the terms of the GNU General Public License as published by
   7:/home/mpiscopo/gnuradio/include/lfast/costas2.h ****  * the Free Software Foundation; either version 3, or (at your option)
   8:/home/mpiscopo/gnuradio/include/lfast/costas2.h ****  * any later version.
   9:/home/mpiscopo/gnuradio/include/lfast/costas2.h ****  * 
  10:/home/mpiscopo/gnuradio/include/lfast/costas2.h ****  * This software is distributed in the hope that it will be useful,
  11:/home/mpiscopo/gnuradio/include/lfast/costas2.h ****  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  12:/home/mpiscopo/gnuradio/include/lfast/costas2.h ****  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  13:/home/mpiscopo/gnuradio/include/lfast/costas2.h ****  * GNU General Public License for more details.
  14:/home/mpiscopo/gnuradio/include/lfast/costas2.h ****  * 
  15:/home/mpiscopo/gnuradio/include/lfast/costas2.h ****  * You should have received a copy of the GNU General Public License
  16:/home/mpiscopo/gnuradio/include/lfast/costas2.h ****  * along with this software; see the file COPYING.  If not, write to
  17:/home/mpiscopo/gnuradio/include/lfast/costas2.h ****  * the Free Software Foundation, Inc., 51 Franklin Street,
  18:/home/mpiscopo/gnuradio/include/lfast/costas2.h ****  * Boston, MA 02110-1301, USA.
  19:/home/mpiscopo/gnuradio/include/lfast/costas2.h ****  */
  20:/home/mpiscopo/gnuradio/include/lfast/costas2.h **** 
  21:/home/mpiscopo/gnuradio/include/lfast/costas2.h **** 
  22:/home/mpiscopo/gnuradio/include/lfast/costas2.h **** #ifndef INCLUDED_LFAST_COSTAS2_H
  23:/home/mpiscopo/gnuradio/include/lfast/costas2.h **** #define INCLUDED_LFAST_COSTAS2_H
  24:/home/mpiscopo/gnuradio/include/lfast/costas2.h **** 
  25:/home/mpiscopo/gnuradio/include/lfast/costas2.h **** #include <lfast/api.h>
  26:/home/mpiscopo/gnuradio/include/lfast/costas2.h **** #include <gnuradio/sync_block.h>
  27:/home/mpiscopo/gnuradio/include/lfast/costas2.h **** #include <gnuradio/blocks/control_loop.h>
  28:/home/mpiscopo/gnuradio/include/lfast/costas2.h **** 
  29:/home/mpiscopo/gnuradio/include/lfast/costas2.h **** namespace gr {
  30:/home/mpiscopo/gnuradio/include/lfast/costas2.h ****   namespace lfast {
  31:/home/mpiscopo/gnuradio/include/lfast/costas2.h **** 
  32:/home/mpiscopo/gnuradio/include/lfast/costas2.h ****     /*!
  33:/home/mpiscopo/gnuradio/include/lfast/costas2.h ****      * \brief <+description of block+>
  34:/home/mpiscopo/gnuradio/include/lfast/costas2.h ****      * \ingroup lfast
  35:/home/mpiscopo/gnuradio/include/lfast/costas2.h ****      *
  36:/home/mpiscopo/gnuradio/include/lfast/costas2.h ****      */
  37:/home/mpiscopo/gnuradio/include/lfast/costas2.h ****     class LFAST_API costas2
 3276              		.loc 24 37 0
 3277              		.cfi_startproc
 3278 0000 55       		pushq	%rbp
 3279              		.cfi_def_cfa_offset 16
 3280              		.cfi_offset 6, -16
 3281 0001 4889E5   		movq	%rsp, %rbp
 3282              		.cfi_def_cfa_register 6
 3283 0004 48897DF8 		movq	%rdi, -8(%rbp)
GAS LISTING /tmp/ccsIN87E.s 			page 172


 3284 0008 488975F0 		movq	%rsi, -16(%rbp)
 3285              	.LBB34:
 3286              		.loc 24 37 0
 3287 000c 488B45F0 		movq	-16(%rbp), %rax
 3288 0010 488B10   		movq	(%rax), %rdx
 3289 0013 488B45F8 		movq	-8(%rbp), %rax
 3290 0017 488910   		movq	%rdx, (%rax)
 3291 001a 488B45F8 		movq	-8(%rbp), %rax
 3292 001e 488B00   		movq	(%rax), %rax
 3293 0021 4883E818 		subq	$24, %rax
 3294 0025 488B00   		movq	(%rax), %rax
 3295 0028 4889C2   		movq	%rax, %rdx
 3296 002b 488B45F8 		movq	-8(%rbp), %rax
 3297 002f 4801C2   		addq	%rax, %rdx
 3298 0032 488B45F0 		movq	-16(%rbp), %rax
 3299 0036 488B4008 		movq	8(%rax), %rax
 3300 003a 488902   		movq	%rax, (%rdx)
 3301 003d 488B45F8 		movq	-8(%rbp), %rax
 3302 0041 488B00   		movq	(%rax), %rax
 3303 0044 4883E820 		subq	$32, %rax
 3304 0048 488B00   		movq	(%rax), %rax
 3305 004b 4889C2   		movq	%rax, %rdx
 3306 004e 488B45F8 		movq	-8(%rbp), %rax
 3307 0052 4801C2   		addq	%rax, %rdx
 3308 0055 488B45F0 		movq	-16(%rbp), %rax
 3309 0059 488B4010 		movq	16(%rax), %rax
 3310 005d 488902   		movq	%rax, (%rdx)
 3311              	.LBE34:
 3312 0060 90       		nop
 3313 0061 5D       		popq	%rbp
 3314              		.cfi_def_cfa 7, 8
 3315 0062 C3       		ret
 3316              		.cfi_endproc
 3317              	.LFE10963:
 3319              		.section	.text._ZN2gr5lfast7costas2D2Ev,"axG",@progbits,_ZN2gr5lfast7costas2D2Ev,comdat
 3320              		.align 2
 3321              		.weak	_ZN2gr5lfast7costas2D2Ev
 3323              	_ZN2gr5lfast7costas2D2Ev:
 3324              	.LFB10966:
 3325              		.loc 24 37 0
 3326              		.cfi_startproc
 3327 0000 55       		pushq	%rbp
 3328              		.cfi_def_cfa_offset 16
 3329              		.cfi_offset 6, -16
 3330 0001 4889E5   		movq	%rsp, %rbp
 3331              		.cfi_def_cfa_register 6
 3332 0004 48897DF8 		movq	%rdi, -8(%rbp)
 3333 0008 488975F0 		movq	%rsi, -16(%rbp)
 3334              	.LBB35:
 3335              		.loc 24 37 0
 3336 000c 488B45F0 		movq	-16(%rbp), %rax
 3337 0010 488B10   		movq	(%rax), %rdx
 3338 0013 488B45F8 		movq	-8(%rbp), %rax
 3339 0017 488910   		movq	%rdx, (%rax)
 3340 001a 488B45F8 		movq	-8(%rbp), %rax
 3341 001e 488B00   		movq	(%rax), %rax
 3342 0021 4883E818 		subq	$24, %rax
GAS LISTING /tmp/ccsIN87E.s 			page 173


 3343 0025 488B00   		movq	(%rax), %rax
 3344 0028 4889C2   		movq	%rax, %rdx
 3345 002b 488B45F8 		movq	-8(%rbp), %rax
 3346 002f 4801C2   		addq	%rax, %rdx
 3347 0032 488B45F0 		movq	-16(%rbp), %rax
 3348 0036 488B4008 		movq	8(%rax), %rax
 3349 003a 488902   		movq	%rax, (%rdx)
 3350 003d 488B45F8 		movq	-8(%rbp), %rax
 3351 0041 488B00   		movq	(%rax), %rax
 3352 0044 4883E820 		subq	$32, %rax
 3353 0048 488B00   		movq	(%rax), %rax
 3354 004b 4889C2   		movq	%rax, %rdx
 3355 004e 488B45F8 		movq	-8(%rbp), %rax
 3356 0052 4801C2   		addq	%rax, %rdx
 3357 0055 488B45F0 		movq	-16(%rbp), %rax
 3358 0059 488B4010 		movq	16(%rax), %rax
 3359 005d 488902   		movq	%rax, (%rdx)
 3360              	.LBE35:
 3361 0060 90       		nop
 3362 0061 5D       		popq	%rbp
 3363              		.cfi_def_cfa 7, 8
 3364 0062 C3       		ret
 3365              		.cfi_endproc
 3366              	.LFE10966:
 3368              		.text
 3369              		.align 2
 3370              		.globl	_ZN2gr5lfast12costas2_implC2Efi
 3372              	_ZN2gr5lfast12costas2_implC2Efi:
 3373              	.LFB10969:
  64:costas2_impl.cc **** 
  65:costas2_impl.cc ****     /*
  66:costas2_impl.cc ****      * The private constructor
  67:costas2_impl.cc ****      */
  68:costas2_impl.cc ****     costas2_impl::costas2_impl(float loop_bw, int order)
 3374              		.loc 22 68 0
 3375              		.cfi_startproc
 3376 0170 55       		pushq	%rbp
 3377              		.cfi_def_cfa_offset 16
 3378              		.cfi_offset 6, -16
 3379 0171 4889E5   		movq	%rsp, %rbp
 3380              		.cfi_def_cfa_register 6
 3381 0174 4883EC70 		subq	$112, %rsp
 3382 0178 48897DA8 		movq	%rdi, -88(%rbp)
 3383 017c 488975A0 		movq	%rsi, -96(%rbp)
 3384 0180 F30F1145 		movss	%xmm0, -100(%rbp)
 3384      9C
 3385 0185 895598   		movl	%edx, -104(%rbp)
 3386              	.LBB36:
  69:costas2_impl.cc ****       : gr::sync_block("costas2",
  70:costas2_impl.cc ****               gr::io_signature::make(1, 1, sizeof(gr_complex)),
  71:costas2_impl.cc ****               gr::io_signature::make(1, 1, sizeof(gr_complex))),
  72:costas2_impl.cc **** 			  blocks::control_loop(loop_bw, 1.0, -1.0),
  73:costas2_impl.cc **** 			  d_order(order), d_error(0), d_noise(1.0), d_phase_detector(NULL)
 3387              		.loc 22 73 0
 3388 0188 488B45A0 		movq	-96(%rbp), %rax
 3389 018c 488D5008 		leaq	8(%rax), %rdx
 3390 0190 488B45A8 		movq	-88(%rbp), %rax
GAS LISTING /tmp/ccsIN87E.s 			page 174


 3391 0194 4889D6   		movq	%rdx, %rsi
 3392 0197 4889C7   		movq	%rax, %rdi
 3393 019a E8000000 		call	_ZN2gr5lfast7costas2C2Ev
 3393      00
 3394 019f 488B45A0 		movq	-96(%rbp), %rax
 3395 01a3 488B10   		movq	(%rax), %rdx
 3396 01a6 488B45A8 		movq	-88(%rbp), %rax
 3397 01aa 488910   		movq	%rdx, (%rax)
 3398 01ad 488B45A8 		movq	-88(%rbp), %rax
 3399 01b1 488B00   		movq	(%rax), %rax
 3400 01b4 4883E818 		subq	$24, %rax
 3401 01b8 488B00   		movq	(%rax), %rax
 3402 01bb 4889C2   		movq	%rax, %rdx
 3403 01be 488B45A8 		movq	-88(%rbp), %rax
 3404 01c2 4801C2   		addq	%rax, %rdx
 3405 01c5 488B45A0 		movq	-96(%rbp), %rax
 3406 01c9 488B4020 		movq	32(%rax), %rax
 3407 01cd 488902   		movq	%rax, (%rdx)
 3408 01d0 488B45A8 		movq	-88(%rbp), %rax
 3409 01d4 488B00   		movq	(%rax), %rax
 3410 01d7 4883E820 		subq	$32, %rax
 3411 01db 488B00   		movq	(%rax), %rax
 3412 01de 4889C2   		movq	%rax, %rdx
 3413 01e1 488B45A8 		movq	-88(%rbp), %rax
 3414 01e5 4801C2   		addq	%rax, %rdx
 3415 01e8 488B45A0 		movq	-96(%rbp), %rax
 3416 01ec 488B4028 		movq	40(%rax), %rax
 3417 01f0 488902   		movq	%rax, (%rdx)
 3418 01f3 488B45A8 		movq	-88(%rbp), %rax
 3419 01f7 8B5598   		movl	-104(%rbp), %edx
 3420 01fa 895008   		movl	%edx, 8(%rax)
 3421 01fd 488B45A8 		movq	-88(%rbp), %rax
 3422 0201 660FEFC0 		pxor	%xmm0, %xmm0
 3423 0205 F30F1140 		movss	%xmm0, 12(%rax)
 3423      0C
 3424 020a 488B45A8 		movq	-88(%rbp), %rax
 3425 020e F30F1005 		movss	.LC5(%rip), %xmm0
 3425      00000000 
 3426 0216 F30F1140 		movss	%xmm0, 16(%rax)
 3426      10
 3427 021b 488B45A8 		movq	-88(%rbp), %rax
 3428 021f 48C74018 		movq	$0, 24(%rax)
 3428      00000000 
 3429 0227 488B45A8 		movq	-88(%rbp), %rax
 3430 022b 48C74020 		movq	$0, 32(%rax)
 3430      00000000 
  74:costas2_impl.cc ****     {
  75:costas2_impl.cc ****     	// Only set up for 2nd order right now.
  76:costas2_impl.cc ****         d_phase_detector = &costas2_impl::phase_detector_2;
 3431              		.loc 22 76 0
 3432 0233 488B45A8 		movq	-88(%rbp), %rax
 3433 0237 488D1500 		leaq	_ZNK2gr5lfast12costas2_impl16phase_detector_2ESt7complexIfE(%rip), %rdx
 3433      000000
 3434 023e 48895018 		movq	%rdx, 24(%rax)
 3435 0242 488B45A8 		movq	-88(%rbp), %rax
 3436 0246 48C74020 		movq	$0, 32(%rax)
 3436      00000000 
GAS LISTING /tmp/ccsIN87E.s 			page 175


 3437              	.LBE36:
  77:costas2_impl.cc **** /*
  78:costas2_impl.cc ****         message_port_register_in(pmt::mp("noise"));
  79:costas2_impl.cc ****         set_msg_handler(
  80:costas2_impl.cc ****           pmt::mp("noise"),
  81:costas2_impl.cc ****           boost::bind(&costas2_impl::handle_set_noise,
  82:costas2_impl.cc ****                       this, _1));
  83:costas2_impl.cc **** */
  84:costas2_impl.cc ****     }
 3438              		.loc 22 84 0
 3439 024e 90       		nop
 3440 024f C9       		leave
 3441              		.cfi_def_cfa 7, 8
 3442 0250 C3       		ret
 3443              		.cfi_endproc
 3444              	.LFE10969:
 3446              		.section	.rodata
 3447              	.LC6:
 3448 0054 636F7374 		.string	"costas2"
 3448      61733200 
 3449              		.text
 3450 0251 90       		.align 2
 3451              		.globl	_ZN2gr5lfast12costas2_implC1Efi
 3453              	_ZN2gr5lfast12costas2_implC1Efi:
 3454              	.LFB10970:
  68:costas2_impl.cc ****       : gr::sync_block("costas2",
 3455              		.loc 22 68 0
 3456              		.cfi_startproc
 3457              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 3458              		.cfi_lsda 0x1b,.LLSDA10970
 3459 0252 55       		pushq	%rbp
 3460              		.cfi_def_cfa_offset 16
 3461              		.cfi_offset 6, -16
 3462 0253 4889E5   		movq	%rsp, %rbp
 3463              		.cfi_def_cfa_register 6
 3464 0256 53       		pushq	%rbx
 3465 0257 4883EC78 		subq	$120, %rsp
 3466              		.cfi_offset 3, -24
 3467 025b 48897D98 		movq	%rdi, -104(%rbp)
 3468 025f F30F1145 		movss	%xmm0, -108(%rbp)
 3468      94
 3469 0264 897590   		movl	%esi, -112(%rbp)
 3470              	.LBB37:
  71:costas2_impl.cc **** 			  blocks::control_loop(loop_bw, 1.0, -1.0),
 3471              		.loc 22 71 0
 3472 0267 488D45A0 		leaq	-96(%rbp), %rax
 3473 026b B9080000 		movl	$8, %ecx
 3473      00
 3474 0270 BA010000 		movl	$1, %edx
 3474      00
 3475 0275 BE010000 		movl	$1, %esi
 3475      00
 3476 027a 4889C7   		movq	%rax, %rdi
 3477              	.LEHB16:
 3478 027d E8000000 		call	_ZN2gr12io_signature4makeEiii@PLT
 3478      00
 3479              	.LEHE16:
GAS LISTING /tmp/ccsIN87E.s 			page 176


  70:costas2_impl.cc ****               gr::io_signature::make(1, 1, sizeof(gr_complex))),
 3480              		.loc 22 70 0
 3481 0282 488D45B0 		leaq	-80(%rbp), %rax
 3482 0286 B9080000 		movl	$8, %ecx
 3482      00
 3483 028b BA010000 		movl	$1, %edx
 3483      00
 3484 0290 BE010000 		movl	$1, %esi
 3484      00
 3485 0295 4889C7   		movq	%rax, %rdi
 3486              	.LEHB17:
 3487 0298 E8000000 		call	_ZN2gr12io_signature4makeEiii@PLT
 3487      00
 3488              	.LEHE17:
  73:costas2_impl.cc ****     {
 3489              		.loc 22 73 0
 3490 029d 488D45EF 		leaq	-17(%rbp), %rax
 3491 02a1 4889C7   		movq	%rax, %rdi
 3492 02a4 E8000000 		call	_ZNSaIcEC1Ev@PLT
 3492      00
 3493 02a9 488D55EF 		leaq	-17(%rbp), %rdx
 3494 02ad 488D45C0 		leaq	-64(%rbp), %rax
 3495 02b1 488D3500 		leaq	.LC6(%rip), %rsi
 3495      000000
 3496 02b8 4889C7   		movq	%rax, %rdi
 3497              	.LEHB18:
 3498 02bb E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EPKcRKS3_@PLT
 3498      00
 3499              	.LEHE18:
  73:costas2_impl.cc ****     {
 3500              		.loc 22 73 0 is_stmt 0 discriminator 3
 3501 02c0 488B4598 		movq	-104(%rbp), %rax
 3502 02c4 488D7828 		leaq	40(%rax), %rdi
 3503 02c8 488D4DA0 		leaq	-96(%rbp), %rcx
 3504 02cc 488D55B0 		leaq	-80(%rbp), %rdx
 3505 02d0 488D45C0 		leaq	-64(%rbp), %rax
 3506 02d4 4889C6   		movq	%rax, %rsi
 3507              	.LEHB19:
 3508 02d7 E8000000 		call	_ZN2gr10sync_blockC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN5boost10shared_pt
 3508      00
 3509              	.LEHE19:
  73:costas2_impl.cc ****     {
 3510              		.loc 22 73 0 discriminator 5
 3511 02dc 488D45C0 		leaq	-64(%rbp), %rax
 3512 02e0 4889C7   		movq	%rax, %rdi
 3513 02e3 E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@PLT
 3513      00
 3514 02e8 488D45EF 		leaq	-17(%rbp), %rax
 3515 02ec 4889C7   		movq	%rax, %rdi
 3516 02ef E8000000 		call	_ZNSaIcED1Ev@PLT
 3516      00
  70:costas2_impl.cc ****               gr::io_signature::make(1, 1, sizeof(gr_complex))),
 3517              		.loc 22 70 0 is_stmt 1 discriminator 5
 3518 02f4 488D45B0 		leaq	-80(%rbp), %rax
 3519 02f8 4889C7   		movq	%rax, %rdi
 3520 02fb E8000000 		call	_ZN5boost10shared_ptrIN2gr12io_signatureEED1Ev
 3520      00
GAS LISTING /tmp/ccsIN87E.s 			page 177


  71:costas2_impl.cc **** 			  blocks::control_loop(loop_bw, 1.0, -1.0),
 3521              		.loc 22 71 0 discriminator 5
 3522 0300 488D45A0 		leaq	-96(%rbp), %rax
 3523 0304 4889C7   		movq	%rax, %rdi
 3524 0307 E8000000 		call	_ZN5boost10shared_ptrIN2gr12io_signatureEED1Ev
 3524      00
  73:costas2_impl.cc ****     {
 3525              		.loc 22 73 0 discriminator 5
 3526 030c 488B4598 		movq	-104(%rbp), %rax
 3527 0310 488D9078 		leaq	632(%rax), %rdx
 3527      020000
 3528 0317 8B4594   		movl	-108(%rbp), %eax
 3529 031a F30F1015 		movss	.LC7(%rip), %xmm2
 3529      00000000 
 3530 0322 F30F100D 		movss	.LC5(%rip), %xmm1
 3530      00000000 
 3531 032a 89458C   		movl	%eax, -116(%rbp)
 3532 032d F30F1045 		movss	-116(%rbp), %xmm0
 3532      8C
 3533 0332 4889D7   		movq	%rdx, %rdi
 3534              	.LEHB20:
 3535 0335 E8000000 		call	_ZN2gr6blocks12control_loopC2Efff@PLT
 3535      00
 3536              	.LEHE20:
  73:costas2_impl.cc ****     {
 3537              		.loc 22 73 0 is_stmt 0
 3538 033a 488D1500 		leaq	8+_ZTTN2gr5lfast12costas2_implE(%rip), %rdx
 3538      000000
 3539 0341 488B4598 		movq	-104(%rbp), %rax
 3540 0345 4889D6   		movq	%rdx, %rsi
 3541 0348 4889C7   		movq	%rax, %rdi
 3542 034b E8000000 		call	_ZN2gr5lfast7costas2C2Ev
 3542      00
 3543 0350 488D1500 		leaq	32+_ZTVN2gr5lfast12costas2_implE(%rip), %rdx
 3543      000000
 3544 0357 488B4598 		movq	-104(%rbp), %rax
 3545 035b 488910   		movq	%rdx, (%rax)
 3546 035e 488B4598 		movq	-104(%rbp), %rax
 3547 0362 488D5028 		leaq	40(%rax), %rdx
 3548 0366 488D0500 		leaq	248+_ZTVN2gr5lfast12costas2_implE(%rip), %rax
 3548      000000
 3549 036d 488902   		movq	%rax, (%rdx)
 3550 0370 488B4598 		movq	-104(%rbp), %rax
 3551 0374 488D9078 		leaq	632(%rax), %rdx
 3551      020000
 3552 037b 488D0500 		leaq	448+_ZTVN2gr5lfast12costas2_implE(%rip), %rax
 3552      000000
 3553 0382 488902   		movq	%rax, (%rdx)
 3554 0385 488B4598 		movq	-104(%rbp), %rax
 3555 0389 8B5590   		movl	-112(%rbp), %edx
 3556 038c 895008   		movl	%edx, 8(%rax)
 3557 038f 488B4598 		movq	-104(%rbp), %rax
 3558 0393 660FEFC0 		pxor	%xmm0, %xmm0
 3559 0397 F30F1140 		movss	%xmm0, 12(%rax)
 3559      0C
 3560 039c 488B4598 		movq	-104(%rbp), %rax
 3561 03a0 F30F1005 		movss	.LC5(%rip), %xmm0
GAS LISTING /tmp/ccsIN87E.s 			page 178


 3561      00000000 
 3562 03a8 F30F1140 		movss	%xmm0, 16(%rax)
 3562      10
 3563 03ad 488B4598 		movq	-104(%rbp), %rax
 3564 03b1 48C74018 		movq	$0, 24(%rax)
 3564      00000000 
 3565 03b9 488B4598 		movq	-104(%rbp), %rax
 3566 03bd 48C74020 		movq	$0, 32(%rax)
 3566      00000000 
  76:costas2_impl.cc **** /*
 3567              		.loc 22 76 0 is_stmt 1
 3568 03c5 488B4598 		movq	-104(%rbp), %rax
 3569 03c9 488D1500 		leaq	_ZNK2gr5lfast12costas2_impl16phase_detector_2ESt7complexIfE(%rip), %rdx
 3569      000000
 3570 03d0 48895018 		movq	%rdx, 24(%rax)
 3571 03d4 488B4598 		movq	-104(%rbp), %rax
 3572 03d8 48C74020 		movq	$0, 32(%rax)
 3572      00000000 
 3573              	.LBE37:
 3574              		.loc 22 84 0
 3575 03e0 EB66     		jmp	.L149
 3576              	.L147:
 3577 03e2 4889C3   		movq	%rax, %rbx
 3578              	.LBB38:
  73:costas2_impl.cc ****     {
 3579              		.loc 22 73 0
 3580 03e5 488D45C0 		leaq	-64(%rbp), %rax
 3581 03e9 4889C7   		movq	%rax, %rdi
 3582 03ec E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@PLT
 3582      00
 3583 03f1 EB03     		jmp	.L142
 3584              	.L146:
 3585 03f3 4889C3   		movq	%rax, %rbx
 3586              	.L142:
  73:costas2_impl.cc ****     {
 3587              		.loc 22 73 0 is_stmt 0 discriminator 2
 3588 03f6 488D45EF 		leaq	-17(%rbp), %rax
 3589 03fa 4889C7   		movq	%rax, %rdi
 3590 03fd E8000000 		call	_ZNSaIcED1Ev@PLT
 3590      00
  70:costas2_impl.cc ****               gr::io_signature::make(1, 1, sizeof(gr_complex))),
 3591              		.loc 22 70 0 is_stmt 1 discriminator 2
 3592 0402 488D45B0 		leaq	-80(%rbp), %rax
 3593 0406 4889C7   		movq	%rax, %rdi
 3594 0409 E8000000 		call	_ZN5boost10shared_ptrIN2gr12io_signatureEED1Ev
 3594      00
 3595 040e EB03     		jmp	.L143
 3596              	.L145:
 3597 0410 4889C3   		movq	%rax, %rbx
 3598              	.L143:
  71:costas2_impl.cc **** 			  blocks::control_loop(loop_bw, 1.0, -1.0),
 3599              		.loc 22 71 0
 3600 0413 488D45A0 		leaq	-96(%rbp), %rax
 3601 0417 4889C7   		movq	%rax, %rdi
 3602 041a E8000000 		call	_ZN5boost10shared_ptrIN2gr12io_signatureEED1Ev
 3602      00
 3603 041f 4889D8   		movq	%rbx, %rax
GAS LISTING /tmp/ccsIN87E.s 			page 179


 3604 0422 4889C7   		movq	%rax, %rdi
 3605              	.LEHB21:
 3606 0425 E8000000 		call	_Unwind_Resume@PLT
 3606      00
 3607              	.L148:
 3608 042a 4889C3   		movq	%rax, %rbx
  73:costas2_impl.cc ****     {
 3609              		.loc 22 73 0
 3610 042d 488B4598 		movq	-104(%rbp), %rax
 3611 0431 4883C028 		addq	$40, %rax
 3612 0435 4889C7   		movq	%rax, %rdi
 3613 0438 E8000000 		call	_ZN2gr10sync_blockD2Ev
 3613      00
 3614 043d 4889D8   		movq	%rbx, %rax
 3615 0440 4889C7   		movq	%rax, %rdi
 3616 0443 E8000000 		call	_Unwind_Resume@PLT
 3616      00
 3617              	.LEHE21:
 3618              	.L149:
 3619              	.LBE38:
 3620              		.loc 22 84 0
 3621 0448 4883C478 		addq	$120, %rsp
 3622 044c 5B       		popq	%rbx
 3623 044d 5D       		popq	%rbp
 3624              		.cfi_def_cfa 7, 8
 3625 044e C3       		ret
 3626              		.cfi_endproc
 3627              	.LFE10970:
 3628              		.section	.gcc_except_table
 3629              	.LLSDA10970:
 3630 0010 FF       		.byte	0xff
 3631 0011 FF       		.byte	0xff
 3632 0012 01       		.byte	0x1
 3633 0013 1F       		.uleb128 .LLSDACSE10970-.LLSDACSB10970
 3634              	.LLSDACSB10970:
 3635 0014 2B       		.uleb128 .LEHB16-.LFB10970
 3636 0015 05       		.uleb128 .LEHE16-.LEHB16
 3637 0016 00       		.uleb128 0
 3638 0017 00       		.uleb128 0
 3639 0018 46       		.uleb128 .LEHB17-.LFB10970
 3640 0019 05       		.uleb128 .LEHE17-.LEHB17
 3641 001a BE03     		.uleb128 .L145-.LFB10970
 3642 001c 00       		.uleb128 0
 3643 001d 69       		.uleb128 .LEHB18-.LFB10970
 3644 001e 05       		.uleb128 .LEHE18-.LEHB18
 3645 001f A103     		.uleb128 .L146-.LFB10970
 3646 0021 00       		.uleb128 0
 3647 0022 8501     		.uleb128 .LEHB19-.LFB10970
 3648 0024 05       		.uleb128 .LEHE19-.LEHB19
 3649 0025 9003     		.uleb128 .L147-.LFB10970
 3650 0027 00       		.uleb128 0
 3651 0028 E301     		.uleb128 .LEHB20-.LFB10970
 3652 002a 05       		.uleb128 .LEHE20-.LEHB20
 3653 002b D803     		.uleb128 .L148-.LFB10970
 3654 002d 00       		.uleb128 0
 3655 002e D303     		.uleb128 .LEHB21-.LFB10970
 3656 0030 23       		.uleb128 .LEHE21-.LEHB21
GAS LISTING /tmp/ccsIN87E.s 			page 180


 3657 0031 00       		.uleb128 0
 3658 0032 00       		.uleb128 0
 3659              	.LLSDACSE10970:
 3660              		.text
 3662 044f 90       		.align 2
 3663              		.globl	_ZN2gr5lfast12costas2_implD2Ev
 3665              	_ZN2gr5lfast12costas2_implD2Ev:
 3666              	.LFB10972:
  85:costas2_impl.cc **** 
  86:costas2_impl.cc ****     /*
  87:costas2_impl.cc ****      * Our virtual destructor.
  88:costas2_impl.cc ****      */
  89:costas2_impl.cc ****     costas2_impl::~costas2_impl()
 3667              		.loc 22 89 0
 3668              		.cfi_startproc
 3669 0450 55       		pushq	%rbp
 3670              		.cfi_def_cfa_offset 16
 3671              		.cfi_offset 6, -16
 3672 0451 4889E5   		movq	%rsp, %rbp
 3673              		.cfi_def_cfa_register 6
 3674 0454 4883EC10 		subq	$16, %rsp
 3675 0458 48897DF8 		movq	%rdi, -8(%rbp)
 3676 045c 488975F0 		movq	%rsi, -16(%rbp)
 3677              	.LBB39:
 3678              		.loc 22 89 0
 3679 0460 488B45F0 		movq	-16(%rbp), %rax
 3680 0464 488B10   		movq	(%rax), %rdx
 3681 0467 488B45F8 		movq	-8(%rbp), %rax
 3682 046b 488910   		movq	%rdx, (%rax)
 3683 046e 488B45F8 		movq	-8(%rbp), %rax
 3684 0472 488B00   		movq	(%rax), %rax
 3685 0475 4883E818 		subq	$24, %rax
 3686 0479 488B00   		movq	(%rax), %rax
 3687 047c 4889C2   		movq	%rax, %rdx
 3688 047f 488B45F8 		movq	-8(%rbp), %rax
 3689 0483 4801C2   		addq	%rax, %rdx
 3690 0486 488B45F0 		movq	-16(%rbp), %rax
 3691 048a 488B4020 		movq	32(%rax), %rax
 3692 048e 488902   		movq	%rax, (%rdx)
 3693 0491 488B45F8 		movq	-8(%rbp), %rax
 3694 0495 488B00   		movq	(%rax), %rax
 3695 0498 4883E820 		subq	$32, %rax
 3696 049c 488B00   		movq	(%rax), %rax
 3697 049f 4889C2   		movq	%rax, %rdx
 3698 04a2 488B45F8 		movq	-8(%rbp), %rax
 3699 04a6 4801C2   		addq	%rax, %rdx
 3700 04a9 488B45F0 		movq	-16(%rbp), %rax
 3701 04ad 488B4028 		movq	40(%rax), %rax
 3702 04b1 488902   		movq	%rax, (%rdx)
 3703 04b4 488B45F0 		movq	-16(%rbp), %rax
 3704 04b8 488D5008 		leaq	8(%rax), %rdx
 3705 04bc 488B45F8 		movq	-8(%rbp), %rax
 3706 04c0 4889D6   		movq	%rdx, %rsi
 3707 04c3 4889C7   		movq	%rax, %rdi
 3708 04c6 E8000000 		call	_ZN2gr5lfast7costas2D2Ev
 3708      00
 3709              	.LBE39:
GAS LISTING /tmp/ccsIN87E.s 			page 181


  90:costas2_impl.cc ****     {
  91:costas2_impl.cc ****     }
 3710              		.loc 22 91 0
 3711 04cb 90       		nop
 3712 04cc C9       		leave
 3713              		.cfi_def_cfa 7, 8
 3714 04cd C3       		ret
 3715              		.cfi_endproc
 3716              	.LFE10972:
 3718              		.align 2
 3719              		.globl	_ZN2gr5lfast12costas2_implD1Ev
 3721              	_ZN2gr5lfast12costas2_implD1Ev:
 3722              	.LFB10973:
  89:costas2_impl.cc ****     {
 3723              		.loc 22 89 0
 3724              		.cfi_startproc
 3725 04ce 55       		pushq	%rbp
 3726              		.cfi_def_cfa_offset 16
 3727              		.cfi_offset 6, -16
 3728 04cf 4889E5   		movq	%rsp, %rbp
 3729              		.cfi_def_cfa_register 6
 3730 04d2 4883EC10 		subq	$16, %rsp
 3731 04d6 48897DF8 		movq	%rdi, -8(%rbp)
 3732              	.LBB40:
  89:costas2_impl.cc ****     {
 3733              		.loc 22 89 0
 3734 04da 488D1500 		leaq	32+_ZTVN2gr5lfast12costas2_implE(%rip), %rdx
 3734      000000
 3735 04e1 488B45F8 		movq	-8(%rbp), %rax
 3736 04e5 488910   		movq	%rdx, (%rax)
 3737 04e8 488B45F8 		movq	-8(%rbp), %rax
 3738 04ec 488D5028 		leaq	40(%rax), %rdx
 3739 04f0 488D0500 		leaq	248+_ZTVN2gr5lfast12costas2_implE(%rip), %rax
 3739      000000
 3740 04f7 488902   		movq	%rax, (%rdx)
 3741 04fa 488B45F8 		movq	-8(%rbp), %rax
 3742 04fe 488D9078 		leaq	632(%rax), %rdx
 3742      020000
 3743 0505 488D0500 		leaq	448+_ZTVN2gr5lfast12costas2_implE(%rip), %rax
 3743      000000
 3744 050c 488902   		movq	%rax, (%rdx)
 3745 050f 488D1500 		leaq	8+_ZTTN2gr5lfast12costas2_implE(%rip), %rdx
 3745      000000
 3746 0516 488B45F8 		movq	-8(%rbp), %rax
 3747 051a 4889D6   		movq	%rdx, %rsi
 3748 051d 4889C7   		movq	%rax, %rdi
 3749 0520 E8000000 		call	_ZN2gr5lfast7costas2D2Ev
 3749      00
 3750 0525 488B45F8 		movq	-8(%rbp), %rax
 3751 0529 48057802 		addq	$632, %rax
 3751      0000
 3752 052f 4889C7   		movq	%rax, %rdi
 3753 0532 E8000000 		call	_ZN2gr6blocks12control_loopD2Ev@PLT
 3753      00
 3754 0537 488B45F8 		movq	-8(%rbp), %rax
 3755 053b 4883C028 		addq	$40, %rax
 3756 053f 4889C7   		movq	%rax, %rdi
GAS LISTING /tmp/ccsIN87E.s 			page 182


 3757 0542 E8000000 		call	_ZN2gr10sync_blockD2Ev
 3757      00
 3758              	.LBE40:
 3759              		.loc 22 91 0
 3760 0547 90       		nop
 3761 0548 C9       		leave
 3762              		.cfi_def_cfa 7, 8
 3763 0549 C3       		ret
 3764              		.cfi_endproc
 3765              	.LFE10973:
 3767              		.set	.LTHUNK8,_ZN2gr5lfast12costas2_implD1Ev
 3768              		.globl	_ZTv0_n24_N2gr5lfast12costas2_implD1Ev
 3770              	_ZTv0_n24_N2gr5lfast12costas2_implD1Ev:
 3771              	.LFB15693:
  41:costas2_impl.h **** 
  42:costas2_impl.h ****        float (costas2_impl::*d_phase_detector)(gr_complex sample) const;
  43:costas2_impl.h **** 
  44:costas2_impl.h ****      public:
  45:costas2_impl.h ****       costas2_impl(float loop_bw, int order);
  46:costas2_impl.h ****       ~costas2_impl();
 3772              		.loc 19 46 0
 3773              		.cfi_startproc
 3774 054a 4C8B17   		movq	(%rdi), %r10
 3775 054d 49037AE8 		addq	-24(%r10), %rdi
 3776 0551 E978FFFF 		jmp	.LTHUNK8
 3776      FF
 3777              		.cfi_endproc
 3778              	.LFE15693:
 3780              		.align 2
 3781              		.globl	_ZN2gr5lfast12costas2_implD0Ev
 3783              	_ZN2gr5lfast12costas2_implD0Ev:
 3784              	.LFB10974:
  89:costas2_impl.cc ****     {
 3785              		.loc 22 89 0
 3786              		.cfi_startproc
 3787 0556 55       		pushq	%rbp
 3788              		.cfi_def_cfa_offset 16
 3789              		.cfi_offset 6, -16
 3790 0557 4889E5   		movq	%rsp, %rbp
 3791              		.cfi_def_cfa_register 6
 3792 055a 4883EC10 		subq	$16, %rsp
 3793 055e 48897DF8 		movq	%rdi, -8(%rbp)
 3794              		.loc 22 91 0
 3795 0562 488B45F8 		movq	-8(%rbp), %rax
 3796 0566 4889C7   		movq	%rax, %rdi
 3797 0569 E8000000 		call	_ZN2gr5lfast12costas2_implD1Ev
 3797      00
 3798 056e 488B45F8 		movq	-8(%rbp), %rax
 3799 0572 BEA00200 		movl	$672, %esi
 3799      00
 3800 0577 4889C7   		movq	%rax, %rdi
 3801 057a E8000000 		call	_ZdlPvm@PLT
 3801      00
 3802 057f C9       		leave
 3803              		.cfi_def_cfa 7, 8
 3804 0580 C3       		ret
 3805              		.cfi_endproc
GAS LISTING /tmp/ccsIN87E.s 			page 183


 3806              	.LFE10974:
 3808              		.set	.LTHUNK9,_ZN2gr5lfast12costas2_implD0Ev
 3809              		.globl	_ZTv0_n24_N2gr5lfast12costas2_implD0Ev
 3811              	_ZTv0_n24_N2gr5lfast12costas2_implD0Ev:
 3812              	.LFB15694:
 3813              		.loc 19 46 0
 3814              		.cfi_startproc
 3815 0581 4C8B17   		movq	(%rdi), %r10
 3816 0584 49037AE8 		addq	-24(%r10), %rdi
 3817 0588 EBCC     		jmp	.LTHUNK9
 3818              		.cfi_endproc
 3819              	.LFE15694:
 3821              		.align 2
 3822              		.globl	_ZNK2gr5lfast12costas2_impl5errorEv
 3824              	_ZNK2gr5lfast12costas2_impl5errorEv:
 3825              	.LFB10975:
  92:costas2_impl.cc **** 
  93:costas2_impl.cc ****     float
  94:costas2_impl.cc ****     costas2_impl::error() const
  95:costas2_impl.cc ****     {
 3826              		.loc 22 95 0
 3827              		.cfi_startproc
 3828 058a 55       		pushq	%rbp
 3829              		.cfi_def_cfa_offset 16
 3830              		.cfi_offset 6, -16
 3831 058b 4889E5   		movq	%rsp, %rbp
 3832              		.cfi_def_cfa_register 6
 3833 058e 48897DF8 		movq	%rdi, -8(%rbp)
  96:costas2_impl.cc ****       return d_error;
 3834              		.loc 22 96 0
 3835 0592 488B45F8 		movq	-8(%rbp), %rax
 3836 0596 F30F1040 		movss	12(%rax), %xmm0
 3836      0C
  97:costas2_impl.cc ****     }
 3837              		.loc 22 97 0
 3838 059b 5D       		popq	%rbp
 3839              		.cfi_def_cfa 7, 8
 3840 059c C3       		ret
 3841              		.cfi_endproc
 3842              	.LFE10975:
 3844 059d 90       		.align 2
 3845              		.globl	_ZN2gr5lfast12costas2_impl16handle_set_noiseEN5boost13intrusive_ptrIN3pmt8pmt_baseEEE
 3847              	_ZN2gr5lfast12costas2_impl16handle_set_noiseEN5boost13intrusive_ptrIN3pmt8pmt_baseEEE:
 3848              	.LFB10976:
  98:costas2_impl.cc **** 
  99:costas2_impl.cc ****     void
 100:costas2_impl.cc ****     costas2_impl::handle_set_noise(pmt::pmt_t msg)
 101:costas2_impl.cc ****     {
 3849              		.loc 22 101 0
 3850              		.cfi_startproc
 3851              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 3852              		.cfi_lsda 0x1b,.LLSDA10976
 3853 059e 55       		pushq	%rbp
 3854              		.cfi_def_cfa_offset 16
 3855              		.cfi_offset 6, -16
 3856 059f 4889E5   		movq	%rsp, %rbp
 3857              		.cfi_def_cfa_register 6
GAS LISTING /tmp/ccsIN87E.s 			page 184


 3858 05a2 53       		pushq	%rbx
 3859 05a3 4883EC28 		subq	$40, %rsp
 3860              		.cfi_offset 3, -24
 3861 05a7 48897DD8 		movq	%rdi, -40(%rbp)
 3862 05ab 488975D0 		movq	%rsi, -48(%rbp)
 102:costas2_impl.cc ****       if(pmt::is_real(msg)) {
 3863              		.loc 22 102 0
 3864 05af 488B55D0 		movq	-48(%rbp), %rdx
 3865 05b3 488D45E0 		leaq	-32(%rbp), %rax
 3866 05b7 4889D6   		movq	%rdx, %rsi
 3867 05ba 4889C7   		movq	%rax, %rdi
 3868              	.LEHB22:
 3869 05bd E8000000 		call	_ZN5boost13intrusive_ptrIN3pmt8pmt_baseEEC1ERKS3_
 3869      00
 3870              	.LEHE22:
 3871 05c2 488D45E0 		leaq	-32(%rbp), %rax
 3872 05c6 4889C7   		movq	%rax, %rdi
 3873              	.LEHB23:
 3874 05c9 E8000000 		call	_ZN3pmt7is_realEN5boost13intrusive_ptrINS_8pmt_baseEEE@PLT
 3874      00
 3875              	.LEHE23:
 3876 05ce 89C3     		movl	%eax, %ebx
 3877 05d0 488D45E0 		leaq	-32(%rbp), %rax
 3878 05d4 4889C7   		movq	%rax, %rdi
 3879 05d7 E8000000 		call	_ZN5boost13intrusive_ptrIN3pmt8pmt_baseEED1Ev
 3879      00
 3880 05dc 84DB     		testb	%bl, %bl
 3881 05de 0F849E00 		je	.L161
 3881      0000
 103:costas2_impl.cc ****         d_noise = pmt::to_double(msg);
 3882              		.loc 22 103 0
 3883 05e4 488B55D0 		movq	-48(%rbp), %rdx
 3884 05e8 488D45E8 		leaq	-24(%rbp), %rax
 3885 05ec 4889D6   		movq	%rdx, %rsi
 3886 05ef 4889C7   		movq	%rax, %rdi
 3887              	.LEHB24:
 3888 05f2 E8000000 		call	_ZN5boost13intrusive_ptrIN3pmt8pmt_baseEEC1ERKS3_
 3888      00
 3889              	.LEHE24:
 3890 05f7 488D45E8 		leaq	-24(%rbp), %rax
 3891 05fb 4889C7   		movq	%rax, %rdi
 3892              	.LEHB25:
 3893 05fe E8000000 		call	_ZN3pmt9to_doubleEN5boost13intrusive_ptrINS_8pmt_baseEEE@PLT
 3893      00
 3894              	.LEHE25:
 3895 0603 F20F5AC0 		cvtsd2ss	%xmm0, %xmm0
 3896 0607 488B45D8 		movq	-40(%rbp), %rax
 3897 060b F30F1140 		movss	%xmm0, 16(%rax)
 3897      10
 3898 0610 488D45E8 		leaq	-24(%rbp), %rax
 3899 0614 4889C7   		movq	%rax, %rdi
 3900 0617 E8000000 		call	_ZN5boost13intrusive_ptrIN3pmt8pmt_baseEED1Ev
 3900      00
 104:costas2_impl.cc ****         d_noise = powf(10.0f, d_noise/10.0f);
 3901              		.loc 22 104 0
 3902 061c 488B45D8 		movq	-40(%rbp), %rax
 3903 0620 F30F1040 		movss	16(%rax), %xmm0
GAS LISTING /tmp/ccsIN87E.s 			page 185


 3903      10
 3904 0625 F30F100D 		movss	.LC8(%rip), %xmm1
 3904      00000000 
 3905 062d F30F5EC1 		divss	%xmm1, %xmm0
 3906 0631 0F28C8   		movaps	%xmm0, %xmm1
 3907 0634 F30F1005 		movss	.LC8(%rip), %xmm0
 3907      00000000 
 3908 063c E8000000 		call	powf@PLT
 3908      00
 3909 0641 660F7EC2 		movd	%xmm0, %edx
 3910 0645 488B45D8 		movq	-40(%rbp), %rax
 3911 0649 895010   		movl	%edx, 16(%rax)
 105:costas2_impl.cc ****       }
 106:costas2_impl.cc ****     }
 3912              		.loc 22 106 0
 3913 064c EB34     		jmp	.L161
 3914              	.L159:
 3915 064e 4889C3   		movq	%rax, %rbx
 102:costas2_impl.cc ****         d_noise = pmt::to_double(msg);
 3916              		.loc 22 102 0
 3917 0651 488D45E0 		leaq	-32(%rbp), %rax
 3918 0655 4889C7   		movq	%rax, %rdi
 3919 0658 E8000000 		call	_ZN5boost13intrusive_ptrIN3pmt8pmt_baseEED1Ev
 3919      00
 3920 065d 4889D8   		movq	%rbx, %rax
 3921 0660 4889C7   		movq	%rax, %rdi
 3922              	.LEHB26:
 3923 0663 E8000000 		call	_Unwind_Resume@PLT
 3923      00
 3924              	.L160:
 3925 0668 4889C3   		movq	%rax, %rbx
 103:costas2_impl.cc ****         d_noise = powf(10.0f, d_noise/10.0f);
 3926              		.loc 22 103 0
 3927 066b 488D45E8 		leaq	-24(%rbp), %rax
 3928 066f 4889C7   		movq	%rax, %rdi
 3929 0672 E8000000 		call	_ZN5boost13intrusive_ptrIN3pmt8pmt_baseEED1Ev
 3929      00
 3930 0677 4889D8   		movq	%rbx, %rax
 3931 067a 4889C7   		movq	%rax, %rdi
 3932 067d E8000000 		call	_Unwind_Resume@PLT
 3932      00
 3933              	.LEHE26:
 3934              	.L161:
 3935              		.loc 22 106 0
 3936 0682 90       		nop
 3937 0683 4883C428 		addq	$40, %rsp
 3938 0687 5B       		popq	%rbx
 3939 0688 5D       		popq	%rbp
 3940              		.cfi_def_cfa 7, 8
 3941 0689 C3       		ret
 3942              		.cfi_endproc
 3943              	.LFE10976:
 3944              		.section	.gcc_except_table
 3945              	.LLSDA10976:
 3946 0033 FF       		.byte	0xff
 3947 0034 FF       		.byte	0xff
 3948 0035 01       		.byte	0x1
GAS LISTING /tmp/ccsIN87E.s 			page 186


 3949 0036 17       		.uleb128 .LLSDACSE10976-.LLSDACSB10976
 3950              	.LLSDACSB10976:
 3951 0037 1F       		.uleb128 .LEHB22-.LFB10976
 3952 0038 05       		.uleb128 .LEHE22-.LEHB22
 3953 0039 00       		.uleb128 0
 3954 003a 00       		.uleb128 0
 3955 003b 2B       		.uleb128 .LEHB23-.LFB10976
 3956 003c 05       		.uleb128 .LEHE23-.LEHB23
 3957 003d B001     		.uleb128 .L159-.LFB10976
 3958 003f 00       		.uleb128 0
 3959 0040 54       		.uleb128 .LEHB24-.LFB10976
 3960 0041 05       		.uleb128 .LEHE24-.LEHB24
 3961 0042 00       		.uleb128 0
 3962 0043 00       		.uleb128 0
 3963 0044 60       		.uleb128 .LEHB25-.LFB10976
 3964 0045 05       		.uleb128 .LEHE25-.LEHB25
 3965 0046 CA01     		.uleb128 .L160-.LFB10976
 3966 0048 00       		.uleb128 0
 3967 0049 C501     		.uleb128 .LEHB26-.LFB10976
 3968 004b 1F       		.uleb128 .LEHE26-.LEHB26
 3969 004c 00       		.uleb128 0
 3970 004d 00       		.uleb128 0
 3971              	.LLSDACSE10976:
 3972              		.text
 3974              		.section	.rodata
 3975              		.align 4
 3976              	.LC9:
 3977 005c 00000000 		.long	0
 3978 0060 00000000 		.long	0
 3979              		.text
 3980              		.align 2
 3981              		.globl	_ZN2gr5lfast12costas2_impl13work_originalEiRSt6vectorIPKvSaIS4_EERS2_IPvSaIS8_EE
 3983              	_ZN2gr5lfast12costas2_impl13work_originalEiRSt6vectorIPKvSaIS4_EERS2_IPvSaIS8_EE:
 3984              	.LFB10977:
 107:costas2_impl.cc **** 
 108:costas2_impl.cc ****     int
 109:costas2_impl.cc ****     costas2_impl::work_original(int noutput_items,
 110:costas2_impl.cc **** 			      gr_vector_const_void_star &input_items,
 111:costas2_impl.cc **** 			      gr_vector_void_star &output_items)
 112:costas2_impl.cc ****     {
 3985              		.loc 22 112 0
 3986              		.cfi_startproc
 3987              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 3988              		.cfi_lsda 0x1b,.LLSDA10977
 3989 068a 55       		pushq	%rbp
 3990              		.cfi_def_cfa_offset 16
 3991              		.cfi_offset 6, -16
 3992 068b 4889E5   		movq	%rsp, %rbp
 3993              		.cfi_def_cfa_register 6
 3994 068e 53       		pushq	%rbx
 3995 068f 4881ECB8 		subq	$184, %rsp
 3995      000000
 3996              		.cfi_offset 3, -24
 3997 0696 4889BD68 		movq	%rdi, -152(%rbp)
 3997      FFFFFF
 3998 069d 89B564FF 		movl	%esi, -156(%rbp)
 3998      FFFF
GAS LISTING /tmp/ccsIN87E.s 			page 187


 3999 06a3 48899558 		movq	%rdx, -168(%rbp)
 3999      FFFFFF
 4000 06aa 48898D50 		movq	%rcx, -176(%rbp)
 4000      FFFFFF
 113:costas2_impl.cc ****       const gr_complex *iptr = (gr_complex *) input_items[0];
 4001              		.loc 22 113 0
 4002 06b1 488B8558 		movq	-168(%rbp), %rax
 4002      FFFFFF
 4003 06b8 BE000000 		movl	$0, %esi
 4003      00
 4004 06bd 4889C7   		movq	%rax, %rdi
 4005 06c0 E8000000 		call	_ZNSt6vectorIPKvSaIS1_EEixEm
 4005      00
 4006 06c5 488B00   		movq	(%rax), %rax
 4007 06c8 488945E0 		movq	%rax, -32(%rbp)
 114:costas2_impl.cc ****       gr_complex *optr = (gr_complex *) output_items[0];
 4008              		.loc 22 114 0
 4009 06cc 488B8550 		movq	-176(%rbp), %rax
 4009      FFFFFF
 4010 06d3 BE000000 		movl	$0, %esi
 4010      00
 4011 06d8 4889C7   		movq	%rax, %rdi
 4012 06db E8000000 		call	_ZNSt6vectorIPvSaIS0_EEixEm
 4012      00
 4013 06e0 488B00   		movq	(%rax), %rax
 4014 06e3 488945D8 		movq	%rax, -40(%rbp)
 115:costas2_impl.cc ****       float *foptr = (float *) output_items[1];
 4015              		.loc 22 115 0
 4016 06e7 488B8550 		movq	-176(%rbp), %rax
 4016      FFFFFF
 4017 06ee BE010000 		movl	$1, %esi
 4017      00
 4018 06f3 4889C7   		movq	%rax, %rdi
 4019 06f6 E8000000 		call	_ZNSt6vectorIPvSaIS0_EEixEm
 4019      00
 4020 06fb 488B00   		movq	(%rax), %rax
 4021 06fe 488945D0 		movq	%rax, -48(%rbp)
 116:costas2_impl.cc **** 
 117:costas2_impl.cc ****       bool write_foptr = output_items.size() >= 2;
 4022              		.loc 22 117 0
 4023 0702 488B8550 		movq	-176(%rbp), %rax
 4023      FFFFFF
 4024 0709 4889C7   		movq	%rax, %rdi
 4025 070c E8000000 		call	_ZNKSt6vectorIPvSaIS0_EE4sizeEv
 4025      00
 4026 0711 4883F801 		cmpq	$1, %rax
 4027 0715 0F97C0   		seta	%al
 4028 0718 8845CF   		movb	%al, -49(%rbp)
 118:costas2_impl.cc **** 
 119:costas2_impl.cc ****       gr_complex nco_out;
 4029              		.loc 22 119 0
 4030 071b F30F1005 		movss	.LC9(%rip), %xmm0
 4030      00000000 
 4031 0723 F30F1145 		movss	%xmm0, -112(%rbp)
 4031      90
 4032 0728 F30F1005 		movss	4+.LC9(%rip), %xmm0
 4032      00000000 
GAS LISTING /tmp/ccsIN87E.s 			page 188


 4033 0730 F30F1145 		movss	%xmm0, -108(%rbp)
 4033      94
 120:costas2_impl.cc ****       float i_r,i_i,n_r,n_i;
 121:costas2_impl.cc **** 
 122:costas2_impl.cc ****       std::vector<tag_t> tags;
 4034              		.loc 22 122 0
 4035 0735 488D8570 		leaq	-144(%rbp), %rax
 4035      FFFFFF
 4036 073c 4889C7   		movq	%rax, %rdi
 4037 073f E8000000 		call	_ZNSt6vectorIN2gr5tag_tESaIS1_EEC1Ev
 4037      00
 4038              	.LBB41:
 123:costas2_impl.cc ****       /*
 124:costas2_impl.cc ****       get_tags_in_range(tags, 0, nitems_read(0),
 125:costas2_impl.cc ****                         nitems_read(0)+noutput_items,
 126:costas2_impl.cc ****                         pmt::intern("phase_est"));
 127:costas2_impl.cc **** 		*/
 128:costas2_impl.cc ****       if(write_foptr) {
 4039              		.loc 22 128 0
 4040 0744 807DCF00 		cmpb	$0, -49(%rbp)
 4041 0748 0F84F102 		je	.L163
 4041      0000
 4042              	.LBB42:
 4043              	.LBB43:
 129:costas2_impl.cc ****         for(int i = 0; i < noutput_items; i++) {
 4044              		.loc 22 129 0
 4045 074e C745EC00 		movl	$0, -20(%rbp)
 4045      000000
 4046              	.L166:
 4047              		.loc 22 129 0 is_stmt 0 discriminator 1
 4048 0755 8B45EC   		movl	-20(%rbp), %eax
 4049 0758 3B8564FF 		cmpl	-156(%rbp), %eax
 4049      FFFF
 4050 075e 0F8DF005 		jge	.L167
 4050      0000
 130:costas2_impl.cc ****           if(tags.size() > 0) {
 4051              		.loc 22 130 0 is_stmt 1
 4052 0764 488D8570 		leaq	-144(%rbp), %rax
 4052      FFFFFF
 4053 076b 4889C7   		movq	%rax, %rdi
 4054 076e E8000000 		call	_ZNKSt6vectorIN2gr5tag_tESaIS1_EE4sizeEv
 4054      00
 4055 0773 4885C0   		testq	%rax, %rax
 4056 0776 0F95C0   		setne	%al
 4057 0779 84C0     		testb	%al, %al
 4058 077b 0F84FE00 		je	.L165
 4058      0000
 131:costas2_impl.cc ****             if(tags[0].offset-nitems_read(0) == (size_t)i) {
 4059              		.loc 22 131 0
 4060 0781 488D8570 		leaq	-144(%rbp), %rax
 4060      FFFFFF
 4061 0788 BE000000 		movl	$0, %esi
 4061      00
 4062 078d 4889C7   		movq	%rax, %rdi
 4063 0790 E8000000 		call	_ZNSt6vectorIN2gr5tag_tESaIS1_EEixEm
 4063      00
 4064 0795 488B18   		movq	(%rax), %rbx
GAS LISTING /tmp/ccsIN87E.s 			page 189


 4065 0798 488B8568 		movq	-152(%rbp), %rax
 4065      FFFFFF
 4066 079f 488B00   		movq	(%rax), %rax
 4067 07a2 4883E818 		subq	$24, %rax
 4068 07a6 488B00   		movq	(%rax), %rax
 4069 07a9 4889C2   		movq	%rax, %rdx
 4070 07ac 488B8568 		movq	-152(%rbp), %rax
 4070      FFFFFF
 4071 07b3 4801D0   		addq	%rdx, %rax
 4072 07b6 BE000000 		movl	$0, %esi
 4072      00
 4073 07bb 4889C7   		movq	%rax, %rdi
 4074              	.LEHB27:
 4075 07be E8000000 		call	_ZN2gr5block11nitems_readEj@PLT
 4075      00
 4076 07c3 4829C3   		subq	%rax, %rbx
 4077 07c6 4889DA   		movq	%rbx, %rdx
 4078 07c9 8B45EC   		movl	-20(%rbp), %eax
 4079 07cc 4898     		cltq
 4080 07ce 4839C2   		cmpq	%rax, %rdx
 4081 07d1 0F94C0   		sete	%al
 4082 07d4 84C0     		testb	%al, %al
 4083 07d6 0F84A300 		je	.L165
 4083      0000
 132:costas2_impl.cc ****               d_phase = (float)pmt::to_double(tags[0].value);
 4084              		.loc 22 132 0
 4085 07dc 488B8568 		movq	-152(%rbp), %rax
 4085      FFFFFF
 4086 07e3 488B00   		movq	(%rax), %rax
 4087 07e6 4883E820 		subq	$32, %rax
 4088 07ea 488B00   		movq	(%rax), %rax
 4089 07ed 4889C2   		movq	%rax, %rdx
 4090 07f0 488B8568 		movq	-152(%rbp), %rax
 4090      FFFFFF
 4091 07f7 488D1C02 		leaq	(%rdx,%rax), %rbx
 4092 07fb 488D8570 		leaq	-144(%rbp), %rax
 4092      FFFFFF
 4093 0802 BE000000 		movl	$0, %esi
 4093      00
 4094 0807 4889C7   		movq	%rax, %rdi
 4095 080a E8000000 		call	_ZNSt6vectorIN2gr5tag_tESaIS1_EEixEm
 4095      00
 4096 080f 488D5010 		leaq	16(%rax), %rdx
 4097 0813 488D4598 		leaq	-104(%rbp), %rax
 4098 0817 4889D6   		movq	%rdx, %rsi
 4099 081a 4889C7   		movq	%rax, %rdi
 4100 081d E8000000 		call	_ZN5boost13intrusive_ptrIN3pmt8pmt_baseEEC1ERKS3_
 4100      00
 4101              	.LEHE27:
 4102              		.loc 22 132 0 is_stmt 0 discriminator 1
 4103 0822 488D4598 		leaq	-104(%rbp), %rax
 4104 0826 4889C7   		movq	%rax, %rdi
 4105              	.LEHB28:
 4106 0829 E8000000 		call	_ZN3pmt9to_doubleEN5boost13intrusive_ptrINS_8pmt_baseEEE@PLT
 4106      00
 4107              	.LEHE28:
 4108 082e F20F5AC0 		cvtsd2ss	%xmm0, %xmm0
GAS LISTING /tmp/ccsIN87E.s 			page 190


 4109 0832 F30F1143 		movss	%xmm0, 8(%rbx)
 4109      08
 4110 0837 488D4598 		leaq	-104(%rbp), %rax
 4111 083b 4889C7   		movq	%rax, %rdi
 4112 083e E8000000 		call	_ZN5boost13intrusive_ptrIN3pmt8pmt_baseEED1Ev
 4112      00
 133:costas2_impl.cc ****               tags.erase(tags.begin());
 4113              		.loc 22 133 0 is_stmt 1 discriminator 1
 4114 0843 488D8570 		leaq	-144(%rbp), %rax
 4114      FFFFFF
 4115 084a 4889C7   		movq	%rax, %rdi
 4116 084d E8000000 		call	_ZNSt6vectorIN2gr5tag_tESaIS1_EE5beginEv
 4116      00
 4117 0852 488945A8 		movq	%rax, -88(%rbp)
 4118 0856 488D55A8 		leaq	-88(%rbp), %rdx
 4119 085a 488D45A0 		leaq	-96(%rbp), %rax
 4120 085e 4889D6   		movq	%rdx, %rsi
 4121 0861 4889C7   		movq	%rax, %rdi
 4122 0864 E8000000 		call	_ZN9__gnu_cxx17__normal_iteratorIPKN2gr5tag_tESt6vectorIS2_SaIS2_EEEC1IPS2_EERKNS0_IT_NS_11__
 4122      00
 4123 0869 488B55A0 		movq	-96(%rbp), %rdx
 4124 086d 488D8570 		leaq	-144(%rbp), %rax
 4124      FFFFFF
 4125 0874 4889D6   		movq	%rdx, %rsi
 4126 0877 4889C7   		movq	%rax, %rdi
 4127              	.LEHB29:
 4128 087a E8000000 		call	_ZNSt6vectorIN2gr5tag_tESaIS1_EE5eraseEN9__gnu_cxx17__normal_iteratorIPKS1_S3_EE
 4128      00
 4129              	.L165:
 134:costas2_impl.cc ****             }
 135:costas2_impl.cc ****           }
 136:costas2_impl.cc ****           nco_out = gr_expj(-d_phase);
 4130              		.loc 22 136 0
 4131 087f 488B8568 		movq	-152(%rbp), %rax
 4131      FFFFFF
 4132 0886 488B00   		movq	(%rax), %rax
 4133 0889 4883E820 		subq	$32, %rax
 4134 088d 488B00   		movq	(%rax), %rax
 4135 0890 4889C2   		movq	%rax, %rdx
 4136 0893 488B8568 		movq	-152(%rbp), %rax
 4136      FFFFFF
 4137 089a 4801D0   		addq	%rdx, %rax
 4138 089d F30F1048 		movss	8(%rax), %xmm1
 4138      08
 4139 08a2 F30F1005 		movss	.LC10(%rip), %xmm0
 4139      00000000 
 4140 08aa 0F57C1   		xorps	%xmm1, %xmm0
 4141 08ad E84EF7FF 		call	_ZL7gr_expjf
 4141      FF
 4142 08b2 66480F7E 		movq	%xmm0, %rax
 4142      C0
 4143 08b7 48894590 		movq	%rax, -112(%rbp)
 137:costas2_impl.cc **** 
 138:costas2_impl.cc ****           optr[i] = iptr[i] * nco_out;
 4144              		.loc 22 138 0
 4145 08bb 8B45EC   		movl	-20(%rbp), %eax
 4146 08be 4898     		cltq
GAS LISTING /tmp/ccsIN87E.s 			page 191


 4147 08c0 488D14C5 		leaq	0(,%rax,8), %rdx
 4147      00000000 
 4148 08c8 488B45D8 		movq	-40(%rbp), %rax
 4149 08cc 488D1C02 		leaq	(%rdx,%rax), %rbx
 4150 08d0 8B45EC   		movl	-20(%rbp), %eax
 4151 08d3 4898     		cltq
 4152 08d5 488D14C5 		leaq	0(,%rax,8), %rdx
 4152      00000000 
 4153 08dd 488B45E0 		movq	-32(%rbp), %rax
 4154 08e1 4801C2   		addq	%rax, %rdx
 4155 08e4 488D4590 		leaq	-112(%rbp), %rax
 4156 08e8 4889C6   		movq	%rax, %rsi
 4157 08eb 4889D7   		movq	%rdx, %rdi
 4158 08ee E8000000 		call	_ZStmlIfESt7complexIT_ERKS2_S4_
 4158      00
 4159 08f3 66480F7E 		movq	%xmm0, %rax
 4159      C0
 4160 08f8 488903   		movq	%rax, (%rbx)
 139:costas2_impl.cc **** 
 140:costas2_impl.cc ****           d_error = phase_detector_2(optr[i]);
 4161              		.loc 22 140 0
 4162 08fb 8B45EC   		movl	-20(%rbp), %eax
 4163 08fe 4898     		cltq
 4164 0900 488D14C5 		leaq	0(,%rax,8), %rdx
 4164      00000000 
 4165 0908 488B45D8 		movq	-40(%rbp), %rax
 4166 090c 4801D0   		addq	%rdx, %rax
 4167 090f 488B10   		movq	(%rax), %rdx
 4168 0912 488B8568 		movq	-152(%rbp), %rax
 4168      FFFFFF
 4169 0919 48899548 		movq	%rdx, -184(%rbp)
 4169      FFFFFF
 4170 0920 F30F7E85 		movq	-184(%rbp), %xmm0
 4170      48FFFFFF 
 4171 0928 4889C7   		movq	%rax, %rdi
 4172 092b E8000000 		call	_ZNK2gr5lfast12costas2_impl16phase_detector_2ESt7complexIfE
 4172      00
 4173 0930 660F7EC2 		movd	%xmm0, %edx
 4174 0934 488B8568 		movq	-152(%rbp), %rax
 4174      FFFFFF
 4175 093b 89500C   		movl	%edx, 12(%rax)
 141:costas2_impl.cc ****           d_error = gr::branchless_clip(d_error, 1.0);
 4176              		.loc 22 141 0
 4177 093e 488B8568 		movq	-152(%rbp), %rax
 4177      FFFFFF
 4178 0945 8B400C   		movl	12(%rax), %eax
 4179 0948 F30F100D 		movss	.LC5(%rip), %xmm1
 4179      00000000 
 4180 0950 898548FF 		movl	%eax, -184(%rbp)
 4180      FFFF
 4181 0956 F30F1085 		movss	-184(%rbp), %xmm0
 4181      48FFFFFF 
 4182 095e E80AF7FF 		call	_ZN2grL15branchless_clipEff
 4182      FF
 4183 0963 660F7EC2 		movd	%xmm0, %edx
 4184 0967 488B8568 		movq	-152(%rbp), %rax
 4184      FFFFFF
GAS LISTING /tmp/ccsIN87E.s 			page 192


 4185 096e 89500C   		movl	%edx, 12(%rax)
 142:costas2_impl.cc **** 
 143:costas2_impl.cc ****           advance_loop(d_error);
 4186              		.loc 22 143 0
 4187 0971 488B8568 		movq	-152(%rbp), %rax
 4187      FFFFFF
 4188 0978 8B400C   		movl	12(%rax), %eax
 4189 097b 488B9568 		movq	-152(%rbp), %rdx
 4189      FFFFFF
 4190 0982 488B12   		movq	(%rdx), %rdx
 4191 0985 4883EA20 		subq	$32, %rdx
 4192 0989 488B12   		movq	(%rdx), %rdx
 4193 098c 4889D1   		movq	%rdx, %rcx
 4194 098f 488B9568 		movq	-152(%rbp), %rdx
 4194      FFFFFF
 4195 0996 4801CA   		addq	%rcx, %rdx
 4196 0999 898548FF 		movl	%eax, -184(%rbp)
 4196      FFFF
 4197 099f F30F1085 		movss	-184(%rbp), %xmm0
 4197      48FFFFFF 
 4198 09a7 4889D7   		movq	%rdx, %rdi
 4199 09aa E8000000 		call	_ZN2gr6blocks12control_loop12advance_loopEf@PLT
 4199      00
 144:costas2_impl.cc ****           phase_wrap();
 4200              		.loc 22 144 0
 4201 09af 488B8568 		movq	-152(%rbp), %rax
 4201      FFFFFF
 4202 09b6 488B00   		movq	(%rax), %rax
 4203 09b9 4883E820 		subq	$32, %rax
 4204 09bd 488B00   		movq	(%rax), %rax
 4205 09c0 4889C2   		movq	%rax, %rdx
 4206 09c3 488B8568 		movq	-152(%rbp), %rax
 4206      FFFFFF
 4207 09ca 4801D0   		addq	%rdx, %rax
 4208 09cd 4889C7   		movq	%rax, %rdi
 4209 09d0 E8000000 		call	_ZN2gr6blocks12control_loop10phase_wrapEv@PLT
 4209      00
 145:costas2_impl.cc ****           frequency_limit();
 4210              		.loc 22 145 0
 4211 09d5 488B8568 		movq	-152(%rbp), %rax
 4211      FFFFFF
 4212 09dc 488B00   		movq	(%rax), %rax
 4213 09df 4883E820 		subq	$32, %rax
 4214 09e3 488B00   		movq	(%rax), %rax
 4215 09e6 4889C2   		movq	%rax, %rdx
 4216 09e9 488B8568 		movq	-152(%rbp), %rax
 4216      FFFFFF
 4217 09f0 4801D0   		addq	%rdx, %rax
 4218 09f3 4889C7   		movq	%rax, %rdi
 4219 09f6 E8000000 		call	_ZN2gr6blocks12control_loop15frequency_limitEv@PLT
 4219      00
 146:costas2_impl.cc **** 
 147:costas2_impl.cc ****           foptr[i] = d_freq;
 4220              		.loc 22 147 0 discriminator 2
 4221 09fb 8B45EC   		movl	-20(%rbp), %eax
 4222 09fe 4898     		cltq
 4223 0a00 488D1485 		leaq	0(,%rax,4), %rdx
GAS LISTING /tmp/ccsIN87E.s 			page 193


 4223      00000000 
 4224 0a08 488B45D0 		movq	-48(%rbp), %rax
 4225 0a0c 4801C2   		addq	%rax, %rdx
 4226 0a0f 488B8568 		movq	-152(%rbp), %rax
 4226      FFFFFF
 4227 0a16 488B00   		movq	(%rax), %rax
 4228 0a19 4883E820 		subq	$32, %rax
 4229 0a1d 488B00   		movq	(%rax), %rax
 4230 0a20 4889C1   		movq	%rax, %rcx
 4231 0a23 488B8568 		movq	-152(%rbp), %rax
 4231      FFFFFF
 4232 0a2a 4801C8   		addq	%rcx, %rax
 4233 0a2d F30F1040 		movss	12(%rax), %xmm0
 4233      0C
 4234 0a32 F30F1102 		movss	%xmm0, (%rdx)
 129:costas2_impl.cc ****           if(tags.size() > 0) {
 4235              		.loc 22 129 0 discriminator 2
 4236 0a36 8345EC01 		addl	$1, -20(%rbp)
 4237 0a3a E916FDFF 		jmp	.L166
 4237      FF
 4238              	.L163:
 4239              	.LBE43:
 4240              	.LBE42:
 4241              	.LBB45:
 4242              	.LBB46:
 148:costas2_impl.cc ****         }
 149:costas2_impl.cc ****       }
 150:costas2_impl.cc ****       else {
 151:costas2_impl.cc ****         for(int i = 0; i < noutput_items; i++) {
 4243              		.loc 22 151 0
 4244 0a3f C745E800 		movl	$0, -24(%rbp)
 4244      000000
 4245              	.L171:
 4246              		.loc 22 151 0 is_stmt 0 discriminator 1
 4247 0a46 8B45E8   		movl	-24(%rbp), %eax
 4248 0a49 3B8564FF 		cmpl	-156(%rbp), %eax
 4248      FFFF
 4249 0a4f 0F8DFF02 		jge	.L167
 4249      0000
 152:costas2_impl.cc ****           if(tags.size() > 0) {
 4250              		.loc 22 152 0 is_stmt 1
 4251 0a55 488D8570 		leaq	-144(%rbp), %rax
 4251      FFFFFF
 4252 0a5c 4889C7   		movq	%rax, %rdi
 4253 0a5f E8000000 		call	_ZNKSt6vectorIN2gr5tag_tESaIS1_EE4sizeEv
 4253      00
 4254 0a64 4885C0   		testq	%rax, %rax
 4255 0a67 0F95C0   		setne	%al
 4256 0a6a 84C0     		testb	%al, %al
 4257 0a6c 0F84FE00 		je	.L168
 4257      0000
 153:costas2_impl.cc ****             if(tags[0].offset-nitems_read(0) == (size_t)i) {
 4258              		.loc 22 153 0
 4259 0a72 488D8570 		leaq	-144(%rbp), %rax
 4259      FFFFFF
 4260 0a79 BE000000 		movl	$0, %esi
 4260      00
GAS LISTING /tmp/ccsIN87E.s 			page 194


 4261 0a7e 4889C7   		movq	%rax, %rdi
 4262 0a81 E8000000 		call	_ZNSt6vectorIN2gr5tag_tESaIS1_EEixEm
 4262      00
 4263 0a86 488B18   		movq	(%rax), %rbx
 4264 0a89 488B8568 		movq	-152(%rbp), %rax
 4264      FFFFFF
 4265 0a90 488B00   		movq	(%rax), %rax
 4266 0a93 4883E818 		subq	$24, %rax
 4267 0a97 488B00   		movq	(%rax), %rax
 4268 0a9a 4889C2   		movq	%rax, %rdx
 4269 0a9d 488B8568 		movq	-152(%rbp), %rax
 4269      FFFFFF
 4270 0aa4 4801D0   		addq	%rdx, %rax
 4271 0aa7 BE000000 		movl	$0, %esi
 4271      00
 4272 0aac 4889C7   		movq	%rax, %rdi
 4273 0aaf E8000000 		call	_ZN2gr5block11nitems_readEj@PLT
 4273      00
 4274 0ab4 4829C3   		subq	%rax, %rbx
 4275 0ab7 4889DA   		movq	%rbx, %rdx
 4276 0aba 8B45E8   		movl	-24(%rbp), %eax
 4277 0abd 4898     		cltq
 4278 0abf 4839C2   		cmpq	%rax, %rdx
 4279 0ac2 0F94C0   		sete	%al
 4280 0ac5 84C0     		testb	%al, %al
 4281 0ac7 0F84A300 		je	.L168
 4281      0000
 154:costas2_impl.cc ****               d_phase = (float)pmt::to_double(tags[0].value);
 4282              		.loc 22 154 0
 4283 0acd 488B8568 		movq	-152(%rbp), %rax
 4283      FFFFFF
 4284 0ad4 488B00   		movq	(%rax), %rax
 4285 0ad7 4883E820 		subq	$32, %rax
 4286 0adb 488B00   		movq	(%rax), %rax
 4287 0ade 4889C2   		movq	%rax, %rdx
 4288 0ae1 488B8568 		movq	-152(%rbp), %rax
 4288      FFFFFF
 4289 0ae8 488D1C02 		leaq	(%rdx,%rax), %rbx
 4290 0aec 488D8570 		leaq	-144(%rbp), %rax
 4290      FFFFFF
 4291 0af3 BE000000 		movl	$0, %esi
 4291      00
 4292 0af8 4889C7   		movq	%rax, %rdi
 4293 0afb E8000000 		call	_ZNSt6vectorIN2gr5tag_tESaIS1_EEixEm
 4293      00
 4294 0b00 488D5010 		leaq	16(%rax), %rdx
 4295 0b04 488D45B0 		leaq	-80(%rbp), %rax
 4296 0b08 4889D6   		movq	%rdx, %rsi
 4297 0b0b 4889C7   		movq	%rax, %rdi
 4298 0b0e E8000000 		call	_ZN5boost13intrusive_ptrIN3pmt8pmt_baseEEC1ERKS3_
 4298      00
 4299              	.LEHE29:
 4300              		.loc 22 154 0 is_stmt 0 discriminator 1
 4301 0b13 488D45B0 		leaq	-80(%rbp), %rax
 4302 0b17 4889C7   		movq	%rax, %rdi
 4303              	.LEHB30:
 4304 0b1a E8000000 		call	_ZN3pmt9to_doubleEN5boost13intrusive_ptrINS_8pmt_baseEEE@PLT
GAS LISTING /tmp/ccsIN87E.s 			page 195


 4304      00
 4305              	.LEHE30:
 4306 0b1f F20F5AC0 		cvtsd2ss	%xmm0, %xmm0
 4307 0b23 F30F1143 		movss	%xmm0, 8(%rbx)
 4307      08
 4308 0b28 488D45B0 		leaq	-80(%rbp), %rax
 4309 0b2c 4889C7   		movq	%rax, %rdi
 4310 0b2f E8000000 		call	_ZN5boost13intrusive_ptrIN3pmt8pmt_baseEED1Ev
 4310      00
 155:costas2_impl.cc ****               tags.erase(tags.begin());
 4311              		.loc 22 155 0 is_stmt 1 discriminator 1
 4312 0b34 488D8570 		leaq	-144(%rbp), %rax
 4312      FFFFFF
 4313 0b3b 4889C7   		movq	%rax, %rdi
 4314 0b3e E8000000 		call	_ZNSt6vectorIN2gr5tag_tESaIS1_EE5beginEv
 4314      00
 4315 0b43 488945C0 		movq	%rax, -64(%rbp)
 4316 0b47 488D55C0 		leaq	-64(%rbp), %rdx
 4317 0b4b 488D45B8 		leaq	-72(%rbp), %rax
 4318 0b4f 4889D6   		movq	%rdx, %rsi
 4319 0b52 4889C7   		movq	%rax, %rdi
 4320 0b55 E8000000 		call	_ZN9__gnu_cxx17__normal_iteratorIPKN2gr5tag_tESt6vectorIS2_SaIS2_EEEC1IPS2_EERKNS0_IT_NS_11__
 4320      00
 4321 0b5a 488B55B8 		movq	-72(%rbp), %rdx
 4322 0b5e 488D8570 		leaq	-144(%rbp), %rax
 4322      FFFFFF
 4323 0b65 4889D6   		movq	%rdx, %rsi
 4324 0b68 4889C7   		movq	%rax, %rdi
 4325              	.LEHB31:
 4326 0b6b E8000000 		call	_ZNSt6vectorIN2gr5tag_tESaIS1_EE5eraseEN9__gnu_cxx17__normal_iteratorIPKS1_S3_EE
 4326      00
 4327              	.L168:
 156:costas2_impl.cc ****             }
 157:costas2_impl.cc ****           }
 158:costas2_impl.cc ****           // gr_expj does a sine/cosine
 159:costas2_impl.cc ****           // EXPENSIVE LINE
 160:costas2_impl.cc ****           nco_out = gr_expj(-d_phase);
 4328              		.loc 22 160 0
 4329 0b70 488B8568 		movq	-152(%rbp), %rax
 4329      FFFFFF
 4330 0b77 488B00   		movq	(%rax), %rax
 4331 0b7a 4883E820 		subq	$32, %rax
 4332 0b7e 488B00   		movq	(%rax), %rax
 4333 0b81 4889C2   		movq	%rax, %rdx
 4334 0b84 488B8568 		movq	-152(%rbp), %rax
 4334      FFFFFF
 4335 0b8b 4801D0   		addq	%rdx, %rax
 4336 0b8e F30F1048 		movss	8(%rax), %xmm1
 4336      08
 4337 0b93 F30F1005 		movss	.LC10(%rip), %xmm0
 4337      00000000 
 4338 0b9b 0F57C1   		xorps	%xmm1, %xmm0
 4339 0b9e E85DF4FF 		call	_ZL7gr_expjf
 4339      FF
 4340 0ba3 66480F7E 		movq	%xmm0, %rax
 4340      C0
 4341 0ba8 48894590 		movq	%rax, -112(%rbp)
GAS LISTING /tmp/ccsIN87E.s 			page 196


 161:costas2_impl.cc **** 
 162:costas2_impl.cc ****           optr[i] = iptr[i] * nco_out;
 4342              		.loc 22 162 0
 4343 0bac 8B45E8   		movl	-24(%rbp), %eax
 4344 0baf 4898     		cltq
 4345 0bb1 488D14C5 		leaq	0(,%rax,8), %rdx
 4345      00000000 
 4346 0bb9 488B45D8 		movq	-40(%rbp), %rax
 4347 0bbd 488D1C02 		leaq	(%rdx,%rax), %rbx
 4348 0bc1 8B45E8   		movl	-24(%rbp), %eax
 4349 0bc4 4898     		cltq
 4350 0bc6 488D14C5 		leaq	0(,%rax,8), %rdx
 4350      00000000 
 4351 0bce 488B45E0 		movq	-32(%rbp), %rax
 4352 0bd2 4801C2   		addq	%rax, %rdx
 4353 0bd5 488D4590 		leaq	-112(%rbp), %rax
 4354 0bd9 4889C6   		movq	%rax, %rsi
 4355 0bdc 4889D7   		movq	%rdx, %rdi
 4356 0bdf E8000000 		call	_ZStmlIfESt7complexIT_ERKS2_S4_
 4356      00
 4357 0be4 66480F7E 		movq	%xmm0, %rax
 4357      C0
 4358 0be9 488903   		movq	%rax, (%rbx)
 163:costas2_impl.cc **** 
 164:costas2_impl.cc ****           // EXPENSIVE LINE
 165:costas2_impl.cc ****           d_error = (*this.*d_phase_detector)(optr[i]);
 4359              		.loc 22 165 0
 4360 0bec 488B8568 		movq	-152(%rbp), %rax
 4360      FFFFFF
 4361 0bf3 488B4018 		movq	24(%rax), %rax
 4362 0bf7 83E001   		andl	$1, %eax
 4363 0bfa 4885C0   		testq	%rax, %rax
 4364 0bfd 7432     		je	.L169
 4365              		.loc 22 165 0 is_stmt 0 discriminator 1
 4366 0bff 488B8568 		movq	-152(%rbp), %rax
 4366      FFFFFF
 4367 0c06 488B4020 		movq	32(%rax), %rax
 4368 0c0a 4889C2   		movq	%rax, %rdx
 4369 0c0d 488B8568 		movq	-152(%rbp), %rax
 4369      FFFFFF
 4370 0c14 4801D0   		addq	%rdx, %rax
 4371 0c17 488B10   		movq	(%rax), %rdx
 4372 0c1a 488B8568 		movq	-152(%rbp), %rax
 4372      FFFFFF
 4373 0c21 488B4018 		movq	24(%rax), %rax
 4374 0c25 4883E801 		subq	$1, %rax
 4375 0c29 4801D0   		addq	%rdx, %rax
 4376 0c2c 488B00   		movq	(%rax), %rax
 4377 0c2f EB0B     		jmp	.L170
 4378              	.L169:
 4379              		.loc 22 165 0 discriminator 2
 4380 0c31 488B8568 		movq	-152(%rbp), %rax
 4380      FFFFFF
 4381 0c38 488B4018 		movq	24(%rax), %rax
 4382              	.L170:
 4383              		.loc 22 165 0 discriminator 4
 4384 0c3c 8B55E8   		movl	-24(%rbp), %edx
GAS LISTING /tmp/ccsIN87E.s 			page 197


 4385 0c3f 4863D2   		movslq	%edx, %rdx
 4386 0c42 488D0CD5 		leaq	0(,%rdx,8), %rcx
 4386      00000000 
 4387 0c4a 488B55D8 		movq	-40(%rbp), %rdx
 4388 0c4e 4801D1   		addq	%rdx, %rcx
 4389 0c51 488B9568 		movq	-152(%rbp), %rdx
 4389      FFFFFF
 4390 0c58 488B5220 		movq	32(%rdx), %rdx
 4391 0c5c 4889D6   		movq	%rdx, %rsi
 4392 0c5f 488B9568 		movq	-152(%rbp), %rdx
 4392      FFFFFF
 4393 0c66 4801F2   		addq	%rsi, %rdx
 4394 0c69 488B09   		movq	(%rcx), %rcx
 4395 0c6c 48898D48 		movq	%rcx, -184(%rbp)
 4395      FFFFFF
 4396 0c73 F30F7E85 		movq	-184(%rbp), %xmm0
 4396      48FFFFFF 
 4397 0c7b 4889D7   		movq	%rdx, %rdi
 4398 0c7e FFD0     		call	*%rax
 4399              	.LVL6:
 4400 0c80 660F7EC2 		movd	%xmm0, %edx
 4401 0c84 488B8568 		movq	-152(%rbp), %rax
 4401      FFFFFF
 4402 0c8b 89500C   		movl	%edx, 12(%rax)
 166:costas2_impl.cc ****           d_error = gr::branchless_clip(d_error, 1.0);
 4403              		.loc 22 166 0 is_stmt 1 discriminator 4
 4404 0c8e 488B8568 		movq	-152(%rbp), %rax
 4404      FFFFFF
 4405 0c95 8B400C   		movl	12(%rax), %eax
 4406 0c98 F30F100D 		movss	.LC5(%rip), %xmm1
 4406      00000000 
 4407 0ca0 898548FF 		movl	%eax, -184(%rbp)
 4407      FFFF
 4408 0ca6 F30F1085 		movss	-184(%rbp), %xmm0
 4408      48FFFFFF 
 4409 0cae E8BAF3FF 		call	_ZN2grL15branchless_clipEff
 4409      FF
 4410 0cb3 660F7EC2 		movd	%xmm0, %edx
 4411 0cb7 488B8568 		movq	-152(%rbp), %rax
 4411      FFFFFF
 4412 0cbe 89500C   		movl	%edx, 12(%rax)
 167:costas2_impl.cc **** 
 168:costas2_impl.cc ****           advance_loop(d_error);
 4413              		.loc 22 168 0 discriminator 4
 4414 0cc1 488B8568 		movq	-152(%rbp), %rax
 4414      FFFFFF
 4415 0cc8 8B400C   		movl	12(%rax), %eax
 4416 0ccb 488B9568 		movq	-152(%rbp), %rdx
 4416      FFFFFF
 4417 0cd2 488B12   		movq	(%rdx), %rdx
 4418 0cd5 4883EA20 		subq	$32, %rdx
 4419 0cd9 488B12   		movq	(%rdx), %rdx
 4420 0cdc 4889D1   		movq	%rdx, %rcx
 4421 0cdf 488B9568 		movq	-152(%rbp), %rdx
 4421      FFFFFF
 4422 0ce6 4801CA   		addq	%rcx, %rdx
 4423 0ce9 898548FF 		movl	%eax, -184(%rbp)
GAS LISTING /tmp/ccsIN87E.s 			page 198


 4423      FFFF
 4424 0cef F30F1085 		movss	-184(%rbp), %xmm0
 4424      48FFFFFF 
 4425 0cf7 4889D7   		movq	%rdx, %rdi
 4426 0cfa E8000000 		call	_ZN2gr6blocks12control_loop12advance_loopEf@PLT
 4426      00
 169:costas2_impl.cc ****           phase_wrap();
 4427              		.loc 22 169 0
 4428 0cff 488B8568 		movq	-152(%rbp), %rax
 4428      FFFFFF
 4429 0d06 488B00   		movq	(%rax), %rax
 4430 0d09 4883E820 		subq	$32, %rax
 4431 0d0d 488B00   		movq	(%rax), %rax
 4432 0d10 4889C2   		movq	%rax, %rdx
 4433 0d13 488B8568 		movq	-152(%rbp), %rax
 4433      FFFFFF
 4434 0d1a 4801D0   		addq	%rdx, %rax
 4435 0d1d 4889C7   		movq	%rax, %rdi
 4436 0d20 E8000000 		call	_ZN2gr6blocks12control_loop10phase_wrapEv@PLT
 4436      00
 170:costas2_impl.cc ****           frequency_limit();
 4437              		.loc 22 170 0
 4438 0d25 488B8568 		movq	-152(%rbp), %rax
 4438      FFFFFF
 4439 0d2c 488B00   		movq	(%rax), %rax
 4440 0d2f 4883E820 		subq	$32, %rax
 4441 0d33 488B00   		movq	(%rax), %rax
 4442 0d36 4889C2   		movq	%rax, %rdx
 4443 0d39 488B8568 		movq	-152(%rbp), %rax
 4443      FFFFFF
 4444 0d40 4801D0   		addq	%rdx, %rax
 4445 0d43 4889C7   		movq	%rax, %rdi
 4446 0d46 E8000000 		call	_ZN2gr6blocks12control_loop15frequency_limitEv@PLT
 4446      00
 4447              	.LEHE31:
 151:costas2_impl.cc ****           if(tags.size() > 0) {
 4448              		.loc 22 151 0 discriminator 2
 4449 0d4b 8345E801 		addl	$1, -24(%rbp)
 4450 0d4f E9F2FCFF 		jmp	.L171
 4450      FF
 4451              	.L167:
 4452              	.LBE46:
 4453              	.LBE45:
 4454              	.LBE41:
 171:costas2_impl.cc ****         }
 172:costas2_impl.cc ****       }
 173:costas2_impl.cc **** 
 174:costas2_impl.cc ****       return noutput_items;
 4455              		.loc 22 174 0
 4456 0d54 8B9D64FF 		movl	-156(%rbp), %ebx
 4456      FFFF
 122:costas2_impl.cc ****       /*
 4457              		.loc 22 122 0
 4458 0d5a 488D8570 		leaq	-144(%rbp), %rax
 4458      FFFFFF
 4459 0d61 4889C7   		movq	%rax, %rdi
 4460 0d64 E8000000 		call	_ZNSt6vectorIN2gr5tag_tESaIS1_EED1Ev
GAS LISTING /tmp/ccsIN87E.s 			page 199


 4460      00
 4461              		.loc 22 174 0
 4462 0d69 89D8     		movl	%ebx, %eax
 4463 0d6b EB3F     		jmp	.L179
 4464              	.L177:
 4465 0d6d 4889C3   		movq	%rax, %rbx
 4466              	.LBB50:
 4467              	.LBB48:
 4468              	.LBB44:
 132:costas2_impl.cc ****               tags.erase(tags.begin());
 4469              		.loc 22 132 0
 4470 0d70 488D4598 		leaq	-104(%rbp), %rax
 4471 0d74 4889C7   		movq	%rax, %rdi
 4472 0d77 E8000000 		call	_ZN5boost13intrusive_ptrIN3pmt8pmt_baseEED1Ev
 4472      00
 4473 0d7c EB14     		jmp	.L174
 4474              	.L178:
 4475 0d7e 4889C3   		movq	%rax, %rbx
 4476              	.LBE44:
 4477              	.LBE48:
 4478              	.LBB49:
 4479              	.LBB47:
 154:costas2_impl.cc ****               tags.erase(tags.begin());
 4480              		.loc 22 154 0
 4481 0d81 488D45B0 		leaq	-80(%rbp), %rax
 4482 0d85 4889C7   		movq	%rax, %rdi
 4483 0d88 E8000000 		call	_ZN5boost13intrusive_ptrIN3pmt8pmt_baseEED1Ev
 4483      00
 4484 0d8d EB03     		jmp	.L174
 4485              	.L176:
 4486 0d8f 4889C3   		movq	%rax, %rbx
 4487              	.L174:
 4488              	.LBE47:
 4489              	.LBE49:
 4490              	.LBE50:
 122:costas2_impl.cc ****       /*
 4491              		.loc 22 122 0
 4492 0d92 488D8570 		leaq	-144(%rbp), %rax
 4492      FFFFFF
 4493 0d99 4889C7   		movq	%rax, %rdi
 4494 0d9c E8000000 		call	_ZNSt6vectorIN2gr5tag_tESaIS1_EED1Ev
 4494      00
 4495 0da1 4889D8   		movq	%rbx, %rax
 4496 0da4 4889C7   		movq	%rax, %rdi
 4497              	.LEHB32:
 4498 0da7 E8000000 		call	_Unwind_Resume@PLT
 4498      00
 4499              	.LEHE32:
 4500              	.L179:
 175:costas2_impl.cc ****     }
 4501              		.loc 22 175 0
 4502 0dac 4881C4B8 		addq	$184, %rsp
 4502      000000
 4503 0db3 5B       		popq	%rbx
 4504 0db4 5D       		popq	%rbp
 4505              		.cfi_def_cfa 7, 8
 4506 0db5 C3       		ret
GAS LISTING /tmp/ccsIN87E.s 			page 200


 4507              		.cfi_endproc
 4508              	.LFE10977:
 4509              		.section	.gcc_except_table
 4510              	.LLSDA10977:
 4511 004e FF       		.byte	0xff
 4512 004f FF       		.byte	0xff
 4513 0050 01       		.byte	0x1
 4514 0051 25       		.uleb128 .LLSDACSE10977-.LLSDACSB10977
 4515              	.LLSDACSB10977:
 4516 0052 B402     		.uleb128 .LEHB27-.LFB10977
 4517 0054 64       		.uleb128 .LEHE27-.LEHB27
 4518 0055 850E     		.uleb128 .L176-.LFB10977
 4519 0057 00       		.uleb128 0
 4520 0058 9F03     		.uleb128 .LEHB28-.LFB10977
 4521 005a 05       		.uleb128 .LEHE28-.LEHB28
 4522 005b E30D     		.uleb128 .L177-.LFB10977
 4523 005d 00       		.uleb128 0
 4524 005e F003     		.uleb128 .LEHB29-.LFB10977
 4525 0060 9905     		.uleb128 .LEHE29-.LEHB29
 4526 0062 850E     		.uleb128 .L176-.LFB10977
 4527 0064 00       		.uleb128 0
 4528 0065 9009     		.uleb128 .LEHB30-.LFB10977
 4529 0067 05       		.uleb128 .LEHE30-.LEHB30
 4530 0068 F40D     		.uleb128 .L178-.LFB10977
 4531 006a 00       		.uleb128 0
 4532 006b E109     		.uleb128 .LEHB31-.LFB10977
 4533 006d E003     		.uleb128 .LEHE31-.LEHB31
 4534 006f 850E     		.uleb128 .L176-.LFB10977
 4535 0071 00       		.uleb128 0
 4536 0072 9D0E     		.uleb128 .LEHB32-.LFB10977
 4537 0074 05       		.uleb128 .LEHE32-.LEHB32
 4538 0075 00       		.uleb128 0
 4539 0076 00       		.uleb128 0
 4540              	.LLSDACSE10977:
 4541              		.text
 4543              		.align 2
 4544              		.globl	_ZN2gr5lfast12costas2_impl9work_testEiRSt6vectorIPKvSaIS4_EERS2_IPvSaIS8_EE
 4546              	_ZN2gr5lfast12costas2_impl9work_testEiRSt6vectorIPKvSaIS4_EERS2_IPvSaIS8_EE:
 4547              	.LFB10978:
 176:costas2_impl.cc **** 
 177:costas2_impl.cc ****     int
 178:costas2_impl.cc ****     costas2_impl::work_test(int noutput_items,
 179:costas2_impl.cc ****         gr_vector_const_void_star &input_items,
 180:costas2_impl.cc ****         gr_vector_void_star &output_items)
 181:costas2_impl.cc ****     {
 4548              		.loc 22 181 0
 4549              		.cfi_startproc
 4550 0db6 55       		pushq	%rbp
 4551              		.cfi_def_cfa_offset 16
 4552              		.cfi_offset 6, -16
 4553 0db7 4889E5   		movq	%rsp, %rbp
 4554              		.cfi_def_cfa_register 6
 4555 0dba 4883EC50 		subq	$80, %rsp
 4556 0dbe 48897DC8 		movq	%rdi, -56(%rbp)
 4557 0dc2 8975C4   		movl	%esi, -60(%rbp)
 4558 0dc5 488955B8 		movq	%rdx, -72(%rbp)
 4559 0dc9 48894DB0 		movq	%rcx, -80(%rbp)
GAS LISTING /tmp/ccsIN87E.s 			page 201


 182:costas2_impl.cc ****         // const gr_complex *iptr = (gr_complex *) input_items[0];
 183:costas2_impl.cc ****         // gr_complex *optr = (gr_complex *) output_items[0];
 184:costas2_impl.cc ****         const SComplex *iptr = (SComplex *) input_items[0];
 4560              		.loc 22 184 0
 4561 0dcd 488B45B8 		movq	-72(%rbp), %rax
 4562 0dd1 BE000000 		movl	$0, %esi
 4562      00
 4563 0dd6 4889C7   		movq	%rax, %rdi
 4564 0dd9 E8000000 		call	_ZNSt6vectorIPKvSaIS1_EEixEm
 4564      00
 4565 0dde 488B00   		movq	(%rax), %rax
 4566 0de1 488945F0 		movq	%rax, -16(%rbp)
 185:costas2_impl.cc ****         SComplex *optr = (SComplex *) output_items[0];
 4567              		.loc 22 185 0
 4568 0de5 488B45B0 		movq	-80(%rbp), %rax
 4569 0de9 BE000000 		movl	$0, %esi
 4569      00
 4570 0dee 4889C7   		movq	%rax, %rdi
 4571 0df1 E8000000 		call	_ZNSt6vectorIPvSaIS0_EEixEm
 4571      00
 4572 0df6 488B00   		movq	(%rax), %rax
 4573 0df9 488945E8 		movq	%rax, -24(%rbp)
 186:costas2_impl.cc ****         // gr_complex nco_out;
 187:costas2_impl.cc ****         float i_r,i_i,n_r,n_i,o_r,o_i;
 188:costas2_impl.cc ****         // float x1,x2;
 189:costas2_impl.cc ****         int i;
 190:costas2_impl.cc ****         // float angle_rad,sin,cos;
 191:costas2_impl.cc **** 
 192:costas2_impl.cc ****         // gr_complex nco_out;
 193:costas2_impl.cc **** 
 194:costas2_impl.cc ****         for(i = 0; i < noutput_items; i++) {
 4574              		.loc 22 194 0
 4575 0dfd C745FC00 		movl	$0, -4(%rbp)
 4575      000000
 4576              	.L194:
 4577              		.loc 22 194 0 is_stmt 0 discriminator 1
 4578 0e04 8B45FC   		movl	-4(%rbp), %eax
 4579 0e07 3B45C4   		cmpl	-60(%rbp), %eax
 4580 0e0a 0F8DCD04 		jge	.L181
 4580      0000
 195:costas2_impl.cc ****           // nco_out = gr_expj(-d_phase);
 196:costas2_impl.cc ****       	  // returns this:  nco_out.real = n_r, nco_out.imag = n_i
 197:costas2_impl.cc ****          // Trig functions killing performance.  Tried a number of replacement options but no luck:
 198:costas2_impl.cc ****         	// gnuradio lookup functions - expensive with float_to_fixed in each iteration
 199:costas2_impl.cc ****         	// Tried rolling our own lookup tables - Same performance as straight trig
 200:costas2_impl.cc ****         	// Tried quadratic curve inline approximation - Tiny bit faster
 201:costas2_impl.cc ****        	 // gr::sincosf(-d_phase, &n_i, &n_r);
 202:costas2_impl.cc **** 			n_i = sinf(-d_phase);
 4581              		.loc 22 202 0 is_stmt 1
 4582 0e10 488B45C8 		movq	-56(%rbp), %rax
 4583 0e14 488B00   		movq	(%rax), %rax
 4584 0e17 4883E820 		subq	$32, %rax
 4585 0e1b 488B00   		movq	(%rax), %rax
 4586 0e1e 4889C2   		movq	%rax, %rdx
 4587 0e21 488B45C8 		movq	-56(%rbp), %rax
 4588 0e25 4801D0   		addq	%rdx, %rax
 4589 0e28 F30F1048 		movss	8(%rax), %xmm1
GAS LISTING /tmp/ccsIN87E.s 			page 202


 4589      08
 4590 0e2d F30F1005 		movss	.LC10(%rip), %xmm0
 4590      00000000 
 4591 0e35 0F57C1   		xorps	%xmm1, %xmm0
 4592 0e38 E8000000 		call	sinf@PLT
 4592      00
 4593 0e3d 660F7EC0 		movd	%xmm0, %eax
 4594 0e41 8945E4   		movl	%eax, -28(%rbp)
 203:costas2_impl.cc **** 			n_r = cosf(-d_phase);
 4595              		.loc 22 203 0
 4596 0e44 488B45C8 		movq	-56(%rbp), %rax
 4597 0e48 488B00   		movq	(%rax), %rax
 4598 0e4b 4883E820 		subq	$32, %rax
 4599 0e4f 488B00   		movq	(%rax), %rax
 4600 0e52 4889C2   		movq	%rax, %rdx
 4601 0e55 488B45C8 		movq	-56(%rbp), %rax
 4602 0e59 4801D0   		addq	%rdx, %rax
 4603 0e5c F30F1048 		movss	8(%rax), %xmm1
 4603      08
 4604 0e61 F30F1005 		movss	.LC10(%rip), %xmm0
 4604      00000000 
 4605 0e69 0F57C1   		xorps	%xmm1, %xmm0
 4606 0e6c E8000000 		call	cosf@PLT
 4606      00
 4607 0e71 660F7EC0 		movd	%xmm0, %eax
 4608 0e75 8945E0   		movl	%eax, -32(%rbp)
 204:costas2_impl.cc **** 
 205:costas2_impl.cc ****           //optr[i] = iptr[i] * nco_out;
 206:costas2_impl.cc **** 
 207:costas2_impl.cc ****           // FMA stands for fused multiply-add operations where FMA(a,b,c)=(a*b)+c and it does it a
 208:costas2_impl.cc **** #if defined(__FMA__)
 209:costas2_impl.cc ****           o_r = __builtin_fmaf(iptr[i].real,n_r,-iptr[i].imag*n_i);
 210:costas2_impl.cc ****           o_i = __builtin_fmaf(iptr[i].real,n_i,iptr[i].imag*n_r);
 211:costas2_impl.cc **** #else
 212:costas2_impl.cc ****           i_r = iptr[i].real;
 4609              		.loc 22 212 0
 4610 0e78 8B45FC   		movl	-4(%rbp), %eax
 4611 0e7b 4898     		cltq
 4612 0e7d 488D14C5 		leaq	0(,%rax,8), %rdx
 4612      00000000 
 4613 0e85 488B45F0 		movq	-16(%rbp), %rax
 4614 0e89 4801D0   		addq	%rdx, %rax
 4615 0e8c F30F1000 		movss	(%rax), %xmm0
 4616 0e90 F30F1145 		movss	%xmm0, -36(%rbp)
 4616      DC
 213:costas2_impl.cc ****           i_i = iptr[i].imag;
 4617              		.loc 22 213 0
 4618 0e95 8B45FC   		movl	-4(%rbp), %eax
 4619 0e98 4898     		cltq
 4620 0e9a 488D14C5 		leaq	0(,%rax,8), %rdx
 4620      00000000 
 4621 0ea2 488B45F0 		movq	-16(%rbp), %rax
 4622 0ea6 4801D0   		addq	%rdx, %rax
 4623 0ea9 F30F1040 		movss	4(%rax), %xmm0
 4623      04
 4624 0eae F30F1145 		movss	%xmm0, -40(%rbp)
 4624      D8
GAS LISTING /tmp/ccsIN87E.s 			page 203


 214:costas2_impl.cc ****           o_r = (i_r * n_r) - (i_i*n_i);
 4625              		.loc 22 214 0
 4626 0eb3 F30F1045 		movss	-36(%rbp), %xmm0
 4626      DC
 4627 0eb8 F30F5945 		mulss	-32(%rbp), %xmm0
 4627      E0
 4628 0ebd F30F104D 		movss	-40(%rbp), %xmm1
 4628      D8
 4629 0ec2 F30F594D 		mulss	-28(%rbp), %xmm1
 4629      E4
 4630 0ec7 F30F5CC1 		subss	%xmm1, %xmm0
 4631 0ecb F30F1145 		movss	%xmm0, -44(%rbp)
 4631      D4
 215:costas2_impl.cc ****           o_i = (i_r * n_i) + (i_i * n_r);
 4632              		.loc 22 215 0
 4633 0ed0 F30F1045 		movss	-36(%rbp), %xmm0
 4633      DC
 4634 0ed5 0F28C8   		movaps	%xmm0, %xmm1
 4635 0ed8 F30F594D 		mulss	-28(%rbp), %xmm1
 4635      E4
 4636 0edd F30F1045 		movss	-40(%rbp), %xmm0
 4636      D8
 4637 0ee2 F30F5945 		mulss	-32(%rbp), %xmm0
 4637      E0
 4638 0ee7 F30F58C1 		addss	%xmm1, %xmm0
 4639 0eeb F30F1145 		movss	%xmm0, -48(%rbp)
 4639      D0
 216:costas2_impl.cc **** #endif
 217:costas2_impl.cc **** 
 218:costas2_impl.cc ****           optr[i].real = o_r;
 4640              		.loc 22 218 0
 4641 0ef0 8B45FC   		movl	-4(%rbp), %eax
 4642 0ef3 4898     		cltq
 4643 0ef5 488D14C5 		leaq	0(,%rax,8), %rdx
 4643      00000000 
 4644 0efd 488B45E8 		movq	-24(%rbp), %rax
 4645 0f01 4801D0   		addq	%rdx, %rax
 4646 0f04 F30F1045 		movss	-44(%rbp), %xmm0
 4646      D4
 4647 0f09 F30F1100 		movss	%xmm0, (%rax)
 219:costas2_impl.cc ****           optr[i].imag = o_i;
 4648              		.loc 22 219 0
 4649 0f0d 8B45FC   		movl	-4(%rbp), %eax
 4650 0f10 4898     		cltq
 4651 0f12 488D14C5 		leaq	0(,%rax,8), %rdx
 4651      00000000 
 4652 0f1a 488B45E8 		movq	-24(%rbp), %rax
 4653 0f1e 4801D0   		addq	%rdx, %rax
 4654 0f21 F30F1045 		movss	-48(%rbp), %xmm0
 4654      D0
 4655 0f26 F30F1140 		movss	%xmm0, 4(%rax)
 4655      04
 220:costas2_impl.cc **** 
 221:costas2_impl.cc ****           //d_error = (*this.*d_phase_detector)(optr[i]);
 222:costas2_impl.cc ****           // 2nd order in-place
 223:costas2_impl.cc ****           d_error = o_r*o_i;
 4656              		.loc 22 223 0
GAS LISTING /tmp/ccsIN87E.s 			page 204


 4657 0f2b F30F1045 		movss	-44(%rbp), %xmm0
 4657      D4
 4658 0f30 F30F5945 		mulss	-48(%rbp), %xmm0
 4658      D0
 4659 0f35 488B45C8 		movq	-56(%rbp), %rax
 4660 0f39 F30F1140 		movss	%xmm0, 12(%rax)
 4660      0C
 224:costas2_impl.cc **** 
 225:costas2_impl.cc ****           // d_error = gr::branchless_clip(d_error, 1.0);
 226:costas2_impl.cc ****           /*  Taken out for speed and consolidated
 227:costas2_impl.cc ****           x1 = fabsf(d_error+1);
 228:costas2_impl.cc ****           x2 = fabsf(d_error-1);
 229:costas2_impl.cc ****           x1 -= x2;
 230:costas2_impl.cc ****           d_error = 0.5*x1;
 231:costas2_impl.cc **** 		  */
 232:costas2_impl.cc ****           d_error = 0.5 * (fabsf(d_error+1) - fabsf(d_error-1));
 4661              		.loc 22 232 0
 4662 0f3e 488B45C8 		movq	-56(%rbp), %rax
 4663 0f42 F30F1048 		movss	12(%rax), %xmm1
 4663      0C
 4664 0f47 F30F1005 		movss	.LC5(%rip), %xmm0
 4664      00000000 
 4665 0f4f F30F58C1 		addss	%xmm1, %xmm0
 4666 0f53 F30F100D 		movss	.LC0(%rip), %xmm1
 4666      00000000 
 4667 0f5b 0F54C1   		andps	%xmm1, %xmm0
 4668 0f5e 488B45C8 		movq	-56(%rbp), %rax
 4669 0f62 F30F1048 		movss	12(%rax), %xmm1
 4669      0C
 4670 0f67 F30F1015 		movss	.LC5(%rip), %xmm2
 4670      00000000 
 4671 0f6f F30F5CCA 		subss	%xmm2, %xmm1
 4672 0f73 F30F1015 		movss	.LC0(%rip), %xmm2
 4672      00000000 
 4673 0f7b 0F54CA   		andps	%xmm2, %xmm1
 4674 0f7e F30F5CC1 		subss	%xmm1, %xmm0
 4675 0f82 F30F100D 		movss	.LC3(%rip), %xmm1
 4675      00000000 
 4676 0f8a F30F59C1 		mulss	%xmm1, %xmm0
 4677 0f8e 488B45C8 		movq	-56(%rbp), %rax
 4678 0f92 F30F1140 		movss	%xmm0, 12(%rax)
 4678      0C
 233:costas2_impl.cc **** 
 234:costas2_impl.cc ****           //advance_loop(d_error);
 235:costas2_impl.cc **** #if defined(__FMA__)
 236:costas2_impl.cc ****           d_freq = __builtin_fmaf(d_beta,d_error,d_freq);
 237:costas2_impl.cc **** #else
 238:costas2_impl.cc ****           d_freq = d_beta * d_error + d_freq;
 4679              		.loc 22 238 0
 4680 0f97 488B45C8 		movq	-56(%rbp), %rax
 4681 0f9b 488B00   		movq	(%rax), %rax
 4682 0f9e 4883E820 		subq	$32, %rax
 4683 0fa2 488B00   		movq	(%rax), %rax
 4684 0fa5 4889C2   		movq	%rax, %rdx
 4685 0fa8 488B45C8 		movq	-56(%rbp), %rax
 4686 0fac 4801C2   		addq	%rax, %rdx
 4687 0faf 488B45C8 		movq	-56(%rbp), %rax
GAS LISTING /tmp/ccsIN87E.s 			page 205


 4688 0fb3 488B00   		movq	(%rax), %rax
 4689 0fb6 4883E820 		subq	$32, %rax
 4690 0fba 488B00   		movq	(%rax), %rax
 4691 0fbd 4889C1   		movq	%rax, %rcx
 4692 0fc0 488B45C8 		movq	-56(%rbp), %rax
 4693 0fc4 4801C8   		addq	%rcx, %rax
 4694 0fc7 F30F1048 		movss	36(%rax), %xmm1
 4694      24
 4695 0fcc 488B45C8 		movq	-56(%rbp), %rax
 4696 0fd0 F30F1040 		movss	12(%rax), %xmm0
 4696      0C
 4697 0fd5 F30F59C1 		mulss	%xmm1, %xmm0
 4698 0fd9 488B45C8 		movq	-56(%rbp), %rax
 4699 0fdd 488B00   		movq	(%rax), %rax
 4700 0fe0 4883E820 		subq	$32, %rax
 4701 0fe4 488B00   		movq	(%rax), %rax
 4702 0fe7 4889C1   		movq	%rax, %rcx
 4703 0fea 488B45C8 		movq	-56(%rbp), %rax
 4704 0fee 4801C8   		addq	%rcx, %rax
 4705 0ff1 F30F1048 		movss	12(%rax), %xmm1
 4705      0C
 4706 0ff6 F30F58C1 		addss	%xmm1, %xmm0
 4707 0ffa F30F1142 		movss	%xmm0, 12(%rdx)
 4707      0C
 239:costas2_impl.cc **** #endif
 240:costas2_impl.cc ****           //d_freq = __builtin_fmaf(d_beta,d_error,d_freq);
 241:costas2_impl.cc ****           // This line is causing one of the greatest performance drops!  100 Msps -> 33 Msps!
 242:costas2_impl.cc **** #if defined(__FMA__)
 243:costas2_impl.cc ****           d_phase += __builtin_fmaf(d_alpha,d_error,d_freq);
 244:costas2_impl.cc **** #else
 245:costas2_impl.cc ****           d_phase = d_alpha * d_error + d_phase + d_freq;
 4708              		.loc 22 245 0
 4709 0fff 488B45C8 		movq	-56(%rbp), %rax
 4710 1003 488B00   		movq	(%rax), %rax
 4711 1006 4883E820 		subq	$32, %rax
 4712 100a 488B00   		movq	(%rax), %rax
 4713 100d 4889C2   		movq	%rax, %rdx
 4714 1010 488B45C8 		movq	-56(%rbp), %rax
 4715 1014 4801C2   		addq	%rax, %rdx
 4716 1017 488B45C8 		movq	-56(%rbp), %rax
 4717 101b 488B00   		movq	(%rax), %rax
 4718 101e 4883E820 		subq	$32, %rax
 4719 1022 488B00   		movq	(%rax), %rax
 4720 1025 4889C1   		movq	%rax, %rcx
 4721 1028 488B45C8 		movq	-56(%rbp), %rax
 4722 102c 4801C8   		addq	%rcx, %rax
 4723 102f F30F1048 		movss	32(%rax), %xmm1
 4723      20
 4724 1034 488B45C8 		movq	-56(%rbp), %rax
 4725 1038 F30F1040 		movss	12(%rax), %xmm0
 4725      0C
 4726 103d F30F59C1 		mulss	%xmm1, %xmm0
 4727 1041 488B45C8 		movq	-56(%rbp), %rax
 4728 1045 488B00   		movq	(%rax), %rax
 4729 1048 4883E820 		subq	$32, %rax
 4730 104c 488B00   		movq	(%rax), %rax
 4731 104f 4889C1   		movq	%rax, %rcx
GAS LISTING /tmp/ccsIN87E.s 			page 206


 4732 1052 488B45C8 		movq	-56(%rbp), %rax
 4733 1056 4801C8   		addq	%rcx, %rax
 4734 1059 F30F1048 		movss	8(%rax), %xmm1
 4734      08
 4735 105e F30F58C1 		addss	%xmm1, %xmm0
 4736 1062 488B45C8 		movq	-56(%rbp), %rax
 4737 1066 488B00   		movq	(%rax), %rax
 4738 1069 4883E820 		subq	$32, %rax
 4739 106d 488B00   		movq	(%rax), %rax
 4740 1070 4889C1   		movq	%rax, %rcx
 4741 1073 488B45C8 		movq	-56(%rbp), %rax
 4742 1077 4801C8   		addq	%rcx, %rax
 4743 107a F30F1048 		movss	12(%rax), %xmm1
 4743      0C
 4744 107f F30F58C1 		addss	%xmm1, %xmm0
 4745 1083 F30F1142 		movss	%xmm0, 8(%rdx)
 4745      08
 246:costas2_impl.cc **** #endif
 247:costas2_impl.cc ****           // d_phase = d_phase + d_freq + d_alpha * d_error;
 248:costas2_impl.cc ****           // d_phase = d_phase + __builtin_fmaf(d_alpha,d_error,d_freq);
 249:costas2_impl.cc **** 
 250:costas2_impl.cc ****           //phase_wrap();
 251:costas2_impl.cc ****           if (d_phase > CL_TWO_PI) {
 4746              		.loc 22 251 0
 4747 1088 488B45C8 		movq	-56(%rbp), %rax
 4748 108c 488B00   		movq	(%rax), %rax
 4749 108f 4883E820 		subq	$32, %rax
 4750 1093 488B00   		movq	(%rax), %rax
 4751 1096 4889C2   		movq	%rax, %rdx
 4752 1099 488B45C8 		movq	-56(%rbp), %rax
 4753 109d 4801D0   		addq	%rdx, %rax
 4754 10a0 F30F1040 		movss	8(%rax), %xmm0
 4754      08
 4755 10a5 F30F5AC0 		cvtss2sd	%xmm0, %xmm0
 4756 10a9 660F2E05 		ucomisd	.LC11(%rip), %xmm0
 4756      00000000 
 4757 10b1 767F     		jbe	.L200
 4758              	.L186:
 252:costas2_impl.cc ****   			while(d_phase>CL_TWO_PI) {
 4759              		.loc 22 252 0
 4760 10b3 488B45C8 		movq	-56(%rbp), %rax
 4761 10b7 488B00   		movq	(%rax), %rax
 4762 10ba 4883E820 		subq	$32, %rax
 4763 10be 488B00   		movq	(%rax), %rax
 4764 10c1 4889C2   		movq	%rax, %rdx
 4765 10c4 488B45C8 		movq	-56(%rbp), %rax
 4766 10c8 4801D0   		addq	%rdx, %rax
 4767 10cb F30F1040 		movss	8(%rax), %xmm0
 4767      08
 4768 10d0 F30F5AC0 		cvtss2sd	%xmm0, %xmm0
 4769 10d4 660F2E05 		ucomisd	.LC11(%rip), %xmm0
 4769      00000000 
 4770 10dc 0F86FE00 		jbe	.L184
 4770      0000
 253:costas2_impl.cc ****   			  d_phase -= CL_TWO_PI;
 4771              		.loc 22 253 0
 4772 10e2 488B45C8 		movq	-56(%rbp), %rax
GAS LISTING /tmp/ccsIN87E.s 			page 207


 4773 10e6 488B00   		movq	(%rax), %rax
 4774 10e9 4883E820 		subq	$32, %rax
 4775 10ed 488B00   		movq	(%rax), %rax
 4776 10f0 4889C2   		movq	%rax, %rdx
 4777 10f3 488B45C8 		movq	-56(%rbp), %rax
 4778 10f7 4801C2   		addq	%rax, %rdx
 4779 10fa 488B45C8 		movq	-56(%rbp), %rax
 4780 10fe 488B00   		movq	(%rax), %rax
 4781 1101 4883E820 		subq	$32, %rax
 4782 1105 488B00   		movq	(%rax), %rax
 4783 1108 4889C1   		movq	%rax, %rcx
 4784 110b 488B45C8 		movq	-56(%rbp), %rax
 4785 110f 4801C8   		addq	%rcx, %rax
 4786 1112 F30F1040 		movss	8(%rax), %xmm0
 4786      08
 4787 1117 F30F5AC0 		cvtss2sd	%xmm0, %xmm0
 4788 111b F20F100D 		movsd	.LC11(%rip), %xmm1
 4788      00000000 
 4789 1123 F20F5CC1 		subsd	%xmm1, %xmm0
 4790 1127 F20F5AC0 		cvtsd2ss	%xmm0, %xmm0
 4791 112b F30F1142 		movss	%xmm0, 8(%rdx)
 4791      08
 252:costas2_impl.cc ****   			while(d_phase>CL_TWO_PI) {
 4792              		.loc 22 252 0
 4793 1130 EB81     		jmp	.L186
 4794              	.L200:
 254:costas2_impl.cc ****   			}
 255:costas2_impl.cc ****           }
 256:costas2_impl.cc ****           else if (d_phase < CL_MINUS_TWO_PI) {
 4795              		.loc 22 256 0
 4796 1132 488B45C8 		movq	-56(%rbp), %rax
 4797 1136 488B00   		movq	(%rax), %rax
 4798 1139 4883E820 		subq	$32, %rax
 4799 113d 488B00   		movq	(%rax), %rax
 4800 1140 4889C2   		movq	%rax, %rdx
 4801 1143 488B45C8 		movq	-56(%rbp), %rax
 4802 1147 4801D0   		addq	%rdx, %rax
 4803 114a F30F1040 		movss	8(%rax), %xmm0
 4803      08
 4804 114f F30F5AC0 		cvtss2sd	%xmm0, %xmm0
 4805 1153 F20F100D 		movsd	.LC12(%rip), %xmm1
 4805      00000000 
 4806 115b 660F2EC8 		ucomisd	%xmm0, %xmm1
 4807 115f 767F     		jbe	.L184
 4808              	.L189:
 257:costas2_impl.cc ****   			while(d_phase < CL_MINUS_TWO_PI) {
 4809              		.loc 22 257 0
 4810 1161 488B45C8 		movq	-56(%rbp), %rax
 4811 1165 488B00   		movq	(%rax), %rax
 4812 1168 4883E820 		subq	$32, %rax
 4813 116c 488B00   		movq	(%rax), %rax
 4814 116f 4889C2   		movq	%rax, %rdx
 4815 1172 488B45C8 		movq	-56(%rbp), %rax
 4816 1176 4801D0   		addq	%rdx, %rax
 4817 1179 F30F1040 		movss	8(%rax), %xmm0
 4817      08
 4818 117e F30F5AC0 		cvtss2sd	%xmm0, %xmm0
GAS LISTING /tmp/ccsIN87E.s 			page 208


 4819 1182 F20F100D 		movsd	.LC12(%rip), %xmm1
 4819      00000000 
 4820 118a 660F2EC8 		ucomisd	%xmm0, %xmm1
 4821 118e 7650     		jbe	.L184
 258:costas2_impl.cc ****   			  d_phase += CL_TWO_PI;
 4822              		.loc 22 258 0
 4823 1190 488B45C8 		movq	-56(%rbp), %rax
 4824 1194 488B00   		movq	(%rax), %rax
 4825 1197 4883E820 		subq	$32, %rax
 4826 119b 488B00   		movq	(%rax), %rax
 4827 119e 4889C2   		movq	%rax, %rdx
 4828 11a1 488B45C8 		movq	-56(%rbp), %rax
 4829 11a5 4801C2   		addq	%rax, %rdx
 4830 11a8 488B45C8 		movq	-56(%rbp), %rax
 4831 11ac 488B00   		movq	(%rax), %rax
 4832 11af 4883E820 		subq	$32, %rax
 4833 11b3 488B00   		movq	(%rax), %rax
 4834 11b6 4889C1   		movq	%rax, %rcx
 4835 11b9 488B45C8 		movq	-56(%rbp), %rax
 4836 11bd 4801C8   		addq	%rcx, %rax
 4837 11c0 F30F1040 		movss	8(%rax), %xmm0
 4837      08
 4838 11c5 F30F5AC0 		cvtss2sd	%xmm0, %xmm0
 4839 11c9 F20F100D 		movsd	.LC11(%rip), %xmm1
 4839      00000000 
 4840 11d1 F20F58C1 		addsd	%xmm1, %xmm0
 4841 11d5 F20F5AC0 		cvtsd2ss	%xmm0, %xmm0
 4842 11d9 F30F1142 		movss	%xmm0, 8(%rdx)
 4842      08
 257:costas2_impl.cc ****   			while(d_phase < CL_MINUS_TWO_PI) {
 4843              		.loc 22 257 0
 4844 11de EB81     		jmp	.L189
 4845              	.L184:
 259:costas2_impl.cc ****   			}
 260:costas2_impl.cc ****           }
 261:costas2_impl.cc **** 
 262:costas2_impl.cc ****           //frequency_limit();
 263:costas2_impl.cc ****           if(d_freq > d_max_freq)
 4846              		.loc 22 263 0
 4847 11e0 488B45C8 		movq	-56(%rbp), %rax
 4848 11e4 488B00   		movq	(%rax), %rax
 4849 11e7 4883E820 		subq	$32, %rax
 4850 11eb 488B00   		movq	(%rax), %rax
 4851 11ee 4889C2   		movq	%rax, %rdx
 4852 11f1 488B45C8 		movq	-56(%rbp), %rax
 4853 11f5 4801D0   		addq	%rdx, %rax
 4854 11f8 F30F1040 		movss	12(%rax), %xmm0
 4854      0C
 4855 11fd 488B45C8 		movq	-56(%rbp), %rax
 4856 1201 488B00   		movq	(%rax), %rax
 4857 1204 4883E820 		subq	$32, %rax
 4858 1208 488B00   		movq	(%rax), %rax
 4859 120b 4889C2   		movq	%rax, %rdx
 4860 120e 488B45C8 		movq	-56(%rbp), %rax
 4861 1212 4801D0   		addq	%rdx, %rax
 4862 1215 F30F1048 		movss	16(%rax), %xmm1
 4862      10
GAS LISTING /tmp/ccsIN87E.s 			page 209


 4863 121a 0F2EC1   		ucomiss	%xmm1, %xmm0
 4864 121d 763C     		jbe	.L201
 264:costas2_impl.cc ****             d_freq = d_max_freq;
 4865              		.loc 22 264 0
 4866 121f 488B45C8 		movq	-56(%rbp), %rax
 4867 1223 488B00   		movq	(%rax), %rax
 4868 1226 4883E820 		subq	$32, %rax
 4869 122a 488B00   		movq	(%rax), %rax
 4870 122d 4889C2   		movq	%rax, %rdx
 4871 1230 488B45C8 		movq	-56(%rbp), %rax
 4872 1234 4801C2   		addq	%rax, %rdx
 4873 1237 488B45C8 		movq	-56(%rbp), %rax
 4874 123b 488B00   		movq	(%rax), %rax
 4875 123e 4883E820 		subq	$32, %rax
 4876 1242 488B00   		movq	(%rax), %rax
 4877 1245 4889C1   		movq	%rax, %rcx
 4878 1248 488B45C8 		movq	-56(%rbp), %rax
 4879 124c 4801C8   		addq	%rcx, %rax
 4880 124f F30F1040 		movss	16(%rax), %xmm0
 4880      10
 4881 1254 F30F1142 		movss	%xmm0, 12(%rdx)
 4881      0C
 4882 1259 EB79     		jmp	.L192
 4883              	.L201:
 265:costas2_impl.cc ****           else if(d_freq < d_min_freq)
 4884              		.loc 22 265 0
 4885 125b 488B45C8 		movq	-56(%rbp), %rax
 4886 125f 488B00   		movq	(%rax), %rax
 4887 1262 4883E820 		subq	$32, %rax
 4888 1266 488B00   		movq	(%rax), %rax
 4889 1269 4889C2   		movq	%rax, %rdx
 4890 126c 488B45C8 		movq	-56(%rbp), %rax
 4891 1270 4801D0   		addq	%rdx, %rax
 4892 1273 F30F1048 		movss	12(%rax), %xmm1
 4892      0C
 4893 1278 488B45C8 		movq	-56(%rbp), %rax
 4894 127c 488B00   		movq	(%rax), %rax
 4895 127f 4883E820 		subq	$32, %rax
 4896 1283 488B00   		movq	(%rax), %rax
 4897 1286 4889C2   		movq	%rax, %rdx
 4898 1289 488B45C8 		movq	-56(%rbp), %rax
 4899 128d 4801D0   		addq	%rdx, %rax
 4900 1290 F30F1040 		movss	20(%rax), %xmm0
 4900      14
 4901 1295 0F2EC1   		ucomiss	%xmm1, %xmm0
 4902 1298 763A     		jbe	.L192
 266:costas2_impl.cc ****             d_freq = d_min_freq;
 4903              		.loc 22 266 0
 4904 129a 488B45C8 		movq	-56(%rbp), %rax
 4905 129e 488B00   		movq	(%rax), %rax
 4906 12a1 4883E820 		subq	$32, %rax
 4907 12a5 488B00   		movq	(%rax), %rax
 4908 12a8 4889C2   		movq	%rax, %rdx
 4909 12ab 488B45C8 		movq	-56(%rbp), %rax
 4910 12af 4801C2   		addq	%rax, %rdx
 4911 12b2 488B45C8 		movq	-56(%rbp), %rax
 4912 12b6 488B00   		movq	(%rax), %rax
GAS LISTING /tmp/ccsIN87E.s 			page 210


 4913 12b9 4883E820 		subq	$32, %rax
 4914 12bd 488B00   		movq	(%rax), %rax
 4915 12c0 4889C1   		movq	%rax, %rcx
 4916 12c3 488B45C8 		movq	-56(%rbp), %rax
 4917 12c7 4801C8   		addq	%rcx, %rax
 4918 12ca F30F1040 		movss	20(%rax), %xmm0
 4918      14
 4919 12cf F30F1142 		movss	%xmm0, 12(%rdx)
 4919      0C
 4920              	.L192:
 194:costas2_impl.cc ****           // nco_out = gr_expj(-d_phase);
 4921              		.loc 22 194 0 discriminator 2
 4922 12d4 8345FC01 		addl	$1, -4(%rbp)
 4923 12d8 E927FBFF 		jmp	.L194
 4923      FF
 4924              	.L181:
 267:costas2_impl.cc **** 
 268:costas2_impl.cc ****         /*
 269:costas2_impl.cc ****          * original code
 270:costas2_impl.cc **** 		nco_out = gr_expj(-d_phase);
 271:costas2_impl.cc **** 		optr[i] = iptr[i] * nco_out;
 272:costas2_impl.cc **** 
 273:costas2_impl.cc **** 		d_error = (*this.*d_phase_detector)(optr[i]);
 274:costas2_impl.cc **** 		d_error = gr::branchless_clip(d_error, 1.0);
 275:costas2_impl.cc **** 
 276:costas2_impl.cc **** 		advance_loop(d_error);
 277:costas2_impl.cc **** 		phase_wrap();
 278:costas2_impl.cc **** 		frequency_limit();
 279:costas2_impl.cc ****          */
 280:costas2_impl.cc **** 
 281:costas2_impl.cc ****         }
 282:costas2_impl.cc **** 
 283:costas2_impl.cc ****         return noutput_items;
 4925              		.loc 22 283 0
 4926 12dd 8B45C4   		movl	-60(%rbp), %eax
 284:costas2_impl.cc ****     }
 4927              		.loc 22 284 0
 4928 12e0 C9       		leave
 4929              		.cfi_def_cfa 7, 8
 4930 12e1 C3       		ret
 4931              		.cfi_endproc
 4932              	.LFE10978:
 4934              		.align 2
 4935              		.globl	_ZN2gr5lfast12costas2_impl4workEiRSt6vectorIPKvSaIS4_EERS2_IPvSaIS8_EE
 4937              	_ZN2gr5lfast12costas2_impl4workEiRSt6vectorIPKvSaIS4_EERS2_IPvSaIS8_EE:
 4938              	.LFB10979:
 285:costas2_impl.cc **** 
 286:costas2_impl.cc ****     int
 287:costas2_impl.cc ****     costas2_impl::work(int noutput_items,
 288:costas2_impl.cc ****         gr_vector_const_void_star &input_items,
 289:costas2_impl.cc ****         gr_vector_void_star &output_items)
 290:costas2_impl.cc ****     {
 4939              		.loc 22 290 0
 4940              		.cfi_startproc
 4941 12e2 55       		pushq	%rbp
 4942              		.cfi_def_cfa_offset 16
 4943              		.cfi_offset 6, -16
GAS LISTING /tmp/ccsIN87E.s 			page 211


 4944 12e3 4889E5   		movq	%rsp, %rbp
 4945              		.cfi_def_cfa_register 6
 4946 12e6 4883EC50 		subq	$80, %rsp
 4947 12ea 48897DC8 		movq	%rdi, -56(%rbp)
 4948 12ee 8975C4   		movl	%esi, -60(%rbp)
 4949 12f1 488955B8 		movq	%rdx, -72(%rbp)
 4950 12f5 48894DB0 		movq	%rcx, -80(%rbp)
 291:costas2_impl.cc ****         // const gr_complex *iptr = (gr_complex *) input_items[0];
 292:costas2_impl.cc ****         // gr_complex *optr = (gr_complex *) output_items[0];
 293:costas2_impl.cc ****         const SComplex *iptr = (SComplex *) input_items[0];
 4951              		.loc 22 293 0
 4952 12f9 488B45B8 		movq	-72(%rbp), %rax
 4953 12fd BE000000 		movl	$0, %esi
 4953      00
 4954 1302 4889C7   		movq	%rax, %rdi
 4955 1305 E8000000 		call	_ZNSt6vectorIPKvSaIS1_EEixEm
 4955      00
 4956 130a 488B00   		movq	(%rax), %rax
 4957 130d 488945F0 		movq	%rax, -16(%rbp)
 294:costas2_impl.cc ****         SComplex *optr = (SComplex *) output_items[0];
 4958              		.loc 22 294 0
 4959 1311 488B45B0 		movq	-80(%rbp), %rax
 4960 1315 BE000000 		movl	$0, %esi
 4960      00
 4961 131a 4889C7   		movq	%rax, %rdi
 4962 131d E8000000 		call	_ZNSt6vectorIPvSaIS0_EEixEm
 4962      00
 4963 1322 488B00   		movq	(%rax), %rax
 4964 1325 488945E8 		movq	%rax, -24(%rbp)
 295:costas2_impl.cc ****         // gr_complex nco_out;
 296:costas2_impl.cc ****         float i_r,i_i,n_r,n_i,o_r,o_i;
 297:costas2_impl.cc ****         // float x1,x2;
 298:costas2_impl.cc ****         int i;
 299:costas2_impl.cc ****         // float angle_rad,sin,cos;
 300:costas2_impl.cc **** 
 301:costas2_impl.cc ****         // gr_complex nco_out;
 302:costas2_impl.cc **** 
 303:costas2_impl.cc ****         for(i = 0; i < noutput_items; i++) {
 4965              		.loc 22 303 0
 4966 1329 C745FC00 		movl	$0, -4(%rbp)
 4966      000000
 4967              	.L216:
 4968              		.loc 22 303 0 is_stmt 0 discriminator 1
 4969 1330 8B45FC   		movl	-4(%rbp), %eax
 4970 1333 3B45C4   		cmpl	-60(%rbp), %eax
 4971 1336 0F8DCE04 		jge	.L203
 4971      0000
 304:costas2_impl.cc ****           // nco_out = gr_expj(-d_phase);
 305:costas2_impl.cc ****       	  // returns this:  nco_out.real = n_r, nco_out.imag = n_i
 306:costas2_impl.cc ****          // Trig functions killing performance.  Tried a number of replacement options but no luck:
 307:costas2_impl.cc ****         	// gnuradio lookup functions - expensive with float_to_fixed in each iteration
 308:costas2_impl.cc ****         	// Tried rolling our own lookup tables - Same performance as straight trig
 309:costas2_impl.cc ****         	// Tried quadratic curve inline approximation - Tiny bit faster
 310:costas2_impl.cc ****        	 // gr::sincosf(-d_phase, &n_i, &n_r);
 311:costas2_impl.cc **** 			n_i = sinf(-d_phase);
 4972              		.loc 22 311 0 is_stmt 1
 4973 133c 488B45C8 		movq	-56(%rbp), %rax
GAS LISTING /tmp/ccsIN87E.s 			page 212


 4974 1340 488B00   		movq	(%rax), %rax
 4975 1343 4883E820 		subq	$32, %rax
 4976 1347 488B00   		movq	(%rax), %rax
 4977 134a 4889C2   		movq	%rax, %rdx
 4978 134d 488B45C8 		movq	-56(%rbp), %rax
 4979 1351 4801D0   		addq	%rdx, %rax
 4980 1354 F30F1048 		movss	8(%rax), %xmm1
 4980      08
 4981 1359 F30F1005 		movss	.LC10(%rip), %xmm0
 4981      00000000 
 4982 1361 0F57C1   		xorps	%xmm1, %xmm0
 4983 1364 E8000000 		call	sinf@PLT
 4983      00
 4984 1369 660F7EC0 		movd	%xmm0, %eax
 4985 136d 8945E4   		movl	%eax, -28(%rbp)
 312:costas2_impl.cc **** 			n_r = cosf(-d_phase);
 4986              		.loc 22 312 0
 4987 1370 488B45C8 		movq	-56(%rbp), %rax
 4988 1374 488B00   		movq	(%rax), %rax
 4989 1377 4883E820 		subq	$32, %rax
 4990 137b 488B00   		movq	(%rax), %rax
 4991 137e 4889C2   		movq	%rax, %rdx
 4992 1381 488B45C8 		movq	-56(%rbp), %rax
 4993 1385 4801D0   		addq	%rdx, %rax
 4994 1388 F30F1048 		movss	8(%rax), %xmm1
 4994      08
 4995 138d F30F1005 		movss	.LC10(%rip), %xmm0
 4995      00000000 
 4996 1395 0F57C1   		xorps	%xmm1, %xmm0
 4997 1398 E8000000 		call	cosf@PLT
 4997      00
 4998 139d 660F7EC0 		movd	%xmm0, %eax
 4999 13a1 8945E0   		movl	%eax, -32(%rbp)
 313:costas2_impl.cc **** 
 314:costas2_impl.cc ****           //optr[i] = iptr[i] * nco_out;
 315:costas2_impl.cc **** 
 316:costas2_impl.cc ****           // FMA stands for fused multiply-add operations where FMA(a,b,c)=(a*b)+c and it does it a
 317:costas2_impl.cc **** #if defined(__FMA__)
 318:costas2_impl.cc ****           o_r = __builtin_fmaf(iptr[i].real,n_r,-iptr[i].imag*n_i);
 319:costas2_impl.cc ****           o_i = __builtin_fmaf(iptr[i].real,n_i,iptr[i].imag*n_r);
 320:costas2_impl.cc **** #else
 321:costas2_impl.cc ****           i_r = iptr[i].real;
 5000              		.loc 22 321 0
 5001 13a4 8B45FC   		movl	-4(%rbp), %eax
 5002 13a7 4898     		cltq
 5003 13a9 488D14C5 		leaq	0(,%rax,8), %rdx
 5003      00000000 
 5004 13b1 488B45F0 		movq	-16(%rbp), %rax
 5005 13b5 4801D0   		addq	%rdx, %rax
 5006 13b8 F30F1000 		movss	(%rax), %xmm0
 5007 13bc F30F1145 		movss	%xmm0, -36(%rbp)
 5007      DC
 322:costas2_impl.cc ****           i_i = iptr[i].imag;
 5008              		.loc 22 322 0
 5009 13c1 8B45FC   		movl	-4(%rbp), %eax
 5010 13c4 4898     		cltq
 5011 13c6 488D14C5 		leaq	0(,%rax,8), %rdx
GAS LISTING /tmp/ccsIN87E.s 			page 213


 5011      00000000 
 5012 13ce 488B45F0 		movq	-16(%rbp), %rax
 5013 13d2 4801D0   		addq	%rdx, %rax
 5014 13d5 F30F1040 		movss	4(%rax), %xmm0
 5014      04
 5015 13da F30F1145 		movss	%xmm0, -40(%rbp)
 5015      D8
 323:costas2_impl.cc ****           o_r = (i_r * n_r) - (i_i*n_i);
 5016              		.loc 22 323 0
 5017 13df F30F1045 		movss	-36(%rbp), %xmm0
 5017      DC
 5018 13e4 F30F5945 		mulss	-32(%rbp), %xmm0
 5018      E0
 5019 13e9 F30F104D 		movss	-40(%rbp), %xmm1
 5019      D8
 5020 13ee F30F594D 		mulss	-28(%rbp), %xmm1
 5020      E4
 5021 13f3 F30F5CC1 		subss	%xmm1, %xmm0
 5022 13f7 F30F1145 		movss	%xmm0, -44(%rbp)
 5022      D4
 324:costas2_impl.cc ****           o_i = (i_r * n_i) + (i_i * n_r);
 5023              		.loc 22 324 0
 5024 13fc F30F1045 		movss	-36(%rbp), %xmm0
 5024      DC
 5025 1401 0F28C8   		movaps	%xmm0, %xmm1
 5026 1404 F30F594D 		mulss	-28(%rbp), %xmm1
 5026      E4
 5027 1409 F30F1045 		movss	-40(%rbp), %xmm0
 5027      D8
 5028 140e F30F5945 		mulss	-32(%rbp), %xmm0
 5028      E0
 5029 1413 F30F58C1 		addss	%xmm1, %xmm0
 5030 1417 F30F1145 		movss	%xmm0, -48(%rbp)
 5030      D0
 325:costas2_impl.cc **** #endif
 326:costas2_impl.cc **** 
 327:costas2_impl.cc ****           optr[i].real = o_r;
 5031              		.loc 22 327 0
 5032 141c 8B45FC   		movl	-4(%rbp), %eax
 5033 141f 4898     		cltq
 5034 1421 488D14C5 		leaq	0(,%rax,8), %rdx
 5034      00000000 
 5035 1429 488B45E8 		movq	-24(%rbp), %rax
 5036 142d 4801D0   		addq	%rdx, %rax
 5037 1430 F30F1045 		movss	-44(%rbp), %xmm0
 5037      D4
 5038 1435 F30F1100 		movss	%xmm0, (%rax)
 328:costas2_impl.cc ****           optr[i].imag = o_i;
 5039              		.loc 22 328 0
 5040 1439 8B45FC   		movl	-4(%rbp), %eax
 5041 143c 4898     		cltq
 5042 143e 488D14C5 		leaq	0(,%rax,8), %rdx
 5042      00000000 
 5043 1446 488B45E8 		movq	-24(%rbp), %rax
 5044 144a 4801D0   		addq	%rdx, %rax
 5045 144d F30F1045 		movss	-48(%rbp), %xmm0
 5045      D0
GAS LISTING /tmp/ccsIN87E.s 			page 214


 5046 1452 F30F1140 		movss	%xmm0, 4(%rax)
 5046      04
 329:costas2_impl.cc **** 
 330:costas2_impl.cc ****           //d_error = (*this.*d_phase_detector)(optr[i]);
 331:costas2_impl.cc ****           // 2nd order in-place
 332:costas2_impl.cc ****           d_error = o_r*o_i;
 5047              		.loc 22 332 0
 5048 1457 F30F1045 		movss	-44(%rbp), %xmm0
 5048      D4
 5049 145c F30F5945 		mulss	-48(%rbp), %xmm0
 5049      D0
 5050 1461 488B45C8 		movq	-56(%rbp), %rax
 5051 1465 F30F1140 		movss	%xmm0, 12(%rax)
 5051      0C
 333:costas2_impl.cc **** 
 334:costas2_impl.cc ****           // d_error = gr::branchless_clip(d_error, 1.0);
 335:costas2_impl.cc ****           /*  Taken out for speed and consolidated
 336:costas2_impl.cc ****           x1 = fabsf(d_error+1);
 337:costas2_impl.cc ****           x2 = fabsf(d_error-1);
 338:costas2_impl.cc ****           x1 -= x2;
 339:costas2_impl.cc ****           d_error = 0.5*x1;
 340:costas2_impl.cc **** 		  */
 341:costas2_impl.cc **** 
 342:costas2_impl.cc ****           // d_error = 0.5 * (fabsf(d_error+1) - fabsf(d_error-1));
 343:costas2_impl.cc **** 
 344:costas2_impl.cc ****           // See http://stackoverflow.com/questions/23474796/is-there-a-fast-fabsf-replacement-for-
 345:costas2_impl.cc ****           // for some notes on fabs performance
 346:costas2_impl.cc ****           d_error = 0.5 * (std::abs(d_error+1) - std::abs(d_error-1));
 5052              		.loc 22 346 0
 5053 146a 488B45C8 		movq	-56(%rbp), %rax
 5054 146e F30F1048 		movss	12(%rax), %xmm1
 5054      0C
 5055 1473 F30F1005 		movss	.LC5(%rip), %xmm0
 5055      00000000 
 5056 147b F30F58C1 		addss	%xmm1, %xmm0
 5057 147f E8000000 		call	_ZSt3absf
 5057      00
 5058 1484 F30F1145 		movss	%xmm0, -64(%rbp)
 5058      C0
 5059 1489 488B45C8 		movq	-56(%rbp), %rax
 5060 148d F30F1040 		movss	12(%rax), %xmm0
 5060      0C
 5061 1492 F30F100D 		movss	.LC5(%rip), %xmm1
 5061      00000000 
 5062 149a F30F5CC1 		subss	%xmm1, %xmm0
 5063 149e E8000000 		call	_ZSt3absf
 5063      00
 5064 14a3 F30F1055 		movss	-64(%rbp), %xmm2
 5064      C0
 5065 14a8 F30F5CD0 		subss	%xmm0, %xmm2
 5066 14ac 0F28C2   		movaps	%xmm2, %xmm0
 5067 14af F30F100D 		movss	.LC3(%rip), %xmm1
 5067      00000000 
 5068 14b7 F30F59C1 		mulss	%xmm1, %xmm0
 5069 14bb 488B45C8 		movq	-56(%rbp), %rax
 5070 14bf F30F1140 		movss	%xmm0, 12(%rax)
 5070      0C
GAS LISTING /tmp/ccsIN87E.s 			page 215


 347:costas2_impl.cc **** 
 348:costas2_impl.cc **** 
 349:costas2_impl.cc ****           //advance_loop(d_error);
 350:costas2_impl.cc **** #if defined(__FMA__)
 351:costas2_impl.cc ****           d_freq = __builtin_fmaf(d_beta,d_error,d_freq);
 352:costas2_impl.cc **** #else
 353:costas2_impl.cc ****           d_freq = d_beta * d_error + d_freq;
 5071              		.loc 22 353 0
 5072 14c4 488B45C8 		movq	-56(%rbp), %rax
 5073 14c8 488B00   		movq	(%rax), %rax
 5074 14cb 4883E820 		subq	$32, %rax
 5075 14cf 488B00   		movq	(%rax), %rax
 5076 14d2 4889C2   		movq	%rax, %rdx
 5077 14d5 488B45C8 		movq	-56(%rbp), %rax
 5078 14d9 4801C2   		addq	%rax, %rdx
 5079 14dc 488B45C8 		movq	-56(%rbp), %rax
 5080 14e0 488B00   		movq	(%rax), %rax
 5081 14e3 4883E820 		subq	$32, %rax
 5082 14e7 488B00   		movq	(%rax), %rax
 5083 14ea 4889C1   		movq	%rax, %rcx
 5084 14ed 488B45C8 		movq	-56(%rbp), %rax
 5085 14f1 4801C8   		addq	%rcx, %rax
 5086 14f4 F30F1048 		movss	36(%rax), %xmm1
 5086      24
 5087 14f9 488B45C8 		movq	-56(%rbp), %rax
 5088 14fd F30F1040 		movss	12(%rax), %xmm0
 5088      0C
 5089 1502 F30F59C1 		mulss	%xmm1, %xmm0
 5090 1506 488B45C8 		movq	-56(%rbp), %rax
 5091 150a 488B00   		movq	(%rax), %rax
 5092 150d 4883E820 		subq	$32, %rax
 5093 1511 488B00   		movq	(%rax), %rax
 5094 1514 4889C1   		movq	%rax, %rcx
 5095 1517 488B45C8 		movq	-56(%rbp), %rax
 5096 151b 4801C8   		addq	%rcx, %rax
 5097 151e F30F1048 		movss	12(%rax), %xmm1
 5097      0C
 5098 1523 F30F58C1 		addss	%xmm1, %xmm0
 5099 1527 F30F1142 		movss	%xmm0, 12(%rdx)
 5099      0C
 354:costas2_impl.cc **** #endif
 355:costas2_impl.cc ****           //d_freq = __builtin_fmaf(d_beta,d_error,d_freq);
 356:costas2_impl.cc ****           // This line is causing one of the greatest performance drops!  100 Msps -> 33 Msps!
 357:costas2_impl.cc **** #if defined(__FMA__)
 358:costas2_impl.cc ****           d_phase += __builtin_fmaf(d_alpha,d_error,d_freq);
 359:costas2_impl.cc **** #else
 360:costas2_impl.cc ****           d_phase = d_alpha * d_error + d_phase + d_freq;
 5100              		.loc 22 360 0
 5101 152c 488B45C8 		movq	-56(%rbp), %rax
 5102 1530 488B00   		movq	(%rax), %rax
 5103 1533 4883E820 		subq	$32, %rax
 5104 1537 488B00   		movq	(%rax), %rax
 5105 153a 4889C2   		movq	%rax, %rdx
 5106 153d 488B45C8 		movq	-56(%rbp), %rax
 5107 1541 4801C2   		addq	%rax, %rdx
 5108 1544 488B45C8 		movq	-56(%rbp), %rax
 5109 1548 488B00   		movq	(%rax), %rax
GAS LISTING /tmp/ccsIN87E.s 			page 216


 5110 154b 4883E820 		subq	$32, %rax
 5111 154f 488B00   		movq	(%rax), %rax
 5112 1552 4889C1   		movq	%rax, %rcx
 5113 1555 488B45C8 		movq	-56(%rbp), %rax
 5114 1559 4801C8   		addq	%rcx, %rax
 5115 155c F30F1048 		movss	32(%rax), %xmm1
 5115      20
 5116 1561 488B45C8 		movq	-56(%rbp), %rax
 5117 1565 F30F1040 		movss	12(%rax), %xmm0
 5117      0C
 5118 156a F30F59C1 		mulss	%xmm1, %xmm0
 5119 156e 488B45C8 		movq	-56(%rbp), %rax
 5120 1572 488B00   		movq	(%rax), %rax
 5121 1575 4883E820 		subq	$32, %rax
 5122 1579 488B00   		movq	(%rax), %rax
 5123 157c 4889C1   		movq	%rax, %rcx
 5124 157f 488B45C8 		movq	-56(%rbp), %rax
 5125 1583 4801C8   		addq	%rcx, %rax
 5126 1586 F30F1048 		movss	8(%rax), %xmm1
 5126      08
 5127 158b F30F58C1 		addss	%xmm1, %xmm0
 5128 158f 488B45C8 		movq	-56(%rbp), %rax
 5129 1593 488B00   		movq	(%rax), %rax
 5130 1596 4883E820 		subq	$32, %rax
 5131 159a 488B00   		movq	(%rax), %rax
 5132 159d 4889C1   		movq	%rax, %rcx
 5133 15a0 488B45C8 		movq	-56(%rbp), %rax
 5134 15a4 4801C8   		addq	%rcx, %rax
 5135 15a7 F30F1048 		movss	12(%rax), %xmm1
 5135      0C
 5136 15ac F30F58C1 		addss	%xmm1, %xmm0
 5137 15b0 F30F1142 		movss	%xmm0, 8(%rdx)
 5137      08
 361:costas2_impl.cc **** #endif
 362:costas2_impl.cc ****           // d_phase = d_phase + d_freq + d_alpha * d_error;
 363:costas2_impl.cc ****           // d_phase = d_phase + __builtin_fmaf(d_alpha,d_error,d_freq);
 364:costas2_impl.cc **** 
 365:costas2_impl.cc ****           //phase_wrap();
 366:costas2_impl.cc ****           if (d_phase > CL_TWO_PI) {
 5138              		.loc 22 366 0
 5139 15b5 488B45C8 		movq	-56(%rbp), %rax
 5140 15b9 488B00   		movq	(%rax), %rax
 5141 15bc 4883E820 		subq	$32, %rax
 5142 15c0 488B00   		movq	(%rax), %rax
 5143 15c3 4889C2   		movq	%rax, %rdx
 5144 15c6 488B45C8 		movq	-56(%rbp), %rax
 5145 15ca 4801D0   		addq	%rdx, %rax
 5146 15cd F30F1040 		movss	8(%rax), %xmm0
 5146      08
 5147 15d2 F30F5AC0 		cvtss2sd	%xmm0, %xmm0
 5148 15d6 660F2E05 		ucomisd	.LC11(%rip), %xmm0
 5148      00000000 
 5149 15de 767F     		jbe	.L222
 5150              	.L208:
 367:costas2_impl.cc ****   			while(d_phase>CL_TWO_PI) {
 5151              		.loc 22 367 0
 5152 15e0 488B45C8 		movq	-56(%rbp), %rax
GAS LISTING /tmp/ccsIN87E.s 			page 217


 5153 15e4 488B00   		movq	(%rax), %rax
 5154 15e7 4883E820 		subq	$32, %rax
 5155 15eb 488B00   		movq	(%rax), %rax
 5156 15ee 4889C2   		movq	%rax, %rdx
 5157 15f1 488B45C8 		movq	-56(%rbp), %rax
 5158 15f5 4801D0   		addq	%rdx, %rax
 5159 15f8 F30F1040 		movss	8(%rax), %xmm0
 5159      08
 5160 15fd F30F5AC0 		cvtss2sd	%xmm0, %xmm0
 5161 1601 660F2E05 		ucomisd	.LC11(%rip), %xmm0
 5161      00000000 
 5162 1609 0F86FE00 		jbe	.L206
 5162      0000
 368:costas2_impl.cc ****   			  d_phase -= CL_TWO_PI;
 5163              		.loc 22 368 0
 5164 160f 488B45C8 		movq	-56(%rbp), %rax
 5165 1613 488B00   		movq	(%rax), %rax
 5166 1616 4883E820 		subq	$32, %rax
 5167 161a 488B00   		movq	(%rax), %rax
 5168 161d 4889C2   		movq	%rax, %rdx
 5169 1620 488B45C8 		movq	-56(%rbp), %rax
 5170 1624 4801C2   		addq	%rax, %rdx
 5171 1627 488B45C8 		movq	-56(%rbp), %rax
 5172 162b 488B00   		movq	(%rax), %rax
 5173 162e 4883E820 		subq	$32, %rax
 5174 1632 488B00   		movq	(%rax), %rax
 5175 1635 4889C1   		movq	%rax, %rcx
 5176 1638 488B45C8 		movq	-56(%rbp), %rax
 5177 163c 4801C8   		addq	%rcx, %rax
 5178 163f F30F1040 		movss	8(%rax), %xmm0
 5178      08
 5179 1644 F30F5AC0 		cvtss2sd	%xmm0, %xmm0
 5180 1648 F20F100D 		movsd	.LC11(%rip), %xmm1
 5180      00000000 
 5181 1650 F20F5CC1 		subsd	%xmm1, %xmm0
 5182 1654 F20F5AC0 		cvtsd2ss	%xmm0, %xmm0
 5183 1658 F30F1142 		movss	%xmm0, 8(%rdx)
 5183      08
 367:costas2_impl.cc ****   			while(d_phase>CL_TWO_PI) {
 5184              		.loc 22 367 0
 5185 165d EB81     		jmp	.L208
 5186              	.L222:
 369:costas2_impl.cc ****   			}
 370:costas2_impl.cc ****           }
 371:costas2_impl.cc ****           else if (d_phase < CL_MINUS_TWO_PI) {
 5187              		.loc 22 371 0
 5188 165f 488B45C8 		movq	-56(%rbp), %rax
 5189 1663 488B00   		movq	(%rax), %rax
 5190 1666 4883E820 		subq	$32, %rax
 5191 166a 488B00   		movq	(%rax), %rax
 5192 166d 4889C2   		movq	%rax, %rdx
 5193 1670 488B45C8 		movq	-56(%rbp), %rax
 5194 1674 4801D0   		addq	%rdx, %rax
 5195 1677 F30F1040 		movss	8(%rax), %xmm0
 5195      08
 5196 167c F30F5AC0 		cvtss2sd	%xmm0, %xmm0
 5197 1680 F20F100D 		movsd	.LC12(%rip), %xmm1
GAS LISTING /tmp/ccsIN87E.s 			page 218


 5197      00000000 
 5198 1688 660F2EC8 		ucomisd	%xmm0, %xmm1
 5199 168c 767F     		jbe	.L206
 5200              	.L211:
 372:costas2_impl.cc ****   			while(d_phase < CL_MINUS_TWO_PI) {
 5201              		.loc 22 372 0
 5202 168e 488B45C8 		movq	-56(%rbp), %rax
 5203 1692 488B00   		movq	(%rax), %rax
 5204 1695 4883E820 		subq	$32, %rax
 5205 1699 488B00   		movq	(%rax), %rax
 5206 169c 4889C2   		movq	%rax, %rdx
 5207 169f 488B45C8 		movq	-56(%rbp), %rax
 5208 16a3 4801D0   		addq	%rdx, %rax
 5209 16a6 F30F1040 		movss	8(%rax), %xmm0
 5209      08
 5210 16ab F30F5AC0 		cvtss2sd	%xmm0, %xmm0
 5211 16af F20F100D 		movsd	.LC12(%rip), %xmm1
 5211      00000000 
 5212 16b7 660F2EC8 		ucomisd	%xmm0, %xmm1
 5213 16bb 7650     		jbe	.L206
 373:costas2_impl.cc ****   			  d_phase += CL_TWO_PI;
 5214              		.loc 22 373 0
 5215 16bd 488B45C8 		movq	-56(%rbp), %rax
 5216 16c1 488B00   		movq	(%rax), %rax
 5217 16c4 4883E820 		subq	$32, %rax
 5218 16c8 488B00   		movq	(%rax), %rax
 5219 16cb 4889C2   		movq	%rax, %rdx
 5220 16ce 488B45C8 		movq	-56(%rbp), %rax
 5221 16d2 4801C2   		addq	%rax, %rdx
 5222 16d5 488B45C8 		movq	-56(%rbp), %rax
 5223 16d9 488B00   		movq	(%rax), %rax
 5224 16dc 4883E820 		subq	$32, %rax
 5225 16e0 488B00   		movq	(%rax), %rax
 5226 16e3 4889C1   		movq	%rax, %rcx
 5227 16e6 488B45C8 		movq	-56(%rbp), %rax
 5228 16ea 4801C8   		addq	%rcx, %rax
 5229 16ed F30F1040 		movss	8(%rax), %xmm0
 5229      08
 5230 16f2 F30F5AC0 		cvtss2sd	%xmm0, %xmm0
 5231 16f6 F20F100D 		movsd	.LC11(%rip), %xmm1
 5231      00000000 
 5232 16fe F20F58C1 		addsd	%xmm1, %xmm0
 5233 1702 F20F5AC0 		cvtsd2ss	%xmm0, %xmm0
 5234 1706 F30F1142 		movss	%xmm0, 8(%rdx)
 5234      08
 372:costas2_impl.cc ****   			while(d_phase < CL_MINUS_TWO_PI) {
 5235              		.loc 22 372 0
 5236 170b EB81     		jmp	.L211
 5237              	.L206:
 374:costas2_impl.cc ****   			}
 375:costas2_impl.cc ****           }
 376:costas2_impl.cc **** 
 377:costas2_impl.cc ****           //frequency_limit();
 378:costas2_impl.cc ****           if(d_freq > d_max_freq)
 5238              		.loc 22 378 0
 5239 170d 488B45C8 		movq	-56(%rbp), %rax
 5240 1711 488B00   		movq	(%rax), %rax
GAS LISTING /tmp/ccsIN87E.s 			page 219


 5241 1714 4883E820 		subq	$32, %rax
 5242 1718 488B00   		movq	(%rax), %rax
 5243 171b 4889C2   		movq	%rax, %rdx
 5244 171e 488B45C8 		movq	-56(%rbp), %rax
 5245 1722 4801D0   		addq	%rdx, %rax
 5246 1725 F30F1040 		movss	12(%rax), %xmm0
 5246      0C
 5247 172a 488B45C8 		movq	-56(%rbp), %rax
 5248 172e 488B00   		movq	(%rax), %rax
 5249 1731 4883E820 		subq	$32, %rax
 5250 1735 488B00   		movq	(%rax), %rax
 5251 1738 4889C2   		movq	%rax, %rdx
 5252 173b 488B45C8 		movq	-56(%rbp), %rax
 5253 173f 4801D0   		addq	%rdx, %rax
 5254 1742 F30F1048 		movss	16(%rax), %xmm1
 5254      10
 5255 1747 0F2EC1   		ucomiss	%xmm1, %xmm0
 5256 174a 763C     		jbe	.L223
 379:costas2_impl.cc ****             d_freq = d_max_freq;
 5257              		.loc 22 379 0
 5258 174c 488B45C8 		movq	-56(%rbp), %rax
 5259 1750 488B00   		movq	(%rax), %rax
 5260 1753 4883E820 		subq	$32, %rax
 5261 1757 488B00   		movq	(%rax), %rax
 5262 175a 4889C2   		movq	%rax, %rdx
 5263 175d 488B45C8 		movq	-56(%rbp), %rax
 5264 1761 4801C2   		addq	%rax, %rdx
 5265 1764 488B45C8 		movq	-56(%rbp), %rax
 5266 1768 488B00   		movq	(%rax), %rax
 5267 176b 4883E820 		subq	$32, %rax
 5268 176f 488B00   		movq	(%rax), %rax
 5269 1772 4889C1   		movq	%rax, %rcx
 5270 1775 488B45C8 		movq	-56(%rbp), %rax
 5271 1779 4801C8   		addq	%rcx, %rax
 5272 177c F30F1040 		movss	16(%rax), %xmm0
 5272      10
 5273 1781 F30F1142 		movss	%xmm0, 12(%rdx)
 5273      0C
 5274 1786 EB79     		jmp	.L214
 5275              	.L223:
 380:costas2_impl.cc ****           else if(d_freq < d_min_freq)
 5276              		.loc 22 380 0
 5277 1788 488B45C8 		movq	-56(%rbp), %rax
 5278 178c 488B00   		movq	(%rax), %rax
 5279 178f 4883E820 		subq	$32, %rax
 5280 1793 488B00   		movq	(%rax), %rax
 5281 1796 4889C2   		movq	%rax, %rdx
 5282 1799 488B45C8 		movq	-56(%rbp), %rax
 5283 179d 4801D0   		addq	%rdx, %rax
 5284 17a0 F30F1048 		movss	12(%rax), %xmm1
 5284      0C
 5285 17a5 488B45C8 		movq	-56(%rbp), %rax
 5286 17a9 488B00   		movq	(%rax), %rax
 5287 17ac 4883E820 		subq	$32, %rax
 5288 17b0 488B00   		movq	(%rax), %rax
 5289 17b3 4889C2   		movq	%rax, %rdx
 5290 17b6 488B45C8 		movq	-56(%rbp), %rax
GAS LISTING /tmp/ccsIN87E.s 			page 220


 5291 17ba 4801D0   		addq	%rdx, %rax
 5292 17bd F30F1040 		movss	20(%rax), %xmm0
 5292      14
 5293 17c2 0F2EC1   		ucomiss	%xmm1, %xmm0
 5294 17c5 763A     		jbe	.L214
 381:costas2_impl.cc ****             d_freq = d_min_freq;
 5295              		.loc 22 381 0
 5296 17c7 488B45C8 		movq	-56(%rbp), %rax
 5297 17cb 488B00   		movq	(%rax), %rax
 5298 17ce 4883E820 		subq	$32, %rax
 5299 17d2 488B00   		movq	(%rax), %rax
 5300 17d5 4889C2   		movq	%rax, %rdx
 5301 17d8 488B45C8 		movq	-56(%rbp), %rax
 5302 17dc 4801C2   		addq	%rax, %rdx
 5303 17df 488B45C8 		movq	-56(%rbp), %rax
 5304 17e3 488B00   		movq	(%rax), %rax
 5305 17e6 4883E820 		subq	$32, %rax
 5306 17ea 488B00   		movq	(%rax), %rax
 5307 17ed 4889C1   		movq	%rax, %rcx
 5308 17f0 488B45C8 		movq	-56(%rbp), %rax
 5309 17f4 4801C8   		addq	%rcx, %rax
 5310 17f7 F30F1040 		movss	20(%rax), %xmm0
 5310      14
 5311 17fc F30F1142 		movss	%xmm0, 12(%rdx)
 5311      0C
 5312              	.L214:
 303:costas2_impl.cc ****           // nco_out = gr_expj(-d_phase);
 5313              		.loc 22 303 0 discriminator 2
 5314 1801 8345FC01 		addl	$1, -4(%rbp)
 5315 1805 E926FBFF 		jmp	.L216
 5315      FF
 5316              	.L203:
 382:costas2_impl.cc **** 
 383:costas2_impl.cc ****         /*
 384:costas2_impl.cc ****          * original code
 385:costas2_impl.cc **** 		nco_out = gr_expj(-d_phase);
 386:costas2_impl.cc **** 		optr[i] = iptr[i] * nco_out;
 387:costas2_impl.cc **** 
 388:costas2_impl.cc **** 		d_error = (*this.*d_phase_detector)(optr[i]);
 389:costas2_impl.cc **** 		d_error = gr::branchless_clip(d_error, 1.0);
 390:costas2_impl.cc **** 
 391:costas2_impl.cc **** 		advance_loop(d_error);
 392:costas2_impl.cc **** 		phase_wrap();
 393:costas2_impl.cc **** 		frequency_limit();
 394:costas2_impl.cc ****          */
 395:costas2_impl.cc **** 
 396:costas2_impl.cc ****         }
 397:costas2_impl.cc **** 
 398:costas2_impl.cc ****         return noutput_items;
 5317              		.loc 22 398 0
 5318 180a 8B45C4   		movl	-60(%rbp), %eax
 399:costas2_impl.cc ****     }
 5319              		.loc 22 399 0
 5320 180d C9       		leave
 5321              		.cfi_def_cfa 7, 8
 5322 180e C3       		ret
 5323              		.cfi_endproc
GAS LISTING /tmp/ccsIN87E.s 			page 221


 5324              	.LFE10979:
 5326              		.set	.LTHUNK10,_ZN2gr5lfast12costas2_impl4workEiRSt6vectorIPKvSaIS4_EERS2_IPvSaIS8_EE
 5327              		.globl	_ZTv0_n176_N2gr5lfast12costas2_impl4workEiRSt6vectorIPKvSaIS4_EERS2_IPvSaIS8_EE
 5329              	_ZTv0_n176_N2gr5lfast12costas2_impl4workEiRSt6vectorIPKvSaIS4_EERS2_IPvSaIS8_EE:
 5330              	.LFB15695:
  47:costas2_impl.h **** 
  48:costas2_impl.h ****       float error() const;
  49:costas2_impl.h **** 
  50:costas2_impl.h ****       // void printSineError();
  51:costas2_impl.h **** 
  52:costas2_impl.h ****       void handle_set_noise(pmt::pmt_t msg);
  53:costas2_impl.h **** 
  54:costas2_impl.h ****       void setup_rpc();
  55:costas2_impl.h **** 
  56:costas2_impl.h ****       // Where all the action really happens
  57:costas2_impl.h ****       int work(int noutput_items,
 5331              		.loc 19 57 0
 5332              		.cfi_startproc
 5333 180f 4C8B17   		movq	(%rdi), %r10
 5334 1812 4903BA50 		addq	-176(%r10), %rdi
 5334      FFFFFF
 5335 1819 E9C4FAFF 		jmp	.LTHUNK10
 5335      FF
 5336              		.cfi_endproc
 5337              	.LFE15695:
 5339              		.align 2
 5340              		.globl	_ZN2gr5lfast12costas2_impl9setup_rpcEv
 5342              	_ZN2gr5lfast12costas2_impl9setup_rpcEv:
 5343              	.LFB10980:
 400:costas2_impl.cc **** 
 401:costas2_impl.cc ****     void
 402:costas2_impl.cc ****     costas2_impl::setup_rpc()
 403:costas2_impl.cc ****     {
 5344              		.loc 22 403 0
 5345              		.cfi_startproc
 5346 181e 55       		pushq	%rbp
 5347              		.cfi_def_cfa_offset 16
 5348              		.cfi_offset 6, -16
 5349 181f 4889E5   		movq	%rsp, %rbp
 5350              		.cfi_def_cfa_register 6
 5351 1822 48897DF8 		movq	%rdi, -8(%rbp)
 404:costas2_impl.cc **** #ifdef GR_CTRLPORT
 405:costas2_impl.cc ****       // Getters
 406:costas2_impl.cc ****         rpcbasic_sptr(new rpcbasic_register_get<costas2_cc, float>(
 407:costas2_impl.cc **** 	      alias(), "error",
 408:costas2_impl.cc **** 	      &costas_loop_cc::error,
 409:costas2_impl.cc **** 	      pmt::mp(-2.0f), pmt::mp(2.0f), pmt::mp(0.0f),
 410:costas2_impl.cc **** 	      "", "Error signal of loop", RPC_PRIVLVL_MIN,
 411:costas2_impl.cc ****             DISPTIME | DISPOPTSTRIP)));
 412:costas2_impl.cc ****       add_rpc_variable(
 413:costas2_impl.cc ****           rpcbasic_sptr(new rpcbasic_register_get<control_loop, float>(
 414:costas2_impl.cc **** 	      alias(), "loop_bw",
 415:costas2_impl.cc **** 	      &control_loop::get_loop_bandwidth,
 416:costas2_impl.cc **** 	      pmt::mp(0.0f), pmt::mp(2.0f), pmt::mp(0.0f),
 417:costas2_impl.cc **** 	      "", "Loop bandwidth", RPC_PRIVLVL_MIN,
 418:costas2_impl.cc ****               DISPTIME | DISPOPTSTRIP)));
 419:costas2_impl.cc **** 
GAS LISTING /tmp/ccsIN87E.s 			page 222


 420:costas2_impl.cc ****       // Setters
 421:costas2_impl.cc ****       add_rpc_variable(
 422:costas2_impl.cc ****           rpcbasic_sptr(new rpcbasic_register_set<control_loop, float>(
 423:costas2_impl.cc **** 	      alias(), "loop_bw",
 424:costas2_impl.cc **** 	      &control_loop::set_loop_bandwidth,
 425:costas2_impl.cc **** 	      pmt::mp(0.0f), pmt::mp(1.0f), pmt::mp(0.0f),
 426:costas2_impl.cc **** 	      "", "Loop bandwidth",
 427:costas2_impl.cc **** 	      RPC_PRIVLVL_MIN, DISPNULL)));
 428:costas2_impl.cc **** #endif /* GR_CTRLPORT */
 429:costas2_impl.cc ****     }
 5352              		.loc 22 429 0
 5353 1826 90       		nop
 5354 1827 5D       		popq	%rbp
 5355              		.cfi_def_cfa 7, 8
 5356 1828 C3       		ret
 5357              		.cfi_endproc
 5358              	.LFE10980:
 5360              		.set	.LTHUNK11,_ZN2gr5lfast12costas2_impl9setup_rpcEv
 5361              		.globl	_ZTv0_n88_N2gr5lfast12costas2_impl9setup_rpcEv
 5363              	_ZTv0_n88_N2gr5lfast12costas2_impl9setup_rpcEv:
 5364              	.LFB15696:
  54:costas2_impl.h **** 
 5365              		.loc 19 54 0
 5366              		.cfi_startproc
 5367 1829 4C8B17   		movq	(%rdi), %r10
 5368 182c 49037AA8 		addq	-88(%r10), %rdi
 5369 1830 EBEC     		jmp	.LTHUNK11
 5370              		.cfi_endproc
 5371              	.LFE15696:
 5373              		.section	.text._ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEEC2Ev,"axG",@p
 5374              		.align 2
 5375              		.weak	_ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEEC2Ev
 5377              	_ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEEC2Ev:
 5378              	.LFB11186:
  27:/usr/include/boost/exception/exception.hpp ****                 px_(0)
 5379              		.loc 3 27 0
 5380              		.cfi_startproc
 5381 0000 55       		pushq	%rbp
 5382              		.cfi_def_cfa_offset 16
 5383              		.cfi_offset 6, -16
 5384 0001 4889E5   		movq	%rsp, %rbp
 5385              		.cfi_def_cfa_register 6
 5386 0004 48897DF8 		movq	%rdi, -8(%rbp)
 5387              	.LBB51:
  28:/usr/include/boost/exception/exception.hpp ****                 {
 5388              		.loc 3 28 0
 5389 0008 488B45F8 		movq	-8(%rbp), %rax
 5390 000c 48C70000 		movq	$0, (%rax)
 5390      000000
 5391              	.LBE51:
  30:/usr/include/boost/exception/exception.hpp **** 
 5392              		.loc 3 30 0
 5393 0013 90       		nop
 5394 0014 5D       		popq	%rbp
 5395              		.cfi_def_cfa 7, 8
 5396 0015 C3       		ret
 5397              		.cfi_endproc
GAS LISTING /tmp/ccsIN87E.s 			page 223


 5398              	.LFE11186:
 5400              		.weak	_ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEEC1Ev
 5401              		.set	_ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEEC1Ev,_ZN5boost16excepti
 5402              		.section	.text._ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEED2Ev,"axG",@p
 5403              		.align 2
 5404              		.weak	_ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEED2Ev
 5406              	_ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEED2Ev:
 5407              	.LFB11189:
  32:/usr/include/boost/exception/exception.hpp ****                 {
 5408              		.loc 3 32 0
 5409              		.cfi_startproc
 5410              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 5411              		.cfi_lsda 0x1b,.LLSDA11189
 5412 0000 55       		pushq	%rbp
 5413              		.cfi_def_cfa_offset 16
 5414              		.cfi_offset 6, -16
 5415 0001 4889E5   		movq	%rsp, %rbp
 5416              		.cfi_def_cfa_register 6
 5417 0004 4883EC10 		subq	$16, %rsp
 5418 0008 48897DF8 		movq	%rdi, -8(%rbp)
 5419              	.LBB52:
  34:/usr/include/boost/exception/exception.hpp ****                 }
 5420              		.loc 3 34 0
 5421 000c 488B45F8 		movq	-8(%rbp), %rax
 5422 0010 4889C7   		movq	%rax, %rdi
 5423 0013 E8000000 		call	_ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEE7releaseEv
 5423      00
 5424              	.LBE52:
  35:/usr/include/boost/exception/exception.hpp **** 
 5425              		.loc 3 35 0
 5426 0018 90       		nop
 5427 0019 C9       		leave
 5428              		.cfi_def_cfa 7, 8
 5429 001a C3       		ret
 5430              		.cfi_endproc
 5431              	.LFE11189:
 5432              		.section	.gcc_except_table
 5433              	.LLSDA11189:
 5434 0077 FF       		.byte	0xff
 5435 0078 FF       		.byte	0xff
 5436 0079 01       		.byte	0x1
 5437 007a 00       		.uleb128 .LLSDACSE11189-.LLSDACSB11189
 5438              	.LLSDACSB11189:
 5439              	.LLSDACSE11189:
 5440              		.section	.text._ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEED2Ev,"axG",@p
 5442              		.weak	_ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEED1Ev
 5443              		.set	_ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEED1Ev,_ZN5boost16excepti
 5444              		.section	.text._ZNK5boost16exception_detail12refcount_ptrINS0_20error_info_containerEE3getEv,"axG"
 5445              		.align 2
 5446              		.weak	_ZNK5boost16exception_detail12refcount_ptrINS0_20error_info_containerEE3getEv
 5448              	_ZNK5boost16exception_detail12refcount_ptrINS0_20error_info_containerEE3getEv:
 5449              	.LFB11191:
  59:/usr/include/boost/exception/exception.hpp ****                 {
 5450              		.loc 3 59 0
 5451              		.cfi_startproc
 5452 0000 55       		pushq	%rbp
 5453              		.cfi_def_cfa_offset 16
GAS LISTING /tmp/ccsIN87E.s 			page 224


 5454              		.cfi_offset 6, -16
 5455 0001 4889E5   		movq	%rsp, %rbp
 5456              		.cfi_def_cfa_register 6
 5457 0004 48897DF8 		movq	%rdi, -8(%rbp)
  61:/usr/include/boost/exception/exception.hpp ****                 }
 5458              		.loc 3 61 0
 5459 0008 488B45F8 		movq	-8(%rbp), %rax
 5460 000c 488B00   		movq	(%rax), %rax
  62:/usr/include/boost/exception/exception.hpp **** 
 5461              		.loc 3 62 0
 5462 000f 5D       		popq	%rbp
 5463              		.cfi_def_cfa 7, 8
 5464 0010 C3       		ret
 5465              		.cfi_endproc
 5466              	.LFE11191:
 5468              		.section	.text._ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEEaSERKS3_,"axG
 5469              		.align 2
 5470              		.weak	_ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEEaSERKS3_
 5472              	_ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEEaSERKS3_:
 5473              	.LFB11192:
  44:/usr/include/boost/exception/exception.hpp ****                 {
 5474              		.loc 3 44 0
 5475              		.cfi_startproc
 5476 0000 55       		pushq	%rbp
 5477              		.cfi_def_cfa_offset 16
 5478              		.cfi_offset 6, -16
 5479 0001 4889E5   		movq	%rsp, %rbp
 5480              		.cfi_def_cfa_register 6
 5481 0004 4883EC10 		subq	$16, %rsp
 5482 0008 48897DF8 		movq	%rdi, -8(%rbp)
 5483 000c 488975F0 		movq	%rsi, -16(%rbp)
  46:/usr/include/boost/exception/exception.hpp ****                 return *this;
 5484              		.loc 3 46 0
 5485 0010 488B45F0 		movq	-16(%rbp), %rax
 5486 0014 488B10   		movq	(%rax), %rdx
 5487 0017 488B45F8 		movq	-8(%rbp), %rax
 5488 001b 4889D6   		movq	%rdx, %rsi
 5489 001e 4889C7   		movq	%rax, %rdi
 5490 0021 E8000000 		call	_ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEE5adoptEPS2_
 5490      00
  47:/usr/include/boost/exception/exception.hpp ****                 }
 5491              		.loc 3 47 0
 5492 0026 488B45F8 		movq	-8(%rbp), %rax
  48:/usr/include/boost/exception/exception.hpp **** 
 5493              		.loc 3 48 0
 5494 002a C9       		leave
 5495              		.cfi_def_cfa 7, 8
 5496 002b C3       		ret
 5497              		.cfi_endproc
 5498              	.LFE11192:
 5500              		.section	.text._ZN5boost16exception_detail10clone_baseC2ERKS1_,"axG",@progbits,_ZN5boost16exceptio
 5501              		.align 2
 5502              		.weak	_ZN5boost16exception_detail10clone_baseC2ERKS1_
 5504              	_ZN5boost16exception_detail10clone_baseC2ERKS1_:
 5505              	.LFB11199:
 415:/usr/include/boost/exception/exception.hpp ****             {
 5506              		.loc 3 415 0
GAS LISTING /tmp/ccsIN87E.s 			page 225


 5507              		.cfi_startproc
 5508 0000 55       		pushq	%rbp
 5509              		.cfi_def_cfa_offset 16
 5510              		.cfi_offset 6, -16
 5511 0001 4889E5   		movq	%rsp, %rbp
 5512              		.cfi_def_cfa_register 6
 5513 0004 48897DF8 		movq	%rdi, -8(%rbp)
 5514 0008 488975F0 		movq	%rsi, -16(%rbp)
 5515              	.LBB53:
 415:/usr/include/boost/exception/exception.hpp ****             {
 5516              		.loc 3 415 0
 5517 000c 488D1500 		leaq	16+_ZTVN5boost16exception_detail10clone_baseE(%rip), %rdx
 5517      000000
 5518 0013 488B45F8 		movq	-8(%rbp), %rax
 5519 0017 488910   		movq	%rdx, (%rax)
 5520              	.LBE53:
 5521 001a 90       		nop
 5522 001b 5D       		popq	%rbp
 5523              		.cfi_def_cfa 7, 8
 5524 001c C3       		ret
 5525              		.cfi_endproc
 5526              	.LFE11199:
 5528              		.weak	_ZN5boost16exception_detail10clone_baseC1ERKS1_
 5529              		.set	_ZN5boost16exception_detail10clone_baseC1ERKS1_,_ZN5boost16exception_detail10clone_baseC2ERKS
 5530              		.section	.text._ZN5boost13intrusive_ptrIN3pmt8pmt_baseEED2Ev,"axG",@progbits,_ZN5boost13intrusive_
 5531              		.align 2
 5532              		.weak	_ZN5boost13intrusive_ptrIN3pmt8pmt_baseEED2Ev
 5534              	_ZN5boost13intrusive_ptrIN3pmt8pmt_baseEED2Ev:
 5535              	.LFB11237:
 5536              		.file 25 "/usr/include/boost/smart_ptr/intrusive_ptr.hpp"
   1:/usr/include/boost/smart_ptr/intrusive_ptr.hpp **** #ifndef BOOST_SMART_PTR_INTRUSIVE_PTR_HPP_INCLUDED
   2:/usr/include/boost/smart_ptr/intrusive_ptr.hpp **** #define BOOST_SMART_PTR_INTRUSIVE_PTR_HPP_INCLUDED
   3:/usr/include/boost/smart_ptr/intrusive_ptr.hpp **** 
   4:/usr/include/boost/smart_ptr/intrusive_ptr.hpp **** //
   5:/usr/include/boost/smart_ptr/intrusive_ptr.hpp **** //  intrusive_ptr.hpp
   6:/usr/include/boost/smart_ptr/intrusive_ptr.hpp **** //
   7:/usr/include/boost/smart_ptr/intrusive_ptr.hpp **** //  Copyright (c) 2001, 2002 Peter Dimov
   8:/usr/include/boost/smart_ptr/intrusive_ptr.hpp **** //
   9:/usr/include/boost/smart_ptr/intrusive_ptr.hpp **** // Distributed under the Boost Software License, Version 1.0. (See
  10:/usr/include/boost/smart_ptr/intrusive_ptr.hpp **** // accompanying file LICENSE_1_0.txt or copy at
  11:/usr/include/boost/smart_ptr/intrusive_ptr.hpp **** // http://www.boost.org/LICENSE_1_0.txt)
  12:/usr/include/boost/smart_ptr/intrusive_ptr.hpp **** //
  13:/usr/include/boost/smart_ptr/intrusive_ptr.hpp **** //  See http://www.boost.org/libs/smart_ptr/intrusive_ptr.html for documentation.
  14:/usr/include/boost/smart_ptr/intrusive_ptr.hpp **** //
  15:/usr/include/boost/smart_ptr/intrusive_ptr.hpp **** 
  16:/usr/include/boost/smart_ptr/intrusive_ptr.hpp **** #include <boost/config.hpp>
  17:/usr/include/boost/smart_ptr/intrusive_ptr.hpp **** 
  18:/usr/include/boost/smart_ptr/intrusive_ptr.hpp **** #include <boost/assert.hpp>
  19:/usr/include/boost/smart_ptr/intrusive_ptr.hpp **** #include <boost/detail/workaround.hpp>
  20:/usr/include/boost/smart_ptr/intrusive_ptr.hpp **** #include <boost/smart_ptr/detail/sp_convertible.hpp>
  21:/usr/include/boost/smart_ptr/intrusive_ptr.hpp **** #include <boost/smart_ptr/detail/sp_nullptr_t.hpp>
  22:/usr/include/boost/smart_ptr/intrusive_ptr.hpp **** 
  23:/usr/include/boost/smart_ptr/intrusive_ptr.hpp **** #include <boost/config/no_tr1/functional.hpp>           // for std::less
  24:/usr/include/boost/smart_ptr/intrusive_ptr.hpp **** 
  25:/usr/include/boost/smart_ptr/intrusive_ptr.hpp **** #if !defined(BOOST_NO_IOSTREAM)
  26:/usr/include/boost/smart_ptr/intrusive_ptr.hpp **** #if !defined(BOOST_NO_IOSFWD)
  27:/usr/include/boost/smart_ptr/intrusive_ptr.hpp **** #include <iosfwd>               // for std::basic_ostream
GAS LISTING /tmp/ccsIN87E.s 			page 226


  28:/usr/include/boost/smart_ptr/intrusive_ptr.hpp **** #else
  29:/usr/include/boost/smart_ptr/intrusive_ptr.hpp **** #include <ostream>
  30:/usr/include/boost/smart_ptr/intrusive_ptr.hpp **** #endif
  31:/usr/include/boost/smart_ptr/intrusive_ptr.hpp **** #endif
  32:/usr/include/boost/smart_ptr/intrusive_ptr.hpp **** 
  33:/usr/include/boost/smart_ptr/intrusive_ptr.hpp **** 
  34:/usr/include/boost/smart_ptr/intrusive_ptr.hpp **** namespace boost
  35:/usr/include/boost/smart_ptr/intrusive_ptr.hpp **** {
  36:/usr/include/boost/smart_ptr/intrusive_ptr.hpp **** 
  37:/usr/include/boost/smart_ptr/intrusive_ptr.hpp **** //
  38:/usr/include/boost/smart_ptr/intrusive_ptr.hpp **** //  intrusive_ptr
  39:/usr/include/boost/smart_ptr/intrusive_ptr.hpp **** //
  40:/usr/include/boost/smart_ptr/intrusive_ptr.hpp **** //  A smart pointer that uses intrusive reference counting.
  41:/usr/include/boost/smart_ptr/intrusive_ptr.hpp **** //
  42:/usr/include/boost/smart_ptr/intrusive_ptr.hpp **** //  Relies on unqualified calls to
  43:/usr/include/boost/smart_ptr/intrusive_ptr.hpp **** //  
  44:/usr/include/boost/smart_ptr/intrusive_ptr.hpp **** //      void intrusive_ptr_add_ref(T * p);
  45:/usr/include/boost/smart_ptr/intrusive_ptr.hpp **** //      void intrusive_ptr_release(T * p);
  46:/usr/include/boost/smart_ptr/intrusive_ptr.hpp **** //
  47:/usr/include/boost/smart_ptr/intrusive_ptr.hpp **** //          (p != 0)
  48:/usr/include/boost/smart_ptr/intrusive_ptr.hpp **** //
  49:/usr/include/boost/smart_ptr/intrusive_ptr.hpp **** //  The object is responsible for destroying itself.
  50:/usr/include/boost/smart_ptr/intrusive_ptr.hpp **** //
  51:/usr/include/boost/smart_ptr/intrusive_ptr.hpp **** 
  52:/usr/include/boost/smart_ptr/intrusive_ptr.hpp **** template<class T> class intrusive_ptr
  53:/usr/include/boost/smart_ptr/intrusive_ptr.hpp **** {
  54:/usr/include/boost/smart_ptr/intrusive_ptr.hpp **** private:
  55:/usr/include/boost/smart_ptr/intrusive_ptr.hpp **** 
  56:/usr/include/boost/smart_ptr/intrusive_ptr.hpp ****     typedef intrusive_ptr this_type;
  57:/usr/include/boost/smart_ptr/intrusive_ptr.hpp **** 
  58:/usr/include/boost/smart_ptr/intrusive_ptr.hpp **** public:
  59:/usr/include/boost/smart_ptr/intrusive_ptr.hpp **** 
  60:/usr/include/boost/smart_ptr/intrusive_ptr.hpp ****     typedef T element_type;
  61:/usr/include/boost/smart_ptr/intrusive_ptr.hpp **** 
  62:/usr/include/boost/smart_ptr/intrusive_ptr.hpp ****     BOOST_CONSTEXPR intrusive_ptr() BOOST_NOEXCEPT : px( 0 )
  63:/usr/include/boost/smart_ptr/intrusive_ptr.hpp ****     {
  64:/usr/include/boost/smart_ptr/intrusive_ptr.hpp ****     }
  65:/usr/include/boost/smart_ptr/intrusive_ptr.hpp **** 
  66:/usr/include/boost/smart_ptr/intrusive_ptr.hpp ****     intrusive_ptr( T * p, bool add_ref = true ): px( p )
  67:/usr/include/boost/smart_ptr/intrusive_ptr.hpp ****     {
  68:/usr/include/boost/smart_ptr/intrusive_ptr.hpp ****         if( px != 0 && add_ref ) intrusive_ptr_add_ref( px );
  69:/usr/include/boost/smart_ptr/intrusive_ptr.hpp ****     }
  70:/usr/include/boost/smart_ptr/intrusive_ptr.hpp **** 
  71:/usr/include/boost/smart_ptr/intrusive_ptr.hpp **** #if !defined(BOOST_NO_MEMBER_TEMPLATES) || defined(BOOST_MSVC6_MEMBER_TEMPLATES)
  72:/usr/include/boost/smart_ptr/intrusive_ptr.hpp **** 
  73:/usr/include/boost/smart_ptr/intrusive_ptr.hpp ****     template<class U>
  74:/usr/include/boost/smart_ptr/intrusive_ptr.hpp **** #if !defined( BOOST_SP_NO_SP_CONVERTIBLE )
  75:/usr/include/boost/smart_ptr/intrusive_ptr.hpp **** 
  76:/usr/include/boost/smart_ptr/intrusive_ptr.hpp ****     intrusive_ptr( intrusive_ptr<U> const & rhs, typename boost::detail::sp_enable_if_convertible<U
  77:/usr/include/boost/smart_ptr/intrusive_ptr.hpp **** 
  78:/usr/include/boost/smart_ptr/intrusive_ptr.hpp **** #else
  79:/usr/include/boost/smart_ptr/intrusive_ptr.hpp **** 
  80:/usr/include/boost/smart_ptr/intrusive_ptr.hpp ****     intrusive_ptr( intrusive_ptr<U> const & rhs )
  81:/usr/include/boost/smart_ptr/intrusive_ptr.hpp **** 
  82:/usr/include/boost/smart_ptr/intrusive_ptr.hpp **** #endif
  83:/usr/include/boost/smart_ptr/intrusive_ptr.hpp ****     : px( rhs.get() )
  84:/usr/include/boost/smart_ptr/intrusive_ptr.hpp ****     {
GAS LISTING /tmp/ccsIN87E.s 			page 227


  85:/usr/include/boost/smart_ptr/intrusive_ptr.hpp ****         if( px != 0 ) intrusive_ptr_add_ref( px );
  86:/usr/include/boost/smart_ptr/intrusive_ptr.hpp ****     }
  87:/usr/include/boost/smart_ptr/intrusive_ptr.hpp **** 
  88:/usr/include/boost/smart_ptr/intrusive_ptr.hpp **** #endif
  89:/usr/include/boost/smart_ptr/intrusive_ptr.hpp **** 
  90:/usr/include/boost/smart_ptr/intrusive_ptr.hpp ****     intrusive_ptr(intrusive_ptr const & rhs): px( rhs.px )
  91:/usr/include/boost/smart_ptr/intrusive_ptr.hpp ****     {
  92:/usr/include/boost/smart_ptr/intrusive_ptr.hpp ****         if( px != 0 ) intrusive_ptr_add_ref( px );
  93:/usr/include/boost/smart_ptr/intrusive_ptr.hpp ****     }
  94:/usr/include/boost/smart_ptr/intrusive_ptr.hpp **** 
  95:/usr/include/boost/smart_ptr/intrusive_ptr.hpp ****     ~intrusive_ptr()
 5537              		.loc 25 95 0
 5538              		.cfi_startproc
 5539              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 5540              		.cfi_lsda 0x1b,.LLSDA11237
 5541 0000 55       		pushq	%rbp
 5542              		.cfi_def_cfa_offset 16
 5543              		.cfi_offset 6, -16
 5544 0001 4889E5   		movq	%rsp, %rbp
 5545              		.cfi_def_cfa_register 6
 5546 0004 4883EC10 		subq	$16, %rsp
 5547 0008 48897DF8 		movq	%rdi, -8(%rbp)
 5548              	.LBB54:
  96:/usr/include/boost/smart_ptr/intrusive_ptr.hpp ****     {
  97:/usr/include/boost/smart_ptr/intrusive_ptr.hpp ****         if( px != 0 ) intrusive_ptr_release( px );
 5549              		.loc 25 97 0
 5550 000c 488B45F8 		movq	-8(%rbp), %rax
 5551 0010 488B00   		movq	(%rax), %rax
 5552 0013 4885C0   		testq	%rax, %rax
 5553 0016 740F     		je	.L234
 5554              		.loc 25 97 0 is_stmt 0 discriminator 1
 5555 0018 488B45F8 		movq	-8(%rbp), %rax
 5556 001c 488B00   		movq	(%rax), %rax
 5557 001f 4889C7   		movq	%rax, %rdi
 5558 0022 E8000000 		call	_ZN3pmt21intrusive_ptr_releaseEPNS_8pmt_baseE@PLT
 5558      00
 5559              	.L234:
 5560              	.LBE54:
  98:/usr/include/boost/smart_ptr/intrusive_ptr.hpp ****     }
 5561              		.loc 25 98 0 is_stmt 1
 5562 0027 90       		nop
 5563 0028 C9       		leave
 5564              		.cfi_def_cfa 7, 8
 5565 0029 C3       		ret
 5566              		.cfi_endproc
 5567              	.LFE11237:
 5568              		.section	.gcc_except_table
 5569              	.LLSDA11237:
 5570 007b FF       		.byte	0xff
 5571 007c FF       		.byte	0xff
 5572 007d 01       		.byte	0x1
 5573 007e 00       		.uleb128 .LLSDACSE11237-.LLSDACSB11237
 5574              	.LLSDACSB11237:
 5575              	.LLSDACSE11237:
 5576              		.section	.text._ZN5boost13intrusive_ptrIN3pmt8pmt_baseEED2Ev,"axG",@progbits,_ZN5boost13intrusive_
 5578              		.weak	_ZN5boost13intrusive_ptrIN3pmt8pmt_baseEED1Ev
 5579              		.set	_ZN5boost13intrusive_ptrIN3pmt8pmt_baseEED1Ev,_ZN5boost13intrusive_ptrIN3pmt8pmt_baseEED2Ev
GAS LISTING /tmp/ccsIN87E.s 			page 228


 5580              		.section	.text._ZN5boost13intrusive_ptrIN3pmt8pmt_baseEEC2EOS3_,"axG",@progbits,_ZN5boost13intrusi
 5581              		.align 2
 5582              		.weak	_ZN5boost13intrusive_ptrIN3pmt8pmt_baseEEC2EOS3_
 5584              	_ZN5boost13intrusive_ptrIN3pmt8pmt_baseEEC2EOS3_:
 5585              	.LFB11240:
  99:/usr/include/boost/smart_ptr/intrusive_ptr.hpp **** 
 100:/usr/include/boost/smart_ptr/intrusive_ptr.hpp **** #if !defined(BOOST_NO_MEMBER_TEMPLATES) || defined(BOOST_MSVC6_MEMBER_TEMPLATES)
 101:/usr/include/boost/smart_ptr/intrusive_ptr.hpp **** 
 102:/usr/include/boost/smart_ptr/intrusive_ptr.hpp ****     template<class U> intrusive_ptr & operator=(intrusive_ptr<U> const & rhs)
 103:/usr/include/boost/smart_ptr/intrusive_ptr.hpp ****     {
 104:/usr/include/boost/smart_ptr/intrusive_ptr.hpp ****         this_type(rhs).swap(*this);
 105:/usr/include/boost/smart_ptr/intrusive_ptr.hpp ****         return *this;
 106:/usr/include/boost/smart_ptr/intrusive_ptr.hpp ****     }
 107:/usr/include/boost/smart_ptr/intrusive_ptr.hpp **** 
 108:/usr/include/boost/smart_ptr/intrusive_ptr.hpp **** #endif
 109:/usr/include/boost/smart_ptr/intrusive_ptr.hpp **** 
 110:/usr/include/boost/smart_ptr/intrusive_ptr.hpp **** // Move support
 111:/usr/include/boost/smart_ptr/intrusive_ptr.hpp **** 
 112:/usr/include/boost/smart_ptr/intrusive_ptr.hpp **** #if !defined( BOOST_NO_CXX11_RVALUE_REFERENCES )
 113:/usr/include/boost/smart_ptr/intrusive_ptr.hpp **** 
 114:/usr/include/boost/smart_ptr/intrusive_ptr.hpp ****     intrusive_ptr(intrusive_ptr && rhs) BOOST_NOEXCEPT : px( rhs.px )
 5586              		.loc 25 114 0
 5587              		.cfi_startproc
 5588 0000 55       		pushq	%rbp
 5589              		.cfi_def_cfa_offset 16
 5590              		.cfi_offset 6, -16
 5591 0001 4889E5   		movq	%rsp, %rbp
 5592              		.cfi_def_cfa_register 6
 5593 0004 48897DF8 		movq	%rdi, -8(%rbp)
 5594 0008 488975F0 		movq	%rsi, -16(%rbp)
 5595              	.LBB55:
 5596              		.loc 25 114 0
 5597 000c 488B45F0 		movq	-16(%rbp), %rax
 5598 0010 488B10   		movq	(%rax), %rdx
 5599 0013 488B45F8 		movq	-8(%rbp), %rax
 5600 0017 488910   		movq	%rdx, (%rax)
 115:/usr/include/boost/smart_ptr/intrusive_ptr.hpp ****     {
 116:/usr/include/boost/smart_ptr/intrusive_ptr.hpp ****         rhs.px = 0;
 5601              		.loc 25 116 0
 5602 001a 488B45F0 		movq	-16(%rbp), %rax
 5603 001e 48C70000 		movq	$0, (%rax)
 5603      000000
 5604              	.LBE55:
 117:/usr/include/boost/smart_ptr/intrusive_ptr.hpp ****     }
 5605              		.loc 25 117 0
 5606 0025 90       		nop
 5607 0026 5D       		popq	%rbp
 5608              		.cfi_def_cfa 7, 8
 5609 0027 C3       		ret
 5610              		.cfi_endproc
 5611              	.LFE11240:
 5613              		.weak	_ZN5boost13intrusive_ptrIN3pmt8pmt_baseEEC1EOS3_
 5614              		.set	_ZN5boost13intrusive_ptrIN3pmt8pmt_baseEEC1EOS3_,_ZN5boost13intrusive_ptrIN3pmt8pmt_baseEEC2E
 5615              		.section	.text._ZNK5boost13intrusive_ptrIN3pmt8pmt_baseEE3getEv,"axG",@progbits,_ZNK5boost13intrus
 5616              		.align 2
 5617              		.weak	_ZNK5boost13intrusive_ptrIN3pmt8pmt_baseEE3getEv
 5619              	_ZNK5boost13intrusive_ptrIN3pmt8pmt_baseEE3getEv:
GAS LISTING /tmp/ccsIN87E.s 			page 229


 5620              	.LFB11242:
 118:/usr/include/boost/smart_ptr/intrusive_ptr.hpp **** 
 119:/usr/include/boost/smart_ptr/intrusive_ptr.hpp ****     intrusive_ptr & operator=(intrusive_ptr && rhs) BOOST_NOEXCEPT
 120:/usr/include/boost/smart_ptr/intrusive_ptr.hpp ****     {
 121:/usr/include/boost/smart_ptr/intrusive_ptr.hpp ****         this_type( static_cast< intrusive_ptr && >( rhs ) ).swap(*this);
 122:/usr/include/boost/smart_ptr/intrusive_ptr.hpp ****         return *this;
 123:/usr/include/boost/smart_ptr/intrusive_ptr.hpp ****     }
 124:/usr/include/boost/smart_ptr/intrusive_ptr.hpp **** 
 125:/usr/include/boost/smart_ptr/intrusive_ptr.hpp ****     template<class U> friend class intrusive_ptr;
 126:/usr/include/boost/smart_ptr/intrusive_ptr.hpp **** 
 127:/usr/include/boost/smart_ptr/intrusive_ptr.hpp ****     template<class U>
 128:/usr/include/boost/smart_ptr/intrusive_ptr.hpp **** #if !defined( BOOST_SP_NO_SP_CONVERTIBLE )
 129:/usr/include/boost/smart_ptr/intrusive_ptr.hpp **** 
 130:/usr/include/boost/smart_ptr/intrusive_ptr.hpp ****     intrusive_ptr(intrusive_ptr<U> && rhs, typename boost::detail::sp_enable_if_convertible<U,T>::t
 131:/usr/include/boost/smart_ptr/intrusive_ptr.hpp **** 
 132:/usr/include/boost/smart_ptr/intrusive_ptr.hpp **** #else
 133:/usr/include/boost/smart_ptr/intrusive_ptr.hpp **** 
 134:/usr/include/boost/smart_ptr/intrusive_ptr.hpp ****     intrusive_ptr(intrusive_ptr<U> && rhs)
 135:/usr/include/boost/smart_ptr/intrusive_ptr.hpp **** 
 136:/usr/include/boost/smart_ptr/intrusive_ptr.hpp **** #endif        
 137:/usr/include/boost/smart_ptr/intrusive_ptr.hpp ****     : px( rhs.px )
 138:/usr/include/boost/smart_ptr/intrusive_ptr.hpp ****     {
 139:/usr/include/boost/smart_ptr/intrusive_ptr.hpp ****         rhs.px = 0;
 140:/usr/include/boost/smart_ptr/intrusive_ptr.hpp ****     }
 141:/usr/include/boost/smart_ptr/intrusive_ptr.hpp **** 
 142:/usr/include/boost/smart_ptr/intrusive_ptr.hpp ****     template<class U>
 143:/usr/include/boost/smart_ptr/intrusive_ptr.hpp ****     intrusive_ptr & operator=(intrusive_ptr<U> && rhs) BOOST_NOEXCEPT
 144:/usr/include/boost/smart_ptr/intrusive_ptr.hpp ****     {
 145:/usr/include/boost/smart_ptr/intrusive_ptr.hpp ****         this_type( static_cast< intrusive_ptr<U> && >( rhs ) ).swap(*this);
 146:/usr/include/boost/smart_ptr/intrusive_ptr.hpp ****         return *this;
 147:/usr/include/boost/smart_ptr/intrusive_ptr.hpp ****     }
 148:/usr/include/boost/smart_ptr/intrusive_ptr.hpp **** 
 149:/usr/include/boost/smart_ptr/intrusive_ptr.hpp **** #endif
 150:/usr/include/boost/smart_ptr/intrusive_ptr.hpp **** 
 151:/usr/include/boost/smart_ptr/intrusive_ptr.hpp ****     intrusive_ptr & operator=(intrusive_ptr const & rhs)
 152:/usr/include/boost/smart_ptr/intrusive_ptr.hpp ****     {
 153:/usr/include/boost/smart_ptr/intrusive_ptr.hpp ****         this_type(rhs).swap(*this);
 154:/usr/include/boost/smart_ptr/intrusive_ptr.hpp ****         return *this;
 155:/usr/include/boost/smart_ptr/intrusive_ptr.hpp ****     }
 156:/usr/include/boost/smart_ptr/intrusive_ptr.hpp **** 
 157:/usr/include/boost/smart_ptr/intrusive_ptr.hpp ****     intrusive_ptr & operator=(T * rhs)
 158:/usr/include/boost/smart_ptr/intrusive_ptr.hpp ****     {
 159:/usr/include/boost/smart_ptr/intrusive_ptr.hpp ****         this_type(rhs).swap(*this);
 160:/usr/include/boost/smart_ptr/intrusive_ptr.hpp ****         return *this;
 161:/usr/include/boost/smart_ptr/intrusive_ptr.hpp ****     }
 162:/usr/include/boost/smart_ptr/intrusive_ptr.hpp **** 
 163:/usr/include/boost/smart_ptr/intrusive_ptr.hpp ****     void reset() BOOST_NOEXCEPT
 164:/usr/include/boost/smart_ptr/intrusive_ptr.hpp ****     {
 165:/usr/include/boost/smart_ptr/intrusive_ptr.hpp ****         this_type().swap( *this );
 166:/usr/include/boost/smart_ptr/intrusive_ptr.hpp ****     }
 167:/usr/include/boost/smart_ptr/intrusive_ptr.hpp **** 
 168:/usr/include/boost/smart_ptr/intrusive_ptr.hpp ****     void reset( T * rhs )
 169:/usr/include/boost/smart_ptr/intrusive_ptr.hpp ****     {
 170:/usr/include/boost/smart_ptr/intrusive_ptr.hpp ****         this_type( rhs ).swap( *this );
 171:/usr/include/boost/smart_ptr/intrusive_ptr.hpp ****     }
 172:/usr/include/boost/smart_ptr/intrusive_ptr.hpp **** 
 173:/usr/include/boost/smart_ptr/intrusive_ptr.hpp ****     void reset( T * rhs, bool add_ref )
GAS LISTING /tmp/ccsIN87E.s 			page 230


 174:/usr/include/boost/smart_ptr/intrusive_ptr.hpp ****     {
 175:/usr/include/boost/smart_ptr/intrusive_ptr.hpp ****         this_type( rhs, add_ref ).swap( *this );
 176:/usr/include/boost/smart_ptr/intrusive_ptr.hpp ****     }
 177:/usr/include/boost/smart_ptr/intrusive_ptr.hpp **** 
 178:/usr/include/boost/smart_ptr/intrusive_ptr.hpp ****     T * get() const BOOST_NOEXCEPT
 5621              		.loc 25 178 0
 5622              		.cfi_startproc
 5623 0000 55       		pushq	%rbp
 5624              		.cfi_def_cfa_offset 16
 5625              		.cfi_offset 6, -16
 5626 0001 4889E5   		movq	%rsp, %rbp
 5627              		.cfi_def_cfa_register 6
 5628 0004 48897DF8 		movq	%rdi, -8(%rbp)
 179:/usr/include/boost/smart_ptr/intrusive_ptr.hpp ****     {
 180:/usr/include/boost/smart_ptr/intrusive_ptr.hpp ****         return px;
 5629              		.loc 25 180 0
 5630 0008 488B45F8 		movq	-8(%rbp), %rax
 5631 000c 488B00   		movq	(%rax), %rax
 181:/usr/include/boost/smart_ptr/intrusive_ptr.hpp ****     }
 5632              		.loc 25 181 0
 5633 000f 5D       		popq	%rbp
 5634              		.cfi_def_cfa 7, 8
 5635 0010 C3       		ret
 5636              		.cfi_endproc
 5637              	.LFE11242:
 5639              		.section	.text._ZNSt3mapIN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS0_8functionIFvS4_EEENS2_10compa
 5640              		.align 2
 5641              		.weak	_ZNSt3mapIN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS0_8functionIFvS4_EEENS2_10comparatorESaI
 5643              	_ZNSt3mapIN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS0_8functionIFvS4_EEENS2_10comparatorESaISt4pair
 5644              	.LFB11670:
 5645              		.file 26 "/usr/include/c++/6/bits/stl_map.h"
   1:/usr/include/c++/6/bits/stl_map.h **** // Map implementation -*- C++ -*-
   2:/usr/include/c++/6/bits/stl_map.h **** 
   3:/usr/include/c++/6/bits/stl_map.h **** // Copyright (C) 2001-2016 Free Software Foundation, Inc.
   4:/usr/include/c++/6/bits/stl_map.h **** //
   5:/usr/include/c++/6/bits/stl_map.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/6/bits/stl_map.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/6/bits/stl_map.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/6/bits/stl_map.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/6/bits/stl_map.h **** // any later version.
  10:/usr/include/c++/6/bits/stl_map.h **** 
  11:/usr/include/c++/6/bits/stl_map.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/6/bits/stl_map.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/6/bits/stl_map.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/6/bits/stl_map.h **** // GNU General Public License for more details.
  15:/usr/include/c++/6/bits/stl_map.h **** 
  16:/usr/include/c++/6/bits/stl_map.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/6/bits/stl_map.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/6/bits/stl_map.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/6/bits/stl_map.h **** 
  20:/usr/include/c++/6/bits/stl_map.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/6/bits/stl_map.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/6/bits/stl_map.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/6/bits/stl_map.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/6/bits/stl_map.h **** 
  25:/usr/include/c++/6/bits/stl_map.h **** /*
  26:/usr/include/c++/6/bits/stl_map.h ****  *
GAS LISTING /tmp/ccsIN87E.s 			page 231


  27:/usr/include/c++/6/bits/stl_map.h ****  * Copyright (c) 1994
  28:/usr/include/c++/6/bits/stl_map.h ****  * Hewlett-Packard Company
  29:/usr/include/c++/6/bits/stl_map.h ****  *
  30:/usr/include/c++/6/bits/stl_map.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:/usr/include/c++/6/bits/stl_map.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:/usr/include/c++/6/bits/stl_map.h ****  * provided that the above copyright notice appear in all copies and
  33:/usr/include/c++/6/bits/stl_map.h ****  * that both that copyright notice and this permission notice appear
  34:/usr/include/c++/6/bits/stl_map.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:/usr/include/c++/6/bits/stl_map.h ****  * representations about the suitability of this software for any
  36:/usr/include/c++/6/bits/stl_map.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:/usr/include/c++/6/bits/stl_map.h ****  *
  38:/usr/include/c++/6/bits/stl_map.h ****  *
  39:/usr/include/c++/6/bits/stl_map.h ****  * Copyright (c) 1996,1997
  40:/usr/include/c++/6/bits/stl_map.h ****  * Silicon Graphics Computer Systems, Inc.
  41:/usr/include/c++/6/bits/stl_map.h ****  *
  42:/usr/include/c++/6/bits/stl_map.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:/usr/include/c++/6/bits/stl_map.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:/usr/include/c++/6/bits/stl_map.h ****  * provided that the above copyright notice appear in all copies and
  45:/usr/include/c++/6/bits/stl_map.h ****  * that both that copyright notice and this permission notice appear
  46:/usr/include/c++/6/bits/stl_map.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:/usr/include/c++/6/bits/stl_map.h ****  * representations about the suitability of this software for any
  48:/usr/include/c++/6/bits/stl_map.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:/usr/include/c++/6/bits/stl_map.h ****  */
  50:/usr/include/c++/6/bits/stl_map.h **** 
  51:/usr/include/c++/6/bits/stl_map.h **** /** @file bits/stl_map.h
  52:/usr/include/c++/6/bits/stl_map.h ****  *  This is an internal header file, included by other library headers.
  53:/usr/include/c++/6/bits/stl_map.h ****  *  Do not attempt to use it directly. @headername{map}
  54:/usr/include/c++/6/bits/stl_map.h ****  */
  55:/usr/include/c++/6/bits/stl_map.h **** 
  56:/usr/include/c++/6/bits/stl_map.h **** #ifndef _STL_MAP_H
  57:/usr/include/c++/6/bits/stl_map.h **** #define _STL_MAP_H 1
  58:/usr/include/c++/6/bits/stl_map.h **** 
  59:/usr/include/c++/6/bits/stl_map.h **** #include <bits/functexcept.h>
  60:/usr/include/c++/6/bits/stl_map.h **** #include <bits/concept_check.h>
  61:/usr/include/c++/6/bits/stl_map.h **** #if __cplusplus >= 201103L
  62:/usr/include/c++/6/bits/stl_map.h **** #include <initializer_list>
  63:/usr/include/c++/6/bits/stl_map.h **** #include <tuple>
  64:/usr/include/c++/6/bits/stl_map.h **** #endif
  65:/usr/include/c++/6/bits/stl_map.h **** 
  66:/usr/include/c++/6/bits/stl_map.h **** namespace std _GLIBCXX_VISIBILITY(default)
  67:/usr/include/c++/6/bits/stl_map.h **** {
  68:/usr/include/c++/6/bits/stl_map.h **** _GLIBCXX_BEGIN_NAMESPACE_CONTAINER
  69:/usr/include/c++/6/bits/stl_map.h **** 
  70:/usr/include/c++/6/bits/stl_map.h ****   /**
  71:/usr/include/c++/6/bits/stl_map.h ****    *  @brief A standard container made up of (key,value) pairs, which can be
  72:/usr/include/c++/6/bits/stl_map.h ****    *  retrieved based on a key, in logarithmic time.
  73:/usr/include/c++/6/bits/stl_map.h ****    *
  74:/usr/include/c++/6/bits/stl_map.h ****    *  @ingroup associative_containers
  75:/usr/include/c++/6/bits/stl_map.h ****    *
  76:/usr/include/c++/6/bits/stl_map.h ****    *  @tparam _Key  Type of key objects.
  77:/usr/include/c++/6/bits/stl_map.h ****    *  @tparam  _Tp  Type of mapped objects.
  78:/usr/include/c++/6/bits/stl_map.h ****    *  @tparam _Compare  Comparison function object type, defaults to less<_Key>.
  79:/usr/include/c++/6/bits/stl_map.h ****    *  @tparam _Alloc  Allocator type, defaults to 
  80:/usr/include/c++/6/bits/stl_map.h ****    *                  allocator<pair<const _Key, _Tp>.
  81:/usr/include/c++/6/bits/stl_map.h ****    *
  82:/usr/include/c++/6/bits/stl_map.h ****    *  Meets the requirements of a <a href="tables.html#65">container</a>, a
  83:/usr/include/c++/6/bits/stl_map.h ****    *  <a href="tables.html#66">reversible container</a>, and an
GAS LISTING /tmp/ccsIN87E.s 			page 232


  84:/usr/include/c++/6/bits/stl_map.h ****    *  <a href="tables.html#69">associative container</a> (using unique keys).
  85:/usr/include/c++/6/bits/stl_map.h ****    *  For a @c map<Key,T> the key_type is Key, the mapped_type is T, and the
  86:/usr/include/c++/6/bits/stl_map.h ****    *  value_type is std::pair<const Key,T>.
  87:/usr/include/c++/6/bits/stl_map.h ****    *
  88:/usr/include/c++/6/bits/stl_map.h ****    *  Maps support bidirectional iterators.
  89:/usr/include/c++/6/bits/stl_map.h ****    *
  90:/usr/include/c++/6/bits/stl_map.h ****    *  The private tree data is declared exactly the same way for map and
  91:/usr/include/c++/6/bits/stl_map.h ****    *  multimap; the distinction is made entirely in how the tree functions are
  92:/usr/include/c++/6/bits/stl_map.h ****    *  called (*_unique versus *_equal, same as the standard).
  93:/usr/include/c++/6/bits/stl_map.h ****   */
  94:/usr/include/c++/6/bits/stl_map.h ****   template <typename _Key, typename _Tp, typename _Compare = std::less<_Key>,
  95:/usr/include/c++/6/bits/stl_map.h ****             typename _Alloc = std::allocator<std::pair<const _Key, _Tp> > >
  96:/usr/include/c++/6/bits/stl_map.h ****     class map
  97:/usr/include/c++/6/bits/stl_map.h ****     {
  98:/usr/include/c++/6/bits/stl_map.h ****     public:
  99:/usr/include/c++/6/bits/stl_map.h ****       typedef _Key                                          key_type;
 100:/usr/include/c++/6/bits/stl_map.h ****       typedef _Tp                                           mapped_type;
 101:/usr/include/c++/6/bits/stl_map.h ****       typedef std::pair<const _Key, _Tp>                    value_type;
 102:/usr/include/c++/6/bits/stl_map.h ****       typedef _Compare                                      key_compare;
 103:/usr/include/c++/6/bits/stl_map.h ****       typedef _Alloc                                        allocator_type;
 104:/usr/include/c++/6/bits/stl_map.h **** 
 105:/usr/include/c++/6/bits/stl_map.h ****     private:
 106:/usr/include/c++/6/bits/stl_map.h ****       // concept requirements
 107:/usr/include/c++/6/bits/stl_map.h ****       typedef typename _Alloc::value_type                   _Alloc_value_type;
 108:/usr/include/c++/6/bits/stl_map.h ****       __glibcxx_class_requires(_Tp, _SGIAssignableConcept)
 109:/usr/include/c++/6/bits/stl_map.h ****       __glibcxx_class_requires4(_Compare, bool, _Key, _Key,
 110:/usr/include/c++/6/bits/stl_map.h **** 				_BinaryFunctionConcept)
 111:/usr/include/c++/6/bits/stl_map.h ****       __glibcxx_class_requires2(value_type, _Alloc_value_type, _SameTypeConcept)
 112:/usr/include/c++/6/bits/stl_map.h **** 
 113:/usr/include/c++/6/bits/stl_map.h ****     public:
 114:/usr/include/c++/6/bits/stl_map.h ****       class value_compare
 115:/usr/include/c++/6/bits/stl_map.h ****       : public std::binary_function<value_type, value_type, bool>
 116:/usr/include/c++/6/bits/stl_map.h ****       {
 117:/usr/include/c++/6/bits/stl_map.h **** 	friend class map<_Key, _Tp, _Compare, _Alloc>;
 118:/usr/include/c++/6/bits/stl_map.h ****       protected:
 119:/usr/include/c++/6/bits/stl_map.h **** 	_Compare comp;
 120:/usr/include/c++/6/bits/stl_map.h **** 
 121:/usr/include/c++/6/bits/stl_map.h **** 	value_compare(_Compare __c)
 122:/usr/include/c++/6/bits/stl_map.h **** 	: comp(__c) { }
 123:/usr/include/c++/6/bits/stl_map.h **** 
 124:/usr/include/c++/6/bits/stl_map.h ****       public:
 125:/usr/include/c++/6/bits/stl_map.h **** 	bool operator()(const value_type& __x, const value_type& __y) const
 126:/usr/include/c++/6/bits/stl_map.h **** 	{ return comp(__x.first, __y.first); }
 127:/usr/include/c++/6/bits/stl_map.h ****       };
 128:/usr/include/c++/6/bits/stl_map.h **** 
 129:/usr/include/c++/6/bits/stl_map.h ****     private:
 130:/usr/include/c++/6/bits/stl_map.h ****       /// This turns a red-black tree into a [multi]map. 
 131:/usr/include/c++/6/bits/stl_map.h ****       typedef typename __gnu_cxx::__alloc_traits<_Alloc>::template
 132:/usr/include/c++/6/bits/stl_map.h **** 	rebind<value_type>::other _Pair_alloc_type;
 133:/usr/include/c++/6/bits/stl_map.h **** 
 134:/usr/include/c++/6/bits/stl_map.h ****       typedef _Rb_tree<key_type, value_type, _Select1st<value_type>,
 135:/usr/include/c++/6/bits/stl_map.h **** 		       key_compare, _Pair_alloc_type> _Rep_type;
 136:/usr/include/c++/6/bits/stl_map.h **** 
 137:/usr/include/c++/6/bits/stl_map.h ****       /// The actual tree structure.
 138:/usr/include/c++/6/bits/stl_map.h ****       _Rep_type _M_t;
 139:/usr/include/c++/6/bits/stl_map.h **** 
 140:/usr/include/c++/6/bits/stl_map.h ****       typedef __gnu_cxx::__alloc_traits<_Pair_alloc_type> _Alloc_traits;
GAS LISTING /tmp/ccsIN87E.s 			page 233


 141:/usr/include/c++/6/bits/stl_map.h **** 
 142:/usr/include/c++/6/bits/stl_map.h ****     public:
 143:/usr/include/c++/6/bits/stl_map.h ****       // many of these are specified differently in ISO, but the following are
 144:/usr/include/c++/6/bits/stl_map.h ****       // "functionally equivalent"
 145:/usr/include/c++/6/bits/stl_map.h ****       typedef typename _Alloc_traits::pointer            pointer;
 146:/usr/include/c++/6/bits/stl_map.h ****       typedef typename _Alloc_traits::const_pointer      const_pointer;
 147:/usr/include/c++/6/bits/stl_map.h ****       typedef typename _Alloc_traits::reference          reference;
 148:/usr/include/c++/6/bits/stl_map.h ****       typedef typename _Alloc_traits::const_reference    const_reference;
 149:/usr/include/c++/6/bits/stl_map.h ****       typedef typename _Rep_type::iterator               iterator;
 150:/usr/include/c++/6/bits/stl_map.h ****       typedef typename _Rep_type::const_iterator         const_iterator;
 151:/usr/include/c++/6/bits/stl_map.h ****       typedef typename _Rep_type::size_type              size_type;
 152:/usr/include/c++/6/bits/stl_map.h ****       typedef typename _Rep_type::difference_type        difference_type;
 153:/usr/include/c++/6/bits/stl_map.h ****       typedef typename _Rep_type::reverse_iterator       reverse_iterator;
 154:/usr/include/c++/6/bits/stl_map.h ****       typedef typename _Rep_type::const_reverse_iterator const_reverse_iterator;
 155:/usr/include/c++/6/bits/stl_map.h **** 
 156:/usr/include/c++/6/bits/stl_map.h ****       // [23.3.1.1] construct/copy/destroy
 157:/usr/include/c++/6/bits/stl_map.h ****       // (get_allocator() is also listed in this section)
 158:/usr/include/c++/6/bits/stl_map.h **** 
 159:/usr/include/c++/6/bits/stl_map.h ****       /**
 160:/usr/include/c++/6/bits/stl_map.h ****        *  @brief  Default constructor creates no elements.
 161:/usr/include/c++/6/bits/stl_map.h ****        */
 162:/usr/include/c++/6/bits/stl_map.h ****       map()
 163:/usr/include/c++/6/bits/stl_map.h ****       _GLIBCXX_NOEXCEPT_IF(
 164:/usr/include/c++/6/bits/stl_map.h **** 	  is_nothrow_default_constructible<allocator_type>::value
 165:/usr/include/c++/6/bits/stl_map.h **** 	  && is_nothrow_default_constructible<key_compare>::value)
 166:/usr/include/c++/6/bits/stl_map.h ****       : _M_t() { }
 167:/usr/include/c++/6/bits/stl_map.h **** 
 168:/usr/include/c++/6/bits/stl_map.h ****       /**
 169:/usr/include/c++/6/bits/stl_map.h ****        *  @brief  Creates a %map with no elements.
 170:/usr/include/c++/6/bits/stl_map.h ****        *  @param  __comp  A comparison object.
 171:/usr/include/c++/6/bits/stl_map.h ****        *  @param  __a  An allocator object.
 172:/usr/include/c++/6/bits/stl_map.h ****        */
 173:/usr/include/c++/6/bits/stl_map.h ****       explicit
 174:/usr/include/c++/6/bits/stl_map.h ****       map(const _Compare& __comp,
 175:/usr/include/c++/6/bits/stl_map.h **** 	  const allocator_type& __a = allocator_type())
 176:/usr/include/c++/6/bits/stl_map.h ****       : _M_t(__comp, _Pair_alloc_type(__a)) { }
 177:/usr/include/c++/6/bits/stl_map.h **** 
 178:/usr/include/c++/6/bits/stl_map.h ****       /**
 179:/usr/include/c++/6/bits/stl_map.h ****        *  @brief  %Map copy constructor.
 180:/usr/include/c++/6/bits/stl_map.h ****        *  @param  __x  A %map of identical element and allocator types.
 181:/usr/include/c++/6/bits/stl_map.h ****        *
 182:/usr/include/c++/6/bits/stl_map.h ****        *  The newly-created %map uses a copy of the allocation object
 183:/usr/include/c++/6/bits/stl_map.h ****        *  used by @a __x.
 184:/usr/include/c++/6/bits/stl_map.h ****        */
 185:/usr/include/c++/6/bits/stl_map.h ****       map(const map& __x)
 186:/usr/include/c++/6/bits/stl_map.h ****       : _M_t(__x._M_t) { }
 187:/usr/include/c++/6/bits/stl_map.h **** 
 188:/usr/include/c++/6/bits/stl_map.h **** #if __cplusplus >= 201103L
 189:/usr/include/c++/6/bits/stl_map.h ****       /**
 190:/usr/include/c++/6/bits/stl_map.h ****        *  @brief  %Map move constructor.
 191:/usr/include/c++/6/bits/stl_map.h ****        *  @param  __x  A %map of identical element and allocator types.
 192:/usr/include/c++/6/bits/stl_map.h ****        *
 193:/usr/include/c++/6/bits/stl_map.h ****        *  The newly-created %map contains the exact contents of @a __x.
 194:/usr/include/c++/6/bits/stl_map.h ****        *  The contents of @a __x are a valid, but unspecified %map.
 195:/usr/include/c++/6/bits/stl_map.h ****        */
 196:/usr/include/c++/6/bits/stl_map.h ****       map(map&& __x)
 197:/usr/include/c++/6/bits/stl_map.h ****       noexcept(is_nothrow_copy_constructible<_Compare>::value)
GAS LISTING /tmp/ccsIN87E.s 			page 234


 198:/usr/include/c++/6/bits/stl_map.h ****       : _M_t(std::move(__x._M_t)) { }
 199:/usr/include/c++/6/bits/stl_map.h **** 
 200:/usr/include/c++/6/bits/stl_map.h ****       /**
 201:/usr/include/c++/6/bits/stl_map.h ****        *  @brief  Builds a %map from an initializer_list.
 202:/usr/include/c++/6/bits/stl_map.h ****        *  @param  __l  An initializer_list.
 203:/usr/include/c++/6/bits/stl_map.h ****        *  @param  __comp  A comparison object.
 204:/usr/include/c++/6/bits/stl_map.h ****        *  @param  __a  An allocator object.
 205:/usr/include/c++/6/bits/stl_map.h ****        *
 206:/usr/include/c++/6/bits/stl_map.h ****        *  Create a %map consisting of copies of the elements in the
 207:/usr/include/c++/6/bits/stl_map.h ****        *  initializer_list @a __l.
 208:/usr/include/c++/6/bits/stl_map.h ****        *  This is linear in N if the range is already sorted, and NlogN
 209:/usr/include/c++/6/bits/stl_map.h ****        *  otherwise (where N is @a __l.size()).
 210:/usr/include/c++/6/bits/stl_map.h ****        */
 211:/usr/include/c++/6/bits/stl_map.h ****       map(initializer_list<value_type> __l,
 212:/usr/include/c++/6/bits/stl_map.h **** 	  const _Compare& __comp = _Compare(),
 213:/usr/include/c++/6/bits/stl_map.h **** 	  const allocator_type& __a = allocator_type())
 214:/usr/include/c++/6/bits/stl_map.h ****       : _M_t(__comp, _Pair_alloc_type(__a))
 215:/usr/include/c++/6/bits/stl_map.h ****       { _M_t._M_insert_unique(__l.begin(), __l.end()); }
 216:/usr/include/c++/6/bits/stl_map.h **** 
 217:/usr/include/c++/6/bits/stl_map.h ****       /// Allocator-extended default constructor.
 218:/usr/include/c++/6/bits/stl_map.h ****       explicit
 219:/usr/include/c++/6/bits/stl_map.h ****       map(const allocator_type& __a)
 220:/usr/include/c++/6/bits/stl_map.h ****       : _M_t(_Compare(), _Pair_alloc_type(__a)) { }
 221:/usr/include/c++/6/bits/stl_map.h **** 
 222:/usr/include/c++/6/bits/stl_map.h ****       /// Allocator-extended copy constructor.
 223:/usr/include/c++/6/bits/stl_map.h ****       map(const map& __m, const allocator_type& __a)
 224:/usr/include/c++/6/bits/stl_map.h ****       : _M_t(__m._M_t, _Pair_alloc_type(__a)) { }
 225:/usr/include/c++/6/bits/stl_map.h **** 
 226:/usr/include/c++/6/bits/stl_map.h ****       /// Allocator-extended move constructor.
 227:/usr/include/c++/6/bits/stl_map.h ****       map(map&& __m, const allocator_type& __a)
 228:/usr/include/c++/6/bits/stl_map.h ****       noexcept(is_nothrow_copy_constructible<_Compare>::value
 229:/usr/include/c++/6/bits/stl_map.h **** 	       && _Alloc_traits::_S_always_equal())
 230:/usr/include/c++/6/bits/stl_map.h ****       : _M_t(std::move(__m._M_t), _Pair_alloc_type(__a)) { }
 231:/usr/include/c++/6/bits/stl_map.h **** 
 232:/usr/include/c++/6/bits/stl_map.h ****       /// Allocator-extended initialier-list constructor.
 233:/usr/include/c++/6/bits/stl_map.h ****       map(initializer_list<value_type> __l, const allocator_type& __a)
 234:/usr/include/c++/6/bits/stl_map.h ****       : _M_t(_Compare(), _Pair_alloc_type(__a))
 235:/usr/include/c++/6/bits/stl_map.h ****       { _M_t._M_insert_unique(__l.begin(), __l.end()); }
 236:/usr/include/c++/6/bits/stl_map.h **** 
 237:/usr/include/c++/6/bits/stl_map.h ****       /// Allocator-extended range constructor.
 238:/usr/include/c++/6/bits/stl_map.h ****       template<typename _InputIterator>
 239:/usr/include/c++/6/bits/stl_map.h ****         map(_InputIterator __first, _InputIterator __last,
 240:/usr/include/c++/6/bits/stl_map.h **** 	    const allocator_type& __a)
 241:/usr/include/c++/6/bits/stl_map.h **** 	: _M_t(_Compare(), _Pair_alloc_type(__a))
 242:/usr/include/c++/6/bits/stl_map.h ****         { _M_t._M_insert_unique(__first, __last); }
 243:/usr/include/c++/6/bits/stl_map.h **** #endif
 244:/usr/include/c++/6/bits/stl_map.h **** 
 245:/usr/include/c++/6/bits/stl_map.h ****       /**
 246:/usr/include/c++/6/bits/stl_map.h ****        *  @brief  Builds a %map from a range.
 247:/usr/include/c++/6/bits/stl_map.h ****        *  @param  __first  An input iterator.
 248:/usr/include/c++/6/bits/stl_map.h ****        *  @param  __last  An input iterator.
 249:/usr/include/c++/6/bits/stl_map.h ****        *
 250:/usr/include/c++/6/bits/stl_map.h ****        *  Create a %map consisting of copies of the elements from
 251:/usr/include/c++/6/bits/stl_map.h ****        *  [__first,__last).  This is linear in N if the range is
 252:/usr/include/c++/6/bits/stl_map.h ****        *  already sorted, and NlogN otherwise (where N is
 253:/usr/include/c++/6/bits/stl_map.h ****        *  distance(__first,__last)).
 254:/usr/include/c++/6/bits/stl_map.h ****        */
GAS LISTING /tmp/ccsIN87E.s 			page 235


 255:/usr/include/c++/6/bits/stl_map.h ****       template<typename _InputIterator>
 256:/usr/include/c++/6/bits/stl_map.h ****         map(_InputIterator __first, _InputIterator __last)
 257:/usr/include/c++/6/bits/stl_map.h **** 	: _M_t()
 258:/usr/include/c++/6/bits/stl_map.h ****         { _M_t._M_insert_unique(__first, __last); }
 259:/usr/include/c++/6/bits/stl_map.h **** 
 260:/usr/include/c++/6/bits/stl_map.h ****       /**
 261:/usr/include/c++/6/bits/stl_map.h ****        *  @brief  Builds a %map from a range.
 262:/usr/include/c++/6/bits/stl_map.h ****        *  @param  __first  An input iterator.
 263:/usr/include/c++/6/bits/stl_map.h ****        *  @param  __last  An input iterator.
 264:/usr/include/c++/6/bits/stl_map.h ****        *  @param  __comp  A comparison functor.
 265:/usr/include/c++/6/bits/stl_map.h ****        *  @param  __a  An allocator object.
 266:/usr/include/c++/6/bits/stl_map.h ****        *
 267:/usr/include/c++/6/bits/stl_map.h ****        *  Create a %map consisting of copies of the elements from
 268:/usr/include/c++/6/bits/stl_map.h ****        *  [__first,__last).  This is linear in N if the range is
 269:/usr/include/c++/6/bits/stl_map.h ****        *  already sorted, and NlogN otherwise (where N is
 270:/usr/include/c++/6/bits/stl_map.h ****        *  distance(__first,__last)).
 271:/usr/include/c++/6/bits/stl_map.h ****        */
 272:/usr/include/c++/6/bits/stl_map.h ****       template<typename _InputIterator>
 273:/usr/include/c++/6/bits/stl_map.h ****         map(_InputIterator __first, _InputIterator __last,
 274:/usr/include/c++/6/bits/stl_map.h **** 	    const _Compare& __comp,
 275:/usr/include/c++/6/bits/stl_map.h **** 	    const allocator_type& __a = allocator_type())
 276:/usr/include/c++/6/bits/stl_map.h **** 	: _M_t(__comp, _Pair_alloc_type(__a))
 277:/usr/include/c++/6/bits/stl_map.h ****         { _M_t._M_insert_unique(__first, __last); }
 278:/usr/include/c++/6/bits/stl_map.h **** 
 279:/usr/include/c++/6/bits/stl_map.h ****       // FIXME There is no dtor declared, but we should have something
 280:/usr/include/c++/6/bits/stl_map.h ****       // generated by Doxygen.  I don't know what tags to add to this
 281:/usr/include/c++/6/bits/stl_map.h ****       // paragraph to make that happen:
 282:/usr/include/c++/6/bits/stl_map.h ****       /**
 283:/usr/include/c++/6/bits/stl_map.h ****        *  The dtor only erases the elements, and note that if the elements
 284:/usr/include/c++/6/bits/stl_map.h ****        *  themselves are pointers, the pointed-to memory is not touched in any
 285:/usr/include/c++/6/bits/stl_map.h ****        *  way.  Managing the pointer is the user's responsibility.
 286:/usr/include/c++/6/bits/stl_map.h ****        */
 287:/usr/include/c++/6/bits/stl_map.h **** 
 288:/usr/include/c++/6/bits/stl_map.h ****       /**
 289:/usr/include/c++/6/bits/stl_map.h ****        *  @brief  %Map assignment operator.
 290:/usr/include/c++/6/bits/stl_map.h ****        *  @param  __x  A %map of identical element and allocator types.
 291:/usr/include/c++/6/bits/stl_map.h ****        *
 292:/usr/include/c++/6/bits/stl_map.h ****        *  All the elements of @a __x are copied, but unlike the copy
 293:/usr/include/c++/6/bits/stl_map.h ****        *  constructor, the allocator object is not copied.
 294:/usr/include/c++/6/bits/stl_map.h ****        */
 295:/usr/include/c++/6/bits/stl_map.h ****       map&
 296:/usr/include/c++/6/bits/stl_map.h ****       operator=(const map& __x)
 297:/usr/include/c++/6/bits/stl_map.h ****       {
 298:/usr/include/c++/6/bits/stl_map.h **** 	_M_t = __x._M_t;
 299:/usr/include/c++/6/bits/stl_map.h **** 	return *this;
 300:/usr/include/c++/6/bits/stl_map.h ****       }
 301:/usr/include/c++/6/bits/stl_map.h **** 
 302:/usr/include/c++/6/bits/stl_map.h **** #if __cplusplus >= 201103L
 303:/usr/include/c++/6/bits/stl_map.h ****       /// Move assignment operator.
 304:/usr/include/c++/6/bits/stl_map.h ****       map&
 305:/usr/include/c++/6/bits/stl_map.h ****       operator=(map&&) = default;
 306:/usr/include/c++/6/bits/stl_map.h **** 
 307:/usr/include/c++/6/bits/stl_map.h ****       /**
 308:/usr/include/c++/6/bits/stl_map.h ****        *  @brief  %Map list assignment operator.
 309:/usr/include/c++/6/bits/stl_map.h ****        *  @param  __l  An initializer_list.
 310:/usr/include/c++/6/bits/stl_map.h ****        *
 311:/usr/include/c++/6/bits/stl_map.h ****        *  This function fills a %map with copies of the elements in the
GAS LISTING /tmp/ccsIN87E.s 			page 236


 312:/usr/include/c++/6/bits/stl_map.h ****        *  initializer list @a __l.
 313:/usr/include/c++/6/bits/stl_map.h ****        *
 314:/usr/include/c++/6/bits/stl_map.h ****        *  Note that the assignment completely changes the %map and
 315:/usr/include/c++/6/bits/stl_map.h ****        *  that the resulting %map's size is the same as the number
 316:/usr/include/c++/6/bits/stl_map.h ****        *  of elements assigned.  Old data may be lost.
 317:/usr/include/c++/6/bits/stl_map.h ****        */
 318:/usr/include/c++/6/bits/stl_map.h ****       map&
 319:/usr/include/c++/6/bits/stl_map.h ****       operator=(initializer_list<value_type> __l)
 320:/usr/include/c++/6/bits/stl_map.h ****       {
 321:/usr/include/c++/6/bits/stl_map.h **** 	_M_t._M_assign_unique(__l.begin(), __l.end());
 322:/usr/include/c++/6/bits/stl_map.h **** 	return *this;
 323:/usr/include/c++/6/bits/stl_map.h ****       }
 324:/usr/include/c++/6/bits/stl_map.h **** #endif
 325:/usr/include/c++/6/bits/stl_map.h **** 
 326:/usr/include/c++/6/bits/stl_map.h ****       /// Get a copy of the memory allocation object.
 327:/usr/include/c++/6/bits/stl_map.h ****       allocator_type
 328:/usr/include/c++/6/bits/stl_map.h ****       get_allocator() const _GLIBCXX_NOEXCEPT
 329:/usr/include/c++/6/bits/stl_map.h ****       { return allocator_type(_M_t.get_allocator()); }
 330:/usr/include/c++/6/bits/stl_map.h **** 
 331:/usr/include/c++/6/bits/stl_map.h ****       // iterators
 332:/usr/include/c++/6/bits/stl_map.h ****       /**
 333:/usr/include/c++/6/bits/stl_map.h ****        *  Returns a read/write iterator that points to the first pair in the
 334:/usr/include/c++/6/bits/stl_map.h ****        *  %map.
 335:/usr/include/c++/6/bits/stl_map.h ****        *  Iteration is done in ascending order according to the keys.
 336:/usr/include/c++/6/bits/stl_map.h ****        */
 337:/usr/include/c++/6/bits/stl_map.h ****       iterator
 338:/usr/include/c++/6/bits/stl_map.h ****       begin() _GLIBCXX_NOEXCEPT
 339:/usr/include/c++/6/bits/stl_map.h ****       { return _M_t.begin(); }
 340:/usr/include/c++/6/bits/stl_map.h **** 
 341:/usr/include/c++/6/bits/stl_map.h ****       /**
 342:/usr/include/c++/6/bits/stl_map.h ****        *  Returns a read-only (constant) iterator that points to the first pair
 343:/usr/include/c++/6/bits/stl_map.h ****        *  in the %map.  Iteration is done in ascending order according to the
 344:/usr/include/c++/6/bits/stl_map.h ****        *  keys.
 345:/usr/include/c++/6/bits/stl_map.h ****        */
 346:/usr/include/c++/6/bits/stl_map.h ****       const_iterator
 347:/usr/include/c++/6/bits/stl_map.h ****       begin() const _GLIBCXX_NOEXCEPT
 348:/usr/include/c++/6/bits/stl_map.h ****       { return _M_t.begin(); }
 349:/usr/include/c++/6/bits/stl_map.h **** 
 350:/usr/include/c++/6/bits/stl_map.h ****       /**
 351:/usr/include/c++/6/bits/stl_map.h ****        *  Returns a read/write iterator that points one past the last
 352:/usr/include/c++/6/bits/stl_map.h ****        *  pair in the %map.  Iteration is done in ascending order
 353:/usr/include/c++/6/bits/stl_map.h ****        *  according to the keys.
 354:/usr/include/c++/6/bits/stl_map.h ****        */
 355:/usr/include/c++/6/bits/stl_map.h ****       iterator
 356:/usr/include/c++/6/bits/stl_map.h ****       end() _GLIBCXX_NOEXCEPT
 357:/usr/include/c++/6/bits/stl_map.h ****       { return _M_t.end(); }
 358:/usr/include/c++/6/bits/stl_map.h **** 
 359:/usr/include/c++/6/bits/stl_map.h ****       /**
 360:/usr/include/c++/6/bits/stl_map.h ****        *  Returns a read-only (constant) iterator that points one past the last
 361:/usr/include/c++/6/bits/stl_map.h ****        *  pair in the %map.  Iteration is done in ascending order according to
 362:/usr/include/c++/6/bits/stl_map.h ****        *  the keys.
 363:/usr/include/c++/6/bits/stl_map.h ****        */
 364:/usr/include/c++/6/bits/stl_map.h ****       const_iterator
 365:/usr/include/c++/6/bits/stl_map.h ****       end() const _GLIBCXX_NOEXCEPT
 366:/usr/include/c++/6/bits/stl_map.h ****       { return _M_t.end(); }
 367:/usr/include/c++/6/bits/stl_map.h **** 
 368:/usr/include/c++/6/bits/stl_map.h ****       /**
GAS LISTING /tmp/ccsIN87E.s 			page 237


 369:/usr/include/c++/6/bits/stl_map.h ****        *  Returns a read/write reverse iterator that points to the last pair in
 370:/usr/include/c++/6/bits/stl_map.h ****        *  the %map.  Iteration is done in descending order according to the
 371:/usr/include/c++/6/bits/stl_map.h ****        *  keys.
 372:/usr/include/c++/6/bits/stl_map.h ****        */
 373:/usr/include/c++/6/bits/stl_map.h ****       reverse_iterator
 374:/usr/include/c++/6/bits/stl_map.h ****       rbegin() _GLIBCXX_NOEXCEPT
 375:/usr/include/c++/6/bits/stl_map.h ****       { return _M_t.rbegin(); }
 376:/usr/include/c++/6/bits/stl_map.h **** 
 377:/usr/include/c++/6/bits/stl_map.h ****       /**
 378:/usr/include/c++/6/bits/stl_map.h ****        *  Returns a read-only (constant) reverse iterator that points to the
 379:/usr/include/c++/6/bits/stl_map.h ****        *  last pair in the %map.  Iteration is done in descending order
 380:/usr/include/c++/6/bits/stl_map.h ****        *  according to the keys.
 381:/usr/include/c++/6/bits/stl_map.h ****        */
 382:/usr/include/c++/6/bits/stl_map.h ****       const_reverse_iterator
 383:/usr/include/c++/6/bits/stl_map.h ****       rbegin() const _GLIBCXX_NOEXCEPT
 384:/usr/include/c++/6/bits/stl_map.h ****       { return _M_t.rbegin(); }
 385:/usr/include/c++/6/bits/stl_map.h **** 
 386:/usr/include/c++/6/bits/stl_map.h ****       /**
 387:/usr/include/c++/6/bits/stl_map.h ****        *  Returns a read/write reverse iterator that points to one before the
 388:/usr/include/c++/6/bits/stl_map.h ****        *  first pair in the %map.  Iteration is done in descending order
 389:/usr/include/c++/6/bits/stl_map.h ****        *  according to the keys.
 390:/usr/include/c++/6/bits/stl_map.h ****        */
 391:/usr/include/c++/6/bits/stl_map.h ****       reverse_iterator
 392:/usr/include/c++/6/bits/stl_map.h ****       rend() _GLIBCXX_NOEXCEPT
 393:/usr/include/c++/6/bits/stl_map.h ****       { return _M_t.rend(); }
 394:/usr/include/c++/6/bits/stl_map.h **** 
 395:/usr/include/c++/6/bits/stl_map.h ****       /**
 396:/usr/include/c++/6/bits/stl_map.h ****        *  Returns a read-only (constant) reverse iterator that points to one
 397:/usr/include/c++/6/bits/stl_map.h ****        *  before the first pair in the %map.  Iteration is done in descending
 398:/usr/include/c++/6/bits/stl_map.h ****        *  order according to the keys.
 399:/usr/include/c++/6/bits/stl_map.h ****        */
 400:/usr/include/c++/6/bits/stl_map.h ****       const_reverse_iterator
 401:/usr/include/c++/6/bits/stl_map.h ****       rend() const _GLIBCXX_NOEXCEPT
 402:/usr/include/c++/6/bits/stl_map.h ****       { return _M_t.rend(); }
 403:/usr/include/c++/6/bits/stl_map.h **** 
 404:/usr/include/c++/6/bits/stl_map.h **** #if __cplusplus >= 201103L
 405:/usr/include/c++/6/bits/stl_map.h ****       /**
 406:/usr/include/c++/6/bits/stl_map.h ****        *  Returns a read-only (constant) iterator that points to the first pair
 407:/usr/include/c++/6/bits/stl_map.h ****        *  in the %map.  Iteration is done in ascending order according to the
 408:/usr/include/c++/6/bits/stl_map.h ****        *  keys.
 409:/usr/include/c++/6/bits/stl_map.h ****        */
 410:/usr/include/c++/6/bits/stl_map.h ****       const_iterator
 411:/usr/include/c++/6/bits/stl_map.h ****       cbegin() const noexcept
 412:/usr/include/c++/6/bits/stl_map.h ****       { return _M_t.begin(); }
 413:/usr/include/c++/6/bits/stl_map.h **** 
 414:/usr/include/c++/6/bits/stl_map.h ****       /**
 415:/usr/include/c++/6/bits/stl_map.h ****        *  Returns a read-only (constant) iterator that points one past the last
 416:/usr/include/c++/6/bits/stl_map.h ****        *  pair in the %map.  Iteration is done in ascending order according to
 417:/usr/include/c++/6/bits/stl_map.h ****        *  the keys.
 418:/usr/include/c++/6/bits/stl_map.h ****        */
 419:/usr/include/c++/6/bits/stl_map.h ****       const_iterator
 420:/usr/include/c++/6/bits/stl_map.h ****       cend() const noexcept
 421:/usr/include/c++/6/bits/stl_map.h ****       { return _M_t.end(); }
 422:/usr/include/c++/6/bits/stl_map.h **** 
 423:/usr/include/c++/6/bits/stl_map.h ****       /**
 424:/usr/include/c++/6/bits/stl_map.h ****        *  Returns a read-only (constant) reverse iterator that points to the
 425:/usr/include/c++/6/bits/stl_map.h ****        *  last pair in the %map.  Iteration is done in descending order
GAS LISTING /tmp/ccsIN87E.s 			page 238


 426:/usr/include/c++/6/bits/stl_map.h ****        *  according to the keys.
 427:/usr/include/c++/6/bits/stl_map.h ****        */
 428:/usr/include/c++/6/bits/stl_map.h ****       const_reverse_iterator
 429:/usr/include/c++/6/bits/stl_map.h ****       crbegin() const noexcept
 430:/usr/include/c++/6/bits/stl_map.h ****       { return _M_t.rbegin(); }
 431:/usr/include/c++/6/bits/stl_map.h **** 
 432:/usr/include/c++/6/bits/stl_map.h ****       /**
 433:/usr/include/c++/6/bits/stl_map.h ****        *  Returns a read-only (constant) reverse iterator that points to one
 434:/usr/include/c++/6/bits/stl_map.h ****        *  before the first pair in the %map.  Iteration is done in descending
 435:/usr/include/c++/6/bits/stl_map.h ****        *  order according to the keys.
 436:/usr/include/c++/6/bits/stl_map.h ****        */
 437:/usr/include/c++/6/bits/stl_map.h ****       const_reverse_iterator
 438:/usr/include/c++/6/bits/stl_map.h ****       crend() const noexcept
 439:/usr/include/c++/6/bits/stl_map.h ****       { return _M_t.rend(); }
 440:/usr/include/c++/6/bits/stl_map.h **** #endif
 441:/usr/include/c++/6/bits/stl_map.h **** 
 442:/usr/include/c++/6/bits/stl_map.h ****       // capacity
 443:/usr/include/c++/6/bits/stl_map.h ****       /** Returns true if the %map is empty.  (Thus begin() would equal
 444:/usr/include/c++/6/bits/stl_map.h ****        *  end().)
 445:/usr/include/c++/6/bits/stl_map.h ****       */
 446:/usr/include/c++/6/bits/stl_map.h ****       bool
 447:/usr/include/c++/6/bits/stl_map.h ****       empty() const _GLIBCXX_NOEXCEPT
 448:/usr/include/c++/6/bits/stl_map.h ****       { return _M_t.empty(); }
 449:/usr/include/c++/6/bits/stl_map.h **** 
 450:/usr/include/c++/6/bits/stl_map.h ****       /** Returns the size of the %map.  */
 451:/usr/include/c++/6/bits/stl_map.h ****       size_type
 452:/usr/include/c++/6/bits/stl_map.h ****       size() const _GLIBCXX_NOEXCEPT
 453:/usr/include/c++/6/bits/stl_map.h ****       { return _M_t.size(); }
 454:/usr/include/c++/6/bits/stl_map.h **** 
 455:/usr/include/c++/6/bits/stl_map.h ****       /** Returns the maximum size of the %map.  */
 456:/usr/include/c++/6/bits/stl_map.h ****       size_type
 457:/usr/include/c++/6/bits/stl_map.h ****       max_size() const _GLIBCXX_NOEXCEPT
 458:/usr/include/c++/6/bits/stl_map.h ****       { return _M_t.max_size(); }
 459:/usr/include/c++/6/bits/stl_map.h **** 
 460:/usr/include/c++/6/bits/stl_map.h ****       // [23.3.1.2] element access
 461:/usr/include/c++/6/bits/stl_map.h ****       /**
 462:/usr/include/c++/6/bits/stl_map.h ****        *  @brief  Subscript ( @c [] ) access to %map data.
 463:/usr/include/c++/6/bits/stl_map.h ****        *  @param  __k  The key for which data should be retrieved.
 464:/usr/include/c++/6/bits/stl_map.h ****        *  @return  A reference to the data of the (key,data) %pair.
 465:/usr/include/c++/6/bits/stl_map.h ****        *
 466:/usr/include/c++/6/bits/stl_map.h ****        *  Allows for easy lookup with the subscript ( @c [] )
 467:/usr/include/c++/6/bits/stl_map.h ****        *  operator.  Returns data associated with the key specified in
 468:/usr/include/c++/6/bits/stl_map.h ****        *  subscript.  If the key does not exist, a pair with that key
 469:/usr/include/c++/6/bits/stl_map.h ****        *  is created using default values, which is then returned.
 470:/usr/include/c++/6/bits/stl_map.h ****        *
 471:/usr/include/c++/6/bits/stl_map.h ****        *  Lookup requires logarithmic time.
 472:/usr/include/c++/6/bits/stl_map.h ****        */
 473:/usr/include/c++/6/bits/stl_map.h ****       mapped_type&
 474:/usr/include/c++/6/bits/stl_map.h ****       operator[](const key_type& __k)
 475:/usr/include/c++/6/bits/stl_map.h ****       {
 476:/usr/include/c++/6/bits/stl_map.h **** 	// concept requirements
 477:/usr/include/c++/6/bits/stl_map.h **** 	__glibcxx_function_requires(_DefaultConstructibleConcept<mapped_type>)
 478:/usr/include/c++/6/bits/stl_map.h **** 
 479:/usr/include/c++/6/bits/stl_map.h **** 	iterator __i = lower_bound(__k);
 480:/usr/include/c++/6/bits/stl_map.h **** 	// __i->first is greater than or equivalent to __k.
 481:/usr/include/c++/6/bits/stl_map.h **** 	if (__i == end() || key_comp()(__k, (*__i).first))
 482:/usr/include/c++/6/bits/stl_map.h **** #if __cplusplus >= 201103L
GAS LISTING /tmp/ccsIN87E.s 			page 239


 483:/usr/include/c++/6/bits/stl_map.h **** 	  __i = _M_t._M_emplace_hint_unique(__i, std::piecewise_construct,
 484:/usr/include/c++/6/bits/stl_map.h **** 					    std::tuple<const key_type&>(__k),
 485:/usr/include/c++/6/bits/stl_map.h **** 					    std::tuple<>());
 486:/usr/include/c++/6/bits/stl_map.h **** #else
 487:/usr/include/c++/6/bits/stl_map.h ****           __i = insert(__i, value_type(__k, mapped_type()));
 488:/usr/include/c++/6/bits/stl_map.h **** #endif
 489:/usr/include/c++/6/bits/stl_map.h **** 	return (*__i).second;
 490:/usr/include/c++/6/bits/stl_map.h ****       }
 491:/usr/include/c++/6/bits/stl_map.h **** 
 492:/usr/include/c++/6/bits/stl_map.h **** #if __cplusplus >= 201103L
 493:/usr/include/c++/6/bits/stl_map.h ****       mapped_type&
 494:/usr/include/c++/6/bits/stl_map.h ****       operator[](key_type&& __k)
 495:/usr/include/c++/6/bits/stl_map.h ****       {
 496:/usr/include/c++/6/bits/stl_map.h **** 	// concept requirements
 497:/usr/include/c++/6/bits/stl_map.h **** 	__glibcxx_function_requires(_DefaultConstructibleConcept<mapped_type>)
 498:/usr/include/c++/6/bits/stl_map.h **** 
 499:/usr/include/c++/6/bits/stl_map.h **** 	iterator __i = lower_bound(__k);
 500:/usr/include/c++/6/bits/stl_map.h **** 	// __i->first is greater than or equivalent to __k.
 501:/usr/include/c++/6/bits/stl_map.h **** 	if (__i == end() || key_comp()(__k, (*__i).first))
 502:/usr/include/c++/6/bits/stl_map.h **** 	  __i = _M_t._M_emplace_hint_unique(__i, std::piecewise_construct,
 503:/usr/include/c++/6/bits/stl_map.h **** 					std::forward_as_tuple(std::move(__k)),
 504:/usr/include/c++/6/bits/stl_map.h **** 					std::tuple<>());
 505:/usr/include/c++/6/bits/stl_map.h **** 	return (*__i).second;
 506:/usr/include/c++/6/bits/stl_map.h ****       }
 507:/usr/include/c++/6/bits/stl_map.h **** #endif
 508:/usr/include/c++/6/bits/stl_map.h **** 
 509:/usr/include/c++/6/bits/stl_map.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 510:/usr/include/c++/6/bits/stl_map.h ****       // DR 464. Suggestion for new member functions in standard containers.
 511:/usr/include/c++/6/bits/stl_map.h ****       /**
 512:/usr/include/c++/6/bits/stl_map.h ****        *  @brief  Access to %map data.
 513:/usr/include/c++/6/bits/stl_map.h ****        *  @param  __k  The key for which data should be retrieved.
 514:/usr/include/c++/6/bits/stl_map.h ****        *  @return  A reference to the data whose key is equivalent to @a __k, if
 515:/usr/include/c++/6/bits/stl_map.h ****        *           such a data is present in the %map.
 516:/usr/include/c++/6/bits/stl_map.h ****        *  @throw  std::out_of_range  If no such data is present.
 517:/usr/include/c++/6/bits/stl_map.h ****        */
 518:/usr/include/c++/6/bits/stl_map.h ****       mapped_type&
 519:/usr/include/c++/6/bits/stl_map.h ****       at(const key_type& __k)
 520:/usr/include/c++/6/bits/stl_map.h ****       {
 521:/usr/include/c++/6/bits/stl_map.h **** 	iterator __i = lower_bound(__k);
 522:/usr/include/c++/6/bits/stl_map.h **** 	if (__i == end() || key_comp()(__k, (*__i).first))
 523:/usr/include/c++/6/bits/stl_map.h **** 	  __throw_out_of_range(__N("map::at"));
 524:/usr/include/c++/6/bits/stl_map.h **** 	return (*__i).second;
 525:/usr/include/c++/6/bits/stl_map.h ****       }
 526:/usr/include/c++/6/bits/stl_map.h **** 
 527:/usr/include/c++/6/bits/stl_map.h ****       const mapped_type&
 528:/usr/include/c++/6/bits/stl_map.h ****       at(const key_type& __k) const
 529:/usr/include/c++/6/bits/stl_map.h ****       {
 530:/usr/include/c++/6/bits/stl_map.h **** 	const_iterator __i = lower_bound(__k);
 531:/usr/include/c++/6/bits/stl_map.h **** 	if (__i == end() || key_comp()(__k, (*__i).first))
 532:/usr/include/c++/6/bits/stl_map.h **** 	  __throw_out_of_range(__N("map::at"));
 533:/usr/include/c++/6/bits/stl_map.h **** 	return (*__i).second;
 534:/usr/include/c++/6/bits/stl_map.h ****       }
 535:/usr/include/c++/6/bits/stl_map.h **** 
 536:/usr/include/c++/6/bits/stl_map.h ****       // modifiers
 537:/usr/include/c++/6/bits/stl_map.h **** #if __cplusplus >= 201103L
 538:/usr/include/c++/6/bits/stl_map.h ****       /**
 539:/usr/include/c++/6/bits/stl_map.h ****        *  @brief Attempts to build and insert a std::pair into the %map.
GAS LISTING /tmp/ccsIN87E.s 			page 240


 540:/usr/include/c++/6/bits/stl_map.h ****        *
 541:/usr/include/c++/6/bits/stl_map.h ****        *  @param __args  Arguments used to generate a new pair instance (see
 542:/usr/include/c++/6/bits/stl_map.h ****        *	        std::piecewise_contruct for passing arguments to each
 543:/usr/include/c++/6/bits/stl_map.h ****        *	        part of the pair constructor).
 544:/usr/include/c++/6/bits/stl_map.h ****        *
 545:/usr/include/c++/6/bits/stl_map.h ****        *  @return  A pair, of which the first element is an iterator that points
 546:/usr/include/c++/6/bits/stl_map.h ****        *           to the possibly inserted pair, and the second is a bool that
 547:/usr/include/c++/6/bits/stl_map.h ****        *           is true if the pair was actually inserted.
 548:/usr/include/c++/6/bits/stl_map.h ****        *
 549:/usr/include/c++/6/bits/stl_map.h ****        *  This function attempts to build and insert a (key, value) %pair into
 550:/usr/include/c++/6/bits/stl_map.h ****        *  the %map.
 551:/usr/include/c++/6/bits/stl_map.h ****        *  A %map relies on unique keys and thus a %pair is only inserted if its
 552:/usr/include/c++/6/bits/stl_map.h ****        *  first element (the key) is not already present in the %map.
 553:/usr/include/c++/6/bits/stl_map.h ****        *
 554:/usr/include/c++/6/bits/stl_map.h ****        *  Insertion requires logarithmic time.
 555:/usr/include/c++/6/bits/stl_map.h ****        */
 556:/usr/include/c++/6/bits/stl_map.h ****       template<typename... _Args>
 557:/usr/include/c++/6/bits/stl_map.h **** 	std::pair<iterator, bool>
 558:/usr/include/c++/6/bits/stl_map.h **** 	emplace(_Args&&... __args)
 559:/usr/include/c++/6/bits/stl_map.h **** 	{ return _M_t._M_emplace_unique(std::forward<_Args>(__args)...); }
 560:/usr/include/c++/6/bits/stl_map.h **** 
 561:/usr/include/c++/6/bits/stl_map.h ****       /**
 562:/usr/include/c++/6/bits/stl_map.h ****        *  @brief Attempts to build and insert a std::pair into the %map.
 563:/usr/include/c++/6/bits/stl_map.h ****        *
 564:/usr/include/c++/6/bits/stl_map.h ****        *  @param  __pos  An iterator that serves as a hint as to where the pair
 565:/usr/include/c++/6/bits/stl_map.h ****        *                should be inserted.
 566:/usr/include/c++/6/bits/stl_map.h ****        *  @param  __args  Arguments used to generate a new pair instance (see
 567:/usr/include/c++/6/bits/stl_map.h ****        *	         std::piecewise_contruct for passing arguments to each
 568:/usr/include/c++/6/bits/stl_map.h ****        *	         part of the pair constructor).
 569:/usr/include/c++/6/bits/stl_map.h ****        *  @return An iterator that points to the element with key of the
 570:/usr/include/c++/6/bits/stl_map.h ****        *          std::pair built from @a __args (may or may not be that
 571:/usr/include/c++/6/bits/stl_map.h ****        *          std::pair).
 572:/usr/include/c++/6/bits/stl_map.h ****        *
 573:/usr/include/c++/6/bits/stl_map.h ****        *  This function is not concerned about whether the insertion took place,
 574:/usr/include/c++/6/bits/stl_map.h ****        *  and thus does not return a boolean like the single-argument emplace()
 575:/usr/include/c++/6/bits/stl_map.h ****        *  does.
 576:/usr/include/c++/6/bits/stl_map.h ****        *  Note that the first parameter is only a hint and can potentially
 577:/usr/include/c++/6/bits/stl_map.h ****        *  improve the performance of the insertion process. A bad hint would
 578:/usr/include/c++/6/bits/stl_map.h ****        *  cause no gains in efficiency.
 579:/usr/include/c++/6/bits/stl_map.h ****        *
 580:/usr/include/c++/6/bits/stl_map.h ****        *  See
 581:/usr/include/c++/6/bits/stl_map.h ****        *  https://gcc.gnu.org/onlinedocs/libstdc++/manual/associative.html#containers.associative.i
 582:/usr/include/c++/6/bits/stl_map.h ****        *  for more on @a hinting.
 583:/usr/include/c++/6/bits/stl_map.h ****        *
 584:/usr/include/c++/6/bits/stl_map.h ****        *  Insertion requires logarithmic time (if the hint is not taken).
 585:/usr/include/c++/6/bits/stl_map.h ****        */
 586:/usr/include/c++/6/bits/stl_map.h ****       template<typename... _Args>
 587:/usr/include/c++/6/bits/stl_map.h **** 	iterator
 588:/usr/include/c++/6/bits/stl_map.h **** 	emplace_hint(const_iterator __pos, _Args&&... __args)
 589:/usr/include/c++/6/bits/stl_map.h **** 	{
 590:/usr/include/c++/6/bits/stl_map.h **** 	  return _M_t._M_emplace_hint_unique(__pos,
 591:/usr/include/c++/6/bits/stl_map.h **** 					     std::forward<_Args>(__args)...);
 592:/usr/include/c++/6/bits/stl_map.h **** 	}
 593:/usr/include/c++/6/bits/stl_map.h **** #endif
 594:/usr/include/c++/6/bits/stl_map.h **** 
 595:/usr/include/c++/6/bits/stl_map.h **** #if __cplusplus > 201402L
 596:/usr/include/c++/6/bits/stl_map.h **** #define __cpp_lib_map_try_emplace 201411
GAS LISTING /tmp/ccsIN87E.s 			page 241


 597:/usr/include/c++/6/bits/stl_map.h ****       /**
 598:/usr/include/c++/6/bits/stl_map.h ****        *  @brief Attempts to build and insert a std::pair into the %map.
 599:/usr/include/c++/6/bits/stl_map.h ****        *
 600:/usr/include/c++/6/bits/stl_map.h ****        *  @param __k    Key to use for finding a possibly existing pair in
 601:/usr/include/c++/6/bits/stl_map.h ****        *                the map.
 602:/usr/include/c++/6/bits/stl_map.h ****        *  @param __args  Arguments used to generate the .second for a new pair 
 603:/usr/include/c++/6/bits/stl_map.h ****        *                instance.
 604:/usr/include/c++/6/bits/stl_map.h ****        *
 605:/usr/include/c++/6/bits/stl_map.h ****        *  @return  A pair, of which the first element is an iterator that points
 606:/usr/include/c++/6/bits/stl_map.h ****        *           to the possibly inserted pair, and the second is a bool that
 607:/usr/include/c++/6/bits/stl_map.h ****        *           is true if the pair was actually inserted.
 608:/usr/include/c++/6/bits/stl_map.h ****        *
 609:/usr/include/c++/6/bits/stl_map.h ****        *  This function attempts to build and insert a (key, value) %pair into
 610:/usr/include/c++/6/bits/stl_map.h ****        *  the %map.
 611:/usr/include/c++/6/bits/stl_map.h ****        *  A %map relies on unique keys and thus a %pair is only inserted if its
 612:/usr/include/c++/6/bits/stl_map.h ****        *  first element (the key) is not already present in the %map.
 613:/usr/include/c++/6/bits/stl_map.h ****        *  If a %pair is not inserted, this function has no effect.
 614:/usr/include/c++/6/bits/stl_map.h ****        *
 615:/usr/include/c++/6/bits/stl_map.h ****        *  Insertion requires logarithmic time.
 616:/usr/include/c++/6/bits/stl_map.h ****        */
 617:/usr/include/c++/6/bits/stl_map.h ****       template <typename... _Args>
 618:/usr/include/c++/6/bits/stl_map.h ****         pair<iterator, bool>
 619:/usr/include/c++/6/bits/stl_map.h ****         try_emplace(const key_type& __k, _Args&&... __args)
 620:/usr/include/c++/6/bits/stl_map.h ****         {
 621:/usr/include/c++/6/bits/stl_map.h ****           iterator __i = lower_bound(__k);
 622:/usr/include/c++/6/bits/stl_map.h ****           if (__i == end() || key_comp()(__k, (*__i).first))
 623:/usr/include/c++/6/bits/stl_map.h ****             {
 624:/usr/include/c++/6/bits/stl_map.h ****               __i = emplace_hint(__i, std::piecewise_construct,
 625:/usr/include/c++/6/bits/stl_map.h ****                                  std::forward_as_tuple(__k),
 626:/usr/include/c++/6/bits/stl_map.h ****                                  std::forward_as_tuple(
 627:/usr/include/c++/6/bits/stl_map.h ****                                    std::forward<_Args>(__args)...));
 628:/usr/include/c++/6/bits/stl_map.h ****               return {__i, true};
 629:/usr/include/c++/6/bits/stl_map.h ****             }
 630:/usr/include/c++/6/bits/stl_map.h ****           return {__i, false};
 631:/usr/include/c++/6/bits/stl_map.h ****         }
 632:/usr/include/c++/6/bits/stl_map.h **** 
 633:/usr/include/c++/6/bits/stl_map.h ****       // move-capable overload
 634:/usr/include/c++/6/bits/stl_map.h ****       template <typename... _Args>
 635:/usr/include/c++/6/bits/stl_map.h ****         pair<iterator, bool>
 636:/usr/include/c++/6/bits/stl_map.h ****         try_emplace(key_type&& __k, _Args&&... __args)
 637:/usr/include/c++/6/bits/stl_map.h ****         {
 638:/usr/include/c++/6/bits/stl_map.h ****           iterator __i = lower_bound(__k);
 639:/usr/include/c++/6/bits/stl_map.h ****           if (__i == end() || key_comp()(__k, (*__i).first))
 640:/usr/include/c++/6/bits/stl_map.h ****             {
 641:/usr/include/c++/6/bits/stl_map.h ****               __i = emplace_hint(__i, std::piecewise_construct,
 642:/usr/include/c++/6/bits/stl_map.h ****                                  std::forward_as_tuple(std::move(__k)),
 643:/usr/include/c++/6/bits/stl_map.h ****                                  std::forward_as_tuple(
 644:/usr/include/c++/6/bits/stl_map.h ****                                    std::forward<_Args>(__args)...));
 645:/usr/include/c++/6/bits/stl_map.h ****               return {__i, true};
 646:/usr/include/c++/6/bits/stl_map.h ****             }
 647:/usr/include/c++/6/bits/stl_map.h ****           return {__i, false};
 648:/usr/include/c++/6/bits/stl_map.h ****         }
 649:/usr/include/c++/6/bits/stl_map.h **** 
 650:/usr/include/c++/6/bits/stl_map.h ****       /**
 651:/usr/include/c++/6/bits/stl_map.h ****        *  @brief Attempts to build and insert a std::pair into the %map.
 652:/usr/include/c++/6/bits/stl_map.h ****        *
 653:/usr/include/c++/6/bits/stl_map.h ****        *  @param  __hint  An iterator that serves as a hint as to where the
GAS LISTING /tmp/ccsIN87E.s 			page 242


 654:/usr/include/c++/6/bits/stl_map.h ****        *                  pair should be inserted.
 655:/usr/include/c++/6/bits/stl_map.h ****        *  @param __k    Key to use for finding a possibly existing pair in
 656:/usr/include/c++/6/bits/stl_map.h ****        *                the map.
 657:/usr/include/c++/6/bits/stl_map.h ****        *  @param __args  Arguments used to generate the .second for a new pair 
 658:/usr/include/c++/6/bits/stl_map.h ****        *                instance.
 659:/usr/include/c++/6/bits/stl_map.h ****        *  @return An iterator that points to the element with key of the
 660:/usr/include/c++/6/bits/stl_map.h ****        *          std::pair built from @a __args (may or may not be that
 661:/usr/include/c++/6/bits/stl_map.h ****        *          std::pair).
 662:/usr/include/c++/6/bits/stl_map.h ****        *
 663:/usr/include/c++/6/bits/stl_map.h ****        *  This function is not concerned about whether the insertion took place,
 664:/usr/include/c++/6/bits/stl_map.h ****        *  and thus does not return a boolean like the single-argument 
 665:/usr/include/c++/6/bits/stl_map.h ****        *  try_emplace() does. However, if insertion did not take place,
 666:/usr/include/c++/6/bits/stl_map.h ****        *  this function has no effect.
 667:/usr/include/c++/6/bits/stl_map.h ****        *  Note that the first parameter is only a hint and can potentially
 668:/usr/include/c++/6/bits/stl_map.h ****        *  improve the performance of the insertion process. A bad hint would
 669:/usr/include/c++/6/bits/stl_map.h ****        *  cause no gains in efficiency.
 670:/usr/include/c++/6/bits/stl_map.h ****        *
 671:/usr/include/c++/6/bits/stl_map.h ****        *  See
 672:/usr/include/c++/6/bits/stl_map.h ****        *  https://gcc.gnu.org/onlinedocs/libstdc++/manual/associative.html#containers.associative.i
 673:/usr/include/c++/6/bits/stl_map.h ****        *  for more on @a hinting.
 674:/usr/include/c++/6/bits/stl_map.h ****        *
 675:/usr/include/c++/6/bits/stl_map.h ****        *  Insertion requires logarithmic time (if the hint is not taken).
 676:/usr/include/c++/6/bits/stl_map.h ****        */
 677:/usr/include/c++/6/bits/stl_map.h ****       template <typename... _Args>
 678:/usr/include/c++/6/bits/stl_map.h ****         iterator
 679:/usr/include/c++/6/bits/stl_map.h ****         try_emplace(const_iterator __hint, const key_type& __k,
 680:/usr/include/c++/6/bits/stl_map.h ****                     _Args&&... __args)
 681:/usr/include/c++/6/bits/stl_map.h ****         {
 682:/usr/include/c++/6/bits/stl_map.h ****           iterator __i;
 683:/usr/include/c++/6/bits/stl_map.h ****           auto __true_hint = _M_t._M_get_insert_hint_unique_pos(__hint, __k);
 684:/usr/include/c++/6/bits/stl_map.h ****           if (__true_hint.second)
 685:/usr/include/c++/6/bits/stl_map.h ****             __i = emplace_hint(iterator(__true_hint.second),
 686:/usr/include/c++/6/bits/stl_map.h ****                                std::piecewise_construct,
 687:/usr/include/c++/6/bits/stl_map.h ****                                std::forward_as_tuple(__k),
 688:/usr/include/c++/6/bits/stl_map.h ****                                std::forward_as_tuple(
 689:/usr/include/c++/6/bits/stl_map.h ****                                  std::forward<_Args>(__args)...));
 690:/usr/include/c++/6/bits/stl_map.h ****           else
 691:/usr/include/c++/6/bits/stl_map.h ****             __i = iterator(__true_hint.first);
 692:/usr/include/c++/6/bits/stl_map.h ****           return __i;
 693:/usr/include/c++/6/bits/stl_map.h ****         }
 694:/usr/include/c++/6/bits/stl_map.h **** 
 695:/usr/include/c++/6/bits/stl_map.h ****       // move-capable overload
 696:/usr/include/c++/6/bits/stl_map.h ****       template <typename... _Args>
 697:/usr/include/c++/6/bits/stl_map.h ****         iterator
 698:/usr/include/c++/6/bits/stl_map.h ****         try_emplace(const_iterator __hint, key_type&& __k, _Args&&... __args)
 699:/usr/include/c++/6/bits/stl_map.h ****         {
 700:/usr/include/c++/6/bits/stl_map.h ****           iterator __i;
 701:/usr/include/c++/6/bits/stl_map.h ****           auto __true_hint = _M_t._M_get_insert_hint_unique_pos(__hint, __k);
 702:/usr/include/c++/6/bits/stl_map.h ****           if (__true_hint.second)
 703:/usr/include/c++/6/bits/stl_map.h ****             __i = emplace_hint(iterator(__true_hint.second),
 704:/usr/include/c++/6/bits/stl_map.h ****                                std::piecewise_construct,
 705:/usr/include/c++/6/bits/stl_map.h ****                                std::forward_as_tuple(std::move(__k)),
 706:/usr/include/c++/6/bits/stl_map.h ****                                std::forward_as_tuple(
 707:/usr/include/c++/6/bits/stl_map.h ****                                  std::forward<_Args>(__args)...));
 708:/usr/include/c++/6/bits/stl_map.h ****           else
 709:/usr/include/c++/6/bits/stl_map.h ****             __i = iterator(__true_hint.first);
 710:/usr/include/c++/6/bits/stl_map.h ****           return __i;
GAS LISTING /tmp/ccsIN87E.s 			page 243


 711:/usr/include/c++/6/bits/stl_map.h ****         }
 712:/usr/include/c++/6/bits/stl_map.h **** #endif
 713:/usr/include/c++/6/bits/stl_map.h **** 
 714:/usr/include/c++/6/bits/stl_map.h ****       /**
 715:/usr/include/c++/6/bits/stl_map.h ****        *  @brief Attempts to insert a std::pair into the %map.
 716:/usr/include/c++/6/bits/stl_map.h **** 
 717:/usr/include/c++/6/bits/stl_map.h ****        *  @param __x Pair to be inserted (see std::make_pair for easy
 718:/usr/include/c++/6/bits/stl_map.h ****        *	     creation of pairs).
 719:/usr/include/c++/6/bits/stl_map.h ****        *
 720:/usr/include/c++/6/bits/stl_map.h ****        *  @return  A pair, of which the first element is an iterator that 
 721:/usr/include/c++/6/bits/stl_map.h ****        *           points to the possibly inserted pair, and the second is 
 722:/usr/include/c++/6/bits/stl_map.h ****        *           a bool that is true if the pair was actually inserted.
 723:/usr/include/c++/6/bits/stl_map.h ****        *
 724:/usr/include/c++/6/bits/stl_map.h ****        *  This function attempts to insert a (key, value) %pair into the %map.
 725:/usr/include/c++/6/bits/stl_map.h ****        *  A %map relies on unique keys and thus a %pair is only inserted if its
 726:/usr/include/c++/6/bits/stl_map.h ****        *  first element (the key) is not already present in the %map.
 727:/usr/include/c++/6/bits/stl_map.h ****        *
 728:/usr/include/c++/6/bits/stl_map.h ****        *  Insertion requires logarithmic time.
 729:/usr/include/c++/6/bits/stl_map.h ****        */
 730:/usr/include/c++/6/bits/stl_map.h ****       std::pair<iterator, bool>
 731:/usr/include/c++/6/bits/stl_map.h ****       insert(const value_type& __x)
 732:/usr/include/c++/6/bits/stl_map.h ****       { return _M_t._M_insert_unique(__x); }
 733:/usr/include/c++/6/bits/stl_map.h **** 
 734:/usr/include/c++/6/bits/stl_map.h **** #if __cplusplus >= 201103L
 735:/usr/include/c++/6/bits/stl_map.h ****       template<typename _Pair, typename = typename
 736:/usr/include/c++/6/bits/stl_map.h **** 	       std::enable_if<std::is_constructible<value_type,
 737:/usr/include/c++/6/bits/stl_map.h **** 						    _Pair&&>::value>::type>
 738:/usr/include/c++/6/bits/stl_map.h ****         std::pair<iterator, bool>
 739:/usr/include/c++/6/bits/stl_map.h ****         insert(_Pair&& __x)
 740:/usr/include/c++/6/bits/stl_map.h ****         { return _M_t._M_insert_unique(std::forward<_Pair>(__x)); }
 741:/usr/include/c++/6/bits/stl_map.h **** #endif
 742:/usr/include/c++/6/bits/stl_map.h **** 
 743:/usr/include/c++/6/bits/stl_map.h **** #if __cplusplus >= 201103L
 744:/usr/include/c++/6/bits/stl_map.h ****       /**
 745:/usr/include/c++/6/bits/stl_map.h ****        *  @brief Attempts to insert a list of std::pairs into the %map.
 746:/usr/include/c++/6/bits/stl_map.h ****        *  @param  __list  A std::initializer_list<value_type> of pairs to be
 747:/usr/include/c++/6/bits/stl_map.h ****        *                  inserted.
 748:/usr/include/c++/6/bits/stl_map.h ****        *
 749:/usr/include/c++/6/bits/stl_map.h ****        *  Complexity similar to that of the range constructor.
 750:/usr/include/c++/6/bits/stl_map.h ****        */
 751:/usr/include/c++/6/bits/stl_map.h ****       void
 752:/usr/include/c++/6/bits/stl_map.h ****       insert(std::initializer_list<value_type> __list)
 753:/usr/include/c++/6/bits/stl_map.h ****       { insert(__list.begin(), __list.end()); }
 754:/usr/include/c++/6/bits/stl_map.h **** #endif
 755:/usr/include/c++/6/bits/stl_map.h **** 
 756:/usr/include/c++/6/bits/stl_map.h ****       /**
 757:/usr/include/c++/6/bits/stl_map.h ****        *  @brief Attempts to insert a std::pair into the %map.
 758:/usr/include/c++/6/bits/stl_map.h ****        *  @param  __position  An iterator that serves as a hint as to where the
 759:/usr/include/c++/6/bits/stl_map.h ****        *                    pair should be inserted.
 760:/usr/include/c++/6/bits/stl_map.h ****        *  @param  __x  Pair to be inserted (see std::make_pair for easy creation
 761:/usr/include/c++/6/bits/stl_map.h ****        *               of pairs).
 762:/usr/include/c++/6/bits/stl_map.h ****        *  @return An iterator that points to the element with key of
 763:/usr/include/c++/6/bits/stl_map.h ****        *           @a __x (may or may not be the %pair passed in).
 764:/usr/include/c++/6/bits/stl_map.h ****        *
 765:/usr/include/c++/6/bits/stl_map.h **** 
 766:/usr/include/c++/6/bits/stl_map.h ****        *  This function is not concerned about whether the insertion
 767:/usr/include/c++/6/bits/stl_map.h ****        *  took place, and thus does not return a boolean like the
GAS LISTING /tmp/ccsIN87E.s 			page 244


 768:/usr/include/c++/6/bits/stl_map.h ****        *  single-argument insert() does.  Note that the first
 769:/usr/include/c++/6/bits/stl_map.h ****        *  parameter is only a hint and can potentially improve the
 770:/usr/include/c++/6/bits/stl_map.h ****        *  performance of the insertion process.  A bad hint would
 771:/usr/include/c++/6/bits/stl_map.h ****        *  cause no gains in efficiency.
 772:/usr/include/c++/6/bits/stl_map.h ****        *
 773:/usr/include/c++/6/bits/stl_map.h ****        *  See
 774:/usr/include/c++/6/bits/stl_map.h ****        *  https://gcc.gnu.org/onlinedocs/libstdc++/manual/associative.html#containers.associative.i
 775:/usr/include/c++/6/bits/stl_map.h ****        *  for more on @a hinting.
 776:/usr/include/c++/6/bits/stl_map.h ****        *
 777:/usr/include/c++/6/bits/stl_map.h ****        *  Insertion requires logarithmic time (if the hint is not taken).
 778:/usr/include/c++/6/bits/stl_map.h ****        */
 779:/usr/include/c++/6/bits/stl_map.h ****       iterator
 780:/usr/include/c++/6/bits/stl_map.h **** #if __cplusplus >= 201103L
 781:/usr/include/c++/6/bits/stl_map.h ****       insert(const_iterator __position, const value_type& __x)
 782:/usr/include/c++/6/bits/stl_map.h **** #else
 783:/usr/include/c++/6/bits/stl_map.h ****       insert(iterator __position, const value_type& __x)
 784:/usr/include/c++/6/bits/stl_map.h **** #endif
 785:/usr/include/c++/6/bits/stl_map.h ****       { return _M_t._M_insert_unique_(__position, __x); }
 786:/usr/include/c++/6/bits/stl_map.h **** 
 787:/usr/include/c++/6/bits/stl_map.h **** #if __cplusplus >= 201103L
 788:/usr/include/c++/6/bits/stl_map.h ****       template<typename _Pair, typename = typename
 789:/usr/include/c++/6/bits/stl_map.h **** 	       std::enable_if<std::is_constructible<value_type,
 790:/usr/include/c++/6/bits/stl_map.h **** 						    _Pair&&>::value>::type>
 791:/usr/include/c++/6/bits/stl_map.h ****         iterator
 792:/usr/include/c++/6/bits/stl_map.h ****         insert(const_iterator __position, _Pair&& __x)
 793:/usr/include/c++/6/bits/stl_map.h ****         { return _M_t._M_insert_unique_(__position,
 794:/usr/include/c++/6/bits/stl_map.h **** 					std::forward<_Pair>(__x)); }
 795:/usr/include/c++/6/bits/stl_map.h **** #endif
 796:/usr/include/c++/6/bits/stl_map.h **** 
 797:/usr/include/c++/6/bits/stl_map.h ****       /**
 798:/usr/include/c++/6/bits/stl_map.h ****        *  @brief Template function that attempts to insert a range of elements.
 799:/usr/include/c++/6/bits/stl_map.h ****        *  @param  __first  Iterator pointing to the start of the range to be
 800:/usr/include/c++/6/bits/stl_map.h ****        *                   inserted.
 801:/usr/include/c++/6/bits/stl_map.h ****        *  @param  __last  Iterator pointing to the end of the range.
 802:/usr/include/c++/6/bits/stl_map.h ****        *
 803:/usr/include/c++/6/bits/stl_map.h ****        *  Complexity similar to that of the range constructor.
 804:/usr/include/c++/6/bits/stl_map.h ****        */
 805:/usr/include/c++/6/bits/stl_map.h ****       template<typename _InputIterator>
 806:/usr/include/c++/6/bits/stl_map.h ****         void
 807:/usr/include/c++/6/bits/stl_map.h ****         insert(_InputIterator __first, _InputIterator __last)
 808:/usr/include/c++/6/bits/stl_map.h ****         { _M_t._M_insert_unique(__first, __last); }
 809:/usr/include/c++/6/bits/stl_map.h **** 
 810:/usr/include/c++/6/bits/stl_map.h **** #if __cplusplus > 201402L
 811:/usr/include/c++/6/bits/stl_map.h **** #define __cpp_lib_map_insertion 201411
 812:/usr/include/c++/6/bits/stl_map.h ****       /**
 813:/usr/include/c++/6/bits/stl_map.h ****        *  @brief Attempts to insert or assign a std::pair into the %map.
 814:/usr/include/c++/6/bits/stl_map.h ****        *  @param __k    Key to use for finding a possibly existing pair in
 815:/usr/include/c++/6/bits/stl_map.h ****        *                the map.
 816:/usr/include/c++/6/bits/stl_map.h ****        *  @param __obj  Argument used to generate the .second for a pair 
 817:/usr/include/c++/6/bits/stl_map.h ****        *                instance.
 818:/usr/include/c++/6/bits/stl_map.h ****        *
 819:/usr/include/c++/6/bits/stl_map.h ****        *  @return  A pair, of which the first element is an iterator that 
 820:/usr/include/c++/6/bits/stl_map.h ****        *           points to the possibly inserted pair, and the second is 
 821:/usr/include/c++/6/bits/stl_map.h ****        *           a bool that is true if the pair was actually inserted.
 822:/usr/include/c++/6/bits/stl_map.h ****        *
 823:/usr/include/c++/6/bits/stl_map.h ****        *  This function attempts to insert a (key, value) %pair into the %map.
 824:/usr/include/c++/6/bits/stl_map.h ****        *  A %map relies on unique keys and thus a %pair is only inserted if its
GAS LISTING /tmp/ccsIN87E.s 			page 245


 825:/usr/include/c++/6/bits/stl_map.h ****        *  first element (the key) is not already present in the %map.
 826:/usr/include/c++/6/bits/stl_map.h ****        *  If the %pair was already in the %map, the .second of the %pair
 827:/usr/include/c++/6/bits/stl_map.h ****        *  is assigned from __obj.
 828:/usr/include/c++/6/bits/stl_map.h ****        *
 829:/usr/include/c++/6/bits/stl_map.h ****        *  Insertion requires logarithmic time.
 830:/usr/include/c++/6/bits/stl_map.h ****        */
 831:/usr/include/c++/6/bits/stl_map.h ****       template <typename _Obj>
 832:/usr/include/c++/6/bits/stl_map.h ****         pair<iterator, bool>
 833:/usr/include/c++/6/bits/stl_map.h ****         insert_or_assign(const key_type& __k, _Obj&& __obj)
 834:/usr/include/c++/6/bits/stl_map.h ****         {
 835:/usr/include/c++/6/bits/stl_map.h ****           iterator __i = lower_bound(__k);
 836:/usr/include/c++/6/bits/stl_map.h ****           if (__i == end() || key_comp()(__k, (*__i).first))
 837:/usr/include/c++/6/bits/stl_map.h ****             {
 838:/usr/include/c++/6/bits/stl_map.h ****               __i = emplace_hint(__i, std::piecewise_construct,
 839:/usr/include/c++/6/bits/stl_map.h ****                                  std::forward_as_tuple(__k),
 840:/usr/include/c++/6/bits/stl_map.h ****                                  std::forward_as_tuple(
 841:/usr/include/c++/6/bits/stl_map.h ****                                    std::forward<_Obj>(__obj)));
 842:/usr/include/c++/6/bits/stl_map.h ****               return {__i, true};
 843:/usr/include/c++/6/bits/stl_map.h ****             }
 844:/usr/include/c++/6/bits/stl_map.h ****           (*__i).second = std::forward<_Obj>(__obj);
 845:/usr/include/c++/6/bits/stl_map.h ****           return {__i, false};
 846:/usr/include/c++/6/bits/stl_map.h ****         }
 847:/usr/include/c++/6/bits/stl_map.h **** 
 848:/usr/include/c++/6/bits/stl_map.h ****       // move-capable overload
 849:/usr/include/c++/6/bits/stl_map.h ****       template <typename _Obj>
 850:/usr/include/c++/6/bits/stl_map.h ****         pair<iterator, bool>
 851:/usr/include/c++/6/bits/stl_map.h ****         insert_or_assign(key_type&& __k, _Obj&& __obj)
 852:/usr/include/c++/6/bits/stl_map.h ****         {
 853:/usr/include/c++/6/bits/stl_map.h ****           iterator __i = lower_bound(__k);
 854:/usr/include/c++/6/bits/stl_map.h ****           if (__i == end() || key_comp()(__k, (*__i).first))
 855:/usr/include/c++/6/bits/stl_map.h ****             {
 856:/usr/include/c++/6/bits/stl_map.h ****               __i = emplace_hint(__i, std::piecewise_construct,
 857:/usr/include/c++/6/bits/stl_map.h ****                                  std::forward_as_tuple(std::move(__k)),
 858:/usr/include/c++/6/bits/stl_map.h ****                                  std::forward_as_tuple(
 859:/usr/include/c++/6/bits/stl_map.h ****                                    std::forward<_Obj>(__obj)));
 860:/usr/include/c++/6/bits/stl_map.h ****               return {__i, true};
 861:/usr/include/c++/6/bits/stl_map.h ****             }
 862:/usr/include/c++/6/bits/stl_map.h ****           (*__i).second = std::forward<_Obj>(__obj);
 863:/usr/include/c++/6/bits/stl_map.h ****           return {__i, false};
 864:/usr/include/c++/6/bits/stl_map.h ****         }
 865:/usr/include/c++/6/bits/stl_map.h **** 
 866:/usr/include/c++/6/bits/stl_map.h ****       /**
 867:/usr/include/c++/6/bits/stl_map.h ****        *  @brief Attempts to insert or assign a std::pair into the %map.
 868:/usr/include/c++/6/bits/stl_map.h ****        *  @param  __hint  An iterator that serves as a hint as to where the
 869:/usr/include/c++/6/bits/stl_map.h ****        *                  pair should be inserted.
 870:/usr/include/c++/6/bits/stl_map.h ****        *  @param __k    Key to use for finding a possibly existing pair in
 871:/usr/include/c++/6/bits/stl_map.h ****        *                the map.
 872:/usr/include/c++/6/bits/stl_map.h ****        *  @param __obj  Argument used to generate the .second for a pair 
 873:/usr/include/c++/6/bits/stl_map.h ****        *                instance.
 874:/usr/include/c++/6/bits/stl_map.h ****        *
 875:/usr/include/c++/6/bits/stl_map.h ****        *  @return An iterator that points to the element with key of
 876:/usr/include/c++/6/bits/stl_map.h ****        *           @a __x (may or may not be the %pair passed in).
 877:/usr/include/c++/6/bits/stl_map.h ****        *
 878:/usr/include/c++/6/bits/stl_map.h ****        *  This function attempts to insert a (key, value) %pair into the %map.
 879:/usr/include/c++/6/bits/stl_map.h ****        *  A %map relies on unique keys and thus a %pair is only inserted if its
 880:/usr/include/c++/6/bits/stl_map.h ****        *  first element (the key) is not already present in the %map.
 881:/usr/include/c++/6/bits/stl_map.h ****        *  If the %pair was already in the %map, the .second of the %pair
GAS LISTING /tmp/ccsIN87E.s 			page 246


 882:/usr/include/c++/6/bits/stl_map.h ****        *  is assigned from __obj.
 883:/usr/include/c++/6/bits/stl_map.h ****        *
 884:/usr/include/c++/6/bits/stl_map.h ****        *  Insertion requires logarithmic time.
 885:/usr/include/c++/6/bits/stl_map.h ****        */
 886:/usr/include/c++/6/bits/stl_map.h ****       template <typename _Obj>
 887:/usr/include/c++/6/bits/stl_map.h ****         iterator
 888:/usr/include/c++/6/bits/stl_map.h ****         insert_or_assign(const_iterator __hint,
 889:/usr/include/c++/6/bits/stl_map.h ****                          const key_type& __k, _Obj&& __obj)
 890:/usr/include/c++/6/bits/stl_map.h ****         {
 891:/usr/include/c++/6/bits/stl_map.h ****           iterator __i;
 892:/usr/include/c++/6/bits/stl_map.h ****           auto __true_hint = _M_t._M_get_insert_hint_unique_pos(__hint, __k);
 893:/usr/include/c++/6/bits/stl_map.h ****           if (__true_hint.second)
 894:/usr/include/c++/6/bits/stl_map.h ****             {
 895:/usr/include/c++/6/bits/stl_map.h ****               return emplace_hint(iterator(__true_hint.second),
 896:/usr/include/c++/6/bits/stl_map.h ****                                   std::piecewise_construct,
 897:/usr/include/c++/6/bits/stl_map.h ****                                   std::forward_as_tuple(__k),
 898:/usr/include/c++/6/bits/stl_map.h ****                                   std::forward_as_tuple(
 899:/usr/include/c++/6/bits/stl_map.h ****                                     std::forward<_Obj>(__obj)));
 900:/usr/include/c++/6/bits/stl_map.h ****             }
 901:/usr/include/c++/6/bits/stl_map.h ****           __i = iterator(__true_hint.first);
 902:/usr/include/c++/6/bits/stl_map.h ****           (*__i).second = std::forward<_Obj>(__obj);
 903:/usr/include/c++/6/bits/stl_map.h ****           return __i;
 904:/usr/include/c++/6/bits/stl_map.h ****         }
 905:/usr/include/c++/6/bits/stl_map.h **** 
 906:/usr/include/c++/6/bits/stl_map.h ****       // move-capable overload
 907:/usr/include/c++/6/bits/stl_map.h ****       template <typename _Obj>
 908:/usr/include/c++/6/bits/stl_map.h ****         iterator
 909:/usr/include/c++/6/bits/stl_map.h ****         insert_or_assign(const_iterator __hint, key_type&& __k, _Obj&& __obj)
 910:/usr/include/c++/6/bits/stl_map.h ****         {
 911:/usr/include/c++/6/bits/stl_map.h ****           iterator __i;
 912:/usr/include/c++/6/bits/stl_map.h ****           auto __true_hint = _M_t._M_get_insert_hint_unique_pos(__hint, __k);
 913:/usr/include/c++/6/bits/stl_map.h ****           if (__true_hint.second)
 914:/usr/include/c++/6/bits/stl_map.h ****             {
 915:/usr/include/c++/6/bits/stl_map.h ****               return emplace_hint(iterator(__true_hint.second),
 916:/usr/include/c++/6/bits/stl_map.h ****                                   std::piecewise_construct,
 917:/usr/include/c++/6/bits/stl_map.h ****                                   std::forward_as_tuple(std::move(__k)),
 918:/usr/include/c++/6/bits/stl_map.h ****                                   std::forward_as_tuple(
 919:/usr/include/c++/6/bits/stl_map.h ****                                     std::forward<_Obj>(__obj)));
 920:/usr/include/c++/6/bits/stl_map.h ****             }
 921:/usr/include/c++/6/bits/stl_map.h ****           __i = iterator(__true_hint.first);
 922:/usr/include/c++/6/bits/stl_map.h ****           (*__i).second = std::forward<_Obj>(__obj);
 923:/usr/include/c++/6/bits/stl_map.h ****           return __i;
 924:/usr/include/c++/6/bits/stl_map.h ****         }
 925:/usr/include/c++/6/bits/stl_map.h **** #endif
 926:/usr/include/c++/6/bits/stl_map.h **** 
 927:/usr/include/c++/6/bits/stl_map.h **** #if __cplusplus >= 201103L
 928:/usr/include/c++/6/bits/stl_map.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 929:/usr/include/c++/6/bits/stl_map.h ****       // DR 130. Associative erase should return an iterator.
 930:/usr/include/c++/6/bits/stl_map.h ****       /**
 931:/usr/include/c++/6/bits/stl_map.h ****        *  @brief Erases an element from a %map.
 932:/usr/include/c++/6/bits/stl_map.h ****        *  @param  __position  An iterator pointing to the element to be erased.
 933:/usr/include/c++/6/bits/stl_map.h ****        *  @return An iterator pointing to the element immediately following
 934:/usr/include/c++/6/bits/stl_map.h ****        *          @a position prior to the element being erased. If no such 
 935:/usr/include/c++/6/bits/stl_map.h ****        *          element exists, end() is returned.
 936:/usr/include/c++/6/bits/stl_map.h ****        *
 937:/usr/include/c++/6/bits/stl_map.h ****        *  This function erases an element, pointed to by the given
 938:/usr/include/c++/6/bits/stl_map.h ****        *  iterator, from a %map.  Note that this function only erases
GAS LISTING /tmp/ccsIN87E.s 			page 247


 939:/usr/include/c++/6/bits/stl_map.h ****        *  the element, and that if the element is itself a pointer,
 940:/usr/include/c++/6/bits/stl_map.h ****        *  the pointed-to memory is not touched in any way.  Managing
 941:/usr/include/c++/6/bits/stl_map.h ****        *  the pointer is the user's responsibility.
 942:/usr/include/c++/6/bits/stl_map.h ****        */
 943:/usr/include/c++/6/bits/stl_map.h ****       iterator
 944:/usr/include/c++/6/bits/stl_map.h ****       erase(const_iterator __position)
 945:/usr/include/c++/6/bits/stl_map.h ****       { return _M_t.erase(__position); }
 946:/usr/include/c++/6/bits/stl_map.h **** 
 947:/usr/include/c++/6/bits/stl_map.h ****       // LWG 2059
 948:/usr/include/c++/6/bits/stl_map.h ****       _GLIBCXX_ABI_TAG_CXX11
 949:/usr/include/c++/6/bits/stl_map.h ****       iterator
 950:/usr/include/c++/6/bits/stl_map.h ****       erase(iterator __position)
 951:/usr/include/c++/6/bits/stl_map.h ****       { return _M_t.erase(__position); }
 952:/usr/include/c++/6/bits/stl_map.h **** #else
 953:/usr/include/c++/6/bits/stl_map.h ****       /**
 954:/usr/include/c++/6/bits/stl_map.h ****        *  @brief Erases an element from a %map.
 955:/usr/include/c++/6/bits/stl_map.h ****        *  @param  __position  An iterator pointing to the element to be erased.
 956:/usr/include/c++/6/bits/stl_map.h ****        *
 957:/usr/include/c++/6/bits/stl_map.h ****        *  This function erases an element, pointed to by the given
 958:/usr/include/c++/6/bits/stl_map.h ****        *  iterator, from a %map.  Note that this function only erases
 959:/usr/include/c++/6/bits/stl_map.h ****        *  the element, and that if the element is itself a pointer,
 960:/usr/include/c++/6/bits/stl_map.h ****        *  the pointed-to memory is not touched in any way.  Managing
 961:/usr/include/c++/6/bits/stl_map.h ****        *  the pointer is the user's responsibility.
 962:/usr/include/c++/6/bits/stl_map.h ****        */
 963:/usr/include/c++/6/bits/stl_map.h ****       void
 964:/usr/include/c++/6/bits/stl_map.h ****       erase(iterator __position)
 965:/usr/include/c++/6/bits/stl_map.h ****       { _M_t.erase(__position); }
 966:/usr/include/c++/6/bits/stl_map.h **** #endif
 967:/usr/include/c++/6/bits/stl_map.h **** 
 968:/usr/include/c++/6/bits/stl_map.h ****       /**
 969:/usr/include/c++/6/bits/stl_map.h ****        *  @brief Erases elements according to the provided key.
 970:/usr/include/c++/6/bits/stl_map.h ****        *  @param  __x  Key of element to be erased.
 971:/usr/include/c++/6/bits/stl_map.h ****        *  @return  The number of elements erased.
 972:/usr/include/c++/6/bits/stl_map.h ****        *
 973:/usr/include/c++/6/bits/stl_map.h ****        *  This function erases all the elements located by the given key from
 974:/usr/include/c++/6/bits/stl_map.h ****        *  a %map.
 975:/usr/include/c++/6/bits/stl_map.h ****        *  Note that this function only erases the element, and that if
 976:/usr/include/c++/6/bits/stl_map.h ****        *  the element is itself a pointer, the pointed-to memory is not touched
 977:/usr/include/c++/6/bits/stl_map.h ****        *  in any way.  Managing the pointer is the user's responsibility.
 978:/usr/include/c++/6/bits/stl_map.h ****        */
 979:/usr/include/c++/6/bits/stl_map.h ****       size_type
 980:/usr/include/c++/6/bits/stl_map.h ****       erase(const key_type& __x)
 981:/usr/include/c++/6/bits/stl_map.h ****       { return _M_t.erase(__x); }
 982:/usr/include/c++/6/bits/stl_map.h **** 
 983:/usr/include/c++/6/bits/stl_map.h **** #if __cplusplus >= 201103L
 984:/usr/include/c++/6/bits/stl_map.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 985:/usr/include/c++/6/bits/stl_map.h ****       // DR 130. Associative erase should return an iterator.
 986:/usr/include/c++/6/bits/stl_map.h ****       /**
 987:/usr/include/c++/6/bits/stl_map.h ****        *  @brief Erases a [first,last) range of elements from a %map.
 988:/usr/include/c++/6/bits/stl_map.h ****        *  @param  __first  Iterator pointing to the start of the range to be
 989:/usr/include/c++/6/bits/stl_map.h ****        *                   erased.
 990:/usr/include/c++/6/bits/stl_map.h ****        *  @param __last Iterator pointing to the end of the range to
 991:/usr/include/c++/6/bits/stl_map.h ****        *                be erased.
 992:/usr/include/c++/6/bits/stl_map.h ****        *  @return The iterator @a __last.
 993:/usr/include/c++/6/bits/stl_map.h ****        *
 994:/usr/include/c++/6/bits/stl_map.h ****        *  This function erases a sequence of elements from a %map.
 995:/usr/include/c++/6/bits/stl_map.h ****        *  Note that this function only erases the element, and that if
GAS LISTING /tmp/ccsIN87E.s 			page 248


 996:/usr/include/c++/6/bits/stl_map.h ****        *  the element is itself a pointer, the pointed-to memory is not touched
 997:/usr/include/c++/6/bits/stl_map.h ****        *  in any way.  Managing the pointer is the user's responsibility.
 998:/usr/include/c++/6/bits/stl_map.h ****        */
 999:/usr/include/c++/6/bits/stl_map.h ****       iterator
1000:/usr/include/c++/6/bits/stl_map.h ****       erase(const_iterator __first, const_iterator __last)
1001:/usr/include/c++/6/bits/stl_map.h ****       { return _M_t.erase(__first, __last); }
1002:/usr/include/c++/6/bits/stl_map.h **** #else
1003:/usr/include/c++/6/bits/stl_map.h ****       /**
1004:/usr/include/c++/6/bits/stl_map.h ****        *  @brief Erases a [__first,__last) range of elements from a %map.
1005:/usr/include/c++/6/bits/stl_map.h ****        *  @param  __first  Iterator pointing to the start of the range to be
1006:/usr/include/c++/6/bits/stl_map.h ****        *                   erased.
1007:/usr/include/c++/6/bits/stl_map.h ****        *  @param __last Iterator pointing to the end of the range to
1008:/usr/include/c++/6/bits/stl_map.h ****        *                be erased.
1009:/usr/include/c++/6/bits/stl_map.h ****        *
1010:/usr/include/c++/6/bits/stl_map.h ****        *  This function erases a sequence of elements from a %map.
1011:/usr/include/c++/6/bits/stl_map.h ****        *  Note that this function only erases the element, and that if
1012:/usr/include/c++/6/bits/stl_map.h ****        *  the element is itself a pointer, the pointed-to memory is not touched
1013:/usr/include/c++/6/bits/stl_map.h ****        *  in any way.  Managing the pointer is the user's responsibility.
1014:/usr/include/c++/6/bits/stl_map.h ****        */
1015:/usr/include/c++/6/bits/stl_map.h ****       void
1016:/usr/include/c++/6/bits/stl_map.h ****       erase(iterator __first, iterator __last)
1017:/usr/include/c++/6/bits/stl_map.h ****       { _M_t.erase(__first, __last); }
1018:/usr/include/c++/6/bits/stl_map.h **** #endif
1019:/usr/include/c++/6/bits/stl_map.h **** 
1020:/usr/include/c++/6/bits/stl_map.h ****       /**
1021:/usr/include/c++/6/bits/stl_map.h ****        *  @brief  Swaps data with another %map.
1022:/usr/include/c++/6/bits/stl_map.h ****        *  @param  __x  A %map of the same element and allocator types.
1023:/usr/include/c++/6/bits/stl_map.h ****        *
1024:/usr/include/c++/6/bits/stl_map.h ****        *  This exchanges the elements between two maps in constant
1025:/usr/include/c++/6/bits/stl_map.h ****        *  time.  (It is only swapping a pointer, an integer, and an
1026:/usr/include/c++/6/bits/stl_map.h ****        *  instance of the @c Compare type (which itself is often
1027:/usr/include/c++/6/bits/stl_map.h ****        *  stateless and empty), so it should be quite fast.)  Note
1028:/usr/include/c++/6/bits/stl_map.h ****        *  that the global std::swap() function is specialized such
1029:/usr/include/c++/6/bits/stl_map.h ****        *  that std::swap(m1,m2) will feed to this function.
1030:/usr/include/c++/6/bits/stl_map.h ****        */
1031:/usr/include/c++/6/bits/stl_map.h ****       void
1032:/usr/include/c++/6/bits/stl_map.h ****       swap(map& __x)
1033:/usr/include/c++/6/bits/stl_map.h ****       _GLIBCXX_NOEXCEPT_IF(__is_nothrow_swappable<_Compare>::value)
1034:/usr/include/c++/6/bits/stl_map.h ****       { _M_t.swap(__x._M_t); }
1035:/usr/include/c++/6/bits/stl_map.h **** 
1036:/usr/include/c++/6/bits/stl_map.h ****       /**
1037:/usr/include/c++/6/bits/stl_map.h ****        *  Erases all elements in a %map.  Note that this function only
1038:/usr/include/c++/6/bits/stl_map.h ****        *  erases the elements, and that if the elements themselves are
1039:/usr/include/c++/6/bits/stl_map.h ****        *  pointers, the pointed-to memory is not touched in any way.
1040:/usr/include/c++/6/bits/stl_map.h ****        *  Managing the pointer is the user's responsibility.
1041:/usr/include/c++/6/bits/stl_map.h ****        */
1042:/usr/include/c++/6/bits/stl_map.h ****       void
1043:/usr/include/c++/6/bits/stl_map.h ****       clear() _GLIBCXX_NOEXCEPT
1044:/usr/include/c++/6/bits/stl_map.h ****       { _M_t.clear(); }
1045:/usr/include/c++/6/bits/stl_map.h **** 
1046:/usr/include/c++/6/bits/stl_map.h ****       // observers
1047:/usr/include/c++/6/bits/stl_map.h ****       /**
1048:/usr/include/c++/6/bits/stl_map.h ****        *  Returns the key comparison object out of which the %map was
1049:/usr/include/c++/6/bits/stl_map.h ****        *  constructed.
1050:/usr/include/c++/6/bits/stl_map.h ****        */
1051:/usr/include/c++/6/bits/stl_map.h ****       key_compare
1052:/usr/include/c++/6/bits/stl_map.h ****       key_comp() const
GAS LISTING /tmp/ccsIN87E.s 			page 249


1053:/usr/include/c++/6/bits/stl_map.h ****       { return _M_t.key_comp(); }
1054:/usr/include/c++/6/bits/stl_map.h **** 
1055:/usr/include/c++/6/bits/stl_map.h ****       /**
1056:/usr/include/c++/6/bits/stl_map.h ****        *  Returns a value comparison object, built from the key comparison
1057:/usr/include/c++/6/bits/stl_map.h ****        *  object out of which the %map was constructed.
1058:/usr/include/c++/6/bits/stl_map.h ****        */
1059:/usr/include/c++/6/bits/stl_map.h ****       value_compare
1060:/usr/include/c++/6/bits/stl_map.h ****       value_comp() const
1061:/usr/include/c++/6/bits/stl_map.h ****       { return value_compare(_M_t.key_comp()); }
1062:/usr/include/c++/6/bits/stl_map.h **** 
1063:/usr/include/c++/6/bits/stl_map.h ****       // [23.3.1.3] map operations
1064:/usr/include/c++/6/bits/stl_map.h **** 
1065:/usr/include/c++/6/bits/stl_map.h ****       //@{
1066:/usr/include/c++/6/bits/stl_map.h ****       /**
1067:/usr/include/c++/6/bits/stl_map.h ****        *  @brief Tries to locate an element in a %map.
1068:/usr/include/c++/6/bits/stl_map.h ****        *  @param  __x  Key of (key, value) %pair to be located.
1069:/usr/include/c++/6/bits/stl_map.h ****        *  @return  Iterator pointing to sought-after element, or end() if not
1070:/usr/include/c++/6/bits/stl_map.h ****        *           found.
1071:/usr/include/c++/6/bits/stl_map.h ****        *
1072:/usr/include/c++/6/bits/stl_map.h ****        *  This function takes a key and tries to locate the element with which
1073:/usr/include/c++/6/bits/stl_map.h ****        *  the key matches.  If successful the function returns an iterator
1074:/usr/include/c++/6/bits/stl_map.h ****        *  pointing to the sought after %pair.  If unsuccessful it returns the
1075:/usr/include/c++/6/bits/stl_map.h ****        *  past-the-end ( @c end() ) iterator.
1076:/usr/include/c++/6/bits/stl_map.h ****        */
1077:/usr/include/c++/6/bits/stl_map.h **** 
1078:/usr/include/c++/6/bits/stl_map.h ****       iterator
1079:/usr/include/c++/6/bits/stl_map.h ****       find(const key_type& __x)
 5646              		.loc 26 1079 0
 5647              		.cfi_startproc
 5648 0000 55       		pushq	%rbp
 5649              		.cfi_def_cfa_offset 16
 5650              		.cfi_offset 6, -16
 5651 0001 4889E5   		movq	%rsp, %rbp
 5652              		.cfi_def_cfa_register 6
 5653 0004 4883EC10 		subq	$16, %rsp
 5654 0008 48897DF8 		movq	%rdi, -8(%rbp)
 5655 000c 488975F0 		movq	%rsi, -16(%rbp)
1080:/usr/include/c++/6/bits/stl_map.h ****       { return _M_t.find(__x); }
 5656              		.loc 26 1080 0
 5657 0010 488B45F8 		movq	-8(%rbp), %rax
 5658 0014 488B55F0 		movq	-16(%rbp), %rdx
 5659 0018 4889D6   		movq	%rdx, %rsi
 5660 001b 4889C7   		movq	%rax, %rdi
 5661 001e E8000000 		call	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt1
 5661      00
 5662 0023 C9       		leave
 5663              		.cfi_def_cfa 7, 8
 5664 0024 C3       		ret
 5665              		.cfi_endproc
 5666              	.LFE11670:
 5668              		.section	.text._ZNSt3mapIN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS0_8functionIFvS4_EEENS2_10compa
 5669              		.align 2
 5670              		.weak	_ZNSt3mapIN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS0_8functionIFvS4_EEENS2_10comparatorESaI
 5672              	_ZNSt3mapIN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS0_8functionIFvS4_EEENS2_10comparatorESaISt4pair
 5673              	.LFB11671:
 356:/usr/include/c++/6/bits/stl_map.h ****       { return _M_t.end(); }
 5674              		.loc 26 356 0
GAS LISTING /tmp/ccsIN87E.s 			page 250


 5675              		.cfi_startproc
 5676 0000 55       		pushq	%rbp
 5677              		.cfi_def_cfa_offset 16
 5678              		.cfi_offset 6, -16
 5679 0001 4889E5   		movq	%rsp, %rbp
 5680              		.cfi_def_cfa_register 6
 5681 0004 4883EC10 		subq	$16, %rsp
 5682 0008 48897DF8 		movq	%rdi, -8(%rbp)
 357:/usr/include/c++/6/bits/stl_map.h **** 
 5683              		.loc 26 357 0
 5684 000c 488B45F8 		movq	-8(%rbp), %rax
 5685 0010 4889C7   		movq	%rax, %rdi
 5686 0013 E8000000 		call	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt1
 5686      00
 5687 0018 C9       		leave
 5688              		.cfi_def_cfa 7, 8
 5689 0019 C3       		ret
 5690              		.cfi_endproc
 5691              	.LFE11671:
 5693              		.section	.text._ZNKSt17_Rb_tree_iteratorISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS1_8fun
 5694              		.align 2
 5695              		.weak	_ZNKSt17_Rb_tree_iteratorISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS1_8functionIFvS
 5697              	_ZNKSt17_Rb_tree_iteratorISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS1_8functionIFvS5_EEEEE
 5698              	.LFB11672:
 5699              		.file 27 "/usr/include/c++/6/bits/stl_tree.h"
   1:/usr/include/c++/6/bits/stl_tree.h **** // RB tree implementation -*- C++ -*-
   2:/usr/include/c++/6/bits/stl_tree.h **** 
   3:/usr/include/c++/6/bits/stl_tree.h **** // Copyright (C) 2001-2016 Free Software Foundation, Inc.
   4:/usr/include/c++/6/bits/stl_tree.h **** //
   5:/usr/include/c++/6/bits/stl_tree.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/6/bits/stl_tree.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/6/bits/stl_tree.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/6/bits/stl_tree.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/6/bits/stl_tree.h **** // any later version.
  10:/usr/include/c++/6/bits/stl_tree.h **** 
  11:/usr/include/c++/6/bits/stl_tree.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/6/bits/stl_tree.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/6/bits/stl_tree.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/6/bits/stl_tree.h **** // GNU General Public License for more details.
  15:/usr/include/c++/6/bits/stl_tree.h **** 
  16:/usr/include/c++/6/bits/stl_tree.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/6/bits/stl_tree.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/6/bits/stl_tree.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/6/bits/stl_tree.h **** 
  20:/usr/include/c++/6/bits/stl_tree.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/6/bits/stl_tree.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/6/bits/stl_tree.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/6/bits/stl_tree.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/6/bits/stl_tree.h **** 
  25:/usr/include/c++/6/bits/stl_tree.h **** /*
  26:/usr/include/c++/6/bits/stl_tree.h ****  *
  27:/usr/include/c++/6/bits/stl_tree.h ****  * Copyright (c) 1996,1997
  28:/usr/include/c++/6/bits/stl_tree.h ****  * Silicon Graphics Computer Systems, Inc.
  29:/usr/include/c++/6/bits/stl_tree.h ****  *
  30:/usr/include/c++/6/bits/stl_tree.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:/usr/include/c++/6/bits/stl_tree.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:/usr/include/c++/6/bits/stl_tree.h ****  * provided that the above copyright notice appear in all copies and
GAS LISTING /tmp/ccsIN87E.s 			page 251


  33:/usr/include/c++/6/bits/stl_tree.h ****  * that both that copyright notice and this permission notice appear
  34:/usr/include/c++/6/bits/stl_tree.h ****  * in supporting documentation.  Silicon Graphics makes no
  35:/usr/include/c++/6/bits/stl_tree.h ****  * representations about the suitability of this software for any
  36:/usr/include/c++/6/bits/stl_tree.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:/usr/include/c++/6/bits/stl_tree.h ****  *
  38:/usr/include/c++/6/bits/stl_tree.h ****  *
  39:/usr/include/c++/6/bits/stl_tree.h ****  * Copyright (c) 1994
  40:/usr/include/c++/6/bits/stl_tree.h ****  * Hewlett-Packard Company
  41:/usr/include/c++/6/bits/stl_tree.h ****  *
  42:/usr/include/c++/6/bits/stl_tree.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:/usr/include/c++/6/bits/stl_tree.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:/usr/include/c++/6/bits/stl_tree.h ****  * provided that the above copyright notice appear in all copies and
  45:/usr/include/c++/6/bits/stl_tree.h ****  * that both that copyright notice and this permission notice appear
  46:/usr/include/c++/6/bits/stl_tree.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  47:/usr/include/c++/6/bits/stl_tree.h ****  * representations about the suitability of this software for any
  48:/usr/include/c++/6/bits/stl_tree.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:/usr/include/c++/6/bits/stl_tree.h ****  *
  50:/usr/include/c++/6/bits/stl_tree.h ****  *
  51:/usr/include/c++/6/bits/stl_tree.h ****  */
  52:/usr/include/c++/6/bits/stl_tree.h **** 
  53:/usr/include/c++/6/bits/stl_tree.h **** /** @file bits/stl_tree.h
  54:/usr/include/c++/6/bits/stl_tree.h ****  *  This is an internal header file, included by other library headers.
  55:/usr/include/c++/6/bits/stl_tree.h ****  *  Do not attempt to use it directly. @headername{map,set}
  56:/usr/include/c++/6/bits/stl_tree.h ****  */
  57:/usr/include/c++/6/bits/stl_tree.h **** 
  58:/usr/include/c++/6/bits/stl_tree.h **** #ifndef _STL_TREE_H
  59:/usr/include/c++/6/bits/stl_tree.h **** #define _STL_TREE_H 1
  60:/usr/include/c++/6/bits/stl_tree.h **** 
  61:/usr/include/c++/6/bits/stl_tree.h **** #pragma GCC system_header
  62:/usr/include/c++/6/bits/stl_tree.h **** 
  63:/usr/include/c++/6/bits/stl_tree.h **** #include <bits/stl_algobase.h>
  64:/usr/include/c++/6/bits/stl_tree.h **** #include <bits/allocator.h>
  65:/usr/include/c++/6/bits/stl_tree.h **** #include <bits/stl_function.h>
  66:/usr/include/c++/6/bits/stl_tree.h **** #include <bits/cpp_type_traits.h>
  67:/usr/include/c++/6/bits/stl_tree.h **** #include <ext/alloc_traits.h>
  68:/usr/include/c++/6/bits/stl_tree.h **** #if __cplusplus >= 201103L
  69:/usr/include/c++/6/bits/stl_tree.h **** #include <ext/aligned_buffer.h>
  70:/usr/include/c++/6/bits/stl_tree.h **** #endif
  71:/usr/include/c++/6/bits/stl_tree.h **** 
  72:/usr/include/c++/6/bits/stl_tree.h **** namespace std _GLIBCXX_VISIBILITY(default)
  73:/usr/include/c++/6/bits/stl_tree.h **** {
  74:/usr/include/c++/6/bits/stl_tree.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  75:/usr/include/c++/6/bits/stl_tree.h **** 
  76:/usr/include/c++/6/bits/stl_tree.h **** #if __cplusplus > 201103L
  77:/usr/include/c++/6/bits/stl_tree.h **** # define __cpp_lib_generic_associative_lookup 201304
  78:/usr/include/c++/6/bits/stl_tree.h **** #endif
  79:/usr/include/c++/6/bits/stl_tree.h **** 
  80:/usr/include/c++/6/bits/stl_tree.h ****   // Red-black tree class, designed for use in implementing STL
  81:/usr/include/c++/6/bits/stl_tree.h ****   // associative containers (set, multiset, map, and multimap). The
  82:/usr/include/c++/6/bits/stl_tree.h ****   // insertion and deletion algorithms are based on those in Cormen,
  83:/usr/include/c++/6/bits/stl_tree.h ****   // Leiserson, and Rivest, Introduction to Algorithms (MIT Press,
  84:/usr/include/c++/6/bits/stl_tree.h ****   // 1990), except that
  85:/usr/include/c++/6/bits/stl_tree.h ****   //
  86:/usr/include/c++/6/bits/stl_tree.h ****   // (1) the header cell is maintained with links not only to the root
  87:/usr/include/c++/6/bits/stl_tree.h ****   // but also to the leftmost node of the tree, to enable constant
  88:/usr/include/c++/6/bits/stl_tree.h ****   // time begin(), and to the rightmost node of the tree, to enable
  89:/usr/include/c++/6/bits/stl_tree.h ****   // linear time performance when used with the generic set algorithms
GAS LISTING /tmp/ccsIN87E.s 			page 252


  90:/usr/include/c++/6/bits/stl_tree.h ****   // (set_union, etc.)
  91:/usr/include/c++/6/bits/stl_tree.h ****   // 
  92:/usr/include/c++/6/bits/stl_tree.h ****   // (2) when a node being deleted has two children its successor node
  93:/usr/include/c++/6/bits/stl_tree.h ****   // is relinked into its place, rather than copied, so that the only
  94:/usr/include/c++/6/bits/stl_tree.h ****   // iterators invalidated are those referring to the deleted node.
  95:/usr/include/c++/6/bits/stl_tree.h **** 
  96:/usr/include/c++/6/bits/stl_tree.h ****   enum _Rb_tree_color { _S_red = false, _S_black = true };
  97:/usr/include/c++/6/bits/stl_tree.h **** 
  98:/usr/include/c++/6/bits/stl_tree.h ****   struct _Rb_tree_node_base
  99:/usr/include/c++/6/bits/stl_tree.h ****   {
 100:/usr/include/c++/6/bits/stl_tree.h ****     typedef _Rb_tree_node_base* _Base_ptr;
 101:/usr/include/c++/6/bits/stl_tree.h ****     typedef const _Rb_tree_node_base* _Const_Base_ptr;
 102:/usr/include/c++/6/bits/stl_tree.h **** 
 103:/usr/include/c++/6/bits/stl_tree.h ****     _Rb_tree_color	_M_color;
 104:/usr/include/c++/6/bits/stl_tree.h ****     _Base_ptr		_M_parent;
 105:/usr/include/c++/6/bits/stl_tree.h ****     _Base_ptr		_M_left;
 106:/usr/include/c++/6/bits/stl_tree.h ****     _Base_ptr		_M_right;
 107:/usr/include/c++/6/bits/stl_tree.h **** 
 108:/usr/include/c++/6/bits/stl_tree.h ****     static _Base_ptr
 109:/usr/include/c++/6/bits/stl_tree.h ****     _S_minimum(_Base_ptr __x) _GLIBCXX_NOEXCEPT
 110:/usr/include/c++/6/bits/stl_tree.h ****     {
 111:/usr/include/c++/6/bits/stl_tree.h ****       while (__x->_M_left != 0) __x = __x->_M_left;
 112:/usr/include/c++/6/bits/stl_tree.h ****       return __x;
 113:/usr/include/c++/6/bits/stl_tree.h ****     }
 114:/usr/include/c++/6/bits/stl_tree.h **** 
 115:/usr/include/c++/6/bits/stl_tree.h ****     static _Const_Base_ptr
 116:/usr/include/c++/6/bits/stl_tree.h ****     _S_minimum(_Const_Base_ptr __x) _GLIBCXX_NOEXCEPT
 117:/usr/include/c++/6/bits/stl_tree.h ****     {
 118:/usr/include/c++/6/bits/stl_tree.h ****       while (__x->_M_left != 0) __x = __x->_M_left;
 119:/usr/include/c++/6/bits/stl_tree.h ****       return __x;
 120:/usr/include/c++/6/bits/stl_tree.h ****     }
 121:/usr/include/c++/6/bits/stl_tree.h **** 
 122:/usr/include/c++/6/bits/stl_tree.h ****     static _Base_ptr
 123:/usr/include/c++/6/bits/stl_tree.h ****     _S_maximum(_Base_ptr __x) _GLIBCXX_NOEXCEPT
 124:/usr/include/c++/6/bits/stl_tree.h ****     {
 125:/usr/include/c++/6/bits/stl_tree.h ****       while (__x->_M_right != 0) __x = __x->_M_right;
 126:/usr/include/c++/6/bits/stl_tree.h ****       return __x;
 127:/usr/include/c++/6/bits/stl_tree.h ****     }
 128:/usr/include/c++/6/bits/stl_tree.h **** 
 129:/usr/include/c++/6/bits/stl_tree.h ****     static _Const_Base_ptr
 130:/usr/include/c++/6/bits/stl_tree.h ****     _S_maximum(_Const_Base_ptr __x) _GLIBCXX_NOEXCEPT
 131:/usr/include/c++/6/bits/stl_tree.h ****     {
 132:/usr/include/c++/6/bits/stl_tree.h ****       while (__x->_M_right != 0) __x = __x->_M_right;
 133:/usr/include/c++/6/bits/stl_tree.h ****       return __x;
 134:/usr/include/c++/6/bits/stl_tree.h ****     }
 135:/usr/include/c++/6/bits/stl_tree.h ****   };
 136:/usr/include/c++/6/bits/stl_tree.h **** 
 137:/usr/include/c++/6/bits/stl_tree.h ****   template<typename _Val>
 138:/usr/include/c++/6/bits/stl_tree.h ****     struct _Rb_tree_node : public _Rb_tree_node_base
 139:/usr/include/c++/6/bits/stl_tree.h ****     {
 140:/usr/include/c++/6/bits/stl_tree.h ****       typedef _Rb_tree_node<_Val>* _Link_type;
 141:/usr/include/c++/6/bits/stl_tree.h **** 
 142:/usr/include/c++/6/bits/stl_tree.h **** #if __cplusplus < 201103L
 143:/usr/include/c++/6/bits/stl_tree.h ****       _Val _M_value_field;
 144:/usr/include/c++/6/bits/stl_tree.h **** 
 145:/usr/include/c++/6/bits/stl_tree.h ****       _Val*
 146:/usr/include/c++/6/bits/stl_tree.h ****       _M_valptr()
GAS LISTING /tmp/ccsIN87E.s 			page 253


 147:/usr/include/c++/6/bits/stl_tree.h ****       { return std::__addressof(_M_value_field); }
 148:/usr/include/c++/6/bits/stl_tree.h **** 
 149:/usr/include/c++/6/bits/stl_tree.h ****       const _Val*
 150:/usr/include/c++/6/bits/stl_tree.h ****       _M_valptr() const
 151:/usr/include/c++/6/bits/stl_tree.h ****       { return std::__addressof(_M_value_field); }
 152:/usr/include/c++/6/bits/stl_tree.h **** #else
 153:/usr/include/c++/6/bits/stl_tree.h ****       __gnu_cxx::__aligned_membuf<_Val> _M_storage;
 154:/usr/include/c++/6/bits/stl_tree.h **** 
 155:/usr/include/c++/6/bits/stl_tree.h ****       _Val*
 156:/usr/include/c++/6/bits/stl_tree.h ****       _M_valptr()
 157:/usr/include/c++/6/bits/stl_tree.h ****       { return _M_storage._M_ptr(); }
 158:/usr/include/c++/6/bits/stl_tree.h **** 
 159:/usr/include/c++/6/bits/stl_tree.h ****       const _Val*
 160:/usr/include/c++/6/bits/stl_tree.h ****       _M_valptr() const
 161:/usr/include/c++/6/bits/stl_tree.h ****       { return _M_storage._M_ptr(); }
 162:/usr/include/c++/6/bits/stl_tree.h **** #endif
 163:/usr/include/c++/6/bits/stl_tree.h ****     };
 164:/usr/include/c++/6/bits/stl_tree.h **** 
 165:/usr/include/c++/6/bits/stl_tree.h ****   _GLIBCXX_PURE _Rb_tree_node_base*
 166:/usr/include/c++/6/bits/stl_tree.h ****   _Rb_tree_increment(_Rb_tree_node_base* __x) throw ();
 167:/usr/include/c++/6/bits/stl_tree.h **** 
 168:/usr/include/c++/6/bits/stl_tree.h ****   _GLIBCXX_PURE const _Rb_tree_node_base*
 169:/usr/include/c++/6/bits/stl_tree.h ****   _Rb_tree_increment(const _Rb_tree_node_base* __x) throw ();
 170:/usr/include/c++/6/bits/stl_tree.h **** 
 171:/usr/include/c++/6/bits/stl_tree.h ****   _GLIBCXX_PURE _Rb_tree_node_base*
 172:/usr/include/c++/6/bits/stl_tree.h ****   _Rb_tree_decrement(_Rb_tree_node_base* __x) throw ();
 173:/usr/include/c++/6/bits/stl_tree.h **** 
 174:/usr/include/c++/6/bits/stl_tree.h ****   _GLIBCXX_PURE const _Rb_tree_node_base*
 175:/usr/include/c++/6/bits/stl_tree.h ****   _Rb_tree_decrement(const _Rb_tree_node_base* __x) throw ();
 176:/usr/include/c++/6/bits/stl_tree.h **** 
 177:/usr/include/c++/6/bits/stl_tree.h ****   template<typename _Tp>
 178:/usr/include/c++/6/bits/stl_tree.h ****     struct _Rb_tree_iterator
 179:/usr/include/c++/6/bits/stl_tree.h ****     {
 180:/usr/include/c++/6/bits/stl_tree.h ****       typedef _Tp  value_type;
 181:/usr/include/c++/6/bits/stl_tree.h ****       typedef _Tp& reference;
 182:/usr/include/c++/6/bits/stl_tree.h ****       typedef _Tp* pointer;
 183:/usr/include/c++/6/bits/stl_tree.h **** 
 184:/usr/include/c++/6/bits/stl_tree.h ****       typedef bidirectional_iterator_tag iterator_category;
 185:/usr/include/c++/6/bits/stl_tree.h ****       typedef ptrdiff_t                  difference_type;
 186:/usr/include/c++/6/bits/stl_tree.h **** 
 187:/usr/include/c++/6/bits/stl_tree.h ****       typedef _Rb_tree_iterator<_Tp>        _Self;
 188:/usr/include/c++/6/bits/stl_tree.h ****       typedef _Rb_tree_node_base::_Base_ptr _Base_ptr;
 189:/usr/include/c++/6/bits/stl_tree.h ****       typedef _Rb_tree_node<_Tp>*           _Link_type;
 190:/usr/include/c++/6/bits/stl_tree.h **** 
 191:/usr/include/c++/6/bits/stl_tree.h ****       _Rb_tree_iterator() _GLIBCXX_NOEXCEPT
 192:/usr/include/c++/6/bits/stl_tree.h ****       : _M_node() { }
 193:/usr/include/c++/6/bits/stl_tree.h **** 
 194:/usr/include/c++/6/bits/stl_tree.h ****       explicit
 195:/usr/include/c++/6/bits/stl_tree.h ****       _Rb_tree_iterator(_Base_ptr __x) _GLIBCXX_NOEXCEPT
 196:/usr/include/c++/6/bits/stl_tree.h ****       : _M_node(__x) { }
 197:/usr/include/c++/6/bits/stl_tree.h **** 
 198:/usr/include/c++/6/bits/stl_tree.h ****       reference
 199:/usr/include/c++/6/bits/stl_tree.h ****       operator*() const _GLIBCXX_NOEXCEPT
 200:/usr/include/c++/6/bits/stl_tree.h ****       { return *static_cast<_Link_type>(_M_node)->_M_valptr(); }
 201:/usr/include/c++/6/bits/stl_tree.h **** 
 202:/usr/include/c++/6/bits/stl_tree.h ****       pointer
 203:/usr/include/c++/6/bits/stl_tree.h ****       operator->() const _GLIBCXX_NOEXCEPT
GAS LISTING /tmp/ccsIN87E.s 			page 254


 204:/usr/include/c++/6/bits/stl_tree.h ****       { return static_cast<_Link_type> (_M_node)->_M_valptr(); }
 205:/usr/include/c++/6/bits/stl_tree.h **** 
 206:/usr/include/c++/6/bits/stl_tree.h ****       _Self&
 207:/usr/include/c++/6/bits/stl_tree.h ****       operator++() _GLIBCXX_NOEXCEPT
 208:/usr/include/c++/6/bits/stl_tree.h ****       {
 209:/usr/include/c++/6/bits/stl_tree.h **** 	_M_node = _Rb_tree_increment(_M_node);
 210:/usr/include/c++/6/bits/stl_tree.h **** 	return *this;
 211:/usr/include/c++/6/bits/stl_tree.h ****       }
 212:/usr/include/c++/6/bits/stl_tree.h **** 
 213:/usr/include/c++/6/bits/stl_tree.h ****       _Self
 214:/usr/include/c++/6/bits/stl_tree.h ****       operator++(int) _GLIBCXX_NOEXCEPT
 215:/usr/include/c++/6/bits/stl_tree.h ****       {
 216:/usr/include/c++/6/bits/stl_tree.h **** 	_Self __tmp = *this;
 217:/usr/include/c++/6/bits/stl_tree.h **** 	_M_node = _Rb_tree_increment(_M_node);
 218:/usr/include/c++/6/bits/stl_tree.h **** 	return __tmp;
 219:/usr/include/c++/6/bits/stl_tree.h ****       }
 220:/usr/include/c++/6/bits/stl_tree.h **** 
 221:/usr/include/c++/6/bits/stl_tree.h ****       _Self&
 222:/usr/include/c++/6/bits/stl_tree.h ****       operator--() _GLIBCXX_NOEXCEPT
 223:/usr/include/c++/6/bits/stl_tree.h ****       {
 224:/usr/include/c++/6/bits/stl_tree.h **** 	_M_node = _Rb_tree_decrement(_M_node);
 225:/usr/include/c++/6/bits/stl_tree.h **** 	return *this;
 226:/usr/include/c++/6/bits/stl_tree.h ****       }
 227:/usr/include/c++/6/bits/stl_tree.h **** 
 228:/usr/include/c++/6/bits/stl_tree.h ****       _Self
 229:/usr/include/c++/6/bits/stl_tree.h ****       operator--(int) _GLIBCXX_NOEXCEPT
 230:/usr/include/c++/6/bits/stl_tree.h ****       {
 231:/usr/include/c++/6/bits/stl_tree.h **** 	_Self __tmp = *this;
 232:/usr/include/c++/6/bits/stl_tree.h **** 	_M_node = _Rb_tree_decrement(_M_node);
 233:/usr/include/c++/6/bits/stl_tree.h **** 	return __tmp;
 234:/usr/include/c++/6/bits/stl_tree.h ****       }
 235:/usr/include/c++/6/bits/stl_tree.h **** 
 236:/usr/include/c++/6/bits/stl_tree.h ****       bool
 237:/usr/include/c++/6/bits/stl_tree.h ****       operator==(const _Self& __x) const _GLIBCXX_NOEXCEPT
 238:/usr/include/c++/6/bits/stl_tree.h ****       { return _M_node == __x._M_node; }
 239:/usr/include/c++/6/bits/stl_tree.h **** 
 240:/usr/include/c++/6/bits/stl_tree.h ****       bool
 241:/usr/include/c++/6/bits/stl_tree.h ****       operator!=(const _Self& __x) const _GLIBCXX_NOEXCEPT
 5700              		.loc 27 241 0
 5701              		.cfi_startproc
 5702 0000 55       		pushq	%rbp
 5703              		.cfi_def_cfa_offset 16
 5704              		.cfi_offset 6, -16
 5705 0001 4889E5   		movq	%rsp, %rbp
 5706              		.cfi_def_cfa_register 6
 5707 0004 48897DF8 		movq	%rdi, -8(%rbp)
 5708 0008 488975F0 		movq	%rsi, -16(%rbp)
 242:/usr/include/c++/6/bits/stl_tree.h ****       { return _M_node != __x._M_node; }
 5709              		.loc 27 242 0
 5710 000c 488B45F8 		movq	-8(%rbp), %rax
 5711 0010 488B10   		movq	(%rax), %rdx
 5712 0013 488B45F0 		movq	-16(%rbp), %rax
 5713 0017 488B00   		movq	(%rax), %rax
 5714 001a 4839C2   		cmpq	%rax, %rdx
 5715 001d 0F95C0   		setne	%al
 5716 0020 5D       		popq	%rbp
 5717              		.cfi_def_cfa 7, 8
GAS LISTING /tmp/ccsIN87E.s 			page 255


 5718 0021 C3       		ret
 5719              		.cfi_endproc
 5720              	.LFE11672:
 5722              		.section	.text._ZN5boost13intrusive_ptrIN3pmt8pmt_baseEEC2ERKS3_,"axG",@progbits,_ZN5boost13intrus
 5723              		.align 2
 5724              		.weak	_ZN5boost13intrusive_ptrIN3pmt8pmt_baseEEC2ERKS3_
 5726              	_ZN5boost13intrusive_ptrIN3pmt8pmt_baseEEC2ERKS3_:
 5727              	.LFB11674:
  90:/usr/include/boost/smart_ptr/intrusive_ptr.hpp ****     {
 5728              		.loc 25 90 0
 5729              		.cfi_startproc
 5730 0000 55       		pushq	%rbp
 5731              		.cfi_def_cfa_offset 16
 5732              		.cfi_offset 6, -16
 5733 0001 4889E5   		movq	%rsp, %rbp
 5734              		.cfi_def_cfa_register 6
 5735 0004 4883EC10 		subq	$16, %rsp
 5736 0008 48897DF8 		movq	%rdi, -8(%rbp)
 5737 000c 488975F0 		movq	%rsi, -16(%rbp)
 5738              	.LBB56:
  90:/usr/include/boost/smart_ptr/intrusive_ptr.hpp ****     {
 5739              		.loc 25 90 0
 5740 0010 488B45F0 		movq	-16(%rbp), %rax
 5741 0014 488B10   		movq	(%rax), %rdx
 5742 0017 488B45F8 		movq	-8(%rbp), %rax
 5743 001b 488910   		movq	%rdx, (%rax)
  92:/usr/include/boost/smart_ptr/intrusive_ptr.hpp ****     }
 5744              		.loc 25 92 0
 5745 001e 488B45F8 		movq	-8(%rbp), %rax
 5746 0022 488B00   		movq	(%rax), %rax
 5747 0025 4885C0   		testq	%rax, %rax
 5748 0028 740F     		je	.L246
  92:/usr/include/boost/smart_ptr/intrusive_ptr.hpp ****     }
 5749              		.loc 25 92 0 is_stmt 0 discriminator 1
 5750 002a 488B45F8 		movq	-8(%rbp), %rax
 5751 002e 488B00   		movq	(%rax), %rax
 5752 0031 4889C7   		movq	%rax, %rdi
 5753 0034 E8000000 		call	_ZN3pmt21intrusive_ptr_add_refEPNS_8pmt_baseE@PLT
 5753      00
 5754              	.L246:
 5755              	.LBE56:
  93:/usr/include/boost/smart_ptr/intrusive_ptr.hpp **** 
 5756              		.loc 25 93 0 is_stmt 1
 5757 0039 90       		nop
 5758 003a C9       		leave
 5759              		.cfi_def_cfa 7, 8
 5760 003b C3       		ret
 5761              		.cfi_endproc
 5762              	.LFE11674:
 5764              		.weak	_ZN5boost13intrusive_ptrIN3pmt8pmt_baseEEC1ERKS3_
 5765              		.set	_ZN5boost13intrusive_ptrIN3pmt8pmt_baseEEC1ERKS3_,_ZN5boost13intrusive_ptrIN3pmt8pmt_baseEEC2
 5766              		.section	.text._ZNSt10_Head_baseILm0ERKN5boost13intrusive_ptrIN3pmt8pmt_baseEEELb0EEC2ES6_,"axG",@
 5767              		.align 2
 5768              		.weak	_ZNSt10_Head_baseILm0ERKN5boost13intrusive_ptrIN3pmt8pmt_baseEEELb0EEC2ES6_
 5770              	_ZNSt10_Head_baseILm0ERKN5boost13intrusive_ptrIN3pmt8pmt_baseEEELb0EEC2ES6_:
 5771              	.LFB11685:
 5772              		.file 28 "/usr/include/c++/6/tuple"
GAS LISTING /tmp/ccsIN87E.s 			page 256


   1:/usr/include/c++/6/tuple **** // <tuple> -*- C++ -*-
   2:/usr/include/c++/6/tuple **** 
   3:/usr/include/c++/6/tuple **** // Copyright (C) 2007-2016 Free Software Foundation, Inc.
   4:/usr/include/c++/6/tuple **** //
   5:/usr/include/c++/6/tuple **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/6/tuple **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/6/tuple **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/6/tuple **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/6/tuple **** // any later version.
  10:/usr/include/c++/6/tuple **** 
  11:/usr/include/c++/6/tuple **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/6/tuple **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/6/tuple **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/6/tuple **** // GNU General Public License for more details.
  15:/usr/include/c++/6/tuple **** 
  16:/usr/include/c++/6/tuple **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/6/tuple **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/6/tuple **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/6/tuple **** 
  20:/usr/include/c++/6/tuple **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/6/tuple **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/6/tuple **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/6/tuple **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/6/tuple **** 
  25:/usr/include/c++/6/tuple **** /** @file include/tuple
  26:/usr/include/c++/6/tuple ****  *  This is a Standard C++ Library header.
  27:/usr/include/c++/6/tuple ****  */
  28:/usr/include/c++/6/tuple **** 
  29:/usr/include/c++/6/tuple **** #ifndef _GLIBCXX_TUPLE
  30:/usr/include/c++/6/tuple **** #define _GLIBCXX_TUPLE 1
  31:/usr/include/c++/6/tuple **** 
  32:/usr/include/c++/6/tuple **** #pragma GCC system_header
  33:/usr/include/c++/6/tuple **** 
  34:/usr/include/c++/6/tuple **** #if __cplusplus < 201103L
  35:/usr/include/c++/6/tuple **** # include <bits/c++0x_warning.h>
  36:/usr/include/c++/6/tuple **** #else
  37:/usr/include/c++/6/tuple **** 
  38:/usr/include/c++/6/tuple **** #include <utility>
  39:/usr/include/c++/6/tuple **** #include <array>
  40:/usr/include/c++/6/tuple **** #include <bits/uses_allocator.h>
  41:/usr/include/c++/6/tuple **** 
  42:/usr/include/c++/6/tuple **** namespace std _GLIBCXX_VISIBILITY(default)
  43:/usr/include/c++/6/tuple **** {
  44:/usr/include/c++/6/tuple **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  45:/usr/include/c++/6/tuple **** 
  46:/usr/include/c++/6/tuple ****   /**
  47:/usr/include/c++/6/tuple ****    *  @addtogroup utilities
  48:/usr/include/c++/6/tuple ****    *  @{
  49:/usr/include/c++/6/tuple ****    */
  50:/usr/include/c++/6/tuple **** 
  51:/usr/include/c++/6/tuple ****   template<std::size_t _Idx, typename _Head, bool _IsEmptyNotFinal>
  52:/usr/include/c++/6/tuple ****     struct _Head_base;
  53:/usr/include/c++/6/tuple **** 
  54:/usr/include/c++/6/tuple ****   template<std::size_t _Idx, typename _Head>
  55:/usr/include/c++/6/tuple ****     struct _Head_base<_Idx, _Head, true>
  56:/usr/include/c++/6/tuple ****     : public _Head
  57:/usr/include/c++/6/tuple ****     {
GAS LISTING /tmp/ccsIN87E.s 			page 257


  58:/usr/include/c++/6/tuple ****       constexpr _Head_base()
  59:/usr/include/c++/6/tuple ****       : _Head() { }
  60:/usr/include/c++/6/tuple **** 
  61:/usr/include/c++/6/tuple ****       constexpr _Head_base(const _Head& __h)
  62:/usr/include/c++/6/tuple ****       : _Head(__h) { }
  63:/usr/include/c++/6/tuple **** 
  64:/usr/include/c++/6/tuple ****       constexpr _Head_base(const _Head_base&) = default;
  65:/usr/include/c++/6/tuple ****       constexpr _Head_base(_Head_base&&) = default;
  66:/usr/include/c++/6/tuple **** 
  67:/usr/include/c++/6/tuple ****       template<typename _UHead>
  68:/usr/include/c++/6/tuple ****         constexpr _Head_base(_UHead&& __h)
  69:/usr/include/c++/6/tuple **** 	: _Head(std::forward<_UHead>(__h)) { }
  70:/usr/include/c++/6/tuple **** 
  71:/usr/include/c++/6/tuple ****       _Head_base(allocator_arg_t, __uses_alloc0)
  72:/usr/include/c++/6/tuple ****       : _Head() { }
  73:/usr/include/c++/6/tuple **** 
  74:/usr/include/c++/6/tuple ****       template<typename _Alloc>
  75:/usr/include/c++/6/tuple **** 	_Head_base(allocator_arg_t, __uses_alloc1<_Alloc> __a)
  76:/usr/include/c++/6/tuple **** 	: _Head(allocator_arg, *__a._M_a) { }
  77:/usr/include/c++/6/tuple **** 
  78:/usr/include/c++/6/tuple ****       template<typename _Alloc>
  79:/usr/include/c++/6/tuple **** 	_Head_base(allocator_arg_t, __uses_alloc2<_Alloc> __a)
  80:/usr/include/c++/6/tuple **** 	: _Head(*__a._M_a) { }
  81:/usr/include/c++/6/tuple **** 
  82:/usr/include/c++/6/tuple ****       template<typename _UHead>
  83:/usr/include/c++/6/tuple **** 	_Head_base(__uses_alloc0, _UHead&& __uhead)
  84:/usr/include/c++/6/tuple **** 	: _Head(std::forward<_UHead>(__uhead)) { }
  85:/usr/include/c++/6/tuple **** 
  86:/usr/include/c++/6/tuple ****       template<typename _Alloc, typename _UHead>
  87:/usr/include/c++/6/tuple **** 	_Head_base(__uses_alloc1<_Alloc> __a, _UHead&& __uhead)
  88:/usr/include/c++/6/tuple **** 	: _Head(allocator_arg, *__a._M_a, std::forward<_UHead>(__uhead)) { }
  89:/usr/include/c++/6/tuple **** 
  90:/usr/include/c++/6/tuple ****       template<typename _Alloc, typename _UHead>
  91:/usr/include/c++/6/tuple **** 	_Head_base(__uses_alloc2<_Alloc> __a, _UHead&& __uhead)
  92:/usr/include/c++/6/tuple **** 	: _Head(std::forward<_UHead>(__uhead), *__a._M_a) { }
  93:/usr/include/c++/6/tuple **** 
  94:/usr/include/c++/6/tuple ****       static constexpr _Head&
  95:/usr/include/c++/6/tuple ****       _M_head(_Head_base& __b) noexcept { return __b; }
  96:/usr/include/c++/6/tuple **** 
  97:/usr/include/c++/6/tuple ****       static constexpr const _Head&
  98:/usr/include/c++/6/tuple ****       _M_head(const _Head_base& __b) noexcept { return __b; }
  99:/usr/include/c++/6/tuple ****     };
 100:/usr/include/c++/6/tuple **** 
 101:/usr/include/c++/6/tuple ****   template<std::size_t _Idx, typename _Head>
 102:/usr/include/c++/6/tuple ****     struct _Head_base<_Idx, _Head, false>
 103:/usr/include/c++/6/tuple ****     {
 104:/usr/include/c++/6/tuple ****       constexpr _Head_base()
 105:/usr/include/c++/6/tuple ****       : _M_head_impl() { }
 106:/usr/include/c++/6/tuple **** 
 107:/usr/include/c++/6/tuple ****       constexpr _Head_base(const _Head& __h)
 5773              		.loc 28 107 0
 5774              		.cfi_startproc
 5775 0000 55       		pushq	%rbp
 5776              		.cfi_def_cfa_offset 16
 5777              		.cfi_offset 6, -16
 5778 0001 4889E5   		movq	%rsp, %rbp
 5779              		.cfi_def_cfa_register 6
GAS LISTING /tmp/ccsIN87E.s 			page 258


 5780 0004 48897DF8 		movq	%rdi, -8(%rbp)
 5781 0008 488975F0 		movq	%rsi, -16(%rbp)
 5782              	.LBB57:
 108:/usr/include/c++/6/tuple ****       : _M_head_impl(__h) { }
 5783              		.loc 28 108 0
 5784 000c 488B45F8 		movq	-8(%rbp), %rax
 5785 0010 488B55F0 		movq	-16(%rbp), %rdx
 5786 0014 488910   		movq	%rdx, (%rax)
 5787              	.LBE57:
 5788 0017 90       		nop
 5789 0018 5D       		popq	%rbp
 5790              		.cfi_def_cfa 7, 8
 5791 0019 C3       		ret
 5792              		.cfi_endproc
 5793              	.LFE11685:
 5795              		.weak	_ZNSt10_Head_baseILm0ERKN5boost13intrusive_ptrIN3pmt8pmt_baseEEELb0EEC1ES6_
 5796              		.set	_ZNSt10_Head_baseILm0ERKN5boost13intrusive_ptrIN3pmt8pmt_baseEEELb0EEC1ES6_,_ZNSt10_Head_base
 5797              		.section	.text._ZNSt11_Tuple_implILm0EJRKN5boost13intrusive_ptrIN3pmt8pmt_baseEEEEEC2ES6_,"axG",@p
 5798              		.align 2
 5799              		.weak	_ZNSt11_Tuple_implILm0EJRKN5boost13intrusive_ptrIN3pmt8pmt_baseEEEEEC2ES6_
 5801              	_ZNSt11_Tuple_implILm0EJRKN5boost13intrusive_ptrIN3pmt8pmt_baseEEEEEC2ES6_:
 5802              	.LFB11687:
 109:/usr/include/c++/6/tuple **** 
 110:/usr/include/c++/6/tuple ****       constexpr _Head_base(const _Head_base&) = default;
 111:/usr/include/c++/6/tuple ****       constexpr _Head_base(_Head_base&&) = default;
 112:/usr/include/c++/6/tuple **** 
 113:/usr/include/c++/6/tuple ****       template<typename _UHead>
 114:/usr/include/c++/6/tuple ****         constexpr _Head_base(_UHead&& __h)
 115:/usr/include/c++/6/tuple **** 	: _M_head_impl(std::forward<_UHead>(__h)) { }
 116:/usr/include/c++/6/tuple **** 
 117:/usr/include/c++/6/tuple ****       _Head_base(allocator_arg_t, __uses_alloc0)
 118:/usr/include/c++/6/tuple ****       : _M_head_impl() { }
 119:/usr/include/c++/6/tuple **** 
 120:/usr/include/c++/6/tuple ****       template<typename _Alloc>
 121:/usr/include/c++/6/tuple **** 	_Head_base(allocator_arg_t, __uses_alloc1<_Alloc> __a)
 122:/usr/include/c++/6/tuple **** 	: _M_head_impl(allocator_arg, *__a._M_a) { }
 123:/usr/include/c++/6/tuple **** 
 124:/usr/include/c++/6/tuple ****       template<typename _Alloc>
 125:/usr/include/c++/6/tuple **** 	_Head_base(allocator_arg_t, __uses_alloc2<_Alloc> __a)
 126:/usr/include/c++/6/tuple **** 	: _M_head_impl(*__a._M_a) { }
 127:/usr/include/c++/6/tuple **** 
 128:/usr/include/c++/6/tuple ****       template<typename _UHead>
 129:/usr/include/c++/6/tuple **** 	_Head_base(__uses_alloc0, _UHead&& __uhead)
 130:/usr/include/c++/6/tuple **** 	: _M_head_impl(std::forward<_UHead>(__uhead)) { }
 131:/usr/include/c++/6/tuple **** 
 132:/usr/include/c++/6/tuple ****       template<typename _Alloc, typename _UHead>
 133:/usr/include/c++/6/tuple **** 	_Head_base(__uses_alloc1<_Alloc> __a, _UHead&& __uhead)
 134:/usr/include/c++/6/tuple **** 	: _M_head_impl(allocator_arg, *__a._M_a, std::forward<_UHead>(__uhead))
 135:/usr/include/c++/6/tuple **** 	{ }
 136:/usr/include/c++/6/tuple **** 
 137:/usr/include/c++/6/tuple ****       template<typename _Alloc, typename _UHead>
 138:/usr/include/c++/6/tuple **** 	_Head_base(__uses_alloc2<_Alloc> __a, _UHead&& __uhead)
 139:/usr/include/c++/6/tuple **** 	: _M_head_impl(std::forward<_UHead>(__uhead), *__a._M_a) { }
 140:/usr/include/c++/6/tuple **** 
 141:/usr/include/c++/6/tuple ****       static constexpr _Head&
 142:/usr/include/c++/6/tuple ****       _M_head(_Head_base& __b) noexcept { return __b._M_head_impl; }
 143:/usr/include/c++/6/tuple **** 
GAS LISTING /tmp/ccsIN87E.s 			page 259


 144:/usr/include/c++/6/tuple ****       static constexpr const _Head&
 145:/usr/include/c++/6/tuple ****       _M_head(const _Head_base& __b) noexcept { return __b._M_head_impl; }
 146:/usr/include/c++/6/tuple **** 
 147:/usr/include/c++/6/tuple ****       _Head _M_head_impl;
 148:/usr/include/c++/6/tuple ****     };
 149:/usr/include/c++/6/tuple **** 
 150:/usr/include/c++/6/tuple ****   /**
 151:/usr/include/c++/6/tuple ****    * Contains the actual implementation of the @c tuple template, stored
 152:/usr/include/c++/6/tuple ****    * as a recursive inheritance hierarchy from the first element (most
 153:/usr/include/c++/6/tuple ****    * derived class) to the last (least derived class). The @c Idx
 154:/usr/include/c++/6/tuple ****    * parameter gives the 0-based index of the element stored at this
 155:/usr/include/c++/6/tuple ****    * point in the hierarchy; we use it to implement a constant-time
 156:/usr/include/c++/6/tuple ****    * get() operation.
 157:/usr/include/c++/6/tuple ****    */
 158:/usr/include/c++/6/tuple ****   template<std::size_t _Idx, typename... _Elements>
 159:/usr/include/c++/6/tuple ****     struct _Tuple_impl; 
 160:/usr/include/c++/6/tuple **** 
 161:/usr/include/c++/6/tuple ****   template<typename _Tp>
 162:/usr/include/c++/6/tuple ****     struct __is_empty_non_tuple : is_empty<_Tp> { };
 163:/usr/include/c++/6/tuple **** 
 164:/usr/include/c++/6/tuple ****   // Using EBO for elements that are tuples causes ambiguous base errors.
 165:/usr/include/c++/6/tuple ****   template<typename _El0, typename... _El>
 166:/usr/include/c++/6/tuple ****     struct __is_empty_non_tuple<tuple<_El0, _El...>> : false_type { };
 167:/usr/include/c++/6/tuple **** 
 168:/usr/include/c++/6/tuple ****   // Use the Empty Base-class Optimization for empty, non-final types.
 169:/usr/include/c++/6/tuple ****   template<typename _Tp>
 170:/usr/include/c++/6/tuple ****     using __empty_not_final
 171:/usr/include/c++/6/tuple ****     = typename conditional<__is_final(_Tp), false_type,
 172:/usr/include/c++/6/tuple **** 			   __is_empty_non_tuple<_Tp>>::type;
 173:/usr/include/c++/6/tuple **** 
 174:/usr/include/c++/6/tuple ****   /**
 175:/usr/include/c++/6/tuple ****    * Recursive tuple implementation. Here we store the @c Head element
 176:/usr/include/c++/6/tuple ****    * and derive from a @c Tuple_impl containing the remaining elements
 177:/usr/include/c++/6/tuple ****    * (which contains the @c Tail).
 178:/usr/include/c++/6/tuple ****    */
 179:/usr/include/c++/6/tuple ****   template<std::size_t _Idx, typename _Head, typename... _Tail>
 180:/usr/include/c++/6/tuple ****     struct _Tuple_impl<_Idx, _Head, _Tail...>
 181:/usr/include/c++/6/tuple ****     : public _Tuple_impl<_Idx + 1, _Tail...>,
 182:/usr/include/c++/6/tuple ****       private _Head_base<_Idx, _Head, __empty_not_final<_Head>::value>
 183:/usr/include/c++/6/tuple ****     {
 184:/usr/include/c++/6/tuple ****       template<std::size_t, typename...> friend class _Tuple_impl;
 185:/usr/include/c++/6/tuple **** 
 186:/usr/include/c++/6/tuple ****       typedef _Tuple_impl<_Idx + 1, _Tail...> _Inherited;
 187:/usr/include/c++/6/tuple ****       typedef _Head_base<_Idx, _Head, __empty_not_final<_Head>::value> _Base;
 188:/usr/include/c++/6/tuple **** 
 189:/usr/include/c++/6/tuple ****       static constexpr _Head&  
 190:/usr/include/c++/6/tuple ****       _M_head(_Tuple_impl& __t) noexcept { return _Base::_M_head(__t); }
 191:/usr/include/c++/6/tuple **** 
 192:/usr/include/c++/6/tuple ****       static constexpr const _Head&
 193:/usr/include/c++/6/tuple ****       _M_head(const _Tuple_impl& __t) noexcept { return _Base::_M_head(__t); }
 194:/usr/include/c++/6/tuple **** 
 195:/usr/include/c++/6/tuple ****       static constexpr _Inherited&
 196:/usr/include/c++/6/tuple ****       _M_tail(_Tuple_impl& __t) noexcept { return __t; }
 197:/usr/include/c++/6/tuple **** 
 198:/usr/include/c++/6/tuple ****       static constexpr const _Inherited&
 199:/usr/include/c++/6/tuple ****       _M_tail(const _Tuple_impl& __t) noexcept { return __t; }
 200:/usr/include/c++/6/tuple **** 
GAS LISTING /tmp/ccsIN87E.s 			page 260


 201:/usr/include/c++/6/tuple ****       constexpr _Tuple_impl()
 202:/usr/include/c++/6/tuple ****       : _Inherited(), _Base() { }
 203:/usr/include/c++/6/tuple **** 
 204:/usr/include/c++/6/tuple ****       explicit 
 205:/usr/include/c++/6/tuple ****       constexpr _Tuple_impl(const _Head& __head, const _Tail&... __tail)
 206:/usr/include/c++/6/tuple ****       : _Inherited(__tail...), _Base(__head) { }
 207:/usr/include/c++/6/tuple **** 
 208:/usr/include/c++/6/tuple ****       template<typename _UHead, typename... _UTail, typename = typename
 209:/usr/include/c++/6/tuple ****                enable_if<sizeof...(_Tail) == sizeof...(_UTail)>::type> 
 210:/usr/include/c++/6/tuple ****         explicit
 211:/usr/include/c++/6/tuple ****         constexpr _Tuple_impl(_UHead&& __head, _UTail&&... __tail)
 212:/usr/include/c++/6/tuple **** 	: _Inherited(std::forward<_UTail>(__tail)...),
 213:/usr/include/c++/6/tuple **** 	  _Base(std::forward<_UHead>(__head)) { }
 214:/usr/include/c++/6/tuple **** 
 215:/usr/include/c++/6/tuple ****       constexpr _Tuple_impl(const _Tuple_impl&) = default;
 216:/usr/include/c++/6/tuple **** 
 217:/usr/include/c++/6/tuple ****       constexpr
 218:/usr/include/c++/6/tuple ****       _Tuple_impl(_Tuple_impl&& __in)
 219:/usr/include/c++/6/tuple ****       noexcept(__and_<is_nothrow_move_constructible<_Head>,
 220:/usr/include/c++/6/tuple **** 	              is_nothrow_move_constructible<_Inherited>>::value)
 221:/usr/include/c++/6/tuple ****       : _Inherited(std::move(_M_tail(__in))), 
 222:/usr/include/c++/6/tuple **** 	_Base(std::forward<_Head>(_M_head(__in))) { }
 223:/usr/include/c++/6/tuple **** 
 224:/usr/include/c++/6/tuple ****       template<typename... _UElements>
 225:/usr/include/c++/6/tuple ****         constexpr _Tuple_impl(const _Tuple_impl<_Idx, _UElements...>& __in)
 226:/usr/include/c++/6/tuple **** 	: _Inherited(_Tuple_impl<_Idx, _UElements...>::_M_tail(__in)),
 227:/usr/include/c++/6/tuple **** 	  _Base(_Tuple_impl<_Idx, _UElements...>::_M_head(__in)) { }
 228:/usr/include/c++/6/tuple **** 
 229:/usr/include/c++/6/tuple ****       template<typename _UHead, typename... _UTails>
 230:/usr/include/c++/6/tuple ****         constexpr _Tuple_impl(_Tuple_impl<_Idx, _UHead, _UTails...>&& __in)
 231:/usr/include/c++/6/tuple **** 	: _Inherited(std::move
 232:/usr/include/c++/6/tuple **** 		     (_Tuple_impl<_Idx, _UHead, _UTails...>::_M_tail(__in))),
 233:/usr/include/c++/6/tuple **** 	  _Base(std::forward<_UHead>
 234:/usr/include/c++/6/tuple **** 		(_Tuple_impl<_Idx, _UHead, _UTails...>::_M_head(__in))) { }
 235:/usr/include/c++/6/tuple **** 
 236:/usr/include/c++/6/tuple ****       template<typename _Alloc>
 237:/usr/include/c++/6/tuple **** 	_Tuple_impl(allocator_arg_t __tag, const _Alloc& __a)
 238:/usr/include/c++/6/tuple **** 	: _Inherited(__tag, __a),
 239:/usr/include/c++/6/tuple ****           _Base(__tag, __use_alloc<_Head>(__a)) { }
 240:/usr/include/c++/6/tuple **** 
 241:/usr/include/c++/6/tuple ****       template<typename _Alloc>
 242:/usr/include/c++/6/tuple **** 	_Tuple_impl(allocator_arg_t __tag, const _Alloc& __a,
 243:/usr/include/c++/6/tuple **** 		    const _Head& __head, const _Tail&... __tail)
 244:/usr/include/c++/6/tuple **** 	: _Inherited(__tag, __a, __tail...),
 245:/usr/include/c++/6/tuple ****           _Base(__use_alloc<_Head, _Alloc, _Head>(__a), __head) { }
 246:/usr/include/c++/6/tuple **** 
 247:/usr/include/c++/6/tuple ****       template<typename _Alloc, typename _UHead, typename... _UTail,
 248:/usr/include/c++/6/tuple ****                typename = typename enable_if<sizeof...(_Tail)
 249:/usr/include/c++/6/tuple **** 					     == sizeof...(_UTail)>::type>
 250:/usr/include/c++/6/tuple **** 	_Tuple_impl(allocator_arg_t __tag, const _Alloc& __a,
 251:/usr/include/c++/6/tuple **** 	            _UHead&& __head, _UTail&&... __tail)
 252:/usr/include/c++/6/tuple **** 	: _Inherited(__tag, __a, std::forward<_UTail>(__tail)...),
 253:/usr/include/c++/6/tuple ****           _Base(__use_alloc<_Head, _Alloc, _UHead>(__a),
 254:/usr/include/c++/6/tuple **** 	        std::forward<_UHead>(__head)) { }
 255:/usr/include/c++/6/tuple **** 
 256:/usr/include/c++/6/tuple ****       template<typename _Alloc>
 257:/usr/include/c++/6/tuple ****         _Tuple_impl(allocator_arg_t __tag, const _Alloc& __a,
GAS LISTING /tmp/ccsIN87E.s 			page 261


 258:/usr/include/c++/6/tuple **** 	            const _Tuple_impl& __in)
 259:/usr/include/c++/6/tuple **** 	: _Inherited(__tag, __a, _M_tail(__in)), 
 260:/usr/include/c++/6/tuple ****           _Base(__use_alloc<_Head, _Alloc, _Head>(__a), _M_head(__in)) { }
 261:/usr/include/c++/6/tuple **** 
 262:/usr/include/c++/6/tuple ****       template<typename _Alloc>
 263:/usr/include/c++/6/tuple **** 	_Tuple_impl(allocator_arg_t __tag, const _Alloc& __a,
 264:/usr/include/c++/6/tuple **** 	            _Tuple_impl&& __in)
 265:/usr/include/c++/6/tuple **** 	: _Inherited(__tag, __a, std::move(_M_tail(__in))), 
 266:/usr/include/c++/6/tuple **** 	  _Base(__use_alloc<_Head, _Alloc, _Head>(__a),
 267:/usr/include/c++/6/tuple **** 	        std::forward<_Head>(_M_head(__in))) { }
 268:/usr/include/c++/6/tuple **** 
 269:/usr/include/c++/6/tuple ****       template<typename _Alloc, typename... _UElements>
 270:/usr/include/c++/6/tuple **** 	_Tuple_impl(allocator_arg_t __tag, const _Alloc& __a,
 271:/usr/include/c++/6/tuple **** 	            const _Tuple_impl<_Idx, _UElements...>& __in)
 272:/usr/include/c++/6/tuple **** 	: _Inherited(__tag, __a,
 273:/usr/include/c++/6/tuple **** 		     _Tuple_impl<_Idx, _UElements...>::_M_tail(__in)),
 274:/usr/include/c++/6/tuple **** 	  _Base(__use_alloc<_Head, _Alloc, _Head>(__a),
 275:/usr/include/c++/6/tuple **** 		_Tuple_impl<_Idx, _UElements...>::_M_head(__in)) { }
 276:/usr/include/c++/6/tuple **** 
 277:/usr/include/c++/6/tuple ****       template<typename _Alloc, typename _UHead, typename... _UTails>
 278:/usr/include/c++/6/tuple **** 	_Tuple_impl(allocator_arg_t __tag, const _Alloc& __a,
 279:/usr/include/c++/6/tuple **** 	            _Tuple_impl<_Idx, _UHead, _UTails...>&& __in)
 280:/usr/include/c++/6/tuple **** 	: _Inherited(__tag, __a, std::move
 281:/usr/include/c++/6/tuple **** 		     (_Tuple_impl<_Idx, _UHead, _UTails...>::_M_tail(__in))),
 282:/usr/include/c++/6/tuple **** 	  _Base(__use_alloc<_Head, _Alloc, _UHead>(__a),
 283:/usr/include/c++/6/tuple ****                 std::forward<_UHead>
 284:/usr/include/c++/6/tuple **** 		(_Tuple_impl<_Idx, _UHead, _UTails...>::_M_head(__in))) { }
 285:/usr/include/c++/6/tuple **** 
 286:/usr/include/c++/6/tuple ****       _Tuple_impl&
 287:/usr/include/c++/6/tuple ****       operator=(const _Tuple_impl& __in)
 288:/usr/include/c++/6/tuple ****       {
 289:/usr/include/c++/6/tuple **** 	_M_head(*this) = _M_head(__in);
 290:/usr/include/c++/6/tuple **** 	_M_tail(*this) = _M_tail(__in);
 291:/usr/include/c++/6/tuple **** 	return *this;
 292:/usr/include/c++/6/tuple ****       }
 293:/usr/include/c++/6/tuple **** 
 294:/usr/include/c++/6/tuple ****       _Tuple_impl&
 295:/usr/include/c++/6/tuple ****       operator=(_Tuple_impl&& __in)
 296:/usr/include/c++/6/tuple ****       noexcept(__and_<is_nothrow_move_assignable<_Head>,
 297:/usr/include/c++/6/tuple **** 	              is_nothrow_move_assignable<_Inherited>>::value)
 298:/usr/include/c++/6/tuple ****       {
 299:/usr/include/c++/6/tuple **** 	_M_head(*this) = std::forward<_Head>(_M_head(__in));
 300:/usr/include/c++/6/tuple **** 	_M_tail(*this) = std::move(_M_tail(__in));
 301:/usr/include/c++/6/tuple **** 	return *this;
 302:/usr/include/c++/6/tuple ****       }
 303:/usr/include/c++/6/tuple **** 
 304:/usr/include/c++/6/tuple ****       template<typename... _UElements>
 305:/usr/include/c++/6/tuple ****         _Tuple_impl&
 306:/usr/include/c++/6/tuple ****         operator=(const _Tuple_impl<_Idx, _UElements...>& __in)
 307:/usr/include/c++/6/tuple ****         {
 308:/usr/include/c++/6/tuple **** 	  _M_head(*this) = _Tuple_impl<_Idx, _UElements...>::_M_head(__in);
 309:/usr/include/c++/6/tuple **** 	  _M_tail(*this) = _Tuple_impl<_Idx, _UElements...>::_M_tail(__in);
 310:/usr/include/c++/6/tuple **** 	  return *this;
 311:/usr/include/c++/6/tuple **** 	}
 312:/usr/include/c++/6/tuple **** 
 313:/usr/include/c++/6/tuple ****       template<typename _UHead, typename... _UTails>
 314:/usr/include/c++/6/tuple ****         _Tuple_impl&
GAS LISTING /tmp/ccsIN87E.s 			page 262


 315:/usr/include/c++/6/tuple ****         operator=(_Tuple_impl<_Idx, _UHead, _UTails...>&& __in)
 316:/usr/include/c++/6/tuple ****         {
 317:/usr/include/c++/6/tuple **** 	  _M_head(*this) = std::forward<_UHead>
 318:/usr/include/c++/6/tuple **** 	    (_Tuple_impl<_Idx, _UHead, _UTails...>::_M_head(__in));
 319:/usr/include/c++/6/tuple **** 	  _M_tail(*this) = std::move
 320:/usr/include/c++/6/tuple **** 	    (_Tuple_impl<_Idx, _UHead, _UTails...>::_M_tail(__in));
 321:/usr/include/c++/6/tuple **** 	  return *this;
 322:/usr/include/c++/6/tuple **** 	}
 323:/usr/include/c++/6/tuple **** 
 324:/usr/include/c++/6/tuple ****     protected:
 325:/usr/include/c++/6/tuple ****       void
 326:/usr/include/c++/6/tuple ****       _M_swap(_Tuple_impl& __in)
 327:/usr/include/c++/6/tuple ****       noexcept(__is_nothrow_swappable<_Head>::value
 328:/usr/include/c++/6/tuple ****                && noexcept(_M_tail(__in)._M_swap(_M_tail(__in))))
 329:/usr/include/c++/6/tuple ****       {
 330:/usr/include/c++/6/tuple **** 	using std::swap;
 331:/usr/include/c++/6/tuple **** 	swap(_M_head(*this), _M_head(__in));
 332:/usr/include/c++/6/tuple **** 	_Inherited::_M_swap(_M_tail(__in));
 333:/usr/include/c++/6/tuple ****       }
 334:/usr/include/c++/6/tuple ****     };
 335:/usr/include/c++/6/tuple **** 
 336:/usr/include/c++/6/tuple ****   // Basis case of inheritance recursion.
 337:/usr/include/c++/6/tuple ****   template<std::size_t _Idx, typename _Head>
 338:/usr/include/c++/6/tuple ****     struct _Tuple_impl<_Idx, _Head>
 339:/usr/include/c++/6/tuple ****     : private _Head_base<_Idx, _Head, __empty_not_final<_Head>::value>
 340:/usr/include/c++/6/tuple ****     {
 341:/usr/include/c++/6/tuple ****       template<std::size_t, typename...> friend class _Tuple_impl;
 342:/usr/include/c++/6/tuple **** 
 343:/usr/include/c++/6/tuple ****       typedef _Head_base<_Idx, _Head, __empty_not_final<_Head>::value> _Base;
 344:/usr/include/c++/6/tuple **** 
 345:/usr/include/c++/6/tuple ****       static constexpr _Head&
 346:/usr/include/c++/6/tuple ****       _M_head(_Tuple_impl& __t) noexcept { return _Base::_M_head(__t); }
 347:/usr/include/c++/6/tuple **** 
 348:/usr/include/c++/6/tuple ****       static constexpr const _Head&
 349:/usr/include/c++/6/tuple ****       _M_head(const _Tuple_impl& __t) noexcept { return _Base::_M_head(__t); }
 350:/usr/include/c++/6/tuple **** 
 351:/usr/include/c++/6/tuple ****       constexpr _Tuple_impl()
 352:/usr/include/c++/6/tuple ****       : _Base() { }
 353:/usr/include/c++/6/tuple **** 
 354:/usr/include/c++/6/tuple ****       explicit
 355:/usr/include/c++/6/tuple ****       constexpr _Tuple_impl(const _Head& __head)
 5803              		.loc 28 355 0
 5804              		.cfi_startproc
 5805 0000 55       		pushq	%rbp
 5806              		.cfi_def_cfa_offset 16
 5807              		.cfi_offset 6, -16
 5808 0001 4889E5   		movq	%rsp, %rbp
 5809              		.cfi_def_cfa_register 6
 5810 0004 4883EC10 		subq	$16, %rsp
 5811 0008 48897DF8 		movq	%rdi, -8(%rbp)
 5812 000c 488975F0 		movq	%rsi, -16(%rbp)
 5813              	.LBB58:
 356:/usr/include/c++/6/tuple ****       : _Base(__head) { }
 5814              		.loc 28 356 0
 5815 0010 488B45F8 		movq	-8(%rbp), %rax
 5816 0014 488B55F0 		movq	-16(%rbp), %rdx
 5817 0018 4889D6   		movq	%rdx, %rsi
GAS LISTING /tmp/ccsIN87E.s 			page 263


 5818 001b 4889C7   		movq	%rax, %rdi
 5819 001e E8000000 		call	_ZNSt10_Head_baseILm0ERKN5boost13intrusive_ptrIN3pmt8pmt_baseEEELb0EEC2ES6_
 5819      00
 5820              	.LBE58:
 5821 0023 90       		nop
 5822 0024 C9       		leave
 5823              		.cfi_def_cfa 7, 8
 5824 0025 C3       		ret
 5825              		.cfi_endproc
 5826              	.LFE11687:
 5828              		.weak	_ZNSt11_Tuple_implILm0EJRKN5boost13intrusive_ptrIN3pmt8pmt_baseEEEEEC1ES6_
 5829              		.set	_ZNSt11_Tuple_implILm0EJRKN5boost13intrusive_ptrIN3pmt8pmt_baseEEEEEC1ES6_,_ZNSt11_Tuple_impl
 5830              		.section	.text._ZNSt5tupleIJRKN5boost13intrusive_ptrIN3pmt8pmt_baseEEEEEC2IvLb1EEES6_,"axG",@progb
 5831              		.align 2
 5832              		.weak	_ZNSt5tupleIJRKN5boost13intrusive_ptrIN3pmt8pmt_baseEEEEEC2IvLb1EEES6_
 5834              	_ZNSt5tupleIJRKN5boost13intrusive_ptrIN3pmt8pmt_baseEEEEEC2IvLb1EEES6_:
 5835              	.LFB11689:
 357:/usr/include/c++/6/tuple **** 
 358:/usr/include/c++/6/tuple ****       template<typename _UHead>
 359:/usr/include/c++/6/tuple ****         explicit
 360:/usr/include/c++/6/tuple ****         constexpr _Tuple_impl(_UHead&& __head)
 361:/usr/include/c++/6/tuple **** 	: _Base(std::forward<_UHead>(__head)) { }
 362:/usr/include/c++/6/tuple **** 
 363:/usr/include/c++/6/tuple ****       constexpr _Tuple_impl(const _Tuple_impl&) = default;
 364:/usr/include/c++/6/tuple **** 
 365:/usr/include/c++/6/tuple ****       constexpr
 366:/usr/include/c++/6/tuple ****       _Tuple_impl(_Tuple_impl&& __in)
 367:/usr/include/c++/6/tuple ****       noexcept(is_nothrow_move_constructible<_Head>::value)
 368:/usr/include/c++/6/tuple ****       : _Base(std::forward<_Head>(_M_head(__in))) { }
 369:/usr/include/c++/6/tuple **** 
 370:/usr/include/c++/6/tuple ****       template<typename _UHead>
 371:/usr/include/c++/6/tuple ****         constexpr _Tuple_impl(const _Tuple_impl<_Idx, _UHead>& __in)
 372:/usr/include/c++/6/tuple **** 	: _Base(_Tuple_impl<_Idx, _UHead>::_M_head(__in)) { }
 373:/usr/include/c++/6/tuple **** 
 374:/usr/include/c++/6/tuple ****       template<typename _UHead>
 375:/usr/include/c++/6/tuple ****         constexpr _Tuple_impl(_Tuple_impl<_Idx, _UHead>&& __in)
 376:/usr/include/c++/6/tuple **** 	: _Base(std::forward<_UHead>(_Tuple_impl<_Idx, _UHead>::_M_head(__in)))
 377:/usr/include/c++/6/tuple **** 	{ }
 378:/usr/include/c++/6/tuple **** 
 379:/usr/include/c++/6/tuple ****       template<typename _Alloc>
 380:/usr/include/c++/6/tuple **** 	_Tuple_impl(allocator_arg_t __tag, const _Alloc& __a)
 381:/usr/include/c++/6/tuple **** 	: _Base(__tag, __use_alloc<_Head>(__a)) { }
 382:/usr/include/c++/6/tuple **** 
 383:/usr/include/c++/6/tuple ****       template<typename _Alloc>
 384:/usr/include/c++/6/tuple **** 	_Tuple_impl(allocator_arg_t __tag, const _Alloc& __a,
 385:/usr/include/c++/6/tuple **** 		    const _Head& __head)
 386:/usr/include/c++/6/tuple **** 	: _Base(__use_alloc<_Head, _Alloc, _Head>(__a), __head) { }
 387:/usr/include/c++/6/tuple **** 
 388:/usr/include/c++/6/tuple ****       template<typename _Alloc, typename _UHead>
 389:/usr/include/c++/6/tuple **** 	_Tuple_impl(allocator_arg_t __tag, const _Alloc& __a,
 390:/usr/include/c++/6/tuple **** 	            _UHead&& __head)
 391:/usr/include/c++/6/tuple **** 	: _Base(__use_alloc<_Head, _Alloc, _UHead>(__a),
 392:/usr/include/c++/6/tuple **** 	        std::forward<_UHead>(__head)) { }
 393:/usr/include/c++/6/tuple **** 
 394:/usr/include/c++/6/tuple ****       template<typename _Alloc>
 395:/usr/include/c++/6/tuple ****         _Tuple_impl(allocator_arg_t __tag, const _Alloc& __a,
 396:/usr/include/c++/6/tuple **** 	            const _Tuple_impl& __in)
GAS LISTING /tmp/ccsIN87E.s 			page 264


 397:/usr/include/c++/6/tuple **** 	: _Base(__use_alloc<_Head, _Alloc, _Head>(__a), _M_head(__in)) { }
 398:/usr/include/c++/6/tuple **** 
 399:/usr/include/c++/6/tuple ****       template<typename _Alloc>
 400:/usr/include/c++/6/tuple **** 	_Tuple_impl(allocator_arg_t __tag, const _Alloc& __a,
 401:/usr/include/c++/6/tuple **** 	            _Tuple_impl&& __in)
 402:/usr/include/c++/6/tuple **** 	: _Base(__use_alloc<_Head, _Alloc, _Head>(__a),
 403:/usr/include/c++/6/tuple **** 	        std::forward<_Head>(_M_head(__in))) { }
 404:/usr/include/c++/6/tuple **** 
 405:/usr/include/c++/6/tuple ****       template<typename _Alloc, typename _UHead>
 406:/usr/include/c++/6/tuple **** 	_Tuple_impl(allocator_arg_t __tag, const _Alloc& __a,
 407:/usr/include/c++/6/tuple **** 	            const _Tuple_impl<_Idx, _UHead>& __in)
 408:/usr/include/c++/6/tuple **** 	: _Base(__use_alloc<_Head, _Alloc, _Head>(__a),
 409:/usr/include/c++/6/tuple **** 		_Tuple_impl<_Idx, _UHead>::_M_head(__in)) { }
 410:/usr/include/c++/6/tuple **** 
 411:/usr/include/c++/6/tuple ****       template<typename _Alloc, typename _UHead>
 412:/usr/include/c++/6/tuple **** 	_Tuple_impl(allocator_arg_t __tag, const _Alloc& __a,
 413:/usr/include/c++/6/tuple **** 	            _Tuple_impl<_Idx, _UHead>&& __in)
 414:/usr/include/c++/6/tuple **** 	: _Base(__use_alloc<_Head, _Alloc, _UHead>(__a),
 415:/usr/include/c++/6/tuple ****                 std::forward<_UHead>(_Tuple_impl<_Idx, _UHead>::_M_head(__in)))
 416:/usr/include/c++/6/tuple **** 	{ }
 417:/usr/include/c++/6/tuple **** 
 418:/usr/include/c++/6/tuple ****       _Tuple_impl&
 419:/usr/include/c++/6/tuple ****       operator=(const _Tuple_impl& __in)
 420:/usr/include/c++/6/tuple ****       {
 421:/usr/include/c++/6/tuple **** 	_M_head(*this) = _M_head(__in);
 422:/usr/include/c++/6/tuple **** 	return *this;
 423:/usr/include/c++/6/tuple ****       }
 424:/usr/include/c++/6/tuple **** 
 425:/usr/include/c++/6/tuple ****       _Tuple_impl&
 426:/usr/include/c++/6/tuple ****       operator=(_Tuple_impl&& __in)
 427:/usr/include/c++/6/tuple ****       noexcept(is_nothrow_move_assignable<_Head>::value)
 428:/usr/include/c++/6/tuple ****       {
 429:/usr/include/c++/6/tuple **** 	_M_head(*this) = std::forward<_Head>(_M_head(__in));
 430:/usr/include/c++/6/tuple **** 	return *this;
 431:/usr/include/c++/6/tuple ****       }
 432:/usr/include/c++/6/tuple **** 
 433:/usr/include/c++/6/tuple ****       template<typename _UHead>
 434:/usr/include/c++/6/tuple ****         _Tuple_impl&
 435:/usr/include/c++/6/tuple ****         operator=(const _Tuple_impl<_Idx, _UHead>& __in)
 436:/usr/include/c++/6/tuple ****         {
 437:/usr/include/c++/6/tuple **** 	  _M_head(*this) = _Tuple_impl<_Idx, _UHead>::_M_head(__in);
 438:/usr/include/c++/6/tuple **** 	  return *this;
 439:/usr/include/c++/6/tuple **** 	}
 440:/usr/include/c++/6/tuple **** 
 441:/usr/include/c++/6/tuple ****       template<typename _UHead>
 442:/usr/include/c++/6/tuple ****         _Tuple_impl&
 443:/usr/include/c++/6/tuple ****         operator=(_Tuple_impl<_Idx, _UHead>&& __in)
 444:/usr/include/c++/6/tuple ****         {
 445:/usr/include/c++/6/tuple **** 	  _M_head(*this)
 446:/usr/include/c++/6/tuple **** 	    = std::forward<_UHead>(_Tuple_impl<_Idx, _UHead>::_M_head(__in));
 447:/usr/include/c++/6/tuple **** 	  return *this;
 448:/usr/include/c++/6/tuple **** 	}
 449:/usr/include/c++/6/tuple **** 
 450:/usr/include/c++/6/tuple ****     protected:
 451:/usr/include/c++/6/tuple ****       void
 452:/usr/include/c++/6/tuple ****       _M_swap(_Tuple_impl& __in)
 453:/usr/include/c++/6/tuple ****       noexcept(__is_nothrow_swappable<_Head>::value)
GAS LISTING /tmp/ccsIN87E.s 			page 265


 454:/usr/include/c++/6/tuple ****       {
 455:/usr/include/c++/6/tuple **** 	using std::swap;
 456:/usr/include/c++/6/tuple **** 	swap(_M_head(*this), _M_head(__in));
 457:/usr/include/c++/6/tuple ****       }
 458:/usr/include/c++/6/tuple ****     };
 459:/usr/include/c++/6/tuple **** 
 460:/usr/include/c++/6/tuple ****   template<typename... _Elements>
 461:/usr/include/c++/6/tuple ****     class tuple;
 462:/usr/include/c++/6/tuple **** 
 463:/usr/include/c++/6/tuple ****   // Concept utility functions, reused in conditionally-explicit
 464:/usr/include/c++/6/tuple ****   // constructors.
 465:/usr/include/c++/6/tuple ****   template<bool, typename... _Elements>
 466:/usr/include/c++/6/tuple ****   struct _TC
 467:/usr/include/c++/6/tuple ****   {
 468:/usr/include/c++/6/tuple ****     template<typename... _UElements>
 469:/usr/include/c++/6/tuple ****     static constexpr bool _ConstructibleTuple()
 470:/usr/include/c++/6/tuple ****     {
 471:/usr/include/c++/6/tuple ****       return __and_<is_constructible<_Elements, const _UElements&>...>::value;
 472:/usr/include/c++/6/tuple ****     }
 473:/usr/include/c++/6/tuple **** 
 474:/usr/include/c++/6/tuple ****     template<typename... _UElements>
 475:/usr/include/c++/6/tuple ****     static constexpr bool _ImplicitlyConvertibleTuple()
 476:/usr/include/c++/6/tuple ****     {
 477:/usr/include/c++/6/tuple ****       return __and_<is_convertible<const _UElements&, _Elements>...>::value;
 478:/usr/include/c++/6/tuple ****     }
 479:/usr/include/c++/6/tuple **** 
 480:/usr/include/c++/6/tuple ****     template<typename... _UElements>
 481:/usr/include/c++/6/tuple ****     static constexpr bool _MoveConstructibleTuple()
 482:/usr/include/c++/6/tuple ****     {
 483:/usr/include/c++/6/tuple ****       return __and_<is_constructible<_Elements, _UElements&&>...>::value;
 484:/usr/include/c++/6/tuple ****     }
 485:/usr/include/c++/6/tuple **** 
 486:/usr/include/c++/6/tuple ****     template<typename... _UElements>
 487:/usr/include/c++/6/tuple ****     static constexpr bool _ImplicitlyMoveConvertibleTuple()
 488:/usr/include/c++/6/tuple ****     {
 489:/usr/include/c++/6/tuple ****       return __and_<is_convertible<_UElements&&, _Elements>...>::value;
 490:/usr/include/c++/6/tuple ****     }
 491:/usr/include/c++/6/tuple **** 
 492:/usr/include/c++/6/tuple ****     template<typename _SrcTuple>
 493:/usr/include/c++/6/tuple ****     static constexpr bool _NonNestedTuple()
 494:/usr/include/c++/6/tuple ****     {
 495:/usr/include/c++/6/tuple ****       return  __and_<__not_<is_same<tuple<_Elements...>,
 496:/usr/include/c++/6/tuple ****                                    typename remove_cv<
 497:/usr/include/c++/6/tuple ****                                      typename remove_reference<_SrcTuple>::type
 498:/usr/include/c++/6/tuple ****                                    >::type>>,
 499:/usr/include/c++/6/tuple ****                      __not_<is_convertible<_SrcTuple, _Elements...>>,
 500:/usr/include/c++/6/tuple ****                      __not_<is_constructible<_Elements..., _SrcTuple>>
 501:/usr/include/c++/6/tuple ****               >::value;
 502:/usr/include/c++/6/tuple ****     }
 503:/usr/include/c++/6/tuple ****     template<typename... _UElements>
 504:/usr/include/c++/6/tuple ****     static constexpr bool _NotSameTuple()
 505:/usr/include/c++/6/tuple ****     {
 506:/usr/include/c++/6/tuple ****       return  __not_<is_same<tuple<_Elements...>,
 507:/usr/include/c++/6/tuple **** 			     typename remove_const<
 508:/usr/include/c++/6/tuple **** 			       typename remove_reference<_UElements...>::type
 509:/usr/include/c++/6/tuple **** 			       >::type>>::value;
 510:/usr/include/c++/6/tuple ****     }
GAS LISTING /tmp/ccsIN87E.s 			page 266


 511:/usr/include/c++/6/tuple ****   };
 512:/usr/include/c++/6/tuple **** 
 513:/usr/include/c++/6/tuple ****   template<typename... _Elements>
 514:/usr/include/c++/6/tuple ****   struct _TC<false, _Elements...>
 515:/usr/include/c++/6/tuple ****   {
 516:/usr/include/c++/6/tuple ****     template<typename... _UElements>
 517:/usr/include/c++/6/tuple ****     static constexpr bool _ConstructibleTuple()
 518:/usr/include/c++/6/tuple ****     {
 519:/usr/include/c++/6/tuple ****       return false;
 520:/usr/include/c++/6/tuple ****     }
 521:/usr/include/c++/6/tuple **** 
 522:/usr/include/c++/6/tuple ****     template<typename... _UElements>
 523:/usr/include/c++/6/tuple ****     static constexpr bool _ImplicitlyConvertibleTuple()
 524:/usr/include/c++/6/tuple ****     {
 525:/usr/include/c++/6/tuple ****       return false;
 526:/usr/include/c++/6/tuple ****     }
 527:/usr/include/c++/6/tuple **** 
 528:/usr/include/c++/6/tuple ****     template<typename... _UElements>
 529:/usr/include/c++/6/tuple ****     static constexpr bool _MoveConstructibleTuple()
 530:/usr/include/c++/6/tuple ****     {
 531:/usr/include/c++/6/tuple ****       return false;
 532:/usr/include/c++/6/tuple ****     }
 533:/usr/include/c++/6/tuple **** 
 534:/usr/include/c++/6/tuple ****     template<typename... _UElements>
 535:/usr/include/c++/6/tuple ****     static constexpr bool _ImplicitlyMoveConvertibleTuple()
 536:/usr/include/c++/6/tuple ****     {
 537:/usr/include/c++/6/tuple ****       return false;
 538:/usr/include/c++/6/tuple ****     }
 539:/usr/include/c++/6/tuple **** 
 540:/usr/include/c++/6/tuple ****     template<typename... _UElements>
 541:/usr/include/c++/6/tuple ****     static constexpr bool _NonNestedTuple()
 542:/usr/include/c++/6/tuple ****     {
 543:/usr/include/c++/6/tuple ****       return true;
 544:/usr/include/c++/6/tuple ****     }
 545:/usr/include/c++/6/tuple ****     template<typename... _UElements>
 546:/usr/include/c++/6/tuple ****     static constexpr bool _NotSameTuple()
 547:/usr/include/c++/6/tuple ****     {
 548:/usr/include/c++/6/tuple ****       return  true;
 549:/usr/include/c++/6/tuple ****     }
 550:/usr/include/c++/6/tuple ****   };
 551:/usr/include/c++/6/tuple **** 
 552:/usr/include/c++/6/tuple ****   /// Primary class template, tuple
 553:/usr/include/c++/6/tuple ****   template<typename... _Elements> 
 554:/usr/include/c++/6/tuple ****     class tuple : public _Tuple_impl<0, _Elements...>
 555:/usr/include/c++/6/tuple ****     {
 556:/usr/include/c++/6/tuple ****       typedef _Tuple_impl<0, _Elements...> _Inherited;
 557:/usr/include/c++/6/tuple **** 
 558:/usr/include/c++/6/tuple ****       // Used for constraining the default constructor so
 559:/usr/include/c++/6/tuple ****       // that it becomes dependent on the constraints.
 560:/usr/include/c++/6/tuple ****       template<typename _Dummy>
 561:/usr/include/c++/6/tuple ****       struct _TC2
 562:/usr/include/c++/6/tuple ****       {
 563:/usr/include/c++/6/tuple ****         static constexpr bool _DefaultConstructibleTuple()
 564:/usr/include/c++/6/tuple ****         {
 565:/usr/include/c++/6/tuple ****           return __and_<is_default_constructible<_Elements>...>::value;
 566:/usr/include/c++/6/tuple ****         }
 567:/usr/include/c++/6/tuple ****         static constexpr bool _ImplicitlyDefaultConstructibleTuple()
GAS LISTING /tmp/ccsIN87E.s 			page 267


 568:/usr/include/c++/6/tuple ****         {
 569:/usr/include/c++/6/tuple ****           return __and_<__is_implicitly_default_constructible<_Elements>...>
 570:/usr/include/c++/6/tuple ****             ::value;
 571:/usr/include/c++/6/tuple ****         }
 572:/usr/include/c++/6/tuple ****       };
 573:/usr/include/c++/6/tuple **** 
 574:/usr/include/c++/6/tuple ****     public:
 575:/usr/include/c++/6/tuple ****       template<typename _Dummy = void,
 576:/usr/include/c++/6/tuple ****                typename enable_if<_TC2<_Dummy>::
 577:/usr/include/c++/6/tuple ****                                     _ImplicitlyDefaultConstructibleTuple(),
 578:/usr/include/c++/6/tuple ****                                   bool>::type = true>
 579:/usr/include/c++/6/tuple ****       constexpr tuple()
 580:/usr/include/c++/6/tuple ****       : _Inherited() { }
 581:/usr/include/c++/6/tuple **** 
 582:/usr/include/c++/6/tuple ****       template<typename _Dummy = void,
 583:/usr/include/c++/6/tuple ****                typename enable_if<_TC2<_Dummy>::
 584:/usr/include/c++/6/tuple ****                                     _DefaultConstructibleTuple()
 585:/usr/include/c++/6/tuple ****                                   &&
 586:/usr/include/c++/6/tuple ****                                   !_TC2<_Dummy>::
 587:/usr/include/c++/6/tuple ****                                     _ImplicitlyDefaultConstructibleTuple(),
 588:/usr/include/c++/6/tuple ****                                   bool>::type = false>
 589:/usr/include/c++/6/tuple ****       explicit constexpr tuple()
 590:/usr/include/c++/6/tuple ****       : _Inherited() { }
 591:/usr/include/c++/6/tuple **** 
 592:/usr/include/c++/6/tuple ****       // Shortcut for the cases where constructors taking _Elements...
 593:/usr/include/c++/6/tuple ****       // need to be constrained.
 594:/usr/include/c++/6/tuple ****       template<typename _Dummy> using _TCC =
 595:/usr/include/c++/6/tuple ****         _TC<is_same<_Dummy, void>::value,
 596:/usr/include/c++/6/tuple ****             _Elements...>;
 597:/usr/include/c++/6/tuple **** 
 598:/usr/include/c++/6/tuple ****       template<typename _Dummy = void,
 599:/usr/include/c++/6/tuple ****                typename enable_if<
 600:/usr/include/c++/6/tuple ****                  _TCC<_Dummy>::template
 601:/usr/include/c++/6/tuple ****                    _ConstructibleTuple<_Elements...>()
 602:/usr/include/c++/6/tuple ****                  && _TCC<_Dummy>::template
 603:/usr/include/c++/6/tuple ****                    _ImplicitlyConvertibleTuple<_Elements...>()
 604:/usr/include/c++/6/tuple ****                  && (sizeof...(_Elements) >= 1),
 605:/usr/include/c++/6/tuple ****                bool>::type=true>
 606:/usr/include/c++/6/tuple ****         constexpr tuple(const _Elements&... __elements)
 5836              		.loc 28 606 0
 5837              		.cfi_startproc
 5838 0000 55       		pushq	%rbp
 5839              		.cfi_def_cfa_offset 16
 5840              		.cfi_offset 6, -16
 5841 0001 4889E5   		movq	%rsp, %rbp
 5842              		.cfi_def_cfa_register 6
 5843 0004 4883EC10 		subq	$16, %rsp
 5844 0008 48897DF8 		movq	%rdi, -8(%rbp)
 5845 000c 488975F0 		movq	%rsi, -16(%rbp)
 5846              	.LBB59:
 607:/usr/include/c++/6/tuple ****       : _Inherited(__elements...) { }
 5847              		.loc 28 607 0
 5848 0010 488B45F8 		movq	-8(%rbp), %rax
 5849 0014 488B55F0 		movq	-16(%rbp), %rdx
 5850 0018 4889D6   		movq	%rdx, %rsi
 5851 001b 4889C7   		movq	%rax, %rdi
 5852 001e E8000000 		call	_ZNSt11_Tuple_implILm0EJRKN5boost13intrusive_ptrIN3pmt8pmt_baseEEEEEC2ES6_
GAS LISTING /tmp/ccsIN87E.s 			page 268


 5852      00
 5853              	.LBE59:
 5854 0023 90       		nop
 5855 0024 C9       		leave
 5856              		.cfi_def_cfa 7, 8
 5857 0025 C3       		ret
 5858              		.cfi_endproc
 5859              	.LFE11689:
 5861              		.weak	_ZNSt5tupleIJRKN5boost13intrusive_ptrIN3pmt8pmt_baseEEEEEC1IvLb1EEES6_
 5862              		.set	_ZNSt5tupleIJRKN5boost13intrusive_ptrIN3pmt8pmt_baseEEEEEC1IvLb1EEES6_,_ZNSt5tupleIJRKN5boost
 5863              		.section	.text._ZNSt3mapIN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS0_8functionIFvS4_EEENS2_10compa
 5864              		.align 2
 5865              		.weak	_ZNSt3mapIN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS0_8functionIFvS4_EEENS2_10comparatorESaI
 5867              	_ZNSt3mapIN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS0_8functionIFvS4_EEENS2_10comparatorESaISt4pair
 5868              	.LFB11676:
 474:/usr/include/c++/6/bits/stl_map.h ****       {
 5869              		.loc 26 474 0
 5870              		.cfi_startproc
 5871              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 5872              		.cfi_lsda 0x1b,.LLSDA11676
 5873 0000 55       		pushq	%rbp
 5874              		.cfi_def_cfa_offset 16
 5875              		.cfi_offset 6, -16
 5876 0001 4889E5   		movq	%rsp, %rbp
 5877              		.cfi_def_cfa_register 6
 5878 0004 4155     		pushq	%r13
 5879 0006 4154     		pushq	%r12
 5880 0008 53       		pushq	%rbx
 5881 0009 4883EC48 		subq	$72, %rsp
 5882              		.cfi_offset 13, -24
 5883              		.cfi_offset 12, -32
 5884              		.cfi_offset 3, -40
 5885 000d 48897DA8 		movq	%rdi, -88(%rbp)
 5886 0011 488975A0 		movq	%rsi, -96(%rbp)
 479:/usr/include/c++/6/bits/stl_map.h **** 	// __i->first is greater than or equivalent to __k.
 5887              		.loc 26 479 0
 5888 0015 488B55A0 		movq	-96(%rbp), %rdx
 5889 0019 488B45A8 		movq	-88(%rbp), %rax
 5890 001d 4889D6   		movq	%rdx, %rsi
 5891 0020 4889C7   		movq	%rax, %rdi
 5892              	.LEHB33:
 5893 0023 E8000000 		call	_ZNSt3mapIN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS0_8functionIFvS4_EEENS2_10comparatorESaIS
 5893      00
 5894              	.LEHE33:
 5895 0028 488945B8 		movq	%rax, -72(%rbp)
 481:/usr/include/c++/6/bits/stl_map.h **** #if __cplusplus >= 201103L
 5896              		.loc 26 481 0
 5897 002c BB000000 		movl	$0, %ebx
 5897      00
 5898 0031 488B45A8 		movq	-88(%rbp), %rax
 5899 0035 4889C7   		movq	%rax, %rdi
 5900 0038 E8000000 		call	_ZNSt3mapIN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS0_8functionIFvS4_EEENS2_10comparatorESaIS
 5900      00
 5901 003d 488945C0 		movq	%rax, -64(%rbp)
 5902 0041 41BC0100 		movl	$1, %r12d
 5902      0000
 5903 0047 488D55C0 		leaq	-64(%rbp), %rdx
GAS LISTING /tmp/ccsIN87E.s 			page 269


 5904 004b 488D45B8 		leaq	-72(%rbp), %rax
 5905 004f 4889D6   		movq	%rdx, %rsi
 5906 0052 4889C7   		movq	%rax, %rdi
 5907 0055 E8000000 		call	_ZNKSt17_Rb_tree_iteratorISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS1_8functionIFvS5
 5907      00
 5908 005a 84C0     		testb	%al, %al
 5909 005c 753A     		jne	.L251
 481:/usr/include/c++/6/bits/stl_map.h **** #if __cplusplus >= 201103L
 5910              		.loc 26 481 0 is_stmt 0 discriminator 2
 5911 005e 488D45B8 		leaq	-72(%rbp), %rax
 5912 0062 4889C7   		movq	%rax, %rdi
 5913 0065 E8000000 		call	_ZNKSt17_Rb_tree_iteratorISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS1_8functionIFvS5
 5913      00
 5914 006a 4989C5   		movq	%rax, %r13
 5915 006d 488B45A8 		movq	-88(%rbp), %rax
 5916 0071 4889C7   		movq	%rax, %rdi
 5917              	.LEHB34:
 5918 0074 E8000000 		call	_ZNKSt3mapIN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS0_8functionIFvS4_EEENS2_10comparatorESaI
 5918      00
 481:/usr/include/c++/6/bits/stl_map.h **** #if __cplusplus >= 201103L
 5919              		.loc 26 481 0 discriminator 4
 5920 0079 BB010000 		movl	$1, %ebx
 5920      00
 5921 007e 488B4DA0 		movq	-96(%rbp), %rcx
 5922 0082 488D45CE 		leaq	-50(%rbp), %rax
 5923 0086 4C89EA   		movq	%r13, %rdx
 5924 0089 4889CE   		movq	%rcx, %rsi
 5925 008c 4889C7   		movq	%rax, %rdi
 5926 008f E8000000 		call	_ZNK3pmt10comparatorclERKN5boost13intrusive_ptrINS_8pmt_baseEEES6_
 5926      00
 5927              	.LEHE34:
 5928 0094 84C0     		testb	%al, %al
 5929 0096 7407     		je	.L252
 5930              	.L251:
 481:/usr/include/c++/6/bits/stl_map.h **** #if __cplusplus >= 201103L
 5931              		.loc 26 481 0 discriminator 7
 5932 0098 B8010000 		movl	$1, %eax
 5932      00
 5933 009d EB05     		jmp	.L253
 5934              	.L252:
 481:/usr/include/c++/6/bits/stl_map.h **** #if __cplusplus >= 201103L
 5935              		.loc 26 481 0 discriminator 8
 5936 009f B8000000 		movl	$0, %eax
 5936      00
 5937              	.L253:
 481:/usr/include/c++/6/bits/stl_map.h **** #if __cplusplus >= 201103L
 5938              		.loc 26 481 0 discriminator 10
 5939 00a4 84DB     		testb	%bl, %bl
 5940 00a6 4584E4   		testb	%r12b, %r12b
 5941 00a9 84C0     		testb	%al, %al
 5942 00ab 744F     		je	.L256
 483:/usr/include/c++/6/bits/stl_map.h **** 					    std::tuple<const key_type&>(__k),
 5943              		.loc 26 483 0 is_stmt 1
 5944 00ad 488B55A0 		movq	-96(%rbp), %rdx
 5945 00b1 488D45D0 		leaq	-48(%rbp), %rax
 5946 00b5 4889D6   		movq	%rdx, %rsi
 5947 00b8 4889C7   		movq	%rax, %rdi
GAS LISTING /tmp/ccsIN87E.s 			page 270


 5948 00bb E8000000 		call	_ZNSt5tupleIJRKN5boost13intrusive_ptrIN3pmt8pmt_baseEEEEEC1IvLb1EEES6_
 5948      00
 5949 00c0 488D55B8 		leaq	-72(%rbp), %rdx
 5950 00c4 488D45D8 		leaq	-40(%rbp), %rax
 5951 00c8 4889D6   		movq	%rdx, %rsi
 5952 00cb 4889C7   		movq	%rax, %rdi
 5953 00ce E8000000 		call	_ZNSt23_Rb_tree_const_iteratorISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS1_8function
 5953      00
 5954 00d3 488B45A8 		movq	-88(%rbp), %rax
 5955 00d7 488D4DCF 		leaq	-49(%rbp), %rcx
 5956 00db 488D55D0 		leaq	-48(%rbp), %rdx
 5957 00df 488B75D8 		movq	-40(%rbp), %rsi
 5958 00e3 4989C8   		movq	%rcx, %r8
 5959 00e6 4889D1   		movq	%rdx, %rcx
 5960 00e9 488D1500 		leaq	_ZStL19piecewise_construct(%rip), %rdx
 5960      000000
 5961 00f0 4889C7   		movq	%rax, %rdi
 5962              	.LEHB35:
 5963 00f3 E8000000 		call	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt1
 5963      00
 5964 00f8 488945B8 		movq	%rax, -72(%rbp)
 5965              	.L256:
 489:/usr/include/c++/6/bits/stl_map.h ****       }
 5966              		.loc 26 489 0
 5967 00fc 488D45B8 		leaq	-72(%rbp), %rax
 5968 0100 4889C7   		movq	%rax, %rdi
 5969 0103 E8000000 		call	_ZNKSt17_Rb_tree_iteratorISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS1_8functionIFvS5
 5969      00
 5970 0108 4883C008 		addq	$8, %rax
 5971 010c EB0E     		jmp	.L262
 5972              	.L261:
 481:/usr/include/c++/6/bits/stl_map.h **** #if __cplusplus >= 201103L
 5973              		.loc 26 481 0
 5974 010e 84DB     		testb	%bl, %bl
 5975 0110 4584E4   		testb	%r12b, %r12b
 5976 0113 90       		nop
 5977 0114 4889C7   		movq	%rax, %rdi
 5978 0117 E8000000 		call	_Unwind_Resume@PLT
 5978      00
 5979              	.LEHE35:
 5980              	.L262:
 490:/usr/include/c++/6/bits/stl_map.h **** 
 5981              		.loc 26 490 0
 5982 011c 4883C448 		addq	$72, %rsp
 5983 0120 5B       		popq	%rbx
 5984 0121 415C     		popq	%r12
 5985 0123 415D     		popq	%r13
 5986 0125 5D       		popq	%rbp
 5987              		.cfi_def_cfa 7, 8
 5988 0126 C3       		ret
 5989              		.cfi_endproc
 5990              	.LFE11676:
 5991              		.section	.gcc_except_table
 5992              	.LLSDA11676:
 5993 007f FF       		.byte	0xff
 5994 0080 FF       		.byte	0xff
 5995 0081 01       		.byte	0x1
GAS LISTING /tmp/ccsIN87E.s 			page 271


 5996 0082 0E       		.uleb128 .LLSDACSE11676-.LLSDACSB11676
 5997              	.LLSDACSB11676:
 5998 0083 23       		.uleb128 .LEHB33-.LFB11676
 5999 0084 05       		.uleb128 .LEHE33-.LEHB33
 6000 0085 00       		.uleb128 0
 6001 0086 00       		.uleb128 0
 6002 0087 74       		.uleb128 .LEHB34-.LFB11676
 6003 0088 20       		.uleb128 .LEHE34-.LEHB34
 6004 0089 8E02     		.uleb128 .L261-.LFB11676
 6005 008b 00       		.uleb128 0
 6006 008c F301     		.uleb128 .LEHB35-.LFB11676
 6007 008e 29       		.uleb128 .LEHE35-.LEHB35
 6008 008f 00       		.uleb128 0
 6009 0090 00       		.uleb128 0
 6010              	.LLSDACSE11676:
 6011              		.section	.text._ZNSt3mapIN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS0_8functionIFvS4_EEENS2_10compa
 6013              		.section	.text._ZN5boost17bad_function_callD2Ev,"axG",@progbits,_ZN5boost17bad_function_callD5Ev,c
 6014              		.align 2
 6015              		.weak	_ZN5boost17bad_function_callD2Ev
 6017              	_ZN5boost17bad_function_callD2Ev:
 6018              	.LFB11693:
 696:/usr/include/boost/function/function_base.hpp **** {
 6019              		.loc 13 696 0
 6020              		.cfi_startproc
 6021 0000 55       		pushq	%rbp
 6022              		.cfi_def_cfa_offset 16
 6023              		.cfi_offset 6, -16
 6024 0001 4889E5   		movq	%rsp, %rbp
 6025              		.cfi_def_cfa_register 6
 6026 0004 4883EC10 		subq	$16, %rsp
 6027 0008 48897DF8 		movq	%rdi, -8(%rbp)
 6028              	.LBB60:
 696:/usr/include/boost/function/function_base.hpp **** {
 6029              		.loc 13 696 0
 6030 000c 488D1500 		leaq	16+_ZTVN5boost17bad_function_callE(%rip), %rdx
 6030      000000
 6031 0013 488B45F8 		movq	-8(%rbp), %rax
 6032 0017 488910   		movq	%rdx, (%rax)
 6033 001a 488B45F8 		movq	-8(%rbp), %rax
 6034 001e 4889C7   		movq	%rax, %rdi
 6035 0021 E8000000 		call	_ZNSt13runtime_errorD2Ev@PLT
 6035      00
 6036              	.LBE60:
 6037 0026 90       		nop
 6038 0027 C9       		leave
 6039              		.cfi_def_cfa 7, 8
 6040 0028 C3       		ret
 6041              		.cfi_endproc
 6042              	.LFE11693:
 6044              		.weak	_ZN5boost17bad_function_callD1Ev
 6045              		.set	_ZN5boost17bad_function_callD1Ev,_ZN5boost17bad_function_callD2Ev
 6046              		.section	.text._ZN5boost17bad_function_callD0Ev,"axG",@progbits,_ZN5boost17bad_function_callD5Ev,c
 6047              		.align 2
 6048              		.weak	_ZN5boost17bad_function_callD0Ev
 6050              	_ZN5boost17bad_function_callD0Ev:
 6051              	.LFB11695:
 696:/usr/include/boost/function/function_base.hpp **** {
GAS LISTING /tmp/ccsIN87E.s 			page 272


 6052              		.loc 13 696 0
 6053              		.cfi_startproc
 6054 0000 55       		pushq	%rbp
 6055              		.cfi_def_cfa_offset 16
 6056              		.cfi_offset 6, -16
 6057 0001 4889E5   		movq	%rsp, %rbp
 6058              		.cfi_def_cfa_register 6
 6059 0004 4883EC10 		subq	$16, %rsp
 6060 0008 48897DF8 		movq	%rdi, -8(%rbp)
 696:/usr/include/boost/function/function_base.hpp **** {
 6061              		.loc 13 696 0
 6062 000c 488B45F8 		movq	-8(%rbp), %rax
 6063 0010 4889C7   		movq	%rax, %rdi
 6064 0013 E8000000 		call	_ZN5boost17bad_function_callD1Ev
 6064      00
 6065 0018 488B45F8 		movq	-8(%rbp), %rax
 6066 001c BE100000 		movl	$16, %esi
 6066      00
 6067 0021 4889C7   		movq	%rax, %rdi
 6068 0024 E8000000 		call	_ZdlPvm@PLT
 6068      00
 6069 0029 C9       		leave
 6070              		.cfi_def_cfa 7, 8
 6071 002a C3       		ret
 6072              		.cfi_endproc
 6073              	.LFE11695:
 6075              		.section	.text._ZNK5boost9function1IvNS_13intrusive_ptrIN3pmt8pmt_baseEEEEclES4_,"axG",@progbits,_
 6076              		.align 2
 6077              		.weak	_ZNK5boost9function1IvNS_13intrusive_ptrIN3pmt8pmt_baseEEEEclES4_
 6079              	_ZNK5boost9function1IvNS_13intrusive_ptrIN3pmt8pmt_baseEEEEclES4_:
 6080              	.LFB11691:
 6081              		.file 29 "/usr/include/boost/function/function_template.hpp"
   1:/usr/include/boost/function/function_template.hpp **** // Boost.Function library
   2:/usr/include/boost/function/function_template.hpp **** 
   3:/usr/include/boost/function/function_template.hpp **** //  Copyright Douglas Gregor 2001-2006
   4:/usr/include/boost/function/function_template.hpp **** //  Copyright Emil Dotchevski 2007
   5:/usr/include/boost/function/function_template.hpp **** //  Use, modification and distribution is subject to the Boost Software License, Version 1.0.
   6:/usr/include/boost/function/function_template.hpp **** //  (See accompanying file LICENSE_1_0.txt or copy at
   7:/usr/include/boost/function/function_template.hpp **** //  http://www.boost.org/LICENSE_1_0.txt)
   8:/usr/include/boost/function/function_template.hpp **** 
   9:/usr/include/boost/function/function_template.hpp **** // For more information, see http://www.boost.org
  10:/usr/include/boost/function/function_template.hpp **** 
  11:/usr/include/boost/function/function_template.hpp **** // Note: this header is a header template and must NOT have multiple-inclusion
  12:/usr/include/boost/function/function_template.hpp **** // protection.
  13:/usr/include/boost/function/function_template.hpp **** #include <boost/function/detail/prologue.hpp>
  14:/usr/include/boost/function/function_template.hpp **** #include <boost/detail/no_exceptions_support.hpp>
  15:/usr/include/boost/function/function_template.hpp **** 
  16:/usr/include/boost/function/function_template.hpp **** #if defined(BOOST_MSVC)
  17:/usr/include/boost/function/function_template.hpp **** #   pragma warning( push )
  18:/usr/include/boost/function/function_template.hpp **** #   pragma warning( disable : 4127 ) // "conditional expression is constant"
  19:/usr/include/boost/function/function_template.hpp **** #endif
  20:/usr/include/boost/function/function_template.hpp **** 
  21:/usr/include/boost/function/function_template.hpp **** #define BOOST_FUNCTION_TEMPLATE_PARMS BOOST_PP_ENUM_PARAMS(BOOST_FUNCTION_NUM_ARGS, typename T)
  22:/usr/include/boost/function/function_template.hpp **** 
  23:/usr/include/boost/function/function_template.hpp **** #define BOOST_FUNCTION_TEMPLATE_ARGS BOOST_PP_ENUM_PARAMS(BOOST_FUNCTION_NUM_ARGS, T)
  24:/usr/include/boost/function/function_template.hpp **** 
  25:/usr/include/boost/function/function_template.hpp **** #define BOOST_FUNCTION_PARM(J,I,D) BOOST_PP_CAT(T,I) BOOST_PP_CAT(a,I)
GAS LISTING /tmp/ccsIN87E.s 			page 273


  26:/usr/include/boost/function/function_template.hpp **** 
  27:/usr/include/boost/function/function_template.hpp **** #define BOOST_FUNCTION_PARMS BOOST_PP_ENUM(BOOST_FUNCTION_NUM_ARGS,BOOST_FUNCTION_PARM,BOOST_PP_EMP
  28:/usr/include/boost/function/function_template.hpp **** 
  29:/usr/include/boost/function/function_template.hpp **** #ifdef BOOST_NO_CXX11_RVALUE_REFERENCES
  30:/usr/include/boost/function/function_template.hpp **** #   define BOOST_FUNCTION_ARGS BOOST_PP_ENUM_PARAMS(BOOST_FUNCTION_NUM_ARGS, a)
  31:/usr/include/boost/function/function_template.hpp **** #else
  32:/usr/include/boost/function/function_template.hpp **** #   include <boost/move/utility_core.hpp>
  33:/usr/include/boost/function/function_template.hpp **** #   define BOOST_FUNCTION_ARG(J,I,D) ::boost::forward< BOOST_PP_CAT(T,I) >(BOOST_PP_CAT(a,I))
  34:/usr/include/boost/function/function_template.hpp **** #   define BOOST_FUNCTION_ARGS BOOST_PP_ENUM(BOOST_FUNCTION_NUM_ARGS,BOOST_FUNCTION_ARG,BOOST_PP_EM
  35:/usr/include/boost/function/function_template.hpp **** #endif
  36:/usr/include/boost/function/function_template.hpp **** 
  37:/usr/include/boost/function/function_template.hpp **** #define BOOST_FUNCTION_ARG_TYPE(J,I,D) \
  38:/usr/include/boost/function/function_template.hpp ****   typedef BOOST_PP_CAT(T,I) BOOST_PP_CAT(BOOST_PP_CAT(arg, BOOST_PP_INC(I)),_type);
  39:/usr/include/boost/function/function_template.hpp **** 
  40:/usr/include/boost/function/function_template.hpp **** #define BOOST_FUNCTION_ARG_TYPES BOOST_PP_REPEAT(BOOST_FUNCTION_NUM_ARGS,BOOST_FUNCTION_ARG_TYPE,BO
  41:/usr/include/boost/function/function_template.hpp **** 
  42:/usr/include/boost/function/function_template.hpp **** // Comma if nonzero number of arguments
  43:/usr/include/boost/function/function_template.hpp **** #if BOOST_FUNCTION_NUM_ARGS == 0
  44:/usr/include/boost/function/function_template.hpp **** #  define BOOST_FUNCTION_COMMA
  45:/usr/include/boost/function/function_template.hpp **** #else
  46:/usr/include/boost/function/function_template.hpp **** #  define BOOST_FUNCTION_COMMA ,
  47:/usr/include/boost/function/function_template.hpp **** #endif // BOOST_FUNCTION_NUM_ARGS > 0
  48:/usr/include/boost/function/function_template.hpp **** 
  49:/usr/include/boost/function/function_template.hpp **** // Class names used in this version of the code
  50:/usr/include/boost/function/function_template.hpp **** #define BOOST_FUNCTION_FUNCTION BOOST_JOIN(function,BOOST_FUNCTION_NUM_ARGS)
  51:/usr/include/boost/function/function_template.hpp **** #define BOOST_FUNCTION_FUNCTION_INVOKER \
  52:/usr/include/boost/function/function_template.hpp ****   BOOST_JOIN(function_invoker,BOOST_FUNCTION_NUM_ARGS)
  53:/usr/include/boost/function/function_template.hpp **** #define BOOST_FUNCTION_VOID_FUNCTION_INVOKER \
  54:/usr/include/boost/function/function_template.hpp ****   BOOST_JOIN(void_function_invoker,BOOST_FUNCTION_NUM_ARGS)
  55:/usr/include/boost/function/function_template.hpp **** #define BOOST_FUNCTION_FUNCTION_OBJ_INVOKER \
  56:/usr/include/boost/function/function_template.hpp ****   BOOST_JOIN(function_obj_invoker,BOOST_FUNCTION_NUM_ARGS)
  57:/usr/include/boost/function/function_template.hpp **** #define BOOST_FUNCTION_VOID_FUNCTION_OBJ_INVOKER \
  58:/usr/include/boost/function/function_template.hpp ****   BOOST_JOIN(void_function_obj_invoker,BOOST_FUNCTION_NUM_ARGS)
  59:/usr/include/boost/function/function_template.hpp **** #define BOOST_FUNCTION_FUNCTION_REF_INVOKER \
  60:/usr/include/boost/function/function_template.hpp ****   BOOST_JOIN(function_ref_invoker,BOOST_FUNCTION_NUM_ARGS)
  61:/usr/include/boost/function/function_template.hpp **** #define BOOST_FUNCTION_VOID_FUNCTION_REF_INVOKER \
  62:/usr/include/boost/function/function_template.hpp ****   BOOST_JOIN(void_function_ref_invoker,BOOST_FUNCTION_NUM_ARGS)
  63:/usr/include/boost/function/function_template.hpp **** #define BOOST_FUNCTION_MEMBER_INVOKER \
  64:/usr/include/boost/function/function_template.hpp ****   BOOST_JOIN(function_mem_invoker,BOOST_FUNCTION_NUM_ARGS)
  65:/usr/include/boost/function/function_template.hpp **** #define BOOST_FUNCTION_VOID_MEMBER_INVOKER \
  66:/usr/include/boost/function/function_template.hpp ****   BOOST_JOIN(function_void_mem_invoker,BOOST_FUNCTION_NUM_ARGS)
  67:/usr/include/boost/function/function_template.hpp **** #define BOOST_FUNCTION_GET_FUNCTION_INVOKER \
  68:/usr/include/boost/function/function_template.hpp ****   BOOST_JOIN(get_function_invoker,BOOST_FUNCTION_NUM_ARGS)
  69:/usr/include/boost/function/function_template.hpp **** #define BOOST_FUNCTION_GET_FUNCTION_OBJ_INVOKER \
  70:/usr/include/boost/function/function_template.hpp ****   BOOST_JOIN(get_function_obj_invoker,BOOST_FUNCTION_NUM_ARGS)
  71:/usr/include/boost/function/function_template.hpp **** #define BOOST_FUNCTION_GET_FUNCTION_REF_INVOKER \
  72:/usr/include/boost/function/function_template.hpp ****   BOOST_JOIN(get_function_ref_invoker,BOOST_FUNCTION_NUM_ARGS)
  73:/usr/include/boost/function/function_template.hpp **** #define BOOST_FUNCTION_GET_MEMBER_INVOKER \
  74:/usr/include/boost/function/function_template.hpp ****   BOOST_JOIN(get_member_invoker,BOOST_FUNCTION_NUM_ARGS)
  75:/usr/include/boost/function/function_template.hpp **** #define BOOST_FUNCTION_GET_INVOKER \
  76:/usr/include/boost/function/function_template.hpp ****   BOOST_JOIN(get_invoker,BOOST_FUNCTION_NUM_ARGS)
  77:/usr/include/boost/function/function_template.hpp **** #define BOOST_FUNCTION_VTABLE BOOST_JOIN(basic_vtable,BOOST_FUNCTION_NUM_ARGS)
  78:/usr/include/boost/function/function_template.hpp **** 
  79:/usr/include/boost/function/function_template.hpp **** #ifndef BOOST_NO_VOID_RETURNS
  80:/usr/include/boost/function/function_template.hpp **** #  define BOOST_FUNCTION_VOID_RETURN_TYPE void
  81:/usr/include/boost/function/function_template.hpp **** #  define BOOST_FUNCTION_RETURN(X) X
  82:/usr/include/boost/function/function_template.hpp **** #else
GAS LISTING /tmp/ccsIN87E.s 			page 274


  83:/usr/include/boost/function/function_template.hpp **** #  define BOOST_FUNCTION_VOID_RETURN_TYPE boost::detail::function::unusable
  84:/usr/include/boost/function/function_template.hpp **** #  define BOOST_FUNCTION_RETURN(X) X; return BOOST_FUNCTION_VOID_RETURN_TYPE ()
  85:/usr/include/boost/function/function_template.hpp **** #endif
  86:/usr/include/boost/function/function_template.hpp **** 
  87:/usr/include/boost/function/function_template.hpp **** namespace boost {
  88:/usr/include/boost/function/function_template.hpp ****   namespace detail {
  89:/usr/include/boost/function/function_template.hpp ****     namespace function {
  90:/usr/include/boost/function/function_template.hpp ****       template<
  91:/usr/include/boost/function/function_template.hpp ****         typename FunctionPtr,
  92:/usr/include/boost/function/function_template.hpp ****         typename R BOOST_FUNCTION_COMMA
  93:/usr/include/boost/function/function_template.hpp ****         BOOST_FUNCTION_TEMPLATE_PARMS
  94:/usr/include/boost/function/function_template.hpp ****         >
  95:/usr/include/boost/function/function_template.hpp ****       struct BOOST_FUNCTION_FUNCTION_INVOKER
  96:/usr/include/boost/function/function_template.hpp ****       {
  97:/usr/include/boost/function/function_template.hpp ****         static R invoke(function_buffer& function_ptr BOOST_FUNCTION_COMMA
  98:/usr/include/boost/function/function_template.hpp ****                         BOOST_FUNCTION_PARMS)
  99:/usr/include/boost/function/function_template.hpp ****         {
 100:/usr/include/boost/function/function_template.hpp ****           FunctionPtr f = reinterpret_cast<FunctionPtr>(function_ptr.members.func_ptr);
 101:/usr/include/boost/function/function_template.hpp ****           return f(BOOST_FUNCTION_ARGS);
 102:/usr/include/boost/function/function_template.hpp ****         }
 103:/usr/include/boost/function/function_template.hpp ****       };
 104:/usr/include/boost/function/function_template.hpp **** 
 105:/usr/include/boost/function/function_template.hpp ****       template<
 106:/usr/include/boost/function/function_template.hpp ****         typename FunctionPtr,
 107:/usr/include/boost/function/function_template.hpp ****         typename R BOOST_FUNCTION_COMMA
 108:/usr/include/boost/function/function_template.hpp ****         BOOST_FUNCTION_TEMPLATE_PARMS
 109:/usr/include/boost/function/function_template.hpp ****         >
 110:/usr/include/boost/function/function_template.hpp ****       struct BOOST_FUNCTION_VOID_FUNCTION_INVOKER
 111:/usr/include/boost/function/function_template.hpp ****       {
 112:/usr/include/boost/function/function_template.hpp ****         static BOOST_FUNCTION_VOID_RETURN_TYPE
 113:/usr/include/boost/function/function_template.hpp ****         invoke(function_buffer& function_ptr BOOST_FUNCTION_COMMA
 114:/usr/include/boost/function/function_template.hpp ****                BOOST_FUNCTION_PARMS)
 115:/usr/include/boost/function/function_template.hpp **** 
 116:/usr/include/boost/function/function_template.hpp ****         {
 117:/usr/include/boost/function/function_template.hpp ****           FunctionPtr f = reinterpret_cast<FunctionPtr>(function_ptr.members.func_ptr);
 118:/usr/include/boost/function/function_template.hpp ****           BOOST_FUNCTION_RETURN(f(BOOST_FUNCTION_ARGS));
 119:/usr/include/boost/function/function_template.hpp ****         }
 120:/usr/include/boost/function/function_template.hpp ****       };
 121:/usr/include/boost/function/function_template.hpp **** 
 122:/usr/include/boost/function/function_template.hpp ****       template<
 123:/usr/include/boost/function/function_template.hpp ****         typename FunctionObj,
 124:/usr/include/boost/function/function_template.hpp ****         typename R BOOST_FUNCTION_COMMA
 125:/usr/include/boost/function/function_template.hpp ****         BOOST_FUNCTION_TEMPLATE_PARMS
 126:/usr/include/boost/function/function_template.hpp ****       >
 127:/usr/include/boost/function/function_template.hpp ****       struct BOOST_FUNCTION_FUNCTION_OBJ_INVOKER
 128:/usr/include/boost/function/function_template.hpp ****       {
 129:/usr/include/boost/function/function_template.hpp ****         static R invoke(function_buffer& function_obj_ptr BOOST_FUNCTION_COMMA
 130:/usr/include/boost/function/function_template.hpp ****                         BOOST_FUNCTION_PARMS)
 131:/usr/include/boost/function/function_template.hpp **** 
 132:/usr/include/boost/function/function_template.hpp ****         {
 133:/usr/include/boost/function/function_template.hpp ****           FunctionObj* f;
 134:/usr/include/boost/function/function_template.hpp ****           if (function_allows_small_object_optimization<FunctionObj>::value)
 135:/usr/include/boost/function/function_template.hpp ****             f = reinterpret_cast<FunctionObj*>(function_obj_ptr.data);
 136:/usr/include/boost/function/function_template.hpp ****           else
 137:/usr/include/boost/function/function_template.hpp ****             f = reinterpret_cast<FunctionObj*>(function_obj_ptr.members.obj_ptr);
 138:/usr/include/boost/function/function_template.hpp ****           return (*f)(BOOST_FUNCTION_ARGS);
 139:/usr/include/boost/function/function_template.hpp ****         }
GAS LISTING /tmp/ccsIN87E.s 			page 275


 140:/usr/include/boost/function/function_template.hpp ****       };
 141:/usr/include/boost/function/function_template.hpp **** 
 142:/usr/include/boost/function/function_template.hpp ****       template<
 143:/usr/include/boost/function/function_template.hpp ****         typename FunctionObj,
 144:/usr/include/boost/function/function_template.hpp ****         typename R BOOST_FUNCTION_COMMA
 145:/usr/include/boost/function/function_template.hpp ****         BOOST_FUNCTION_TEMPLATE_PARMS
 146:/usr/include/boost/function/function_template.hpp ****       >
 147:/usr/include/boost/function/function_template.hpp ****       struct BOOST_FUNCTION_VOID_FUNCTION_OBJ_INVOKER
 148:/usr/include/boost/function/function_template.hpp ****       {
 149:/usr/include/boost/function/function_template.hpp ****         static BOOST_FUNCTION_VOID_RETURN_TYPE
 150:/usr/include/boost/function/function_template.hpp ****         invoke(function_buffer& function_obj_ptr BOOST_FUNCTION_COMMA
 151:/usr/include/boost/function/function_template.hpp ****                BOOST_FUNCTION_PARMS)
 152:/usr/include/boost/function/function_template.hpp **** 
 153:/usr/include/boost/function/function_template.hpp ****         {
 154:/usr/include/boost/function/function_template.hpp ****           FunctionObj* f;
 155:/usr/include/boost/function/function_template.hpp ****           if (function_allows_small_object_optimization<FunctionObj>::value)
 156:/usr/include/boost/function/function_template.hpp ****             f = reinterpret_cast<FunctionObj*>(function_obj_ptr.data);
 157:/usr/include/boost/function/function_template.hpp ****           else
 158:/usr/include/boost/function/function_template.hpp ****             f = reinterpret_cast<FunctionObj*>(function_obj_ptr.members.obj_ptr);
 159:/usr/include/boost/function/function_template.hpp ****           BOOST_FUNCTION_RETURN((*f)(BOOST_FUNCTION_ARGS));
 160:/usr/include/boost/function/function_template.hpp ****         }
 161:/usr/include/boost/function/function_template.hpp ****       };
 162:/usr/include/boost/function/function_template.hpp **** 
 163:/usr/include/boost/function/function_template.hpp ****       template<
 164:/usr/include/boost/function/function_template.hpp ****         typename FunctionObj,
 165:/usr/include/boost/function/function_template.hpp ****         typename R BOOST_FUNCTION_COMMA
 166:/usr/include/boost/function/function_template.hpp ****         BOOST_FUNCTION_TEMPLATE_PARMS
 167:/usr/include/boost/function/function_template.hpp ****       >
 168:/usr/include/boost/function/function_template.hpp ****       struct BOOST_FUNCTION_FUNCTION_REF_INVOKER
 169:/usr/include/boost/function/function_template.hpp ****       {
 170:/usr/include/boost/function/function_template.hpp ****         static R invoke(function_buffer& function_obj_ptr BOOST_FUNCTION_COMMA
 171:/usr/include/boost/function/function_template.hpp ****                         BOOST_FUNCTION_PARMS)
 172:/usr/include/boost/function/function_template.hpp **** 
 173:/usr/include/boost/function/function_template.hpp ****         {
 174:/usr/include/boost/function/function_template.hpp ****           FunctionObj* f =
 175:/usr/include/boost/function/function_template.hpp ****             reinterpret_cast<FunctionObj*>(function_obj_ptr.members.obj_ptr);
 176:/usr/include/boost/function/function_template.hpp ****           return (*f)(BOOST_FUNCTION_ARGS);
 177:/usr/include/boost/function/function_template.hpp ****         }
 178:/usr/include/boost/function/function_template.hpp ****       };
 179:/usr/include/boost/function/function_template.hpp **** 
 180:/usr/include/boost/function/function_template.hpp ****       template<
 181:/usr/include/boost/function/function_template.hpp ****         typename FunctionObj,
 182:/usr/include/boost/function/function_template.hpp ****         typename R BOOST_FUNCTION_COMMA
 183:/usr/include/boost/function/function_template.hpp ****         BOOST_FUNCTION_TEMPLATE_PARMS
 184:/usr/include/boost/function/function_template.hpp ****       >
 185:/usr/include/boost/function/function_template.hpp ****       struct BOOST_FUNCTION_VOID_FUNCTION_REF_INVOKER
 186:/usr/include/boost/function/function_template.hpp ****       {
 187:/usr/include/boost/function/function_template.hpp ****         static BOOST_FUNCTION_VOID_RETURN_TYPE
 188:/usr/include/boost/function/function_template.hpp ****         invoke(function_buffer& function_obj_ptr BOOST_FUNCTION_COMMA
 189:/usr/include/boost/function/function_template.hpp ****                BOOST_FUNCTION_PARMS)
 190:/usr/include/boost/function/function_template.hpp **** 
 191:/usr/include/boost/function/function_template.hpp ****         {
 192:/usr/include/boost/function/function_template.hpp ****           FunctionObj* f =
 193:/usr/include/boost/function/function_template.hpp ****             reinterpret_cast<FunctionObj*>(function_obj_ptr.members.obj_ptr);
 194:/usr/include/boost/function/function_template.hpp ****           BOOST_FUNCTION_RETURN((*f)(BOOST_FUNCTION_ARGS));
 195:/usr/include/boost/function/function_template.hpp ****         }
 196:/usr/include/boost/function/function_template.hpp ****       };
GAS LISTING /tmp/ccsIN87E.s 			page 276


 197:/usr/include/boost/function/function_template.hpp **** 
 198:/usr/include/boost/function/function_template.hpp **** #if BOOST_FUNCTION_NUM_ARGS > 0
 199:/usr/include/boost/function/function_template.hpp ****       /* Handle invocation of member pointers. */
 200:/usr/include/boost/function/function_template.hpp ****       template<
 201:/usr/include/boost/function/function_template.hpp ****         typename MemberPtr,
 202:/usr/include/boost/function/function_template.hpp ****         typename R BOOST_FUNCTION_COMMA
 203:/usr/include/boost/function/function_template.hpp ****         BOOST_FUNCTION_TEMPLATE_PARMS
 204:/usr/include/boost/function/function_template.hpp ****       >
 205:/usr/include/boost/function/function_template.hpp ****       struct BOOST_FUNCTION_MEMBER_INVOKER
 206:/usr/include/boost/function/function_template.hpp ****       {
 207:/usr/include/boost/function/function_template.hpp ****         static R invoke(function_buffer& function_obj_ptr BOOST_FUNCTION_COMMA
 208:/usr/include/boost/function/function_template.hpp ****                         BOOST_FUNCTION_PARMS)
 209:/usr/include/boost/function/function_template.hpp **** 
 210:/usr/include/boost/function/function_template.hpp ****         {
 211:/usr/include/boost/function/function_template.hpp ****           MemberPtr* f =
 212:/usr/include/boost/function/function_template.hpp ****             reinterpret_cast<MemberPtr*>(function_obj_ptr.data);
 213:/usr/include/boost/function/function_template.hpp ****           return boost::mem_fn(*f)(BOOST_FUNCTION_ARGS);
 214:/usr/include/boost/function/function_template.hpp ****         }
 215:/usr/include/boost/function/function_template.hpp ****       };
 216:/usr/include/boost/function/function_template.hpp **** 
 217:/usr/include/boost/function/function_template.hpp ****       template<
 218:/usr/include/boost/function/function_template.hpp ****         typename MemberPtr,
 219:/usr/include/boost/function/function_template.hpp ****         typename R BOOST_FUNCTION_COMMA
 220:/usr/include/boost/function/function_template.hpp ****         BOOST_FUNCTION_TEMPLATE_PARMS
 221:/usr/include/boost/function/function_template.hpp ****       >
 222:/usr/include/boost/function/function_template.hpp ****       struct BOOST_FUNCTION_VOID_MEMBER_INVOKER
 223:/usr/include/boost/function/function_template.hpp ****       {
 224:/usr/include/boost/function/function_template.hpp ****         static BOOST_FUNCTION_VOID_RETURN_TYPE
 225:/usr/include/boost/function/function_template.hpp ****         invoke(function_buffer& function_obj_ptr BOOST_FUNCTION_COMMA
 226:/usr/include/boost/function/function_template.hpp ****                BOOST_FUNCTION_PARMS)
 227:/usr/include/boost/function/function_template.hpp **** 
 228:/usr/include/boost/function/function_template.hpp ****         {
 229:/usr/include/boost/function/function_template.hpp ****           MemberPtr* f =
 230:/usr/include/boost/function/function_template.hpp ****             reinterpret_cast<MemberPtr*>(function_obj_ptr.data);
 231:/usr/include/boost/function/function_template.hpp ****           BOOST_FUNCTION_RETURN(boost::mem_fn(*f)(BOOST_FUNCTION_ARGS));
 232:/usr/include/boost/function/function_template.hpp ****         }
 233:/usr/include/boost/function/function_template.hpp ****       };
 234:/usr/include/boost/function/function_template.hpp **** #endif
 235:/usr/include/boost/function/function_template.hpp **** 
 236:/usr/include/boost/function/function_template.hpp ****       template<
 237:/usr/include/boost/function/function_template.hpp ****         typename FunctionPtr,
 238:/usr/include/boost/function/function_template.hpp ****         typename R BOOST_FUNCTION_COMMA
 239:/usr/include/boost/function/function_template.hpp ****         BOOST_FUNCTION_TEMPLATE_PARMS
 240:/usr/include/boost/function/function_template.hpp ****       >
 241:/usr/include/boost/function/function_template.hpp ****       struct BOOST_FUNCTION_GET_FUNCTION_INVOKER
 242:/usr/include/boost/function/function_template.hpp ****       {
 243:/usr/include/boost/function/function_template.hpp ****         typedef typename mpl::if_c<(is_void<R>::value),
 244:/usr/include/boost/function/function_template.hpp ****                             BOOST_FUNCTION_VOID_FUNCTION_INVOKER<
 245:/usr/include/boost/function/function_template.hpp ****                             FunctionPtr,
 246:/usr/include/boost/function/function_template.hpp ****                             R BOOST_FUNCTION_COMMA
 247:/usr/include/boost/function/function_template.hpp ****                             BOOST_FUNCTION_TEMPLATE_ARGS
 248:/usr/include/boost/function/function_template.hpp ****                           >,
 249:/usr/include/boost/function/function_template.hpp ****                           BOOST_FUNCTION_FUNCTION_INVOKER<
 250:/usr/include/boost/function/function_template.hpp ****                             FunctionPtr,
 251:/usr/include/boost/function/function_template.hpp ****                             R BOOST_FUNCTION_COMMA
 252:/usr/include/boost/function/function_template.hpp ****                             BOOST_FUNCTION_TEMPLATE_ARGS
 253:/usr/include/boost/function/function_template.hpp ****                           >
GAS LISTING /tmp/ccsIN87E.s 			page 277


 254:/usr/include/boost/function/function_template.hpp ****                        >::type type;
 255:/usr/include/boost/function/function_template.hpp ****       };
 256:/usr/include/boost/function/function_template.hpp **** 
 257:/usr/include/boost/function/function_template.hpp ****       template<
 258:/usr/include/boost/function/function_template.hpp ****         typename FunctionObj,
 259:/usr/include/boost/function/function_template.hpp ****         typename R BOOST_FUNCTION_COMMA
 260:/usr/include/boost/function/function_template.hpp ****         BOOST_FUNCTION_TEMPLATE_PARMS
 261:/usr/include/boost/function/function_template.hpp ****        >
 262:/usr/include/boost/function/function_template.hpp ****       struct BOOST_FUNCTION_GET_FUNCTION_OBJ_INVOKER
 263:/usr/include/boost/function/function_template.hpp ****       {
 264:/usr/include/boost/function/function_template.hpp ****         typedef typename mpl::if_c<(is_void<R>::value),
 265:/usr/include/boost/function/function_template.hpp ****                             BOOST_FUNCTION_VOID_FUNCTION_OBJ_INVOKER<
 266:/usr/include/boost/function/function_template.hpp ****                             FunctionObj,
 267:/usr/include/boost/function/function_template.hpp ****                             R BOOST_FUNCTION_COMMA
 268:/usr/include/boost/function/function_template.hpp ****                             BOOST_FUNCTION_TEMPLATE_ARGS
 269:/usr/include/boost/function/function_template.hpp ****                           >,
 270:/usr/include/boost/function/function_template.hpp ****                           BOOST_FUNCTION_FUNCTION_OBJ_INVOKER<
 271:/usr/include/boost/function/function_template.hpp ****                             FunctionObj,
 272:/usr/include/boost/function/function_template.hpp ****                             R BOOST_FUNCTION_COMMA
 273:/usr/include/boost/function/function_template.hpp ****                             BOOST_FUNCTION_TEMPLATE_ARGS
 274:/usr/include/boost/function/function_template.hpp ****                           >
 275:/usr/include/boost/function/function_template.hpp ****                        >::type type;
 276:/usr/include/boost/function/function_template.hpp ****       };
 277:/usr/include/boost/function/function_template.hpp **** 
 278:/usr/include/boost/function/function_template.hpp ****       template<
 279:/usr/include/boost/function/function_template.hpp ****         typename FunctionObj,
 280:/usr/include/boost/function/function_template.hpp ****         typename R BOOST_FUNCTION_COMMA
 281:/usr/include/boost/function/function_template.hpp ****         BOOST_FUNCTION_TEMPLATE_PARMS
 282:/usr/include/boost/function/function_template.hpp ****        >
 283:/usr/include/boost/function/function_template.hpp ****       struct BOOST_FUNCTION_GET_FUNCTION_REF_INVOKER
 284:/usr/include/boost/function/function_template.hpp ****       {
 285:/usr/include/boost/function/function_template.hpp ****         typedef typename mpl::if_c<(is_void<R>::value),
 286:/usr/include/boost/function/function_template.hpp ****                             BOOST_FUNCTION_VOID_FUNCTION_REF_INVOKER<
 287:/usr/include/boost/function/function_template.hpp ****                             FunctionObj,
 288:/usr/include/boost/function/function_template.hpp ****                             R BOOST_FUNCTION_COMMA
 289:/usr/include/boost/function/function_template.hpp ****                             BOOST_FUNCTION_TEMPLATE_ARGS
 290:/usr/include/boost/function/function_template.hpp ****                           >,
 291:/usr/include/boost/function/function_template.hpp ****                           BOOST_FUNCTION_FUNCTION_REF_INVOKER<
 292:/usr/include/boost/function/function_template.hpp ****                             FunctionObj,
 293:/usr/include/boost/function/function_template.hpp ****                             R BOOST_FUNCTION_COMMA
 294:/usr/include/boost/function/function_template.hpp ****                             BOOST_FUNCTION_TEMPLATE_ARGS
 295:/usr/include/boost/function/function_template.hpp ****                           >
 296:/usr/include/boost/function/function_template.hpp ****                        >::type type;
 297:/usr/include/boost/function/function_template.hpp ****       };
 298:/usr/include/boost/function/function_template.hpp **** 
 299:/usr/include/boost/function/function_template.hpp **** #if BOOST_FUNCTION_NUM_ARGS > 0
 300:/usr/include/boost/function/function_template.hpp ****       /* Retrieve the appropriate invoker for a member pointer.  */
 301:/usr/include/boost/function/function_template.hpp ****       template<
 302:/usr/include/boost/function/function_template.hpp ****         typename MemberPtr,
 303:/usr/include/boost/function/function_template.hpp ****         typename R BOOST_FUNCTION_COMMA
 304:/usr/include/boost/function/function_template.hpp ****         BOOST_FUNCTION_TEMPLATE_PARMS
 305:/usr/include/boost/function/function_template.hpp ****        >
 306:/usr/include/boost/function/function_template.hpp ****       struct BOOST_FUNCTION_GET_MEMBER_INVOKER
 307:/usr/include/boost/function/function_template.hpp ****       {
 308:/usr/include/boost/function/function_template.hpp ****         typedef typename mpl::if_c<(is_void<R>::value),
 309:/usr/include/boost/function/function_template.hpp ****                             BOOST_FUNCTION_VOID_MEMBER_INVOKER<
 310:/usr/include/boost/function/function_template.hpp ****                             MemberPtr,
GAS LISTING /tmp/ccsIN87E.s 			page 278


 311:/usr/include/boost/function/function_template.hpp ****                             R BOOST_FUNCTION_COMMA
 312:/usr/include/boost/function/function_template.hpp ****                             BOOST_FUNCTION_TEMPLATE_ARGS
 313:/usr/include/boost/function/function_template.hpp ****                           >,
 314:/usr/include/boost/function/function_template.hpp ****                           BOOST_FUNCTION_MEMBER_INVOKER<
 315:/usr/include/boost/function/function_template.hpp ****                             MemberPtr,
 316:/usr/include/boost/function/function_template.hpp ****                             R BOOST_FUNCTION_COMMA
 317:/usr/include/boost/function/function_template.hpp ****                             BOOST_FUNCTION_TEMPLATE_ARGS
 318:/usr/include/boost/function/function_template.hpp ****                           >
 319:/usr/include/boost/function/function_template.hpp ****                        >::type type;
 320:/usr/include/boost/function/function_template.hpp ****       };
 321:/usr/include/boost/function/function_template.hpp **** #endif
 322:/usr/include/boost/function/function_template.hpp **** 
 323:/usr/include/boost/function/function_template.hpp ****       /* Given the tag returned by get_function_tag, retrieve the
 324:/usr/include/boost/function/function_template.hpp ****          actual invoker that will be used for the given function
 325:/usr/include/boost/function/function_template.hpp ****          object.
 326:/usr/include/boost/function/function_template.hpp **** 
 327:/usr/include/boost/function/function_template.hpp ****          Each specialization contains an "apply" nested class template
 328:/usr/include/boost/function/function_template.hpp ****          that accepts the function object, return type, function
 329:/usr/include/boost/function/function_template.hpp ****          argument types, and allocator. The resulting "apply" class
 330:/usr/include/boost/function/function_template.hpp ****          contains two typedefs, "invoker_type" and "manager_type",
 331:/usr/include/boost/function/function_template.hpp ****          which correspond to the invoker and manager types. */
 332:/usr/include/boost/function/function_template.hpp ****       template<typename Tag>
 333:/usr/include/boost/function/function_template.hpp ****       struct BOOST_FUNCTION_GET_INVOKER { };
 334:/usr/include/boost/function/function_template.hpp **** 
 335:/usr/include/boost/function/function_template.hpp ****       /* Retrieve the invoker for a function pointer. */
 336:/usr/include/boost/function/function_template.hpp ****       template<>
 337:/usr/include/boost/function/function_template.hpp ****       struct BOOST_FUNCTION_GET_INVOKER<function_ptr_tag>
 338:/usr/include/boost/function/function_template.hpp ****       {
 339:/usr/include/boost/function/function_template.hpp ****         template<typename FunctionPtr,
 340:/usr/include/boost/function/function_template.hpp ****                  typename R BOOST_FUNCTION_COMMA BOOST_FUNCTION_TEMPLATE_PARMS>
 341:/usr/include/boost/function/function_template.hpp ****         struct apply
 342:/usr/include/boost/function/function_template.hpp ****         {
 343:/usr/include/boost/function/function_template.hpp ****           typedef typename BOOST_FUNCTION_GET_FUNCTION_INVOKER<
 344:/usr/include/boost/function/function_template.hpp ****                              FunctionPtr,
 345:/usr/include/boost/function/function_template.hpp ****                              R BOOST_FUNCTION_COMMA
 346:/usr/include/boost/function/function_template.hpp ****                              BOOST_FUNCTION_TEMPLATE_ARGS
 347:/usr/include/boost/function/function_template.hpp ****                            >::type
 348:/usr/include/boost/function/function_template.hpp ****             invoker_type;
 349:/usr/include/boost/function/function_template.hpp **** 
 350:/usr/include/boost/function/function_template.hpp ****           typedef functor_manager<FunctionPtr> manager_type;
 351:/usr/include/boost/function/function_template.hpp ****         };
 352:/usr/include/boost/function/function_template.hpp **** 
 353:/usr/include/boost/function/function_template.hpp ****         template<typename FunctionPtr,
 354:/usr/include/boost/function/function_template.hpp ****                  typename R BOOST_FUNCTION_COMMA BOOST_FUNCTION_TEMPLATE_PARMS,
 355:/usr/include/boost/function/function_template.hpp ****                  typename Allocator>
 356:/usr/include/boost/function/function_template.hpp ****         struct apply_a
 357:/usr/include/boost/function/function_template.hpp ****         {
 358:/usr/include/boost/function/function_template.hpp ****           typedef typename BOOST_FUNCTION_GET_FUNCTION_INVOKER<
 359:/usr/include/boost/function/function_template.hpp ****                              FunctionPtr,
 360:/usr/include/boost/function/function_template.hpp ****                              R BOOST_FUNCTION_COMMA
 361:/usr/include/boost/function/function_template.hpp ****                              BOOST_FUNCTION_TEMPLATE_ARGS
 362:/usr/include/boost/function/function_template.hpp ****                            >::type
 363:/usr/include/boost/function/function_template.hpp ****             invoker_type;
 364:/usr/include/boost/function/function_template.hpp **** 
 365:/usr/include/boost/function/function_template.hpp ****           typedef functor_manager<FunctionPtr> manager_type;
 366:/usr/include/boost/function/function_template.hpp ****         };
 367:/usr/include/boost/function/function_template.hpp ****       };
GAS LISTING /tmp/ccsIN87E.s 			page 279


 368:/usr/include/boost/function/function_template.hpp **** 
 369:/usr/include/boost/function/function_template.hpp **** #if BOOST_FUNCTION_NUM_ARGS > 0
 370:/usr/include/boost/function/function_template.hpp ****       /* Retrieve the invoker for a member pointer. */
 371:/usr/include/boost/function/function_template.hpp ****       template<>
 372:/usr/include/boost/function/function_template.hpp ****       struct BOOST_FUNCTION_GET_INVOKER<member_ptr_tag>
 373:/usr/include/boost/function/function_template.hpp ****       {
 374:/usr/include/boost/function/function_template.hpp ****         template<typename MemberPtr,
 375:/usr/include/boost/function/function_template.hpp ****                  typename R BOOST_FUNCTION_COMMA BOOST_FUNCTION_TEMPLATE_PARMS>
 376:/usr/include/boost/function/function_template.hpp ****         struct apply
 377:/usr/include/boost/function/function_template.hpp ****         {
 378:/usr/include/boost/function/function_template.hpp ****           typedef typename BOOST_FUNCTION_GET_MEMBER_INVOKER<
 379:/usr/include/boost/function/function_template.hpp ****                              MemberPtr,
 380:/usr/include/boost/function/function_template.hpp ****                              R BOOST_FUNCTION_COMMA
 381:/usr/include/boost/function/function_template.hpp ****                              BOOST_FUNCTION_TEMPLATE_ARGS
 382:/usr/include/boost/function/function_template.hpp ****                            >::type
 383:/usr/include/boost/function/function_template.hpp ****             invoker_type;
 384:/usr/include/boost/function/function_template.hpp **** 
 385:/usr/include/boost/function/function_template.hpp ****           typedef functor_manager<MemberPtr> manager_type;
 386:/usr/include/boost/function/function_template.hpp ****         };
 387:/usr/include/boost/function/function_template.hpp **** 
 388:/usr/include/boost/function/function_template.hpp ****         template<typename MemberPtr,
 389:/usr/include/boost/function/function_template.hpp ****                  typename R BOOST_FUNCTION_COMMA BOOST_FUNCTION_TEMPLATE_PARMS,
 390:/usr/include/boost/function/function_template.hpp ****                  typename Allocator>
 391:/usr/include/boost/function/function_template.hpp ****         struct apply_a
 392:/usr/include/boost/function/function_template.hpp ****         {
 393:/usr/include/boost/function/function_template.hpp ****           typedef typename BOOST_FUNCTION_GET_MEMBER_INVOKER<
 394:/usr/include/boost/function/function_template.hpp ****                              MemberPtr,
 395:/usr/include/boost/function/function_template.hpp ****                              R BOOST_FUNCTION_COMMA
 396:/usr/include/boost/function/function_template.hpp ****                              BOOST_FUNCTION_TEMPLATE_ARGS
 397:/usr/include/boost/function/function_template.hpp ****                            >::type
 398:/usr/include/boost/function/function_template.hpp ****             invoker_type;
 399:/usr/include/boost/function/function_template.hpp **** 
 400:/usr/include/boost/function/function_template.hpp ****           typedef functor_manager<MemberPtr> manager_type;
 401:/usr/include/boost/function/function_template.hpp ****         };
 402:/usr/include/boost/function/function_template.hpp ****       };
 403:/usr/include/boost/function/function_template.hpp **** #endif
 404:/usr/include/boost/function/function_template.hpp **** 
 405:/usr/include/boost/function/function_template.hpp ****       /* Retrieve the invoker for a function object. */
 406:/usr/include/boost/function/function_template.hpp ****       template<>
 407:/usr/include/boost/function/function_template.hpp ****       struct BOOST_FUNCTION_GET_INVOKER<function_obj_tag>
 408:/usr/include/boost/function/function_template.hpp ****       {
 409:/usr/include/boost/function/function_template.hpp ****         template<typename FunctionObj,
 410:/usr/include/boost/function/function_template.hpp ****                  typename R BOOST_FUNCTION_COMMA BOOST_FUNCTION_TEMPLATE_PARMS>
 411:/usr/include/boost/function/function_template.hpp ****         struct apply
 412:/usr/include/boost/function/function_template.hpp ****         {
 413:/usr/include/boost/function/function_template.hpp ****           typedef typename BOOST_FUNCTION_GET_FUNCTION_OBJ_INVOKER<
 414:/usr/include/boost/function/function_template.hpp ****                              FunctionObj,
 415:/usr/include/boost/function/function_template.hpp ****                              R BOOST_FUNCTION_COMMA
 416:/usr/include/boost/function/function_template.hpp ****                              BOOST_FUNCTION_TEMPLATE_ARGS
 417:/usr/include/boost/function/function_template.hpp ****                            >::type
 418:/usr/include/boost/function/function_template.hpp ****             invoker_type;
 419:/usr/include/boost/function/function_template.hpp **** 
 420:/usr/include/boost/function/function_template.hpp ****           typedef functor_manager<FunctionObj> manager_type;
 421:/usr/include/boost/function/function_template.hpp ****         };
 422:/usr/include/boost/function/function_template.hpp **** 
 423:/usr/include/boost/function/function_template.hpp ****         template<typename FunctionObj,
 424:/usr/include/boost/function/function_template.hpp ****                  typename R BOOST_FUNCTION_COMMA BOOST_FUNCTION_TEMPLATE_PARMS,
GAS LISTING /tmp/ccsIN87E.s 			page 280


 425:/usr/include/boost/function/function_template.hpp ****                  typename Allocator>
 426:/usr/include/boost/function/function_template.hpp ****         struct apply_a
 427:/usr/include/boost/function/function_template.hpp ****         {
 428:/usr/include/boost/function/function_template.hpp ****           typedef typename BOOST_FUNCTION_GET_FUNCTION_OBJ_INVOKER<
 429:/usr/include/boost/function/function_template.hpp ****                              FunctionObj,
 430:/usr/include/boost/function/function_template.hpp ****                              R BOOST_FUNCTION_COMMA
 431:/usr/include/boost/function/function_template.hpp ****                              BOOST_FUNCTION_TEMPLATE_ARGS
 432:/usr/include/boost/function/function_template.hpp ****                            >::type
 433:/usr/include/boost/function/function_template.hpp ****             invoker_type;
 434:/usr/include/boost/function/function_template.hpp **** 
 435:/usr/include/boost/function/function_template.hpp ****           typedef functor_manager_a<FunctionObj, Allocator> manager_type;
 436:/usr/include/boost/function/function_template.hpp ****         };
 437:/usr/include/boost/function/function_template.hpp ****       };
 438:/usr/include/boost/function/function_template.hpp **** 
 439:/usr/include/boost/function/function_template.hpp ****       /* Retrieve the invoker for a reference to a function object. */
 440:/usr/include/boost/function/function_template.hpp ****       template<>
 441:/usr/include/boost/function/function_template.hpp ****       struct BOOST_FUNCTION_GET_INVOKER<function_obj_ref_tag>
 442:/usr/include/boost/function/function_template.hpp ****       {
 443:/usr/include/boost/function/function_template.hpp ****         template<typename RefWrapper,
 444:/usr/include/boost/function/function_template.hpp ****                  typename R BOOST_FUNCTION_COMMA BOOST_FUNCTION_TEMPLATE_PARMS>
 445:/usr/include/boost/function/function_template.hpp ****         struct apply
 446:/usr/include/boost/function/function_template.hpp ****         {
 447:/usr/include/boost/function/function_template.hpp ****           typedef typename BOOST_FUNCTION_GET_FUNCTION_REF_INVOKER<
 448:/usr/include/boost/function/function_template.hpp ****                              typename RefWrapper::type,
 449:/usr/include/boost/function/function_template.hpp ****                              R BOOST_FUNCTION_COMMA
 450:/usr/include/boost/function/function_template.hpp ****                              BOOST_FUNCTION_TEMPLATE_ARGS
 451:/usr/include/boost/function/function_template.hpp ****                            >::type
 452:/usr/include/boost/function/function_template.hpp ****             invoker_type;
 453:/usr/include/boost/function/function_template.hpp **** 
 454:/usr/include/boost/function/function_template.hpp ****           typedef reference_manager<typename RefWrapper::type> manager_type;
 455:/usr/include/boost/function/function_template.hpp ****         };
 456:/usr/include/boost/function/function_template.hpp **** 
 457:/usr/include/boost/function/function_template.hpp ****         template<typename RefWrapper,
 458:/usr/include/boost/function/function_template.hpp ****                  typename R BOOST_FUNCTION_COMMA BOOST_FUNCTION_TEMPLATE_PARMS,
 459:/usr/include/boost/function/function_template.hpp ****                  typename Allocator>
 460:/usr/include/boost/function/function_template.hpp ****         struct apply_a
 461:/usr/include/boost/function/function_template.hpp ****         {
 462:/usr/include/boost/function/function_template.hpp ****           typedef typename BOOST_FUNCTION_GET_FUNCTION_REF_INVOKER<
 463:/usr/include/boost/function/function_template.hpp ****                              typename RefWrapper::type,
 464:/usr/include/boost/function/function_template.hpp ****                              R BOOST_FUNCTION_COMMA
 465:/usr/include/boost/function/function_template.hpp ****                              BOOST_FUNCTION_TEMPLATE_ARGS
 466:/usr/include/boost/function/function_template.hpp ****                            >::type
 467:/usr/include/boost/function/function_template.hpp ****             invoker_type;
 468:/usr/include/boost/function/function_template.hpp **** 
 469:/usr/include/boost/function/function_template.hpp ****           typedef reference_manager<typename RefWrapper::type> manager_type;
 470:/usr/include/boost/function/function_template.hpp ****         };
 471:/usr/include/boost/function/function_template.hpp ****       };
 472:/usr/include/boost/function/function_template.hpp **** 
 473:/usr/include/boost/function/function_template.hpp **** 
 474:/usr/include/boost/function/function_template.hpp ****       /**
 475:/usr/include/boost/function/function_template.hpp ****        * vtable for a specific boost::function instance. This
 476:/usr/include/boost/function/function_template.hpp ****        * structure must be an aggregate so that we can use static
 477:/usr/include/boost/function/function_template.hpp ****        * initialization in boost::function's assign_to and assign_to_a
 478:/usr/include/boost/function/function_template.hpp ****        * members. It therefore cannot have any constructors,
 479:/usr/include/boost/function/function_template.hpp ****        * destructors, base classes, etc.
 480:/usr/include/boost/function/function_template.hpp ****        */
 481:/usr/include/boost/function/function_template.hpp ****       template<typename R BOOST_FUNCTION_COMMA BOOST_FUNCTION_TEMPLATE_PARMS>
GAS LISTING /tmp/ccsIN87E.s 			page 281


 482:/usr/include/boost/function/function_template.hpp ****       struct BOOST_FUNCTION_VTABLE
 483:/usr/include/boost/function/function_template.hpp ****       {
 484:/usr/include/boost/function/function_template.hpp **** #ifndef BOOST_NO_VOID_RETURNS
 485:/usr/include/boost/function/function_template.hpp ****         typedef R         result_type;
 486:/usr/include/boost/function/function_template.hpp **** #else
 487:/usr/include/boost/function/function_template.hpp ****         typedef typename function_return_type<R>::type result_type;
 488:/usr/include/boost/function/function_template.hpp **** #endif // BOOST_NO_VOID_RETURNS
 489:/usr/include/boost/function/function_template.hpp **** 
 490:/usr/include/boost/function/function_template.hpp ****         typedef result_type (*invoker_type)(function_buffer&
 491:/usr/include/boost/function/function_template.hpp ****                                             BOOST_FUNCTION_COMMA
 492:/usr/include/boost/function/function_template.hpp ****                                             BOOST_FUNCTION_TEMPLATE_ARGS);
 493:/usr/include/boost/function/function_template.hpp **** 
 494:/usr/include/boost/function/function_template.hpp ****         template<typename F>
 495:/usr/include/boost/function/function_template.hpp ****         bool assign_to(F f, function_buffer& functor) const
 496:/usr/include/boost/function/function_template.hpp ****         {
 497:/usr/include/boost/function/function_template.hpp ****           typedef typename get_function_tag<F>::type tag;
 498:/usr/include/boost/function/function_template.hpp ****           return assign_to(f, functor, tag());
 499:/usr/include/boost/function/function_template.hpp ****         }
 500:/usr/include/boost/function/function_template.hpp ****         template<typename F,typename Allocator>
 501:/usr/include/boost/function/function_template.hpp ****         bool assign_to_a(F f, function_buffer& functor, Allocator a) const
 502:/usr/include/boost/function/function_template.hpp ****         {
 503:/usr/include/boost/function/function_template.hpp ****           typedef typename get_function_tag<F>::type tag;
 504:/usr/include/boost/function/function_template.hpp ****           return assign_to_a(f, functor, a, tag());
 505:/usr/include/boost/function/function_template.hpp ****         }
 506:/usr/include/boost/function/function_template.hpp **** 
 507:/usr/include/boost/function/function_template.hpp ****         void clear(function_buffer& functor) const
 508:/usr/include/boost/function/function_template.hpp ****         {
 509:/usr/include/boost/function/function_template.hpp ****           if (base.manager)
 510:/usr/include/boost/function/function_template.hpp ****             base.manager(functor, functor, destroy_functor_tag);
 511:/usr/include/boost/function/function_template.hpp ****         }
 512:/usr/include/boost/function/function_template.hpp **** 
 513:/usr/include/boost/function/function_template.hpp ****       private:
 514:/usr/include/boost/function/function_template.hpp ****         // Function pointers
 515:/usr/include/boost/function/function_template.hpp ****         template<typename FunctionPtr>
 516:/usr/include/boost/function/function_template.hpp ****         bool
 517:/usr/include/boost/function/function_template.hpp ****         assign_to(FunctionPtr f, function_buffer& functor, function_ptr_tag) const
 518:/usr/include/boost/function/function_template.hpp ****         {
 519:/usr/include/boost/function/function_template.hpp ****           this->clear(functor);
 520:/usr/include/boost/function/function_template.hpp ****           if (f) {
 521:/usr/include/boost/function/function_template.hpp ****             // should be a reinterpret cast, but some compilers insist
 522:/usr/include/boost/function/function_template.hpp ****             // on giving cv-qualifiers to free functions
 523:/usr/include/boost/function/function_template.hpp ****             functor.members.func_ptr = reinterpret_cast<void (*)()>(f);
 524:/usr/include/boost/function/function_template.hpp ****             return true;
 525:/usr/include/boost/function/function_template.hpp ****           } else {
 526:/usr/include/boost/function/function_template.hpp ****             return false;
 527:/usr/include/boost/function/function_template.hpp ****           }
 528:/usr/include/boost/function/function_template.hpp ****         }
 529:/usr/include/boost/function/function_template.hpp ****         template<typename FunctionPtr,typename Allocator>
 530:/usr/include/boost/function/function_template.hpp ****         bool
 531:/usr/include/boost/function/function_template.hpp ****         assign_to_a(FunctionPtr f, function_buffer& functor, Allocator, function_ptr_tag) const
 532:/usr/include/boost/function/function_template.hpp ****         {
 533:/usr/include/boost/function/function_template.hpp ****           return assign_to(f,functor,function_ptr_tag());
 534:/usr/include/boost/function/function_template.hpp ****         }
 535:/usr/include/boost/function/function_template.hpp **** 
 536:/usr/include/boost/function/function_template.hpp ****         // Member pointers
 537:/usr/include/boost/function/function_template.hpp **** #if BOOST_FUNCTION_NUM_ARGS > 0
 538:/usr/include/boost/function/function_template.hpp ****         template<typename MemberPtr>
GAS LISTING /tmp/ccsIN87E.s 			page 282


 539:/usr/include/boost/function/function_template.hpp ****         bool assign_to(MemberPtr f, function_buffer& functor, member_ptr_tag) const
 540:/usr/include/boost/function/function_template.hpp ****         {
 541:/usr/include/boost/function/function_template.hpp ****           // DPG TBD: Add explicit support for member function
 542:/usr/include/boost/function/function_template.hpp ****           // objects, so we invoke through mem_fn() but we retain the
 543:/usr/include/boost/function/function_template.hpp ****           // right target_type() values.
 544:/usr/include/boost/function/function_template.hpp ****           if (f) {
 545:/usr/include/boost/function/function_template.hpp ****             this->assign_to(boost::mem_fn(f), functor);
 546:/usr/include/boost/function/function_template.hpp ****             return true;
 547:/usr/include/boost/function/function_template.hpp ****           } else {
 548:/usr/include/boost/function/function_template.hpp ****             return false;
 549:/usr/include/boost/function/function_template.hpp ****           }
 550:/usr/include/boost/function/function_template.hpp ****         }
 551:/usr/include/boost/function/function_template.hpp ****         template<typename MemberPtr,typename Allocator>
 552:/usr/include/boost/function/function_template.hpp ****         bool assign_to_a(MemberPtr f, function_buffer& functor, Allocator a, member_ptr_tag) const
 553:/usr/include/boost/function/function_template.hpp ****         {
 554:/usr/include/boost/function/function_template.hpp ****           // DPG TBD: Add explicit support for member function
 555:/usr/include/boost/function/function_template.hpp ****           // objects, so we invoke through mem_fn() but we retain the
 556:/usr/include/boost/function/function_template.hpp ****           // right target_type() values.
 557:/usr/include/boost/function/function_template.hpp ****           if (f) {
 558:/usr/include/boost/function/function_template.hpp ****             this->assign_to_a(boost::mem_fn(f), functor, a);
 559:/usr/include/boost/function/function_template.hpp ****             return true;
 560:/usr/include/boost/function/function_template.hpp ****           } else {
 561:/usr/include/boost/function/function_template.hpp ****             return false;
 562:/usr/include/boost/function/function_template.hpp ****           }
 563:/usr/include/boost/function/function_template.hpp ****         }
 564:/usr/include/boost/function/function_template.hpp **** #endif // BOOST_FUNCTION_NUM_ARGS > 0
 565:/usr/include/boost/function/function_template.hpp **** 
 566:/usr/include/boost/function/function_template.hpp ****         // Function objects
 567:/usr/include/boost/function/function_template.hpp ****         // Assign to a function object using the small object optimization
 568:/usr/include/boost/function/function_template.hpp ****         template<typename FunctionObj>
 569:/usr/include/boost/function/function_template.hpp ****         void
 570:/usr/include/boost/function/function_template.hpp ****         assign_functor(FunctionObj f, function_buffer& functor, mpl::true_) const
 571:/usr/include/boost/function/function_template.hpp ****         {
 572:/usr/include/boost/function/function_template.hpp ****           new (reinterpret_cast<void*>(functor.data)) FunctionObj(f);
 573:/usr/include/boost/function/function_template.hpp ****         }
 574:/usr/include/boost/function/function_template.hpp ****         template<typename FunctionObj,typename Allocator>
 575:/usr/include/boost/function/function_template.hpp ****         void
 576:/usr/include/boost/function/function_template.hpp ****         assign_functor_a(FunctionObj f, function_buffer& functor, Allocator, mpl::true_) const
 577:/usr/include/boost/function/function_template.hpp ****         {
 578:/usr/include/boost/function/function_template.hpp ****           assign_functor(f,functor,mpl::true_());
 579:/usr/include/boost/function/function_template.hpp ****         }
 580:/usr/include/boost/function/function_template.hpp **** 
 581:/usr/include/boost/function/function_template.hpp ****         // Assign to a function object allocated on the heap.
 582:/usr/include/boost/function/function_template.hpp ****         template<typename FunctionObj>
 583:/usr/include/boost/function/function_template.hpp ****         void
 584:/usr/include/boost/function/function_template.hpp ****         assign_functor(FunctionObj f, function_buffer& functor, mpl::false_) const
 585:/usr/include/boost/function/function_template.hpp ****         {
 586:/usr/include/boost/function/function_template.hpp ****           functor.members.obj_ptr = new FunctionObj(f);
 587:/usr/include/boost/function/function_template.hpp ****         }
 588:/usr/include/boost/function/function_template.hpp ****         template<typename FunctionObj,typename Allocator>
 589:/usr/include/boost/function/function_template.hpp ****         void
 590:/usr/include/boost/function/function_template.hpp ****         assign_functor_a(FunctionObj f, function_buffer& functor, Allocator a, mpl::false_) const
 591:/usr/include/boost/function/function_template.hpp ****         {
 592:/usr/include/boost/function/function_template.hpp ****           typedef functor_wrapper<FunctionObj,Allocator> functor_wrapper_type;
 593:/usr/include/boost/function/function_template.hpp ****           typedef typename Allocator::template rebind<functor_wrapper_type>::other
 594:/usr/include/boost/function/function_template.hpp ****             wrapper_allocator_type;
 595:/usr/include/boost/function/function_template.hpp ****           typedef typename wrapper_allocator_type::pointer wrapper_allocator_pointer_type;
GAS LISTING /tmp/ccsIN87E.s 			page 283


 596:/usr/include/boost/function/function_template.hpp ****           wrapper_allocator_type wrapper_allocator(a);
 597:/usr/include/boost/function/function_template.hpp ****           wrapper_allocator_pointer_type copy = wrapper_allocator.allocate(1);
 598:/usr/include/boost/function/function_template.hpp ****           wrapper_allocator.construct(copy, functor_wrapper_type(f,a));
 599:/usr/include/boost/function/function_template.hpp ****           functor_wrapper_type* new_f = static_cast<functor_wrapper_type*>(copy);
 600:/usr/include/boost/function/function_template.hpp ****           functor.members.obj_ptr = new_f;
 601:/usr/include/boost/function/function_template.hpp ****         }
 602:/usr/include/boost/function/function_template.hpp **** 
 603:/usr/include/boost/function/function_template.hpp ****         template<typename FunctionObj>
 604:/usr/include/boost/function/function_template.hpp ****         bool
 605:/usr/include/boost/function/function_template.hpp ****         assign_to(FunctionObj f, function_buffer& functor, function_obj_tag) const
 606:/usr/include/boost/function/function_template.hpp ****         {
 607:/usr/include/boost/function/function_template.hpp ****           if (!boost::detail::function::has_empty_target(boost::addressof(f))) {
 608:/usr/include/boost/function/function_template.hpp ****             assign_functor(f, functor,
 609:/usr/include/boost/function/function_template.hpp ****                            mpl::bool_<(function_allows_small_object_optimization<FunctionObj>::valu
 610:/usr/include/boost/function/function_template.hpp ****             return true;
 611:/usr/include/boost/function/function_template.hpp ****           } else {
 612:/usr/include/boost/function/function_template.hpp ****             return false;
 613:/usr/include/boost/function/function_template.hpp ****           }
 614:/usr/include/boost/function/function_template.hpp ****         }
 615:/usr/include/boost/function/function_template.hpp ****         template<typename FunctionObj,typename Allocator>
 616:/usr/include/boost/function/function_template.hpp ****         bool
 617:/usr/include/boost/function/function_template.hpp ****         assign_to_a(FunctionObj f, function_buffer& functor, Allocator a, function_obj_tag) const
 618:/usr/include/boost/function/function_template.hpp ****         {
 619:/usr/include/boost/function/function_template.hpp ****           if (!boost::detail::function::has_empty_target(boost::addressof(f))) {
 620:/usr/include/boost/function/function_template.hpp ****             assign_functor_a(f, functor, a,
 621:/usr/include/boost/function/function_template.hpp ****                            mpl::bool_<(function_allows_small_object_optimization<FunctionObj>::valu
 622:/usr/include/boost/function/function_template.hpp ****             return true;
 623:/usr/include/boost/function/function_template.hpp ****           } else {
 624:/usr/include/boost/function/function_template.hpp ****             return false;
 625:/usr/include/boost/function/function_template.hpp ****           }
 626:/usr/include/boost/function/function_template.hpp ****         }
 627:/usr/include/boost/function/function_template.hpp **** 
 628:/usr/include/boost/function/function_template.hpp ****         // Reference to a function object
 629:/usr/include/boost/function/function_template.hpp ****         template<typename FunctionObj>
 630:/usr/include/boost/function/function_template.hpp ****         bool
 631:/usr/include/boost/function/function_template.hpp ****         assign_to(const reference_wrapper<FunctionObj>& f,
 632:/usr/include/boost/function/function_template.hpp ****                   function_buffer& functor, function_obj_ref_tag) const
 633:/usr/include/boost/function/function_template.hpp ****         {
 634:/usr/include/boost/function/function_template.hpp ****           functor.members.obj_ref.obj_ptr = (void *)(f.get_pointer());
 635:/usr/include/boost/function/function_template.hpp ****           functor.members.obj_ref.is_const_qualified = is_const<FunctionObj>::value;
 636:/usr/include/boost/function/function_template.hpp ****           functor.members.obj_ref.is_volatile_qualified = is_volatile<FunctionObj>::value;
 637:/usr/include/boost/function/function_template.hpp ****           return true;
 638:/usr/include/boost/function/function_template.hpp ****         }
 639:/usr/include/boost/function/function_template.hpp ****         template<typename FunctionObj,typename Allocator>
 640:/usr/include/boost/function/function_template.hpp ****         bool
 641:/usr/include/boost/function/function_template.hpp ****         assign_to_a(const reference_wrapper<FunctionObj>& f,
 642:/usr/include/boost/function/function_template.hpp ****                   function_buffer& functor, Allocator, function_obj_ref_tag) const
 643:/usr/include/boost/function/function_template.hpp ****         {
 644:/usr/include/boost/function/function_template.hpp ****           return assign_to(f,functor,function_obj_ref_tag());
 645:/usr/include/boost/function/function_template.hpp ****         }
 646:/usr/include/boost/function/function_template.hpp **** 
 647:/usr/include/boost/function/function_template.hpp ****       public:
 648:/usr/include/boost/function/function_template.hpp ****         vtable_base base;
 649:/usr/include/boost/function/function_template.hpp ****         invoker_type invoker;
 650:/usr/include/boost/function/function_template.hpp ****       };
 651:/usr/include/boost/function/function_template.hpp ****     } // end namespace function
 652:/usr/include/boost/function/function_template.hpp ****   } // end namespace detail
GAS LISTING /tmp/ccsIN87E.s 			page 284


 653:/usr/include/boost/function/function_template.hpp **** 
 654:/usr/include/boost/function/function_template.hpp ****   template<
 655:/usr/include/boost/function/function_template.hpp ****     typename R BOOST_FUNCTION_COMMA
 656:/usr/include/boost/function/function_template.hpp ****     BOOST_FUNCTION_TEMPLATE_PARMS
 657:/usr/include/boost/function/function_template.hpp ****   >
 658:/usr/include/boost/function/function_template.hpp ****   class BOOST_FUNCTION_FUNCTION : public function_base
 659:/usr/include/boost/function/function_template.hpp **** 
 660:/usr/include/boost/function/function_template.hpp **** #if BOOST_FUNCTION_NUM_ARGS == 1
 661:/usr/include/boost/function/function_template.hpp **** 
 662:/usr/include/boost/function/function_template.hpp ****     , public std::unary_function<T0,R>
 663:/usr/include/boost/function/function_template.hpp **** 
 664:/usr/include/boost/function/function_template.hpp **** #elif BOOST_FUNCTION_NUM_ARGS == 2
 665:/usr/include/boost/function/function_template.hpp **** 
 666:/usr/include/boost/function/function_template.hpp ****     , public std::binary_function<T0,T1,R>
 667:/usr/include/boost/function/function_template.hpp **** 
 668:/usr/include/boost/function/function_template.hpp **** #endif
 669:/usr/include/boost/function/function_template.hpp **** 
 670:/usr/include/boost/function/function_template.hpp ****   {
 671:/usr/include/boost/function/function_template.hpp ****   public:
 672:/usr/include/boost/function/function_template.hpp **** #ifndef BOOST_NO_VOID_RETURNS
 673:/usr/include/boost/function/function_template.hpp ****     typedef R         result_type;
 674:/usr/include/boost/function/function_template.hpp **** #else
 675:/usr/include/boost/function/function_template.hpp ****     typedef  typename boost::detail::function::function_return_type<R>::type
 676:/usr/include/boost/function/function_template.hpp ****       result_type;
 677:/usr/include/boost/function/function_template.hpp **** #endif // BOOST_NO_VOID_RETURNS
 678:/usr/include/boost/function/function_template.hpp **** 
 679:/usr/include/boost/function/function_template.hpp ****   private:
 680:/usr/include/boost/function/function_template.hpp ****     typedef boost::detail::function::BOOST_FUNCTION_VTABLE<
 681:/usr/include/boost/function/function_template.hpp ****               R BOOST_FUNCTION_COMMA BOOST_FUNCTION_TEMPLATE_ARGS>
 682:/usr/include/boost/function/function_template.hpp ****       vtable_type;
 683:/usr/include/boost/function/function_template.hpp **** 
 684:/usr/include/boost/function/function_template.hpp ****     vtable_type* get_vtable() const {
 685:/usr/include/boost/function/function_template.hpp ****       return reinterpret_cast<vtable_type*>(
 686:/usr/include/boost/function/function_template.hpp ****                reinterpret_cast<std::size_t>(vtable) & ~static_cast<std::size_t>(0x01));
 687:/usr/include/boost/function/function_template.hpp ****     }
 688:/usr/include/boost/function/function_template.hpp **** 
 689:/usr/include/boost/function/function_template.hpp ****     struct clear_type {};
 690:/usr/include/boost/function/function_template.hpp **** 
 691:/usr/include/boost/function/function_template.hpp ****   public:
 692:/usr/include/boost/function/function_template.hpp ****     BOOST_STATIC_CONSTANT(int, args = BOOST_FUNCTION_NUM_ARGS);
 693:/usr/include/boost/function/function_template.hpp **** 
 694:/usr/include/boost/function/function_template.hpp ****     // add signature for boost::lambda
 695:/usr/include/boost/function/function_template.hpp ****     template<typename Args>
 696:/usr/include/boost/function/function_template.hpp ****     struct sig
 697:/usr/include/boost/function/function_template.hpp ****     {
 698:/usr/include/boost/function/function_template.hpp ****       typedef result_type type;
 699:/usr/include/boost/function/function_template.hpp ****     };
 700:/usr/include/boost/function/function_template.hpp **** 
 701:/usr/include/boost/function/function_template.hpp **** #if BOOST_FUNCTION_NUM_ARGS == 1
 702:/usr/include/boost/function/function_template.hpp ****     typedef T0 argument_type;
 703:/usr/include/boost/function/function_template.hpp **** #elif BOOST_FUNCTION_NUM_ARGS == 2
 704:/usr/include/boost/function/function_template.hpp ****     typedef T0 first_argument_type;
 705:/usr/include/boost/function/function_template.hpp ****     typedef T1 second_argument_type;
 706:/usr/include/boost/function/function_template.hpp **** #endif
 707:/usr/include/boost/function/function_template.hpp **** 
 708:/usr/include/boost/function/function_template.hpp ****     BOOST_STATIC_CONSTANT(int, arity = BOOST_FUNCTION_NUM_ARGS);
 709:/usr/include/boost/function/function_template.hpp ****     BOOST_FUNCTION_ARG_TYPES
GAS LISTING /tmp/ccsIN87E.s 			page 285


 710:/usr/include/boost/function/function_template.hpp **** 
 711:/usr/include/boost/function/function_template.hpp ****     typedef BOOST_FUNCTION_FUNCTION self_type;
 712:/usr/include/boost/function/function_template.hpp **** 
 713:/usr/include/boost/function/function_template.hpp ****     BOOST_FUNCTION_FUNCTION() : function_base() { }
 714:/usr/include/boost/function/function_template.hpp **** 
 715:/usr/include/boost/function/function_template.hpp ****     // MSVC chokes if the following two constructors are collapsed into
 716:/usr/include/boost/function/function_template.hpp ****     // one with a default parameter.
 717:/usr/include/boost/function/function_template.hpp ****     template<typename Functor>
 718:/usr/include/boost/function/function_template.hpp ****     BOOST_FUNCTION_FUNCTION(Functor BOOST_FUNCTION_TARGET_FIX(const &) f
 719:/usr/include/boost/function/function_template.hpp **** #ifndef BOOST_NO_SFINAE
 720:/usr/include/boost/function/function_template.hpp ****                             ,typename boost::enable_if_c<
 721:/usr/include/boost/function/function_template.hpp ****                              !(is_integral<Functor>::value),
 722:/usr/include/boost/function/function_template.hpp ****                                         int>::type = 0
 723:/usr/include/boost/function/function_template.hpp **** #endif // BOOST_NO_SFINAE
 724:/usr/include/boost/function/function_template.hpp ****                             ) :
 725:/usr/include/boost/function/function_template.hpp ****       function_base()
 726:/usr/include/boost/function/function_template.hpp ****     {
 727:/usr/include/boost/function/function_template.hpp ****       this->assign_to(f);
 728:/usr/include/boost/function/function_template.hpp ****     }
 729:/usr/include/boost/function/function_template.hpp ****     template<typename Functor,typename Allocator>
 730:/usr/include/boost/function/function_template.hpp ****     BOOST_FUNCTION_FUNCTION(Functor BOOST_FUNCTION_TARGET_FIX(const &) f, Allocator a
 731:/usr/include/boost/function/function_template.hpp **** #ifndef BOOST_NO_SFINAE
 732:/usr/include/boost/function/function_template.hpp ****                             ,typename boost::enable_if_c<
 733:/usr/include/boost/function/function_template.hpp ****                               !(is_integral<Functor>::value),
 734:/usr/include/boost/function/function_template.hpp ****                                         int>::type = 0
 735:/usr/include/boost/function/function_template.hpp **** #endif // BOOST_NO_SFINAE
 736:/usr/include/boost/function/function_template.hpp ****                             ) :
 737:/usr/include/boost/function/function_template.hpp ****       function_base()
 738:/usr/include/boost/function/function_template.hpp ****     {
 739:/usr/include/boost/function/function_template.hpp ****       this->assign_to_a(f,a);
 740:/usr/include/boost/function/function_template.hpp ****     }
 741:/usr/include/boost/function/function_template.hpp **** 
 742:/usr/include/boost/function/function_template.hpp **** #ifndef BOOST_NO_SFINAE
 743:/usr/include/boost/function/function_template.hpp ****     BOOST_FUNCTION_FUNCTION(clear_type*) : function_base() { }
 744:/usr/include/boost/function/function_template.hpp **** #else
 745:/usr/include/boost/function/function_template.hpp ****     BOOST_FUNCTION_FUNCTION(int zero) : function_base()
 746:/usr/include/boost/function/function_template.hpp ****     {
 747:/usr/include/boost/function/function_template.hpp ****       BOOST_ASSERT(zero == 0);
 748:/usr/include/boost/function/function_template.hpp ****     }
 749:/usr/include/boost/function/function_template.hpp **** #endif
 750:/usr/include/boost/function/function_template.hpp **** 
 751:/usr/include/boost/function/function_template.hpp ****     BOOST_FUNCTION_FUNCTION(const BOOST_FUNCTION_FUNCTION& f) : function_base()
 752:/usr/include/boost/function/function_template.hpp ****     {
 753:/usr/include/boost/function/function_template.hpp ****       this->assign_to_own(f);
 754:/usr/include/boost/function/function_template.hpp ****     }
 755:/usr/include/boost/function/function_template.hpp **** 
 756:/usr/include/boost/function/function_template.hpp **** #ifndef BOOST_NO_CXX11_RVALUE_REFERENCES
 757:/usr/include/boost/function/function_template.hpp ****     BOOST_FUNCTION_FUNCTION(BOOST_FUNCTION_FUNCTION&& f) : function_base()
 758:/usr/include/boost/function/function_template.hpp ****     {
 759:/usr/include/boost/function/function_template.hpp ****       this->move_assign(f);
 760:/usr/include/boost/function/function_template.hpp ****     }
 761:/usr/include/boost/function/function_template.hpp **** #endif
 762:/usr/include/boost/function/function_template.hpp **** 
 763:/usr/include/boost/function/function_template.hpp ****     ~BOOST_FUNCTION_FUNCTION() { clear(); }
 764:/usr/include/boost/function/function_template.hpp **** 
 765:/usr/include/boost/function/function_template.hpp ****     result_type operator()(BOOST_FUNCTION_PARMS) const
 6082              		.loc 29 765 0
GAS LISTING /tmp/ccsIN87E.s 			page 286


 6083              		.cfi_startproc
 6084              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 6085              		.cfi_lsda 0x1b,.LLSDA11691
 6086 0000 55       		pushq	%rbp
 6087              		.cfi_def_cfa_offset 16
 6088              		.cfi_offset 6, -16
 6089 0001 4889E5   		movq	%rsp, %rbp
 6090              		.cfi_def_cfa_register 6
 6091 0004 53       		pushq	%rbx
 6092 0005 4883EC38 		subq	$56, %rsp
 6093              		.cfi_offset 3, -24
 6094 0009 48897DC8 		movq	%rdi, -56(%rbp)
 6095 000d 488975C0 		movq	%rsi, -64(%rbp)
 766:/usr/include/boost/function/function_template.hpp ****     {
 767:/usr/include/boost/function/function_template.hpp ****       if (this->empty())
 6096              		.loc 29 767 0
 6097 0011 488B45C8 		movq	-56(%rbp), %rax
 6098 0015 4889C7   		movq	%rax, %rdi
 6099 0018 E8000000 		call	_ZNK5boost13function_base5emptyEv
 6099      00
 6100 001d 84C0     		testb	%al, %al
 6101 001f 7418     		je	.L266
 768:/usr/include/boost/function/function_template.hpp ****         boost::throw_exception(bad_function_call());
 6102              		.loc 29 768 0
 6103 0021 488D45D0 		leaq	-48(%rbp), %rax
 6104 0025 4889C7   		movq	%rax, %rdi
 6105              	.LEHB36:
 6106 0028 E8000000 		call	_ZN5boost17bad_function_callC1Ev
 6106      00
 6107              	.LEHE36:
 6108 002d 488D45D0 		leaq	-48(%rbp), %rax
 6109 0031 4889C7   		movq	%rax, %rdi
 6110              	.LEHB37:
 6111 0034 E8000000 		call	_ZN5boost15throw_exceptionINS_17bad_function_callEEEvRKT_
 6111      00
 6112              	.LEHE37:
 6113              	.L266:
 769:/usr/include/boost/function/function_template.hpp **** 
 770:/usr/include/boost/function/function_template.hpp ****       return get_vtable()->invoker
 6114              		.loc 29 770 0
 6115 0039 488B45C8 		movq	-56(%rbp), %rax
 6116 003d 4889C7   		movq	%rax, %rdi
 6117 0040 E8000000 		call	_ZNK5boost9function1IvNS_13intrusive_ptrIN3pmt8pmt_baseEEEE10get_vtableEv
 6117      00
 6118 0045 488B5808 		movq	8(%rax), %rbx
 6119 0049 488B45C0 		movq	-64(%rbp), %rax
 6120 004d 4889C7   		movq	%rax, %rdi
 6121 0050 E8000000 		call	_ZN5boost7forwardINS_13intrusive_ptrIN3pmt8pmt_baseEEEEEOT_RNS_11move_detail16remove_referenc
 6121      00
 6122 0055 4889C2   		movq	%rax, %rdx
 6123 0058 488D45E8 		leaq	-24(%rbp), %rax
 6124 005c 4889D6   		movq	%rdx, %rsi
 6125 005f 4889C7   		movq	%rax, %rdi
 6126 0062 E8000000 		call	_ZN5boost13intrusive_ptrIN3pmt8pmt_baseEEC1EOS3_
 6126      00
 6127 0067 488B45C8 		movq	-56(%rbp), %rax
 6128 006b 488D5008 		leaq	8(%rax), %rdx
GAS LISTING /tmp/ccsIN87E.s 			page 287


 771:/usr/include/boost/function/function_template.hpp ****                (this->functor BOOST_FUNCTION_COMMA BOOST_FUNCTION_ARGS);
 6129              		.loc 29 771 0
 6130 006f 488D45E8 		leaq	-24(%rbp), %rax
 6131 0073 4889C6   		movq	%rax, %rsi
 6132 0076 4889D7   		movq	%rdx, %rdi
 6133              	.LEHB38:
 6134 0079 FFD3     		call	*%rbx
 6135              	.LVL7:
 6136              	.LEHE38:
 770:/usr/include/boost/function/function_template.hpp ****                (this->functor BOOST_FUNCTION_COMMA BOOST_FUNCTION_ARGS);
 6137              		.loc 29 770 0
 6138 007b 488D45E8 		leaq	-24(%rbp), %rax
 6139 007f 4889C7   		movq	%rax, %rdi
 6140 0082 E8000000 		call	_ZN5boost13intrusive_ptrIN3pmt8pmt_baseEED1Ev
 6140      00
 6141              		.loc 29 771 0
 6142 0087 EB34     		jmp	.L272
 6143              	.L270:
 6144 0089 4889C3   		movq	%rax, %rbx
 768:/usr/include/boost/function/function_template.hpp **** 
 6145              		.loc 29 768 0
 6146 008c 488D45D0 		leaq	-48(%rbp), %rax
 6147 0090 4889C7   		movq	%rax, %rdi
 6148 0093 E8000000 		call	_ZN5boost17bad_function_callD1Ev
 6148      00
 6149 0098 4889D8   		movq	%rbx, %rax
 6150 009b 4889C7   		movq	%rax, %rdi
 6151              	.LEHB39:
 6152 009e E8000000 		call	_Unwind_Resume@PLT
 6152      00
 6153              	.L271:
 6154 00a3 4889C3   		movq	%rax, %rbx
 770:/usr/include/boost/function/function_template.hpp ****                (this->functor BOOST_FUNCTION_COMMA BOOST_FUNCTION_ARGS);
 6155              		.loc 29 770 0
 6156 00a6 488D45E8 		leaq	-24(%rbp), %rax
 6157 00aa 4889C7   		movq	%rax, %rdi
 6158 00ad E8000000 		call	_ZN5boost13intrusive_ptrIN3pmt8pmt_baseEED1Ev
 6158      00
 6159 00b2 4889D8   		movq	%rbx, %rax
 6160 00b5 4889C7   		movq	%rax, %rdi
 6161 00b8 E8000000 		call	_Unwind_Resume@PLT
 6161      00
 6162              	.LEHE39:
 6163              	.L272:
 772:/usr/include/boost/function/function_template.hpp ****     }
 6164              		.loc 29 772 0
 6165 00bd 4883C438 		addq	$56, %rsp
 6166 00c1 5B       		popq	%rbx
 6167 00c2 5D       		popq	%rbp
 6168              		.cfi_def_cfa 7, 8
 6169 00c3 C3       		ret
 6170              		.cfi_endproc
 6171              	.LFE11691:
 6172              		.section	.gcc_except_table
 6173              	.LLSDA11691:
 6174 0091 FF       		.byte	0xff
 6175 0092 FF       		.byte	0xff
GAS LISTING /tmp/ccsIN87E.s 			page 288


 6176 0093 01       		.byte	0x1
 6177 0094 13       		.uleb128 .LLSDACSE11691-.LLSDACSB11691
 6178              	.LLSDACSB11691:
 6179 0095 28       		.uleb128 .LEHB36-.LFB11691
 6180 0096 05       		.uleb128 .LEHE36-.LEHB36
 6181 0097 00       		.uleb128 0
 6182 0098 00       		.uleb128 0
 6183 0099 34       		.uleb128 .LEHB37-.LFB11691
 6184 009a 05       		.uleb128 .LEHE37-.LEHB37
 6185 009b 8901     		.uleb128 .L270-.LFB11691
 6186 009d 00       		.uleb128 0
 6187 009e 79       		.uleb128 .LEHB38-.LFB11691
 6188 009f 02       		.uleb128 .LEHE38-.LEHB38
 6189 00a0 A301     		.uleb128 .L271-.LFB11691
 6190 00a2 00       		.uleb128 0
 6191 00a3 9E01     		.uleb128 .LEHB39-.LFB11691
 6192 00a5 1F       		.uleb128 .LEHE39-.LEHB39
 6193 00a6 00       		.uleb128 0
 6194 00a7 00       		.uleb128 0
 6195              	.LLSDACSE11691:
 6196              		.section	.text._ZNK5boost9function1IvNS_13intrusive_ptrIN3pmt8pmt_baseEEEEclES4_,"axG",@progbits,_
 6198              		.section	.text._ZNSt3mapIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt5dequeIS4_SaIS4_EENS2_10compara
 6199              		.align 2
 6200              		.weak	_ZNSt3mapIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt5dequeIS4_SaIS4_EENS2_10comparatorESaISt
 6202              	_ZNSt3mapIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt5dequeIS4_SaIS4_EENS2_10comparatorESaISt4pairIK
 6203              	.LFB11702:
1079:/usr/include/c++/6/bits/stl_map.h ****       { return _M_t.find(__x); }
 6204              		.loc 26 1079 0
 6205              		.cfi_startproc
 6206 0000 55       		pushq	%rbp
 6207              		.cfi_def_cfa_offset 16
 6208              		.cfi_offset 6, -16
 6209 0001 4889E5   		movq	%rsp, %rbp
 6210              		.cfi_def_cfa_register 6
 6211 0004 4883EC10 		subq	$16, %rsp
 6212 0008 48897DF8 		movq	%rdi, -8(%rbp)
 6213 000c 488975F0 		movq	%rsi, -16(%rbp)
 6214              		.loc 26 1080 0
 6215 0010 488B45F8 		movq	-8(%rbp), %rax
 6216 0014 488B55F0 		movq	-16(%rbp), %rdx
 6217 0018 4889D6   		movq	%rdx, %rsi
 6218 001b 4889C7   		movq	%rax, %rdi
 6219 001e E8000000 		call	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_St5dequeIS4_SaIS4_EEESt10_
 6219      00
 6220 0023 C9       		leave
 6221              		.cfi_def_cfa 7, 8
 6222 0024 C3       		ret
 6223              		.cfi_endproc
 6224              	.LFE11702:
 6226              		.section	.text._ZNSt3mapIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt5dequeIS4_SaIS4_EENS2_10compara
 6227              		.align 2
 6228              		.weak	_ZNSt3mapIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt5dequeIS4_SaIS4_EENS2_10comparatorESaISt
 6230              	_ZNSt3mapIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt5dequeIS4_SaIS4_EENS2_10comparatorESaISt4pairIK
 6231              	.LFB11703:
 356:/usr/include/c++/6/bits/stl_map.h ****       { return _M_t.end(); }
 6232              		.loc 26 356 0
 6233              		.cfi_startproc
GAS LISTING /tmp/ccsIN87E.s 			page 289


 6234 0000 55       		pushq	%rbp
 6235              		.cfi_def_cfa_offset 16
 6236              		.cfi_offset 6, -16
 6237 0001 4889E5   		movq	%rsp, %rbp
 6238              		.cfi_def_cfa_register 6
 6239 0004 4883EC10 		subq	$16, %rsp
 6240 0008 48897DF8 		movq	%rdi, -8(%rbp)
 357:/usr/include/c++/6/bits/stl_map.h **** 
 6241              		.loc 26 357 0
 6242 000c 488B45F8 		movq	-8(%rbp), %rax
 6243 0010 4889C7   		movq	%rax, %rdi
 6244 0013 E8000000 		call	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_St5dequeIS4_SaIS4_EEESt10_
 6244      00
 6245 0018 C9       		leave
 6246              		.cfi_def_cfa 7, 8
 6247 0019 C3       		ret
 6248              		.cfi_endproc
 6249              	.LFE11703:
 6251              		.section	.text._ZNKSt17_Rb_tree_iteratorISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt5deque
 6252              		.align 2
 6253              		.weak	_ZNKSt17_Rb_tree_iteratorISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt5dequeIS5_SaIS5
 6255              	_ZNKSt17_Rb_tree_iteratorISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt5dequeIS5_SaIS5_EEEEeq
 6256              	.LFB11704:
 237:/usr/include/c++/6/bits/stl_tree.h ****       { return _M_node == __x._M_node; }
 6257              		.loc 27 237 0
 6258              		.cfi_startproc
 6259 0000 55       		pushq	%rbp
 6260              		.cfi_def_cfa_offset 16
 6261              		.cfi_offset 6, -16
 6262 0001 4889E5   		movq	%rsp, %rbp
 6263              		.cfi_def_cfa_register 6
 6264 0004 48897DF8 		movq	%rdi, -8(%rbp)
 6265 0008 488975F0 		movq	%rsi, -16(%rbp)
 238:/usr/include/c++/6/bits/stl_tree.h **** 
 6266              		.loc 27 238 0
 6267 000c 488B45F8 		movq	-8(%rbp), %rax
 6268 0010 488B10   		movq	(%rax), %rdx
 6269 0013 488B45F0 		movq	-16(%rbp), %rax
 6270 0017 488B00   		movq	(%rax), %rax
 6271 001a 4839C2   		cmpq	%rax, %rdx
 6272 001d 0F94C0   		sete	%al
 6273 0020 5D       		popq	%rbp
 6274              		.cfi_def_cfa 7, 8
 6275 0021 C3       		ret
 6276              		.cfi_endproc
 6277              	.LFE11704:
 6279              		.section	.text._ZNKSt17_Rb_tree_iteratorISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt5deque
 6280              		.align 2
 6281              		.weak	_ZNKSt17_Rb_tree_iteratorISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt5dequeIS5_SaIS5
 6283              	_ZNKSt17_Rb_tree_iteratorISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt5dequeIS5_SaIS5_EEEEne
 6284              	.LFB11731:
 241:/usr/include/c++/6/bits/stl_tree.h ****       { return _M_node != __x._M_node; }
 6285              		.loc 27 241 0
 6286              		.cfi_startproc
 6287 0000 55       		pushq	%rbp
 6288              		.cfi_def_cfa_offset 16
 6289              		.cfi_offset 6, -16
GAS LISTING /tmp/ccsIN87E.s 			page 290


 6290 0001 4889E5   		movq	%rsp, %rbp
 6291              		.cfi_def_cfa_register 6
 6292 0004 48897DF8 		movq	%rdi, -8(%rbp)
 6293 0008 488975F0 		movq	%rsi, -16(%rbp)
 6294              		.loc 27 242 0
 6295 000c 488B45F8 		movq	-8(%rbp), %rax
 6296 0010 488B10   		movq	(%rax), %rdx
 6297 0013 488B45F0 		movq	-16(%rbp), %rax
 6298 0017 488B00   		movq	(%rax), %rax
 6299 001a 4839C2   		cmpq	%rax, %rdx
 6300 001d 0F95C0   		setne	%al
 6301 0020 5D       		popq	%rbp
 6302              		.cfi_def_cfa 7, 8
 6303 0021 C3       		ret
 6304              		.cfi_endproc
 6305              	.LFE11731:
 6307              		.section	.text._ZNSt6vectorIlSaIlEED2Ev,"axG",@progbits,_ZNSt6vectorIlSaIlEED5Ev,comdat
 6308              		.align 2
 6309              		.weak	_ZNSt6vectorIlSaIlEED2Ev
 6311              	_ZNSt6vectorIlSaIlEED2Ev:
 6312              	.LFB11741:
 6313              		.file 30 "/usr/include/c++/6/bits/stl_vector.h"
   1:/usr/include/c++/6/bits/stl_vector.h **** // Vector implementation -*- C++ -*-
   2:/usr/include/c++/6/bits/stl_vector.h **** 
   3:/usr/include/c++/6/bits/stl_vector.h **** // Copyright (C) 2001-2016 Free Software Foundation, Inc.
   4:/usr/include/c++/6/bits/stl_vector.h **** //
   5:/usr/include/c++/6/bits/stl_vector.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/6/bits/stl_vector.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/6/bits/stl_vector.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/6/bits/stl_vector.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/6/bits/stl_vector.h **** // any later version.
  10:/usr/include/c++/6/bits/stl_vector.h **** 
  11:/usr/include/c++/6/bits/stl_vector.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/6/bits/stl_vector.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/6/bits/stl_vector.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/6/bits/stl_vector.h **** // GNU General Public License for more details.
  15:/usr/include/c++/6/bits/stl_vector.h **** 
  16:/usr/include/c++/6/bits/stl_vector.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/6/bits/stl_vector.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/6/bits/stl_vector.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/6/bits/stl_vector.h **** 
  20:/usr/include/c++/6/bits/stl_vector.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/6/bits/stl_vector.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/6/bits/stl_vector.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/6/bits/stl_vector.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/6/bits/stl_vector.h **** 
  25:/usr/include/c++/6/bits/stl_vector.h **** /*
  26:/usr/include/c++/6/bits/stl_vector.h ****  *
  27:/usr/include/c++/6/bits/stl_vector.h ****  * Copyright (c) 1994
  28:/usr/include/c++/6/bits/stl_vector.h ****  * Hewlett-Packard Company
  29:/usr/include/c++/6/bits/stl_vector.h ****  *
  30:/usr/include/c++/6/bits/stl_vector.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:/usr/include/c++/6/bits/stl_vector.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:/usr/include/c++/6/bits/stl_vector.h ****  * provided that the above copyright notice appear in all copies and
  33:/usr/include/c++/6/bits/stl_vector.h ****  * that both that copyright notice and this permission notice appear
  34:/usr/include/c++/6/bits/stl_vector.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:/usr/include/c++/6/bits/stl_vector.h ****  * representations about the suitability of this software for any
GAS LISTING /tmp/ccsIN87E.s 			page 291


  36:/usr/include/c++/6/bits/stl_vector.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:/usr/include/c++/6/bits/stl_vector.h ****  *
  38:/usr/include/c++/6/bits/stl_vector.h ****  *
  39:/usr/include/c++/6/bits/stl_vector.h ****  * Copyright (c) 1996
  40:/usr/include/c++/6/bits/stl_vector.h ****  * Silicon Graphics Computer Systems, Inc.
  41:/usr/include/c++/6/bits/stl_vector.h ****  *
  42:/usr/include/c++/6/bits/stl_vector.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:/usr/include/c++/6/bits/stl_vector.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:/usr/include/c++/6/bits/stl_vector.h ****  * provided that the above copyright notice appear in all copies and
  45:/usr/include/c++/6/bits/stl_vector.h ****  * that both that copyright notice and this permission notice appear
  46:/usr/include/c++/6/bits/stl_vector.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:/usr/include/c++/6/bits/stl_vector.h ****  * representations about the suitability of this  software for any
  48:/usr/include/c++/6/bits/stl_vector.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:/usr/include/c++/6/bits/stl_vector.h ****  */
  50:/usr/include/c++/6/bits/stl_vector.h **** 
  51:/usr/include/c++/6/bits/stl_vector.h **** /** @file bits/stl_vector.h
  52:/usr/include/c++/6/bits/stl_vector.h ****  *  This is an internal header file, included by other library headers.
  53:/usr/include/c++/6/bits/stl_vector.h ****  *  Do not attempt to use it directly. @headername{vector}
  54:/usr/include/c++/6/bits/stl_vector.h ****  */
  55:/usr/include/c++/6/bits/stl_vector.h **** 
  56:/usr/include/c++/6/bits/stl_vector.h **** #ifndef _STL_VECTOR_H
  57:/usr/include/c++/6/bits/stl_vector.h **** #define _STL_VECTOR_H 1
  58:/usr/include/c++/6/bits/stl_vector.h **** 
  59:/usr/include/c++/6/bits/stl_vector.h **** #include <bits/stl_iterator_base_funcs.h>
  60:/usr/include/c++/6/bits/stl_vector.h **** #include <bits/functexcept.h>
  61:/usr/include/c++/6/bits/stl_vector.h **** #include <bits/concept_check.h>
  62:/usr/include/c++/6/bits/stl_vector.h **** #if __cplusplus >= 201103L
  63:/usr/include/c++/6/bits/stl_vector.h **** #include <initializer_list>
  64:/usr/include/c++/6/bits/stl_vector.h **** #endif
  65:/usr/include/c++/6/bits/stl_vector.h **** 
  66:/usr/include/c++/6/bits/stl_vector.h **** namespace std _GLIBCXX_VISIBILITY(default)
  67:/usr/include/c++/6/bits/stl_vector.h **** {
  68:/usr/include/c++/6/bits/stl_vector.h **** _GLIBCXX_BEGIN_NAMESPACE_CONTAINER
  69:/usr/include/c++/6/bits/stl_vector.h **** 
  70:/usr/include/c++/6/bits/stl_vector.h ****   /// See bits/stl_deque.h's _Deque_base for an explanation.
  71:/usr/include/c++/6/bits/stl_vector.h ****   template<typename _Tp, typename _Alloc>
  72:/usr/include/c++/6/bits/stl_vector.h ****     struct _Vector_base
  73:/usr/include/c++/6/bits/stl_vector.h ****     {
  74:/usr/include/c++/6/bits/stl_vector.h ****       typedef typename __gnu_cxx::__alloc_traits<_Alloc>::template
  75:/usr/include/c++/6/bits/stl_vector.h ****         rebind<_Tp>::other _Tp_alloc_type;
  76:/usr/include/c++/6/bits/stl_vector.h ****       typedef typename __gnu_cxx::__alloc_traits<_Tp_alloc_type>::pointer
  77:/usr/include/c++/6/bits/stl_vector.h ****        	pointer;
  78:/usr/include/c++/6/bits/stl_vector.h **** 
  79:/usr/include/c++/6/bits/stl_vector.h ****       struct _Vector_impl 
  80:/usr/include/c++/6/bits/stl_vector.h ****       : public _Tp_alloc_type
  81:/usr/include/c++/6/bits/stl_vector.h ****       {
  82:/usr/include/c++/6/bits/stl_vector.h **** 	pointer _M_start;
  83:/usr/include/c++/6/bits/stl_vector.h **** 	pointer _M_finish;
  84:/usr/include/c++/6/bits/stl_vector.h **** 	pointer _M_end_of_storage;
  85:/usr/include/c++/6/bits/stl_vector.h **** 
  86:/usr/include/c++/6/bits/stl_vector.h **** 	_Vector_impl()
  87:/usr/include/c++/6/bits/stl_vector.h **** 	: _Tp_alloc_type(), _M_start(), _M_finish(), _M_end_of_storage()
  88:/usr/include/c++/6/bits/stl_vector.h **** 	{ }
  89:/usr/include/c++/6/bits/stl_vector.h **** 
  90:/usr/include/c++/6/bits/stl_vector.h **** 	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
  91:/usr/include/c++/6/bits/stl_vector.h **** 	: _Tp_alloc_type(__a), _M_start(), _M_finish(), _M_end_of_storage()
  92:/usr/include/c++/6/bits/stl_vector.h **** 	{ }
GAS LISTING /tmp/ccsIN87E.s 			page 292


  93:/usr/include/c++/6/bits/stl_vector.h **** 
  94:/usr/include/c++/6/bits/stl_vector.h **** #if __cplusplus >= 201103L
  95:/usr/include/c++/6/bits/stl_vector.h **** 	_Vector_impl(_Tp_alloc_type&& __a) noexcept
  96:/usr/include/c++/6/bits/stl_vector.h **** 	: _Tp_alloc_type(std::move(__a)),
  97:/usr/include/c++/6/bits/stl_vector.h **** 	  _M_start(), _M_finish(), _M_end_of_storage()
  98:/usr/include/c++/6/bits/stl_vector.h **** 	{ }
  99:/usr/include/c++/6/bits/stl_vector.h **** #endif
 100:/usr/include/c++/6/bits/stl_vector.h **** 
 101:/usr/include/c++/6/bits/stl_vector.h **** 	void _M_swap_data(_Vector_impl& __x) _GLIBCXX_NOEXCEPT
 102:/usr/include/c++/6/bits/stl_vector.h **** 	{
 103:/usr/include/c++/6/bits/stl_vector.h **** 	  std::swap(_M_start, __x._M_start);
 104:/usr/include/c++/6/bits/stl_vector.h **** 	  std::swap(_M_finish, __x._M_finish);
 105:/usr/include/c++/6/bits/stl_vector.h **** 	  std::swap(_M_end_of_storage, __x._M_end_of_storage);
 106:/usr/include/c++/6/bits/stl_vector.h **** 	}
 107:/usr/include/c++/6/bits/stl_vector.h ****       };
 108:/usr/include/c++/6/bits/stl_vector.h ****       
 109:/usr/include/c++/6/bits/stl_vector.h ****     public:
 110:/usr/include/c++/6/bits/stl_vector.h ****       typedef _Alloc allocator_type;
 111:/usr/include/c++/6/bits/stl_vector.h **** 
 112:/usr/include/c++/6/bits/stl_vector.h ****       _Tp_alloc_type&
 113:/usr/include/c++/6/bits/stl_vector.h ****       _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
 114:/usr/include/c++/6/bits/stl_vector.h ****       { return *static_cast<_Tp_alloc_type*>(&this->_M_impl); }
 115:/usr/include/c++/6/bits/stl_vector.h **** 
 116:/usr/include/c++/6/bits/stl_vector.h ****       const _Tp_alloc_type&
 117:/usr/include/c++/6/bits/stl_vector.h ****       _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
 118:/usr/include/c++/6/bits/stl_vector.h ****       { return *static_cast<const _Tp_alloc_type*>(&this->_M_impl); }
 119:/usr/include/c++/6/bits/stl_vector.h **** 
 120:/usr/include/c++/6/bits/stl_vector.h ****       allocator_type
 121:/usr/include/c++/6/bits/stl_vector.h ****       get_allocator() const _GLIBCXX_NOEXCEPT
 122:/usr/include/c++/6/bits/stl_vector.h ****       { return allocator_type(_M_get_Tp_allocator()); }
 123:/usr/include/c++/6/bits/stl_vector.h **** 
 124:/usr/include/c++/6/bits/stl_vector.h ****       _Vector_base()
 125:/usr/include/c++/6/bits/stl_vector.h ****       : _M_impl() { }
 126:/usr/include/c++/6/bits/stl_vector.h **** 
 127:/usr/include/c++/6/bits/stl_vector.h ****       _Vector_base(const allocator_type& __a) _GLIBCXX_NOEXCEPT
 128:/usr/include/c++/6/bits/stl_vector.h ****       : _M_impl(__a) { }
 129:/usr/include/c++/6/bits/stl_vector.h **** 
 130:/usr/include/c++/6/bits/stl_vector.h ****       _Vector_base(size_t __n)
 131:/usr/include/c++/6/bits/stl_vector.h ****       : _M_impl()
 132:/usr/include/c++/6/bits/stl_vector.h ****       { _M_create_storage(__n); }
 133:/usr/include/c++/6/bits/stl_vector.h **** 
 134:/usr/include/c++/6/bits/stl_vector.h ****       _Vector_base(size_t __n, const allocator_type& __a)
 135:/usr/include/c++/6/bits/stl_vector.h ****       : _M_impl(__a)
 136:/usr/include/c++/6/bits/stl_vector.h ****       { _M_create_storage(__n); }
 137:/usr/include/c++/6/bits/stl_vector.h **** 
 138:/usr/include/c++/6/bits/stl_vector.h **** #if __cplusplus >= 201103L
 139:/usr/include/c++/6/bits/stl_vector.h ****       _Vector_base(_Tp_alloc_type&& __a) noexcept
 140:/usr/include/c++/6/bits/stl_vector.h ****       : _M_impl(std::move(__a)) { }
 141:/usr/include/c++/6/bits/stl_vector.h **** 
 142:/usr/include/c++/6/bits/stl_vector.h ****       _Vector_base(_Vector_base&& __x) noexcept
 143:/usr/include/c++/6/bits/stl_vector.h ****       : _M_impl(std::move(__x._M_get_Tp_allocator()))
 144:/usr/include/c++/6/bits/stl_vector.h ****       { this->_M_impl._M_swap_data(__x._M_impl); }
 145:/usr/include/c++/6/bits/stl_vector.h **** 
 146:/usr/include/c++/6/bits/stl_vector.h ****       _Vector_base(_Vector_base&& __x, const allocator_type& __a)
 147:/usr/include/c++/6/bits/stl_vector.h ****       : _M_impl(__a)
 148:/usr/include/c++/6/bits/stl_vector.h ****       {
 149:/usr/include/c++/6/bits/stl_vector.h **** 	if (__x.get_allocator() == __a)
GAS LISTING /tmp/ccsIN87E.s 			page 293


 150:/usr/include/c++/6/bits/stl_vector.h **** 	  this->_M_impl._M_swap_data(__x._M_impl);
 151:/usr/include/c++/6/bits/stl_vector.h **** 	else
 152:/usr/include/c++/6/bits/stl_vector.h **** 	  {
 153:/usr/include/c++/6/bits/stl_vector.h **** 	    size_t __n = __x._M_impl._M_finish - __x._M_impl._M_start;
 154:/usr/include/c++/6/bits/stl_vector.h **** 	    _M_create_storage(__n);
 155:/usr/include/c++/6/bits/stl_vector.h **** 	  }
 156:/usr/include/c++/6/bits/stl_vector.h ****       }
 157:/usr/include/c++/6/bits/stl_vector.h **** #endif
 158:/usr/include/c++/6/bits/stl_vector.h **** 
 159:/usr/include/c++/6/bits/stl_vector.h ****       ~_Vector_base() _GLIBCXX_NOEXCEPT
 160:/usr/include/c++/6/bits/stl_vector.h ****       { _M_deallocate(this->_M_impl._M_start, this->_M_impl._M_end_of_storage
 161:/usr/include/c++/6/bits/stl_vector.h **** 		      - this->_M_impl._M_start); }
 162:/usr/include/c++/6/bits/stl_vector.h **** 
 163:/usr/include/c++/6/bits/stl_vector.h ****     public:
 164:/usr/include/c++/6/bits/stl_vector.h ****       _Vector_impl _M_impl;
 165:/usr/include/c++/6/bits/stl_vector.h **** 
 166:/usr/include/c++/6/bits/stl_vector.h ****       pointer
 167:/usr/include/c++/6/bits/stl_vector.h ****       _M_allocate(size_t __n)
 168:/usr/include/c++/6/bits/stl_vector.h ****       {
 169:/usr/include/c++/6/bits/stl_vector.h **** 	typedef __gnu_cxx::__alloc_traits<_Tp_alloc_type> _Tr;
 170:/usr/include/c++/6/bits/stl_vector.h **** 	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
 171:/usr/include/c++/6/bits/stl_vector.h ****       }
 172:/usr/include/c++/6/bits/stl_vector.h **** 
 173:/usr/include/c++/6/bits/stl_vector.h ****       void
 174:/usr/include/c++/6/bits/stl_vector.h ****       _M_deallocate(pointer __p, size_t __n)
 175:/usr/include/c++/6/bits/stl_vector.h ****       {
 176:/usr/include/c++/6/bits/stl_vector.h **** 	typedef __gnu_cxx::__alloc_traits<_Tp_alloc_type> _Tr;
 177:/usr/include/c++/6/bits/stl_vector.h **** 	if (__p)
 178:/usr/include/c++/6/bits/stl_vector.h **** 	  _Tr::deallocate(_M_impl, __p, __n);
 179:/usr/include/c++/6/bits/stl_vector.h ****       }
 180:/usr/include/c++/6/bits/stl_vector.h **** 
 181:/usr/include/c++/6/bits/stl_vector.h ****     private:
 182:/usr/include/c++/6/bits/stl_vector.h ****       void
 183:/usr/include/c++/6/bits/stl_vector.h ****       _M_create_storage(size_t __n)
 184:/usr/include/c++/6/bits/stl_vector.h ****       {
 185:/usr/include/c++/6/bits/stl_vector.h **** 	this->_M_impl._M_start = this->_M_allocate(__n);
 186:/usr/include/c++/6/bits/stl_vector.h **** 	this->_M_impl._M_finish = this->_M_impl._M_start;
 187:/usr/include/c++/6/bits/stl_vector.h **** 	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
 188:/usr/include/c++/6/bits/stl_vector.h ****       }
 189:/usr/include/c++/6/bits/stl_vector.h ****     };
 190:/usr/include/c++/6/bits/stl_vector.h **** 
 191:/usr/include/c++/6/bits/stl_vector.h **** 
 192:/usr/include/c++/6/bits/stl_vector.h ****   /**
 193:/usr/include/c++/6/bits/stl_vector.h ****    *  @brief A standard container which offers fixed time access to
 194:/usr/include/c++/6/bits/stl_vector.h ****    *  individual elements in any order.
 195:/usr/include/c++/6/bits/stl_vector.h ****    *
 196:/usr/include/c++/6/bits/stl_vector.h ****    *  @ingroup sequences
 197:/usr/include/c++/6/bits/stl_vector.h ****    *
 198:/usr/include/c++/6/bits/stl_vector.h ****    *  @tparam _Tp  Type of element.
 199:/usr/include/c++/6/bits/stl_vector.h ****    *  @tparam _Alloc  Allocator type, defaults to allocator<_Tp>.
 200:/usr/include/c++/6/bits/stl_vector.h ****    *
 201:/usr/include/c++/6/bits/stl_vector.h ****    *  Meets the requirements of a <a href="tables.html#65">container</a>, a
 202:/usr/include/c++/6/bits/stl_vector.h ****    *  <a href="tables.html#66">reversible container</a>, and a
 203:/usr/include/c++/6/bits/stl_vector.h ****    *  <a href="tables.html#67">sequence</a>, including the
 204:/usr/include/c++/6/bits/stl_vector.h ****    *  <a href="tables.html#68">optional sequence requirements</a> with the
 205:/usr/include/c++/6/bits/stl_vector.h ****    *  %exception of @c push_front and @c pop_front.
 206:/usr/include/c++/6/bits/stl_vector.h ****    *
GAS LISTING /tmp/ccsIN87E.s 			page 294


 207:/usr/include/c++/6/bits/stl_vector.h ****    *  In some terminology a %vector can be described as a dynamic
 208:/usr/include/c++/6/bits/stl_vector.h ****    *  C-style array, it offers fast and efficient access to individual
 209:/usr/include/c++/6/bits/stl_vector.h ****    *  elements in any order and saves the user from worrying about
 210:/usr/include/c++/6/bits/stl_vector.h ****    *  memory and size allocation.  Subscripting ( @c [] ) access is
 211:/usr/include/c++/6/bits/stl_vector.h ****    *  also provided as with C-style arrays.
 212:/usr/include/c++/6/bits/stl_vector.h ****   */
 213:/usr/include/c++/6/bits/stl_vector.h ****   template<typename _Tp, typename _Alloc = std::allocator<_Tp> >
 214:/usr/include/c++/6/bits/stl_vector.h ****     class vector : protected _Vector_base<_Tp, _Alloc>
 215:/usr/include/c++/6/bits/stl_vector.h ****     {
 216:/usr/include/c++/6/bits/stl_vector.h ****       // Concept requirements.
 217:/usr/include/c++/6/bits/stl_vector.h ****       typedef typename _Alloc::value_type                _Alloc_value_type;
 218:/usr/include/c++/6/bits/stl_vector.h **** #if __cplusplus < 201103L
 219:/usr/include/c++/6/bits/stl_vector.h ****       __glibcxx_class_requires(_Tp, _SGIAssignableConcept)
 220:/usr/include/c++/6/bits/stl_vector.h **** #endif
 221:/usr/include/c++/6/bits/stl_vector.h ****       __glibcxx_class_requires2(_Tp, _Alloc_value_type, _SameTypeConcept)
 222:/usr/include/c++/6/bits/stl_vector.h ****       
 223:/usr/include/c++/6/bits/stl_vector.h ****       typedef _Vector_base<_Tp, _Alloc>			 _Base;
 224:/usr/include/c++/6/bits/stl_vector.h ****       typedef typename _Base::_Tp_alloc_type		 _Tp_alloc_type;
 225:/usr/include/c++/6/bits/stl_vector.h ****       typedef __gnu_cxx::__alloc_traits<_Tp_alloc_type>  _Alloc_traits;
 226:/usr/include/c++/6/bits/stl_vector.h **** 
 227:/usr/include/c++/6/bits/stl_vector.h ****     public:
 228:/usr/include/c++/6/bits/stl_vector.h ****       typedef _Tp					 value_type;
 229:/usr/include/c++/6/bits/stl_vector.h ****       typedef typename _Base::pointer                    pointer;
 230:/usr/include/c++/6/bits/stl_vector.h ****       typedef typename _Alloc_traits::const_pointer      const_pointer;
 231:/usr/include/c++/6/bits/stl_vector.h ****       typedef typename _Alloc_traits::reference          reference;
 232:/usr/include/c++/6/bits/stl_vector.h ****       typedef typename _Alloc_traits::const_reference    const_reference;
 233:/usr/include/c++/6/bits/stl_vector.h ****       typedef __gnu_cxx::__normal_iterator<pointer, vector> iterator;
 234:/usr/include/c++/6/bits/stl_vector.h ****       typedef __gnu_cxx::__normal_iterator<const_pointer, vector>
 235:/usr/include/c++/6/bits/stl_vector.h ****       const_iterator;
 236:/usr/include/c++/6/bits/stl_vector.h ****       typedef std::reverse_iterator<const_iterator>  const_reverse_iterator;
 237:/usr/include/c++/6/bits/stl_vector.h ****       typedef std::reverse_iterator<iterator>		 reverse_iterator;
 238:/usr/include/c++/6/bits/stl_vector.h ****       typedef size_t					 size_type;
 239:/usr/include/c++/6/bits/stl_vector.h ****       typedef ptrdiff_t					 difference_type;
 240:/usr/include/c++/6/bits/stl_vector.h ****       typedef _Alloc                        		 allocator_type;
 241:/usr/include/c++/6/bits/stl_vector.h **** 
 242:/usr/include/c++/6/bits/stl_vector.h ****     protected:
 243:/usr/include/c++/6/bits/stl_vector.h ****       using _Base::_M_allocate;
 244:/usr/include/c++/6/bits/stl_vector.h ****       using _Base::_M_deallocate;
 245:/usr/include/c++/6/bits/stl_vector.h ****       using _Base::_M_impl;
 246:/usr/include/c++/6/bits/stl_vector.h ****       using _Base::_M_get_Tp_allocator;
 247:/usr/include/c++/6/bits/stl_vector.h **** 
 248:/usr/include/c++/6/bits/stl_vector.h ****     public:
 249:/usr/include/c++/6/bits/stl_vector.h ****       // [23.2.4.1] construct/copy/destroy
 250:/usr/include/c++/6/bits/stl_vector.h ****       // (assign() and get_allocator() are also listed in this section)
 251:/usr/include/c++/6/bits/stl_vector.h **** 
 252:/usr/include/c++/6/bits/stl_vector.h ****       /**
 253:/usr/include/c++/6/bits/stl_vector.h ****        *  @brief  Creates a %vector with no elements.
 254:/usr/include/c++/6/bits/stl_vector.h ****        */
 255:/usr/include/c++/6/bits/stl_vector.h ****       vector()
 256:/usr/include/c++/6/bits/stl_vector.h **** #if __cplusplus >= 201103L
 257:/usr/include/c++/6/bits/stl_vector.h ****       noexcept(is_nothrow_default_constructible<_Alloc>::value)
 258:/usr/include/c++/6/bits/stl_vector.h **** #endif
 259:/usr/include/c++/6/bits/stl_vector.h ****       : _Base() { }
 260:/usr/include/c++/6/bits/stl_vector.h **** 
 261:/usr/include/c++/6/bits/stl_vector.h ****       /**
 262:/usr/include/c++/6/bits/stl_vector.h ****        *  @brief  Creates a %vector with no elements.
 263:/usr/include/c++/6/bits/stl_vector.h ****        *  @param  __a  An allocator object.
GAS LISTING /tmp/ccsIN87E.s 			page 295


 264:/usr/include/c++/6/bits/stl_vector.h ****        */
 265:/usr/include/c++/6/bits/stl_vector.h ****       explicit
 266:/usr/include/c++/6/bits/stl_vector.h ****       vector(const allocator_type& __a) _GLIBCXX_NOEXCEPT
 267:/usr/include/c++/6/bits/stl_vector.h ****       : _Base(__a) { }
 268:/usr/include/c++/6/bits/stl_vector.h **** 
 269:/usr/include/c++/6/bits/stl_vector.h **** #if __cplusplus >= 201103L
 270:/usr/include/c++/6/bits/stl_vector.h ****       /**
 271:/usr/include/c++/6/bits/stl_vector.h ****        *  @brief  Creates a %vector with default constructed elements.
 272:/usr/include/c++/6/bits/stl_vector.h ****        *  @param  __n  The number of elements to initially create.
 273:/usr/include/c++/6/bits/stl_vector.h ****        *  @param  __a  An allocator.
 274:/usr/include/c++/6/bits/stl_vector.h ****        *
 275:/usr/include/c++/6/bits/stl_vector.h ****        *  This constructor fills the %vector with @a __n default
 276:/usr/include/c++/6/bits/stl_vector.h ****        *  constructed elements.
 277:/usr/include/c++/6/bits/stl_vector.h ****        */
 278:/usr/include/c++/6/bits/stl_vector.h ****       explicit
 279:/usr/include/c++/6/bits/stl_vector.h ****       vector(size_type __n, const allocator_type& __a = allocator_type())
 280:/usr/include/c++/6/bits/stl_vector.h ****       : _Base(__n, __a)
 281:/usr/include/c++/6/bits/stl_vector.h ****       { _M_default_initialize(__n); }
 282:/usr/include/c++/6/bits/stl_vector.h **** 
 283:/usr/include/c++/6/bits/stl_vector.h ****       /**
 284:/usr/include/c++/6/bits/stl_vector.h ****        *  @brief  Creates a %vector with copies of an exemplar element.
 285:/usr/include/c++/6/bits/stl_vector.h ****        *  @param  __n  The number of elements to initially create.
 286:/usr/include/c++/6/bits/stl_vector.h ****        *  @param  __value  An element to copy.
 287:/usr/include/c++/6/bits/stl_vector.h ****        *  @param  __a  An allocator.
 288:/usr/include/c++/6/bits/stl_vector.h ****        *
 289:/usr/include/c++/6/bits/stl_vector.h ****        *  This constructor fills the %vector with @a __n copies of @a __value.
 290:/usr/include/c++/6/bits/stl_vector.h ****        */
 291:/usr/include/c++/6/bits/stl_vector.h ****       vector(size_type __n, const value_type& __value,
 292:/usr/include/c++/6/bits/stl_vector.h **** 	     const allocator_type& __a = allocator_type())
 293:/usr/include/c++/6/bits/stl_vector.h ****       : _Base(__n, __a)
 294:/usr/include/c++/6/bits/stl_vector.h ****       { _M_fill_initialize(__n, __value); }
 295:/usr/include/c++/6/bits/stl_vector.h **** #else
 296:/usr/include/c++/6/bits/stl_vector.h ****       /**
 297:/usr/include/c++/6/bits/stl_vector.h ****        *  @brief  Creates a %vector with copies of an exemplar element.
 298:/usr/include/c++/6/bits/stl_vector.h ****        *  @param  __n  The number of elements to initially create.
 299:/usr/include/c++/6/bits/stl_vector.h ****        *  @param  __value  An element to copy.
 300:/usr/include/c++/6/bits/stl_vector.h ****        *  @param  __a  An allocator.
 301:/usr/include/c++/6/bits/stl_vector.h ****        *
 302:/usr/include/c++/6/bits/stl_vector.h ****        *  This constructor fills the %vector with @a __n copies of @a __value.
 303:/usr/include/c++/6/bits/stl_vector.h ****        */
 304:/usr/include/c++/6/bits/stl_vector.h ****       explicit
 305:/usr/include/c++/6/bits/stl_vector.h ****       vector(size_type __n, const value_type& __value = value_type(),
 306:/usr/include/c++/6/bits/stl_vector.h **** 	     const allocator_type& __a = allocator_type())
 307:/usr/include/c++/6/bits/stl_vector.h ****       : _Base(__n, __a)
 308:/usr/include/c++/6/bits/stl_vector.h ****       { _M_fill_initialize(__n, __value); }
 309:/usr/include/c++/6/bits/stl_vector.h **** #endif
 310:/usr/include/c++/6/bits/stl_vector.h **** 
 311:/usr/include/c++/6/bits/stl_vector.h ****       /**
 312:/usr/include/c++/6/bits/stl_vector.h ****        *  @brief  %Vector copy constructor.
 313:/usr/include/c++/6/bits/stl_vector.h ****        *  @param  __x  A %vector of identical element and allocator types.
 314:/usr/include/c++/6/bits/stl_vector.h ****        *
 315:/usr/include/c++/6/bits/stl_vector.h ****        *  The newly-created %vector uses a copy of the allocation
 316:/usr/include/c++/6/bits/stl_vector.h ****        *  object used by @a __x.  All the elements of @a __x are copied,
 317:/usr/include/c++/6/bits/stl_vector.h ****        *  but any extra memory in
 318:/usr/include/c++/6/bits/stl_vector.h ****        *  @a __x (for fast expansion) will not be copied.
 319:/usr/include/c++/6/bits/stl_vector.h ****        */
 320:/usr/include/c++/6/bits/stl_vector.h ****       vector(const vector& __x)
GAS LISTING /tmp/ccsIN87E.s 			page 296


 321:/usr/include/c++/6/bits/stl_vector.h ****       : _Base(__x.size(),
 322:/usr/include/c++/6/bits/stl_vector.h ****         _Alloc_traits::_S_select_on_copy(__x._M_get_Tp_allocator()))
 323:/usr/include/c++/6/bits/stl_vector.h ****       { this->_M_impl._M_finish =
 324:/usr/include/c++/6/bits/stl_vector.h **** 	  std::__uninitialized_copy_a(__x.begin(), __x.end(),
 325:/usr/include/c++/6/bits/stl_vector.h **** 				      this->_M_impl._M_start,
 326:/usr/include/c++/6/bits/stl_vector.h **** 				      _M_get_Tp_allocator());
 327:/usr/include/c++/6/bits/stl_vector.h ****       }
 328:/usr/include/c++/6/bits/stl_vector.h **** 
 329:/usr/include/c++/6/bits/stl_vector.h **** #if __cplusplus >= 201103L
 330:/usr/include/c++/6/bits/stl_vector.h ****       /**
 331:/usr/include/c++/6/bits/stl_vector.h ****        *  @brief  %Vector move constructor.
 332:/usr/include/c++/6/bits/stl_vector.h ****        *  @param  __x  A %vector of identical element and allocator types.
 333:/usr/include/c++/6/bits/stl_vector.h ****        *
 334:/usr/include/c++/6/bits/stl_vector.h ****        *  The newly-created %vector contains the exact contents of @a __x.
 335:/usr/include/c++/6/bits/stl_vector.h ****        *  The contents of @a __x are a valid, but unspecified %vector.
 336:/usr/include/c++/6/bits/stl_vector.h ****        */
 337:/usr/include/c++/6/bits/stl_vector.h ****       vector(vector&& __x) noexcept
 338:/usr/include/c++/6/bits/stl_vector.h ****       : _Base(std::move(__x)) { }
 339:/usr/include/c++/6/bits/stl_vector.h **** 
 340:/usr/include/c++/6/bits/stl_vector.h ****       /// Copy constructor with alternative allocator
 341:/usr/include/c++/6/bits/stl_vector.h ****       vector(const vector& __x, const allocator_type& __a)
 342:/usr/include/c++/6/bits/stl_vector.h ****       : _Base(__x.size(), __a)
 343:/usr/include/c++/6/bits/stl_vector.h ****       { this->_M_impl._M_finish =
 344:/usr/include/c++/6/bits/stl_vector.h **** 	  std::__uninitialized_copy_a(__x.begin(), __x.end(),
 345:/usr/include/c++/6/bits/stl_vector.h **** 				      this->_M_impl._M_start,
 346:/usr/include/c++/6/bits/stl_vector.h **** 				      _M_get_Tp_allocator());
 347:/usr/include/c++/6/bits/stl_vector.h ****       }
 348:/usr/include/c++/6/bits/stl_vector.h **** 
 349:/usr/include/c++/6/bits/stl_vector.h ****       /// Move constructor with alternative allocator
 350:/usr/include/c++/6/bits/stl_vector.h ****       vector(vector&& __rv, const allocator_type& __m)
 351:/usr/include/c++/6/bits/stl_vector.h ****       noexcept(_Alloc_traits::_S_always_equal())
 352:/usr/include/c++/6/bits/stl_vector.h ****       : _Base(std::move(__rv), __m)
 353:/usr/include/c++/6/bits/stl_vector.h ****       {
 354:/usr/include/c++/6/bits/stl_vector.h **** 	if (__rv.get_allocator() != __m)
 355:/usr/include/c++/6/bits/stl_vector.h **** 	  {
 356:/usr/include/c++/6/bits/stl_vector.h **** 	    this->_M_impl._M_finish =
 357:/usr/include/c++/6/bits/stl_vector.h **** 	      std::__uninitialized_move_a(__rv.begin(), __rv.end(),
 358:/usr/include/c++/6/bits/stl_vector.h **** 					  this->_M_impl._M_start,
 359:/usr/include/c++/6/bits/stl_vector.h **** 					  _M_get_Tp_allocator());
 360:/usr/include/c++/6/bits/stl_vector.h **** 	    __rv.clear();
 361:/usr/include/c++/6/bits/stl_vector.h **** 	  }
 362:/usr/include/c++/6/bits/stl_vector.h ****       }
 363:/usr/include/c++/6/bits/stl_vector.h **** 
 364:/usr/include/c++/6/bits/stl_vector.h ****       /**
 365:/usr/include/c++/6/bits/stl_vector.h ****        *  @brief  Builds a %vector from an initializer list.
 366:/usr/include/c++/6/bits/stl_vector.h ****        *  @param  __l  An initializer_list.
 367:/usr/include/c++/6/bits/stl_vector.h ****        *  @param  __a  An allocator.
 368:/usr/include/c++/6/bits/stl_vector.h ****        *
 369:/usr/include/c++/6/bits/stl_vector.h ****        *  Create a %vector consisting of copies of the elements in the
 370:/usr/include/c++/6/bits/stl_vector.h ****        *  initializer_list @a __l.
 371:/usr/include/c++/6/bits/stl_vector.h ****        *
 372:/usr/include/c++/6/bits/stl_vector.h ****        *  This will call the element type's copy constructor N times
 373:/usr/include/c++/6/bits/stl_vector.h ****        *  (where N is @a __l.size()) and do no memory reallocation.
 374:/usr/include/c++/6/bits/stl_vector.h ****        */
 375:/usr/include/c++/6/bits/stl_vector.h ****       vector(initializer_list<value_type> __l,
 376:/usr/include/c++/6/bits/stl_vector.h **** 	     const allocator_type& __a = allocator_type())
 377:/usr/include/c++/6/bits/stl_vector.h ****       : _Base(__a)
GAS LISTING /tmp/ccsIN87E.s 			page 297


 378:/usr/include/c++/6/bits/stl_vector.h ****       {
 379:/usr/include/c++/6/bits/stl_vector.h **** 	_M_range_initialize(__l.begin(), __l.end(),
 380:/usr/include/c++/6/bits/stl_vector.h **** 			    random_access_iterator_tag());
 381:/usr/include/c++/6/bits/stl_vector.h ****       }
 382:/usr/include/c++/6/bits/stl_vector.h **** #endif
 383:/usr/include/c++/6/bits/stl_vector.h **** 
 384:/usr/include/c++/6/bits/stl_vector.h ****       /**
 385:/usr/include/c++/6/bits/stl_vector.h ****        *  @brief  Builds a %vector from a range.
 386:/usr/include/c++/6/bits/stl_vector.h ****        *  @param  __first  An input iterator.
 387:/usr/include/c++/6/bits/stl_vector.h ****        *  @param  __last  An input iterator.
 388:/usr/include/c++/6/bits/stl_vector.h ****        *  @param  __a  An allocator.
 389:/usr/include/c++/6/bits/stl_vector.h ****        *
 390:/usr/include/c++/6/bits/stl_vector.h ****        *  Create a %vector consisting of copies of the elements from
 391:/usr/include/c++/6/bits/stl_vector.h ****        *  [first,last).
 392:/usr/include/c++/6/bits/stl_vector.h ****        *
 393:/usr/include/c++/6/bits/stl_vector.h ****        *  If the iterators are forward, bidirectional, or
 394:/usr/include/c++/6/bits/stl_vector.h ****        *  random-access, then this will call the elements' copy
 395:/usr/include/c++/6/bits/stl_vector.h ****        *  constructor N times (where N is distance(first,last)) and do
 396:/usr/include/c++/6/bits/stl_vector.h ****        *  no memory reallocation.  But if only input iterators are
 397:/usr/include/c++/6/bits/stl_vector.h ****        *  used, then this will do at most 2N calls to the copy
 398:/usr/include/c++/6/bits/stl_vector.h ****        *  constructor, and logN memory reallocations.
 399:/usr/include/c++/6/bits/stl_vector.h ****        */
 400:/usr/include/c++/6/bits/stl_vector.h **** #if __cplusplus >= 201103L
 401:/usr/include/c++/6/bits/stl_vector.h ****       template<typename _InputIterator,
 402:/usr/include/c++/6/bits/stl_vector.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
 403:/usr/include/c++/6/bits/stl_vector.h ****         vector(_InputIterator __first, _InputIterator __last,
 404:/usr/include/c++/6/bits/stl_vector.h **** 	       const allocator_type& __a = allocator_type())
 405:/usr/include/c++/6/bits/stl_vector.h **** 	: _Base(__a)
 406:/usr/include/c++/6/bits/stl_vector.h ****         { _M_initialize_dispatch(__first, __last, __false_type()); }
 407:/usr/include/c++/6/bits/stl_vector.h **** #else
 408:/usr/include/c++/6/bits/stl_vector.h ****       template<typename _InputIterator>
 409:/usr/include/c++/6/bits/stl_vector.h ****         vector(_InputIterator __first, _InputIterator __last,
 410:/usr/include/c++/6/bits/stl_vector.h **** 	       const allocator_type& __a = allocator_type())
 411:/usr/include/c++/6/bits/stl_vector.h **** 	: _Base(__a)
 412:/usr/include/c++/6/bits/stl_vector.h ****         {
 413:/usr/include/c++/6/bits/stl_vector.h **** 	  // Check whether it's an integral type.  If so, it's not an iterator.
 414:/usr/include/c++/6/bits/stl_vector.h **** 	  typedef typename std::__is_integer<_InputIterator>::__type _Integral;
 415:/usr/include/c++/6/bits/stl_vector.h **** 	  _M_initialize_dispatch(__first, __last, _Integral());
 416:/usr/include/c++/6/bits/stl_vector.h **** 	}
 417:/usr/include/c++/6/bits/stl_vector.h **** #endif
 418:/usr/include/c++/6/bits/stl_vector.h **** 
 419:/usr/include/c++/6/bits/stl_vector.h ****       /**
 420:/usr/include/c++/6/bits/stl_vector.h ****        *  The dtor only erases the elements, and note that if the
 421:/usr/include/c++/6/bits/stl_vector.h ****        *  elements themselves are pointers, the pointed-to memory is
 422:/usr/include/c++/6/bits/stl_vector.h ****        *  not touched in any way.  Managing the pointer is the user's
 423:/usr/include/c++/6/bits/stl_vector.h ****        *  responsibility.
 424:/usr/include/c++/6/bits/stl_vector.h ****        */
 425:/usr/include/c++/6/bits/stl_vector.h ****       ~vector() _GLIBCXX_NOEXCEPT
 6314              		.loc 30 425 0
 6315              		.cfi_startproc
 6316              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 6317              		.cfi_lsda 0x1b,.LLSDA11741
 6318 0000 55       		pushq	%rbp
 6319              		.cfi_def_cfa_offset 16
 6320              		.cfi_offset 6, -16
 6321 0001 4889E5   		movq	%rsp, %rbp
 6322              		.cfi_def_cfa_register 6
GAS LISTING /tmp/ccsIN87E.s 			page 298


 6323 0004 4883EC10 		subq	$16, %rsp
 6324 0008 48897DF8 		movq	%rdi, -8(%rbp)
 6325              	.LBB61:
 426:/usr/include/c++/6/bits/stl_vector.h ****       { std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 427:/usr/include/c++/6/bits/stl_vector.h **** 		      _M_get_Tp_allocator()); }
 6326              		.loc 30 427 0
 6327 000c 488B45F8 		movq	-8(%rbp), %rax
 6328 0010 4889C7   		movq	%rax, %rdi
 6329 0013 E8000000 		call	_ZNSt12_Vector_baseIlSaIlEE19_M_get_Tp_allocatorEv
 6329      00
 6330 0018 4889C2   		movq	%rax, %rdx
 426:/usr/include/c++/6/bits/stl_vector.h ****       { std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 6331              		.loc 30 426 0
 6332 001b 488B45F8 		movq	-8(%rbp), %rax
 6333 001f 488B4808 		movq	8(%rax), %rcx
 6334 0023 488B45F8 		movq	-8(%rbp), %rax
 6335 0027 488B00   		movq	(%rax), %rax
 6336 002a 4889CE   		movq	%rcx, %rsi
 6337 002d 4889C7   		movq	%rax, %rdi
 6338 0030 E8000000 		call	_ZSt8_DestroyIPllEvT_S1_RSaIT0_E
 6338      00
 6339              		.loc 30 427 0
 6340 0035 488B45F8 		movq	-8(%rbp), %rax
 6341 0039 4889C7   		movq	%rax, %rdi
 6342 003c E8000000 		call	_ZNSt12_Vector_baseIlSaIlEED2Ev
 6342      00
 6343              	.LBE61:
 6344 0041 90       		nop
 6345 0042 C9       		leave
 6346              		.cfi_def_cfa 7, 8
 6347 0043 C3       		ret
 6348              		.cfi_endproc
 6349              	.LFE11741:
 6350              		.section	.gcc_except_table
 6351              	.LLSDA11741:
 6352 00a8 FF       		.byte	0xff
 6353 00a9 FF       		.byte	0xff
 6354 00aa 01       		.byte	0x1
 6355 00ab 00       		.uleb128 .LLSDACSE11741-.LLSDACSB11741
 6356              	.LLSDACSB11741:
 6357              	.LLSDACSE11741:
 6358              		.section	.text._ZNSt6vectorIlSaIlEED2Ev,"axG",@progbits,_ZNSt6vectorIlSaIlEED5Ev,comdat
 6360              		.weak	_ZNSt6vectorIlSaIlEED1Ev
 6361              		.set	_ZNSt6vectorIlSaIlEED1Ev,_ZNSt6vectorIlSaIlEED2Ev
 6362              		.section	.text._ZN5boost13intrusive_ptrIN3pmt8pmt_baseEEaSERKS3_,"axG",@progbits,_ZN5boost13intrus
 6363              		.align 2
 6364              		.weak	_ZN5boost13intrusive_ptrIN3pmt8pmt_baseEEaSERKS3_
 6366              	_ZN5boost13intrusive_ptrIN3pmt8pmt_baseEEaSERKS3_:
 6367              	.LFB11743:
 151:/usr/include/boost/smart_ptr/intrusive_ptr.hpp ****     {
 6368              		.loc 25 151 0
 6369              		.cfi_startproc
 6370 0000 55       		pushq	%rbp
 6371              		.cfi_def_cfa_offset 16
 6372              		.cfi_offset 6, -16
 6373 0001 4889E5   		movq	%rsp, %rbp
 6374              		.cfi_def_cfa_register 6
GAS LISTING /tmp/ccsIN87E.s 			page 299


 6375 0004 4883EC20 		subq	$32, %rsp
 6376 0008 48897DE8 		movq	%rdi, -24(%rbp)
 6377 000c 488975E0 		movq	%rsi, -32(%rbp)
 153:/usr/include/boost/smart_ptr/intrusive_ptr.hpp ****         return *this;
 6378              		.loc 25 153 0
 6379 0010 488B55E0 		movq	-32(%rbp), %rdx
 6380 0014 488D45F8 		leaq	-8(%rbp), %rax
 6381 0018 4889D6   		movq	%rdx, %rsi
 6382 001b 4889C7   		movq	%rax, %rdi
 6383 001e E8000000 		call	_ZN5boost13intrusive_ptrIN3pmt8pmt_baseEEC1ERKS3_
 6383      00
 6384 0023 488B55E8 		movq	-24(%rbp), %rdx
 6385 0027 488D45F8 		leaq	-8(%rbp), %rax
 6386 002b 4889D6   		movq	%rdx, %rsi
 6387 002e 4889C7   		movq	%rax, %rdi
 6388 0031 E8000000 		call	_ZN5boost13intrusive_ptrIN3pmt8pmt_baseEE4swapERS3_
 6388      00
 6389 0036 488D45F8 		leaq	-8(%rbp), %rax
 6390 003a 4889C7   		movq	%rax, %rdi
 6391 003d E8000000 		call	_ZN5boost13intrusive_ptrIN3pmt8pmt_baseEED1Ev
 6391      00
 154:/usr/include/boost/smart_ptr/intrusive_ptr.hpp ****     }
 6392              		.loc 25 154 0
 6393 0042 488B45E8 		movq	-24(%rbp), %rax
 155:/usr/include/boost/smart_ptr/intrusive_ptr.hpp **** 
 6394              		.loc 25 155 0
 6395 0046 C9       		leave
 6396              		.cfi_def_cfa 7, 8
 6397 0047 C3       		ret
 6398              		.cfi_endproc
 6399              	.LFE11743:
 6401              		.section	.text._ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEE5adoptEPS2_,"
 6402              		.align 2
 6403              		.weak	_ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEE5adoptEPS2_
 6405              	_ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEE5adoptEPS2_:
 6406              	.LFB11973:
  51:/usr/include/boost/exception/exception.hpp ****                 {
 6407              		.loc 3 51 0
 6408              		.cfi_startproc
 6409 0000 55       		pushq	%rbp
 6410              		.cfi_def_cfa_offset 16
 6411              		.cfi_offset 6, -16
 6412 0001 4889E5   		movq	%rsp, %rbp
 6413              		.cfi_def_cfa_register 6
 6414 0004 4883EC10 		subq	$16, %rsp
 6415 0008 48897DF8 		movq	%rdi, -8(%rbp)
 6416 000c 488975F0 		movq	%rsi, -16(%rbp)
  53:/usr/include/boost/exception/exception.hpp ****                 px_=px;
 6417              		.loc 3 53 0
 6418 0010 488B45F8 		movq	-8(%rbp), %rax
 6419 0014 4889C7   		movq	%rax, %rdi
 6420 0017 E8000000 		call	_ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEE7releaseEv
 6420      00
  54:/usr/include/boost/exception/exception.hpp ****                 add_ref();
 6421              		.loc 3 54 0
 6422 001c 488B45F8 		movq	-8(%rbp), %rax
 6423 0020 488B55F0 		movq	-16(%rbp), %rdx
GAS LISTING /tmp/ccsIN87E.s 			page 300


 6424 0024 488910   		movq	%rdx, (%rax)
  55:/usr/include/boost/exception/exception.hpp ****                 }
 6425              		.loc 3 55 0
 6426 0027 488B45F8 		movq	-8(%rbp), %rax
 6427 002b 4889C7   		movq	%rax, %rdi
 6428 002e E8000000 		call	_ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEE7add_refEv
 6428      00
  56:/usr/include/boost/exception/exception.hpp **** 
 6429              		.loc 3 56 0
 6430 0033 90       		nop
 6431 0034 C9       		leave
 6432              		.cfi_def_cfa 7, 8
 6433 0035 C3       		ret
 6434              		.cfi_endproc
 6435              	.LFE11973:
 6437              		.section	.text._ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEEC2ERKS3_,"axG
 6438              		.align 2
 6439              		.weak	_ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEEC2ERKS3_
 6441              	_ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEEC2ERKS3_:
 6442              	.LFB11976:
  37:/usr/include/boost/exception/exception.hpp ****                 px_(x.px_)
 6443              		.loc 3 37 0
 6444              		.cfi_startproc
 6445 0000 55       		pushq	%rbp
 6446              		.cfi_def_cfa_offset 16
 6447              		.cfi_offset 6, -16
 6448 0001 4889E5   		movq	%rsp, %rbp
 6449              		.cfi_def_cfa_register 6
 6450 0004 4883EC10 		subq	$16, %rsp
 6451 0008 48897DF8 		movq	%rdi, -8(%rbp)
 6452 000c 488975F0 		movq	%rsi, -16(%rbp)
 6453              	.LBB62:
  38:/usr/include/boost/exception/exception.hpp ****                 {
 6454              		.loc 3 38 0
 6455 0010 488B45F0 		movq	-16(%rbp), %rax
 6456 0014 488B10   		movq	(%rax), %rdx
 6457 0017 488B45F8 		movq	-8(%rbp), %rax
 6458 001b 488910   		movq	%rdx, (%rax)
  40:/usr/include/boost/exception/exception.hpp ****                 }
 6459              		.loc 3 40 0
 6460 001e 488B45F8 		movq	-8(%rbp), %rax
 6461 0022 4889C7   		movq	%rax, %rdi
 6462 0025 E8000000 		call	_ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEE7add_refEv
 6462      00
 6463              	.LBE62:
  41:/usr/include/boost/exception/exception.hpp **** 
 6464              		.loc 3 41 0
 6465 002a 90       		nop
 6466 002b C9       		leave
 6467              		.cfi_def_cfa 7, 8
 6468 002c C3       		ret
 6469              		.cfi_endproc
 6470              	.LFE11976:
 6472              		.weak	_ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEEC1ERKS3_
 6473              		.set	_ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEEC1ERKS3_,_ZN5boost16exc
 6474              		.section	.text._ZN5boost10shared_ptrIKNS_16exception_detail10clone_baseEEC2ERKS4_,"axG",@progbits,
 6475              		.align 2
GAS LISTING /tmp/ccsIN87E.s 			page 301


 6476              		.weak	_ZN5boost10shared_ptrIKNS_16exception_detail10clone_baseEEC2ERKS4_
 6478              	_ZN5boost10shared_ptrIKNS_16exception_detail10clone_baseEEC2ERKS4_:
 6479              	.LFB11988:
 337:/usr/include/boost/smart_ptr/shared_ptr.hpp **** {
 338:/usr/include/boost/smart_ptr/shared_ptr.hpp **** private:
 339:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 340:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     // Borland 5.5.1 specific workaround
 341:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     typedef shared_ptr<T> this_type;
 342:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 343:/usr/include/boost/smart_ptr/shared_ptr.hpp **** public:
 344:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 345:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     typedef typename boost::detail::sp_element< T >::type element_type;
 346:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 347:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     shared_ptr() BOOST_NOEXCEPT : px( 0 ), pn() // never throws in 1.30+
 348:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     {
 349:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     }
 350:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 351:/usr/include/boost/smart_ptr/shared_ptr.hpp **** #if !defined( BOOST_NO_CXX11_NULLPTR )
 352:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 353:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     shared_ptr( boost::detail::sp_nullptr_t ) BOOST_NOEXCEPT : px( 0 ), pn() // never throws
 354:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     {
 355:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     }
 356:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 357:/usr/include/boost/smart_ptr/shared_ptr.hpp **** #endif
 358:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 359:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     template<class Y>
 360:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     explicit shared_ptr( Y * p ): px( p ), pn() // Y must be complete
 361:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     {
 362:/usr/include/boost/smart_ptr/shared_ptr.hpp ****         boost::detail::sp_pointer_construct( this, p, pn );
 363:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     }
 364:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 365:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     //
 366:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     // Requirements: D's copy constructor must not throw
 367:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     //
 368:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     // shared_ptr will release p by calling d(p)
 369:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     //
 370:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 371:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     template<class Y, class D> shared_ptr( Y * p, D d ): px( p ), pn( p, d )
 372:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     {
 373:/usr/include/boost/smart_ptr/shared_ptr.hpp ****         boost::detail::sp_deleter_construct( this, p );
 374:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     }
 375:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 376:/usr/include/boost/smart_ptr/shared_ptr.hpp **** #if !defined( BOOST_NO_CXX11_NULLPTR )
 377:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 378:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     template<class D> shared_ptr( boost::detail::sp_nullptr_t p, D d ): px( p ), pn( p, d )
 379:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     {
 380:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     }
 381:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 382:/usr/include/boost/smart_ptr/shared_ptr.hpp **** #endif
 383:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 384:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     // As above, but with allocator. A's copy constructor shall not throw.
 385:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 386:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     template<class Y, class D, class A> shared_ptr( Y * p, D d, A a ): px( p ), pn( p, d, a )
 387:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     {
 388:/usr/include/boost/smart_ptr/shared_ptr.hpp ****         boost::detail::sp_deleter_construct( this, p );
 389:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     }
 390:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
GAS LISTING /tmp/ccsIN87E.s 			page 302


 391:/usr/include/boost/smart_ptr/shared_ptr.hpp **** #if !defined( BOOST_NO_CXX11_NULLPTR )
 392:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 393:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     template<class D, class A> shared_ptr( boost::detail::sp_nullptr_t p, D d, A a ): px( p ), pn( 
 394:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     {
 395:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     }
 396:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 397:/usr/include/boost/smart_ptr/shared_ptr.hpp **** #endif
 398:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 399:/usr/include/boost/smart_ptr/shared_ptr.hpp **** //  generated copy constructor, destructor are fine...
 400:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 401:/usr/include/boost/smart_ptr/shared_ptr.hpp **** #if !defined( BOOST_NO_CXX11_RVALUE_REFERENCES )
 402:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 403:/usr/include/boost/smart_ptr/shared_ptr.hpp **** // ... except in C++0x, move disables the implicit copy
 404:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 405:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     shared_ptr( shared_ptr const & r ) BOOST_NOEXCEPT : px( r.px ), pn( r.pn )
 6480              		.loc 7 405 0
 6481              		.cfi_startproc
 6482 0000 55       		pushq	%rbp
 6483              		.cfi_def_cfa_offset 16
 6484              		.cfi_offset 6, -16
 6485 0001 4889E5   		movq	%rsp, %rbp
 6486              		.cfi_def_cfa_register 6
 6487 0004 4883EC10 		subq	$16, %rsp
 6488 0008 48897DF8 		movq	%rdi, -8(%rbp)
 6489 000c 488975F0 		movq	%rsi, -16(%rbp)
 6490              	.LBB63:
 6491              		.loc 7 405 0
 6492 0010 488B45F0 		movq	-16(%rbp), %rax
 6493 0014 488B10   		movq	(%rax), %rdx
 6494 0017 488B45F8 		movq	-8(%rbp), %rax
 6495 001b 488910   		movq	%rdx, (%rax)
 6496 001e 488B45F0 		movq	-16(%rbp), %rax
 6497 0022 488D5008 		leaq	8(%rax), %rdx
 6498 0026 488B45F8 		movq	-8(%rbp), %rax
 6499 002a 4883C008 		addq	$8, %rax
 6500 002e 4889D6   		movq	%rdx, %rsi
 6501 0031 4889C7   		movq	%rax, %rdi
 6502 0034 E8000000 		call	_ZN5boost6detail12shared_countC1ERKS1_
 6502      00
 6503              	.LBE63:
 406:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     {
 407:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     }
 6504              		.loc 7 407 0
 6505 0039 90       		nop
 6506 003a C9       		leave
 6507              		.cfi_def_cfa 7, 8
 6508 003b C3       		ret
 6509              		.cfi_endproc
 6510              	.LFE11988:
 6512              		.weak	_ZN5boost10shared_ptrIKNS_16exception_detail10clone_baseEEC1ERKS4_
 6513              		.set	_ZN5boost10shared_ptrIKNS_16exception_detail10clone_baseEEC1ERKS4_,_ZN5boost10shared_ptrIKNS_
 6514              		.section	.text._ZN5boost16exception_detail10bad_alloc_C2Ev,"axG",@progbits,_ZN5boost16exception_de
 6515              		.align 2
 6516              		.weak	_ZN5boost16exception_detail10bad_alloc_C2Ev
 6518              	_ZN5boost16exception_detail10bad_alloc_C2Ev:
 6519              	.LFB12014:
 103:/usr/include/boost/exception/detail/exception_ptr.hpp ****             boost::exception,
GAS LISTING /tmp/ccsIN87E.s 			page 303


 6520              		.loc 16 103 0
 6521              		.cfi_startproc
 6522 0000 55       		pushq	%rbp
 6523              		.cfi_def_cfa_offset 16
 6524              		.cfi_offset 6, -16
 6525 0001 4889E5   		movq	%rsp, %rbp
 6526              		.cfi_def_cfa_register 6
 6527 0004 4883EC10 		subq	$16, %rsp
 6528 0008 48897DF8 		movq	%rdi, -8(%rbp)
 6529              	.LBB64:
 103:/usr/include/boost/exception/detail/exception_ptr.hpp ****             boost::exception,
 6530              		.loc 16 103 0
 6531 000c 488B45F8 		movq	-8(%rbp), %rax
 6532 0010 4889C7   		movq	%rax, %rdi
 6533 0013 E8000000 		call	_ZN5boost9exceptionC2Ev
 6533      00
 6534 0018 488B45F8 		movq	-8(%rbp), %rax
 6535 001c 4883C028 		addq	$40, %rax
 6536 0020 4889C7   		movq	%rax, %rdi
 6537 0023 E8000000 		call	_ZNSt9bad_allocC2Ev
 6537      00
 6538 0028 488D1500 		leaq	16+_ZTVN5boost16exception_detail10bad_alloc_E(%rip), %rdx
 6538      000000
 6539 002f 488B45F8 		movq	-8(%rbp), %rax
 6540 0033 488910   		movq	%rdx, (%rax)
 6541 0036 488D1500 		leaq	48+_ZTVN5boost16exception_detail10bad_alloc_E(%rip), %rdx
 6541      000000
 6542 003d 488B45F8 		movq	-8(%rbp), %rax
 6543 0041 48895028 		movq	%rdx, 40(%rax)
 6544              	.LBE64:
 6545 0045 90       		nop
 6546 0046 C9       		leave
 6547              		.cfi_def_cfa 7, 8
 6548 0047 C3       		ret
 6549              		.cfi_endproc
 6550              	.LFE12014:
 6552              		.weak	_ZN5boost16exception_detail10bad_alloc_C1Ev
 6553              		.set	_ZN5boost16exception_detail10bad_alloc_C1Ev,_ZN5boost16exception_detail10bad_alloc_C2Ev
 6554              		.section	.text._ZNSt9bad_allocC2ERKS_,"axG",@progbits,_ZNSt9bad_allocC5ERKS_,comdat
 6555              		.align 2
 6556              		.weak	_ZNSt9bad_allocC2ERKS_
 6558              	_ZNSt9bad_allocC2ERKS_:
 6559              	.LFB12019:
  54:/usr/include/c++/6/new ****   {
 6560              		.loc 2 54 0
 6561              		.cfi_startproc
 6562 0000 55       		pushq	%rbp
 6563              		.cfi_def_cfa_offset 16
 6564              		.cfi_offset 6, -16
 6565 0001 4889E5   		movq	%rsp, %rbp
 6566              		.cfi_def_cfa_register 6
 6567 0004 4883EC10 		subq	$16, %rsp
 6568 0008 48897DF8 		movq	%rdi, -8(%rbp)
 6569 000c 488975F0 		movq	%rsi, -16(%rbp)
 6570              	.LBB65:
  54:/usr/include/c++/6/new ****   {
 6571              		.loc 2 54 0
GAS LISTING /tmp/ccsIN87E.s 			page 304


 6572 0010 488B55F0 		movq	-16(%rbp), %rdx
 6573 0014 488B45F8 		movq	-8(%rbp), %rax
 6574 0018 4889D6   		movq	%rdx, %rsi
 6575 001b 4889C7   		movq	%rax, %rdi
 6576 001e E8000000 		call	_ZNSt9exceptionC2ERKS_
 6576      00
 6577 0023 488D1500 		leaq	16+_ZTVSt9bad_alloc(%rip), %rdx
 6577      000000
 6578 002a 488B45F8 		movq	-8(%rbp), %rax
 6579 002e 488910   		movq	%rdx, (%rax)
 6580              	.LBE65:
 6581 0031 90       		nop
 6582 0032 C9       		leave
 6583              		.cfi_def_cfa 7, 8
 6584 0033 C3       		ret
 6585              		.cfi_endproc
 6586              	.LFE12019:
 6588              		.weak	_ZNSt9bad_allocC1ERKS_
 6589              		.set	_ZNSt9bad_allocC1ERKS_,_ZNSt9bad_allocC2ERKS_
 6590              		.section	.text._ZN5boost16exception_detail10bad_alloc_C2ERKS1_,"axG",@progbits,_ZN5boost16exceptio
 6591              		.align 2
 6592              		.weak	_ZN5boost16exception_detail10bad_alloc_C2ERKS1_
 6594              	_ZN5boost16exception_detail10bad_alloc_C2ERKS1_:
 6595              	.LFB12021:
 103:/usr/include/boost/exception/detail/exception_ptr.hpp ****             boost::exception,
 6596              		.loc 16 103 0
 6597              		.cfi_startproc
 6598 0000 55       		pushq	%rbp
 6599              		.cfi_def_cfa_offset 16
 6600              		.cfi_offset 6, -16
 6601 0001 4889E5   		movq	%rsp, %rbp
 6602              		.cfi_def_cfa_register 6
 6603 0004 4883EC10 		subq	$16, %rsp
 6604 0008 48897DF8 		movq	%rdi, -8(%rbp)
 6605 000c 488975F0 		movq	%rsi, -16(%rbp)
 6606              	.LBB66:
 103:/usr/include/boost/exception/detail/exception_ptr.hpp ****             boost::exception,
 6607              		.loc 16 103 0
 6608 0010 488B55F0 		movq	-16(%rbp), %rdx
 6609 0014 488B45F8 		movq	-8(%rbp), %rax
 6610 0018 4889D6   		movq	%rdx, %rsi
 6611 001b 4889C7   		movq	%rax, %rdi
 6612 001e E8000000 		call	_ZN5boost9exceptionC2ERKS0_
 6612      00
 6613 0023 488B45F0 		movq	-16(%rbp), %rax
 6614 0027 488D5028 		leaq	40(%rax), %rdx
 6615 002b 488B45F8 		movq	-8(%rbp), %rax
 6616 002f 4883C028 		addq	$40, %rax
 6617 0033 4889D6   		movq	%rdx, %rsi
 6618 0036 4889C7   		movq	%rax, %rdi
 6619 0039 E8000000 		call	_ZNSt9bad_allocC2ERKS_
 6619      00
 6620 003e 488D1500 		leaq	16+_ZTVN5boost16exception_detail10bad_alloc_E(%rip), %rdx
 6620      000000
 6621 0045 488B45F8 		movq	-8(%rbp), %rax
 6622 0049 488910   		movq	%rdx, (%rax)
 6623 004c 488D1500 		leaq	48+_ZTVN5boost16exception_detail10bad_alloc_E(%rip), %rdx
GAS LISTING /tmp/ccsIN87E.s 			page 305


 6623      000000
 6624 0053 488B45F8 		movq	-8(%rbp), %rax
 6625 0057 48895028 		movq	%rdx, 40(%rax)
 6626              	.LBE66:
 6627 005b 90       		nop
 6628 005c C9       		leave
 6629              		.cfi_def_cfa 7, 8
 6630 005d C3       		ret
 6631              		.cfi_endproc
 6632              	.LFE12021:
 6634              		.weak	_ZN5boost16exception_detail10bad_alloc_C1ERKS1_
 6635              		.set	_ZN5boost16exception_detail10bad_alloc_C1ERKS1_,_ZN5boost16exception_detail10bad_alloc_C2ERKS
 6636              		.section	.text._ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EEC1ERKS3_,"axG",@progbits,
 6637              		.align 2
 6638              		.weak	_ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EEC1ERKS3_
 6640              	_ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EEC1ERKS3_:
 6641              	.LFB12024:
 445:/usr/include/boost/exception/exception.hpp **** 
 446:/usr/include/boost/exception/exception.hpp ****         inline
 447:/usr/include/boost/exception/exception.hpp ****         void
 448:/usr/include/boost/exception/exception.hpp ****         copy_boost_exception( void *, void const * )
 449:/usr/include/boost/exception/exception.hpp ****             {
 450:/usr/include/boost/exception/exception.hpp ****             }
 451:/usr/include/boost/exception/exception.hpp **** 
 452:/usr/include/boost/exception/exception.hpp **** #if defined(__GNUC__)
 453:/usr/include/boost/exception/exception.hpp **** # if (__GNUC__ == 4 && __GNUC_MINOR__ >= 1) || (__GNUC__ > 4)
 454:/usr/include/boost/exception/exception.hpp **** #  pragma GCC visibility push (default)
 455:/usr/include/boost/exception/exception.hpp **** # endif
 456:/usr/include/boost/exception/exception.hpp **** #endif
 457:/usr/include/boost/exception/exception.hpp ****         template <class T>
 458:/usr/include/boost/exception/exception.hpp ****         class
 459:/usr/include/boost/exception/exception.hpp ****         clone_impl:
 6642              		.loc 3 459 0
 6643              		.cfi_startproc
 6644              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 6645              		.cfi_lsda 0x1b,.LLSDA12024
 6646 0000 55       		pushq	%rbp
 6647              		.cfi_def_cfa_offset 16
 6648              		.cfi_offset 6, -16
 6649 0001 4889E5   		movq	%rsp, %rbp
 6650              		.cfi_def_cfa_register 6
 6651 0004 53       		pushq	%rbx
 6652 0005 4883EC18 		subq	$24, %rsp
 6653              		.cfi_offset 3, -24
 6654 0009 48897DE8 		movq	%rdi, -24(%rbp)
 6655 000d 488975E0 		movq	%rsi, -32(%rbp)
 6656              	.LBB67:
 6657              		.loc 3 459 0
 6658 0011 488B45E0 		movq	-32(%rbp), %rax
 6659 0015 488B00   		movq	(%rax), %rax
 6660 0018 4883E818 		subq	$24, %rax
 6661 001c 488B00   		movq	(%rax), %rax
 6662 001f 4889C2   		movq	%rax, %rdx
 6663 0022 488B45E0 		movq	-32(%rbp), %rax
 6664 0026 4801C2   		addq	%rax, %rdx
 6665 0029 488B45E8 		movq	-24(%rbp), %rax
 6666 002d 4883C030 		addq	$48, %rax
GAS LISTING /tmp/ccsIN87E.s 			page 306


 6667 0031 4889D6   		movq	%rdx, %rsi
 6668 0034 4889C7   		movq	%rax, %rdi
 6669 0037 E8000000 		call	_ZN5boost16exception_detail10clone_baseC2ERKS1_
 6669      00
 6670 003c 488B55E0 		movq	-32(%rbp), %rdx
 6671 0040 488B45E8 		movq	-24(%rbp), %rax
 6672 0044 4889D6   		movq	%rdx, %rsi
 6673 0047 4889C7   		movq	%rax, %rdi
 6674              	.LEHB40:
 6675 004a E8000000 		call	_ZN5boost16exception_detail10bad_alloc_C2ERKS1_
 6675      00
 6676              	.LEHE40:
 6677              		.loc 3 459 0 is_stmt 0 discriminator 8
 6678 004f 488D1500 		leaq	24+_ZTVN5boost16exception_detail10clone_implINS0_10bad_alloc_EEE(%rip), %rdx
 6678      000000
 6679 0056 488B45E8 		movq	-24(%rbp), %rax
 6680 005a 488910   		movq	%rdx, (%rax)
 6681 005d 488D1500 		leaq	72+_ZTVN5boost16exception_detail10clone_implINS0_10bad_alloc_EEE(%rip), %rdx
 6681      000000
 6682 0064 488B45E8 		movq	-24(%rbp), %rax
 6683 0068 48895028 		movq	%rdx, 40(%rax)
 6684 006c 488B45E8 		movq	-24(%rbp), %rax
 6685 0070 488D5030 		leaq	48(%rax), %rdx
 6686 0074 488D0500 		leaq	136+_ZTVN5boost16exception_detail10clone_implINS0_10bad_alloc_EEE(%rip), %rax
 6686      000000
 6687 007b 488902   		movq	%rax, (%rdx)
 6688              	.LBE67:
 6689 007e EB1E     		jmp	.L293
 6690              	.L292:
 6691 0080 4889C3   		movq	%rax, %rbx
 6692              	.LBB68:
 6693              		.loc 3 459 0
 6694 0083 488B45E8 		movq	-24(%rbp), %rax
 6695 0087 4883C030 		addq	$48, %rax
 6696 008b 4889C7   		movq	%rax, %rdi
 6697 008e E8000000 		call	_ZN5boost16exception_detail10clone_baseD2Ev
 6697      00
 6698 0093 4889D8   		movq	%rbx, %rax
 6699 0096 4889C7   		movq	%rax, %rdi
 6700              	.LEHB41:
 6701 0099 E8000000 		call	_Unwind_Resume@PLT
 6701      00
 6702              	.LEHE41:
 6703              	.L293:
 6704              	.LBE68:
 6705 009e 4883C418 		addq	$24, %rsp
 6706 00a2 5B       		popq	%rbx
 6707 00a3 5D       		popq	%rbp
 6708              		.cfi_def_cfa 7, 8
 6709 00a4 C3       		ret
 6710              		.cfi_endproc
 6711              	.LFE12024:
 6712              		.section	.gcc_except_table
 6713              	.LLSDA12024:
 6714 00ac FF       		.byte	0xff
 6715 00ad FF       		.byte	0xff
 6716 00ae 01       		.byte	0x1
GAS LISTING /tmp/ccsIN87E.s 			page 307


 6717 00af 0A       		.uleb128 .LLSDACSE12024-.LLSDACSB12024
 6718              	.LLSDACSB12024:
 6719 00b0 4A       		.uleb128 .LEHB40-.LFB12024
 6720 00b1 05       		.uleb128 .LEHE40-.LEHB40
 6721 00b2 8001     		.uleb128 .L292-.LFB12024
 6722 00b4 00       		.uleb128 0
 6723 00b5 9901     		.uleb128 .LEHB41-.LFB12024
 6724 00b7 05       		.uleb128 .LEHE41-.LEHB41
 6725 00b8 00       		.uleb128 0
 6726 00b9 00       		.uleb128 0
 6727              	.LLSDACSE12024:
 6728              		.section	.text._ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EEC1ERKS3_,"axG",@progbits,
 6730              		.weak	_ZZN5boost16exception_detail27get_static_exception_objectINS0_10bad_alloc_EEENS_13exception_
 6731              		.section	.bss._ZZN5boost16exception_detail27get_static_exception_objectINS0_10bad_alloc_EEENS_13ex
 6732              		.align 16
 6735              	_ZZN5boost16exception_detail27get_static_exception_objectINS0_10bad_alloc_EEENS_13exception_ptrEvE2
 6736 0000 00000000 		.zero	16
 6736      00000000 
 6736      00000000 
 6736      00000000 
 6737              		.weak	_ZGVZN5boost16exception_detail27get_static_exception_objectINS0_10bad_alloc_EEENS_13exceptio
 6738              		.section	.bss._ZGVZN5boost16exception_detail27get_static_exception_objectINS0_10bad_alloc_EEENS_13
 6739              		.align 8
 6742              	_ZGVZN5boost16exception_detail27get_static_exception_objectINS0_10bad_alloc_EEENS_13exception_ptrEv
 6743 0000 00000000 		.zero	8
 6743      00000000 
 6744              		.section	.rodata
 6745 0064 00000000 		.align 8
 6746              	.LC13:
 6747 0068 2F757372 		.string	"/usr/include/boost/exception/detail/exception_ptr.hpp"
 6747      2F696E63 
 6747      6C756465 
 6747      2F626F6F 
 6747      73742F65 
 6748              		.section	.text._ZN5boost16exception_detail27get_static_exception_objectINS0_10bad_alloc_EEENS_13ex
 6749              		.weak	_ZN5boost16exception_detail27get_static_exception_objectINS0_10bad_alloc_EEENS_13exception_p
 6751              	_ZN5boost16exception_detail27get_static_exception_objectINS0_10bad_alloc_EEENS_13exception_ptrEv:
 6752              	.LFB12012:
 116:/usr/include/boost/exception/detail/exception_ptr.hpp ****                 };
 117:/usr/include/boost/exception/detail/exception_ptr.hpp **** 
 118:/usr/include/boost/exception/detail/exception_ptr.hpp ****         template <class Exception>
 119:/usr/include/boost/exception/detail/exception_ptr.hpp ****         exception_ptr
 120:/usr/include/boost/exception/detail/exception_ptr.hpp ****         get_static_exception_object()
 6753              		.loc 16 120 0 is_stmt 1
 6754              		.cfi_startproc
 6755              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 6756              		.cfi_lsda 0x1b,.LLSDA12012
 6757 0000 55       		pushq	%rbp
 6758              		.cfi_def_cfa_offset 16
 6759              		.cfi_offset 6, -16
 6760 0001 4889E5   		movq	%rsp, %rbp
 6761              		.cfi_def_cfa_register 6
 6762 0004 4155     		pushq	%r13
 6763 0006 4154     		pushq	%r12
 6764 0008 53       		pushq	%rbx
 6765 0009 4881ECB8 		subq	$184, %rsp
 6765      000000
GAS LISTING /tmp/ccsIN87E.s 			page 308


 6766              		.cfi_offset 13, -24
 6767              		.cfi_offset 12, -32
 6768              		.cfi_offset 3, -40
 6769 0010 4889BD38 		movq	%rdi, -200(%rbp)
 6769      FFFFFF
 121:/usr/include/boost/exception/detail/exception_ptr.hpp ****             {
 122:/usr/include/boost/exception/detail/exception_ptr.hpp ****             Exception ba;
 6770              		.loc 16 122 0
 6771 0017 488D4580 		leaq	-128(%rbp), %rax
 6772 001b 4889C7   		movq	%rax, %rdi
 6773 001e E8000000 		call	_ZN5boost16exception_detail10bad_alloc_C1Ev
 6773      00
 123:/usr/include/boost/exception/detail/exception_ptr.hpp ****             exception_detail::clone_impl<Exception> c(ba);
 6774              		.loc 16 123 0
 6775 0023 488D5580 		leaq	-128(%rbp), %rdx
 6776 0027 488D8540 		leaq	-192(%rbp), %rax
 6776      FFFFFF
 6777 002e 4889D6   		movq	%rdx, %rsi
 6778 0031 4889C7   		movq	%rax, %rdi
 6779              	.LEHB42:
 6780 0034 E8000000 		call	_ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EEC1ERKS2_
 6780      00
 6781              	.LEHE42:
 124:/usr/include/boost/exception/detail/exception_ptr.hpp **** #ifndef BOOST_EXCEPTION_DISABLE
 125:/usr/include/boost/exception/detail/exception_ptr.hpp ****             c <<
 126:/usr/include/boost/exception/detail/exception_ptr.hpp ****                 throw_function(BOOST_CURRENT_FUNCTION) <<
 127:/usr/include/boost/exception/detail/exception_ptr.hpp ****                 throw_file(__FILE__) <<
 6782              		.loc 16 127 0
 6783 0039 488D45BC 		leaq	-68(%rbp), %rax
 6784 003d BE800000 		movl	$128, %esi
 6784      00
 6785 0042 4889C7   		movq	%rax, %rdi
 6786 0045 E8000000 		call	_ZN5boost10error_infoINS_11throw_line_EiEC1Ei
 6786      00
 126:/usr/include/boost/exception/detail/exception_ptr.hpp ****                 throw_file(__FILE__) <<
 6787              		.loc 16 126 0
 6788 004a 488D45C0 		leaq	-64(%rbp), %rax
 6789 004e 488D3500 		leaq	.LC13(%rip), %rsi
 6789      000000
 6790 0055 4889C7   		movq	%rax, %rdi
 6791 0058 E8000000 		call	_ZN5boost10error_infoINS_11throw_file_EPKcEC1ES3_
 6791      00
 125:/usr/include/boost/exception/detail/exception_ptr.hpp ****                 throw_function(BOOST_CURRENT_FUNCTION) <<
 6792              		.loc 16 125 0
 6793 005d 488D45C8 		leaq	-56(%rbp), %rax
 6794 0061 488D3500 		leaq	_ZZN5boost16exception_detail27get_static_exception_objectINS0_10bad_alloc_EEENS_13exception_p
 6794      000000
 6795 0068 4889C7   		movq	%rax, %rdi
 6796 006b E8000000 		call	_ZN5boost10error_infoINS_15throw_function_EPKcEC1ES3_
 6796      00
 6797 0070 488D55C8 		leaq	-56(%rbp), %rdx
 6798 0074 488D8540 		leaq	-192(%rbp), %rax
 6798      FFFFFF
 6799 007b 4889D6   		movq	%rdx, %rsi
 6800 007e 4889C7   		movq	%rax, %rdi
 6801              	.LEHB43:
 6802 0081 E8000000 		call	_ZN5boostlsINS_16exception_detail10clone_implINS1_10bad_alloc_EEENS_15throw_function_EPKcEENS
GAS LISTING /tmp/ccsIN87E.s 			page 309


 6802      00
 6803 0086 4889C2   		movq	%rax, %rdx
 126:/usr/include/boost/exception/detail/exception_ptr.hpp ****                 throw_file(__FILE__) <<
 6804              		.loc 16 126 0
 6805 0089 488D45C0 		leaq	-64(%rbp), %rax
 6806 008d 4889C6   		movq	%rax, %rsi
 6807 0090 4889D7   		movq	%rdx, %rdi
 6808 0093 E8000000 		call	_ZN5boostlsINS_16exception_detail10clone_implINS1_10bad_alloc_EEENS_11throw_file_EPKcEENS_9en
 6808      00
 126:/usr/include/boost/exception/detail/exception_ptr.hpp ****                 throw_file(__FILE__) <<
 6809              		.loc 16 126 0 is_stmt 0 discriminator 2
 6810 0098 4889C2   		movq	%rax, %rdx
 125:/usr/include/boost/exception/detail/exception_ptr.hpp ****                 throw_function(BOOST_CURRENT_FUNCTION) <<
 6811              		.loc 16 125 0 is_stmt 1 discriminator 2
 6812 009b 488D45BC 		leaq	-68(%rbp), %rax
 6813 009f 4889C6   		movq	%rax, %rsi
 6814 00a2 4889D7   		movq	%rdx, %rdi
 6815 00a5 E8000000 		call	_ZN5boostlsINS_16exception_detail10clone_implINS1_10bad_alloc_EEENS_11throw_line_EiEENS_9enab
 6815      00
 6816              	.LEHE43:
 128:/usr/include/boost/exception/detail/exception_ptr.hpp ****                 throw_line(__LINE__);
 129:/usr/include/boost/exception/detail/exception_ptr.hpp **** #endif
 130:/usr/include/boost/exception/detail/exception_ptr.hpp ****             static exception_ptr ep(shared_ptr<exception_detail::clone_base const>(new exception_de
 6817              		.loc 16 130 0 discriminator 4
 6818 00aa 0FB60500 		movzbl	_ZGVZN5boost16exception_detail27get_static_exception_objectINS0_10bad_alloc_EEENS_13excepti
 6818      000000
 6819 00b1 84C0     		testb	%al, %al
 6820 00b3 0F94C0   		sete	%al
 6821 00b6 84C0     		testb	%al, %al
 6822 00b8 0F848E00 		je	.L295
 6822      0000
 6823              		.loc 16 130 0 is_stmt 0 discriminator 1
 6824 00be 488D3D00 		leaq	_ZGVZN5boost16exception_detail27get_static_exception_objectINS0_10bad_alloc_EEENS_13exception
 6824      000000
 6825 00c5 E8000000 		call	__cxa_guard_acquire@PLT
 6825      00
 6826 00ca 85C0     		testl	%eax, %eax
 6827 00cc 0F95C0   		setne	%al
 6828 00cf 84C0     		testb	%al, %al
 6829 00d1 7479     		je	.L295
 6830              		.loc 16 130 0 discriminator 2
 6831 00d3 41BC0000 		movl	$0, %r12d
 6831      0000
 6832 00d9 BF380000 		movl	$56, %edi
 6832      00
 6833              	.LEHB44:
 6834 00de E8000000 		call	_Znwm@PLT
 6834      00
 6835              	.LEHE44:
 6836 00e3 4889C3   		movq	%rax, %rbx
 6837 00e6 488D8540 		leaq	-192(%rbp), %rax
 6837      FFFFFF
 6838 00ed 4889C6   		movq	%rax, %rsi
 6839 00f0 4889DF   		movq	%rbx, %rdi
 6840              	.LEHB45:
 6841 00f3 E8000000 		call	_ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EEC1ERKS3_
 6841      00
GAS LISTING /tmp/ccsIN87E.s 			page 310


 6842              	.LEHE45:
 6843              		.loc 16 130 0 discriminator 6
 6844 00f8 488D45D0 		leaq	-48(%rbp), %rax
 6845 00fc 4889DE   		movq	%rbx, %rsi
 6846 00ff 4889C7   		movq	%rax, %rdi
 6847              	.LEHB46:
 6848 0102 E8000000 		call	_ZN5boost10shared_ptrIKNS_16exception_detail10clone_baseEEC1INS1_10clone_implINS1_10bad_alloc
 6848      00
 6849              	.LEHE46:
 6850              		.loc 16 130 0 discriminator 8
 6851 0107 488D45D0 		leaq	-48(%rbp), %rax
 6852 010b 4889C6   		movq	%rax, %rsi
 6853 010e 488D3D00 		leaq	_ZZN5boost16exception_detail27get_static_exception_objectINS0_10bad_alloc_EEENS_13exception_p
 6853      000000
 6854 0115 E8000000 		call	_ZN5boost13exception_ptrC1ERKNS_10shared_ptrIKNS_16exception_detail10clone_baseEEE
 6854      00
 6855 011a 488D3D00 		leaq	_ZGVZN5boost16exception_detail27get_static_exception_objectINS0_10bad_alloc_EEENS_13exception
 6855      000000
 6856 0121 E8000000 		call	__cxa_guard_release@PLT
 6856      00
 6857 0126 488D1500 		leaq	__dso_handle(%rip), %rdx
 6857      000000
 6858 012d 488D3500 		leaq	_ZZN5boost16exception_detail27get_static_exception_objectINS0_10bad_alloc_EEENS_13exception_p
 6858      000000
 6859 0134 488D3D00 		leaq	_ZN5boost13exception_ptrD1Ev(%rip), %rdi
 6859      000000
 6860 013b E8000000 		call	__cxa_atexit@PLT
 6860      00
 6861 0140 488D45D0 		leaq	-48(%rbp), %rax
 6862 0144 4889C7   		movq	%rax, %rdi
 6863 0147 E8000000 		call	_ZN5boost10shared_ptrIKNS_16exception_detail10clone_baseEED1Ev
 6863      00
 6864              	.L295:
 131:/usr/include/boost/exception/detail/exception_ptr.hpp ****             return ep;
 6865              		.loc 16 131 0 is_stmt 1
 6866 014c 488B8538 		movq	-200(%rbp), %rax
 6866      FFFFFF
 6867 0153 488D3500 		leaq	_ZZN5boost16exception_detail27get_static_exception_objectINS0_10bad_alloc_EEENS_13exception_p
 6867      000000
 6868 015a 4889C7   		movq	%rax, %rdi
 6869 015d E8000000 		call	_ZN5boost13exception_ptrC1ERKS0_
 6869      00
 123:/usr/include/boost/exception/detail/exception_ptr.hpp **** #ifndef BOOST_EXCEPTION_DISABLE
 6870              		.loc 16 123 0
 6871 0162 488D8540 		leaq	-192(%rbp), %rax
 6871      FFFFFF
 6872 0169 4889C7   		movq	%rax, %rdi
 6873 016c E8000000 		call	_ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EED1Ev
 6873      00
 122:/usr/include/boost/exception/detail/exception_ptr.hpp ****             exception_detail::clone_impl<Exception> c(ba);
 6874              		.loc 16 122 0
 6875 0171 488D4580 		leaq	-128(%rbp), %rax
 6876 0175 4889C7   		movq	%rax, %rdi
 6877 0178 E8000000 		call	_ZN5boost16exception_detail10bad_alloc_D1Ev
 6877      00
 6878              		.loc 16 131 0
 6879 017d EB59     		jmp	.L307
GAS LISTING /tmp/ccsIN87E.s 			page 311


 6880              	.L304:
 6881 017f 4889C3   		movq	%rax, %rbx
 6882 0182 EB29     		jmp	.L298
 6883              	.L306:
 6884 0184 4989C5   		movq	%rax, %r13
 130:/usr/include/boost/exception/detail/exception_ptr.hpp ****             return ep;
 6885              		.loc 16 130 0
 6886 0187 BE380000 		movl	$56, %esi
 6886      00
 6887 018c 4889DF   		movq	%rbx, %rdi
 6888 018f E8000000 		call	_ZdlPvm@PLT
 6888      00
 6889 0194 4C89EB   		movq	%r13, %rbx
 6890 0197 EB03     		jmp	.L300
 6891              	.L305:
 6892 0199 4889C3   		movq	%rax, %rbx
 6893              	.L300:
 130:/usr/include/boost/exception/detail/exception_ptr.hpp ****             return ep;
 6894              		.loc 16 130 0 is_stmt 0 discriminator 7
 6895 019c 4584E4   		testb	%r12b, %r12b
 6896 019f 750C     		jne	.L298
 130:/usr/include/boost/exception/detail/exception_ptr.hpp ****             return ep;
 6897              		.loc 16 130 0 discriminator 9
 6898 01a1 488D3D00 		leaq	_ZGVZN5boost16exception_detail27get_static_exception_objectINS0_10bad_alloc_EEENS_13exception
 6898      000000
 6899 01a8 E8000000 		call	__cxa_guard_abort@PLT
 6899      00
 6900              	.L298:
 123:/usr/include/boost/exception/detail/exception_ptr.hpp **** #ifndef BOOST_EXCEPTION_DISABLE
 6901              		.loc 16 123 0 is_stmt 1
 6902 01ad 488D8540 		leaq	-192(%rbp), %rax
 6902      FFFFFF
 6903 01b4 4889C7   		movq	%rax, %rdi
 6904 01b7 E8000000 		call	_ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EED1Ev
 6904      00
 6905 01bc EB03     		jmp	.L302
 6906              	.L303:
 6907 01be 4889C3   		movq	%rax, %rbx
 6908              	.L302:
 122:/usr/include/boost/exception/detail/exception_ptr.hpp ****             exception_detail::clone_impl<Exception> c(ba);
 6909              		.loc 16 122 0
 6910 01c1 488D4580 		leaq	-128(%rbp), %rax
 6911 01c5 4889C7   		movq	%rax, %rdi
 6912 01c8 E8000000 		call	_ZN5boost16exception_detail10bad_alloc_D1Ev
 6912      00
 6913 01cd 4889D8   		movq	%rbx, %rax
 6914 01d0 4889C7   		movq	%rax, %rdi
 6915              	.LEHB47:
 6916 01d3 E8000000 		call	_Unwind_Resume@PLT
 6916      00
 6917              	.LEHE47:
 6918              	.L307:
 132:/usr/include/boost/exception/detail/exception_ptr.hpp ****             }
 6919              		.loc 16 132 0
 6920 01d8 488B8538 		movq	-200(%rbp), %rax
 6920      FFFFFF
 6921 01df 4881C4B8 		addq	$184, %rsp
GAS LISTING /tmp/ccsIN87E.s 			page 312


 6921      000000
 6922 01e6 5B       		popq	%rbx
 6923 01e7 415C     		popq	%r12
 6924 01e9 415D     		popq	%r13
 6925 01eb 5D       		popq	%rbp
 6926              		.cfi_def_cfa 7, 8
 6927 01ec C3       		ret
 6928              		.cfi_endproc
 6929              	.LFE12012:
 6930              		.section	.gcc_except_table
 6931              	.LLSDA12012:
 6932 00ba FF       		.byte	0xff
 6933 00bb FF       		.byte	0xff
 6934 00bc 01       		.byte	0x1
 6935 00bd 22       		.uleb128 .LLSDACSE12012-.LLSDACSB12012
 6936              	.LLSDACSB12012:
 6937 00be 34       		.uleb128 .LEHB42-.LFB12012
 6938 00bf 05       		.uleb128 .LEHE42-.LEHB42
 6939 00c0 BE03     		.uleb128 .L303-.LFB12012
 6940 00c2 00       		.uleb128 0
 6941 00c3 8101     		.uleb128 .LEHB43-.LFB12012
 6942 00c5 29       		.uleb128 .LEHE43-.LEHB43
 6943 00c6 FF02     		.uleb128 .L304-.LFB12012
 6944 00c8 00       		.uleb128 0
 6945 00c9 DE01     		.uleb128 .LEHB44-.LFB12012
 6946 00cb 05       		.uleb128 .LEHE44-.LEHB44
 6947 00cc 9903     		.uleb128 .L305-.LFB12012
 6948 00ce 00       		.uleb128 0
 6949 00cf F301     		.uleb128 .LEHB45-.LFB12012
 6950 00d1 05       		.uleb128 .LEHE45-.LEHB45
 6951 00d2 8403     		.uleb128 .L306-.LFB12012
 6952 00d4 00       		.uleb128 0
 6953 00d5 8202     		.uleb128 .LEHB46-.LFB12012
 6954 00d7 05       		.uleb128 .LEHE46-.LEHB46
 6955 00d8 9903     		.uleb128 .L305-.LFB12012
 6956 00da 00       		.uleb128 0
 6957 00db D303     		.uleb128 .LEHB47-.LFB12012
 6958 00dd 05       		.uleb128 .LEHE47-.LEHB47
 6959 00de 00       		.uleb128 0
 6960 00df 00       		.uleb128 0
 6961              	.LLSDACSE12012:
 6962              		.section	.text._ZN5boost16exception_detail27get_static_exception_objectINS0_10bad_alloc_EEENS_13ex
 6964              		.section	.text._ZN5boost16exception_detail14bad_exception_C2Ev,"axG",@progbits,_ZN5boost16exceptio
 6965              		.align 2
 6966              		.weak	_ZN5boost16exception_detail14bad_exception_C2Ev
 6968              	_ZN5boost16exception_detail14bad_exception_C2Ev:
 6969              	.LFB12027:
 111:/usr/include/boost/exception/detail/exception_ptr.hpp ****             boost::exception,
 6970              		.loc 16 111 0
 6971              		.cfi_startproc
 6972 0000 55       		pushq	%rbp
 6973              		.cfi_def_cfa_offset 16
 6974              		.cfi_offset 6, -16
 6975 0001 4889E5   		movq	%rsp, %rbp
 6976              		.cfi_def_cfa_register 6
 6977 0004 4883EC10 		subq	$16, %rsp
 6978 0008 48897DF8 		movq	%rdi, -8(%rbp)
GAS LISTING /tmp/ccsIN87E.s 			page 313


 6979              	.LBB69:
 111:/usr/include/boost/exception/detail/exception_ptr.hpp ****             boost::exception,
 6980              		.loc 16 111 0
 6981 000c 488B45F8 		movq	-8(%rbp), %rax
 6982 0010 4889C7   		movq	%rax, %rdi
 6983 0013 E8000000 		call	_ZN5boost9exceptionC2Ev
 6983      00
 6984 0018 488B45F8 		movq	-8(%rbp), %rax
 6985 001c 4883C028 		addq	$40, %rax
 6986 0020 4889C7   		movq	%rax, %rdi
 6987 0023 E8000000 		call	_ZNSt13bad_exceptionC2Ev
 6987      00
 6988 0028 488D1500 		leaq	16+_ZTVN5boost16exception_detail14bad_exception_E(%rip), %rdx
 6988      000000
 6989 002f 488B45F8 		movq	-8(%rbp), %rax
 6990 0033 488910   		movq	%rdx, (%rax)
 6991 0036 488D1500 		leaq	48+_ZTVN5boost16exception_detail14bad_exception_E(%rip), %rdx
 6991      000000
 6992 003d 488B45F8 		movq	-8(%rbp), %rax
 6993 0041 48895028 		movq	%rdx, 40(%rax)
 6994              	.LBE69:
 6995 0045 90       		nop
 6996 0046 C9       		leave
 6997              		.cfi_def_cfa 7, 8
 6998 0047 C3       		ret
 6999              		.cfi_endproc
 7000              	.LFE12027:
 7002              		.weak	_ZN5boost16exception_detail14bad_exception_C1Ev
 7003              		.set	_ZN5boost16exception_detail14bad_exception_C1Ev,_ZN5boost16exception_detail14bad_exception_C2
 7004              		.section	.text._ZNSt13bad_exceptionC2ERKS_,"axG",@progbits,_ZNSt13bad_exceptionC5ERKS_,comdat
 7005              		.align 2
 7006              		.weak	_ZNSt13bad_exceptionC2ERKS_
 7008              	_ZNSt13bad_exceptionC2ERKS_:
 7009              	.LFB12032:
  76:/usr/include/c++/6/exception ****   {
 7010              		.loc 1 76 0
 7011              		.cfi_startproc
 7012 0000 55       		pushq	%rbp
 7013              		.cfi_def_cfa_offset 16
 7014              		.cfi_offset 6, -16
 7015 0001 4889E5   		movq	%rsp, %rbp
 7016              		.cfi_def_cfa_register 6
 7017 0004 4883EC10 		subq	$16, %rsp
 7018 0008 48897DF8 		movq	%rdi, -8(%rbp)
 7019 000c 488975F0 		movq	%rsi, -16(%rbp)
 7020              	.LBB70:
  76:/usr/include/c++/6/exception ****   {
 7021              		.loc 1 76 0
 7022 0010 488B55F0 		movq	-16(%rbp), %rdx
 7023 0014 488B45F8 		movq	-8(%rbp), %rax
 7024 0018 4889D6   		movq	%rdx, %rsi
 7025 001b 4889C7   		movq	%rax, %rdi
 7026 001e E8000000 		call	_ZNSt9exceptionC2ERKS_
 7026      00
 7027 0023 488D1500 		leaq	16+_ZTVSt13bad_exception(%rip), %rdx
 7027      000000
 7028 002a 488B45F8 		movq	-8(%rbp), %rax
GAS LISTING /tmp/ccsIN87E.s 			page 314


 7029 002e 488910   		movq	%rdx, (%rax)
 7030              	.LBE70:
 7031 0031 90       		nop
 7032 0032 C9       		leave
 7033              		.cfi_def_cfa 7, 8
 7034 0033 C3       		ret
 7035              		.cfi_endproc
 7036              	.LFE12032:
 7038              		.weak	_ZNSt13bad_exceptionC1ERKS_
 7039              		.set	_ZNSt13bad_exceptionC1ERKS_,_ZNSt13bad_exceptionC2ERKS_
 7040              		.section	.text._ZN5boost16exception_detail14bad_exception_C2ERKS1_,"axG",@progbits,_ZN5boost16exce
 7041              		.align 2
 7042              		.weak	_ZN5boost16exception_detail14bad_exception_C2ERKS1_
 7044              	_ZN5boost16exception_detail14bad_exception_C2ERKS1_:
 7045              	.LFB12034:
 111:/usr/include/boost/exception/detail/exception_ptr.hpp ****             boost::exception,
 7046              		.loc 16 111 0
 7047              		.cfi_startproc
 7048 0000 55       		pushq	%rbp
 7049              		.cfi_def_cfa_offset 16
 7050              		.cfi_offset 6, -16
 7051 0001 4889E5   		movq	%rsp, %rbp
 7052              		.cfi_def_cfa_register 6
 7053 0004 4883EC10 		subq	$16, %rsp
 7054 0008 48897DF8 		movq	%rdi, -8(%rbp)
 7055 000c 488975F0 		movq	%rsi, -16(%rbp)
 7056              	.LBB71:
 111:/usr/include/boost/exception/detail/exception_ptr.hpp ****             boost::exception,
 7057              		.loc 16 111 0
 7058 0010 488B55F0 		movq	-16(%rbp), %rdx
 7059 0014 488B45F8 		movq	-8(%rbp), %rax
 7060 0018 4889D6   		movq	%rdx, %rsi
 7061 001b 4889C7   		movq	%rax, %rdi
 7062 001e E8000000 		call	_ZN5boost9exceptionC2ERKS0_
 7062      00
 7063 0023 488B45F0 		movq	-16(%rbp), %rax
 7064 0027 488D5028 		leaq	40(%rax), %rdx
 7065 002b 488B45F8 		movq	-8(%rbp), %rax
 7066 002f 4883C028 		addq	$40, %rax
 7067 0033 4889D6   		movq	%rdx, %rsi
 7068 0036 4889C7   		movq	%rax, %rdi
 7069 0039 E8000000 		call	_ZNSt13bad_exceptionC2ERKS_
 7069      00
 7070 003e 488D1500 		leaq	16+_ZTVN5boost16exception_detail14bad_exception_E(%rip), %rdx
 7070      000000
 7071 0045 488B45F8 		movq	-8(%rbp), %rax
 7072 0049 488910   		movq	%rdx, (%rax)
 7073 004c 488D1500 		leaq	48+_ZTVN5boost16exception_detail14bad_exception_E(%rip), %rdx
 7073      000000
 7074 0053 488B45F8 		movq	-8(%rbp), %rax
 7075 0057 48895028 		movq	%rdx, 40(%rax)
 7076              	.LBE71:
 7077 005b 90       		nop
 7078 005c C9       		leave
 7079              		.cfi_def_cfa 7, 8
 7080 005d C3       		ret
 7081              		.cfi_endproc
GAS LISTING /tmp/ccsIN87E.s 			page 315


 7082              	.LFE12034:
 7084              		.weak	_ZN5boost16exception_detail14bad_exception_C1ERKS1_
 7085              		.set	_ZN5boost16exception_detail14bad_exception_C1ERKS1_,_ZN5boost16exception_detail14bad_exceptio
 7086              		.section	.text._ZN5boost16exception_detail10clone_implINS0_14bad_exception_EEC1ERKS3_,"axG",@progb
 7087              		.align 2
 7088              		.weak	_ZN5boost16exception_detail10clone_implINS0_14bad_exception_EEC1ERKS3_
 7090              	_ZN5boost16exception_detail10clone_implINS0_14bad_exception_EEC1ERKS3_:
 7091              	.LFB12037:
 7092              		.loc 3 459 0
 7093              		.cfi_startproc
 7094              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 7095              		.cfi_lsda 0x1b,.LLSDA12037
 7096 0000 55       		pushq	%rbp
 7097              		.cfi_def_cfa_offset 16
 7098              		.cfi_offset 6, -16
 7099 0001 4889E5   		movq	%rsp, %rbp
 7100              		.cfi_def_cfa_register 6
 7101 0004 53       		pushq	%rbx
 7102 0005 4883EC18 		subq	$24, %rsp
 7103              		.cfi_offset 3, -24
 7104 0009 48897DE8 		movq	%rdi, -24(%rbp)
 7105 000d 488975E0 		movq	%rsi, -32(%rbp)
 7106              	.LBB72:
 7107              		.loc 3 459 0
 7108 0011 488B45E0 		movq	-32(%rbp), %rax
 7109 0015 488B00   		movq	(%rax), %rax
 7110 0018 4883E818 		subq	$24, %rax
 7111 001c 488B00   		movq	(%rax), %rax
 7112 001f 4889C2   		movq	%rax, %rdx
 7113 0022 488B45E0 		movq	-32(%rbp), %rax
 7114 0026 4801C2   		addq	%rax, %rdx
 7115 0029 488B45E8 		movq	-24(%rbp), %rax
 7116 002d 4883C030 		addq	$48, %rax
 7117 0031 4889D6   		movq	%rdx, %rsi
 7118 0034 4889C7   		movq	%rax, %rdi
 7119 0037 E8000000 		call	_ZN5boost16exception_detail10clone_baseC2ERKS1_
 7119      00
 7120 003c 488B55E0 		movq	-32(%rbp), %rdx
 7121 0040 488B45E8 		movq	-24(%rbp), %rax
 7122 0044 4889D6   		movq	%rdx, %rsi
 7123 0047 4889C7   		movq	%rax, %rdi
 7124              	.LEHB48:
 7125 004a E8000000 		call	_ZN5boost16exception_detail14bad_exception_C2ERKS1_
 7125      00
 7126              	.LEHE48:
 7127              		.loc 3 459 0 is_stmt 0 discriminator 8
 7128 004f 488D1500 		leaq	24+_ZTVN5boost16exception_detail10clone_implINS0_14bad_exception_EEE(%rip), %rdx
 7128      000000
 7129 0056 488B45E8 		movq	-24(%rbp), %rax
 7130 005a 488910   		movq	%rdx, (%rax)
 7131 005d 488D1500 		leaq	72+_ZTVN5boost16exception_detail10clone_implINS0_14bad_exception_EEE(%rip), %rdx
 7131      000000
 7132 0064 488B45E8 		movq	-24(%rbp), %rax
 7133 0068 48895028 		movq	%rdx, 40(%rax)
 7134 006c 488B45E8 		movq	-24(%rbp), %rax
 7135 0070 488D5030 		leaq	48(%rax), %rdx
 7136 0074 488D0500 		leaq	136+_ZTVN5boost16exception_detail10clone_implINS0_14bad_exception_EEE(%rip), %rax
GAS LISTING /tmp/ccsIN87E.s 			page 316


 7136      000000
 7137 007b 488902   		movq	%rax, (%rdx)
 7138              	.LBE72:
 7139 007e EB1E     		jmp	.L314
 7140              	.L313:
 7141 0080 4889C3   		movq	%rax, %rbx
 7142              	.LBB73:
 7143              		.loc 3 459 0
 7144 0083 488B45E8 		movq	-24(%rbp), %rax
 7145 0087 4883C030 		addq	$48, %rax
 7146 008b 4889C7   		movq	%rax, %rdi
 7147 008e E8000000 		call	_ZN5boost16exception_detail10clone_baseD2Ev
 7147      00
 7148 0093 4889D8   		movq	%rbx, %rax
 7149 0096 4889C7   		movq	%rax, %rdi
 7150              	.LEHB49:
 7151 0099 E8000000 		call	_Unwind_Resume@PLT
 7151      00
 7152              	.LEHE49:
 7153              	.L314:
 7154              	.LBE73:
 7155 009e 4883C418 		addq	$24, %rsp
 7156 00a2 5B       		popq	%rbx
 7157 00a3 5D       		popq	%rbp
 7158              		.cfi_def_cfa 7, 8
 7159 00a4 C3       		ret
 7160              		.cfi_endproc
 7161              	.LFE12037:
 7162              		.section	.gcc_except_table
 7163              	.LLSDA12037:
 7164 00e0 FF       		.byte	0xff
 7165 00e1 FF       		.byte	0xff
 7166 00e2 01       		.byte	0x1
 7167 00e3 0A       		.uleb128 .LLSDACSE12037-.LLSDACSB12037
 7168              	.LLSDACSB12037:
 7169 00e4 4A       		.uleb128 .LEHB48-.LFB12037
 7170 00e5 05       		.uleb128 .LEHE48-.LEHB48
 7171 00e6 8001     		.uleb128 .L313-.LFB12037
 7172 00e8 00       		.uleb128 0
 7173 00e9 9901     		.uleb128 .LEHB49-.LFB12037
 7174 00eb 05       		.uleb128 .LEHE49-.LEHB49
 7175 00ec 00       		.uleb128 0
 7176 00ed 00       		.uleb128 0
 7177              	.LLSDACSE12037:
 7178              		.section	.text._ZN5boost16exception_detail10clone_implINS0_14bad_exception_EEC1ERKS3_,"axG",@progb
 7180              		.weak	_ZZN5boost16exception_detail27get_static_exception_objectINS0_14bad_exception_EEENS_13except
 7181              		.section	.bss._ZZN5boost16exception_detail27get_static_exception_objectINS0_14bad_exception_EEENS_
 7182              		.align 16
 7185              	_ZZN5boost16exception_detail27get_static_exception_objectINS0_14bad_exception_EEENS_13exception_ptr
 7186 0000 00000000 		.zero	16
 7186      00000000 
 7186      00000000 
 7186      00000000 
 7187              		.weak	_ZGVZN5boost16exception_detail27get_static_exception_objectINS0_14bad_exception_EEENS_13exce
 7188              		.section	.bss._ZGVZN5boost16exception_detail27get_static_exception_objectINS0_14bad_exception_EEEN
 7189              		.align 8
 7192              	_ZGVZN5boost16exception_detail27get_static_exception_objectINS0_14bad_exception_EEENS_13exception_p
GAS LISTING /tmp/ccsIN87E.s 			page 317


 7193 0000 00000000 		.zero	8
 7193      00000000 
 7194              		.section	.text._ZN5boost16exception_detail27get_static_exception_objectINS0_14bad_exception_EEENS_
 7195              		.weak	_ZN5boost16exception_detail27get_static_exception_objectINS0_14bad_exception_EEENS_13excepti
 7197              	_ZN5boost16exception_detail27get_static_exception_objectINS0_14bad_exception_EEENS_13exception_ptrE
 7198              	.LFB12025:
 120:/usr/include/boost/exception/detail/exception_ptr.hpp ****             {
 7199              		.loc 16 120 0 is_stmt 1
 7200              		.cfi_startproc
 7201              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 7202              		.cfi_lsda 0x1b,.LLSDA12025
 7203 0000 55       		pushq	%rbp
 7204              		.cfi_def_cfa_offset 16
 7205              		.cfi_offset 6, -16
 7206 0001 4889E5   		movq	%rsp, %rbp
 7207              		.cfi_def_cfa_register 6
 7208 0004 4155     		pushq	%r13
 7209 0006 4154     		pushq	%r12
 7210 0008 53       		pushq	%rbx
 7211 0009 4881ECB8 		subq	$184, %rsp
 7211      000000
 7212              		.cfi_offset 13, -24
 7213              		.cfi_offset 12, -32
 7214              		.cfi_offset 3, -40
 7215 0010 4889BD38 		movq	%rdi, -200(%rbp)
 7215      FFFFFF
 122:/usr/include/boost/exception/detail/exception_ptr.hpp ****             exception_detail::clone_impl<Exception> c(ba);
 7216              		.loc 16 122 0
 7217 0017 488D4580 		leaq	-128(%rbp), %rax
 7218 001b 4889C7   		movq	%rax, %rdi
 7219 001e E8000000 		call	_ZN5boost16exception_detail14bad_exception_C1Ev
 7219      00
 123:/usr/include/boost/exception/detail/exception_ptr.hpp **** #ifndef BOOST_EXCEPTION_DISABLE
 7220              		.loc 16 123 0
 7221 0023 488D5580 		leaq	-128(%rbp), %rdx
 7222 0027 488D8540 		leaq	-192(%rbp), %rax
 7222      FFFFFF
 7223 002e 4889D6   		movq	%rdx, %rsi
 7224 0031 4889C7   		movq	%rax, %rdi
 7225              	.LEHB50:
 7226 0034 E8000000 		call	_ZN5boost16exception_detail10clone_implINS0_14bad_exception_EEC1ERKS2_
 7226      00
 7227              	.LEHE50:
 127:/usr/include/boost/exception/detail/exception_ptr.hpp ****                 throw_line(__LINE__);
 7228              		.loc 16 127 0
 7229 0039 488D45BC 		leaq	-68(%rbp), %rax
 7230 003d BE800000 		movl	$128, %esi
 7230      00
 7231 0042 4889C7   		movq	%rax, %rdi
 7232 0045 E8000000 		call	_ZN5boost10error_infoINS_11throw_line_EiEC1Ei
 7232      00
 126:/usr/include/boost/exception/detail/exception_ptr.hpp ****                 throw_file(__FILE__) <<
 7233              		.loc 16 126 0
 7234 004a 488D45C0 		leaq	-64(%rbp), %rax
 7235 004e 488D3500 		leaq	.LC13(%rip), %rsi
 7235      000000
 7236 0055 4889C7   		movq	%rax, %rdi
GAS LISTING /tmp/ccsIN87E.s 			page 318


 7237 0058 E8000000 		call	_ZN5boost10error_infoINS_11throw_file_EPKcEC1ES3_
 7237      00
 125:/usr/include/boost/exception/detail/exception_ptr.hpp ****                 throw_function(BOOST_CURRENT_FUNCTION) <<
 7238              		.loc 16 125 0
 7239 005d 488D45C8 		leaq	-56(%rbp), %rax
 7240 0061 488D3500 		leaq	_ZZN5boost16exception_detail27get_static_exception_objectINS0_14bad_exception_EEENS_13excepti
 7240      000000
 7241 0068 4889C7   		movq	%rax, %rdi
 7242 006b E8000000 		call	_ZN5boost10error_infoINS_15throw_function_EPKcEC1ES3_
 7242      00
 7243 0070 488D55C8 		leaq	-56(%rbp), %rdx
 7244 0074 488D8540 		leaq	-192(%rbp), %rax
 7244      FFFFFF
 7245 007b 4889D6   		movq	%rdx, %rsi
 7246 007e 4889C7   		movq	%rax, %rdi
 7247              	.LEHB51:
 7248 0081 E8000000 		call	_ZN5boostlsINS_16exception_detail10clone_implINS1_14bad_exception_EEENS_15throw_function_EPKc
 7248      00
 7249 0086 4889C2   		movq	%rax, %rdx
 126:/usr/include/boost/exception/detail/exception_ptr.hpp ****                 throw_file(__FILE__) <<
 7250              		.loc 16 126 0
 7251 0089 488D45C0 		leaq	-64(%rbp), %rax
 7252 008d 4889C6   		movq	%rax, %rsi
 7253 0090 4889D7   		movq	%rdx, %rdi
 7254 0093 E8000000 		call	_ZN5boostlsINS_16exception_detail10clone_implINS1_14bad_exception_EEENS_11throw_file_EPKcEENS
 7254      00
 126:/usr/include/boost/exception/detail/exception_ptr.hpp ****                 throw_file(__FILE__) <<
 7255              		.loc 16 126 0 is_stmt 0 discriminator 2
 7256 0098 4889C2   		movq	%rax, %rdx
 125:/usr/include/boost/exception/detail/exception_ptr.hpp ****                 throw_function(BOOST_CURRENT_FUNCTION) <<
 7257              		.loc 16 125 0 is_stmt 1 discriminator 2
 7258 009b 488D45BC 		leaq	-68(%rbp), %rax
 7259 009f 4889C6   		movq	%rax, %rsi
 7260 00a2 4889D7   		movq	%rdx, %rdi
 7261 00a5 E8000000 		call	_ZN5boostlsINS_16exception_detail10clone_implINS1_14bad_exception_EEENS_11throw_line_EiEENS_9
 7261      00
 7262              	.LEHE51:
 130:/usr/include/boost/exception/detail/exception_ptr.hpp ****             return ep;
 7263              		.loc 16 130 0 discriminator 4
 7264 00aa 0FB60500 		movzbl	_ZGVZN5boost16exception_detail27get_static_exception_objectINS0_14bad_exception_EEENS_13exc
 7264      000000
 7265 00b1 84C0     		testb	%al, %al
 7266 00b3 0F94C0   		sete	%al
 7267 00b6 84C0     		testb	%al, %al
 7268 00b8 0F848E00 		je	.L316
 7268      0000
 130:/usr/include/boost/exception/detail/exception_ptr.hpp ****             return ep;
 7269              		.loc 16 130 0 is_stmt 0 discriminator 1
 7270 00be 488D3D00 		leaq	_ZGVZN5boost16exception_detail27get_static_exception_objectINS0_14bad_exception_EEENS_13excep
 7270      000000
 7271 00c5 E8000000 		call	__cxa_guard_acquire@PLT
 7271      00
 7272 00ca 85C0     		testl	%eax, %eax
 7273 00cc 0F95C0   		setne	%al
 7274 00cf 84C0     		testb	%al, %al
 7275 00d1 7479     		je	.L316
 130:/usr/include/boost/exception/detail/exception_ptr.hpp ****             return ep;
GAS LISTING /tmp/ccsIN87E.s 			page 319


 7276              		.loc 16 130 0 discriminator 2
 7277 00d3 41BC0000 		movl	$0, %r12d
 7277      0000
 7278 00d9 BF380000 		movl	$56, %edi
 7278      00
 7279              	.LEHB52:
 7280 00de E8000000 		call	_Znwm@PLT
 7280      00
 7281              	.LEHE52:
 7282 00e3 4889C3   		movq	%rax, %rbx
 7283 00e6 488D8540 		leaq	-192(%rbp), %rax
 7283      FFFFFF
 7284 00ed 4889C6   		movq	%rax, %rsi
 7285 00f0 4889DF   		movq	%rbx, %rdi
 7286              	.LEHB53:
 7287 00f3 E8000000 		call	_ZN5boost16exception_detail10clone_implINS0_14bad_exception_EEC1ERKS3_
 7287      00
 7288              	.LEHE53:
 130:/usr/include/boost/exception/detail/exception_ptr.hpp ****             return ep;
 7289              		.loc 16 130 0 discriminator 6
 7290 00f8 488D45D0 		leaq	-48(%rbp), %rax
 7291 00fc 4889DE   		movq	%rbx, %rsi
 7292 00ff 4889C7   		movq	%rax, %rdi
 7293              	.LEHB54:
 7294 0102 E8000000 		call	_ZN5boost10shared_ptrIKNS_16exception_detail10clone_baseEEC1INS1_10clone_implINS1_14bad_excep
 7294      00
 7295              	.LEHE54:
 130:/usr/include/boost/exception/detail/exception_ptr.hpp ****             return ep;
 7296              		.loc 16 130 0 discriminator 8
 7297 0107 488D45D0 		leaq	-48(%rbp), %rax
 7298 010b 4889C6   		movq	%rax, %rsi
 7299 010e 488D3D00 		leaq	_ZZN5boost16exception_detail27get_static_exception_objectINS0_14bad_exception_EEENS_13excepti
 7299      000000
 7300 0115 E8000000 		call	_ZN5boost13exception_ptrC1ERKNS_10shared_ptrIKNS_16exception_detail10clone_baseEEE
 7300      00
 7301 011a 488D3D00 		leaq	_ZGVZN5boost16exception_detail27get_static_exception_objectINS0_14bad_exception_EEENS_13excep
 7301      000000
 7302 0121 E8000000 		call	__cxa_guard_release@PLT
 7302      00
 7303 0126 488D1500 		leaq	__dso_handle(%rip), %rdx
 7303      000000
 7304 012d 488D3500 		leaq	_ZZN5boost16exception_detail27get_static_exception_objectINS0_14bad_exception_EEENS_13excepti
 7304      000000
 7305 0134 488D3D00 		leaq	_ZN5boost13exception_ptrD1Ev(%rip), %rdi
 7305      000000
 7306 013b E8000000 		call	__cxa_atexit@PLT
 7306      00
 7307 0140 488D45D0 		leaq	-48(%rbp), %rax
 7308 0144 4889C7   		movq	%rax, %rdi
 7309 0147 E8000000 		call	_ZN5boost10shared_ptrIKNS_16exception_detail10clone_baseEED1Ev
 7309      00
 7310              	.L316:
 131:/usr/include/boost/exception/detail/exception_ptr.hpp ****             }
 7311              		.loc 16 131 0 is_stmt 1
 7312 014c 488B8538 		movq	-200(%rbp), %rax
 7312      FFFFFF
 7313 0153 488D3500 		leaq	_ZZN5boost16exception_detail27get_static_exception_objectINS0_14bad_exception_EEENS_13excepti
GAS LISTING /tmp/ccsIN87E.s 			page 320


 7313      000000
 7314 015a 4889C7   		movq	%rax, %rdi
 7315 015d E8000000 		call	_ZN5boost13exception_ptrC1ERKS0_
 7315      00
 123:/usr/include/boost/exception/detail/exception_ptr.hpp **** #ifndef BOOST_EXCEPTION_DISABLE
 7316              		.loc 16 123 0
 7317 0162 488D8540 		leaq	-192(%rbp), %rax
 7317      FFFFFF
 7318 0169 4889C7   		movq	%rax, %rdi
 7319 016c E8000000 		call	_ZN5boost16exception_detail10clone_implINS0_14bad_exception_EED1Ev
 7319      00
 122:/usr/include/boost/exception/detail/exception_ptr.hpp ****             exception_detail::clone_impl<Exception> c(ba);
 7320              		.loc 16 122 0
 7321 0171 488D4580 		leaq	-128(%rbp), %rax
 7322 0175 4889C7   		movq	%rax, %rdi
 7323 0178 E8000000 		call	_ZN5boost16exception_detail14bad_exception_D1Ev
 7323      00
 131:/usr/include/boost/exception/detail/exception_ptr.hpp ****             }
 7324              		.loc 16 131 0
 7325 017d EB59     		jmp	.L328
 7326              	.L325:
 7327 017f 4889C3   		movq	%rax, %rbx
 7328 0182 EB29     		jmp	.L319
 7329              	.L327:
 7330 0184 4989C5   		movq	%rax, %r13
 130:/usr/include/boost/exception/detail/exception_ptr.hpp ****             return ep;
 7331              		.loc 16 130 0
 7332 0187 BE380000 		movl	$56, %esi
 7332      00
 7333 018c 4889DF   		movq	%rbx, %rdi
 7334 018f E8000000 		call	_ZdlPvm@PLT
 7334      00
 7335 0194 4C89EB   		movq	%r13, %rbx
 7336 0197 EB03     		jmp	.L321
 7337              	.L326:
 7338 0199 4889C3   		movq	%rax, %rbx
 7339              	.L321:
 130:/usr/include/boost/exception/detail/exception_ptr.hpp ****             return ep;
 7340              		.loc 16 130 0 is_stmt 0 discriminator 7
 7341 019c 4584E4   		testb	%r12b, %r12b
 7342 019f 750C     		jne	.L319
 130:/usr/include/boost/exception/detail/exception_ptr.hpp ****             return ep;
 7343              		.loc 16 130 0 discriminator 9
 7344 01a1 488D3D00 		leaq	_ZGVZN5boost16exception_detail27get_static_exception_objectINS0_14bad_exception_EEENS_13excep
 7344      000000
 7345 01a8 E8000000 		call	__cxa_guard_abort@PLT
 7345      00
 7346              	.L319:
 123:/usr/include/boost/exception/detail/exception_ptr.hpp **** #ifndef BOOST_EXCEPTION_DISABLE
 7347              		.loc 16 123 0 is_stmt 1
 7348 01ad 488D8540 		leaq	-192(%rbp), %rax
 7348      FFFFFF
 7349 01b4 4889C7   		movq	%rax, %rdi
 7350 01b7 E8000000 		call	_ZN5boost16exception_detail10clone_implINS0_14bad_exception_EED1Ev
 7350      00
 7351 01bc EB03     		jmp	.L323
 7352              	.L324:
GAS LISTING /tmp/ccsIN87E.s 			page 321


 7353 01be 4889C3   		movq	%rax, %rbx
 7354              	.L323:
 122:/usr/include/boost/exception/detail/exception_ptr.hpp ****             exception_detail::clone_impl<Exception> c(ba);
 7355              		.loc 16 122 0
 7356 01c1 488D4580 		leaq	-128(%rbp), %rax
 7357 01c5 4889C7   		movq	%rax, %rdi
 7358 01c8 E8000000 		call	_ZN5boost16exception_detail14bad_exception_D1Ev
 7358      00
 7359 01cd 4889D8   		movq	%rbx, %rax
 7360 01d0 4889C7   		movq	%rax, %rdi
 7361              	.LEHB55:
 7362 01d3 E8000000 		call	_Unwind_Resume@PLT
 7362      00
 7363              	.LEHE55:
 7364              	.L328:
 7365              		.loc 16 132 0
 7366 01d8 488B8538 		movq	-200(%rbp), %rax
 7366      FFFFFF
 7367 01df 4881C4B8 		addq	$184, %rsp
 7367      000000
 7368 01e6 5B       		popq	%rbx
 7369 01e7 415C     		popq	%r12
 7370 01e9 415D     		popq	%r13
 7371 01eb 5D       		popq	%rbp
 7372              		.cfi_def_cfa 7, 8
 7373 01ec C3       		ret
 7374              		.cfi_endproc
 7375              	.LFE12025:
 7376              		.section	.gcc_except_table
 7377              	.LLSDA12025:
 7378 00ee FF       		.byte	0xff
 7379 00ef FF       		.byte	0xff
 7380 00f0 01       		.byte	0x1
 7381 00f1 22       		.uleb128 .LLSDACSE12025-.LLSDACSB12025
 7382              	.LLSDACSB12025:
 7383 00f2 34       		.uleb128 .LEHB50-.LFB12025
 7384 00f3 05       		.uleb128 .LEHE50-.LEHB50
 7385 00f4 BE03     		.uleb128 .L324-.LFB12025
 7386 00f6 00       		.uleb128 0
 7387 00f7 8101     		.uleb128 .LEHB51-.LFB12025
 7388 00f9 29       		.uleb128 .LEHE51-.LEHB51
 7389 00fa FF02     		.uleb128 .L325-.LFB12025
 7390 00fc 00       		.uleb128 0
 7391 00fd DE01     		.uleb128 .LEHB52-.LFB12025
 7392 00ff 05       		.uleb128 .LEHE52-.LEHB52
 7393 0100 9903     		.uleb128 .L326-.LFB12025
 7394 0102 00       		.uleb128 0
 7395 0103 F301     		.uleb128 .LEHB53-.LFB12025
 7396 0105 05       		.uleb128 .LEHE53-.LEHB53
 7397 0106 8403     		.uleb128 .L327-.LFB12025
 7398 0108 00       		.uleb128 0
 7399 0109 8202     		.uleb128 .LEHB54-.LFB12025
 7400 010b 05       		.uleb128 .LEHE54-.LEHB54
 7401 010c 9903     		.uleb128 .L326-.LFB12025
 7402 010e 00       		.uleb128 0
 7403 010f D303     		.uleb128 .LEHB55-.LFB12025
 7404 0111 05       		.uleb128 .LEHE55-.LEHB55
GAS LISTING /tmp/ccsIN87E.s 			page 322


 7405 0112 00       		.uleb128 0
 7406 0113 00       		.uleb128 0
 7407              	.LLSDACSE12025:
 7408              		.section	.text._ZN5boost16exception_detail27get_static_exception_objectINS0_14bad_exception_EEENS_
 7410              		.section	.text._ZNSt6vectorIiSaIiEEC2ERKS1_,"axG",@progbits,_ZNSt6vectorIiSaIiEEC5ERKS1_,comdat
 7411              		.align 2
 7412              		.weak	_ZNSt6vectorIiSaIiEEC2ERKS1_
 7414              	_ZNSt6vectorIiSaIiEEC2ERKS1_:
 7415              	.LFB12262:
 320:/usr/include/c++/6/bits/stl_vector.h ****       : _Base(__x.size(),
 7416              		.loc 30 320 0
 7417              		.cfi_startproc
 7418              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 7419              		.cfi_lsda 0x1b,.LLSDA12262
 7420 0000 55       		pushq	%rbp
 7421              		.cfi_def_cfa_offset 16
 7422              		.cfi_offset 6, -16
 7423 0001 4889E5   		movq	%rsp, %rbp
 7424              		.cfi_def_cfa_register 6
 7425 0004 4155     		pushq	%r13
 7426 0006 4154     		pushq	%r12
 7427 0008 53       		pushq	%rbx
 7428 0009 4883EC28 		subq	$40, %rsp
 7429              		.cfi_offset 13, -24
 7430              		.cfi_offset 12, -32
 7431              		.cfi_offset 3, -40
 7432 000d 48897DC8 		movq	%rdi, -56(%rbp)
 7433 0011 488975C0 		movq	%rsi, -64(%rbp)
 7434              	.LBB74:
 322:/usr/include/c++/6/bits/stl_vector.h ****       { this->_M_impl._M_finish =
 7435              		.loc 30 322 0
 7436 0015 488B45C0 		movq	-64(%rbp), %rax
 7437 0019 4889C7   		movq	%rax, %rdi
 7438 001c E8000000 		call	_ZNKSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv
 7438      00
 7439 0021 4889C2   		movq	%rax, %rdx
 7440 0024 488D45DF 		leaq	-33(%rbp), %rax
 7441 0028 4889D6   		movq	%rdx, %rsi
 7442 002b 4889C7   		movq	%rax, %rdi
 7443              	.LEHB56:
 7444 002e E8000000 		call	_ZN9__gnu_cxx14__alloc_traitsISaIiEE17_S_select_on_copyERKS1_
 7444      00
 7445              	.LEHE56:
 7446 0033 488B45C0 		movq	-64(%rbp), %rax
 7447 0037 4889C7   		movq	%rax, %rdi
 7448 003a E8000000 		call	_ZNKSt6vectorIiSaIiEE4sizeEv
 7448      00
 7449 003f 4889C1   		movq	%rax, %rcx
 7450 0042 488B45C8 		movq	-56(%rbp), %rax
 7451 0046 488D55DF 		leaq	-33(%rbp), %rdx
 7452 004a 4889CE   		movq	%rcx, %rsi
 7453 004d 4889C7   		movq	%rax, %rdi
 7454              	.LEHB57:
 7455 0050 E8000000 		call	_ZNSt12_Vector_baseIiSaIiEEC2EmRKS0_
 7455      00
 7456              	.LEHE57:
 322:/usr/include/c++/6/bits/stl_vector.h ****       { this->_M_impl._M_finish =
GAS LISTING /tmp/ccsIN87E.s 			page 323


 7457              		.loc 30 322 0 is_stmt 0 discriminator 2
 7458 0055 488D45DF 		leaq	-33(%rbp), %rax
 7459 0059 4889C7   		movq	%rax, %rdi
 7460 005c E8000000 		call	_ZNSaIiED1Ev
 7460      00
 326:/usr/include/c++/6/bits/stl_vector.h ****       }
 7461              		.loc 30 326 0 is_stmt 1 discriminator 2
 7462 0061 488B45C8 		movq	-56(%rbp), %rax
 7463 0065 4889C7   		movq	%rax, %rdi
 7464 0068 E8000000 		call	_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv
 7464      00
 7465 006d 4989C5   		movq	%rax, %r13
 324:/usr/include/c++/6/bits/stl_vector.h **** 				      this->_M_impl._M_start,
 7466              		.loc 30 324 0 discriminator 2
 7467 0070 488B45C8 		movq	-56(%rbp), %rax
 7468 0074 488B18   		movq	(%rax), %rbx
 7469 0077 488B45C0 		movq	-64(%rbp), %rax
 7470 007b 4889C7   		movq	%rax, %rdi
 7471 007e E8000000 		call	_ZNKSt6vectorIiSaIiEE3endEv
 7471      00
 7472 0083 4989C4   		movq	%rax, %r12
 7473 0086 488B45C0 		movq	-64(%rbp), %rax
 7474 008a 4889C7   		movq	%rax, %rdi
 7475 008d E8000000 		call	_ZNKSt6vectorIiSaIiEE5beginEv
 7475      00
 7476 0092 4C89E9   		movq	%r13, %rcx
 7477 0095 4889DA   		movq	%rbx, %rdx
 7478 0098 4C89E6   		movq	%r12, %rsi
 7479 009b 4889C7   		movq	%rax, %rdi
 7480              	.LEHB58:
 7481 009e E8000000 		call	_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEPiiET0_T_SA
 7481      00
 7482              	.LEHE58:
 7483 00a3 4889C2   		movq	%rax, %rdx
 323:/usr/include/c++/6/bits/stl_vector.h **** 	  std::__uninitialized_copy_a(__x.begin(), __x.end(),
 7484              		.loc 30 323 0 discriminator 2
 7485 00a6 488B45C8 		movq	-56(%rbp), %rax
 7486 00aa 48895008 		movq	%rdx, 8(%rax)
 7487              	.LBE74:
 327:/usr/include/c++/6/bits/stl_vector.h **** 
 7488              		.loc 30 327 0 discriminator 2
 7489 00ae EB34     		jmp	.L334
 7490              	.L332:
 7491 00b0 4889C3   		movq	%rax, %rbx
 7492              	.LBB75:
 322:/usr/include/c++/6/bits/stl_vector.h ****       { this->_M_impl._M_finish =
 7493              		.loc 30 322 0
 7494 00b3 488D45DF 		leaq	-33(%rbp), %rax
 7495 00b7 4889C7   		movq	%rax, %rdi
 7496 00ba E8000000 		call	_ZNSaIiED1Ev
 7496      00
 7497 00bf 4889D8   		movq	%rbx, %rax
 7498 00c2 4889C7   		movq	%rax, %rdi
 7499              	.LEHB59:
 7500 00c5 E8000000 		call	_Unwind_Resume@PLT
 7500      00
 7501              	.L333:
GAS LISTING /tmp/ccsIN87E.s 			page 324


 7502 00ca 4889C3   		movq	%rax, %rbx
 7503 00cd 488B45C8 		movq	-56(%rbp), %rax
 7504 00d1 4889C7   		movq	%rax, %rdi
 7505 00d4 E8000000 		call	_ZNSt12_Vector_baseIiSaIiEED2Ev
 7505      00
 7506 00d9 4889D8   		movq	%rbx, %rax
 7507 00dc 4889C7   		movq	%rax, %rdi
 7508 00df E8000000 		call	_Unwind_Resume@PLT
 7508      00
 7509              	.LEHE59:
 7510              	.L334:
 7511              	.LBE75:
 327:/usr/include/c++/6/bits/stl_vector.h **** 
 7512              		.loc 30 327 0
 7513 00e4 4883C428 		addq	$40, %rsp
 7514 00e8 5B       		popq	%rbx
 7515 00e9 415C     		popq	%r12
 7516 00eb 415D     		popq	%r13
 7517 00ed 5D       		popq	%rbp
 7518              		.cfi_def_cfa 7, 8
 7519 00ee C3       		ret
 7520              		.cfi_endproc
 7521              	.LFE12262:
 7522              		.section	.gcc_except_table
 7523              	.LLSDA12262:
 7524 0114 FF       		.byte	0xff
 7525 0115 FF       		.byte	0xff
 7526 0116 01       		.byte	0x1
 7527 0117 14       		.uleb128 .LLSDACSE12262-.LLSDACSB12262
 7528              	.LLSDACSB12262:
 7529 0118 2E       		.uleb128 .LEHB56-.LFB12262
 7530 0119 05       		.uleb128 .LEHE56-.LEHB56
 7531 011a 00       		.uleb128 0
 7532 011b 00       		.uleb128 0
 7533 011c 50       		.uleb128 .LEHB57-.LFB12262
 7534 011d 05       		.uleb128 .LEHE57-.LEHB57
 7535 011e B001     		.uleb128 .L332-.LFB12262
 7536 0120 00       		.uleb128 0
 7537 0121 9E01     		.uleb128 .LEHB58-.LFB12262
 7538 0123 05       		.uleb128 .LEHE58-.LEHB58
 7539 0124 CA01     		.uleb128 .L333-.LFB12262
 7540 0126 00       		.uleb128 0
 7541 0127 C501     		.uleb128 .LEHB59-.LFB12262
 7542 0129 1F       		.uleb128 .LEHE59-.LEHB59
 7543 012a 00       		.uleb128 0
 7544 012b 00       		.uleb128 0
 7545              	.LLSDACSE12262:
 7546              		.section	.text._ZNSt6vectorIiSaIiEEC2ERKS1_,"axG",@progbits,_ZNSt6vectorIiSaIiEEC5ERKS1_,comdat
 7548              		.weak	_ZNSt6vectorIiSaIiEEC1ERKS1_
 7549              		.set	_ZNSt6vectorIiSaIiEEC1ERKS1_,_ZNSt6vectorIiSaIiEEC2ERKS1_
 7550              		.section	.text._ZN5boost10shared_ptrIN2gr11basic_blockEED2Ev,"axG",@progbits,_ZN5boost10shared_ptr
 7551              		.align 2
 7552              		.weak	_ZN5boost10shared_ptrIN2gr11basic_blockEED2Ev
 7554              	_ZN5boost10shared_ptrIN2gr11basic_blockEED2Ev:
 7555              	.LFB12283:
 336:/usr/include/boost/smart_ptr/shared_ptr.hpp **** {
 7556              		.loc 7 336 0
GAS LISTING /tmp/ccsIN87E.s 			page 325


 7557              		.cfi_startproc
 7558 0000 55       		pushq	%rbp
 7559              		.cfi_def_cfa_offset 16
 7560              		.cfi_offset 6, -16
 7561 0001 4889E5   		movq	%rsp, %rbp
 7562              		.cfi_def_cfa_register 6
 7563 0004 4883EC10 		subq	$16, %rsp
 7564 0008 48897DF8 		movq	%rdi, -8(%rbp)
 7565              	.LBB76:
 336:/usr/include/boost/smart_ptr/shared_ptr.hpp **** {
 7566              		.loc 7 336 0
 7567 000c 488B45F8 		movq	-8(%rbp), %rax
 7568 0010 4883C008 		addq	$8, %rax
 7569 0014 4889C7   		movq	%rax, %rdi
 7570 0017 E8000000 		call	_ZN5boost6detail12shared_countD1Ev
 7570      00
 7571              	.LBE76:
 7572 001c 90       		nop
 7573 001d C9       		leave
 7574              		.cfi_def_cfa 7, 8
 7575 001e C3       		ret
 7576              		.cfi_endproc
 7577              	.LFE12283:
 7579              		.weak	_ZN5boost10shared_ptrIN2gr11basic_blockEED1Ev
 7580              		.set	_ZN5boost10shared_ptrIN2gr11basic_blockEED1Ev,_ZN5boost10shared_ptrIN2gr11basic_blockEED2Ev
 7581              		.section	.text._ZN8gnuradio16get_initial_sptrIN2gr5lfast12costas2_implEEEN5boost10shared_ptrIT_EEP
 7582              		.weak	_ZN8gnuradio16get_initial_sptrIN2gr5lfast12costas2_implEEEN5boost10shared_ptrIT_EEPS6_
 7584              	_ZN8gnuradio16get_initial_sptrIN2gr5lfast12costas2_implEEEN5boost10shared_ptrIT_EEPS6_:
 7585              	.LFB12281:
 7586              		.file 31 "/home/mpiscopo/gnuradio/include/gnuradio/sptr_magic.h"
   1:/home/mpiscopo/gnuradio/include/gnuradio/sptr_magic.h **** /* -*- c++ -*- */
   2:/home/mpiscopo/gnuradio/include/gnuradio/sptr_magic.h **** /*
   3:/home/mpiscopo/gnuradio/include/gnuradio/sptr_magic.h ****  * Copyright 2008,2013 Free Software Foundation, Inc.
   4:/home/mpiscopo/gnuradio/include/gnuradio/sptr_magic.h ****  *
   5:/home/mpiscopo/gnuradio/include/gnuradio/sptr_magic.h ****  * This file is part of GNU Radio
   6:/home/mpiscopo/gnuradio/include/gnuradio/sptr_magic.h ****  *
   7:/home/mpiscopo/gnuradio/include/gnuradio/sptr_magic.h ****  * GNU Radio is free software; you can redistribute it and/or modify
   8:/home/mpiscopo/gnuradio/include/gnuradio/sptr_magic.h ****  * it under the terms of the GNU General Public License as published by
   9:/home/mpiscopo/gnuradio/include/gnuradio/sptr_magic.h ****  * the Free Software Foundation; either version 3, or (at your option)
  10:/home/mpiscopo/gnuradio/include/gnuradio/sptr_magic.h ****  * any later version.
  11:/home/mpiscopo/gnuradio/include/gnuradio/sptr_magic.h ****  *
  12:/home/mpiscopo/gnuradio/include/gnuradio/sptr_magic.h ****  * GNU Radio is distributed in the hope that it will be useful,
  13:/home/mpiscopo/gnuradio/include/gnuradio/sptr_magic.h ****  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  14:/home/mpiscopo/gnuradio/include/gnuradio/sptr_magic.h ****  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  15:/home/mpiscopo/gnuradio/include/gnuradio/sptr_magic.h ****  * GNU General Public License for more details.
  16:/home/mpiscopo/gnuradio/include/gnuradio/sptr_magic.h ****  *
  17:/home/mpiscopo/gnuradio/include/gnuradio/sptr_magic.h ****  * You should have received a copy of the GNU General Public License along
  18:/home/mpiscopo/gnuradio/include/gnuradio/sptr_magic.h ****  * with this program; if not, write to the Free Software Foundation, Inc.,
  19:/home/mpiscopo/gnuradio/include/gnuradio/sptr_magic.h ****  * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
  20:/home/mpiscopo/gnuradio/include/gnuradio/sptr_magic.h ****  */
  21:/home/mpiscopo/gnuradio/include/gnuradio/sptr_magic.h **** 
  22:/home/mpiscopo/gnuradio/include/gnuradio/sptr_magic.h **** #ifndef INCLUDED_GR_RUNTIME_SPTR_MAGIC_H
  23:/home/mpiscopo/gnuradio/include/gnuradio/sptr_magic.h **** #define INCLUDED_GR_RUNTIME_SPTR_MAGIC_H
  24:/home/mpiscopo/gnuradio/include/gnuradio/sptr_magic.h **** 
  25:/home/mpiscopo/gnuradio/include/gnuradio/sptr_magic.h **** #include <gnuradio/api.h>
  26:/home/mpiscopo/gnuradio/include/gnuradio/sptr_magic.h **** #include <boost/shared_ptr.hpp>
  27:/home/mpiscopo/gnuradio/include/gnuradio/sptr_magic.h **** 
GAS LISTING /tmp/ccsIN87E.s 			page 326


  28:/home/mpiscopo/gnuradio/include/gnuradio/sptr_magic.h **** namespace gr {
  29:/home/mpiscopo/gnuradio/include/gnuradio/sptr_magic.h ****   class basic_block;
  30:/home/mpiscopo/gnuradio/include/gnuradio/sptr_magic.h ****   class hier_block2;
  31:/home/mpiscopo/gnuradio/include/gnuradio/sptr_magic.h **** }
  32:/home/mpiscopo/gnuradio/include/gnuradio/sptr_magic.h **** 
  33:/home/mpiscopo/gnuradio/include/gnuradio/sptr_magic.h **** namespace gnuradio {
  34:/home/mpiscopo/gnuradio/include/gnuradio/sptr_magic.h ****   namespace detail {
  35:/home/mpiscopo/gnuradio/include/gnuradio/sptr_magic.h **** 
  36:/home/mpiscopo/gnuradio/include/gnuradio/sptr_magic.h ****     class GR_RUNTIME_API sptr_magic
  37:/home/mpiscopo/gnuradio/include/gnuradio/sptr_magic.h ****     {
  38:/home/mpiscopo/gnuradio/include/gnuradio/sptr_magic.h ****     public:
  39:/home/mpiscopo/gnuradio/include/gnuradio/sptr_magic.h ****       static boost::shared_ptr<gr::basic_block> fetch_initial_sptr(gr::basic_block *p);
  40:/home/mpiscopo/gnuradio/include/gnuradio/sptr_magic.h ****       static void create_and_stash_initial_sptr(gr::hier_block2 *p);
  41:/home/mpiscopo/gnuradio/include/gnuradio/sptr_magic.h ****       static void cancel_initial_sptr(gr::hier_block2 *p);
  42:/home/mpiscopo/gnuradio/include/gnuradio/sptr_magic.h ****     };
  43:/home/mpiscopo/gnuradio/include/gnuradio/sptr_magic.h ****   };
  44:/home/mpiscopo/gnuradio/include/gnuradio/sptr_magic.h **** 
  45:/home/mpiscopo/gnuradio/include/gnuradio/sptr_magic.h ****   /*
  46:/home/mpiscopo/gnuradio/include/gnuradio/sptr_magic.h ****    * \brief New!  Improved!  Standard method to get/create the
  47:/home/mpiscopo/gnuradio/include/gnuradio/sptr_magic.h ****    * boost::shared_ptr for a block.
  48:/home/mpiscopo/gnuradio/include/gnuradio/sptr_magic.h ****    */
  49:/home/mpiscopo/gnuradio/include/gnuradio/sptr_magic.h ****   template<class T>
  50:/home/mpiscopo/gnuradio/include/gnuradio/sptr_magic.h ****   boost::shared_ptr<T>
  51:/home/mpiscopo/gnuradio/include/gnuradio/sptr_magic.h ****   get_initial_sptr(T *p)
 7587              		.loc 31 51 0
 7588              		.cfi_startproc
 7589 0000 55       		pushq	%rbp
 7590              		.cfi_def_cfa_offset 16
 7591              		.cfi_offset 6, -16
 7592 0001 4889E5   		movq	%rsp, %rbp
 7593              		.cfi_def_cfa_register 6
 7594 0004 4883EC20 		subq	$32, %rsp
 7595 0008 48897DE8 		movq	%rdi, -24(%rbp)
 7596 000c 488975E0 		movq	%rsi, -32(%rbp)
  52:/home/mpiscopo/gnuradio/include/gnuradio/sptr_magic.h ****   {
  53:/home/mpiscopo/gnuradio/include/gnuradio/sptr_magic.h ****     return boost::dynamic_pointer_cast<T, gr::basic_block>
  54:/home/mpiscopo/gnuradio/include/gnuradio/sptr_magic.h ****       (detail::sptr_magic::fetch_initial_sptr(p));
 7597              		.loc 31 54 0
 7598 0010 48837DE0 		cmpq	$0, -32(%rbp)
 7598      00
 7599 0015 741A     		je	.L337
 7600              		.loc 31 54 0 is_stmt 0 discriminator 1
 7601 0017 488B45E0 		movq	-32(%rbp), %rax
 7602 001b 488B00   		movq	(%rax), %rax
 7603 001e 4883E818 		subq	$24, %rax
 7604 0022 488B00   		movq	(%rax), %rax
 7605 0025 4889C2   		movq	%rax, %rdx
 7606 0028 488B45E0 		movq	-32(%rbp), %rax
 7607 002c 4801C2   		addq	%rax, %rdx
 7608 002f EB05     		jmp	.L338
 7609              	.L337:
 7610              		.loc 31 54 0 discriminator 2
 7611 0031 BA000000 		movl	$0, %edx
 7611      00
 7612              	.L338:
 7613              		.loc 31 54 0 discriminator 4
 7614 0036 488D45F0 		leaq	-16(%rbp), %rax
GAS LISTING /tmp/ccsIN87E.s 			page 327


 7615 003a 4889D6   		movq	%rdx, %rsi
 7616 003d 4889C7   		movq	%rax, %rdi
 7617 0040 E8000000 		call	_ZN8gnuradio6detail10sptr_magic18fetch_initial_sptrEPN2gr11basic_blockE@PLT
 7617      00
 7618 0045 488B45E8 		movq	-24(%rbp), %rax
 7619 0049 488D55F0 		leaq	-16(%rbp), %rdx
 7620 004d 4889D6   		movq	%rdx, %rsi
 7621 0050 4889C7   		movq	%rax, %rdi
 7622 0053 E8000000 		call	_ZN5boost20dynamic_pointer_castIN2gr5lfast12costas2_implENS1_11basic_blockEEENS_10shared_ptrI
 7622      00
 7623 0058 488D45F0 		leaq	-16(%rbp), %rax
 7624 005c 4889C7   		movq	%rax, %rdi
 7625 005f E8000000 		call	_ZN5boost10shared_ptrIN2gr11basic_blockEED1Ev
 7625      00
  55:/home/mpiscopo/gnuradio/include/gnuradio/sptr_magic.h ****   }
 7626              		.loc 31 55 0 is_stmt 1 discriminator 4
 7627 0064 488B45E8 		movq	-24(%rbp), %rax
 7628 0068 C9       		leave
 7629              		.cfi_def_cfa 7, 8
 7630 0069 C3       		ret
 7631              		.cfi_endproc
 7632              	.LFE12281:
 7634              		.section	.text._ZN5boost10shared_ptrIN2gr5lfast7costas2EEC2INS2_12costas2_implEEEONS0_IT_EENS_6det
 7635              		.align 2
 7636              		.weak	_ZN5boost10shared_ptrIN2gr5lfast7costas2EEC2INS2_12costas2_implEEEONS0_IT_EENS_6detail24sp_e
 7638              	_ZN5boost10shared_ptrIN2gr5lfast7costas2EEC2INS2_12costas2_implEEEONS0_IT_EENS_6detail24sp_enable_i
 7639              	.LFB12286:
 408:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 409:/usr/include/boost/smart_ptr/shared_ptr.hpp **** #endif
 410:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 411:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     template<class Y>
 412:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     explicit shared_ptr( weak_ptr<Y> const & r ): pn( r.pn ) // may throw
 413:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     {
 414:/usr/include/boost/smart_ptr/shared_ptr.hpp ****         boost::detail::sp_assert_convertible< Y, T >();
 415:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 416:/usr/include/boost/smart_ptr/shared_ptr.hpp ****         // it is now safe to copy r.px, as pn(r.pn) did not throw
 417:/usr/include/boost/smart_ptr/shared_ptr.hpp ****         px = r.px;
 418:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     }
 419:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 420:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     template<class Y>
 421:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     shared_ptr( weak_ptr<Y> const & r, boost::detail::sp_nothrow_tag )
 422:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     BOOST_NOEXCEPT : px( 0 ), pn( r.pn, boost::detail::sp_nothrow_tag() )
 423:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     {
 424:/usr/include/boost/smart_ptr/shared_ptr.hpp ****         if( !pn.empty() )
 425:/usr/include/boost/smart_ptr/shared_ptr.hpp ****         {
 426:/usr/include/boost/smart_ptr/shared_ptr.hpp ****             px = r.px;
 427:/usr/include/boost/smart_ptr/shared_ptr.hpp ****         }
 428:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     }
 429:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 430:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     template<class Y>
 431:/usr/include/boost/smart_ptr/shared_ptr.hpp **** #if !defined( BOOST_SP_NO_SP_CONVERTIBLE )
 432:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 433:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     shared_ptr( shared_ptr<Y> const & r, typename boost::detail::sp_enable_if_convertible<Y,T>::typ
 434:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 435:/usr/include/boost/smart_ptr/shared_ptr.hpp **** #else
 436:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 437:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     shared_ptr( shared_ptr<Y> const & r )
GAS LISTING /tmp/ccsIN87E.s 			page 328


 438:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 439:/usr/include/boost/smart_ptr/shared_ptr.hpp **** #endif
 440:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     BOOST_NOEXCEPT : px( r.px ), pn( r.pn )
 441:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     {
 442:/usr/include/boost/smart_ptr/shared_ptr.hpp ****         boost::detail::sp_assert_convertible< Y, T >();
 443:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     }
 444:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 445:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     // aliasing
 446:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     template< class Y >
 447:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     shared_ptr( shared_ptr<Y> const & r, element_type * p ) BOOST_NOEXCEPT : px( p ), pn( r.pn )
 448:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     {
 449:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     }
 450:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 451:/usr/include/boost/smart_ptr/shared_ptr.hpp **** #ifndef BOOST_NO_AUTO_PTR
 452:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 453:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     template<class Y>
 454:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     explicit shared_ptr( std::auto_ptr<Y> & r ): px(r.get()), pn()
 455:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     {
 456:/usr/include/boost/smart_ptr/shared_ptr.hpp ****         boost::detail::sp_assert_convertible< Y, T >();
 457:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 458:/usr/include/boost/smart_ptr/shared_ptr.hpp ****         Y * tmp = r.get();
 459:/usr/include/boost/smart_ptr/shared_ptr.hpp ****         pn = boost::detail::shared_count( r );
 460:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 461:/usr/include/boost/smart_ptr/shared_ptr.hpp ****         boost::detail::sp_deleter_construct( this, tmp );
 462:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     }
 463:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 464:/usr/include/boost/smart_ptr/shared_ptr.hpp **** #if !defined( BOOST_NO_CXX11_RVALUE_REFERENCES )
 465:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 466:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     template<class Y>
 467:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     shared_ptr( std::auto_ptr<Y> && r ): px(r.get()), pn()
 468:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     {
 469:/usr/include/boost/smart_ptr/shared_ptr.hpp ****         boost::detail::sp_assert_convertible< Y, T >();
 470:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 471:/usr/include/boost/smart_ptr/shared_ptr.hpp ****         Y * tmp = r.get();
 472:/usr/include/boost/smart_ptr/shared_ptr.hpp ****         pn = boost::detail::shared_count( r );
 473:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 474:/usr/include/boost/smart_ptr/shared_ptr.hpp ****         boost::detail::sp_deleter_construct( this, tmp );
 475:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     }
 476:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 477:/usr/include/boost/smart_ptr/shared_ptr.hpp **** #elif !defined( BOOST_NO_SFINAE ) && !defined( BOOST_NO_TEMPLATE_PARTIAL_SPECIALIZATION )
 478:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 479:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     template<class Ap>
 480:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     explicit shared_ptr( Ap r, typename boost::detail::sp_enable_if_auto_ptr<Ap, int>::type = 0 ): 
 481:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     {
 482:/usr/include/boost/smart_ptr/shared_ptr.hpp ****         typedef typename Ap::element_type Y;
 483:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 484:/usr/include/boost/smart_ptr/shared_ptr.hpp ****         boost::detail::sp_assert_convertible< Y, T >();
 485:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 486:/usr/include/boost/smart_ptr/shared_ptr.hpp ****         Y * tmp = r.get();
 487:/usr/include/boost/smart_ptr/shared_ptr.hpp ****         pn = boost::detail::shared_count( r );
 488:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 489:/usr/include/boost/smart_ptr/shared_ptr.hpp ****         boost::detail::sp_deleter_construct( this, tmp );
 490:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     }
 491:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 492:/usr/include/boost/smart_ptr/shared_ptr.hpp **** #endif // BOOST_NO_SFINAE, BOOST_NO_TEMPLATE_PARTIAL_SPECIALIZATION
 493:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 494:/usr/include/boost/smart_ptr/shared_ptr.hpp **** #endif // BOOST_NO_AUTO_PTR
GAS LISTING /tmp/ccsIN87E.s 			page 329


 495:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 496:/usr/include/boost/smart_ptr/shared_ptr.hpp **** #if !defined( BOOST_NO_CXX11_SMART_PTR ) && !defined( BOOST_NO_CXX11_RVALUE_REFERENCES )
 497:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 498:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     template< class Y, class D >
 499:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     shared_ptr( std::unique_ptr< Y, D > && r ): px( r.get() ), pn()
 500:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     {
 501:/usr/include/boost/smart_ptr/shared_ptr.hpp ****         boost::detail::sp_assert_convertible< Y, T >();
 502:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 503:/usr/include/boost/smart_ptr/shared_ptr.hpp ****         typename std::unique_ptr< Y, D >::pointer tmp = r.get();
 504:/usr/include/boost/smart_ptr/shared_ptr.hpp ****         pn = boost::detail::shared_count( r );
 505:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 506:/usr/include/boost/smart_ptr/shared_ptr.hpp ****         boost::detail::sp_deleter_construct( this, tmp );
 507:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     }
 508:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 509:/usr/include/boost/smart_ptr/shared_ptr.hpp **** #endif
 510:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 511:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     template< class Y, class D >
 512:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     shared_ptr( boost::movelib::unique_ptr< Y, D > r ): px( r.get() ), pn()
 513:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     {
 514:/usr/include/boost/smart_ptr/shared_ptr.hpp ****         boost::detail::sp_assert_convertible< Y, T >();
 515:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 516:/usr/include/boost/smart_ptr/shared_ptr.hpp ****         typename boost::movelib::unique_ptr< Y, D >::pointer tmp = r.get();
 517:/usr/include/boost/smart_ptr/shared_ptr.hpp ****         pn = boost::detail::shared_count( r );
 518:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 519:/usr/include/boost/smart_ptr/shared_ptr.hpp ****         boost::detail::sp_deleter_construct( this, tmp );
 520:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     }
 521:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 522:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     // assignment
 523:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 524:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     shared_ptr & operator=( shared_ptr const & r ) BOOST_NOEXCEPT
 525:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     {
 526:/usr/include/boost/smart_ptr/shared_ptr.hpp ****         this_type(r).swap(*this);
 527:/usr/include/boost/smart_ptr/shared_ptr.hpp ****         return *this;
 528:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     }
 529:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 530:/usr/include/boost/smart_ptr/shared_ptr.hpp **** #if !defined(BOOST_MSVC) || (BOOST_MSVC >= 1400)
 531:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 532:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     template<class Y>
 533:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     shared_ptr & operator=(shared_ptr<Y> const & r) BOOST_NOEXCEPT
 534:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     {
 535:/usr/include/boost/smart_ptr/shared_ptr.hpp ****         this_type(r).swap(*this);
 536:/usr/include/boost/smart_ptr/shared_ptr.hpp ****         return *this;
 537:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     }
 538:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 539:/usr/include/boost/smart_ptr/shared_ptr.hpp **** #endif
 540:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 541:/usr/include/boost/smart_ptr/shared_ptr.hpp **** #ifndef BOOST_NO_AUTO_PTR
 542:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 543:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     template<class Y>
 544:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     shared_ptr & operator=( std::auto_ptr<Y> & r )
 545:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     {
 546:/usr/include/boost/smart_ptr/shared_ptr.hpp ****         this_type( r ).swap( *this );
 547:/usr/include/boost/smart_ptr/shared_ptr.hpp ****         return *this;
 548:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     }
 549:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 550:/usr/include/boost/smart_ptr/shared_ptr.hpp **** #if !defined( BOOST_NO_CXX11_RVALUE_REFERENCES )
 551:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
GAS LISTING /tmp/ccsIN87E.s 			page 330


 552:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     template<class Y>
 553:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     shared_ptr & operator=( std::auto_ptr<Y> && r )
 554:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     {
 555:/usr/include/boost/smart_ptr/shared_ptr.hpp ****         this_type( static_cast< std::auto_ptr<Y> && >( r ) ).swap( *this );
 556:/usr/include/boost/smart_ptr/shared_ptr.hpp ****         return *this;
 557:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     }
 558:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 559:/usr/include/boost/smart_ptr/shared_ptr.hpp **** #elif !defined( BOOST_NO_SFINAE ) && !defined( BOOST_NO_TEMPLATE_PARTIAL_SPECIALIZATION )
 560:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 561:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     template<class Ap>
 562:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     typename boost::detail::sp_enable_if_auto_ptr< Ap, shared_ptr & >::type operator=( Ap r )
 563:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     {
 564:/usr/include/boost/smart_ptr/shared_ptr.hpp ****         this_type( r ).swap( *this );
 565:/usr/include/boost/smart_ptr/shared_ptr.hpp ****         return *this;
 566:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     }
 567:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 568:/usr/include/boost/smart_ptr/shared_ptr.hpp **** #endif // BOOST_NO_SFINAE, BOOST_NO_TEMPLATE_PARTIAL_SPECIALIZATION
 569:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 570:/usr/include/boost/smart_ptr/shared_ptr.hpp **** #endif // BOOST_NO_AUTO_PTR
 571:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 572:/usr/include/boost/smart_ptr/shared_ptr.hpp **** #if !defined( BOOST_NO_CXX11_SMART_PTR ) && !defined( BOOST_NO_CXX11_RVALUE_REFERENCES )
 573:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 574:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     template<class Y, class D>
 575:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     shared_ptr & operator=( std::unique_ptr<Y, D> && r )
 576:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     {
 577:/usr/include/boost/smart_ptr/shared_ptr.hpp ****         this_type( static_cast< std::unique_ptr<Y, D> && >( r ) ).swap(*this);
 578:/usr/include/boost/smart_ptr/shared_ptr.hpp ****         return *this;
 579:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     }
 580:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 581:/usr/include/boost/smart_ptr/shared_ptr.hpp **** #endif
 582:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 583:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     template<class Y, class D>
 584:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     shared_ptr & operator=( boost::movelib::unique_ptr<Y, D> r )
 585:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     {
 586:/usr/include/boost/smart_ptr/shared_ptr.hpp ****         // this_type( static_cast< unique_ptr<Y, D> && >( r ) ).swap( *this );
 587:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 588:/usr/include/boost/smart_ptr/shared_ptr.hpp ****         boost::detail::sp_assert_convertible< Y, T >();
 589:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 590:/usr/include/boost/smart_ptr/shared_ptr.hpp ****         typename boost::movelib::unique_ptr< Y, D >::pointer p = r.get();
 591:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 592:/usr/include/boost/smart_ptr/shared_ptr.hpp ****         shared_ptr tmp;
 593:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 594:/usr/include/boost/smart_ptr/shared_ptr.hpp ****         tmp.px = p;
 595:/usr/include/boost/smart_ptr/shared_ptr.hpp ****         tmp.pn = boost::detail::shared_count( r );
 596:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 597:/usr/include/boost/smart_ptr/shared_ptr.hpp ****         boost::detail::sp_deleter_construct( &tmp, p );
 598:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 599:/usr/include/boost/smart_ptr/shared_ptr.hpp ****         tmp.swap( *this );
 600:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 601:/usr/include/boost/smart_ptr/shared_ptr.hpp ****         return *this;
 602:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     }
 603:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 604:/usr/include/boost/smart_ptr/shared_ptr.hpp **** // Move support
 605:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 606:/usr/include/boost/smart_ptr/shared_ptr.hpp **** #if !defined( BOOST_NO_CXX11_RVALUE_REFERENCES )
 607:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 608:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     shared_ptr( shared_ptr && r ) BOOST_NOEXCEPT : px( r.px ), pn()
GAS LISTING /tmp/ccsIN87E.s 			page 331


 609:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     {
 610:/usr/include/boost/smart_ptr/shared_ptr.hpp ****         pn.swap( r.pn );
 611:/usr/include/boost/smart_ptr/shared_ptr.hpp ****         r.px = 0;
 612:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     }
 613:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 614:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     template<class Y>
 615:/usr/include/boost/smart_ptr/shared_ptr.hpp **** #if !defined( BOOST_SP_NO_SP_CONVERTIBLE )
 616:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 617:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     shared_ptr( shared_ptr<Y> && r, typename boost::detail::sp_enable_if_convertible<Y,T>::type = b
 7640              		.loc 7 617 0
 7641              		.cfi_startproc
 7642 0000 55       		pushq	%rbp
 7643              		.cfi_def_cfa_offset 16
 7644              		.cfi_offset 6, -16
 7645 0001 4889E5   		movq	%rsp, %rbp
 7646              		.cfi_def_cfa_register 6
 7647 0004 4883EC10 		subq	$16, %rsp
 7648 0008 48897DF8 		movq	%rdi, -8(%rbp)
 7649 000c 488975F0 		movq	%rsi, -16(%rbp)
 7650              	.LBB77:
 618:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 619:/usr/include/boost/smart_ptr/shared_ptr.hpp **** #else
 620:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 621:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     shared_ptr( shared_ptr<Y> && r )
 622:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 623:/usr/include/boost/smart_ptr/shared_ptr.hpp **** #endif
 624:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     BOOST_NOEXCEPT : px( r.px ), pn()
 7651              		.loc 7 624 0
 7652 0010 488B45F0 		movq	-16(%rbp), %rax
 7653 0014 488B10   		movq	(%rax), %rdx
 7654 0017 488B45F8 		movq	-8(%rbp), %rax
 7655 001b 488910   		movq	%rdx, (%rax)
 7656 001e 488B45F8 		movq	-8(%rbp), %rax
 7657 0022 4883C008 		addq	$8, %rax
 7658 0026 4889C7   		movq	%rax, %rdi
 7659 0029 E8000000 		call	_ZN5boost6detail12shared_countC1Ev
 7659      00
 625:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     {
 626:/usr/include/boost/smart_ptr/shared_ptr.hpp ****         boost::detail::sp_assert_convertible< Y, T >();
 7660              		.loc 7 626 0
 7661 002e E8000000 		call	_ZN5boost6detail21sp_assert_convertibleIN2gr5lfast12costas2_implENS3_7costas2EEEvv
 7661      00
 627:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 628:/usr/include/boost/smart_ptr/shared_ptr.hpp ****         pn.swap( r.pn );
 7662              		.loc 7 628 0
 7663 0033 488B45F0 		movq	-16(%rbp), %rax
 7664 0037 488D5008 		leaq	8(%rax), %rdx
 7665 003b 488B45F8 		movq	-8(%rbp), %rax
 7666 003f 4883C008 		addq	$8, %rax
 7667 0043 4889D6   		movq	%rdx, %rsi
 7668 0046 4889C7   		movq	%rax, %rdi
 7669 0049 E8000000 		call	_ZN5boost6detail12shared_count4swapERS1_
 7669      00
 629:/usr/include/boost/smart_ptr/shared_ptr.hpp ****         r.px = 0;
 7670              		.loc 7 629 0
 7671 004e 488B45F0 		movq	-16(%rbp), %rax
 7672 0052 48C70000 		movq	$0, (%rax)
GAS LISTING /tmp/ccsIN87E.s 			page 332


 7672      000000
 7673              	.LBE77:
 630:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     }
 7674              		.loc 7 630 0
 7675 0059 90       		nop
 7676 005a C9       		leave
 7677              		.cfi_def_cfa 7, 8
 7678 005b C3       		ret
 7679              		.cfi_endproc
 7680              	.LFE12286:
 7682              		.weak	_ZN5boost10shared_ptrIN2gr5lfast7costas2EEC1INS2_12costas2_implEEEONS0_IT_EENS_6detail24sp_e
 7683              		.set	_ZN5boost10shared_ptrIN2gr5lfast7costas2EEC1INS2_12costas2_implEEEONS0_IT_EENS_6detail24sp_en
 7684              		.section	.text._ZNSt6vectorIPKvSaIS1_EEixEm,"axG",@progbits,_ZNSt6vectorIPKvSaIS1_EEixEm,comdat
 7685              		.align 2
 7686              		.weak	_ZNSt6vectorIPKvSaIS1_EEixEm
 7688              	_ZNSt6vectorIPKvSaIS1_EEixEm:
 7689              	.LFB12294:
 428:/usr/include/c++/6/bits/stl_vector.h **** 
 429:/usr/include/c++/6/bits/stl_vector.h ****       /**
 430:/usr/include/c++/6/bits/stl_vector.h ****        *  @brief  %Vector assignment operator.
 431:/usr/include/c++/6/bits/stl_vector.h ****        *  @param  __x  A %vector of identical element and allocator types.
 432:/usr/include/c++/6/bits/stl_vector.h ****        *
 433:/usr/include/c++/6/bits/stl_vector.h ****        *  All the elements of @a __x are copied, but any extra memory in
 434:/usr/include/c++/6/bits/stl_vector.h ****        *  @a __x (for fast expansion) will not be copied.  Unlike the
 435:/usr/include/c++/6/bits/stl_vector.h ****        *  copy constructor, the allocator object is not copied.
 436:/usr/include/c++/6/bits/stl_vector.h ****        */
 437:/usr/include/c++/6/bits/stl_vector.h ****       vector&
 438:/usr/include/c++/6/bits/stl_vector.h ****       operator=(const vector& __x);
 439:/usr/include/c++/6/bits/stl_vector.h **** 
 440:/usr/include/c++/6/bits/stl_vector.h **** #if __cplusplus >= 201103L
 441:/usr/include/c++/6/bits/stl_vector.h ****       /**
 442:/usr/include/c++/6/bits/stl_vector.h ****        *  @brief  %Vector move assignment operator.
 443:/usr/include/c++/6/bits/stl_vector.h ****        *  @param  __x  A %vector of identical element and allocator types.
 444:/usr/include/c++/6/bits/stl_vector.h ****        *
 445:/usr/include/c++/6/bits/stl_vector.h ****        *  The contents of @a __x are moved into this %vector (without copying,
 446:/usr/include/c++/6/bits/stl_vector.h ****        *  if the allocators permit it).
 447:/usr/include/c++/6/bits/stl_vector.h ****        *  @a __x is a valid, but unspecified %vector.
 448:/usr/include/c++/6/bits/stl_vector.h ****        */
 449:/usr/include/c++/6/bits/stl_vector.h ****       vector&
 450:/usr/include/c++/6/bits/stl_vector.h ****       operator=(vector&& __x) noexcept(_Alloc_traits::_S_nothrow_move())
 451:/usr/include/c++/6/bits/stl_vector.h ****       {
 452:/usr/include/c++/6/bits/stl_vector.h ****         constexpr bool __move_storage =
 453:/usr/include/c++/6/bits/stl_vector.h ****           _Alloc_traits::_S_propagate_on_move_assign()
 454:/usr/include/c++/6/bits/stl_vector.h ****           || _Alloc_traits::_S_always_equal();
 455:/usr/include/c++/6/bits/stl_vector.h ****         _M_move_assign(std::move(__x), __bool_constant<__move_storage>());
 456:/usr/include/c++/6/bits/stl_vector.h **** 	return *this;
 457:/usr/include/c++/6/bits/stl_vector.h ****       }
 458:/usr/include/c++/6/bits/stl_vector.h **** 
 459:/usr/include/c++/6/bits/stl_vector.h ****       /**
 460:/usr/include/c++/6/bits/stl_vector.h ****        *  @brief  %Vector list assignment operator.
 461:/usr/include/c++/6/bits/stl_vector.h ****        *  @param  __l  An initializer_list.
 462:/usr/include/c++/6/bits/stl_vector.h ****        *
 463:/usr/include/c++/6/bits/stl_vector.h ****        *  This function fills a %vector with copies of the elements in the
 464:/usr/include/c++/6/bits/stl_vector.h ****        *  initializer list @a __l.
 465:/usr/include/c++/6/bits/stl_vector.h ****        *
 466:/usr/include/c++/6/bits/stl_vector.h ****        *  Note that the assignment completely changes the %vector and
 467:/usr/include/c++/6/bits/stl_vector.h ****        *  that the resulting %vector's size is the same as the number
GAS LISTING /tmp/ccsIN87E.s 			page 333


 468:/usr/include/c++/6/bits/stl_vector.h ****        *  of elements assigned.  Old data may be lost.
 469:/usr/include/c++/6/bits/stl_vector.h ****        */
 470:/usr/include/c++/6/bits/stl_vector.h ****       vector&
 471:/usr/include/c++/6/bits/stl_vector.h ****       operator=(initializer_list<value_type> __l)
 472:/usr/include/c++/6/bits/stl_vector.h ****       {
 473:/usr/include/c++/6/bits/stl_vector.h **** 	this->assign(__l.begin(), __l.end());
 474:/usr/include/c++/6/bits/stl_vector.h **** 	return *this;
 475:/usr/include/c++/6/bits/stl_vector.h ****       }
 476:/usr/include/c++/6/bits/stl_vector.h **** #endif
 477:/usr/include/c++/6/bits/stl_vector.h **** 
 478:/usr/include/c++/6/bits/stl_vector.h ****       /**
 479:/usr/include/c++/6/bits/stl_vector.h ****        *  @brief  Assigns a given value to a %vector.
 480:/usr/include/c++/6/bits/stl_vector.h ****        *  @param  __n  Number of elements to be assigned.
 481:/usr/include/c++/6/bits/stl_vector.h ****        *  @param  __val  Value to be assigned.
 482:/usr/include/c++/6/bits/stl_vector.h ****        *
 483:/usr/include/c++/6/bits/stl_vector.h ****        *  This function fills a %vector with @a __n copies of the given
 484:/usr/include/c++/6/bits/stl_vector.h ****        *  value.  Note that the assignment completely changes the
 485:/usr/include/c++/6/bits/stl_vector.h ****        *  %vector and that the resulting %vector's size is the same as
 486:/usr/include/c++/6/bits/stl_vector.h ****        *  the number of elements assigned.  Old data may be lost.
 487:/usr/include/c++/6/bits/stl_vector.h ****        */
 488:/usr/include/c++/6/bits/stl_vector.h ****       void
 489:/usr/include/c++/6/bits/stl_vector.h ****       assign(size_type __n, const value_type& __val)
 490:/usr/include/c++/6/bits/stl_vector.h ****       { _M_fill_assign(__n, __val); }
 491:/usr/include/c++/6/bits/stl_vector.h **** 
 492:/usr/include/c++/6/bits/stl_vector.h ****       /**
 493:/usr/include/c++/6/bits/stl_vector.h ****        *  @brief  Assigns a range to a %vector.
 494:/usr/include/c++/6/bits/stl_vector.h ****        *  @param  __first  An input iterator.
 495:/usr/include/c++/6/bits/stl_vector.h ****        *  @param  __last   An input iterator.
 496:/usr/include/c++/6/bits/stl_vector.h ****        *
 497:/usr/include/c++/6/bits/stl_vector.h ****        *  This function fills a %vector with copies of the elements in the
 498:/usr/include/c++/6/bits/stl_vector.h ****        *  range [__first,__last).
 499:/usr/include/c++/6/bits/stl_vector.h ****        *
 500:/usr/include/c++/6/bits/stl_vector.h ****        *  Note that the assignment completely changes the %vector and
 501:/usr/include/c++/6/bits/stl_vector.h ****        *  that the resulting %vector's size is the same as the number
 502:/usr/include/c++/6/bits/stl_vector.h ****        *  of elements assigned.  Old data may be lost.
 503:/usr/include/c++/6/bits/stl_vector.h ****        */
 504:/usr/include/c++/6/bits/stl_vector.h **** #if __cplusplus >= 201103L
 505:/usr/include/c++/6/bits/stl_vector.h ****       template<typename _InputIterator,
 506:/usr/include/c++/6/bits/stl_vector.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
 507:/usr/include/c++/6/bits/stl_vector.h ****         void
 508:/usr/include/c++/6/bits/stl_vector.h ****         assign(_InputIterator __first, _InputIterator __last)
 509:/usr/include/c++/6/bits/stl_vector.h ****         { _M_assign_dispatch(__first, __last, __false_type()); }
 510:/usr/include/c++/6/bits/stl_vector.h **** #else
 511:/usr/include/c++/6/bits/stl_vector.h ****       template<typename _InputIterator>
 512:/usr/include/c++/6/bits/stl_vector.h ****         void
 513:/usr/include/c++/6/bits/stl_vector.h ****         assign(_InputIterator __first, _InputIterator __last)
 514:/usr/include/c++/6/bits/stl_vector.h ****         {
 515:/usr/include/c++/6/bits/stl_vector.h **** 	  // Check whether it's an integral type.  If so, it's not an iterator.
 516:/usr/include/c++/6/bits/stl_vector.h **** 	  typedef typename std::__is_integer<_InputIterator>::__type _Integral;
 517:/usr/include/c++/6/bits/stl_vector.h **** 	  _M_assign_dispatch(__first, __last, _Integral());
 518:/usr/include/c++/6/bits/stl_vector.h **** 	}
 519:/usr/include/c++/6/bits/stl_vector.h **** #endif
 520:/usr/include/c++/6/bits/stl_vector.h **** 
 521:/usr/include/c++/6/bits/stl_vector.h **** #if __cplusplus >= 201103L
 522:/usr/include/c++/6/bits/stl_vector.h ****       /**
 523:/usr/include/c++/6/bits/stl_vector.h ****        *  @brief  Assigns an initializer list to a %vector.
 524:/usr/include/c++/6/bits/stl_vector.h ****        *  @param  __l  An initializer_list.
GAS LISTING /tmp/ccsIN87E.s 			page 334


 525:/usr/include/c++/6/bits/stl_vector.h ****        *
 526:/usr/include/c++/6/bits/stl_vector.h ****        *  This function fills a %vector with copies of the elements in the
 527:/usr/include/c++/6/bits/stl_vector.h ****        *  initializer list @a __l.
 528:/usr/include/c++/6/bits/stl_vector.h ****        *
 529:/usr/include/c++/6/bits/stl_vector.h ****        *  Note that the assignment completely changes the %vector and
 530:/usr/include/c++/6/bits/stl_vector.h ****        *  that the resulting %vector's size is the same as the number
 531:/usr/include/c++/6/bits/stl_vector.h ****        *  of elements assigned.  Old data may be lost.
 532:/usr/include/c++/6/bits/stl_vector.h ****        */
 533:/usr/include/c++/6/bits/stl_vector.h ****       void
 534:/usr/include/c++/6/bits/stl_vector.h ****       assign(initializer_list<value_type> __l)
 535:/usr/include/c++/6/bits/stl_vector.h ****       { this->assign(__l.begin(), __l.end()); }
 536:/usr/include/c++/6/bits/stl_vector.h **** #endif
 537:/usr/include/c++/6/bits/stl_vector.h **** 
 538:/usr/include/c++/6/bits/stl_vector.h ****       /// Get a copy of the memory allocation object.
 539:/usr/include/c++/6/bits/stl_vector.h ****       using _Base::get_allocator;
 540:/usr/include/c++/6/bits/stl_vector.h **** 
 541:/usr/include/c++/6/bits/stl_vector.h ****       // iterators
 542:/usr/include/c++/6/bits/stl_vector.h ****       /**
 543:/usr/include/c++/6/bits/stl_vector.h ****        *  Returns a read/write iterator that points to the first
 544:/usr/include/c++/6/bits/stl_vector.h ****        *  element in the %vector.  Iteration is done in ordinary
 545:/usr/include/c++/6/bits/stl_vector.h ****        *  element order.
 546:/usr/include/c++/6/bits/stl_vector.h ****        */
 547:/usr/include/c++/6/bits/stl_vector.h ****       iterator
 548:/usr/include/c++/6/bits/stl_vector.h ****       begin() _GLIBCXX_NOEXCEPT
 549:/usr/include/c++/6/bits/stl_vector.h ****       { return iterator(this->_M_impl._M_start); }
 550:/usr/include/c++/6/bits/stl_vector.h **** 
 551:/usr/include/c++/6/bits/stl_vector.h ****       /**
 552:/usr/include/c++/6/bits/stl_vector.h ****        *  Returns a read-only (constant) iterator that points to the
 553:/usr/include/c++/6/bits/stl_vector.h ****        *  first element in the %vector.  Iteration is done in ordinary
 554:/usr/include/c++/6/bits/stl_vector.h ****        *  element order.
 555:/usr/include/c++/6/bits/stl_vector.h ****        */
 556:/usr/include/c++/6/bits/stl_vector.h ****       const_iterator
 557:/usr/include/c++/6/bits/stl_vector.h ****       begin() const _GLIBCXX_NOEXCEPT
 558:/usr/include/c++/6/bits/stl_vector.h ****       { return const_iterator(this->_M_impl._M_start); }
 559:/usr/include/c++/6/bits/stl_vector.h **** 
 560:/usr/include/c++/6/bits/stl_vector.h ****       /**
 561:/usr/include/c++/6/bits/stl_vector.h ****        *  Returns a read/write iterator that points one past the last
 562:/usr/include/c++/6/bits/stl_vector.h ****        *  element in the %vector.  Iteration is done in ordinary
 563:/usr/include/c++/6/bits/stl_vector.h ****        *  element order.
 564:/usr/include/c++/6/bits/stl_vector.h ****        */
 565:/usr/include/c++/6/bits/stl_vector.h ****       iterator
 566:/usr/include/c++/6/bits/stl_vector.h ****       end() _GLIBCXX_NOEXCEPT
 567:/usr/include/c++/6/bits/stl_vector.h ****       { return iterator(this->_M_impl._M_finish); }
 568:/usr/include/c++/6/bits/stl_vector.h **** 
 569:/usr/include/c++/6/bits/stl_vector.h ****       /**
 570:/usr/include/c++/6/bits/stl_vector.h ****        *  Returns a read-only (constant) iterator that points one past
 571:/usr/include/c++/6/bits/stl_vector.h ****        *  the last element in the %vector.  Iteration is done in
 572:/usr/include/c++/6/bits/stl_vector.h ****        *  ordinary element order.
 573:/usr/include/c++/6/bits/stl_vector.h ****        */
 574:/usr/include/c++/6/bits/stl_vector.h ****       const_iterator
 575:/usr/include/c++/6/bits/stl_vector.h ****       end() const _GLIBCXX_NOEXCEPT
 576:/usr/include/c++/6/bits/stl_vector.h ****       { return const_iterator(this->_M_impl._M_finish); }
 577:/usr/include/c++/6/bits/stl_vector.h **** 
 578:/usr/include/c++/6/bits/stl_vector.h ****       /**
 579:/usr/include/c++/6/bits/stl_vector.h ****        *  Returns a read/write reverse iterator that points to the
 580:/usr/include/c++/6/bits/stl_vector.h ****        *  last element in the %vector.  Iteration is done in reverse
 581:/usr/include/c++/6/bits/stl_vector.h ****        *  element order.
GAS LISTING /tmp/ccsIN87E.s 			page 335


 582:/usr/include/c++/6/bits/stl_vector.h ****        */
 583:/usr/include/c++/6/bits/stl_vector.h ****       reverse_iterator
 584:/usr/include/c++/6/bits/stl_vector.h ****       rbegin() _GLIBCXX_NOEXCEPT
 585:/usr/include/c++/6/bits/stl_vector.h ****       { return reverse_iterator(end()); }
 586:/usr/include/c++/6/bits/stl_vector.h **** 
 587:/usr/include/c++/6/bits/stl_vector.h ****       /**
 588:/usr/include/c++/6/bits/stl_vector.h ****        *  Returns a read-only (constant) reverse iterator that points
 589:/usr/include/c++/6/bits/stl_vector.h ****        *  to the last element in the %vector.  Iteration is done in
 590:/usr/include/c++/6/bits/stl_vector.h ****        *  reverse element order.
 591:/usr/include/c++/6/bits/stl_vector.h ****        */
 592:/usr/include/c++/6/bits/stl_vector.h ****       const_reverse_iterator
 593:/usr/include/c++/6/bits/stl_vector.h ****       rbegin() const _GLIBCXX_NOEXCEPT
 594:/usr/include/c++/6/bits/stl_vector.h ****       { return const_reverse_iterator(end()); }
 595:/usr/include/c++/6/bits/stl_vector.h **** 
 596:/usr/include/c++/6/bits/stl_vector.h ****       /**
 597:/usr/include/c++/6/bits/stl_vector.h ****        *  Returns a read/write reverse iterator that points to one
 598:/usr/include/c++/6/bits/stl_vector.h ****        *  before the first element in the %vector.  Iteration is done
 599:/usr/include/c++/6/bits/stl_vector.h ****        *  in reverse element order.
 600:/usr/include/c++/6/bits/stl_vector.h ****        */
 601:/usr/include/c++/6/bits/stl_vector.h ****       reverse_iterator
 602:/usr/include/c++/6/bits/stl_vector.h ****       rend() _GLIBCXX_NOEXCEPT
 603:/usr/include/c++/6/bits/stl_vector.h ****       { return reverse_iterator(begin()); }
 604:/usr/include/c++/6/bits/stl_vector.h **** 
 605:/usr/include/c++/6/bits/stl_vector.h ****       /**
 606:/usr/include/c++/6/bits/stl_vector.h ****        *  Returns a read-only (constant) reverse iterator that points
 607:/usr/include/c++/6/bits/stl_vector.h ****        *  to one before the first element in the %vector.  Iteration
 608:/usr/include/c++/6/bits/stl_vector.h ****        *  is done in reverse element order.
 609:/usr/include/c++/6/bits/stl_vector.h ****        */
 610:/usr/include/c++/6/bits/stl_vector.h ****       const_reverse_iterator
 611:/usr/include/c++/6/bits/stl_vector.h ****       rend() const _GLIBCXX_NOEXCEPT
 612:/usr/include/c++/6/bits/stl_vector.h ****       { return const_reverse_iterator(begin()); }
 613:/usr/include/c++/6/bits/stl_vector.h **** 
 614:/usr/include/c++/6/bits/stl_vector.h **** #if __cplusplus >= 201103L
 615:/usr/include/c++/6/bits/stl_vector.h ****       /**
 616:/usr/include/c++/6/bits/stl_vector.h ****        *  Returns a read-only (constant) iterator that points to the
 617:/usr/include/c++/6/bits/stl_vector.h ****        *  first element in the %vector.  Iteration is done in ordinary
 618:/usr/include/c++/6/bits/stl_vector.h ****        *  element order.
 619:/usr/include/c++/6/bits/stl_vector.h ****        */
 620:/usr/include/c++/6/bits/stl_vector.h ****       const_iterator
 621:/usr/include/c++/6/bits/stl_vector.h ****       cbegin() const noexcept
 622:/usr/include/c++/6/bits/stl_vector.h ****       { return const_iterator(this->_M_impl._M_start); }
 623:/usr/include/c++/6/bits/stl_vector.h **** 
 624:/usr/include/c++/6/bits/stl_vector.h ****       /**
 625:/usr/include/c++/6/bits/stl_vector.h ****        *  Returns a read-only (constant) iterator that points one past
 626:/usr/include/c++/6/bits/stl_vector.h ****        *  the last element in the %vector.  Iteration is done in
 627:/usr/include/c++/6/bits/stl_vector.h ****        *  ordinary element order.
 628:/usr/include/c++/6/bits/stl_vector.h ****        */
 629:/usr/include/c++/6/bits/stl_vector.h ****       const_iterator
 630:/usr/include/c++/6/bits/stl_vector.h ****       cend() const noexcept
 631:/usr/include/c++/6/bits/stl_vector.h ****       { return const_iterator(this->_M_impl._M_finish); }
 632:/usr/include/c++/6/bits/stl_vector.h **** 
 633:/usr/include/c++/6/bits/stl_vector.h ****       /**
 634:/usr/include/c++/6/bits/stl_vector.h ****        *  Returns a read-only (constant) reverse iterator that points
 635:/usr/include/c++/6/bits/stl_vector.h ****        *  to the last element in the %vector.  Iteration is done in
 636:/usr/include/c++/6/bits/stl_vector.h ****        *  reverse element order.
 637:/usr/include/c++/6/bits/stl_vector.h ****        */
 638:/usr/include/c++/6/bits/stl_vector.h ****       const_reverse_iterator
GAS LISTING /tmp/ccsIN87E.s 			page 336


 639:/usr/include/c++/6/bits/stl_vector.h ****       crbegin() const noexcept
 640:/usr/include/c++/6/bits/stl_vector.h ****       { return const_reverse_iterator(end()); }
 641:/usr/include/c++/6/bits/stl_vector.h **** 
 642:/usr/include/c++/6/bits/stl_vector.h ****       /**
 643:/usr/include/c++/6/bits/stl_vector.h ****        *  Returns a read-only (constant) reverse iterator that points
 644:/usr/include/c++/6/bits/stl_vector.h ****        *  to one before the first element in the %vector.  Iteration
 645:/usr/include/c++/6/bits/stl_vector.h ****        *  is done in reverse element order.
 646:/usr/include/c++/6/bits/stl_vector.h ****        */
 647:/usr/include/c++/6/bits/stl_vector.h ****       const_reverse_iterator
 648:/usr/include/c++/6/bits/stl_vector.h ****       crend() const noexcept
 649:/usr/include/c++/6/bits/stl_vector.h ****       { return const_reverse_iterator(begin()); }
 650:/usr/include/c++/6/bits/stl_vector.h **** #endif
 651:/usr/include/c++/6/bits/stl_vector.h **** 
 652:/usr/include/c++/6/bits/stl_vector.h ****       // [23.2.4.2] capacity
 653:/usr/include/c++/6/bits/stl_vector.h ****       /**  Returns the number of elements in the %vector.  */
 654:/usr/include/c++/6/bits/stl_vector.h ****       size_type
 655:/usr/include/c++/6/bits/stl_vector.h ****       size() const _GLIBCXX_NOEXCEPT
 656:/usr/include/c++/6/bits/stl_vector.h ****       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 657:/usr/include/c++/6/bits/stl_vector.h **** 
 658:/usr/include/c++/6/bits/stl_vector.h ****       /**  Returns the size() of the largest possible %vector.  */
 659:/usr/include/c++/6/bits/stl_vector.h ****       size_type
 660:/usr/include/c++/6/bits/stl_vector.h ****       max_size() const _GLIBCXX_NOEXCEPT
 661:/usr/include/c++/6/bits/stl_vector.h ****       { return _Alloc_traits::max_size(_M_get_Tp_allocator()); }
 662:/usr/include/c++/6/bits/stl_vector.h **** 
 663:/usr/include/c++/6/bits/stl_vector.h **** #if __cplusplus >= 201103L
 664:/usr/include/c++/6/bits/stl_vector.h ****       /**
 665:/usr/include/c++/6/bits/stl_vector.h ****        *  @brief  Resizes the %vector to the specified number of elements.
 666:/usr/include/c++/6/bits/stl_vector.h ****        *  @param  __new_size  Number of elements the %vector should contain.
 667:/usr/include/c++/6/bits/stl_vector.h ****        *
 668:/usr/include/c++/6/bits/stl_vector.h ****        *  This function will %resize the %vector to the specified
 669:/usr/include/c++/6/bits/stl_vector.h ****        *  number of elements.  If the number is smaller than the
 670:/usr/include/c++/6/bits/stl_vector.h ****        *  %vector's current size the %vector is truncated, otherwise
 671:/usr/include/c++/6/bits/stl_vector.h ****        *  default constructed elements are appended.
 672:/usr/include/c++/6/bits/stl_vector.h ****        */
 673:/usr/include/c++/6/bits/stl_vector.h ****       void
 674:/usr/include/c++/6/bits/stl_vector.h ****       resize(size_type __new_size)
 675:/usr/include/c++/6/bits/stl_vector.h ****       {
 676:/usr/include/c++/6/bits/stl_vector.h **** 	if (__new_size > size())
 677:/usr/include/c++/6/bits/stl_vector.h **** 	  _M_default_append(__new_size - size());
 678:/usr/include/c++/6/bits/stl_vector.h **** 	else if (__new_size < size())
 679:/usr/include/c++/6/bits/stl_vector.h **** 	  _M_erase_at_end(this->_M_impl._M_start + __new_size);
 680:/usr/include/c++/6/bits/stl_vector.h ****       }
 681:/usr/include/c++/6/bits/stl_vector.h **** 
 682:/usr/include/c++/6/bits/stl_vector.h ****       /**
 683:/usr/include/c++/6/bits/stl_vector.h ****        *  @brief  Resizes the %vector to the specified number of elements.
 684:/usr/include/c++/6/bits/stl_vector.h ****        *  @param  __new_size  Number of elements the %vector should contain.
 685:/usr/include/c++/6/bits/stl_vector.h ****        *  @param  __x  Data with which new elements should be populated.
 686:/usr/include/c++/6/bits/stl_vector.h ****        *
 687:/usr/include/c++/6/bits/stl_vector.h ****        *  This function will %resize the %vector to the specified
 688:/usr/include/c++/6/bits/stl_vector.h ****        *  number of elements.  If the number is smaller than the
 689:/usr/include/c++/6/bits/stl_vector.h ****        *  %vector's current size the %vector is truncated, otherwise
 690:/usr/include/c++/6/bits/stl_vector.h ****        *  the %vector is extended and new elements are populated with
 691:/usr/include/c++/6/bits/stl_vector.h ****        *  given data.
 692:/usr/include/c++/6/bits/stl_vector.h ****        */
 693:/usr/include/c++/6/bits/stl_vector.h ****       void
 694:/usr/include/c++/6/bits/stl_vector.h ****       resize(size_type __new_size, const value_type& __x)
 695:/usr/include/c++/6/bits/stl_vector.h ****       {
GAS LISTING /tmp/ccsIN87E.s 			page 337


 696:/usr/include/c++/6/bits/stl_vector.h **** 	if (__new_size > size())
 697:/usr/include/c++/6/bits/stl_vector.h **** 	  insert(end(), __new_size - size(), __x);
 698:/usr/include/c++/6/bits/stl_vector.h **** 	else if (__new_size < size())
 699:/usr/include/c++/6/bits/stl_vector.h **** 	  _M_erase_at_end(this->_M_impl._M_start + __new_size);
 700:/usr/include/c++/6/bits/stl_vector.h ****       }
 701:/usr/include/c++/6/bits/stl_vector.h **** #else
 702:/usr/include/c++/6/bits/stl_vector.h ****       /**
 703:/usr/include/c++/6/bits/stl_vector.h ****        *  @brief  Resizes the %vector to the specified number of elements.
 704:/usr/include/c++/6/bits/stl_vector.h ****        *  @param  __new_size  Number of elements the %vector should contain.
 705:/usr/include/c++/6/bits/stl_vector.h ****        *  @param  __x  Data with which new elements should be populated.
 706:/usr/include/c++/6/bits/stl_vector.h ****        *
 707:/usr/include/c++/6/bits/stl_vector.h ****        *  This function will %resize the %vector to the specified
 708:/usr/include/c++/6/bits/stl_vector.h ****        *  number of elements.  If the number is smaller than the
 709:/usr/include/c++/6/bits/stl_vector.h ****        *  %vector's current size the %vector is truncated, otherwise
 710:/usr/include/c++/6/bits/stl_vector.h ****        *  the %vector is extended and new elements are populated with
 711:/usr/include/c++/6/bits/stl_vector.h ****        *  given data.
 712:/usr/include/c++/6/bits/stl_vector.h ****        */
 713:/usr/include/c++/6/bits/stl_vector.h ****       void
 714:/usr/include/c++/6/bits/stl_vector.h ****       resize(size_type __new_size, value_type __x = value_type())
 715:/usr/include/c++/6/bits/stl_vector.h ****       {
 716:/usr/include/c++/6/bits/stl_vector.h **** 	if (__new_size > size())
 717:/usr/include/c++/6/bits/stl_vector.h **** 	  insert(end(), __new_size - size(), __x);
 718:/usr/include/c++/6/bits/stl_vector.h **** 	else if (__new_size < size())
 719:/usr/include/c++/6/bits/stl_vector.h **** 	  _M_erase_at_end(this->_M_impl._M_start + __new_size);
 720:/usr/include/c++/6/bits/stl_vector.h ****       }
 721:/usr/include/c++/6/bits/stl_vector.h **** #endif
 722:/usr/include/c++/6/bits/stl_vector.h **** 
 723:/usr/include/c++/6/bits/stl_vector.h **** #if __cplusplus >= 201103L
 724:/usr/include/c++/6/bits/stl_vector.h ****       /**  A non-binding request to reduce capacity() to size().  */
 725:/usr/include/c++/6/bits/stl_vector.h ****       void
 726:/usr/include/c++/6/bits/stl_vector.h ****       shrink_to_fit()
 727:/usr/include/c++/6/bits/stl_vector.h ****       { _M_shrink_to_fit(); }
 728:/usr/include/c++/6/bits/stl_vector.h **** #endif
 729:/usr/include/c++/6/bits/stl_vector.h **** 
 730:/usr/include/c++/6/bits/stl_vector.h ****       /**
 731:/usr/include/c++/6/bits/stl_vector.h ****        *  Returns the total number of elements that the %vector can
 732:/usr/include/c++/6/bits/stl_vector.h ****        *  hold before needing to allocate more memory.
 733:/usr/include/c++/6/bits/stl_vector.h ****        */
 734:/usr/include/c++/6/bits/stl_vector.h ****       size_type
 735:/usr/include/c++/6/bits/stl_vector.h ****       capacity() const _GLIBCXX_NOEXCEPT
 736:/usr/include/c++/6/bits/stl_vector.h ****       { return size_type(this->_M_impl._M_end_of_storage
 737:/usr/include/c++/6/bits/stl_vector.h **** 			 - this->_M_impl._M_start); }
 738:/usr/include/c++/6/bits/stl_vector.h **** 
 739:/usr/include/c++/6/bits/stl_vector.h ****       /**
 740:/usr/include/c++/6/bits/stl_vector.h ****        *  Returns true if the %vector is empty.  (Thus begin() would
 741:/usr/include/c++/6/bits/stl_vector.h ****        *  equal end().)
 742:/usr/include/c++/6/bits/stl_vector.h ****        */
 743:/usr/include/c++/6/bits/stl_vector.h ****       bool
 744:/usr/include/c++/6/bits/stl_vector.h ****       empty() const _GLIBCXX_NOEXCEPT
 745:/usr/include/c++/6/bits/stl_vector.h ****       { return begin() == end(); }
 746:/usr/include/c++/6/bits/stl_vector.h **** 
 747:/usr/include/c++/6/bits/stl_vector.h ****       /**
 748:/usr/include/c++/6/bits/stl_vector.h ****        *  @brief  Attempt to preallocate enough memory for specified number of
 749:/usr/include/c++/6/bits/stl_vector.h ****        *          elements.
 750:/usr/include/c++/6/bits/stl_vector.h ****        *  @param  __n  Number of elements required.
 751:/usr/include/c++/6/bits/stl_vector.h ****        *  @throw  std::length_error  If @a n exceeds @c max_size().
 752:/usr/include/c++/6/bits/stl_vector.h ****        *
GAS LISTING /tmp/ccsIN87E.s 			page 338


 753:/usr/include/c++/6/bits/stl_vector.h ****        *  This function attempts to reserve enough memory for the
 754:/usr/include/c++/6/bits/stl_vector.h ****        *  %vector to hold the specified number of elements.  If the
 755:/usr/include/c++/6/bits/stl_vector.h ****        *  number requested is more than max_size(), length_error is
 756:/usr/include/c++/6/bits/stl_vector.h ****        *  thrown.
 757:/usr/include/c++/6/bits/stl_vector.h ****        *
 758:/usr/include/c++/6/bits/stl_vector.h ****        *  The advantage of this function is that if optimal code is a
 759:/usr/include/c++/6/bits/stl_vector.h ****        *  necessity and the user can determine the number of elements
 760:/usr/include/c++/6/bits/stl_vector.h ****        *  that will be required, the user can reserve the memory in
 761:/usr/include/c++/6/bits/stl_vector.h ****        *  %advance, and thus prevent a possible reallocation of memory
 762:/usr/include/c++/6/bits/stl_vector.h ****        *  and copying of %vector data.
 763:/usr/include/c++/6/bits/stl_vector.h ****        */
 764:/usr/include/c++/6/bits/stl_vector.h ****       void
 765:/usr/include/c++/6/bits/stl_vector.h ****       reserve(size_type __n);
 766:/usr/include/c++/6/bits/stl_vector.h **** 
 767:/usr/include/c++/6/bits/stl_vector.h ****       // element access
 768:/usr/include/c++/6/bits/stl_vector.h ****       /**
 769:/usr/include/c++/6/bits/stl_vector.h ****        *  @brief  Subscript access to the data contained in the %vector.
 770:/usr/include/c++/6/bits/stl_vector.h ****        *  @param __n The index of the element for which data should be
 771:/usr/include/c++/6/bits/stl_vector.h ****        *  accessed.
 772:/usr/include/c++/6/bits/stl_vector.h ****        *  @return  Read/write reference to data.
 773:/usr/include/c++/6/bits/stl_vector.h ****        *
 774:/usr/include/c++/6/bits/stl_vector.h ****        *  This operator allows for easy, array-style, data access.
 775:/usr/include/c++/6/bits/stl_vector.h ****        *  Note that data access with this operator is unchecked and
 776:/usr/include/c++/6/bits/stl_vector.h ****        *  out_of_range lookups are not defined. (For checked lookups
 777:/usr/include/c++/6/bits/stl_vector.h ****        *  see at().)
 778:/usr/include/c++/6/bits/stl_vector.h ****        */
 779:/usr/include/c++/6/bits/stl_vector.h ****       reference
 780:/usr/include/c++/6/bits/stl_vector.h ****       operator[](size_type __n) _GLIBCXX_NOEXCEPT
 7690              		.loc 30 780 0
 7691              		.cfi_startproc
 7692 0000 55       		pushq	%rbp
 7693              		.cfi_def_cfa_offset 16
 7694              		.cfi_offset 6, -16
 7695 0001 4889E5   		movq	%rsp, %rbp
 7696              		.cfi_def_cfa_register 6
 7697 0004 48897DF8 		movq	%rdi, -8(%rbp)
 7698 0008 488975F0 		movq	%rsi, -16(%rbp)
 781:/usr/include/c++/6/bits/stl_vector.h ****       { return *(this->_M_impl._M_start + __n); }
 7699              		.loc 30 781 0
 7700 000c 488B45F8 		movq	-8(%rbp), %rax
 7701 0010 488B00   		movq	(%rax), %rax
 7702 0013 488B55F0 		movq	-16(%rbp), %rdx
 7703 0017 48C1E203 		salq	$3, %rdx
 7704 001b 4801D0   		addq	%rdx, %rax
 7705 001e 5D       		popq	%rbp
 7706              		.cfi_def_cfa 7, 8
 7707 001f C3       		ret
 7708              		.cfi_endproc
 7709              	.LFE12294:
 7711              		.section	.text._ZNSt6vectorIPvSaIS0_EEixEm,"axG",@progbits,_ZNSt6vectorIPvSaIS0_EEixEm,comdat
 7712              		.align 2
 7713              		.weak	_ZNSt6vectorIPvSaIS0_EEixEm
 7715              	_ZNSt6vectorIPvSaIS0_EEixEm:
 7716              	.LFB12295:
 780:/usr/include/c++/6/bits/stl_vector.h ****       { return *(this->_M_impl._M_start + __n); }
 7717              		.loc 30 780 0
 7718              		.cfi_startproc
GAS LISTING /tmp/ccsIN87E.s 			page 339


 7719 0000 55       		pushq	%rbp
 7720              		.cfi_def_cfa_offset 16
 7721              		.cfi_offset 6, -16
 7722 0001 4889E5   		movq	%rsp, %rbp
 7723              		.cfi_def_cfa_register 6
 7724 0004 48897DF8 		movq	%rdi, -8(%rbp)
 7725 0008 488975F0 		movq	%rsi, -16(%rbp)
 7726              		.loc 30 781 0
 7727 000c 488B45F8 		movq	-8(%rbp), %rax
 7728 0010 488B00   		movq	(%rax), %rax
 7729 0013 488B55F0 		movq	-16(%rbp), %rdx
 7730 0017 48C1E203 		salq	$3, %rdx
 7731 001b 4801D0   		addq	%rdx, %rax
 7732 001e 5D       		popq	%rbp
 7733              		.cfi_def_cfa 7, 8
 7734 001f C3       		ret
 7735              		.cfi_endproc
 7736              	.LFE12295:
 7738              		.section	.text._ZNKSt6vectorIPvSaIS0_EE4sizeEv,"axG",@progbits,_ZNKSt6vectorIPvSaIS0_EE4sizeEv,com
 7739              		.align 2
 7740              		.weak	_ZNKSt6vectorIPvSaIS0_EE4sizeEv
 7742              	_ZNKSt6vectorIPvSaIS0_EE4sizeEv:
 7743              	.LFB12296:
 655:/usr/include/c++/6/bits/stl_vector.h ****       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 7744              		.loc 30 655 0
 7745              		.cfi_startproc
 7746 0000 55       		pushq	%rbp
 7747              		.cfi_def_cfa_offset 16
 7748              		.cfi_offset 6, -16
 7749 0001 4889E5   		movq	%rsp, %rbp
 7750              		.cfi_def_cfa_register 6
 7751 0004 48897DF8 		movq	%rdi, -8(%rbp)
 656:/usr/include/c++/6/bits/stl_vector.h **** 
 7752              		.loc 30 656 0
 7753 0008 488B45F8 		movq	-8(%rbp), %rax
 7754 000c 488B4008 		movq	8(%rax), %rax
 7755 0010 4889C2   		movq	%rax, %rdx
 7756 0013 488B45F8 		movq	-8(%rbp), %rax
 7757 0017 488B00   		movq	(%rax), %rax
 7758 001a 4829C2   		subq	%rax, %rdx
 7759 001d 4889D0   		movq	%rdx, %rax
 7760 0020 48C1F803 		sarq	$3, %rax
 7761 0024 5D       		popq	%rbp
 7762              		.cfi_def_cfa 7, 8
 7763 0025 C3       		ret
 7764              		.cfi_endproc
 7765              	.LFE12296:
 7767              		.section	.text._ZNSt6vectorIN2gr5tag_tESaIS1_EEC2Ev,"axG",@progbits,_ZNSt6vectorIN2gr5tag_tESaIS1_
 7768              		.align 2
 7769              		.weak	_ZNSt6vectorIN2gr5tag_tESaIS1_EEC2Ev
 7771              	_ZNSt6vectorIN2gr5tag_tESaIS1_EEC2Ev:
 7772              	.LFB12298:
 255:/usr/include/c++/6/bits/stl_vector.h **** #if __cplusplus >= 201103L
 7773              		.loc 30 255 0
 7774              		.cfi_startproc
 7775              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 7776              		.cfi_lsda 0x1b,.LLSDA12298
GAS LISTING /tmp/ccsIN87E.s 			page 340


 7777 0000 55       		pushq	%rbp
 7778              		.cfi_def_cfa_offset 16
 7779              		.cfi_offset 6, -16
 7780 0001 4889E5   		movq	%rsp, %rbp
 7781              		.cfi_def_cfa_register 6
 7782 0004 4883EC10 		subq	$16, %rsp
 7783 0008 48897DF8 		movq	%rdi, -8(%rbp)
 7784              	.LBB78:
 259:/usr/include/c++/6/bits/stl_vector.h **** 
 7785              		.loc 30 259 0
 7786 000c 488B45F8 		movq	-8(%rbp), %rax
 7787 0010 4889C7   		movq	%rax, %rdi
 7788 0013 E8000000 		call	_ZNSt12_Vector_baseIN2gr5tag_tESaIS1_EEC2Ev
 7788      00
 7789              	.LBE78:
 7790 0018 90       		nop
 7791 0019 C9       		leave
 7792              		.cfi_def_cfa 7, 8
 7793 001a C3       		ret
 7794              		.cfi_endproc
 7795              	.LFE12298:
 7796              		.section	.gcc_except_table
 7797              	.LLSDA12298:
 7798 012c FF       		.byte	0xff
 7799 012d FF       		.byte	0xff
 7800 012e 01       		.byte	0x1
 7801 012f 00       		.uleb128 .LLSDACSE12298-.LLSDACSB12298
 7802              	.LLSDACSB12298:
 7803              	.LLSDACSE12298:
 7804              		.section	.text._ZNSt6vectorIN2gr5tag_tESaIS1_EEC2Ev,"axG",@progbits,_ZNSt6vectorIN2gr5tag_tESaIS1_
 7806              		.weak	_ZNSt6vectorIN2gr5tag_tESaIS1_EEC1Ev
 7807              		.set	_ZNSt6vectorIN2gr5tag_tESaIS1_EEC1Ev,_ZNSt6vectorIN2gr5tag_tESaIS1_EEC2Ev
 7808              		.section	.text._ZNSt6vectorIN2gr5tag_tESaIS1_EED2Ev,"axG",@progbits,_ZNSt6vectorIN2gr5tag_tESaIS1_
 7809              		.align 2
 7810              		.weak	_ZNSt6vectorIN2gr5tag_tESaIS1_EED2Ev
 7812              	_ZNSt6vectorIN2gr5tag_tESaIS1_EED2Ev:
 7813              	.LFB12301:
 425:/usr/include/c++/6/bits/stl_vector.h ****       { std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 7814              		.loc 30 425 0
 7815              		.cfi_startproc
 7816              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 7817              		.cfi_lsda 0x1b,.LLSDA12301
 7818 0000 55       		pushq	%rbp
 7819              		.cfi_def_cfa_offset 16
 7820              		.cfi_offset 6, -16
 7821 0001 4889E5   		movq	%rsp, %rbp
 7822              		.cfi_def_cfa_register 6
 7823 0004 4883EC10 		subq	$16, %rsp
 7824 0008 48897DF8 		movq	%rdi, -8(%rbp)
 7825              	.LBB79:
 427:/usr/include/c++/6/bits/stl_vector.h **** 
 7826              		.loc 30 427 0
 7827 000c 488B45F8 		movq	-8(%rbp), %rax
 7828 0010 4889C7   		movq	%rax, %rdi
 7829 0013 E8000000 		call	_ZNSt12_Vector_baseIN2gr5tag_tESaIS1_EE19_M_get_Tp_allocatorEv
 7829      00
 7830 0018 4889C2   		movq	%rax, %rdx
GAS LISTING /tmp/ccsIN87E.s 			page 341


 426:/usr/include/c++/6/bits/stl_vector.h **** 		      _M_get_Tp_allocator()); }
 7831              		.loc 30 426 0
 7832 001b 488B45F8 		movq	-8(%rbp), %rax
 7833 001f 488B4808 		movq	8(%rax), %rcx
 7834 0023 488B45F8 		movq	-8(%rbp), %rax
 7835 0027 488B00   		movq	(%rax), %rax
 7836 002a 4889CE   		movq	%rcx, %rsi
 7837 002d 4889C7   		movq	%rax, %rdi
 7838 0030 E8000000 		call	_ZSt8_DestroyIPN2gr5tag_tES1_EvT_S3_RSaIT0_E
 7838      00
 427:/usr/include/c++/6/bits/stl_vector.h **** 
 7839              		.loc 30 427 0
 7840 0035 488B45F8 		movq	-8(%rbp), %rax
 7841 0039 4889C7   		movq	%rax, %rdi
 7842 003c E8000000 		call	_ZNSt12_Vector_baseIN2gr5tag_tESaIS1_EED2Ev
 7842      00
 7843              	.LBE79:
 7844 0041 90       		nop
 7845 0042 C9       		leave
 7846              		.cfi_def_cfa 7, 8
 7847 0043 C3       		ret
 7848              		.cfi_endproc
 7849              	.LFE12301:
 7850              		.section	.gcc_except_table
 7851              	.LLSDA12301:
 7852 0130 FF       		.byte	0xff
 7853 0131 FF       		.byte	0xff
 7854 0132 01       		.byte	0x1
 7855 0133 00       		.uleb128 .LLSDACSE12301-.LLSDACSB12301
 7856              	.LLSDACSB12301:
 7857              	.LLSDACSE12301:
 7858              		.section	.text._ZNSt6vectorIN2gr5tag_tESaIS1_EED2Ev,"axG",@progbits,_ZNSt6vectorIN2gr5tag_tESaIS1_
 7860              		.weak	_ZNSt6vectorIN2gr5tag_tESaIS1_EED1Ev
 7861              		.set	_ZNSt6vectorIN2gr5tag_tESaIS1_EED1Ev,_ZNSt6vectorIN2gr5tag_tESaIS1_EED2Ev
 7862              		.section	.text._ZNKSt6vectorIN2gr5tag_tESaIS1_EE4sizeEv,"axG",@progbits,_ZNKSt6vectorIN2gr5tag_tES
 7863              		.align 2
 7864              		.weak	_ZNKSt6vectorIN2gr5tag_tESaIS1_EE4sizeEv
 7866              	_ZNKSt6vectorIN2gr5tag_tESaIS1_EE4sizeEv:
 7867              	.LFB12303:
 655:/usr/include/c++/6/bits/stl_vector.h ****       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 7868              		.loc 30 655 0
 7869              		.cfi_startproc
 7870 0000 55       		pushq	%rbp
 7871              		.cfi_def_cfa_offset 16
 7872              		.cfi_offset 6, -16
 7873 0001 4889E5   		movq	%rsp, %rbp
 7874              		.cfi_def_cfa_register 6
 7875 0004 48897DF8 		movq	%rdi, -8(%rbp)
 656:/usr/include/c++/6/bits/stl_vector.h **** 
 7876              		.loc 30 656 0
 7877 0008 488B45F8 		movq	-8(%rbp), %rax
 7878 000c 488B4008 		movq	8(%rax), %rax
 7879 0010 4889C2   		movq	%rax, %rdx
 7880 0013 488B45F8 		movq	-8(%rbp), %rax
 7881 0017 488B00   		movq	(%rax), %rax
 7882 001a 4829C2   		subq	%rax, %rdx
 7883 001d 4889D0   		movq	%rdx, %rax
GAS LISTING /tmp/ccsIN87E.s 			page 342


 7884 0020 48C1F803 		sarq	$3, %rax
 7885 0024 4889C2   		movq	%rax, %rdx
 7886 0027 48B8B76D 		movabsq	$7905747460161236407, %rax
 7886      DBB66DDB 
 7886      B66D
 7887 0031 480FAFC2 		imulq	%rdx, %rax
 7888 0035 5D       		popq	%rbp
 7889              		.cfi_def_cfa 7, 8
 7890 0036 C3       		ret
 7891              		.cfi_endproc
 7892              	.LFE12303:
 7894              		.section	.text._ZNSt6vectorIN2gr5tag_tESaIS1_EEixEm,"axG",@progbits,_ZNSt6vectorIN2gr5tag_tESaIS1_
 7895              		.align 2
 7896              		.weak	_ZNSt6vectorIN2gr5tag_tESaIS1_EEixEm
 7898              	_ZNSt6vectorIN2gr5tag_tESaIS1_EEixEm:
 7899              	.LFB12304:
 780:/usr/include/c++/6/bits/stl_vector.h ****       { return *(this->_M_impl._M_start + __n); }
 7900              		.loc 30 780 0
 7901              		.cfi_startproc
 7902 0000 55       		pushq	%rbp
 7903              		.cfi_def_cfa_offset 16
 7904              		.cfi_offset 6, -16
 7905 0001 4889E5   		movq	%rsp, %rbp
 7906              		.cfi_def_cfa_register 6
 7907 0004 48897DF8 		movq	%rdi, -8(%rbp)
 7908 0008 488975F0 		movq	%rsi, -16(%rbp)
 7909              		.loc 30 781 0
 7910 000c 488B45F8 		movq	-8(%rbp), %rax
 7911 0010 488B08   		movq	(%rax), %rcx
 7912 0013 488B55F0 		movq	-16(%rbp), %rdx
 7913 0017 4889D0   		movq	%rdx, %rax
 7914 001a 48C1E003 		salq	$3, %rax
 7915 001e 4829D0   		subq	%rdx, %rax
 7916 0021 48C1E003 		salq	$3, %rax
 7917 0025 4801C8   		addq	%rcx, %rax
 7918 0028 5D       		popq	%rbp
 7919              		.cfi_def_cfa 7, 8
 7920 0029 C3       		ret
 7921              		.cfi_endproc
 7922              	.LFE12304:
 7924              		.section	.text._ZNSt6vectorIN2gr5tag_tESaIS1_EE5beginEv,"axG",@progbits,_ZNSt6vectorIN2gr5tag_tESa
 7925              		.align 2
 7926              		.weak	_ZNSt6vectorIN2gr5tag_tESaIS1_EE5beginEv
 7928              	_ZNSt6vectorIN2gr5tag_tESaIS1_EE5beginEv:
 7929              	.LFB12305:
 548:/usr/include/c++/6/bits/stl_vector.h ****       { return iterator(this->_M_impl._M_start); }
 7930              		.loc 30 548 0
 7931              		.cfi_startproc
 7932 0000 55       		pushq	%rbp
 7933              		.cfi_def_cfa_offset 16
 7934              		.cfi_offset 6, -16
 7935 0001 4889E5   		movq	%rsp, %rbp
 7936              		.cfi_def_cfa_register 6
 7937 0004 4883EC20 		subq	$32, %rsp
 7938 0008 48897DE8 		movq	%rdi, -24(%rbp)
 549:/usr/include/c++/6/bits/stl_vector.h **** 
 7939              		.loc 30 549 0
GAS LISTING /tmp/ccsIN87E.s 			page 343


 7940 000c 488B55E8 		movq	-24(%rbp), %rdx
 7941 0010 488D45F8 		leaq	-8(%rbp), %rax
 7942 0014 4889D6   		movq	%rdx, %rsi
 7943 0017 4889C7   		movq	%rax, %rdi
 7944 001a E8000000 		call	_ZN9__gnu_cxx17__normal_iteratorIPN2gr5tag_tESt6vectorIS2_SaIS2_EEEC1ERKS3_
 7944      00
 7945 001f 488B45F8 		movq	-8(%rbp), %rax
 7946 0023 C9       		leave
 7947              		.cfi_def_cfa 7, 8
 7948 0024 C3       		ret
 7949              		.cfi_endproc
 7950              	.LFE12305:
 7952              		.section	.text._ZN9__gnu_cxx17__normal_iteratorIPKN2gr5tag_tESt6vectorIS2_SaIS2_EEEC2IPS2_EERKNS0_
 7953              		.align 2
 7954              		.weak	_ZN9__gnu_cxx17__normal_iteratorIPKN2gr5tag_tESt6vectorIS2_SaIS2_EEEC2IPS2_EERKNS0_IT_NS_11_
 7956              	_ZN9__gnu_cxx17__normal_iteratorIPKN2gr5tag_tESt6vectorIS2_SaIS2_EEEC2IPS2_EERKNS0_IT_NS_11__enable
 7957              	.LFB12307:
 7958              		.file 32 "/usr/include/c++/6/bits/stl_iterator.h"
   1:/usr/include/c++/6/bits/stl_iterator.h **** // Iterators -*- C++ -*-
   2:/usr/include/c++/6/bits/stl_iterator.h **** 
   3:/usr/include/c++/6/bits/stl_iterator.h **** // Copyright (C) 2001-2016 Free Software Foundation, Inc.
   4:/usr/include/c++/6/bits/stl_iterator.h **** //
   5:/usr/include/c++/6/bits/stl_iterator.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/6/bits/stl_iterator.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/6/bits/stl_iterator.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/6/bits/stl_iterator.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/6/bits/stl_iterator.h **** // any later version.
  10:/usr/include/c++/6/bits/stl_iterator.h **** 
  11:/usr/include/c++/6/bits/stl_iterator.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/6/bits/stl_iterator.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/6/bits/stl_iterator.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/6/bits/stl_iterator.h **** // GNU General Public License for more details.
  15:/usr/include/c++/6/bits/stl_iterator.h **** 
  16:/usr/include/c++/6/bits/stl_iterator.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/6/bits/stl_iterator.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/6/bits/stl_iterator.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/6/bits/stl_iterator.h **** 
  20:/usr/include/c++/6/bits/stl_iterator.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/6/bits/stl_iterator.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/6/bits/stl_iterator.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/6/bits/stl_iterator.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/6/bits/stl_iterator.h **** 
  25:/usr/include/c++/6/bits/stl_iterator.h **** /*
  26:/usr/include/c++/6/bits/stl_iterator.h ****  *
  27:/usr/include/c++/6/bits/stl_iterator.h ****  * Copyright (c) 1994
  28:/usr/include/c++/6/bits/stl_iterator.h ****  * Hewlett-Packard Company
  29:/usr/include/c++/6/bits/stl_iterator.h ****  *
  30:/usr/include/c++/6/bits/stl_iterator.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:/usr/include/c++/6/bits/stl_iterator.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:/usr/include/c++/6/bits/stl_iterator.h ****  * provided that the above copyright notice appear in all copies and
  33:/usr/include/c++/6/bits/stl_iterator.h ****  * that both that copyright notice and this permission notice appear
  34:/usr/include/c++/6/bits/stl_iterator.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:/usr/include/c++/6/bits/stl_iterator.h ****  * representations about the suitability of this software for any
  36:/usr/include/c++/6/bits/stl_iterator.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:/usr/include/c++/6/bits/stl_iterator.h ****  *
  38:/usr/include/c++/6/bits/stl_iterator.h ****  *
  39:/usr/include/c++/6/bits/stl_iterator.h ****  * Copyright (c) 1996-1998
GAS LISTING /tmp/ccsIN87E.s 			page 344


  40:/usr/include/c++/6/bits/stl_iterator.h ****  * Silicon Graphics Computer Systems, Inc.
  41:/usr/include/c++/6/bits/stl_iterator.h ****  *
  42:/usr/include/c++/6/bits/stl_iterator.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:/usr/include/c++/6/bits/stl_iterator.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:/usr/include/c++/6/bits/stl_iterator.h ****  * provided that the above copyright notice appear in all copies and
  45:/usr/include/c++/6/bits/stl_iterator.h ****  * that both that copyright notice and this permission notice appear
  46:/usr/include/c++/6/bits/stl_iterator.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:/usr/include/c++/6/bits/stl_iterator.h ****  * representations about the suitability of this software for any
  48:/usr/include/c++/6/bits/stl_iterator.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:/usr/include/c++/6/bits/stl_iterator.h ****  */
  50:/usr/include/c++/6/bits/stl_iterator.h **** 
  51:/usr/include/c++/6/bits/stl_iterator.h **** /** @file bits/stl_iterator.h
  52:/usr/include/c++/6/bits/stl_iterator.h ****  *  This is an internal header file, included by other library headers.
  53:/usr/include/c++/6/bits/stl_iterator.h ****  *  Do not attempt to use it directly. @headername{iterator}
  54:/usr/include/c++/6/bits/stl_iterator.h ****  *
  55:/usr/include/c++/6/bits/stl_iterator.h ****  *  This file implements reverse_iterator, back_insert_iterator,
  56:/usr/include/c++/6/bits/stl_iterator.h ****  *  front_insert_iterator, insert_iterator, __normal_iterator, and their
  57:/usr/include/c++/6/bits/stl_iterator.h ****  *  supporting functions and overloaded operators.
  58:/usr/include/c++/6/bits/stl_iterator.h ****  */
  59:/usr/include/c++/6/bits/stl_iterator.h **** 
  60:/usr/include/c++/6/bits/stl_iterator.h **** #ifndef _STL_ITERATOR_H
  61:/usr/include/c++/6/bits/stl_iterator.h **** #define _STL_ITERATOR_H 1
  62:/usr/include/c++/6/bits/stl_iterator.h **** 
  63:/usr/include/c++/6/bits/stl_iterator.h **** #include <bits/cpp_type_traits.h>
  64:/usr/include/c++/6/bits/stl_iterator.h **** #include <ext/type_traits.h>
  65:/usr/include/c++/6/bits/stl_iterator.h **** #include <bits/move.h>
  66:/usr/include/c++/6/bits/stl_iterator.h **** #include <bits/ptr_traits.h>
  67:/usr/include/c++/6/bits/stl_iterator.h **** 
  68:/usr/include/c++/6/bits/stl_iterator.h **** namespace std _GLIBCXX_VISIBILITY(default)
  69:/usr/include/c++/6/bits/stl_iterator.h **** {
  70:/usr/include/c++/6/bits/stl_iterator.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  71:/usr/include/c++/6/bits/stl_iterator.h **** 
  72:/usr/include/c++/6/bits/stl_iterator.h ****   /**
  73:/usr/include/c++/6/bits/stl_iterator.h ****    * @addtogroup iterators
  74:/usr/include/c++/6/bits/stl_iterator.h ****    * @{
  75:/usr/include/c++/6/bits/stl_iterator.h ****    */
  76:/usr/include/c++/6/bits/stl_iterator.h **** 
  77:/usr/include/c++/6/bits/stl_iterator.h ****   // 24.4.1 Reverse iterators
  78:/usr/include/c++/6/bits/stl_iterator.h ****   /**
  79:/usr/include/c++/6/bits/stl_iterator.h ****    *  Bidirectional and random access iterators have corresponding reverse
  80:/usr/include/c++/6/bits/stl_iterator.h ****    *  %iterator adaptors that iterate through the data structure in the
  81:/usr/include/c++/6/bits/stl_iterator.h ****    *  opposite direction.  They have the same signatures as the corresponding
  82:/usr/include/c++/6/bits/stl_iterator.h ****    *  iterators.  The fundamental relation between a reverse %iterator and its
  83:/usr/include/c++/6/bits/stl_iterator.h ****    *  corresponding %iterator @c i is established by the identity:
  84:/usr/include/c++/6/bits/stl_iterator.h ****    *  @code
  85:/usr/include/c++/6/bits/stl_iterator.h ****    *      &*(reverse_iterator(i)) == &*(i - 1)
  86:/usr/include/c++/6/bits/stl_iterator.h ****    *  @endcode
  87:/usr/include/c++/6/bits/stl_iterator.h ****    *
  88:/usr/include/c++/6/bits/stl_iterator.h ****    *  <em>This mapping is dictated by the fact that while there is always a
  89:/usr/include/c++/6/bits/stl_iterator.h ****    *  pointer past the end of an array, there might not be a valid pointer
  90:/usr/include/c++/6/bits/stl_iterator.h ****    *  before the beginning of an array.</em> [24.4.1]/1,2
  91:/usr/include/c++/6/bits/stl_iterator.h ****    *
  92:/usr/include/c++/6/bits/stl_iterator.h ****    *  Reverse iterators can be tricky and surprising at first.  Their
  93:/usr/include/c++/6/bits/stl_iterator.h ****    *  semantics make sense, however, and the trickiness is a side effect of
  94:/usr/include/c++/6/bits/stl_iterator.h ****    *  the requirement that the iterators must be safe.
  95:/usr/include/c++/6/bits/stl_iterator.h ****   */
  96:/usr/include/c++/6/bits/stl_iterator.h ****   template<typename _Iterator>
GAS LISTING /tmp/ccsIN87E.s 			page 345


  97:/usr/include/c++/6/bits/stl_iterator.h ****     class reverse_iterator
  98:/usr/include/c++/6/bits/stl_iterator.h ****     : public iterator<typename iterator_traits<_Iterator>::iterator_category,
  99:/usr/include/c++/6/bits/stl_iterator.h **** 		      typename iterator_traits<_Iterator>::value_type,
 100:/usr/include/c++/6/bits/stl_iterator.h **** 		      typename iterator_traits<_Iterator>::difference_type,
 101:/usr/include/c++/6/bits/stl_iterator.h **** 		      typename iterator_traits<_Iterator>::pointer,
 102:/usr/include/c++/6/bits/stl_iterator.h ****                       typename iterator_traits<_Iterator>::reference>
 103:/usr/include/c++/6/bits/stl_iterator.h ****     {
 104:/usr/include/c++/6/bits/stl_iterator.h ****     protected:
 105:/usr/include/c++/6/bits/stl_iterator.h ****       _Iterator current;
 106:/usr/include/c++/6/bits/stl_iterator.h **** 
 107:/usr/include/c++/6/bits/stl_iterator.h ****       typedef iterator_traits<_Iterator>		__traits_type;
 108:/usr/include/c++/6/bits/stl_iterator.h **** 
 109:/usr/include/c++/6/bits/stl_iterator.h ****     public:
 110:/usr/include/c++/6/bits/stl_iterator.h ****       typedef _Iterator					iterator_type;
 111:/usr/include/c++/6/bits/stl_iterator.h ****       typedef typename __traits_type::difference_type	difference_type;
 112:/usr/include/c++/6/bits/stl_iterator.h ****       typedef typename __traits_type::pointer		pointer;
 113:/usr/include/c++/6/bits/stl_iterator.h ****       typedef typename __traits_type::reference		reference;
 114:/usr/include/c++/6/bits/stl_iterator.h **** 
 115:/usr/include/c++/6/bits/stl_iterator.h ****       /**
 116:/usr/include/c++/6/bits/stl_iterator.h ****        *  The default constructor value-initializes member @p current.
 117:/usr/include/c++/6/bits/stl_iterator.h ****        *  If it is a pointer, that means it is zero-initialized.
 118:/usr/include/c++/6/bits/stl_iterator.h ****       */
 119:/usr/include/c++/6/bits/stl_iterator.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 120:/usr/include/c++/6/bits/stl_iterator.h ****       // 235 No specification of default ctor for reverse_iterator
 121:/usr/include/c++/6/bits/stl_iterator.h ****       reverse_iterator() : current() { }
 122:/usr/include/c++/6/bits/stl_iterator.h **** 
 123:/usr/include/c++/6/bits/stl_iterator.h ****       /**
 124:/usr/include/c++/6/bits/stl_iterator.h ****        *  This %iterator will move in the opposite direction that @p x does.
 125:/usr/include/c++/6/bits/stl_iterator.h ****       */
 126:/usr/include/c++/6/bits/stl_iterator.h ****       explicit
 127:/usr/include/c++/6/bits/stl_iterator.h ****       reverse_iterator(iterator_type __x) : current(__x) { }
 128:/usr/include/c++/6/bits/stl_iterator.h **** 
 129:/usr/include/c++/6/bits/stl_iterator.h ****       /**
 130:/usr/include/c++/6/bits/stl_iterator.h ****        *  The copy constructor is normal.
 131:/usr/include/c++/6/bits/stl_iterator.h ****       */
 132:/usr/include/c++/6/bits/stl_iterator.h ****       reverse_iterator(const reverse_iterator& __x)
 133:/usr/include/c++/6/bits/stl_iterator.h ****       : current(__x.current) { }
 134:/usr/include/c++/6/bits/stl_iterator.h **** 
 135:/usr/include/c++/6/bits/stl_iterator.h ****       /**
 136:/usr/include/c++/6/bits/stl_iterator.h ****        *  A %reverse_iterator across other types can be copied if the
 137:/usr/include/c++/6/bits/stl_iterator.h ****        *  underlying %iterator can be converted to the type of @c current.
 138:/usr/include/c++/6/bits/stl_iterator.h ****       */
 139:/usr/include/c++/6/bits/stl_iterator.h ****       template<typename _Iter>
 140:/usr/include/c++/6/bits/stl_iterator.h ****         reverse_iterator(const reverse_iterator<_Iter>& __x)
 141:/usr/include/c++/6/bits/stl_iterator.h **** 	: current(__x.base()) { }
 142:/usr/include/c++/6/bits/stl_iterator.h **** 
 143:/usr/include/c++/6/bits/stl_iterator.h ****       /**
 144:/usr/include/c++/6/bits/stl_iterator.h ****        *  @return  @c current, the %iterator used for underlying work.
 145:/usr/include/c++/6/bits/stl_iterator.h ****       */
 146:/usr/include/c++/6/bits/stl_iterator.h ****       iterator_type
 147:/usr/include/c++/6/bits/stl_iterator.h ****       base() const
 148:/usr/include/c++/6/bits/stl_iterator.h ****       { return current; }
 149:/usr/include/c++/6/bits/stl_iterator.h **** 
 150:/usr/include/c++/6/bits/stl_iterator.h ****       /**
 151:/usr/include/c++/6/bits/stl_iterator.h ****        *  @return  A reference to the value at @c --current
 152:/usr/include/c++/6/bits/stl_iterator.h ****        *
 153:/usr/include/c++/6/bits/stl_iterator.h ****        *  This requires that @c --current is dereferenceable.
GAS LISTING /tmp/ccsIN87E.s 			page 346


 154:/usr/include/c++/6/bits/stl_iterator.h ****        *
 155:/usr/include/c++/6/bits/stl_iterator.h ****        *  @warning This implementation requires that for an iterator of the
 156:/usr/include/c++/6/bits/stl_iterator.h ****        *           underlying iterator type, @c x, a reference obtained by
 157:/usr/include/c++/6/bits/stl_iterator.h ****        *           @c *x remains valid after @c x has been modified or
 158:/usr/include/c++/6/bits/stl_iterator.h ****        *           destroyed. This is a bug: http://gcc.gnu.org/PR51823
 159:/usr/include/c++/6/bits/stl_iterator.h ****       */
 160:/usr/include/c++/6/bits/stl_iterator.h ****       reference
 161:/usr/include/c++/6/bits/stl_iterator.h ****       operator*() const
 162:/usr/include/c++/6/bits/stl_iterator.h ****       {
 163:/usr/include/c++/6/bits/stl_iterator.h **** 	_Iterator __tmp = current;
 164:/usr/include/c++/6/bits/stl_iterator.h **** 	return *--__tmp;
 165:/usr/include/c++/6/bits/stl_iterator.h ****       }
 166:/usr/include/c++/6/bits/stl_iterator.h **** 
 167:/usr/include/c++/6/bits/stl_iterator.h ****       /**
 168:/usr/include/c++/6/bits/stl_iterator.h ****        *  @return  A pointer to the value at @c --current
 169:/usr/include/c++/6/bits/stl_iterator.h ****        *
 170:/usr/include/c++/6/bits/stl_iterator.h ****        *  This requires that @c --current is dereferenceable.
 171:/usr/include/c++/6/bits/stl_iterator.h ****       */
 172:/usr/include/c++/6/bits/stl_iterator.h ****       pointer
 173:/usr/include/c++/6/bits/stl_iterator.h ****       operator->() const
 174:/usr/include/c++/6/bits/stl_iterator.h ****       { return &(operator*()); }
 175:/usr/include/c++/6/bits/stl_iterator.h **** 
 176:/usr/include/c++/6/bits/stl_iterator.h ****       /**
 177:/usr/include/c++/6/bits/stl_iterator.h ****        *  @return  @c *this
 178:/usr/include/c++/6/bits/stl_iterator.h ****        *
 179:/usr/include/c++/6/bits/stl_iterator.h ****        *  Decrements the underlying iterator.
 180:/usr/include/c++/6/bits/stl_iterator.h ****       */
 181:/usr/include/c++/6/bits/stl_iterator.h ****       reverse_iterator&
 182:/usr/include/c++/6/bits/stl_iterator.h ****       operator++()
 183:/usr/include/c++/6/bits/stl_iterator.h ****       {
 184:/usr/include/c++/6/bits/stl_iterator.h **** 	--current;
 185:/usr/include/c++/6/bits/stl_iterator.h **** 	return *this;
 186:/usr/include/c++/6/bits/stl_iterator.h ****       }
 187:/usr/include/c++/6/bits/stl_iterator.h **** 
 188:/usr/include/c++/6/bits/stl_iterator.h ****       /**
 189:/usr/include/c++/6/bits/stl_iterator.h ****        *  @return  The original value of @c *this
 190:/usr/include/c++/6/bits/stl_iterator.h ****        *
 191:/usr/include/c++/6/bits/stl_iterator.h ****        *  Decrements the underlying iterator.
 192:/usr/include/c++/6/bits/stl_iterator.h ****       */
 193:/usr/include/c++/6/bits/stl_iterator.h ****       reverse_iterator
 194:/usr/include/c++/6/bits/stl_iterator.h ****       operator++(int)
 195:/usr/include/c++/6/bits/stl_iterator.h ****       {
 196:/usr/include/c++/6/bits/stl_iterator.h **** 	reverse_iterator __tmp = *this;
 197:/usr/include/c++/6/bits/stl_iterator.h **** 	--current;
 198:/usr/include/c++/6/bits/stl_iterator.h **** 	return __tmp;
 199:/usr/include/c++/6/bits/stl_iterator.h ****       }
 200:/usr/include/c++/6/bits/stl_iterator.h **** 
 201:/usr/include/c++/6/bits/stl_iterator.h ****       /**
 202:/usr/include/c++/6/bits/stl_iterator.h ****        *  @return  @c *this
 203:/usr/include/c++/6/bits/stl_iterator.h ****        *
 204:/usr/include/c++/6/bits/stl_iterator.h ****        *  Increments the underlying iterator.
 205:/usr/include/c++/6/bits/stl_iterator.h ****       */
 206:/usr/include/c++/6/bits/stl_iterator.h ****       reverse_iterator&
 207:/usr/include/c++/6/bits/stl_iterator.h ****       operator--()
 208:/usr/include/c++/6/bits/stl_iterator.h ****       {
 209:/usr/include/c++/6/bits/stl_iterator.h **** 	++current;
 210:/usr/include/c++/6/bits/stl_iterator.h **** 	return *this;
GAS LISTING /tmp/ccsIN87E.s 			page 347


 211:/usr/include/c++/6/bits/stl_iterator.h ****       }
 212:/usr/include/c++/6/bits/stl_iterator.h **** 
 213:/usr/include/c++/6/bits/stl_iterator.h ****       /**
 214:/usr/include/c++/6/bits/stl_iterator.h ****        *  @return  A reverse_iterator with the previous value of @c *this
 215:/usr/include/c++/6/bits/stl_iterator.h ****        *
 216:/usr/include/c++/6/bits/stl_iterator.h ****        *  Increments the underlying iterator.
 217:/usr/include/c++/6/bits/stl_iterator.h ****       */
 218:/usr/include/c++/6/bits/stl_iterator.h ****       reverse_iterator
 219:/usr/include/c++/6/bits/stl_iterator.h ****       operator--(int)
 220:/usr/include/c++/6/bits/stl_iterator.h ****       {
 221:/usr/include/c++/6/bits/stl_iterator.h **** 	reverse_iterator __tmp = *this;
 222:/usr/include/c++/6/bits/stl_iterator.h **** 	++current;
 223:/usr/include/c++/6/bits/stl_iterator.h **** 	return __tmp;
 224:/usr/include/c++/6/bits/stl_iterator.h ****       }
 225:/usr/include/c++/6/bits/stl_iterator.h **** 
 226:/usr/include/c++/6/bits/stl_iterator.h ****       /**
 227:/usr/include/c++/6/bits/stl_iterator.h ****        *  @return  A reverse_iterator that refers to @c current - @a __n
 228:/usr/include/c++/6/bits/stl_iterator.h ****        *
 229:/usr/include/c++/6/bits/stl_iterator.h ****        *  The underlying iterator must be a Random Access Iterator.
 230:/usr/include/c++/6/bits/stl_iterator.h ****       */
 231:/usr/include/c++/6/bits/stl_iterator.h ****       reverse_iterator
 232:/usr/include/c++/6/bits/stl_iterator.h ****       operator+(difference_type __n) const
 233:/usr/include/c++/6/bits/stl_iterator.h ****       { return reverse_iterator(current - __n); }
 234:/usr/include/c++/6/bits/stl_iterator.h **** 
 235:/usr/include/c++/6/bits/stl_iterator.h ****       /**
 236:/usr/include/c++/6/bits/stl_iterator.h ****        *  @return  *this
 237:/usr/include/c++/6/bits/stl_iterator.h ****        *
 238:/usr/include/c++/6/bits/stl_iterator.h ****        *  Moves the underlying iterator backwards @a __n steps.
 239:/usr/include/c++/6/bits/stl_iterator.h ****        *  The underlying iterator must be a Random Access Iterator.
 240:/usr/include/c++/6/bits/stl_iterator.h ****       */
 241:/usr/include/c++/6/bits/stl_iterator.h ****       reverse_iterator&
 242:/usr/include/c++/6/bits/stl_iterator.h ****       operator+=(difference_type __n)
 243:/usr/include/c++/6/bits/stl_iterator.h ****       {
 244:/usr/include/c++/6/bits/stl_iterator.h **** 	current -= __n;
 245:/usr/include/c++/6/bits/stl_iterator.h **** 	return *this;
 246:/usr/include/c++/6/bits/stl_iterator.h ****       }
 247:/usr/include/c++/6/bits/stl_iterator.h **** 
 248:/usr/include/c++/6/bits/stl_iterator.h ****       /**
 249:/usr/include/c++/6/bits/stl_iterator.h ****        *  @return  A reverse_iterator that refers to @c current - @a __n
 250:/usr/include/c++/6/bits/stl_iterator.h ****        *
 251:/usr/include/c++/6/bits/stl_iterator.h ****        *  The underlying iterator must be a Random Access Iterator.
 252:/usr/include/c++/6/bits/stl_iterator.h ****       */
 253:/usr/include/c++/6/bits/stl_iterator.h ****       reverse_iterator
 254:/usr/include/c++/6/bits/stl_iterator.h ****       operator-(difference_type __n) const
 255:/usr/include/c++/6/bits/stl_iterator.h ****       { return reverse_iterator(current + __n); }
 256:/usr/include/c++/6/bits/stl_iterator.h **** 
 257:/usr/include/c++/6/bits/stl_iterator.h ****       /**
 258:/usr/include/c++/6/bits/stl_iterator.h ****        *  @return  *this
 259:/usr/include/c++/6/bits/stl_iterator.h ****        *
 260:/usr/include/c++/6/bits/stl_iterator.h ****        *  Moves the underlying iterator forwards @a __n steps.
 261:/usr/include/c++/6/bits/stl_iterator.h ****        *  The underlying iterator must be a Random Access Iterator.
 262:/usr/include/c++/6/bits/stl_iterator.h ****       */
 263:/usr/include/c++/6/bits/stl_iterator.h ****       reverse_iterator&
 264:/usr/include/c++/6/bits/stl_iterator.h ****       operator-=(difference_type __n)
 265:/usr/include/c++/6/bits/stl_iterator.h ****       {
 266:/usr/include/c++/6/bits/stl_iterator.h **** 	current += __n;
 267:/usr/include/c++/6/bits/stl_iterator.h **** 	return *this;
GAS LISTING /tmp/ccsIN87E.s 			page 348


 268:/usr/include/c++/6/bits/stl_iterator.h ****       }
 269:/usr/include/c++/6/bits/stl_iterator.h **** 
 270:/usr/include/c++/6/bits/stl_iterator.h ****       /**
 271:/usr/include/c++/6/bits/stl_iterator.h ****        *  @return  The value at @c current - @a __n - 1
 272:/usr/include/c++/6/bits/stl_iterator.h ****        *
 273:/usr/include/c++/6/bits/stl_iterator.h ****        *  The underlying iterator must be a Random Access Iterator.
 274:/usr/include/c++/6/bits/stl_iterator.h ****       */
 275:/usr/include/c++/6/bits/stl_iterator.h ****       reference
 276:/usr/include/c++/6/bits/stl_iterator.h ****       operator[](difference_type __n) const
 277:/usr/include/c++/6/bits/stl_iterator.h ****       { return *(*this + __n); }
 278:/usr/include/c++/6/bits/stl_iterator.h ****     };
 279:/usr/include/c++/6/bits/stl_iterator.h **** 
 280:/usr/include/c++/6/bits/stl_iterator.h ****   //@{
 281:/usr/include/c++/6/bits/stl_iterator.h ****   /**
 282:/usr/include/c++/6/bits/stl_iterator.h ****    *  @param  __x  A %reverse_iterator.
 283:/usr/include/c++/6/bits/stl_iterator.h ****    *  @param  __y  A %reverse_iterator.
 284:/usr/include/c++/6/bits/stl_iterator.h ****    *  @return  A simple bool.
 285:/usr/include/c++/6/bits/stl_iterator.h ****    *
 286:/usr/include/c++/6/bits/stl_iterator.h ****    *  Reverse iterators forward many operations to their underlying base()
 287:/usr/include/c++/6/bits/stl_iterator.h ****    *  iterators.  Others are implemented in terms of one another.
 288:/usr/include/c++/6/bits/stl_iterator.h ****    *
 289:/usr/include/c++/6/bits/stl_iterator.h ****   */
 290:/usr/include/c++/6/bits/stl_iterator.h ****   template<typename _Iterator>
 291:/usr/include/c++/6/bits/stl_iterator.h ****     inline bool
 292:/usr/include/c++/6/bits/stl_iterator.h ****     operator==(const reverse_iterator<_Iterator>& __x,
 293:/usr/include/c++/6/bits/stl_iterator.h **** 	       const reverse_iterator<_Iterator>& __y)
 294:/usr/include/c++/6/bits/stl_iterator.h ****     { return __x.base() == __y.base(); }
 295:/usr/include/c++/6/bits/stl_iterator.h **** 
 296:/usr/include/c++/6/bits/stl_iterator.h ****   template<typename _Iterator>
 297:/usr/include/c++/6/bits/stl_iterator.h ****     inline bool
 298:/usr/include/c++/6/bits/stl_iterator.h ****     operator<(const reverse_iterator<_Iterator>& __x,
 299:/usr/include/c++/6/bits/stl_iterator.h **** 	      const reverse_iterator<_Iterator>& __y)
 300:/usr/include/c++/6/bits/stl_iterator.h ****     { return __y.base() < __x.base(); }
 301:/usr/include/c++/6/bits/stl_iterator.h **** 
 302:/usr/include/c++/6/bits/stl_iterator.h ****   template<typename _Iterator>
 303:/usr/include/c++/6/bits/stl_iterator.h ****     inline bool
 304:/usr/include/c++/6/bits/stl_iterator.h ****     operator!=(const reverse_iterator<_Iterator>& __x,
 305:/usr/include/c++/6/bits/stl_iterator.h **** 	       const reverse_iterator<_Iterator>& __y)
 306:/usr/include/c++/6/bits/stl_iterator.h ****     { return !(__x == __y); }
 307:/usr/include/c++/6/bits/stl_iterator.h **** 
 308:/usr/include/c++/6/bits/stl_iterator.h ****   template<typename _Iterator>
 309:/usr/include/c++/6/bits/stl_iterator.h ****     inline bool
 310:/usr/include/c++/6/bits/stl_iterator.h ****     operator>(const reverse_iterator<_Iterator>& __x,
 311:/usr/include/c++/6/bits/stl_iterator.h **** 	      const reverse_iterator<_Iterator>& __y)
 312:/usr/include/c++/6/bits/stl_iterator.h ****     { return __y < __x; }
 313:/usr/include/c++/6/bits/stl_iterator.h **** 
 314:/usr/include/c++/6/bits/stl_iterator.h ****   template<typename _Iterator>
 315:/usr/include/c++/6/bits/stl_iterator.h ****     inline bool
 316:/usr/include/c++/6/bits/stl_iterator.h ****     operator<=(const reverse_iterator<_Iterator>& __x,
 317:/usr/include/c++/6/bits/stl_iterator.h **** 	       const reverse_iterator<_Iterator>& __y)
 318:/usr/include/c++/6/bits/stl_iterator.h ****     { return !(__y < __x); }
 319:/usr/include/c++/6/bits/stl_iterator.h **** 
 320:/usr/include/c++/6/bits/stl_iterator.h ****   template<typename _Iterator>
 321:/usr/include/c++/6/bits/stl_iterator.h ****     inline bool
 322:/usr/include/c++/6/bits/stl_iterator.h ****     operator>=(const reverse_iterator<_Iterator>& __x,
 323:/usr/include/c++/6/bits/stl_iterator.h **** 	       const reverse_iterator<_Iterator>& __y)
 324:/usr/include/c++/6/bits/stl_iterator.h ****     { return !(__x < __y); }
GAS LISTING /tmp/ccsIN87E.s 			page 349


 325:/usr/include/c++/6/bits/stl_iterator.h **** 
 326:/usr/include/c++/6/bits/stl_iterator.h ****   template<typename _Iterator>
 327:/usr/include/c++/6/bits/stl_iterator.h **** #if __cplusplus < 201103L
 328:/usr/include/c++/6/bits/stl_iterator.h ****     inline typename reverse_iterator<_Iterator>::difference_type
 329:/usr/include/c++/6/bits/stl_iterator.h ****     operator-(const reverse_iterator<_Iterator>& __x,
 330:/usr/include/c++/6/bits/stl_iterator.h **** 	      const reverse_iterator<_Iterator>& __y)
 331:/usr/include/c++/6/bits/stl_iterator.h **** #else
 332:/usr/include/c++/6/bits/stl_iterator.h ****     inline auto
 333:/usr/include/c++/6/bits/stl_iterator.h ****     operator-(const reverse_iterator<_Iterator>& __x,
 334:/usr/include/c++/6/bits/stl_iterator.h **** 	      const reverse_iterator<_Iterator>& __y)
 335:/usr/include/c++/6/bits/stl_iterator.h ****     -> decltype(__x.base() - __y.base())
 336:/usr/include/c++/6/bits/stl_iterator.h **** #endif
 337:/usr/include/c++/6/bits/stl_iterator.h ****     { return __y.base() - __x.base(); }
 338:/usr/include/c++/6/bits/stl_iterator.h **** 
 339:/usr/include/c++/6/bits/stl_iterator.h ****   template<typename _Iterator>
 340:/usr/include/c++/6/bits/stl_iterator.h ****     inline reverse_iterator<_Iterator>
 341:/usr/include/c++/6/bits/stl_iterator.h ****     operator+(typename reverse_iterator<_Iterator>::difference_type __n,
 342:/usr/include/c++/6/bits/stl_iterator.h **** 	      const reverse_iterator<_Iterator>& __x)
 343:/usr/include/c++/6/bits/stl_iterator.h ****     { return reverse_iterator<_Iterator>(__x.base() - __n); }
 344:/usr/include/c++/6/bits/stl_iterator.h **** 
 345:/usr/include/c++/6/bits/stl_iterator.h ****   // _GLIBCXX_RESOLVE_LIB_DEFECTS
 346:/usr/include/c++/6/bits/stl_iterator.h ****   // DR 280. Comparison of reverse_iterator to const reverse_iterator.
 347:/usr/include/c++/6/bits/stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 348:/usr/include/c++/6/bits/stl_iterator.h ****     inline bool
 349:/usr/include/c++/6/bits/stl_iterator.h ****     operator==(const reverse_iterator<_IteratorL>& __x,
 350:/usr/include/c++/6/bits/stl_iterator.h **** 	       const reverse_iterator<_IteratorR>& __y)
 351:/usr/include/c++/6/bits/stl_iterator.h ****     { return __x.base() == __y.base(); }
 352:/usr/include/c++/6/bits/stl_iterator.h **** 
 353:/usr/include/c++/6/bits/stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 354:/usr/include/c++/6/bits/stl_iterator.h ****     inline bool
 355:/usr/include/c++/6/bits/stl_iterator.h ****     operator<(const reverse_iterator<_IteratorL>& __x,
 356:/usr/include/c++/6/bits/stl_iterator.h **** 	      const reverse_iterator<_IteratorR>& __y)
 357:/usr/include/c++/6/bits/stl_iterator.h ****     { return __y.base() < __x.base(); }
 358:/usr/include/c++/6/bits/stl_iterator.h **** 
 359:/usr/include/c++/6/bits/stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 360:/usr/include/c++/6/bits/stl_iterator.h ****     inline bool
 361:/usr/include/c++/6/bits/stl_iterator.h ****     operator!=(const reverse_iterator<_IteratorL>& __x,
 362:/usr/include/c++/6/bits/stl_iterator.h **** 	       const reverse_iterator<_IteratorR>& __y)
 363:/usr/include/c++/6/bits/stl_iterator.h ****     { return !(__x == __y); }
 364:/usr/include/c++/6/bits/stl_iterator.h **** 
 365:/usr/include/c++/6/bits/stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 366:/usr/include/c++/6/bits/stl_iterator.h ****     inline bool
 367:/usr/include/c++/6/bits/stl_iterator.h ****     operator>(const reverse_iterator<_IteratorL>& __x,
 368:/usr/include/c++/6/bits/stl_iterator.h **** 	      const reverse_iterator<_IteratorR>& __y)
 369:/usr/include/c++/6/bits/stl_iterator.h ****     { return __y < __x; }
 370:/usr/include/c++/6/bits/stl_iterator.h **** 
 371:/usr/include/c++/6/bits/stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 372:/usr/include/c++/6/bits/stl_iterator.h ****     inline bool
 373:/usr/include/c++/6/bits/stl_iterator.h ****     operator<=(const reverse_iterator<_IteratorL>& __x,
 374:/usr/include/c++/6/bits/stl_iterator.h **** 	       const reverse_iterator<_IteratorR>& __y)
 375:/usr/include/c++/6/bits/stl_iterator.h ****     { return !(__y < __x); }
 376:/usr/include/c++/6/bits/stl_iterator.h **** 
 377:/usr/include/c++/6/bits/stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 378:/usr/include/c++/6/bits/stl_iterator.h ****     inline bool
 379:/usr/include/c++/6/bits/stl_iterator.h ****     operator>=(const reverse_iterator<_IteratorL>& __x,
 380:/usr/include/c++/6/bits/stl_iterator.h **** 	       const reverse_iterator<_IteratorR>& __y)
 381:/usr/include/c++/6/bits/stl_iterator.h ****     { return !(__x < __y); }
GAS LISTING /tmp/ccsIN87E.s 			page 350


 382:/usr/include/c++/6/bits/stl_iterator.h **** 
 383:/usr/include/c++/6/bits/stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 384:/usr/include/c++/6/bits/stl_iterator.h **** #if __cplusplus >= 201103L
 385:/usr/include/c++/6/bits/stl_iterator.h ****     // DR 685.
 386:/usr/include/c++/6/bits/stl_iterator.h ****     inline auto
 387:/usr/include/c++/6/bits/stl_iterator.h ****     operator-(const reverse_iterator<_IteratorL>& __x,
 388:/usr/include/c++/6/bits/stl_iterator.h **** 	      const reverse_iterator<_IteratorR>& __y)
 389:/usr/include/c++/6/bits/stl_iterator.h ****     -> decltype(__y.base() - __x.base())
 390:/usr/include/c++/6/bits/stl_iterator.h **** #else
 391:/usr/include/c++/6/bits/stl_iterator.h ****     inline typename reverse_iterator<_IteratorL>::difference_type
 392:/usr/include/c++/6/bits/stl_iterator.h ****     operator-(const reverse_iterator<_IteratorL>& __x,
 393:/usr/include/c++/6/bits/stl_iterator.h **** 	      const reverse_iterator<_IteratorR>& __y)
 394:/usr/include/c++/6/bits/stl_iterator.h **** #endif
 395:/usr/include/c++/6/bits/stl_iterator.h ****     { return __y.base() - __x.base(); }
 396:/usr/include/c++/6/bits/stl_iterator.h ****   //@}
 397:/usr/include/c++/6/bits/stl_iterator.h **** 
 398:/usr/include/c++/6/bits/stl_iterator.h **** #if __cplusplus >= 201103L
 399:/usr/include/c++/6/bits/stl_iterator.h ****   // Same as C++14 make_reverse_iterator but used in C++03 mode too.
 400:/usr/include/c++/6/bits/stl_iterator.h ****   template<typename _Iterator>
 401:/usr/include/c++/6/bits/stl_iterator.h ****     inline reverse_iterator<_Iterator>
 402:/usr/include/c++/6/bits/stl_iterator.h ****     __make_reverse_iterator(_Iterator __i)
 403:/usr/include/c++/6/bits/stl_iterator.h ****     { return reverse_iterator<_Iterator>(__i); }
 404:/usr/include/c++/6/bits/stl_iterator.h **** 
 405:/usr/include/c++/6/bits/stl_iterator.h **** # if __cplusplus > 201103L
 406:/usr/include/c++/6/bits/stl_iterator.h **** #  define __cpp_lib_make_reverse_iterator 201402
 407:/usr/include/c++/6/bits/stl_iterator.h **** 
 408:/usr/include/c++/6/bits/stl_iterator.h ****   // _GLIBCXX_RESOLVE_LIB_DEFECTS
 409:/usr/include/c++/6/bits/stl_iterator.h ****   // DR 2285. make_reverse_iterator
 410:/usr/include/c++/6/bits/stl_iterator.h ****   /// Generator function for reverse_iterator.
 411:/usr/include/c++/6/bits/stl_iterator.h ****   template<typename _Iterator>
 412:/usr/include/c++/6/bits/stl_iterator.h ****     inline reverse_iterator<_Iterator>
 413:/usr/include/c++/6/bits/stl_iterator.h ****     make_reverse_iterator(_Iterator __i)
 414:/usr/include/c++/6/bits/stl_iterator.h ****     { return reverse_iterator<_Iterator>(__i); }
 415:/usr/include/c++/6/bits/stl_iterator.h **** # endif
 416:/usr/include/c++/6/bits/stl_iterator.h **** #endif
 417:/usr/include/c++/6/bits/stl_iterator.h **** 
 418:/usr/include/c++/6/bits/stl_iterator.h **** #if __cplusplus >= 201103L
 419:/usr/include/c++/6/bits/stl_iterator.h ****   template<typename _Iterator>
 420:/usr/include/c++/6/bits/stl_iterator.h ****     auto
 421:/usr/include/c++/6/bits/stl_iterator.h ****     __niter_base(reverse_iterator<_Iterator> __it)
 422:/usr/include/c++/6/bits/stl_iterator.h ****     -> decltype(__make_reverse_iterator(__niter_base(__it.base())))
 423:/usr/include/c++/6/bits/stl_iterator.h ****     { return __make_reverse_iterator(__niter_base(__it.base())); }
 424:/usr/include/c++/6/bits/stl_iterator.h **** 
 425:/usr/include/c++/6/bits/stl_iterator.h ****   template<typename _Iterator>
 426:/usr/include/c++/6/bits/stl_iterator.h ****     struct __is_move_iterator<reverse_iterator<_Iterator> >
 427:/usr/include/c++/6/bits/stl_iterator.h ****       : __is_move_iterator<_Iterator>
 428:/usr/include/c++/6/bits/stl_iterator.h ****     { };
 429:/usr/include/c++/6/bits/stl_iterator.h **** 
 430:/usr/include/c++/6/bits/stl_iterator.h ****   template<typename _Iterator>
 431:/usr/include/c++/6/bits/stl_iterator.h ****     auto
 432:/usr/include/c++/6/bits/stl_iterator.h ****     __miter_base(reverse_iterator<_Iterator> __it)
 433:/usr/include/c++/6/bits/stl_iterator.h ****     -> decltype(__make_reverse_iterator(__miter_base(__it.base())))
 434:/usr/include/c++/6/bits/stl_iterator.h ****     { return __make_reverse_iterator(__miter_base(__it.base())); }
 435:/usr/include/c++/6/bits/stl_iterator.h **** #endif
 436:/usr/include/c++/6/bits/stl_iterator.h **** 
 437:/usr/include/c++/6/bits/stl_iterator.h ****   // 24.4.2.2.1 back_insert_iterator
 438:/usr/include/c++/6/bits/stl_iterator.h ****   /**
GAS LISTING /tmp/ccsIN87E.s 			page 351


 439:/usr/include/c++/6/bits/stl_iterator.h ****    *  @brief  Turns assignment into insertion.
 440:/usr/include/c++/6/bits/stl_iterator.h ****    *
 441:/usr/include/c++/6/bits/stl_iterator.h ****    *  These are output iterators, constructed from a container-of-T.
 442:/usr/include/c++/6/bits/stl_iterator.h ****    *  Assigning a T to the iterator appends it to the container using
 443:/usr/include/c++/6/bits/stl_iterator.h ****    *  push_back.
 444:/usr/include/c++/6/bits/stl_iterator.h ****    *
 445:/usr/include/c++/6/bits/stl_iterator.h ****    *  Tip:  Using the back_inserter function to create these iterators can
 446:/usr/include/c++/6/bits/stl_iterator.h ****    *  save typing.
 447:/usr/include/c++/6/bits/stl_iterator.h ****   */
 448:/usr/include/c++/6/bits/stl_iterator.h ****   template<typename _Container>
 449:/usr/include/c++/6/bits/stl_iterator.h ****     class back_insert_iterator
 450:/usr/include/c++/6/bits/stl_iterator.h ****     : public iterator<output_iterator_tag, void, void, void, void>
 451:/usr/include/c++/6/bits/stl_iterator.h ****     {
 452:/usr/include/c++/6/bits/stl_iterator.h ****     protected:
 453:/usr/include/c++/6/bits/stl_iterator.h ****       _Container* container;
 454:/usr/include/c++/6/bits/stl_iterator.h **** 
 455:/usr/include/c++/6/bits/stl_iterator.h ****     public:
 456:/usr/include/c++/6/bits/stl_iterator.h ****       /// A nested typedef for the type of whatever container you used.
 457:/usr/include/c++/6/bits/stl_iterator.h ****       typedef _Container          container_type;
 458:/usr/include/c++/6/bits/stl_iterator.h **** 
 459:/usr/include/c++/6/bits/stl_iterator.h ****       /// The only way to create this %iterator is with a container.
 460:/usr/include/c++/6/bits/stl_iterator.h ****       explicit
 461:/usr/include/c++/6/bits/stl_iterator.h ****       back_insert_iterator(_Container& __x)
 462:/usr/include/c++/6/bits/stl_iterator.h ****       : container(std::__addressof(__x)) { }
 463:/usr/include/c++/6/bits/stl_iterator.h **** 
 464:/usr/include/c++/6/bits/stl_iterator.h ****       /**
 465:/usr/include/c++/6/bits/stl_iterator.h ****        *  @param  __value  An instance of whatever type
 466:/usr/include/c++/6/bits/stl_iterator.h ****        *                 container_type::const_reference is; presumably a
 467:/usr/include/c++/6/bits/stl_iterator.h ****        *                 reference-to-const T for container<T>.
 468:/usr/include/c++/6/bits/stl_iterator.h ****        *  @return  This %iterator, for chained operations.
 469:/usr/include/c++/6/bits/stl_iterator.h ****        *
 470:/usr/include/c++/6/bits/stl_iterator.h ****        *  This kind of %iterator doesn't really have a @a position in the
 471:/usr/include/c++/6/bits/stl_iterator.h ****        *  container (you can think of the position as being permanently at
 472:/usr/include/c++/6/bits/stl_iterator.h ****        *  the end, if you like).  Assigning a value to the %iterator will
 473:/usr/include/c++/6/bits/stl_iterator.h ****        *  always append the value to the end of the container.
 474:/usr/include/c++/6/bits/stl_iterator.h ****       */
 475:/usr/include/c++/6/bits/stl_iterator.h **** #if __cplusplus < 201103L
 476:/usr/include/c++/6/bits/stl_iterator.h ****       back_insert_iterator&
 477:/usr/include/c++/6/bits/stl_iterator.h ****       operator=(typename _Container::const_reference __value)
 478:/usr/include/c++/6/bits/stl_iterator.h ****       {
 479:/usr/include/c++/6/bits/stl_iterator.h **** 	container->push_back(__value);
 480:/usr/include/c++/6/bits/stl_iterator.h **** 	return *this;
 481:/usr/include/c++/6/bits/stl_iterator.h ****       }
 482:/usr/include/c++/6/bits/stl_iterator.h **** #else
 483:/usr/include/c++/6/bits/stl_iterator.h ****       back_insert_iterator&
 484:/usr/include/c++/6/bits/stl_iterator.h ****       operator=(const typename _Container::value_type& __value)
 485:/usr/include/c++/6/bits/stl_iterator.h ****       {
 486:/usr/include/c++/6/bits/stl_iterator.h **** 	container->push_back(__value);
 487:/usr/include/c++/6/bits/stl_iterator.h **** 	return *this;
 488:/usr/include/c++/6/bits/stl_iterator.h ****       }
 489:/usr/include/c++/6/bits/stl_iterator.h **** 
 490:/usr/include/c++/6/bits/stl_iterator.h ****       back_insert_iterator&
 491:/usr/include/c++/6/bits/stl_iterator.h ****       operator=(typename _Container::value_type&& __value)
 492:/usr/include/c++/6/bits/stl_iterator.h ****       {
 493:/usr/include/c++/6/bits/stl_iterator.h **** 	container->push_back(std::move(__value));
 494:/usr/include/c++/6/bits/stl_iterator.h **** 	return *this;
 495:/usr/include/c++/6/bits/stl_iterator.h ****       }
GAS LISTING /tmp/ccsIN87E.s 			page 352


 496:/usr/include/c++/6/bits/stl_iterator.h **** #endif
 497:/usr/include/c++/6/bits/stl_iterator.h **** 
 498:/usr/include/c++/6/bits/stl_iterator.h ****       /// Simply returns *this.
 499:/usr/include/c++/6/bits/stl_iterator.h ****       back_insert_iterator&
 500:/usr/include/c++/6/bits/stl_iterator.h ****       operator*()
 501:/usr/include/c++/6/bits/stl_iterator.h ****       { return *this; }
 502:/usr/include/c++/6/bits/stl_iterator.h **** 
 503:/usr/include/c++/6/bits/stl_iterator.h ****       /// Simply returns *this.  (This %iterator does not @a move.)
 504:/usr/include/c++/6/bits/stl_iterator.h ****       back_insert_iterator&
 505:/usr/include/c++/6/bits/stl_iterator.h ****       operator++()
 506:/usr/include/c++/6/bits/stl_iterator.h ****       { return *this; }
 507:/usr/include/c++/6/bits/stl_iterator.h **** 
 508:/usr/include/c++/6/bits/stl_iterator.h ****       /// Simply returns *this.  (This %iterator does not @a move.)
 509:/usr/include/c++/6/bits/stl_iterator.h ****       back_insert_iterator
 510:/usr/include/c++/6/bits/stl_iterator.h ****       operator++(int)
 511:/usr/include/c++/6/bits/stl_iterator.h ****       { return *this; }
 512:/usr/include/c++/6/bits/stl_iterator.h ****     };
 513:/usr/include/c++/6/bits/stl_iterator.h **** 
 514:/usr/include/c++/6/bits/stl_iterator.h ****   /**
 515:/usr/include/c++/6/bits/stl_iterator.h ****    *  @param  __x  A container of arbitrary type.
 516:/usr/include/c++/6/bits/stl_iterator.h ****    *  @return  An instance of back_insert_iterator working on @p __x.
 517:/usr/include/c++/6/bits/stl_iterator.h ****    *
 518:/usr/include/c++/6/bits/stl_iterator.h ****    *  This wrapper function helps in creating back_insert_iterator instances.
 519:/usr/include/c++/6/bits/stl_iterator.h ****    *  Typing the name of the %iterator requires knowing the precise full
 520:/usr/include/c++/6/bits/stl_iterator.h ****    *  type of the container, which can be tedious and impedes generic
 521:/usr/include/c++/6/bits/stl_iterator.h ****    *  programming.  Using this function lets you take advantage of automatic
 522:/usr/include/c++/6/bits/stl_iterator.h ****    *  template parameter deduction, making the compiler match the correct
 523:/usr/include/c++/6/bits/stl_iterator.h ****    *  types for you.
 524:/usr/include/c++/6/bits/stl_iterator.h ****   */
 525:/usr/include/c++/6/bits/stl_iterator.h ****   template<typename _Container>
 526:/usr/include/c++/6/bits/stl_iterator.h ****     inline back_insert_iterator<_Container>
 527:/usr/include/c++/6/bits/stl_iterator.h ****     back_inserter(_Container& __x)
 528:/usr/include/c++/6/bits/stl_iterator.h ****     { return back_insert_iterator<_Container>(__x); }
 529:/usr/include/c++/6/bits/stl_iterator.h **** 
 530:/usr/include/c++/6/bits/stl_iterator.h ****   /**
 531:/usr/include/c++/6/bits/stl_iterator.h ****    *  @brief  Turns assignment into insertion.
 532:/usr/include/c++/6/bits/stl_iterator.h ****    *
 533:/usr/include/c++/6/bits/stl_iterator.h ****    *  These are output iterators, constructed from a container-of-T.
 534:/usr/include/c++/6/bits/stl_iterator.h ****    *  Assigning a T to the iterator prepends it to the container using
 535:/usr/include/c++/6/bits/stl_iterator.h ****    *  push_front.
 536:/usr/include/c++/6/bits/stl_iterator.h ****    *
 537:/usr/include/c++/6/bits/stl_iterator.h ****    *  Tip:  Using the front_inserter function to create these iterators can
 538:/usr/include/c++/6/bits/stl_iterator.h ****    *  save typing.
 539:/usr/include/c++/6/bits/stl_iterator.h ****   */
 540:/usr/include/c++/6/bits/stl_iterator.h ****   template<typename _Container>
 541:/usr/include/c++/6/bits/stl_iterator.h ****     class front_insert_iterator
 542:/usr/include/c++/6/bits/stl_iterator.h ****     : public iterator<output_iterator_tag, void, void, void, void>
 543:/usr/include/c++/6/bits/stl_iterator.h ****     {
 544:/usr/include/c++/6/bits/stl_iterator.h ****     protected:
 545:/usr/include/c++/6/bits/stl_iterator.h ****       _Container* container;
 546:/usr/include/c++/6/bits/stl_iterator.h **** 
 547:/usr/include/c++/6/bits/stl_iterator.h ****     public:
 548:/usr/include/c++/6/bits/stl_iterator.h ****       /// A nested typedef for the type of whatever container you used.
 549:/usr/include/c++/6/bits/stl_iterator.h ****       typedef _Container          container_type;
 550:/usr/include/c++/6/bits/stl_iterator.h **** 
 551:/usr/include/c++/6/bits/stl_iterator.h ****       /// The only way to create this %iterator is with a container.
 552:/usr/include/c++/6/bits/stl_iterator.h ****       explicit front_insert_iterator(_Container& __x)
GAS LISTING /tmp/ccsIN87E.s 			page 353


 553:/usr/include/c++/6/bits/stl_iterator.h ****       : container(std::__addressof(__x)) { }
 554:/usr/include/c++/6/bits/stl_iterator.h **** 
 555:/usr/include/c++/6/bits/stl_iterator.h ****       /**
 556:/usr/include/c++/6/bits/stl_iterator.h ****        *  @param  __value  An instance of whatever type
 557:/usr/include/c++/6/bits/stl_iterator.h ****        *                 container_type::const_reference is; presumably a
 558:/usr/include/c++/6/bits/stl_iterator.h ****        *                 reference-to-const T for container<T>.
 559:/usr/include/c++/6/bits/stl_iterator.h ****        *  @return  This %iterator, for chained operations.
 560:/usr/include/c++/6/bits/stl_iterator.h ****        *
 561:/usr/include/c++/6/bits/stl_iterator.h ****        *  This kind of %iterator doesn't really have a @a position in the
 562:/usr/include/c++/6/bits/stl_iterator.h ****        *  container (you can think of the position as being permanently at
 563:/usr/include/c++/6/bits/stl_iterator.h ****        *  the front, if you like).  Assigning a value to the %iterator will
 564:/usr/include/c++/6/bits/stl_iterator.h ****        *  always prepend the value to the front of the container.
 565:/usr/include/c++/6/bits/stl_iterator.h ****       */
 566:/usr/include/c++/6/bits/stl_iterator.h **** #if __cplusplus < 201103L
 567:/usr/include/c++/6/bits/stl_iterator.h ****       front_insert_iterator&
 568:/usr/include/c++/6/bits/stl_iterator.h ****       operator=(typename _Container::const_reference __value)
 569:/usr/include/c++/6/bits/stl_iterator.h ****       {
 570:/usr/include/c++/6/bits/stl_iterator.h **** 	container->push_front(__value);
 571:/usr/include/c++/6/bits/stl_iterator.h **** 	return *this;
 572:/usr/include/c++/6/bits/stl_iterator.h ****       }
 573:/usr/include/c++/6/bits/stl_iterator.h **** #else
 574:/usr/include/c++/6/bits/stl_iterator.h ****       front_insert_iterator&
 575:/usr/include/c++/6/bits/stl_iterator.h ****       operator=(const typename _Container::value_type& __value)
 576:/usr/include/c++/6/bits/stl_iterator.h ****       {
 577:/usr/include/c++/6/bits/stl_iterator.h **** 	container->push_front(__value);
 578:/usr/include/c++/6/bits/stl_iterator.h **** 	return *this;
 579:/usr/include/c++/6/bits/stl_iterator.h ****       }
 580:/usr/include/c++/6/bits/stl_iterator.h **** 
 581:/usr/include/c++/6/bits/stl_iterator.h ****       front_insert_iterator&
 582:/usr/include/c++/6/bits/stl_iterator.h ****       operator=(typename _Container::value_type&& __value)
 583:/usr/include/c++/6/bits/stl_iterator.h ****       {
 584:/usr/include/c++/6/bits/stl_iterator.h **** 	container->push_front(std::move(__value));
 585:/usr/include/c++/6/bits/stl_iterator.h **** 	return *this;
 586:/usr/include/c++/6/bits/stl_iterator.h ****       }
 587:/usr/include/c++/6/bits/stl_iterator.h **** #endif
 588:/usr/include/c++/6/bits/stl_iterator.h **** 
 589:/usr/include/c++/6/bits/stl_iterator.h ****       /// Simply returns *this.
 590:/usr/include/c++/6/bits/stl_iterator.h ****       front_insert_iterator&
 591:/usr/include/c++/6/bits/stl_iterator.h ****       operator*()
 592:/usr/include/c++/6/bits/stl_iterator.h ****       { return *this; }
 593:/usr/include/c++/6/bits/stl_iterator.h **** 
 594:/usr/include/c++/6/bits/stl_iterator.h ****       /// Simply returns *this.  (This %iterator does not @a move.)
 595:/usr/include/c++/6/bits/stl_iterator.h ****       front_insert_iterator&
 596:/usr/include/c++/6/bits/stl_iterator.h ****       operator++()
 597:/usr/include/c++/6/bits/stl_iterator.h ****       { return *this; }
 598:/usr/include/c++/6/bits/stl_iterator.h **** 
 599:/usr/include/c++/6/bits/stl_iterator.h ****       /// Simply returns *this.  (This %iterator does not @a move.)
 600:/usr/include/c++/6/bits/stl_iterator.h ****       front_insert_iterator
 601:/usr/include/c++/6/bits/stl_iterator.h ****       operator++(int)
 602:/usr/include/c++/6/bits/stl_iterator.h ****       { return *this; }
 603:/usr/include/c++/6/bits/stl_iterator.h ****     };
 604:/usr/include/c++/6/bits/stl_iterator.h **** 
 605:/usr/include/c++/6/bits/stl_iterator.h ****   /**
 606:/usr/include/c++/6/bits/stl_iterator.h ****    *  @param  __x  A container of arbitrary type.
 607:/usr/include/c++/6/bits/stl_iterator.h ****    *  @return  An instance of front_insert_iterator working on @p x.
 608:/usr/include/c++/6/bits/stl_iterator.h ****    *
 609:/usr/include/c++/6/bits/stl_iterator.h ****    *  This wrapper function helps in creating front_insert_iterator instances.
GAS LISTING /tmp/ccsIN87E.s 			page 354


 610:/usr/include/c++/6/bits/stl_iterator.h ****    *  Typing the name of the %iterator requires knowing the precise full
 611:/usr/include/c++/6/bits/stl_iterator.h ****    *  type of the container, which can be tedious and impedes generic
 612:/usr/include/c++/6/bits/stl_iterator.h ****    *  programming.  Using this function lets you take advantage of automatic
 613:/usr/include/c++/6/bits/stl_iterator.h ****    *  template parameter deduction, making the compiler match the correct
 614:/usr/include/c++/6/bits/stl_iterator.h ****    *  types for you.
 615:/usr/include/c++/6/bits/stl_iterator.h ****   */
 616:/usr/include/c++/6/bits/stl_iterator.h ****   template<typename _Container>
 617:/usr/include/c++/6/bits/stl_iterator.h ****     inline front_insert_iterator<_Container>
 618:/usr/include/c++/6/bits/stl_iterator.h ****     front_inserter(_Container& __x)
 619:/usr/include/c++/6/bits/stl_iterator.h ****     { return front_insert_iterator<_Container>(__x); }
 620:/usr/include/c++/6/bits/stl_iterator.h **** 
 621:/usr/include/c++/6/bits/stl_iterator.h ****   /**
 622:/usr/include/c++/6/bits/stl_iterator.h ****    *  @brief  Turns assignment into insertion.
 623:/usr/include/c++/6/bits/stl_iterator.h ****    *
 624:/usr/include/c++/6/bits/stl_iterator.h ****    *  These are output iterators, constructed from a container-of-T.
 625:/usr/include/c++/6/bits/stl_iterator.h ****    *  Assigning a T to the iterator inserts it in the container at the
 626:/usr/include/c++/6/bits/stl_iterator.h ****    *  %iterator's position, rather than overwriting the value at that
 627:/usr/include/c++/6/bits/stl_iterator.h ****    *  position.
 628:/usr/include/c++/6/bits/stl_iterator.h ****    *
 629:/usr/include/c++/6/bits/stl_iterator.h ****    *  (Sequences will actually insert a @e copy of the value before the
 630:/usr/include/c++/6/bits/stl_iterator.h ****    *  %iterator's position.)
 631:/usr/include/c++/6/bits/stl_iterator.h ****    *
 632:/usr/include/c++/6/bits/stl_iterator.h ****    *  Tip:  Using the inserter function to create these iterators can
 633:/usr/include/c++/6/bits/stl_iterator.h ****    *  save typing.
 634:/usr/include/c++/6/bits/stl_iterator.h ****   */
 635:/usr/include/c++/6/bits/stl_iterator.h ****   template<typename _Container>
 636:/usr/include/c++/6/bits/stl_iterator.h ****     class insert_iterator
 637:/usr/include/c++/6/bits/stl_iterator.h ****     : public iterator<output_iterator_tag, void, void, void, void>
 638:/usr/include/c++/6/bits/stl_iterator.h ****     {
 639:/usr/include/c++/6/bits/stl_iterator.h ****     protected:
 640:/usr/include/c++/6/bits/stl_iterator.h ****       _Container* container;
 641:/usr/include/c++/6/bits/stl_iterator.h ****       typename _Container::iterator iter;
 642:/usr/include/c++/6/bits/stl_iterator.h **** 
 643:/usr/include/c++/6/bits/stl_iterator.h ****     public:
 644:/usr/include/c++/6/bits/stl_iterator.h ****       /// A nested typedef for the type of whatever container you used.
 645:/usr/include/c++/6/bits/stl_iterator.h ****       typedef _Container          container_type;
 646:/usr/include/c++/6/bits/stl_iterator.h **** 
 647:/usr/include/c++/6/bits/stl_iterator.h ****       /**
 648:/usr/include/c++/6/bits/stl_iterator.h ****        *  The only way to create this %iterator is with a container and an
 649:/usr/include/c++/6/bits/stl_iterator.h ****        *  initial position (a normal %iterator into the container).
 650:/usr/include/c++/6/bits/stl_iterator.h ****       */
 651:/usr/include/c++/6/bits/stl_iterator.h ****       insert_iterator(_Container& __x, typename _Container::iterator __i)
 652:/usr/include/c++/6/bits/stl_iterator.h ****       : container(std::__addressof(__x)), iter(__i) {}
 653:/usr/include/c++/6/bits/stl_iterator.h **** 
 654:/usr/include/c++/6/bits/stl_iterator.h ****       /**
 655:/usr/include/c++/6/bits/stl_iterator.h ****        *  @param  __value  An instance of whatever type
 656:/usr/include/c++/6/bits/stl_iterator.h ****        *                 container_type::const_reference is; presumably a
 657:/usr/include/c++/6/bits/stl_iterator.h ****        *                 reference-to-const T for container<T>.
 658:/usr/include/c++/6/bits/stl_iterator.h ****        *  @return  This %iterator, for chained operations.
 659:/usr/include/c++/6/bits/stl_iterator.h ****        *
 660:/usr/include/c++/6/bits/stl_iterator.h ****        *  This kind of %iterator maintains its own position in the
 661:/usr/include/c++/6/bits/stl_iterator.h ****        *  container.  Assigning a value to the %iterator will insert the
 662:/usr/include/c++/6/bits/stl_iterator.h ****        *  value into the container at the place before the %iterator.
 663:/usr/include/c++/6/bits/stl_iterator.h ****        *
 664:/usr/include/c++/6/bits/stl_iterator.h ****        *  The position is maintained such that subsequent assignments will
 665:/usr/include/c++/6/bits/stl_iterator.h ****        *  insert values immediately after one another.  For example,
 666:/usr/include/c++/6/bits/stl_iterator.h ****        *  @code
GAS LISTING /tmp/ccsIN87E.s 			page 355


 667:/usr/include/c++/6/bits/stl_iterator.h ****        *     // vector v contains A and Z
 668:/usr/include/c++/6/bits/stl_iterator.h ****        *
 669:/usr/include/c++/6/bits/stl_iterator.h ****        *     insert_iterator i (v, ++v.begin());
 670:/usr/include/c++/6/bits/stl_iterator.h ****        *     i = 1;
 671:/usr/include/c++/6/bits/stl_iterator.h ****        *     i = 2;
 672:/usr/include/c++/6/bits/stl_iterator.h ****        *     i = 3;
 673:/usr/include/c++/6/bits/stl_iterator.h ****        *
 674:/usr/include/c++/6/bits/stl_iterator.h ****        *     // vector v contains A, 1, 2, 3, and Z
 675:/usr/include/c++/6/bits/stl_iterator.h ****        *  @endcode
 676:/usr/include/c++/6/bits/stl_iterator.h ****       */
 677:/usr/include/c++/6/bits/stl_iterator.h **** #if __cplusplus < 201103L
 678:/usr/include/c++/6/bits/stl_iterator.h ****       insert_iterator&
 679:/usr/include/c++/6/bits/stl_iterator.h ****       operator=(typename _Container::const_reference __value)
 680:/usr/include/c++/6/bits/stl_iterator.h ****       {
 681:/usr/include/c++/6/bits/stl_iterator.h **** 	iter = container->insert(iter, __value);
 682:/usr/include/c++/6/bits/stl_iterator.h **** 	++iter;
 683:/usr/include/c++/6/bits/stl_iterator.h **** 	return *this;
 684:/usr/include/c++/6/bits/stl_iterator.h ****       }
 685:/usr/include/c++/6/bits/stl_iterator.h **** #else
 686:/usr/include/c++/6/bits/stl_iterator.h ****       insert_iterator&
 687:/usr/include/c++/6/bits/stl_iterator.h ****       operator=(const typename _Container::value_type& __value)
 688:/usr/include/c++/6/bits/stl_iterator.h ****       {
 689:/usr/include/c++/6/bits/stl_iterator.h **** 	iter = container->insert(iter, __value);
 690:/usr/include/c++/6/bits/stl_iterator.h **** 	++iter;
 691:/usr/include/c++/6/bits/stl_iterator.h **** 	return *this;
 692:/usr/include/c++/6/bits/stl_iterator.h ****       }
 693:/usr/include/c++/6/bits/stl_iterator.h **** 
 694:/usr/include/c++/6/bits/stl_iterator.h ****       insert_iterator&
 695:/usr/include/c++/6/bits/stl_iterator.h ****       operator=(typename _Container::value_type&& __value)
 696:/usr/include/c++/6/bits/stl_iterator.h ****       {
 697:/usr/include/c++/6/bits/stl_iterator.h **** 	iter = container->insert(iter, std::move(__value));
 698:/usr/include/c++/6/bits/stl_iterator.h **** 	++iter;
 699:/usr/include/c++/6/bits/stl_iterator.h **** 	return *this;
 700:/usr/include/c++/6/bits/stl_iterator.h ****       }
 701:/usr/include/c++/6/bits/stl_iterator.h **** #endif
 702:/usr/include/c++/6/bits/stl_iterator.h **** 
 703:/usr/include/c++/6/bits/stl_iterator.h ****       /// Simply returns *this.
 704:/usr/include/c++/6/bits/stl_iterator.h ****       insert_iterator&
 705:/usr/include/c++/6/bits/stl_iterator.h ****       operator*()
 706:/usr/include/c++/6/bits/stl_iterator.h ****       { return *this; }
 707:/usr/include/c++/6/bits/stl_iterator.h **** 
 708:/usr/include/c++/6/bits/stl_iterator.h ****       /// Simply returns *this.  (This %iterator does not @a move.)
 709:/usr/include/c++/6/bits/stl_iterator.h ****       insert_iterator&
 710:/usr/include/c++/6/bits/stl_iterator.h ****       operator++()
 711:/usr/include/c++/6/bits/stl_iterator.h ****       { return *this; }
 712:/usr/include/c++/6/bits/stl_iterator.h **** 
 713:/usr/include/c++/6/bits/stl_iterator.h ****       /// Simply returns *this.  (This %iterator does not @a move.)
 714:/usr/include/c++/6/bits/stl_iterator.h ****       insert_iterator&
 715:/usr/include/c++/6/bits/stl_iterator.h ****       operator++(int)
 716:/usr/include/c++/6/bits/stl_iterator.h ****       { return *this; }
 717:/usr/include/c++/6/bits/stl_iterator.h ****     };
 718:/usr/include/c++/6/bits/stl_iterator.h **** 
 719:/usr/include/c++/6/bits/stl_iterator.h ****   /**
 720:/usr/include/c++/6/bits/stl_iterator.h ****    *  @param __x  A container of arbitrary type.
 721:/usr/include/c++/6/bits/stl_iterator.h ****    *  @return  An instance of insert_iterator working on @p __x.
 722:/usr/include/c++/6/bits/stl_iterator.h ****    *
 723:/usr/include/c++/6/bits/stl_iterator.h ****    *  This wrapper function helps in creating insert_iterator instances.
GAS LISTING /tmp/ccsIN87E.s 			page 356


 724:/usr/include/c++/6/bits/stl_iterator.h ****    *  Typing the name of the %iterator requires knowing the precise full
 725:/usr/include/c++/6/bits/stl_iterator.h ****    *  type of the container, which can be tedious and impedes generic
 726:/usr/include/c++/6/bits/stl_iterator.h ****    *  programming.  Using this function lets you take advantage of automatic
 727:/usr/include/c++/6/bits/stl_iterator.h ****    *  template parameter deduction, making the compiler match the correct
 728:/usr/include/c++/6/bits/stl_iterator.h ****    *  types for you.
 729:/usr/include/c++/6/bits/stl_iterator.h ****   */
 730:/usr/include/c++/6/bits/stl_iterator.h ****   template<typename _Container, typename _Iterator>
 731:/usr/include/c++/6/bits/stl_iterator.h ****     inline insert_iterator<_Container>
 732:/usr/include/c++/6/bits/stl_iterator.h ****     inserter(_Container& __x, _Iterator __i)
 733:/usr/include/c++/6/bits/stl_iterator.h ****     {
 734:/usr/include/c++/6/bits/stl_iterator.h ****       return insert_iterator<_Container>(__x,
 735:/usr/include/c++/6/bits/stl_iterator.h **** 					 typename _Container::iterator(__i));
 736:/usr/include/c++/6/bits/stl_iterator.h ****     }
 737:/usr/include/c++/6/bits/stl_iterator.h **** 
 738:/usr/include/c++/6/bits/stl_iterator.h ****   // @} group iterators
 739:/usr/include/c++/6/bits/stl_iterator.h **** 
 740:/usr/include/c++/6/bits/stl_iterator.h **** _GLIBCXX_END_NAMESPACE_VERSION
 741:/usr/include/c++/6/bits/stl_iterator.h **** } // namespace
 742:/usr/include/c++/6/bits/stl_iterator.h **** 
 743:/usr/include/c++/6/bits/stl_iterator.h **** namespace __gnu_cxx _GLIBCXX_VISIBILITY(default)
 744:/usr/include/c++/6/bits/stl_iterator.h **** {
 745:/usr/include/c++/6/bits/stl_iterator.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
 746:/usr/include/c++/6/bits/stl_iterator.h **** 
 747:/usr/include/c++/6/bits/stl_iterator.h ****   // This iterator adapter is @a normal in the sense that it does not
 748:/usr/include/c++/6/bits/stl_iterator.h ****   // change the semantics of any of the operators of its iterator
 749:/usr/include/c++/6/bits/stl_iterator.h ****   // parameter.  Its primary purpose is to convert an iterator that is
 750:/usr/include/c++/6/bits/stl_iterator.h ****   // not a class, e.g. a pointer, into an iterator that is a class.
 751:/usr/include/c++/6/bits/stl_iterator.h ****   // The _Container parameter exists solely so that different containers
 752:/usr/include/c++/6/bits/stl_iterator.h ****   // using this template can instantiate different types, even if the
 753:/usr/include/c++/6/bits/stl_iterator.h ****   // _Iterator parameter is the same.
 754:/usr/include/c++/6/bits/stl_iterator.h ****   using std::iterator_traits;
 755:/usr/include/c++/6/bits/stl_iterator.h ****   using std::iterator;
 756:/usr/include/c++/6/bits/stl_iterator.h ****   template<typename _Iterator, typename _Container>
 757:/usr/include/c++/6/bits/stl_iterator.h ****     class __normal_iterator
 758:/usr/include/c++/6/bits/stl_iterator.h ****     {
 759:/usr/include/c++/6/bits/stl_iterator.h ****     protected:
 760:/usr/include/c++/6/bits/stl_iterator.h ****       _Iterator _M_current;
 761:/usr/include/c++/6/bits/stl_iterator.h **** 
 762:/usr/include/c++/6/bits/stl_iterator.h ****       typedef iterator_traits<_Iterator>		__traits_type;
 763:/usr/include/c++/6/bits/stl_iterator.h **** 
 764:/usr/include/c++/6/bits/stl_iterator.h ****     public:
 765:/usr/include/c++/6/bits/stl_iterator.h ****       typedef _Iterator					iterator_type;
 766:/usr/include/c++/6/bits/stl_iterator.h ****       typedef typename __traits_type::iterator_category iterator_category;
 767:/usr/include/c++/6/bits/stl_iterator.h ****       typedef typename __traits_type::value_type  	value_type;
 768:/usr/include/c++/6/bits/stl_iterator.h ****       typedef typename __traits_type::difference_type 	difference_type;
 769:/usr/include/c++/6/bits/stl_iterator.h ****       typedef typename __traits_type::reference 	reference;
 770:/usr/include/c++/6/bits/stl_iterator.h ****       typedef typename __traits_type::pointer   	pointer;
 771:/usr/include/c++/6/bits/stl_iterator.h **** 
 772:/usr/include/c++/6/bits/stl_iterator.h ****       _GLIBCXX_CONSTEXPR __normal_iterator() _GLIBCXX_NOEXCEPT
 773:/usr/include/c++/6/bits/stl_iterator.h ****       : _M_current(_Iterator()) { }
 774:/usr/include/c++/6/bits/stl_iterator.h **** 
 775:/usr/include/c++/6/bits/stl_iterator.h ****       explicit
 776:/usr/include/c++/6/bits/stl_iterator.h ****       __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
 777:/usr/include/c++/6/bits/stl_iterator.h ****       : _M_current(__i) { }
 778:/usr/include/c++/6/bits/stl_iterator.h **** 
 779:/usr/include/c++/6/bits/stl_iterator.h ****       // Allow iterator to const_iterator conversion
 780:/usr/include/c++/6/bits/stl_iterator.h ****       template<typename _Iter>
GAS LISTING /tmp/ccsIN87E.s 			page 357


 781:/usr/include/c++/6/bits/stl_iterator.h ****         __normal_iterator(const __normal_iterator<_Iter,
 7959              		.loc 32 781 0
 7960              		.cfi_startproc
 7961 0000 55       		pushq	%rbp
 7962              		.cfi_def_cfa_offset 16
 7963              		.cfi_offset 6, -16
 7964 0001 4889E5   		movq	%rsp, %rbp
 7965              		.cfi_def_cfa_register 6
 7966 0004 4883EC10 		subq	$16, %rsp
 7967 0008 48897DF8 		movq	%rdi, -8(%rbp)
 7968 000c 488975F0 		movq	%rsi, -16(%rbp)
 7969              	.LBB80:
 782:/usr/include/c++/6/bits/stl_iterator.h **** 			  typename __enable_if<
 783:/usr/include/c++/6/bits/stl_iterator.h ****       	       (std::__are_same<_Iter, typename _Container::pointer>::__value),
 784:/usr/include/c++/6/bits/stl_iterator.h **** 		      _Container>::__type>& __i) _GLIBCXX_NOEXCEPT
 785:/usr/include/c++/6/bits/stl_iterator.h ****         : _M_current(__i.base()) { }
 7970              		.loc 32 785 0
 7971 0010 488B45F0 		movq	-16(%rbp), %rax
 7972 0014 4889C7   		movq	%rax, %rdi
 7973 0017 E8000000 		call	_ZNK9__gnu_cxx17__normal_iteratorIPN2gr5tag_tESt6vectorIS2_SaIS2_EEE4baseEv
 7973      00
 7974 001c 488B10   		movq	(%rax), %rdx
 7975 001f 488B45F8 		movq	-8(%rbp), %rax
 7976 0023 488910   		movq	%rdx, (%rax)
 7977              	.LBE80:
 7978 0026 90       		nop
 7979 0027 C9       		leave
 7980              		.cfi_def_cfa 7, 8
 7981 0028 C3       		ret
 7982              		.cfi_endproc
 7983              	.LFE12307:
 7985              		.weak	_ZN9__gnu_cxx17__normal_iteratorIPKN2gr5tag_tESt6vectorIS2_SaIS2_EEEC1IPS2_EERKNS0_IT_NS_11_
 7986              		.set	_ZN9__gnu_cxx17__normal_iteratorIPKN2gr5tag_tESt6vectorIS2_SaIS2_EEEC1IPS2_EERKNS0_IT_NS_11__
 7987              		.section	.text._ZNSt6vectorIN2gr5tag_tESaIS1_EE5eraseEN9__gnu_cxx17__normal_iteratorIPKS1_S3_EE,"a
 7988              		.align 2
 7989              		.weak	_ZNSt6vectorIN2gr5tag_tESaIS1_EE5eraseEN9__gnu_cxx17__normal_iteratorIPKS1_S3_EE
 7991              	_ZNSt6vectorIN2gr5tag_tESaIS1_EE5eraseEN9__gnu_cxx17__normal_iteratorIPKS1_S3_EE:
 7992              	.LFB12309:
 782:/usr/include/c++/6/bits/stl_vector.h **** 
 783:/usr/include/c++/6/bits/stl_vector.h ****       /**
 784:/usr/include/c++/6/bits/stl_vector.h ****        *  @brief  Subscript access to the data contained in the %vector.
 785:/usr/include/c++/6/bits/stl_vector.h ****        *  @param __n The index of the element for which data should be
 786:/usr/include/c++/6/bits/stl_vector.h ****        *  accessed.
 787:/usr/include/c++/6/bits/stl_vector.h ****        *  @return  Read-only (constant) reference to data.
 788:/usr/include/c++/6/bits/stl_vector.h ****        *
 789:/usr/include/c++/6/bits/stl_vector.h ****        *  This operator allows for easy, array-style, data access.
 790:/usr/include/c++/6/bits/stl_vector.h ****        *  Note that data access with this operator is unchecked and
 791:/usr/include/c++/6/bits/stl_vector.h ****        *  out_of_range lookups are not defined. (For checked lookups
 792:/usr/include/c++/6/bits/stl_vector.h ****        *  see at().)
 793:/usr/include/c++/6/bits/stl_vector.h ****        */
 794:/usr/include/c++/6/bits/stl_vector.h ****       const_reference
 795:/usr/include/c++/6/bits/stl_vector.h ****       operator[](size_type __n) const _GLIBCXX_NOEXCEPT
 796:/usr/include/c++/6/bits/stl_vector.h ****       { return *(this->_M_impl._M_start + __n); }
 797:/usr/include/c++/6/bits/stl_vector.h **** 
 798:/usr/include/c++/6/bits/stl_vector.h ****     protected:
 799:/usr/include/c++/6/bits/stl_vector.h ****       /// Safety check used only from at().
 800:/usr/include/c++/6/bits/stl_vector.h ****       void
GAS LISTING /tmp/ccsIN87E.s 			page 358


 801:/usr/include/c++/6/bits/stl_vector.h ****       _M_range_check(size_type __n) const
 802:/usr/include/c++/6/bits/stl_vector.h ****       {
 803:/usr/include/c++/6/bits/stl_vector.h **** 	if (__n >= this->size())
 804:/usr/include/c++/6/bits/stl_vector.h **** 	  __throw_out_of_range_fmt(__N("vector::_M_range_check: __n "
 805:/usr/include/c++/6/bits/stl_vector.h **** 				       "(which is %zu) >= this->size() "
 806:/usr/include/c++/6/bits/stl_vector.h **** 				       "(which is %zu)"),
 807:/usr/include/c++/6/bits/stl_vector.h **** 				   __n, this->size());
 808:/usr/include/c++/6/bits/stl_vector.h ****       }
 809:/usr/include/c++/6/bits/stl_vector.h **** 
 810:/usr/include/c++/6/bits/stl_vector.h ****     public:
 811:/usr/include/c++/6/bits/stl_vector.h ****       /**
 812:/usr/include/c++/6/bits/stl_vector.h ****        *  @brief  Provides access to the data contained in the %vector.
 813:/usr/include/c++/6/bits/stl_vector.h ****        *  @param __n The index of the element for which data should be
 814:/usr/include/c++/6/bits/stl_vector.h ****        *  accessed.
 815:/usr/include/c++/6/bits/stl_vector.h ****        *  @return  Read/write reference to data.
 816:/usr/include/c++/6/bits/stl_vector.h ****        *  @throw  std::out_of_range  If @a __n is an invalid index.
 817:/usr/include/c++/6/bits/stl_vector.h ****        *
 818:/usr/include/c++/6/bits/stl_vector.h ****        *  This function provides for safer data access.  The parameter
 819:/usr/include/c++/6/bits/stl_vector.h ****        *  is first checked that it is in the range of the vector.  The
 820:/usr/include/c++/6/bits/stl_vector.h ****        *  function throws out_of_range if the check fails.
 821:/usr/include/c++/6/bits/stl_vector.h ****        */
 822:/usr/include/c++/6/bits/stl_vector.h ****       reference
 823:/usr/include/c++/6/bits/stl_vector.h ****       at(size_type __n)
 824:/usr/include/c++/6/bits/stl_vector.h ****       {
 825:/usr/include/c++/6/bits/stl_vector.h **** 	_M_range_check(__n);
 826:/usr/include/c++/6/bits/stl_vector.h **** 	return (*this)[__n]; 
 827:/usr/include/c++/6/bits/stl_vector.h ****       }
 828:/usr/include/c++/6/bits/stl_vector.h **** 
 829:/usr/include/c++/6/bits/stl_vector.h ****       /**
 830:/usr/include/c++/6/bits/stl_vector.h ****        *  @brief  Provides access to the data contained in the %vector.
 831:/usr/include/c++/6/bits/stl_vector.h ****        *  @param __n The index of the element for which data should be
 832:/usr/include/c++/6/bits/stl_vector.h ****        *  accessed.
 833:/usr/include/c++/6/bits/stl_vector.h ****        *  @return  Read-only (constant) reference to data.
 834:/usr/include/c++/6/bits/stl_vector.h ****        *  @throw  std::out_of_range  If @a __n is an invalid index.
 835:/usr/include/c++/6/bits/stl_vector.h ****        *
 836:/usr/include/c++/6/bits/stl_vector.h ****        *  This function provides for safer data access.  The parameter
 837:/usr/include/c++/6/bits/stl_vector.h ****        *  is first checked that it is in the range of the vector.  The
 838:/usr/include/c++/6/bits/stl_vector.h ****        *  function throws out_of_range if the check fails.
 839:/usr/include/c++/6/bits/stl_vector.h ****        */
 840:/usr/include/c++/6/bits/stl_vector.h ****       const_reference
 841:/usr/include/c++/6/bits/stl_vector.h ****       at(size_type __n) const
 842:/usr/include/c++/6/bits/stl_vector.h ****       {
 843:/usr/include/c++/6/bits/stl_vector.h **** 	_M_range_check(__n);
 844:/usr/include/c++/6/bits/stl_vector.h **** 	return (*this)[__n];
 845:/usr/include/c++/6/bits/stl_vector.h ****       }
 846:/usr/include/c++/6/bits/stl_vector.h **** 
 847:/usr/include/c++/6/bits/stl_vector.h ****       /**
 848:/usr/include/c++/6/bits/stl_vector.h ****        *  Returns a read/write reference to the data at the first
 849:/usr/include/c++/6/bits/stl_vector.h ****        *  element of the %vector.
 850:/usr/include/c++/6/bits/stl_vector.h ****        */
 851:/usr/include/c++/6/bits/stl_vector.h ****       reference
 852:/usr/include/c++/6/bits/stl_vector.h ****       front() _GLIBCXX_NOEXCEPT
 853:/usr/include/c++/6/bits/stl_vector.h ****       { return *begin(); }
 854:/usr/include/c++/6/bits/stl_vector.h **** 
 855:/usr/include/c++/6/bits/stl_vector.h ****       /**
 856:/usr/include/c++/6/bits/stl_vector.h ****        *  Returns a read-only (constant) reference to the data at the first
 857:/usr/include/c++/6/bits/stl_vector.h ****        *  element of the %vector.
GAS LISTING /tmp/ccsIN87E.s 			page 359


 858:/usr/include/c++/6/bits/stl_vector.h ****        */
 859:/usr/include/c++/6/bits/stl_vector.h ****       const_reference
 860:/usr/include/c++/6/bits/stl_vector.h ****       front() const _GLIBCXX_NOEXCEPT
 861:/usr/include/c++/6/bits/stl_vector.h ****       { return *begin(); }
 862:/usr/include/c++/6/bits/stl_vector.h **** 
 863:/usr/include/c++/6/bits/stl_vector.h ****       /**
 864:/usr/include/c++/6/bits/stl_vector.h ****        *  Returns a read/write reference to the data at the last
 865:/usr/include/c++/6/bits/stl_vector.h ****        *  element of the %vector.
 866:/usr/include/c++/6/bits/stl_vector.h ****        */
 867:/usr/include/c++/6/bits/stl_vector.h ****       reference
 868:/usr/include/c++/6/bits/stl_vector.h ****       back() _GLIBCXX_NOEXCEPT
 869:/usr/include/c++/6/bits/stl_vector.h ****       { return *(end() - 1); }
 870:/usr/include/c++/6/bits/stl_vector.h ****       
 871:/usr/include/c++/6/bits/stl_vector.h ****       /**
 872:/usr/include/c++/6/bits/stl_vector.h ****        *  Returns a read-only (constant) reference to the data at the
 873:/usr/include/c++/6/bits/stl_vector.h ****        *  last element of the %vector.
 874:/usr/include/c++/6/bits/stl_vector.h ****        */
 875:/usr/include/c++/6/bits/stl_vector.h ****       const_reference
 876:/usr/include/c++/6/bits/stl_vector.h ****       back() const _GLIBCXX_NOEXCEPT
 877:/usr/include/c++/6/bits/stl_vector.h ****       { return *(end() - 1); }
 878:/usr/include/c++/6/bits/stl_vector.h **** 
 879:/usr/include/c++/6/bits/stl_vector.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 880:/usr/include/c++/6/bits/stl_vector.h ****       // DR 464. Suggestion for new member functions in standard containers.
 881:/usr/include/c++/6/bits/stl_vector.h ****       // data access
 882:/usr/include/c++/6/bits/stl_vector.h ****       /**
 883:/usr/include/c++/6/bits/stl_vector.h ****        *   Returns a pointer such that [data(), data() + size()) is a valid
 884:/usr/include/c++/6/bits/stl_vector.h ****        *   range.  For a non-empty %vector, data() == &front().
 885:/usr/include/c++/6/bits/stl_vector.h ****        */
 886:/usr/include/c++/6/bits/stl_vector.h **** #if __cplusplus >= 201103L
 887:/usr/include/c++/6/bits/stl_vector.h ****       _Tp*
 888:/usr/include/c++/6/bits/stl_vector.h **** #else
 889:/usr/include/c++/6/bits/stl_vector.h ****       pointer
 890:/usr/include/c++/6/bits/stl_vector.h **** #endif
 891:/usr/include/c++/6/bits/stl_vector.h ****       data() _GLIBCXX_NOEXCEPT
 892:/usr/include/c++/6/bits/stl_vector.h ****       { return _M_data_ptr(this->_M_impl._M_start); }
 893:/usr/include/c++/6/bits/stl_vector.h **** 
 894:/usr/include/c++/6/bits/stl_vector.h **** #if __cplusplus >= 201103L
 895:/usr/include/c++/6/bits/stl_vector.h ****       const _Tp*
 896:/usr/include/c++/6/bits/stl_vector.h **** #else
 897:/usr/include/c++/6/bits/stl_vector.h ****       const_pointer
 898:/usr/include/c++/6/bits/stl_vector.h **** #endif
 899:/usr/include/c++/6/bits/stl_vector.h ****       data() const _GLIBCXX_NOEXCEPT
 900:/usr/include/c++/6/bits/stl_vector.h ****       { return _M_data_ptr(this->_M_impl._M_start); }
 901:/usr/include/c++/6/bits/stl_vector.h **** 
 902:/usr/include/c++/6/bits/stl_vector.h ****       // [23.2.4.3] modifiers
 903:/usr/include/c++/6/bits/stl_vector.h ****       /**
 904:/usr/include/c++/6/bits/stl_vector.h ****        *  @brief  Add data to the end of the %vector.
 905:/usr/include/c++/6/bits/stl_vector.h ****        *  @param  __x  Data to be added.
 906:/usr/include/c++/6/bits/stl_vector.h ****        *
 907:/usr/include/c++/6/bits/stl_vector.h ****        *  This is a typical stack operation.  The function creates an
 908:/usr/include/c++/6/bits/stl_vector.h ****        *  element at the end of the %vector and assigns the given data
 909:/usr/include/c++/6/bits/stl_vector.h ****        *  to it.  Due to the nature of a %vector this operation can be
 910:/usr/include/c++/6/bits/stl_vector.h ****        *  done in constant time if the %vector has preallocated space
 911:/usr/include/c++/6/bits/stl_vector.h ****        *  available.
 912:/usr/include/c++/6/bits/stl_vector.h ****        */
 913:/usr/include/c++/6/bits/stl_vector.h ****       void
 914:/usr/include/c++/6/bits/stl_vector.h ****       push_back(const value_type& __x)
GAS LISTING /tmp/ccsIN87E.s 			page 360


 915:/usr/include/c++/6/bits/stl_vector.h ****       {
 916:/usr/include/c++/6/bits/stl_vector.h **** 	if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
 917:/usr/include/c++/6/bits/stl_vector.h **** 	  {
 918:/usr/include/c++/6/bits/stl_vector.h **** 	    _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish,
 919:/usr/include/c++/6/bits/stl_vector.h **** 	                             __x);
 920:/usr/include/c++/6/bits/stl_vector.h **** 	    ++this->_M_impl._M_finish;
 921:/usr/include/c++/6/bits/stl_vector.h **** 	  }
 922:/usr/include/c++/6/bits/stl_vector.h **** 	else
 923:/usr/include/c++/6/bits/stl_vector.h **** #if __cplusplus >= 201103L
 924:/usr/include/c++/6/bits/stl_vector.h **** 	  _M_emplace_back_aux(__x);
 925:/usr/include/c++/6/bits/stl_vector.h **** #else
 926:/usr/include/c++/6/bits/stl_vector.h **** 	  _M_insert_aux(end(), __x);
 927:/usr/include/c++/6/bits/stl_vector.h **** #endif
 928:/usr/include/c++/6/bits/stl_vector.h ****       }
 929:/usr/include/c++/6/bits/stl_vector.h **** 
 930:/usr/include/c++/6/bits/stl_vector.h **** #if __cplusplus >= 201103L
 931:/usr/include/c++/6/bits/stl_vector.h ****       void
 932:/usr/include/c++/6/bits/stl_vector.h ****       push_back(value_type&& __x)
 933:/usr/include/c++/6/bits/stl_vector.h ****       { emplace_back(std::move(__x)); }
 934:/usr/include/c++/6/bits/stl_vector.h **** 
 935:/usr/include/c++/6/bits/stl_vector.h ****       template<typename... _Args>
 936:/usr/include/c++/6/bits/stl_vector.h ****         void
 937:/usr/include/c++/6/bits/stl_vector.h ****         emplace_back(_Args&&... __args);
 938:/usr/include/c++/6/bits/stl_vector.h **** #endif
 939:/usr/include/c++/6/bits/stl_vector.h **** 
 940:/usr/include/c++/6/bits/stl_vector.h ****       /**
 941:/usr/include/c++/6/bits/stl_vector.h ****        *  @brief  Removes last element.
 942:/usr/include/c++/6/bits/stl_vector.h ****        *
 943:/usr/include/c++/6/bits/stl_vector.h ****        *  This is a typical stack operation. It shrinks the %vector by one.
 944:/usr/include/c++/6/bits/stl_vector.h ****        *
 945:/usr/include/c++/6/bits/stl_vector.h ****        *  Note that no data is returned, and if the last element's
 946:/usr/include/c++/6/bits/stl_vector.h ****        *  data is needed, it should be retrieved before pop_back() is
 947:/usr/include/c++/6/bits/stl_vector.h ****        *  called.
 948:/usr/include/c++/6/bits/stl_vector.h ****        */
 949:/usr/include/c++/6/bits/stl_vector.h ****       void
 950:/usr/include/c++/6/bits/stl_vector.h ****       pop_back() _GLIBCXX_NOEXCEPT
 951:/usr/include/c++/6/bits/stl_vector.h ****       {
 952:/usr/include/c++/6/bits/stl_vector.h **** 	--this->_M_impl._M_finish;
 953:/usr/include/c++/6/bits/stl_vector.h **** 	_Alloc_traits::destroy(this->_M_impl, this->_M_impl._M_finish);
 954:/usr/include/c++/6/bits/stl_vector.h ****       }
 955:/usr/include/c++/6/bits/stl_vector.h **** 
 956:/usr/include/c++/6/bits/stl_vector.h **** #if __cplusplus >= 201103L
 957:/usr/include/c++/6/bits/stl_vector.h ****       /**
 958:/usr/include/c++/6/bits/stl_vector.h ****        *  @brief  Inserts an object in %vector before specified iterator.
 959:/usr/include/c++/6/bits/stl_vector.h ****        *  @param  __position  A const_iterator into the %vector.
 960:/usr/include/c++/6/bits/stl_vector.h ****        *  @param  __args  Arguments.
 961:/usr/include/c++/6/bits/stl_vector.h ****        *  @return  An iterator that points to the inserted data.
 962:/usr/include/c++/6/bits/stl_vector.h ****        *
 963:/usr/include/c++/6/bits/stl_vector.h ****        *  This function will insert an object of type T constructed
 964:/usr/include/c++/6/bits/stl_vector.h ****        *  with T(std::forward<Args>(args)...) before the specified location.
 965:/usr/include/c++/6/bits/stl_vector.h ****        *  Note that this kind of operation could be expensive for a %vector
 966:/usr/include/c++/6/bits/stl_vector.h ****        *  and if it is frequently used the user should consider using
 967:/usr/include/c++/6/bits/stl_vector.h ****        *  std::list.
 968:/usr/include/c++/6/bits/stl_vector.h ****        */
 969:/usr/include/c++/6/bits/stl_vector.h ****       template<typename... _Args>
 970:/usr/include/c++/6/bits/stl_vector.h ****         iterator
 971:/usr/include/c++/6/bits/stl_vector.h ****         emplace(const_iterator __position, _Args&&... __args);
GAS LISTING /tmp/ccsIN87E.s 			page 361


 972:/usr/include/c++/6/bits/stl_vector.h **** 
 973:/usr/include/c++/6/bits/stl_vector.h ****       /**
 974:/usr/include/c++/6/bits/stl_vector.h ****        *  @brief  Inserts given value into %vector before specified iterator.
 975:/usr/include/c++/6/bits/stl_vector.h ****        *  @param  __position  A const_iterator into the %vector.
 976:/usr/include/c++/6/bits/stl_vector.h ****        *  @param  __x  Data to be inserted.
 977:/usr/include/c++/6/bits/stl_vector.h ****        *  @return  An iterator that points to the inserted data.
 978:/usr/include/c++/6/bits/stl_vector.h ****        *
 979:/usr/include/c++/6/bits/stl_vector.h ****        *  This function will insert a copy of the given value before
 980:/usr/include/c++/6/bits/stl_vector.h ****        *  the specified location.  Note that this kind of operation
 981:/usr/include/c++/6/bits/stl_vector.h ****        *  could be expensive for a %vector and if it is frequently
 982:/usr/include/c++/6/bits/stl_vector.h ****        *  used the user should consider using std::list.
 983:/usr/include/c++/6/bits/stl_vector.h ****        */
 984:/usr/include/c++/6/bits/stl_vector.h ****       iterator
 985:/usr/include/c++/6/bits/stl_vector.h ****       insert(const_iterator __position, const value_type& __x);
 986:/usr/include/c++/6/bits/stl_vector.h **** #else
 987:/usr/include/c++/6/bits/stl_vector.h ****       /**
 988:/usr/include/c++/6/bits/stl_vector.h ****        *  @brief  Inserts given value into %vector before specified iterator.
 989:/usr/include/c++/6/bits/stl_vector.h ****        *  @param  __position  An iterator into the %vector.
 990:/usr/include/c++/6/bits/stl_vector.h ****        *  @param  __x  Data to be inserted.
 991:/usr/include/c++/6/bits/stl_vector.h ****        *  @return  An iterator that points to the inserted data.
 992:/usr/include/c++/6/bits/stl_vector.h ****        *
 993:/usr/include/c++/6/bits/stl_vector.h ****        *  This function will insert a copy of the given value before
 994:/usr/include/c++/6/bits/stl_vector.h ****        *  the specified location.  Note that this kind of operation
 995:/usr/include/c++/6/bits/stl_vector.h ****        *  could be expensive for a %vector and if it is frequently
 996:/usr/include/c++/6/bits/stl_vector.h ****        *  used the user should consider using std::list.
 997:/usr/include/c++/6/bits/stl_vector.h ****        */
 998:/usr/include/c++/6/bits/stl_vector.h ****       iterator
 999:/usr/include/c++/6/bits/stl_vector.h ****       insert(iterator __position, const value_type& __x);
1000:/usr/include/c++/6/bits/stl_vector.h **** #endif
1001:/usr/include/c++/6/bits/stl_vector.h **** 
1002:/usr/include/c++/6/bits/stl_vector.h **** #if __cplusplus >= 201103L
1003:/usr/include/c++/6/bits/stl_vector.h ****       /**
1004:/usr/include/c++/6/bits/stl_vector.h ****        *  @brief  Inserts given rvalue into %vector before specified iterator.
1005:/usr/include/c++/6/bits/stl_vector.h ****        *  @param  __position  A const_iterator into the %vector.
1006:/usr/include/c++/6/bits/stl_vector.h ****        *  @param  __x  Data to be inserted.
1007:/usr/include/c++/6/bits/stl_vector.h ****        *  @return  An iterator that points to the inserted data.
1008:/usr/include/c++/6/bits/stl_vector.h ****        *
1009:/usr/include/c++/6/bits/stl_vector.h ****        *  This function will insert a copy of the given rvalue before
1010:/usr/include/c++/6/bits/stl_vector.h ****        *  the specified location.  Note that this kind of operation
1011:/usr/include/c++/6/bits/stl_vector.h ****        *  could be expensive for a %vector and if it is frequently
1012:/usr/include/c++/6/bits/stl_vector.h ****        *  used the user should consider using std::list.
1013:/usr/include/c++/6/bits/stl_vector.h ****        */
1014:/usr/include/c++/6/bits/stl_vector.h ****       iterator
1015:/usr/include/c++/6/bits/stl_vector.h ****       insert(const_iterator __position, value_type&& __x)
1016:/usr/include/c++/6/bits/stl_vector.h ****       { return emplace(__position, std::move(__x)); }
1017:/usr/include/c++/6/bits/stl_vector.h **** 
1018:/usr/include/c++/6/bits/stl_vector.h ****       /**
1019:/usr/include/c++/6/bits/stl_vector.h ****        *  @brief  Inserts an initializer_list into the %vector.
1020:/usr/include/c++/6/bits/stl_vector.h ****        *  @param  __position  An iterator into the %vector.
1021:/usr/include/c++/6/bits/stl_vector.h ****        *  @param  __l  An initializer_list.
1022:/usr/include/c++/6/bits/stl_vector.h ****        *
1023:/usr/include/c++/6/bits/stl_vector.h ****        *  This function will insert copies of the data in the 
1024:/usr/include/c++/6/bits/stl_vector.h ****        *  initializer_list @a l into the %vector before the location
1025:/usr/include/c++/6/bits/stl_vector.h ****        *  specified by @a position.
1026:/usr/include/c++/6/bits/stl_vector.h ****        *
1027:/usr/include/c++/6/bits/stl_vector.h ****        *  Note that this kind of operation could be expensive for a
1028:/usr/include/c++/6/bits/stl_vector.h ****        *  %vector and if it is frequently used the user should
GAS LISTING /tmp/ccsIN87E.s 			page 362


1029:/usr/include/c++/6/bits/stl_vector.h ****        *  consider using std::list.
1030:/usr/include/c++/6/bits/stl_vector.h ****        */
1031:/usr/include/c++/6/bits/stl_vector.h ****       iterator
1032:/usr/include/c++/6/bits/stl_vector.h ****       insert(const_iterator __position, initializer_list<value_type> __l)
1033:/usr/include/c++/6/bits/stl_vector.h ****       { return this->insert(__position, __l.begin(), __l.end()); }
1034:/usr/include/c++/6/bits/stl_vector.h **** #endif
1035:/usr/include/c++/6/bits/stl_vector.h **** 
1036:/usr/include/c++/6/bits/stl_vector.h **** #if __cplusplus >= 201103L
1037:/usr/include/c++/6/bits/stl_vector.h ****       /**
1038:/usr/include/c++/6/bits/stl_vector.h ****        *  @brief  Inserts a number of copies of given data into the %vector.
1039:/usr/include/c++/6/bits/stl_vector.h ****        *  @param  __position  A const_iterator into the %vector.
1040:/usr/include/c++/6/bits/stl_vector.h ****        *  @param  __n  Number of elements to be inserted.
1041:/usr/include/c++/6/bits/stl_vector.h ****        *  @param  __x  Data to be inserted.
1042:/usr/include/c++/6/bits/stl_vector.h ****        *  @return  An iterator that points to the inserted data.
1043:/usr/include/c++/6/bits/stl_vector.h ****        *
1044:/usr/include/c++/6/bits/stl_vector.h ****        *  This function will insert a specified number of copies of
1045:/usr/include/c++/6/bits/stl_vector.h ****        *  the given data before the location specified by @a position.
1046:/usr/include/c++/6/bits/stl_vector.h ****        *
1047:/usr/include/c++/6/bits/stl_vector.h ****        *  Note that this kind of operation could be expensive for a
1048:/usr/include/c++/6/bits/stl_vector.h ****        *  %vector and if it is frequently used the user should
1049:/usr/include/c++/6/bits/stl_vector.h ****        *  consider using std::list.
1050:/usr/include/c++/6/bits/stl_vector.h ****        */
1051:/usr/include/c++/6/bits/stl_vector.h ****       iterator
1052:/usr/include/c++/6/bits/stl_vector.h ****       insert(const_iterator __position, size_type __n, const value_type& __x)
1053:/usr/include/c++/6/bits/stl_vector.h ****       {
1054:/usr/include/c++/6/bits/stl_vector.h **** 	difference_type __offset = __position - cbegin();
1055:/usr/include/c++/6/bits/stl_vector.h **** 	_M_fill_insert(begin() + __offset, __n, __x);
1056:/usr/include/c++/6/bits/stl_vector.h **** 	return begin() + __offset;
1057:/usr/include/c++/6/bits/stl_vector.h ****       }
1058:/usr/include/c++/6/bits/stl_vector.h **** #else
1059:/usr/include/c++/6/bits/stl_vector.h ****       /**
1060:/usr/include/c++/6/bits/stl_vector.h ****        *  @brief  Inserts a number of copies of given data into the %vector.
1061:/usr/include/c++/6/bits/stl_vector.h ****        *  @param  __position  An iterator into the %vector.
1062:/usr/include/c++/6/bits/stl_vector.h ****        *  @param  __n  Number of elements to be inserted.
1063:/usr/include/c++/6/bits/stl_vector.h ****        *  @param  __x  Data to be inserted.
1064:/usr/include/c++/6/bits/stl_vector.h ****        *
1065:/usr/include/c++/6/bits/stl_vector.h ****        *  This function will insert a specified number of copies of
1066:/usr/include/c++/6/bits/stl_vector.h ****        *  the given data before the location specified by @a position.
1067:/usr/include/c++/6/bits/stl_vector.h ****        *
1068:/usr/include/c++/6/bits/stl_vector.h ****        *  Note that this kind of operation could be expensive for a
1069:/usr/include/c++/6/bits/stl_vector.h ****        *  %vector and if it is frequently used the user should
1070:/usr/include/c++/6/bits/stl_vector.h ****        *  consider using std::list.
1071:/usr/include/c++/6/bits/stl_vector.h ****        */
1072:/usr/include/c++/6/bits/stl_vector.h ****       void
1073:/usr/include/c++/6/bits/stl_vector.h ****       insert(iterator __position, size_type __n, const value_type& __x)
1074:/usr/include/c++/6/bits/stl_vector.h ****       { _M_fill_insert(__position, __n, __x); }
1075:/usr/include/c++/6/bits/stl_vector.h **** #endif
1076:/usr/include/c++/6/bits/stl_vector.h **** 
1077:/usr/include/c++/6/bits/stl_vector.h **** #if __cplusplus >= 201103L
1078:/usr/include/c++/6/bits/stl_vector.h ****       /**
1079:/usr/include/c++/6/bits/stl_vector.h ****        *  @brief  Inserts a range into the %vector.
1080:/usr/include/c++/6/bits/stl_vector.h ****        *  @param  __position  A const_iterator into the %vector.
1081:/usr/include/c++/6/bits/stl_vector.h ****        *  @param  __first  An input iterator.
1082:/usr/include/c++/6/bits/stl_vector.h ****        *  @param  __last   An input iterator.
1083:/usr/include/c++/6/bits/stl_vector.h ****        *  @return  An iterator that points to the inserted data.
1084:/usr/include/c++/6/bits/stl_vector.h ****        *
1085:/usr/include/c++/6/bits/stl_vector.h ****        *  This function will insert copies of the data in the range
GAS LISTING /tmp/ccsIN87E.s 			page 363


1086:/usr/include/c++/6/bits/stl_vector.h ****        *  [__first,__last) into the %vector before the location specified
1087:/usr/include/c++/6/bits/stl_vector.h ****        *  by @a pos.
1088:/usr/include/c++/6/bits/stl_vector.h ****        *
1089:/usr/include/c++/6/bits/stl_vector.h ****        *  Note that this kind of operation could be expensive for a
1090:/usr/include/c++/6/bits/stl_vector.h ****        *  %vector and if it is frequently used the user should
1091:/usr/include/c++/6/bits/stl_vector.h ****        *  consider using std::list.
1092:/usr/include/c++/6/bits/stl_vector.h ****        */
1093:/usr/include/c++/6/bits/stl_vector.h ****       template<typename _InputIterator,
1094:/usr/include/c++/6/bits/stl_vector.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
1095:/usr/include/c++/6/bits/stl_vector.h ****         iterator
1096:/usr/include/c++/6/bits/stl_vector.h ****         insert(const_iterator __position, _InputIterator __first,
1097:/usr/include/c++/6/bits/stl_vector.h **** 	       _InputIterator __last)
1098:/usr/include/c++/6/bits/stl_vector.h ****         {
1099:/usr/include/c++/6/bits/stl_vector.h **** 	  difference_type __offset = __position - cbegin();
1100:/usr/include/c++/6/bits/stl_vector.h **** 	  _M_insert_dispatch(begin() + __offset,
1101:/usr/include/c++/6/bits/stl_vector.h **** 			     __first, __last, __false_type());
1102:/usr/include/c++/6/bits/stl_vector.h **** 	  return begin() + __offset;
1103:/usr/include/c++/6/bits/stl_vector.h **** 	}
1104:/usr/include/c++/6/bits/stl_vector.h **** #else
1105:/usr/include/c++/6/bits/stl_vector.h ****       /**
1106:/usr/include/c++/6/bits/stl_vector.h ****        *  @brief  Inserts a range into the %vector.
1107:/usr/include/c++/6/bits/stl_vector.h ****        *  @param  __position  An iterator into the %vector.
1108:/usr/include/c++/6/bits/stl_vector.h ****        *  @param  __first  An input iterator.
1109:/usr/include/c++/6/bits/stl_vector.h ****        *  @param  __last   An input iterator.
1110:/usr/include/c++/6/bits/stl_vector.h ****        *
1111:/usr/include/c++/6/bits/stl_vector.h ****        *  This function will insert copies of the data in the range
1112:/usr/include/c++/6/bits/stl_vector.h ****        *  [__first,__last) into the %vector before the location specified
1113:/usr/include/c++/6/bits/stl_vector.h ****        *  by @a pos.
1114:/usr/include/c++/6/bits/stl_vector.h ****        *
1115:/usr/include/c++/6/bits/stl_vector.h ****        *  Note that this kind of operation could be expensive for a
1116:/usr/include/c++/6/bits/stl_vector.h ****        *  %vector and if it is frequently used the user should
1117:/usr/include/c++/6/bits/stl_vector.h ****        *  consider using std::list.
1118:/usr/include/c++/6/bits/stl_vector.h ****        */
1119:/usr/include/c++/6/bits/stl_vector.h ****       template<typename _InputIterator>
1120:/usr/include/c++/6/bits/stl_vector.h ****         void
1121:/usr/include/c++/6/bits/stl_vector.h ****         insert(iterator __position, _InputIterator __first,
1122:/usr/include/c++/6/bits/stl_vector.h **** 	       _InputIterator __last)
1123:/usr/include/c++/6/bits/stl_vector.h ****         {
1124:/usr/include/c++/6/bits/stl_vector.h **** 	  // Check whether it's an integral type.  If so, it's not an iterator.
1125:/usr/include/c++/6/bits/stl_vector.h **** 	  typedef typename std::__is_integer<_InputIterator>::__type _Integral;
1126:/usr/include/c++/6/bits/stl_vector.h **** 	  _M_insert_dispatch(__position, __first, __last, _Integral());
1127:/usr/include/c++/6/bits/stl_vector.h **** 	}
1128:/usr/include/c++/6/bits/stl_vector.h **** #endif
1129:/usr/include/c++/6/bits/stl_vector.h **** 
1130:/usr/include/c++/6/bits/stl_vector.h ****       /**
1131:/usr/include/c++/6/bits/stl_vector.h ****        *  @brief  Remove element at given position.
1132:/usr/include/c++/6/bits/stl_vector.h ****        *  @param  __position  Iterator pointing to element to be erased.
1133:/usr/include/c++/6/bits/stl_vector.h ****        *  @return  An iterator pointing to the next element (or end()).
1134:/usr/include/c++/6/bits/stl_vector.h ****        *
1135:/usr/include/c++/6/bits/stl_vector.h ****        *  This function will erase the element at the given position and thus
1136:/usr/include/c++/6/bits/stl_vector.h ****        *  shorten the %vector by one.
1137:/usr/include/c++/6/bits/stl_vector.h ****        *
1138:/usr/include/c++/6/bits/stl_vector.h ****        *  Note This operation could be expensive and if it is
1139:/usr/include/c++/6/bits/stl_vector.h ****        *  frequently used the user should consider using std::list.
1140:/usr/include/c++/6/bits/stl_vector.h ****        *  The user is also cautioned that this function only erases
1141:/usr/include/c++/6/bits/stl_vector.h ****        *  the element, and that if the element is itself a pointer,
1142:/usr/include/c++/6/bits/stl_vector.h ****        *  the pointed-to memory is not touched in any way.  Managing
GAS LISTING /tmp/ccsIN87E.s 			page 364


1143:/usr/include/c++/6/bits/stl_vector.h ****        *  the pointer is the user's responsibility.
1144:/usr/include/c++/6/bits/stl_vector.h ****        */
1145:/usr/include/c++/6/bits/stl_vector.h ****       iterator
1146:/usr/include/c++/6/bits/stl_vector.h **** #if __cplusplus >= 201103L
1147:/usr/include/c++/6/bits/stl_vector.h ****       erase(const_iterator __position)
 7993              		.loc 30 1147 0
 7994              		.cfi_startproc
 7995 0000 55       		pushq	%rbp
 7996              		.cfi_def_cfa_offset 16
 7997              		.cfi_offset 6, -16
 7998 0001 4889E5   		movq	%rsp, %rbp
 7999              		.cfi_def_cfa_register 6
 8000 0004 53       		pushq	%rbx
 8001 0005 4883EC28 		subq	$40, %rsp
 8002              		.cfi_offset 3, -24
 8003 0009 48897DD8 		movq	%rdi, -40(%rbp)
 8004 000d 488975D0 		movq	%rsi, -48(%rbp)
1148:/usr/include/c++/6/bits/stl_vector.h ****       { return _M_erase(begin() + (__position - cbegin())); }
 8005              		.loc 30 1148 0
 8006 0011 488B45D8 		movq	-40(%rbp), %rax
 8007 0015 4889C7   		movq	%rax, %rdi
 8008 0018 E8000000 		call	_ZNKSt6vectorIN2gr5tag_tESaIS1_EE6cbeginEv
 8008      00
 8009 001d 488945E0 		movq	%rax, -32(%rbp)
 8010 0021 488D55E0 		leaq	-32(%rbp), %rdx
 8011 0025 488D45D0 		leaq	-48(%rbp), %rax
 8012 0029 4889D6   		movq	%rdx, %rsi
 8013 002c 4889C7   		movq	%rax, %rdi
 8014 002f E8000000 		call	_ZN9__gnu_cxxmiIPKN2gr5tag_tESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference
 8014      00
 8015 0034 4889C3   		movq	%rax, %rbx
 8016 0037 488B45D8 		movq	-40(%rbp), %rax
 8017 003b 4889C7   		movq	%rax, %rdi
 8018 003e E8000000 		call	_ZNSt6vectorIN2gr5tag_tESaIS1_EE5beginEv
 8018      00
 8019 0043 488945E8 		movq	%rax, -24(%rbp)
 8020 0047 488D45E8 		leaq	-24(%rbp), %rax
 8021 004b 4889DE   		movq	%rbx, %rsi
 8022 004e 4889C7   		movq	%rax, %rdi
 8023 0051 E8000000 		call	_ZNK9__gnu_cxx17__normal_iteratorIPN2gr5tag_tESt6vectorIS2_SaIS2_EEEplEl
 8023      00
 8024 0056 4889C2   		movq	%rax, %rdx
 8025 0059 488B45D8 		movq	-40(%rbp), %rax
 8026 005d 4889D6   		movq	%rdx, %rsi
 8027 0060 4889C7   		movq	%rax, %rdi
 8028 0063 E8000000 		call	_ZNSt6vectorIN2gr5tag_tESaIS1_EE8_M_eraseEN9__gnu_cxx17__normal_iteratorIPS1_S3_EE
 8028      00
 8029 0068 4883C428 		addq	$40, %rsp
 8030 006c 5B       		popq	%rbx
 8031 006d 5D       		popq	%rbp
 8032              		.cfi_def_cfa 7, 8
 8033 006e C3       		ret
 8034              		.cfi_endproc
 8035              	.LFE12309:
 8037              		.section	.text._ZStmlIfESt7complexIT_ERKS2_S4_,"axG",@progbits,_ZStmlIfESt7complexIT_ERKS2_S4_,com
 8038              		.weak	_ZStmlIfESt7complexIT_ERKS2_S4_
 8040              	_ZStmlIfESt7complexIT_ERKS2_S4_:
GAS LISTING /tmp/ccsIN87E.s 			page 365


 8041              	.LFB12310:
 386:/usr/include/c++/6/complex ****     {
 8042              		.loc 9 386 0
 8043              		.cfi_startproc
 8044 0000 55       		pushq	%rbp
 8045              		.cfi_def_cfa_offset 16
 8046              		.cfi_offset 6, -16
 8047 0001 4889E5   		movq	%rsp, %rbp
 8048              		.cfi_def_cfa_register 6
 8049 0004 4883EC30 		subq	$48, %rsp
 8050 0008 48897DE8 		movq	%rdi, -24(%rbp)
 8051 000c 488975E0 		movq	%rsi, -32(%rbp)
 388:/usr/include/c++/6/complex ****       __r *= __y;
 8052              		.loc 9 388 0
 8053 0010 488B45E8 		movq	-24(%rbp), %rax
 8054 0014 F30F1000 		movss	(%rax), %xmm0
 8055 0018 F30F1145 		movss	%xmm0, -8(%rbp)
 8055      F8
 8056 001d F30F1040 		movss	4(%rax), %xmm0
 8056      04
 8057 0022 F30F1145 		movss	%xmm0, -4(%rbp)
 8057      FC
 389:/usr/include/c++/6/complex ****       return __r;
 8058              		.loc 9 389 0
 8059 0027 488B55E0 		movq	-32(%rbp), %rdx
 8060 002b 488D45F8 		leaq	-8(%rbp), %rax
 8061 002f 4889D6   		movq	%rdx, %rsi
 8062 0032 4889C7   		movq	%rax, %rdi
 8063 0035 E8000000 		call	_ZNSt7complexIfEmLIfEERS0_RKS_IT_E
 8063      00
 390:/usr/include/c++/6/complex ****     }
 8064              		.loc 9 390 0
 8065 003a F30F104D 		movss	-8(%rbp), %xmm1
 8065      F8
 8066 003f F30F1045 		movss	-4(%rbp), %xmm0
 8066      FC
 8067 0044 F30F114D 		movss	%xmm1, -40(%rbp)
 8067      D8
 8068 0049 F30F1145 		movss	%xmm0, -36(%rbp)
 8068      DC
 8069 004e 488B45D8 		movq	-40(%rbp), %rax
 391:/usr/include/c++/6/complex **** 
 8070              		.loc 9 391 0
 8071 0052 488945D0 		movq	%rax, -48(%rbp)
 8072 0056 F30F7E45 		movq	-48(%rbp), %xmm0
 8072      D0
 8073 005b C9       		leave
 8074              		.cfi_def_cfa 7, 8
 8075 005c C3       		ret
 8076              		.cfi_endproc
 8077              	.LFE12310:
 8079              		.section	.text._ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEE7releaseEv,"a
 8080              		.align 2
 8081              		.weak	_ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEE7releaseEv
 8083              	_ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEE7releaseEv:
 8084              	.LFB12397:
  76:/usr/include/boost/exception/exception.hpp ****                 {
GAS LISTING /tmp/ccsIN87E.s 			page 366


 8085              		.loc 3 76 0
 8086              		.cfi_startproc
 8087 0000 55       		pushq	%rbp
 8088              		.cfi_def_cfa_offset 16
 8089              		.cfi_offset 6, -16
 8090 0001 4889E5   		movq	%rsp, %rbp
 8091              		.cfi_def_cfa_register 6
 8092 0004 4883EC10 		subq	$16, %rsp
 8093 0008 48897DF8 		movq	%rdi, -8(%rbp)
  78:/usr/include/boost/exception/exception.hpp ****                     px_=0;
 8094              		.loc 3 78 0
 8095 000c 488B45F8 		movq	-8(%rbp), %rax
 8096 0010 488B00   		movq	(%rax), %rax
 8097 0013 4885C0   		testq	%rax, %rax
 8098 0016 7428     		je	.L361
  78:/usr/include/boost/exception/exception.hpp ****                     px_=0;
 8099              		.loc 3 78 0 is_stmt 0 discriminator 1
 8100 0018 488B45F8 		movq	-8(%rbp), %rax
 8101 001c 488B00   		movq	(%rax), %rax
 8102 001f 488B00   		movq	(%rax), %rax
 8103 0022 4883C020 		addq	$32, %rax
 8104 0026 488B00   		movq	(%rax), %rax
 8105 0029 488B55F8 		movq	-8(%rbp), %rdx
 8106 002d 488B12   		movq	(%rdx), %rdx
 8107 0030 4889D7   		movq	%rdx, %rdi
 8108 0033 FFD0     		call	*%rax
 8109              	.LVL8:
 8110 0035 84C0     		testb	%al, %al
 8111 0037 7407     		je	.L361
  78:/usr/include/boost/exception/exception.hpp ****                     px_=0;
 8112              		.loc 3 78 0 discriminator 3
 8113 0039 B8010000 		movl	$1, %eax
 8113      00
 8114 003e EB05     		jmp	.L362
 8115              	.L361:
  78:/usr/include/boost/exception/exception.hpp ****                     px_=0;
 8116              		.loc 3 78 0 discriminator 4
 8117 0040 B8000000 		movl	$0, %eax
 8117      00
 8118              	.L362:
  78:/usr/include/boost/exception/exception.hpp ****                     px_=0;
 8119              		.loc 3 78 0 discriminator 6
 8120 0045 84C0     		testb	%al, %al
 8121 0047 740B     		je	.L364
  79:/usr/include/boost/exception/exception.hpp ****                 }
 8122              		.loc 3 79 0 is_stmt 1
 8123 0049 488B45F8 		movq	-8(%rbp), %rax
 8124 004d 48C70000 		movq	$0, (%rax)
 8124      000000
 8125              	.L364:
  80:/usr/include/boost/exception/exception.hpp ****             };
 8126              		.loc 3 80 0
 8127 0054 90       		nop
 8128 0055 C9       		leave
 8129              		.cfi_def_cfa 7, 8
 8130 0056 C3       		ret
 8131              		.cfi_endproc
GAS LISTING /tmp/ccsIN87E.s 			page 367


 8132              	.LFE12397:
 8134              		.section	.text._ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFv
 8135              		.align 2
 8136              		.weak	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt
 8138              	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt10_Sele
 8139              	.LFB12626:
 243:/usr/include/c++/6/bits/stl_tree.h **** 
 244:/usr/include/c++/6/bits/stl_tree.h ****       _Base_ptr _M_node;
 245:/usr/include/c++/6/bits/stl_tree.h ****   };
 246:/usr/include/c++/6/bits/stl_tree.h **** 
 247:/usr/include/c++/6/bits/stl_tree.h ****   template<typename _Tp>
 248:/usr/include/c++/6/bits/stl_tree.h ****     struct _Rb_tree_const_iterator
 249:/usr/include/c++/6/bits/stl_tree.h ****     {
 250:/usr/include/c++/6/bits/stl_tree.h ****       typedef _Tp        value_type;
 251:/usr/include/c++/6/bits/stl_tree.h ****       typedef const _Tp& reference;
 252:/usr/include/c++/6/bits/stl_tree.h ****       typedef const _Tp* pointer;
 253:/usr/include/c++/6/bits/stl_tree.h **** 
 254:/usr/include/c++/6/bits/stl_tree.h ****       typedef _Rb_tree_iterator<_Tp> iterator;
 255:/usr/include/c++/6/bits/stl_tree.h **** 
 256:/usr/include/c++/6/bits/stl_tree.h ****       typedef bidirectional_iterator_tag iterator_category;
 257:/usr/include/c++/6/bits/stl_tree.h ****       typedef ptrdiff_t                  difference_type;
 258:/usr/include/c++/6/bits/stl_tree.h **** 
 259:/usr/include/c++/6/bits/stl_tree.h ****       typedef _Rb_tree_const_iterator<_Tp>        _Self;
 260:/usr/include/c++/6/bits/stl_tree.h ****       typedef _Rb_tree_node_base::_Const_Base_ptr _Base_ptr;
 261:/usr/include/c++/6/bits/stl_tree.h ****       typedef const _Rb_tree_node<_Tp>*           _Link_type;
 262:/usr/include/c++/6/bits/stl_tree.h **** 
 263:/usr/include/c++/6/bits/stl_tree.h ****       _Rb_tree_const_iterator() _GLIBCXX_NOEXCEPT
 264:/usr/include/c++/6/bits/stl_tree.h ****       : _M_node() { }
 265:/usr/include/c++/6/bits/stl_tree.h **** 
 266:/usr/include/c++/6/bits/stl_tree.h ****       explicit
 267:/usr/include/c++/6/bits/stl_tree.h ****       _Rb_tree_const_iterator(_Base_ptr __x) _GLIBCXX_NOEXCEPT
 268:/usr/include/c++/6/bits/stl_tree.h ****       : _M_node(__x) { }
 269:/usr/include/c++/6/bits/stl_tree.h **** 
 270:/usr/include/c++/6/bits/stl_tree.h ****       _Rb_tree_const_iterator(const iterator& __it) _GLIBCXX_NOEXCEPT
 271:/usr/include/c++/6/bits/stl_tree.h ****       : _M_node(__it._M_node) { }
 272:/usr/include/c++/6/bits/stl_tree.h **** 
 273:/usr/include/c++/6/bits/stl_tree.h ****       iterator
 274:/usr/include/c++/6/bits/stl_tree.h ****       _M_const_cast() const _GLIBCXX_NOEXCEPT
 275:/usr/include/c++/6/bits/stl_tree.h ****       { return iterator(const_cast<typename iterator::_Base_ptr>(_M_node)); }
 276:/usr/include/c++/6/bits/stl_tree.h **** 
 277:/usr/include/c++/6/bits/stl_tree.h ****       reference
 278:/usr/include/c++/6/bits/stl_tree.h ****       operator*() const _GLIBCXX_NOEXCEPT
 279:/usr/include/c++/6/bits/stl_tree.h ****       { return *static_cast<_Link_type>(_M_node)->_M_valptr(); }
 280:/usr/include/c++/6/bits/stl_tree.h **** 
 281:/usr/include/c++/6/bits/stl_tree.h ****       pointer
 282:/usr/include/c++/6/bits/stl_tree.h ****       operator->() const _GLIBCXX_NOEXCEPT
 283:/usr/include/c++/6/bits/stl_tree.h ****       { return static_cast<_Link_type>(_M_node)->_M_valptr(); }
 284:/usr/include/c++/6/bits/stl_tree.h **** 
 285:/usr/include/c++/6/bits/stl_tree.h ****       _Self&
 286:/usr/include/c++/6/bits/stl_tree.h ****       operator++() _GLIBCXX_NOEXCEPT
 287:/usr/include/c++/6/bits/stl_tree.h ****       {
 288:/usr/include/c++/6/bits/stl_tree.h **** 	_M_node = _Rb_tree_increment(_M_node);
 289:/usr/include/c++/6/bits/stl_tree.h **** 	return *this;
 290:/usr/include/c++/6/bits/stl_tree.h ****       }
 291:/usr/include/c++/6/bits/stl_tree.h **** 
 292:/usr/include/c++/6/bits/stl_tree.h ****       _Self
 293:/usr/include/c++/6/bits/stl_tree.h ****       operator++(int) _GLIBCXX_NOEXCEPT
GAS LISTING /tmp/ccsIN87E.s 			page 368


 294:/usr/include/c++/6/bits/stl_tree.h ****       {
 295:/usr/include/c++/6/bits/stl_tree.h **** 	_Self __tmp = *this;
 296:/usr/include/c++/6/bits/stl_tree.h **** 	_M_node = _Rb_tree_increment(_M_node);
 297:/usr/include/c++/6/bits/stl_tree.h **** 	return __tmp;
 298:/usr/include/c++/6/bits/stl_tree.h ****       }
 299:/usr/include/c++/6/bits/stl_tree.h **** 
 300:/usr/include/c++/6/bits/stl_tree.h ****       _Self&
 301:/usr/include/c++/6/bits/stl_tree.h ****       operator--() _GLIBCXX_NOEXCEPT
 302:/usr/include/c++/6/bits/stl_tree.h ****       {
 303:/usr/include/c++/6/bits/stl_tree.h **** 	_M_node = _Rb_tree_decrement(_M_node);
 304:/usr/include/c++/6/bits/stl_tree.h **** 	return *this;
 305:/usr/include/c++/6/bits/stl_tree.h ****       }
 306:/usr/include/c++/6/bits/stl_tree.h **** 
 307:/usr/include/c++/6/bits/stl_tree.h ****       _Self
 308:/usr/include/c++/6/bits/stl_tree.h ****       operator--(int) _GLIBCXX_NOEXCEPT
 309:/usr/include/c++/6/bits/stl_tree.h ****       {
 310:/usr/include/c++/6/bits/stl_tree.h **** 	_Self __tmp = *this;
 311:/usr/include/c++/6/bits/stl_tree.h **** 	_M_node = _Rb_tree_decrement(_M_node);
 312:/usr/include/c++/6/bits/stl_tree.h **** 	return __tmp;
 313:/usr/include/c++/6/bits/stl_tree.h ****       }
 314:/usr/include/c++/6/bits/stl_tree.h **** 
 315:/usr/include/c++/6/bits/stl_tree.h ****       bool
 316:/usr/include/c++/6/bits/stl_tree.h ****       operator==(const _Self& __x) const _GLIBCXX_NOEXCEPT
 317:/usr/include/c++/6/bits/stl_tree.h ****       { return _M_node == __x._M_node; }
 318:/usr/include/c++/6/bits/stl_tree.h **** 
 319:/usr/include/c++/6/bits/stl_tree.h ****       bool
 320:/usr/include/c++/6/bits/stl_tree.h ****       operator!=(const _Self& __x) const _GLIBCXX_NOEXCEPT
 321:/usr/include/c++/6/bits/stl_tree.h ****       { return _M_node != __x._M_node; }
 322:/usr/include/c++/6/bits/stl_tree.h **** 
 323:/usr/include/c++/6/bits/stl_tree.h ****       _Base_ptr _M_node;
 324:/usr/include/c++/6/bits/stl_tree.h ****     };
 325:/usr/include/c++/6/bits/stl_tree.h **** 
 326:/usr/include/c++/6/bits/stl_tree.h ****   template<typename _Val>
 327:/usr/include/c++/6/bits/stl_tree.h ****     inline bool
 328:/usr/include/c++/6/bits/stl_tree.h ****     operator==(const _Rb_tree_iterator<_Val>& __x,
 329:/usr/include/c++/6/bits/stl_tree.h ****                const _Rb_tree_const_iterator<_Val>& __y) _GLIBCXX_NOEXCEPT
 330:/usr/include/c++/6/bits/stl_tree.h ****     { return __x._M_node == __y._M_node; }
 331:/usr/include/c++/6/bits/stl_tree.h **** 
 332:/usr/include/c++/6/bits/stl_tree.h ****   template<typename _Val>
 333:/usr/include/c++/6/bits/stl_tree.h ****     inline bool
 334:/usr/include/c++/6/bits/stl_tree.h ****     operator!=(const _Rb_tree_iterator<_Val>& __x,
 335:/usr/include/c++/6/bits/stl_tree.h ****                const _Rb_tree_const_iterator<_Val>& __y) _GLIBCXX_NOEXCEPT
 336:/usr/include/c++/6/bits/stl_tree.h ****     { return __x._M_node != __y._M_node; }
 337:/usr/include/c++/6/bits/stl_tree.h **** 
 338:/usr/include/c++/6/bits/stl_tree.h ****   void
 339:/usr/include/c++/6/bits/stl_tree.h ****   _Rb_tree_insert_and_rebalance(const bool __insert_left,
 340:/usr/include/c++/6/bits/stl_tree.h ****                                 _Rb_tree_node_base* __x,
 341:/usr/include/c++/6/bits/stl_tree.h ****                                 _Rb_tree_node_base* __p,
 342:/usr/include/c++/6/bits/stl_tree.h ****                                 _Rb_tree_node_base& __header) throw ();
 343:/usr/include/c++/6/bits/stl_tree.h **** 
 344:/usr/include/c++/6/bits/stl_tree.h ****   _Rb_tree_node_base*
 345:/usr/include/c++/6/bits/stl_tree.h ****   _Rb_tree_rebalance_for_erase(_Rb_tree_node_base* const __z,
 346:/usr/include/c++/6/bits/stl_tree.h **** 			       _Rb_tree_node_base& __header) throw ();
 347:/usr/include/c++/6/bits/stl_tree.h **** 
 348:/usr/include/c++/6/bits/stl_tree.h **** #if __cplusplus > 201103L
 349:/usr/include/c++/6/bits/stl_tree.h ****   template<typename _Cmp, typename _SfinaeType, typename = __void_t<>>
 350:/usr/include/c++/6/bits/stl_tree.h ****     struct __has_is_transparent
GAS LISTING /tmp/ccsIN87E.s 			page 369


 351:/usr/include/c++/6/bits/stl_tree.h ****     { };
 352:/usr/include/c++/6/bits/stl_tree.h **** 
 353:/usr/include/c++/6/bits/stl_tree.h ****   template<typename _Cmp, typename _SfinaeType>
 354:/usr/include/c++/6/bits/stl_tree.h ****     struct __has_is_transparent<_Cmp, _SfinaeType,
 355:/usr/include/c++/6/bits/stl_tree.h **** 				__void_t<typename _Cmp::is_transparent>>
 356:/usr/include/c++/6/bits/stl_tree.h ****     { typedef void type; };
 357:/usr/include/c++/6/bits/stl_tree.h **** #endif
 358:/usr/include/c++/6/bits/stl_tree.h **** 
 359:/usr/include/c++/6/bits/stl_tree.h ****   template<typename _Key, typename _Val, typename _KeyOfValue,
 360:/usr/include/c++/6/bits/stl_tree.h ****            typename _Compare, typename _Alloc = allocator<_Val> >
 361:/usr/include/c++/6/bits/stl_tree.h ****     class _Rb_tree
 362:/usr/include/c++/6/bits/stl_tree.h ****     {
 363:/usr/include/c++/6/bits/stl_tree.h ****       typedef typename __gnu_cxx::__alloc_traits<_Alloc>::template
 364:/usr/include/c++/6/bits/stl_tree.h ****         rebind<_Rb_tree_node<_Val> >::other _Node_allocator;
 365:/usr/include/c++/6/bits/stl_tree.h **** 
 366:/usr/include/c++/6/bits/stl_tree.h ****       typedef __gnu_cxx::__alloc_traits<_Node_allocator> _Alloc_traits;
 367:/usr/include/c++/6/bits/stl_tree.h **** 
 368:/usr/include/c++/6/bits/stl_tree.h ****     protected:
 369:/usr/include/c++/6/bits/stl_tree.h ****       typedef _Rb_tree_node_base* 		_Base_ptr;
 370:/usr/include/c++/6/bits/stl_tree.h ****       typedef const _Rb_tree_node_base* 	_Const_Base_ptr;
 371:/usr/include/c++/6/bits/stl_tree.h ****       typedef _Rb_tree_node<_Val>* 		_Link_type;
 372:/usr/include/c++/6/bits/stl_tree.h ****       typedef const _Rb_tree_node<_Val>*	_Const_Link_type;
 373:/usr/include/c++/6/bits/stl_tree.h **** 
 374:/usr/include/c++/6/bits/stl_tree.h ****     private:
 375:/usr/include/c++/6/bits/stl_tree.h ****       // Functor recycling a pool of nodes and using allocation once the pool
 376:/usr/include/c++/6/bits/stl_tree.h ****       // is empty.
 377:/usr/include/c++/6/bits/stl_tree.h ****       struct _Reuse_or_alloc_node
 378:/usr/include/c++/6/bits/stl_tree.h ****       {
 379:/usr/include/c++/6/bits/stl_tree.h **** 	_Reuse_or_alloc_node(_Rb_tree& __t)
 380:/usr/include/c++/6/bits/stl_tree.h **** 	  : _M_root(__t._M_root()), _M_nodes(__t._M_rightmost()), _M_t(__t)
 381:/usr/include/c++/6/bits/stl_tree.h **** 	{
 382:/usr/include/c++/6/bits/stl_tree.h **** 	  if (_M_root)
 383:/usr/include/c++/6/bits/stl_tree.h **** 	    {
 384:/usr/include/c++/6/bits/stl_tree.h **** 	      _M_root->_M_parent = 0;
 385:/usr/include/c++/6/bits/stl_tree.h **** 
 386:/usr/include/c++/6/bits/stl_tree.h **** 	      if (_M_nodes->_M_left)
 387:/usr/include/c++/6/bits/stl_tree.h **** 		_M_nodes = _M_nodes->_M_left;
 388:/usr/include/c++/6/bits/stl_tree.h **** 	    }
 389:/usr/include/c++/6/bits/stl_tree.h **** 	  else
 390:/usr/include/c++/6/bits/stl_tree.h **** 	    _M_nodes = 0;
 391:/usr/include/c++/6/bits/stl_tree.h **** 	}
 392:/usr/include/c++/6/bits/stl_tree.h **** 
 393:/usr/include/c++/6/bits/stl_tree.h **** #if __cplusplus >= 201103L
 394:/usr/include/c++/6/bits/stl_tree.h **** 	_Reuse_or_alloc_node(const _Reuse_or_alloc_node&) = delete;
 395:/usr/include/c++/6/bits/stl_tree.h **** #endif
 396:/usr/include/c++/6/bits/stl_tree.h **** 
 397:/usr/include/c++/6/bits/stl_tree.h **** 	~_Reuse_or_alloc_node()
 398:/usr/include/c++/6/bits/stl_tree.h **** 	{ _M_t._M_erase(static_cast<_Link_type>(_M_root)); }
 399:/usr/include/c++/6/bits/stl_tree.h **** 
 400:/usr/include/c++/6/bits/stl_tree.h **** 	template<typename _Arg>
 401:/usr/include/c++/6/bits/stl_tree.h **** 	  _Link_type
 402:/usr/include/c++/6/bits/stl_tree.h **** #if __cplusplus < 201103L
 403:/usr/include/c++/6/bits/stl_tree.h **** 	  operator()(const _Arg& __arg)
 404:/usr/include/c++/6/bits/stl_tree.h **** #else
 405:/usr/include/c++/6/bits/stl_tree.h **** 	  operator()(_Arg&& __arg)
 406:/usr/include/c++/6/bits/stl_tree.h **** #endif
 407:/usr/include/c++/6/bits/stl_tree.h **** 	  {
GAS LISTING /tmp/ccsIN87E.s 			page 370


 408:/usr/include/c++/6/bits/stl_tree.h **** 	    _Link_type __node = static_cast<_Link_type>(_M_extract());
 409:/usr/include/c++/6/bits/stl_tree.h **** 	    if (__node)
 410:/usr/include/c++/6/bits/stl_tree.h **** 	      {
 411:/usr/include/c++/6/bits/stl_tree.h **** 		_M_t._M_destroy_node(__node);
 412:/usr/include/c++/6/bits/stl_tree.h **** 		_M_t._M_construct_node(__node, _GLIBCXX_FORWARD(_Arg, __arg));
 413:/usr/include/c++/6/bits/stl_tree.h **** 		return __node;
 414:/usr/include/c++/6/bits/stl_tree.h **** 	      }
 415:/usr/include/c++/6/bits/stl_tree.h **** 
 416:/usr/include/c++/6/bits/stl_tree.h **** 	    return _M_t._M_create_node(_GLIBCXX_FORWARD(_Arg, __arg));
 417:/usr/include/c++/6/bits/stl_tree.h **** 	  }
 418:/usr/include/c++/6/bits/stl_tree.h **** 
 419:/usr/include/c++/6/bits/stl_tree.h ****       private:
 420:/usr/include/c++/6/bits/stl_tree.h **** 	_Base_ptr
 421:/usr/include/c++/6/bits/stl_tree.h **** 	_M_extract()
 422:/usr/include/c++/6/bits/stl_tree.h **** 	{
 423:/usr/include/c++/6/bits/stl_tree.h **** 	  if (!_M_nodes)
 424:/usr/include/c++/6/bits/stl_tree.h **** 	    return _M_nodes;
 425:/usr/include/c++/6/bits/stl_tree.h **** 
 426:/usr/include/c++/6/bits/stl_tree.h **** 	  _Base_ptr __node = _M_nodes;
 427:/usr/include/c++/6/bits/stl_tree.h **** 	  _M_nodes = _M_nodes->_M_parent;
 428:/usr/include/c++/6/bits/stl_tree.h **** 	  if (_M_nodes)
 429:/usr/include/c++/6/bits/stl_tree.h **** 	    {
 430:/usr/include/c++/6/bits/stl_tree.h **** 	      if (_M_nodes->_M_right == __node)
 431:/usr/include/c++/6/bits/stl_tree.h **** 		{
 432:/usr/include/c++/6/bits/stl_tree.h **** 		  _M_nodes->_M_right = 0;
 433:/usr/include/c++/6/bits/stl_tree.h **** 
 434:/usr/include/c++/6/bits/stl_tree.h **** 		  if (_M_nodes->_M_left)
 435:/usr/include/c++/6/bits/stl_tree.h **** 		    {
 436:/usr/include/c++/6/bits/stl_tree.h **** 		      _M_nodes = _M_nodes->_M_left;
 437:/usr/include/c++/6/bits/stl_tree.h **** 
 438:/usr/include/c++/6/bits/stl_tree.h **** 		      while (_M_nodes->_M_right)
 439:/usr/include/c++/6/bits/stl_tree.h **** 			_M_nodes = _M_nodes->_M_right;
 440:/usr/include/c++/6/bits/stl_tree.h **** 
 441:/usr/include/c++/6/bits/stl_tree.h **** 		      if (_M_nodes->_M_left)
 442:/usr/include/c++/6/bits/stl_tree.h **** 			_M_nodes = _M_nodes->_M_left;
 443:/usr/include/c++/6/bits/stl_tree.h **** 		    }
 444:/usr/include/c++/6/bits/stl_tree.h **** 		}
 445:/usr/include/c++/6/bits/stl_tree.h **** 	      else // __node is on the left.
 446:/usr/include/c++/6/bits/stl_tree.h **** 		_M_nodes->_M_left = 0;
 447:/usr/include/c++/6/bits/stl_tree.h **** 	    }
 448:/usr/include/c++/6/bits/stl_tree.h **** 	  else
 449:/usr/include/c++/6/bits/stl_tree.h **** 	    _M_root = 0;
 450:/usr/include/c++/6/bits/stl_tree.h **** 
 451:/usr/include/c++/6/bits/stl_tree.h **** 	  return __node;
 452:/usr/include/c++/6/bits/stl_tree.h **** 	}
 453:/usr/include/c++/6/bits/stl_tree.h **** 
 454:/usr/include/c++/6/bits/stl_tree.h **** 	_Base_ptr _M_root;
 455:/usr/include/c++/6/bits/stl_tree.h **** 	_Base_ptr _M_nodes;
 456:/usr/include/c++/6/bits/stl_tree.h **** 	_Rb_tree& _M_t;
 457:/usr/include/c++/6/bits/stl_tree.h ****       };
 458:/usr/include/c++/6/bits/stl_tree.h **** 
 459:/usr/include/c++/6/bits/stl_tree.h ****       // Functor similar to the previous one but without any pool of nodes to
 460:/usr/include/c++/6/bits/stl_tree.h ****       // recycle.
 461:/usr/include/c++/6/bits/stl_tree.h ****       struct _Alloc_node
 462:/usr/include/c++/6/bits/stl_tree.h ****       {
 463:/usr/include/c++/6/bits/stl_tree.h **** 	_Alloc_node(_Rb_tree& __t)
 464:/usr/include/c++/6/bits/stl_tree.h **** 	  : _M_t(__t) { }
GAS LISTING /tmp/ccsIN87E.s 			page 371


 465:/usr/include/c++/6/bits/stl_tree.h **** 
 466:/usr/include/c++/6/bits/stl_tree.h **** 	template<typename _Arg>
 467:/usr/include/c++/6/bits/stl_tree.h **** 	  _Link_type
 468:/usr/include/c++/6/bits/stl_tree.h **** #if __cplusplus < 201103L
 469:/usr/include/c++/6/bits/stl_tree.h **** 	  operator()(const _Arg& __arg) const
 470:/usr/include/c++/6/bits/stl_tree.h **** #else
 471:/usr/include/c++/6/bits/stl_tree.h **** 	  operator()(_Arg&& __arg) const
 472:/usr/include/c++/6/bits/stl_tree.h **** #endif
 473:/usr/include/c++/6/bits/stl_tree.h **** 	  { return _M_t._M_create_node(_GLIBCXX_FORWARD(_Arg, __arg)); }
 474:/usr/include/c++/6/bits/stl_tree.h **** 
 475:/usr/include/c++/6/bits/stl_tree.h ****       private:
 476:/usr/include/c++/6/bits/stl_tree.h **** 	_Rb_tree& _M_t;
 477:/usr/include/c++/6/bits/stl_tree.h ****       };
 478:/usr/include/c++/6/bits/stl_tree.h **** 
 479:/usr/include/c++/6/bits/stl_tree.h ****     public:
 480:/usr/include/c++/6/bits/stl_tree.h ****       typedef _Key 				key_type;
 481:/usr/include/c++/6/bits/stl_tree.h ****       typedef _Val 				value_type;
 482:/usr/include/c++/6/bits/stl_tree.h ****       typedef value_type* 			pointer;
 483:/usr/include/c++/6/bits/stl_tree.h ****       typedef const value_type* 		const_pointer;
 484:/usr/include/c++/6/bits/stl_tree.h ****       typedef value_type& 			reference;
 485:/usr/include/c++/6/bits/stl_tree.h ****       typedef const value_type& 		const_reference;
 486:/usr/include/c++/6/bits/stl_tree.h ****       typedef size_t 				size_type;
 487:/usr/include/c++/6/bits/stl_tree.h ****       typedef ptrdiff_t 			difference_type;
 488:/usr/include/c++/6/bits/stl_tree.h ****       typedef _Alloc 				allocator_type;
 489:/usr/include/c++/6/bits/stl_tree.h **** 
 490:/usr/include/c++/6/bits/stl_tree.h ****       _Node_allocator&
 491:/usr/include/c++/6/bits/stl_tree.h ****       _M_get_Node_allocator() _GLIBCXX_NOEXCEPT
 492:/usr/include/c++/6/bits/stl_tree.h ****       { return *static_cast<_Node_allocator*>(&this->_M_impl); }
 493:/usr/include/c++/6/bits/stl_tree.h ****       
 494:/usr/include/c++/6/bits/stl_tree.h ****       const _Node_allocator&
 495:/usr/include/c++/6/bits/stl_tree.h ****       _M_get_Node_allocator() const _GLIBCXX_NOEXCEPT
 496:/usr/include/c++/6/bits/stl_tree.h ****       { return *static_cast<const _Node_allocator*>(&this->_M_impl); }
 497:/usr/include/c++/6/bits/stl_tree.h **** 
 498:/usr/include/c++/6/bits/stl_tree.h ****       allocator_type
 499:/usr/include/c++/6/bits/stl_tree.h ****       get_allocator() const _GLIBCXX_NOEXCEPT
 500:/usr/include/c++/6/bits/stl_tree.h ****       { return allocator_type(_M_get_Node_allocator()); }
 501:/usr/include/c++/6/bits/stl_tree.h **** 
 502:/usr/include/c++/6/bits/stl_tree.h ****     protected:
 503:/usr/include/c++/6/bits/stl_tree.h ****       _Link_type
 504:/usr/include/c++/6/bits/stl_tree.h ****       _M_get_node()
 505:/usr/include/c++/6/bits/stl_tree.h ****       { return _Alloc_traits::allocate(_M_get_Node_allocator(), 1); }
 506:/usr/include/c++/6/bits/stl_tree.h **** 
 507:/usr/include/c++/6/bits/stl_tree.h ****       void
 508:/usr/include/c++/6/bits/stl_tree.h ****       _M_put_node(_Link_type __p) _GLIBCXX_NOEXCEPT
 509:/usr/include/c++/6/bits/stl_tree.h ****       { _Alloc_traits::deallocate(_M_get_Node_allocator(), __p, 1); }
 510:/usr/include/c++/6/bits/stl_tree.h **** 
 511:/usr/include/c++/6/bits/stl_tree.h **** #if __cplusplus < 201103L
 512:/usr/include/c++/6/bits/stl_tree.h ****       void
 513:/usr/include/c++/6/bits/stl_tree.h ****       _M_construct_node(_Link_type __node, const value_type& __x)
 514:/usr/include/c++/6/bits/stl_tree.h ****       {
 515:/usr/include/c++/6/bits/stl_tree.h **** 	__try
 516:/usr/include/c++/6/bits/stl_tree.h **** 	  { get_allocator().construct(__node->_M_valptr(), __x); }
 517:/usr/include/c++/6/bits/stl_tree.h **** 	__catch(...)
 518:/usr/include/c++/6/bits/stl_tree.h **** 	  {
 519:/usr/include/c++/6/bits/stl_tree.h **** 	    _M_put_node(__node);
 520:/usr/include/c++/6/bits/stl_tree.h **** 	    __throw_exception_again;
 521:/usr/include/c++/6/bits/stl_tree.h **** 	  }
GAS LISTING /tmp/ccsIN87E.s 			page 372


 522:/usr/include/c++/6/bits/stl_tree.h ****       }
 523:/usr/include/c++/6/bits/stl_tree.h **** 
 524:/usr/include/c++/6/bits/stl_tree.h ****       _Link_type
 525:/usr/include/c++/6/bits/stl_tree.h ****       _M_create_node(const value_type& __x)
 526:/usr/include/c++/6/bits/stl_tree.h ****       {
 527:/usr/include/c++/6/bits/stl_tree.h **** 	_Link_type __tmp = _M_get_node();
 528:/usr/include/c++/6/bits/stl_tree.h **** 	_M_construct_node(__tmp, __x);
 529:/usr/include/c++/6/bits/stl_tree.h **** 	return __tmp;
 530:/usr/include/c++/6/bits/stl_tree.h ****       }
 531:/usr/include/c++/6/bits/stl_tree.h **** 
 532:/usr/include/c++/6/bits/stl_tree.h ****       void
 533:/usr/include/c++/6/bits/stl_tree.h ****       _M_destroy_node(_Link_type __p)
 534:/usr/include/c++/6/bits/stl_tree.h ****       { get_allocator().destroy(__p->_M_valptr()); }
 535:/usr/include/c++/6/bits/stl_tree.h **** #else
 536:/usr/include/c++/6/bits/stl_tree.h ****       template<typename... _Args>
 537:/usr/include/c++/6/bits/stl_tree.h **** 	void
 538:/usr/include/c++/6/bits/stl_tree.h **** 	_M_construct_node(_Link_type __node, _Args&&... __args)
 539:/usr/include/c++/6/bits/stl_tree.h **** 	{
 540:/usr/include/c++/6/bits/stl_tree.h **** 	  __try
 541:/usr/include/c++/6/bits/stl_tree.h **** 	    {
 542:/usr/include/c++/6/bits/stl_tree.h **** 	      ::new(__node) _Rb_tree_node<_Val>;
 543:/usr/include/c++/6/bits/stl_tree.h **** 	      _Alloc_traits::construct(_M_get_Node_allocator(),
 544:/usr/include/c++/6/bits/stl_tree.h **** 				       __node->_M_valptr(),
 545:/usr/include/c++/6/bits/stl_tree.h **** 				       std::forward<_Args>(__args)...);
 546:/usr/include/c++/6/bits/stl_tree.h **** 	    }
 547:/usr/include/c++/6/bits/stl_tree.h **** 	  __catch(...)
 548:/usr/include/c++/6/bits/stl_tree.h **** 	    {
 549:/usr/include/c++/6/bits/stl_tree.h **** 	      __node->~_Rb_tree_node<_Val>();
 550:/usr/include/c++/6/bits/stl_tree.h **** 	      _M_put_node(__node);
 551:/usr/include/c++/6/bits/stl_tree.h **** 	      __throw_exception_again;
 552:/usr/include/c++/6/bits/stl_tree.h **** 	    }
 553:/usr/include/c++/6/bits/stl_tree.h **** 	}
 554:/usr/include/c++/6/bits/stl_tree.h **** 
 555:/usr/include/c++/6/bits/stl_tree.h ****       template<typename... _Args>
 556:/usr/include/c++/6/bits/stl_tree.h ****         _Link_type
 557:/usr/include/c++/6/bits/stl_tree.h ****         _M_create_node(_Args&&... __args)
 558:/usr/include/c++/6/bits/stl_tree.h **** 	{
 559:/usr/include/c++/6/bits/stl_tree.h **** 	  _Link_type __tmp = _M_get_node();
 560:/usr/include/c++/6/bits/stl_tree.h **** 	  _M_construct_node(__tmp, std::forward<_Args>(__args)...);
 561:/usr/include/c++/6/bits/stl_tree.h **** 	  return __tmp;
 562:/usr/include/c++/6/bits/stl_tree.h **** 	}
 563:/usr/include/c++/6/bits/stl_tree.h **** 
 564:/usr/include/c++/6/bits/stl_tree.h ****       void
 565:/usr/include/c++/6/bits/stl_tree.h ****       _M_destroy_node(_Link_type __p) noexcept
 566:/usr/include/c++/6/bits/stl_tree.h ****       {
 567:/usr/include/c++/6/bits/stl_tree.h **** 	_Alloc_traits::destroy(_M_get_Node_allocator(), __p->_M_valptr());
 568:/usr/include/c++/6/bits/stl_tree.h **** 	__p->~_Rb_tree_node<_Val>();
 569:/usr/include/c++/6/bits/stl_tree.h ****       }
 570:/usr/include/c++/6/bits/stl_tree.h **** #endif
 571:/usr/include/c++/6/bits/stl_tree.h **** 
 572:/usr/include/c++/6/bits/stl_tree.h ****       void
 573:/usr/include/c++/6/bits/stl_tree.h ****       _M_drop_node(_Link_type __p) _GLIBCXX_NOEXCEPT
 574:/usr/include/c++/6/bits/stl_tree.h ****       {
 575:/usr/include/c++/6/bits/stl_tree.h **** 	_M_destroy_node(__p);
 576:/usr/include/c++/6/bits/stl_tree.h **** 	_M_put_node(__p);
 577:/usr/include/c++/6/bits/stl_tree.h ****       }
 578:/usr/include/c++/6/bits/stl_tree.h **** 
GAS LISTING /tmp/ccsIN87E.s 			page 373


 579:/usr/include/c++/6/bits/stl_tree.h ****       template<typename _NodeGen>
 580:/usr/include/c++/6/bits/stl_tree.h **** 	_Link_type
 581:/usr/include/c++/6/bits/stl_tree.h **** 	_M_clone_node(_Const_Link_type __x, _NodeGen& __node_gen)
 582:/usr/include/c++/6/bits/stl_tree.h **** 	{
 583:/usr/include/c++/6/bits/stl_tree.h **** 	  _Link_type __tmp = __node_gen(*__x->_M_valptr());
 584:/usr/include/c++/6/bits/stl_tree.h **** 	  __tmp->_M_color = __x->_M_color;
 585:/usr/include/c++/6/bits/stl_tree.h **** 	  __tmp->_M_left = 0;
 586:/usr/include/c++/6/bits/stl_tree.h **** 	  __tmp->_M_right = 0;
 587:/usr/include/c++/6/bits/stl_tree.h **** 	  return __tmp;
 588:/usr/include/c++/6/bits/stl_tree.h **** 	}
 589:/usr/include/c++/6/bits/stl_tree.h **** 
 590:/usr/include/c++/6/bits/stl_tree.h ****     protected:
 591:/usr/include/c++/6/bits/stl_tree.h ****       // Unused _Is_pod_comparator is kept as it is part of mangled name.
 592:/usr/include/c++/6/bits/stl_tree.h ****       template<typename _Key_compare,
 593:/usr/include/c++/6/bits/stl_tree.h **** 	       bool /* _Is_pod_comparator */ = __is_pod(_Key_compare)>
 594:/usr/include/c++/6/bits/stl_tree.h ****         struct _Rb_tree_impl : public _Node_allocator
 595:/usr/include/c++/6/bits/stl_tree.h ****         {
 596:/usr/include/c++/6/bits/stl_tree.h **** 	  _Key_compare		_M_key_compare;
 597:/usr/include/c++/6/bits/stl_tree.h **** 	  _Rb_tree_node_base 	_M_header;
 598:/usr/include/c++/6/bits/stl_tree.h **** 	  size_type 		_M_node_count; // Keeps track of size of tree.
 599:/usr/include/c++/6/bits/stl_tree.h **** 
 600:/usr/include/c++/6/bits/stl_tree.h **** 	  _Rb_tree_impl()
 601:/usr/include/c++/6/bits/stl_tree.h **** 	  : _Node_allocator(), _M_key_compare(), _M_header(),
 602:/usr/include/c++/6/bits/stl_tree.h **** 	    _M_node_count(0)
 603:/usr/include/c++/6/bits/stl_tree.h **** 	  { _M_initialize(); }
 604:/usr/include/c++/6/bits/stl_tree.h **** 
 605:/usr/include/c++/6/bits/stl_tree.h **** 	  _Rb_tree_impl(const _Key_compare& __comp, const _Node_allocator& __a)
 606:/usr/include/c++/6/bits/stl_tree.h **** 	  : _Node_allocator(__a), _M_key_compare(__comp), _M_header(),
 607:/usr/include/c++/6/bits/stl_tree.h **** 	    _M_node_count(0)
 608:/usr/include/c++/6/bits/stl_tree.h **** 	  { _M_initialize(); }
 609:/usr/include/c++/6/bits/stl_tree.h **** 
 610:/usr/include/c++/6/bits/stl_tree.h **** #if __cplusplus >= 201103L
 611:/usr/include/c++/6/bits/stl_tree.h **** 	  _Rb_tree_impl(const _Key_compare& __comp, _Node_allocator&& __a)
 612:/usr/include/c++/6/bits/stl_tree.h **** 	  : _Node_allocator(std::move(__a)), _M_key_compare(__comp),
 613:/usr/include/c++/6/bits/stl_tree.h **** 	    _M_header(), _M_node_count(0)
 614:/usr/include/c++/6/bits/stl_tree.h **** 	  { _M_initialize(); }
 615:/usr/include/c++/6/bits/stl_tree.h **** #endif
 616:/usr/include/c++/6/bits/stl_tree.h **** 
 617:/usr/include/c++/6/bits/stl_tree.h **** 	  void
 618:/usr/include/c++/6/bits/stl_tree.h **** 	  _M_reset()
 619:/usr/include/c++/6/bits/stl_tree.h **** 	  {
 620:/usr/include/c++/6/bits/stl_tree.h **** 	    this->_M_header._M_parent = 0;
 621:/usr/include/c++/6/bits/stl_tree.h **** 	    this->_M_header._M_left = &this->_M_header;
 622:/usr/include/c++/6/bits/stl_tree.h **** 	    this->_M_header._M_right = &this->_M_header;
 623:/usr/include/c++/6/bits/stl_tree.h **** 	    this->_M_node_count = 0;
 624:/usr/include/c++/6/bits/stl_tree.h **** 	  }
 625:/usr/include/c++/6/bits/stl_tree.h **** 
 626:/usr/include/c++/6/bits/stl_tree.h **** 	private:
 627:/usr/include/c++/6/bits/stl_tree.h **** 	  void
 628:/usr/include/c++/6/bits/stl_tree.h **** 	  _M_initialize()
 629:/usr/include/c++/6/bits/stl_tree.h **** 	  {
 630:/usr/include/c++/6/bits/stl_tree.h **** 	    this->_M_header._M_color = _S_red;
 631:/usr/include/c++/6/bits/stl_tree.h **** 	    this->_M_header._M_parent = 0;
 632:/usr/include/c++/6/bits/stl_tree.h **** 	    this->_M_header._M_left = &this->_M_header;
 633:/usr/include/c++/6/bits/stl_tree.h **** 	    this->_M_header._M_right = &this->_M_header;
 634:/usr/include/c++/6/bits/stl_tree.h **** 	  }	    
 635:/usr/include/c++/6/bits/stl_tree.h **** 	};
GAS LISTING /tmp/ccsIN87E.s 			page 374


 636:/usr/include/c++/6/bits/stl_tree.h **** 
 637:/usr/include/c++/6/bits/stl_tree.h ****       _Rb_tree_impl<_Compare> _M_impl;
 638:/usr/include/c++/6/bits/stl_tree.h **** 
 639:/usr/include/c++/6/bits/stl_tree.h ****     protected:
 640:/usr/include/c++/6/bits/stl_tree.h ****       _Base_ptr&
 641:/usr/include/c++/6/bits/stl_tree.h ****       _M_root() _GLIBCXX_NOEXCEPT
 642:/usr/include/c++/6/bits/stl_tree.h ****       { return this->_M_impl._M_header._M_parent; }
 643:/usr/include/c++/6/bits/stl_tree.h **** 
 644:/usr/include/c++/6/bits/stl_tree.h ****       _Const_Base_ptr
 645:/usr/include/c++/6/bits/stl_tree.h ****       _M_root() const _GLIBCXX_NOEXCEPT
 646:/usr/include/c++/6/bits/stl_tree.h ****       { return this->_M_impl._M_header._M_parent; }
 647:/usr/include/c++/6/bits/stl_tree.h **** 
 648:/usr/include/c++/6/bits/stl_tree.h ****       _Base_ptr&
 649:/usr/include/c++/6/bits/stl_tree.h ****       _M_leftmost() _GLIBCXX_NOEXCEPT
 650:/usr/include/c++/6/bits/stl_tree.h ****       { return this->_M_impl._M_header._M_left; }
 651:/usr/include/c++/6/bits/stl_tree.h **** 
 652:/usr/include/c++/6/bits/stl_tree.h ****       _Const_Base_ptr
 653:/usr/include/c++/6/bits/stl_tree.h ****       _M_leftmost() const _GLIBCXX_NOEXCEPT
 654:/usr/include/c++/6/bits/stl_tree.h ****       { return this->_M_impl._M_header._M_left; }
 655:/usr/include/c++/6/bits/stl_tree.h **** 
 656:/usr/include/c++/6/bits/stl_tree.h ****       _Base_ptr&
 657:/usr/include/c++/6/bits/stl_tree.h ****       _M_rightmost() _GLIBCXX_NOEXCEPT
 658:/usr/include/c++/6/bits/stl_tree.h ****       { return this->_M_impl._M_header._M_right; }
 659:/usr/include/c++/6/bits/stl_tree.h **** 
 660:/usr/include/c++/6/bits/stl_tree.h ****       _Const_Base_ptr
 661:/usr/include/c++/6/bits/stl_tree.h ****       _M_rightmost() const _GLIBCXX_NOEXCEPT
 662:/usr/include/c++/6/bits/stl_tree.h ****       { return this->_M_impl._M_header._M_right; }
 663:/usr/include/c++/6/bits/stl_tree.h **** 
 664:/usr/include/c++/6/bits/stl_tree.h ****       _Link_type
 665:/usr/include/c++/6/bits/stl_tree.h ****       _M_begin() _GLIBCXX_NOEXCEPT
 8140              		.loc 27 665 0
 8141              		.cfi_startproc
 8142 0000 55       		pushq	%rbp
 8143              		.cfi_def_cfa_offset 16
 8144              		.cfi_offset 6, -16
 8145 0001 4889E5   		movq	%rsp, %rbp
 8146              		.cfi_def_cfa_register 6
 8147 0004 48897DF8 		movq	%rdi, -8(%rbp)
 666:/usr/include/c++/6/bits/stl_tree.h ****       { return static_cast<_Link_type>(this->_M_impl._M_header._M_parent); }
 8148              		.loc 27 666 0
 8149 0008 488B45F8 		movq	-8(%rbp), %rax
 8150 000c 488B4010 		movq	16(%rax), %rax
 8151 0010 5D       		popq	%rbp
 8152              		.cfi_def_cfa 7, 8
 8153 0011 C3       		ret
 8154              		.cfi_endproc
 8155              	.LFE12626:
 8157              		.section	.text._ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_St5dequeIS4_SaIS
 8158              		.align 2
 8159              		.weak	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_St5dequeIS4_SaIS4_EEESt10
 8161              	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_St5dequeIS4_SaIS4_EEESt10_Select
 8162              	.LFB12642:
 665:/usr/include/c++/6/bits/stl_tree.h ****       { return static_cast<_Link_type>(this->_M_impl._M_header._M_parent); }
 8163              		.loc 27 665 0
 8164              		.cfi_startproc
 8165 0000 55       		pushq	%rbp
 8166              		.cfi_def_cfa_offset 16
GAS LISTING /tmp/ccsIN87E.s 			page 375


 8167              		.cfi_offset 6, -16
 8168 0001 4889E5   		movq	%rsp, %rbp
 8169              		.cfi_def_cfa_register 6
 8170 0004 48897DF8 		movq	%rdi, -8(%rbp)
 8171              		.loc 27 666 0
 8172 0008 488B45F8 		movq	-8(%rbp), %rax
 8173 000c 488B4010 		movq	16(%rax), %rax
 8174 0010 5D       		popq	%rbp
 8175              		.cfi_def_cfa 7, 8
 8176 0011 C3       		ret
 8177              		.cfi_endproc
 8178              	.LFE12642:
 8180              		.section	.text._ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFv
 8181              		.align 2
 8182              		.weak	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt
 8184              	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt10_Sele
 8185              	.LFB12655:
 667:/usr/include/c++/6/bits/stl_tree.h **** 
 668:/usr/include/c++/6/bits/stl_tree.h ****       _Const_Link_type
 669:/usr/include/c++/6/bits/stl_tree.h ****       _M_begin() const _GLIBCXX_NOEXCEPT
 670:/usr/include/c++/6/bits/stl_tree.h ****       {
 671:/usr/include/c++/6/bits/stl_tree.h **** 	return static_cast<_Const_Link_type>
 672:/usr/include/c++/6/bits/stl_tree.h **** 	  (this->_M_impl._M_header._M_parent);
 673:/usr/include/c++/6/bits/stl_tree.h ****       }
 674:/usr/include/c++/6/bits/stl_tree.h **** 
 675:/usr/include/c++/6/bits/stl_tree.h ****       _Base_ptr
 676:/usr/include/c++/6/bits/stl_tree.h ****       _M_end() _GLIBCXX_NOEXCEPT
 677:/usr/include/c++/6/bits/stl_tree.h ****       { return &this->_M_impl._M_header; }
 678:/usr/include/c++/6/bits/stl_tree.h **** 
 679:/usr/include/c++/6/bits/stl_tree.h ****       _Const_Base_ptr
 680:/usr/include/c++/6/bits/stl_tree.h ****       _M_end() const _GLIBCXX_NOEXCEPT
 681:/usr/include/c++/6/bits/stl_tree.h ****       { return &this->_M_impl._M_header; }
 682:/usr/include/c++/6/bits/stl_tree.h **** 
 683:/usr/include/c++/6/bits/stl_tree.h ****       static const_reference
 684:/usr/include/c++/6/bits/stl_tree.h ****       _S_value(_Const_Link_type __x)
 685:/usr/include/c++/6/bits/stl_tree.h ****       { return *__x->_M_valptr(); }
 686:/usr/include/c++/6/bits/stl_tree.h **** 
 687:/usr/include/c++/6/bits/stl_tree.h ****       static const _Key&
 688:/usr/include/c++/6/bits/stl_tree.h ****       _S_key(_Const_Link_type __x)
 689:/usr/include/c++/6/bits/stl_tree.h ****       { return _KeyOfValue()(_S_value(__x)); }
 690:/usr/include/c++/6/bits/stl_tree.h **** 
 691:/usr/include/c++/6/bits/stl_tree.h ****       static _Link_type
 692:/usr/include/c++/6/bits/stl_tree.h ****       _S_left(_Base_ptr __x) _GLIBCXX_NOEXCEPT
 693:/usr/include/c++/6/bits/stl_tree.h ****       { return static_cast<_Link_type>(__x->_M_left); }
 694:/usr/include/c++/6/bits/stl_tree.h **** 
 695:/usr/include/c++/6/bits/stl_tree.h ****       static _Const_Link_type
 696:/usr/include/c++/6/bits/stl_tree.h ****       _S_left(_Const_Base_ptr __x) _GLIBCXX_NOEXCEPT
 697:/usr/include/c++/6/bits/stl_tree.h ****       { return static_cast<_Const_Link_type>(__x->_M_left); }
 698:/usr/include/c++/6/bits/stl_tree.h **** 
 699:/usr/include/c++/6/bits/stl_tree.h ****       static _Link_type
 700:/usr/include/c++/6/bits/stl_tree.h ****       _S_right(_Base_ptr __x) _GLIBCXX_NOEXCEPT
 701:/usr/include/c++/6/bits/stl_tree.h ****       { return static_cast<_Link_type>(__x->_M_right); }
 702:/usr/include/c++/6/bits/stl_tree.h **** 
 703:/usr/include/c++/6/bits/stl_tree.h ****       static _Const_Link_type
 704:/usr/include/c++/6/bits/stl_tree.h ****       _S_right(_Const_Base_ptr __x) _GLIBCXX_NOEXCEPT
 705:/usr/include/c++/6/bits/stl_tree.h ****       { return static_cast<_Const_Link_type>(__x->_M_right); }
 706:/usr/include/c++/6/bits/stl_tree.h **** 
GAS LISTING /tmp/ccsIN87E.s 			page 376


 707:/usr/include/c++/6/bits/stl_tree.h ****       static const_reference
 708:/usr/include/c++/6/bits/stl_tree.h ****       _S_value(_Const_Base_ptr __x)
 709:/usr/include/c++/6/bits/stl_tree.h ****       { return *static_cast<_Const_Link_type>(__x)->_M_valptr(); }
 710:/usr/include/c++/6/bits/stl_tree.h **** 
 711:/usr/include/c++/6/bits/stl_tree.h ****       static const _Key&
 712:/usr/include/c++/6/bits/stl_tree.h ****       _S_key(_Const_Base_ptr __x)
 713:/usr/include/c++/6/bits/stl_tree.h ****       { return _KeyOfValue()(_S_value(__x)); }
 714:/usr/include/c++/6/bits/stl_tree.h **** 
 715:/usr/include/c++/6/bits/stl_tree.h ****       static _Base_ptr
 716:/usr/include/c++/6/bits/stl_tree.h ****       _S_minimum(_Base_ptr __x) _GLIBCXX_NOEXCEPT
 717:/usr/include/c++/6/bits/stl_tree.h ****       { return _Rb_tree_node_base::_S_minimum(__x); }
 718:/usr/include/c++/6/bits/stl_tree.h **** 
 719:/usr/include/c++/6/bits/stl_tree.h ****       static _Const_Base_ptr
 720:/usr/include/c++/6/bits/stl_tree.h ****       _S_minimum(_Const_Base_ptr __x) _GLIBCXX_NOEXCEPT
 721:/usr/include/c++/6/bits/stl_tree.h ****       { return _Rb_tree_node_base::_S_minimum(__x); }
 722:/usr/include/c++/6/bits/stl_tree.h **** 
 723:/usr/include/c++/6/bits/stl_tree.h ****       static _Base_ptr
 724:/usr/include/c++/6/bits/stl_tree.h ****       _S_maximum(_Base_ptr __x) _GLIBCXX_NOEXCEPT
 725:/usr/include/c++/6/bits/stl_tree.h ****       { return _Rb_tree_node_base::_S_maximum(__x); }
 726:/usr/include/c++/6/bits/stl_tree.h **** 
 727:/usr/include/c++/6/bits/stl_tree.h ****       static _Const_Base_ptr
 728:/usr/include/c++/6/bits/stl_tree.h ****       _S_maximum(_Const_Base_ptr __x) _GLIBCXX_NOEXCEPT
 729:/usr/include/c++/6/bits/stl_tree.h ****       { return _Rb_tree_node_base::_S_maximum(__x); }
 730:/usr/include/c++/6/bits/stl_tree.h **** 
 731:/usr/include/c++/6/bits/stl_tree.h ****     public:
 732:/usr/include/c++/6/bits/stl_tree.h ****       typedef _Rb_tree_iterator<value_type>       iterator;
 733:/usr/include/c++/6/bits/stl_tree.h ****       typedef _Rb_tree_const_iterator<value_type> const_iterator;
 734:/usr/include/c++/6/bits/stl_tree.h **** 
 735:/usr/include/c++/6/bits/stl_tree.h ****       typedef std::reverse_iterator<iterator>       reverse_iterator;
 736:/usr/include/c++/6/bits/stl_tree.h ****       typedef std::reverse_iterator<const_iterator> const_reverse_iterator;
 737:/usr/include/c++/6/bits/stl_tree.h **** 
 738:/usr/include/c++/6/bits/stl_tree.h ****       pair<_Base_ptr, _Base_ptr>
 739:/usr/include/c++/6/bits/stl_tree.h ****       _M_get_insert_unique_pos(const key_type& __k);
 740:/usr/include/c++/6/bits/stl_tree.h **** 
 741:/usr/include/c++/6/bits/stl_tree.h ****       pair<_Base_ptr, _Base_ptr>
 742:/usr/include/c++/6/bits/stl_tree.h ****       _M_get_insert_equal_pos(const key_type& __k);
 743:/usr/include/c++/6/bits/stl_tree.h **** 
 744:/usr/include/c++/6/bits/stl_tree.h ****       pair<_Base_ptr, _Base_ptr>
 745:/usr/include/c++/6/bits/stl_tree.h ****       _M_get_insert_hint_unique_pos(const_iterator __pos,
 746:/usr/include/c++/6/bits/stl_tree.h **** 				    const key_type& __k);
 747:/usr/include/c++/6/bits/stl_tree.h **** 
 748:/usr/include/c++/6/bits/stl_tree.h ****       pair<_Base_ptr, _Base_ptr>
 749:/usr/include/c++/6/bits/stl_tree.h ****       _M_get_insert_hint_equal_pos(const_iterator __pos,
 750:/usr/include/c++/6/bits/stl_tree.h **** 				   const key_type& __k);
 751:/usr/include/c++/6/bits/stl_tree.h **** 
 752:/usr/include/c++/6/bits/stl_tree.h ****     private:
 753:/usr/include/c++/6/bits/stl_tree.h **** #if __cplusplus >= 201103L
 754:/usr/include/c++/6/bits/stl_tree.h ****       template<typename _Arg, typename _NodeGen>
 755:/usr/include/c++/6/bits/stl_tree.h ****         iterator
 756:/usr/include/c++/6/bits/stl_tree.h **** 	_M_insert_(_Base_ptr __x, _Base_ptr __y, _Arg&& __v, _NodeGen&);
 757:/usr/include/c++/6/bits/stl_tree.h **** 
 758:/usr/include/c++/6/bits/stl_tree.h ****       iterator
 759:/usr/include/c++/6/bits/stl_tree.h ****       _M_insert_node(_Base_ptr __x, _Base_ptr __y, _Link_type __z);
 760:/usr/include/c++/6/bits/stl_tree.h **** 
 761:/usr/include/c++/6/bits/stl_tree.h ****       template<typename _Arg>
 762:/usr/include/c++/6/bits/stl_tree.h ****         iterator
 763:/usr/include/c++/6/bits/stl_tree.h ****         _M_insert_lower(_Base_ptr __y, _Arg&& __v);
GAS LISTING /tmp/ccsIN87E.s 			page 377


 764:/usr/include/c++/6/bits/stl_tree.h **** 
 765:/usr/include/c++/6/bits/stl_tree.h ****       template<typename _Arg>
 766:/usr/include/c++/6/bits/stl_tree.h ****         iterator
 767:/usr/include/c++/6/bits/stl_tree.h ****         _M_insert_equal_lower(_Arg&& __x);
 768:/usr/include/c++/6/bits/stl_tree.h **** 
 769:/usr/include/c++/6/bits/stl_tree.h ****       iterator
 770:/usr/include/c++/6/bits/stl_tree.h ****       _M_insert_lower_node(_Base_ptr __p, _Link_type __z);
 771:/usr/include/c++/6/bits/stl_tree.h **** 
 772:/usr/include/c++/6/bits/stl_tree.h ****       iterator
 773:/usr/include/c++/6/bits/stl_tree.h ****       _M_insert_equal_lower_node(_Link_type __z);
 774:/usr/include/c++/6/bits/stl_tree.h **** #else
 775:/usr/include/c++/6/bits/stl_tree.h ****       template<typename _NodeGen>
 776:/usr/include/c++/6/bits/stl_tree.h **** 	iterator
 777:/usr/include/c++/6/bits/stl_tree.h **** 	_M_insert_(_Base_ptr __x, _Base_ptr __y,
 778:/usr/include/c++/6/bits/stl_tree.h **** 		   const value_type& __v, _NodeGen&);
 779:/usr/include/c++/6/bits/stl_tree.h **** 
 780:/usr/include/c++/6/bits/stl_tree.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 781:/usr/include/c++/6/bits/stl_tree.h ****       // 233. Insertion hints in associative containers.
 782:/usr/include/c++/6/bits/stl_tree.h ****       iterator
 783:/usr/include/c++/6/bits/stl_tree.h ****       _M_insert_lower(_Base_ptr __y, const value_type& __v);
 784:/usr/include/c++/6/bits/stl_tree.h **** 
 785:/usr/include/c++/6/bits/stl_tree.h ****       iterator
 786:/usr/include/c++/6/bits/stl_tree.h ****       _M_insert_equal_lower(const value_type& __x);
 787:/usr/include/c++/6/bits/stl_tree.h **** #endif
 788:/usr/include/c++/6/bits/stl_tree.h **** 
 789:/usr/include/c++/6/bits/stl_tree.h ****       template<typename _NodeGen>
 790:/usr/include/c++/6/bits/stl_tree.h **** 	_Link_type
 791:/usr/include/c++/6/bits/stl_tree.h **** 	_M_copy(_Const_Link_type __x, _Base_ptr __p, _NodeGen&);
 792:/usr/include/c++/6/bits/stl_tree.h **** 
 793:/usr/include/c++/6/bits/stl_tree.h ****       _Link_type
 794:/usr/include/c++/6/bits/stl_tree.h ****       _M_copy(_Const_Link_type __x, _Base_ptr __p)
 795:/usr/include/c++/6/bits/stl_tree.h ****       {
 796:/usr/include/c++/6/bits/stl_tree.h **** 	_Alloc_node __an(*this);
 797:/usr/include/c++/6/bits/stl_tree.h **** 	return _M_copy(__x, __p, __an);
 798:/usr/include/c++/6/bits/stl_tree.h ****       }
 799:/usr/include/c++/6/bits/stl_tree.h **** 
 800:/usr/include/c++/6/bits/stl_tree.h ****       void
 801:/usr/include/c++/6/bits/stl_tree.h ****       _M_erase(_Link_type __x);
 802:/usr/include/c++/6/bits/stl_tree.h **** 
 803:/usr/include/c++/6/bits/stl_tree.h ****       iterator
 804:/usr/include/c++/6/bits/stl_tree.h ****       _M_lower_bound(_Link_type __x, _Base_ptr __y,
 805:/usr/include/c++/6/bits/stl_tree.h **** 		     const _Key& __k);
 806:/usr/include/c++/6/bits/stl_tree.h **** 
 807:/usr/include/c++/6/bits/stl_tree.h ****       const_iterator
 808:/usr/include/c++/6/bits/stl_tree.h ****       _M_lower_bound(_Const_Link_type __x, _Const_Base_ptr __y,
 809:/usr/include/c++/6/bits/stl_tree.h **** 		     const _Key& __k) const;
 810:/usr/include/c++/6/bits/stl_tree.h **** 
 811:/usr/include/c++/6/bits/stl_tree.h ****       iterator
 812:/usr/include/c++/6/bits/stl_tree.h ****       _M_upper_bound(_Link_type __x, _Base_ptr __y,
 813:/usr/include/c++/6/bits/stl_tree.h **** 		     const _Key& __k);
 814:/usr/include/c++/6/bits/stl_tree.h **** 
 815:/usr/include/c++/6/bits/stl_tree.h ****       const_iterator
 816:/usr/include/c++/6/bits/stl_tree.h ****       _M_upper_bound(_Const_Link_type __x, _Const_Base_ptr __y,
 817:/usr/include/c++/6/bits/stl_tree.h **** 		     const _Key& __k) const;
 818:/usr/include/c++/6/bits/stl_tree.h **** 
 819:/usr/include/c++/6/bits/stl_tree.h ****     public:
 820:/usr/include/c++/6/bits/stl_tree.h ****       // allocation/deallocation
GAS LISTING /tmp/ccsIN87E.s 			page 378


 821:/usr/include/c++/6/bits/stl_tree.h ****       _Rb_tree() { }
 822:/usr/include/c++/6/bits/stl_tree.h **** 
 823:/usr/include/c++/6/bits/stl_tree.h ****       _Rb_tree(const _Compare& __comp,
 824:/usr/include/c++/6/bits/stl_tree.h **** 	       const allocator_type& __a = allocator_type())
 825:/usr/include/c++/6/bits/stl_tree.h ****       : _M_impl(__comp, _Node_allocator(__a)) { }
 826:/usr/include/c++/6/bits/stl_tree.h **** 
 827:/usr/include/c++/6/bits/stl_tree.h ****       _Rb_tree(const _Rb_tree& __x)
 828:/usr/include/c++/6/bits/stl_tree.h ****       : _M_impl(__x._M_impl._M_key_compare,
 829:/usr/include/c++/6/bits/stl_tree.h **** 	        _Alloc_traits::_S_select_on_copy(__x._M_get_Node_allocator()))
 830:/usr/include/c++/6/bits/stl_tree.h ****       {
 831:/usr/include/c++/6/bits/stl_tree.h **** 	if (__x._M_root() != 0)
 832:/usr/include/c++/6/bits/stl_tree.h **** 	  {
 833:/usr/include/c++/6/bits/stl_tree.h **** 	    _M_root() = _M_copy(__x._M_begin(), _M_end());
 834:/usr/include/c++/6/bits/stl_tree.h **** 	    _M_leftmost() = _S_minimum(_M_root());
 835:/usr/include/c++/6/bits/stl_tree.h **** 	    _M_rightmost() = _S_maximum(_M_root());
 836:/usr/include/c++/6/bits/stl_tree.h **** 	    _M_impl._M_node_count = __x._M_impl._M_node_count;
 837:/usr/include/c++/6/bits/stl_tree.h **** 	  }
 838:/usr/include/c++/6/bits/stl_tree.h ****       }
 839:/usr/include/c++/6/bits/stl_tree.h **** 
 840:/usr/include/c++/6/bits/stl_tree.h **** #if __cplusplus >= 201103L
 841:/usr/include/c++/6/bits/stl_tree.h ****       _Rb_tree(const allocator_type& __a)
 842:/usr/include/c++/6/bits/stl_tree.h ****       : _M_impl(_Compare(), _Node_allocator(__a))
 843:/usr/include/c++/6/bits/stl_tree.h ****       { }
 844:/usr/include/c++/6/bits/stl_tree.h **** 
 845:/usr/include/c++/6/bits/stl_tree.h ****       _Rb_tree(const _Rb_tree& __x, const allocator_type& __a)
 846:/usr/include/c++/6/bits/stl_tree.h ****       : _M_impl(__x._M_impl._M_key_compare, _Node_allocator(__a))
 847:/usr/include/c++/6/bits/stl_tree.h ****       {
 848:/usr/include/c++/6/bits/stl_tree.h **** 	if (__x._M_root() != nullptr)
 849:/usr/include/c++/6/bits/stl_tree.h **** 	  {
 850:/usr/include/c++/6/bits/stl_tree.h **** 	    _M_root() = _M_copy(__x._M_begin(), _M_end());
 851:/usr/include/c++/6/bits/stl_tree.h **** 	    _M_leftmost() = _S_minimum(_M_root());
 852:/usr/include/c++/6/bits/stl_tree.h **** 	    _M_rightmost() = _S_maximum(_M_root());
 853:/usr/include/c++/6/bits/stl_tree.h **** 	    _M_impl._M_node_count = __x._M_impl._M_node_count;
 854:/usr/include/c++/6/bits/stl_tree.h **** 	  }
 855:/usr/include/c++/6/bits/stl_tree.h ****       }
 856:/usr/include/c++/6/bits/stl_tree.h **** 
 857:/usr/include/c++/6/bits/stl_tree.h ****       _Rb_tree(_Rb_tree&& __x)
 858:/usr/include/c++/6/bits/stl_tree.h ****       : _M_impl(__x._M_impl._M_key_compare,
 859:/usr/include/c++/6/bits/stl_tree.h **** 		std::move(__x._M_get_Node_allocator()))
 860:/usr/include/c++/6/bits/stl_tree.h ****       {
 861:/usr/include/c++/6/bits/stl_tree.h **** 	if (__x._M_root() != 0)
 862:/usr/include/c++/6/bits/stl_tree.h **** 	  _M_move_data(__x, std::true_type());
 863:/usr/include/c++/6/bits/stl_tree.h ****       }
 864:/usr/include/c++/6/bits/stl_tree.h **** 
 865:/usr/include/c++/6/bits/stl_tree.h ****       _Rb_tree(_Rb_tree&& __x, const allocator_type& __a)
 866:/usr/include/c++/6/bits/stl_tree.h ****       : _Rb_tree(std::move(__x), _Node_allocator(__a))
 867:/usr/include/c++/6/bits/stl_tree.h ****       { }
 868:/usr/include/c++/6/bits/stl_tree.h **** 
 869:/usr/include/c++/6/bits/stl_tree.h ****       _Rb_tree(_Rb_tree&& __x, _Node_allocator&& __a);
 870:/usr/include/c++/6/bits/stl_tree.h **** #endif
 871:/usr/include/c++/6/bits/stl_tree.h **** 
 872:/usr/include/c++/6/bits/stl_tree.h ****       ~_Rb_tree() _GLIBCXX_NOEXCEPT
 873:/usr/include/c++/6/bits/stl_tree.h ****       { _M_erase(_M_begin()); }
 874:/usr/include/c++/6/bits/stl_tree.h **** 
 875:/usr/include/c++/6/bits/stl_tree.h ****       _Rb_tree&
 876:/usr/include/c++/6/bits/stl_tree.h ****       operator=(const _Rb_tree& __x);
 877:/usr/include/c++/6/bits/stl_tree.h **** 
GAS LISTING /tmp/ccsIN87E.s 			page 379


 878:/usr/include/c++/6/bits/stl_tree.h ****       // Accessors.
 879:/usr/include/c++/6/bits/stl_tree.h ****       _Compare
 880:/usr/include/c++/6/bits/stl_tree.h ****       key_comp() const
 881:/usr/include/c++/6/bits/stl_tree.h ****       { return _M_impl._M_key_compare; }
 882:/usr/include/c++/6/bits/stl_tree.h **** 
 883:/usr/include/c++/6/bits/stl_tree.h ****       iterator
 884:/usr/include/c++/6/bits/stl_tree.h ****       begin() _GLIBCXX_NOEXCEPT
 885:/usr/include/c++/6/bits/stl_tree.h ****       { return iterator(this->_M_impl._M_header._M_left); }
 886:/usr/include/c++/6/bits/stl_tree.h **** 
 887:/usr/include/c++/6/bits/stl_tree.h ****       const_iterator
 888:/usr/include/c++/6/bits/stl_tree.h ****       begin() const _GLIBCXX_NOEXCEPT
 889:/usr/include/c++/6/bits/stl_tree.h ****       { return const_iterator(this->_M_impl._M_header._M_left); }
 890:/usr/include/c++/6/bits/stl_tree.h **** 
 891:/usr/include/c++/6/bits/stl_tree.h ****       iterator
 892:/usr/include/c++/6/bits/stl_tree.h ****       end() _GLIBCXX_NOEXCEPT
 893:/usr/include/c++/6/bits/stl_tree.h ****       { return iterator(&this->_M_impl._M_header); }
 894:/usr/include/c++/6/bits/stl_tree.h **** 
 895:/usr/include/c++/6/bits/stl_tree.h ****       const_iterator
 896:/usr/include/c++/6/bits/stl_tree.h ****       end() const _GLIBCXX_NOEXCEPT
 897:/usr/include/c++/6/bits/stl_tree.h ****       { return const_iterator(&this->_M_impl._M_header); }
 898:/usr/include/c++/6/bits/stl_tree.h **** 
 899:/usr/include/c++/6/bits/stl_tree.h ****       reverse_iterator
 900:/usr/include/c++/6/bits/stl_tree.h ****       rbegin() _GLIBCXX_NOEXCEPT
 901:/usr/include/c++/6/bits/stl_tree.h ****       { return reverse_iterator(end()); }
 902:/usr/include/c++/6/bits/stl_tree.h **** 
 903:/usr/include/c++/6/bits/stl_tree.h ****       const_reverse_iterator
 904:/usr/include/c++/6/bits/stl_tree.h ****       rbegin() const _GLIBCXX_NOEXCEPT
 905:/usr/include/c++/6/bits/stl_tree.h ****       { return const_reverse_iterator(end()); }
 906:/usr/include/c++/6/bits/stl_tree.h **** 
 907:/usr/include/c++/6/bits/stl_tree.h ****       reverse_iterator
 908:/usr/include/c++/6/bits/stl_tree.h ****       rend() _GLIBCXX_NOEXCEPT
 909:/usr/include/c++/6/bits/stl_tree.h ****       { return reverse_iterator(begin()); }
 910:/usr/include/c++/6/bits/stl_tree.h **** 
 911:/usr/include/c++/6/bits/stl_tree.h ****       const_reverse_iterator
 912:/usr/include/c++/6/bits/stl_tree.h ****       rend() const _GLIBCXX_NOEXCEPT
 913:/usr/include/c++/6/bits/stl_tree.h ****       { return const_reverse_iterator(begin()); }
 914:/usr/include/c++/6/bits/stl_tree.h **** 
 915:/usr/include/c++/6/bits/stl_tree.h ****       bool
 916:/usr/include/c++/6/bits/stl_tree.h ****       empty() const _GLIBCXX_NOEXCEPT
 917:/usr/include/c++/6/bits/stl_tree.h ****       { return _M_impl._M_node_count == 0; }
 918:/usr/include/c++/6/bits/stl_tree.h **** 
 919:/usr/include/c++/6/bits/stl_tree.h ****       size_type
 920:/usr/include/c++/6/bits/stl_tree.h ****       size() const _GLIBCXX_NOEXCEPT 
 921:/usr/include/c++/6/bits/stl_tree.h ****       { return _M_impl._M_node_count; }
 922:/usr/include/c++/6/bits/stl_tree.h **** 
 923:/usr/include/c++/6/bits/stl_tree.h ****       size_type
 924:/usr/include/c++/6/bits/stl_tree.h ****       max_size() const _GLIBCXX_NOEXCEPT
 925:/usr/include/c++/6/bits/stl_tree.h ****       { return _Alloc_traits::max_size(_M_get_Node_allocator()); }
 926:/usr/include/c++/6/bits/stl_tree.h **** 
 927:/usr/include/c++/6/bits/stl_tree.h ****       void
 928:/usr/include/c++/6/bits/stl_tree.h ****       swap(_Rb_tree& __t)
 929:/usr/include/c++/6/bits/stl_tree.h ****       _GLIBCXX_NOEXCEPT_IF(__is_nothrow_swappable<_Compare>::value);
 930:/usr/include/c++/6/bits/stl_tree.h **** 
 931:/usr/include/c++/6/bits/stl_tree.h ****       // Insert/erase.
 932:/usr/include/c++/6/bits/stl_tree.h **** #if __cplusplus >= 201103L
 933:/usr/include/c++/6/bits/stl_tree.h ****       template<typename _Arg>
 934:/usr/include/c++/6/bits/stl_tree.h ****         pair<iterator, bool>
GAS LISTING /tmp/ccsIN87E.s 			page 380


 935:/usr/include/c++/6/bits/stl_tree.h ****         _M_insert_unique(_Arg&& __x);
 936:/usr/include/c++/6/bits/stl_tree.h **** 
 937:/usr/include/c++/6/bits/stl_tree.h ****       template<typename _Arg>
 938:/usr/include/c++/6/bits/stl_tree.h ****         iterator
 939:/usr/include/c++/6/bits/stl_tree.h ****         _M_insert_equal(_Arg&& __x);
 940:/usr/include/c++/6/bits/stl_tree.h **** 
 941:/usr/include/c++/6/bits/stl_tree.h ****       template<typename _Arg, typename _NodeGen>
 942:/usr/include/c++/6/bits/stl_tree.h ****         iterator
 943:/usr/include/c++/6/bits/stl_tree.h **** 	_M_insert_unique_(const_iterator __pos, _Arg&& __x, _NodeGen&);
 944:/usr/include/c++/6/bits/stl_tree.h **** 
 945:/usr/include/c++/6/bits/stl_tree.h ****       template<typename _Arg>
 946:/usr/include/c++/6/bits/stl_tree.h **** 	iterator
 947:/usr/include/c++/6/bits/stl_tree.h **** 	_M_insert_unique_(const_iterator __pos, _Arg&& __x)
 948:/usr/include/c++/6/bits/stl_tree.h **** 	{
 949:/usr/include/c++/6/bits/stl_tree.h **** 	  _Alloc_node __an(*this);
 950:/usr/include/c++/6/bits/stl_tree.h **** 	  return _M_insert_unique_(__pos, std::forward<_Arg>(__x), __an);
 951:/usr/include/c++/6/bits/stl_tree.h **** 	}
 952:/usr/include/c++/6/bits/stl_tree.h **** 
 953:/usr/include/c++/6/bits/stl_tree.h ****       template<typename _Arg, typename _NodeGen>
 954:/usr/include/c++/6/bits/stl_tree.h **** 	iterator
 955:/usr/include/c++/6/bits/stl_tree.h **** 	_M_insert_equal_(const_iterator __pos, _Arg&& __x, _NodeGen&);
 956:/usr/include/c++/6/bits/stl_tree.h **** 
 957:/usr/include/c++/6/bits/stl_tree.h ****       template<typename _Arg>
 958:/usr/include/c++/6/bits/stl_tree.h **** 	iterator
 959:/usr/include/c++/6/bits/stl_tree.h **** 	_M_insert_equal_(const_iterator __pos, _Arg&& __x)
 960:/usr/include/c++/6/bits/stl_tree.h **** 	{
 961:/usr/include/c++/6/bits/stl_tree.h **** 	  _Alloc_node __an(*this);
 962:/usr/include/c++/6/bits/stl_tree.h **** 	  return _M_insert_equal_(__pos, std::forward<_Arg>(__x), __an);
 963:/usr/include/c++/6/bits/stl_tree.h **** 	}
 964:/usr/include/c++/6/bits/stl_tree.h **** 
 965:/usr/include/c++/6/bits/stl_tree.h ****       template<typename... _Args>
 966:/usr/include/c++/6/bits/stl_tree.h **** 	pair<iterator, bool>
 967:/usr/include/c++/6/bits/stl_tree.h **** 	_M_emplace_unique(_Args&&... __args);
 968:/usr/include/c++/6/bits/stl_tree.h **** 
 969:/usr/include/c++/6/bits/stl_tree.h ****       template<typename... _Args>
 970:/usr/include/c++/6/bits/stl_tree.h **** 	iterator
 971:/usr/include/c++/6/bits/stl_tree.h **** 	_M_emplace_equal(_Args&&... __args);
 972:/usr/include/c++/6/bits/stl_tree.h **** 
 973:/usr/include/c++/6/bits/stl_tree.h ****       template<typename... _Args>
 974:/usr/include/c++/6/bits/stl_tree.h **** 	iterator
 975:/usr/include/c++/6/bits/stl_tree.h **** 	_M_emplace_hint_unique(const_iterator __pos, _Args&&... __args);
 976:/usr/include/c++/6/bits/stl_tree.h **** 
 977:/usr/include/c++/6/bits/stl_tree.h ****       template<typename... _Args>
 978:/usr/include/c++/6/bits/stl_tree.h **** 	iterator
 979:/usr/include/c++/6/bits/stl_tree.h **** 	_M_emplace_hint_equal(const_iterator __pos, _Args&&... __args);
 980:/usr/include/c++/6/bits/stl_tree.h **** #else
 981:/usr/include/c++/6/bits/stl_tree.h ****       pair<iterator, bool>
 982:/usr/include/c++/6/bits/stl_tree.h ****       _M_insert_unique(const value_type& __x);
 983:/usr/include/c++/6/bits/stl_tree.h **** 
 984:/usr/include/c++/6/bits/stl_tree.h ****       iterator
 985:/usr/include/c++/6/bits/stl_tree.h ****       _M_insert_equal(const value_type& __x);
 986:/usr/include/c++/6/bits/stl_tree.h **** 
 987:/usr/include/c++/6/bits/stl_tree.h ****       template<typename _NodeGen>
 988:/usr/include/c++/6/bits/stl_tree.h **** 	iterator
 989:/usr/include/c++/6/bits/stl_tree.h **** 	_M_insert_unique_(const_iterator __pos, const value_type& __x,
 990:/usr/include/c++/6/bits/stl_tree.h **** 			  _NodeGen&);
 991:/usr/include/c++/6/bits/stl_tree.h **** 
GAS LISTING /tmp/ccsIN87E.s 			page 381


 992:/usr/include/c++/6/bits/stl_tree.h ****       iterator
 993:/usr/include/c++/6/bits/stl_tree.h ****       _M_insert_unique_(const_iterator __pos, const value_type& __x)
 994:/usr/include/c++/6/bits/stl_tree.h ****       {
 995:/usr/include/c++/6/bits/stl_tree.h **** 	_Alloc_node __an(*this);
 996:/usr/include/c++/6/bits/stl_tree.h **** 	return _M_insert_unique_(__pos, __x, __an);
 997:/usr/include/c++/6/bits/stl_tree.h ****       }
 998:/usr/include/c++/6/bits/stl_tree.h **** 
 999:/usr/include/c++/6/bits/stl_tree.h ****       template<typename _NodeGen>
1000:/usr/include/c++/6/bits/stl_tree.h **** 	iterator
1001:/usr/include/c++/6/bits/stl_tree.h **** 	_M_insert_equal_(const_iterator __pos, const value_type& __x,
1002:/usr/include/c++/6/bits/stl_tree.h **** 			 _NodeGen&);
1003:/usr/include/c++/6/bits/stl_tree.h ****       iterator
1004:/usr/include/c++/6/bits/stl_tree.h ****       _M_insert_equal_(const_iterator __pos, const value_type& __x)
1005:/usr/include/c++/6/bits/stl_tree.h ****       {
1006:/usr/include/c++/6/bits/stl_tree.h **** 	_Alloc_node __an(*this);
1007:/usr/include/c++/6/bits/stl_tree.h **** 	return _M_insert_equal_(__pos, __x, __an);
1008:/usr/include/c++/6/bits/stl_tree.h ****       }
1009:/usr/include/c++/6/bits/stl_tree.h **** #endif
1010:/usr/include/c++/6/bits/stl_tree.h **** 
1011:/usr/include/c++/6/bits/stl_tree.h ****       template<typename _InputIterator>
1012:/usr/include/c++/6/bits/stl_tree.h ****         void
1013:/usr/include/c++/6/bits/stl_tree.h ****         _M_insert_unique(_InputIterator __first, _InputIterator __last);
1014:/usr/include/c++/6/bits/stl_tree.h **** 
1015:/usr/include/c++/6/bits/stl_tree.h ****       template<typename _InputIterator>
1016:/usr/include/c++/6/bits/stl_tree.h ****         void
1017:/usr/include/c++/6/bits/stl_tree.h ****         _M_insert_equal(_InputIterator __first, _InputIterator __last);
1018:/usr/include/c++/6/bits/stl_tree.h **** 
1019:/usr/include/c++/6/bits/stl_tree.h ****     private:
1020:/usr/include/c++/6/bits/stl_tree.h ****       void
1021:/usr/include/c++/6/bits/stl_tree.h ****       _M_erase_aux(const_iterator __position);
1022:/usr/include/c++/6/bits/stl_tree.h **** 
1023:/usr/include/c++/6/bits/stl_tree.h ****       void
1024:/usr/include/c++/6/bits/stl_tree.h ****       _M_erase_aux(const_iterator __first, const_iterator __last);
1025:/usr/include/c++/6/bits/stl_tree.h **** 
1026:/usr/include/c++/6/bits/stl_tree.h ****     public:
1027:/usr/include/c++/6/bits/stl_tree.h **** #if __cplusplus >= 201103L
1028:/usr/include/c++/6/bits/stl_tree.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
1029:/usr/include/c++/6/bits/stl_tree.h ****       // DR 130. Associative erase should return an iterator.
1030:/usr/include/c++/6/bits/stl_tree.h ****       _GLIBCXX_ABI_TAG_CXX11
1031:/usr/include/c++/6/bits/stl_tree.h ****       iterator
1032:/usr/include/c++/6/bits/stl_tree.h ****       erase(const_iterator __position)
1033:/usr/include/c++/6/bits/stl_tree.h ****       {
1034:/usr/include/c++/6/bits/stl_tree.h **** 	const_iterator __result = __position;
1035:/usr/include/c++/6/bits/stl_tree.h **** 	++__result;
1036:/usr/include/c++/6/bits/stl_tree.h **** 	_M_erase_aux(__position);
1037:/usr/include/c++/6/bits/stl_tree.h **** 	return __result._M_const_cast();
1038:/usr/include/c++/6/bits/stl_tree.h ****       }
1039:/usr/include/c++/6/bits/stl_tree.h **** 
1040:/usr/include/c++/6/bits/stl_tree.h ****       // LWG 2059.
1041:/usr/include/c++/6/bits/stl_tree.h ****       _GLIBCXX_ABI_TAG_CXX11
1042:/usr/include/c++/6/bits/stl_tree.h ****       iterator
1043:/usr/include/c++/6/bits/stl_tree.h ****       erase(iterator __position)
1044:/usr/include/c++/6/bits/stl_tree.h ****       {
1045:/usr/include/c++/6/bits/stl_tree.h **** 	iterator __result = __position;
1046:/usr/include/c++/6/bits/stl_tree.h **** 	++__result;
1047:/usr/include/c++/6/bits/stl_tree.h **** 	_M_erase_aux(__position);
1048:/usr/include/c++/6/bits/stl_tree.h **** 	return __result;
GAS LISTING /tmp/ccsIN87E.s 			page 382


1049:/usr/include/c++/6/bits/stl_tree.h ****       }
1050:/usr/include/c++/6/bits/stl_tree.h **** #else
1051:/usr/include/c++/6/bits/stl_tree.h ****       void
1052:/usr/include/c++/6/bits/stl_tree.h ****       erase(iterator __position)
1053:/usr/include/c++/6/bits/stl_tree.h ****       { _M_erase_aux(__position); }
1054:/usr/include/c++/6/bits/stl_tree.h **** 
1055:/usr/include/c++/6/bits/stl_tree.h ****       void
1056:/usr/include/c++/6/bits/stl_tree.h ****       erase(const_iterator __position)
1057:/usr/include/c++/6/bits/stl_tree.h ****       { _M_erase_aux(__position); }
1058:/usr/include/c++/6/bits/stl_tree.h **** #endif
1059:/usr/include/c++/6/bits/stl_tree.h ****       size_type
1060:/usr/include/c++/6/bits/stl_tree.h ****       erase(const key_type& __x);
1061:/usr/include/c++/6/bits/stl_tree.h **** 
1062:/usr/include/c++/6/bits/stl_tree.h **** #if __cplusplus >= 201103L
1063:/usr/include/c++/6/bits/stl_tree.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
1064:/usr/include/c++/6/bits/stl_tree.h ****       // DR 130. Associative erase should return an iterator.
1065:/usr/include/c++/6/bits/stl_tree.h ****       _GLIBCXX_ABI_TAG_CXX11
1066:/usr/include/c++/6/bits/stl_tree.h ****       iterator
1067:/usr/include/c++/6/bits/stl_tree.h ****       erase(const_iterator __first, const_iterator __last)
1068:/usr/include/c++/6/bits/stl_tree.h ****       {
1069:/usr/include/c++/6/bits/stl_tree.h **** 	_M_erase_aux(__first, __last);
1070:/usr/include/c++/6/bits/stl_tree.h **** 	return __last._M_const_cast();
1071:/usr/include/c++/6/bits/stl_tree.h ****       }
1072:/usr/include/c++/6/bits/stl_tree.h **** #else
1073:/usr/include/c++/6/bits/stl_tree.h ****       void
1074:/usr/include/c++/6/bits/stl_tree.h ****       erase(iterator __first, iterator __last)
1075:/usr/include/c++/6/bits/stl_tree.h ****       { _M_erase_aux(__first, __last); }
1076:/usr/include/c++/6/bits/stl_tree.h **** 
1077:/usr/include/c++/6/bits/stl_tree.h ****       void
1078:/usr/include/c++/6/bits/stl_tree.h ****       erase(const_iterator __first, const_iterator __last)
1079:/usr/include/c++/6/bits/stl_tree.h ****       { _M_erase_aux(__first, __last); }
1080:/usr/include/c++/6/bits/stl_tree.h **** #endif
1081:/usr/include/c++/6/bits/stl_tree.h ****       void
1082:/usr/include/c++/6/bits/stl_tree.h ****       erase(const key_type* __first, const key_type* __last);
1083:/usr/include/c++/6/bits/stl_tree.h **** 
1084:/usr/include/c++/6/bits/stl_tree.h ****       void
1085:/usr/include/c++/6/bits/stl_tree.h ****       clear() _GLIBCXX_NOEXCEPT
1086:/usr/include/c++/6/bits/stl_tree.h ****       {
1087:/usr/include/c++/6/bits/stl_tree.h ****         _M_erase(_M_begin());
1088:/usr/include/c++/6/bits/stl_tree.h **** 	_M_impl._M_reset();
1089:/usr/include/c++/6/bits/stl_tree.h ****       }
1090:/usr/include/c++/6/bits/stl_tree.h **** 
1091:/usr/include/c++/6/bits/stl_tree.h ****       // Set operations.
1092:/usr/include/c++/6/bits/stl_tree.h ****       iterator
1093:/usr/include/c++/6/bits/stl_tree.h ****       find(const key_type& __k);
1094:/usr/include/c++/6/bits/stl_tree.h **** 
1095:/usr/include/c++/6/bits/stl_tree.h ****       const_iterator
1096:/usr/include/c++/6/bits/stl_tree.h ****       find(const key_type& __k) const;
1097:/usr/include/c++/6/bits/stl_tree.h **** 
1098:/usr/include/c++/6/bits/stl_tree.h ****       size_type
1099:/usr/include/c++/6/bits/stl_tree.h ****       count(const key_type& __k) const;
1100:/usr/include/c++/6/bits/stl_tree.h **** 
1101:/usr/include/c++/6/bits/stl_tree.h ****       iterator
1102:/usr/include/c++/6/bits/stl_tree.h ****       lower_bound(const key_type& __k)
1103:/usr/include/c++/6/bits/stl_tree.h ****       { return _M_lower_bound(_M_begin(), _M_end(), __k); }
1104:/usr/include/c++/6/bits/stl_tree.h **** 
1105:/usr/include/c++/6/bits/stl_tree.h ****       const_iterator
GAS LISTING /tmp/ccsIN87E.s 			page 383


1106:/usr/include/c++/6/bits/stl_tree.h ****       lower_bound(const key_type& __k) const
1107:/usr/include/c++/6/bits/stl_tree.h ****       { return _M_lower_bound(_M_begin(), _M_end(), __k); }
1108:/usr/include/c++/6/bits/stl_tree.h **** 
1109:/usr/include/c++/6/bits/stl_tree.h ****       iterator
1110:/usr/include/c++/6/bits/stl_tree.h ****       upper_bound(const key_type& __k)
1111:/usr/include/c++/6/bits/stl_tree.h ****       { return _M_upper_bound(_M_begin(), _M_end(), __k); }
1112:/usr/include/c++/6/bits/stl_tree.h **** 
1113:/usr/include/c++/6/bits/stl_tree.h ****       const_iterator
1114:/usr/include/c++/6/bits/stl_tree.h ****       upper_bound(const key_type& __k) const
1115:/usr/include/c++/6/bits/stl_tree.h ****       { return _M_upper_bound(_M_begin(), _M_end(), __k); }
1116:/usr/include/c++/6/bits/stl_tree.h **** 
1117:/usr/include/c++/6/bits/stl_tree.h ****       pair<iterator, iterator>
1118:/usr/include/c++/6/bits/stl_tree.h ****       equal_range(const key_type& __k);
1119:/usr/include/c++/6/bits/stl_tree.h **** 
1120:/usr/include/c++/6/bits/stl_tree.h ****       pair<const_iterator, const_iterator>
1121:/usr/include/c++/6/bits/stl_tree.h ****       equal_range(const key_type& __k) const;
1122:/usr/include/c++/6/bits/stl_tree.h **** 
1123:/usr/include/c++/6/bits/stl_tree.h **** #if __cplusplus > 201103L
1124:/usr/include/c++/6/bits/stl_tree.h ****       template<typename _Kt,
1125:/usr/include/c++/6/bits/stl_tree.h **** 	       typename _Req =
1126:/usr/include/c++/6/bits/stl_tree.h **** 		 typename __has_is_transparent<_Compare, _Kt>::type>
1127:/usr/include/c++/6/bits/stl_tree.h **** 	iterator
1128:/usr/include/c++/6/bits/stl_tree.h **** 	_M_find_tr(const _Kt& __k)
1129:/usr/include/c++/6/bits/stl_tree.h **** 	{
1130:/usr/include/c++/6/bits/stl_tree.h **** 	  const _Rb_tree* __const_this = this;
1131:/usr/include/c++/6/bits/stl_tree.h **** 	  return __const_this->_M_find_tr(__k)._M_const_cast();
1132:/usr/include/c++/6/bits/stl_tree.h **** 	}
1133:/usr/include/c++/6/bits/stl_tree.h **** 
1134:/usr/include/c++/6/bits/stl_tree.h ****       template<typename _Kt,
1135:/usr/include/c++/6/bits/stl_tree.h **** 	       typename _Req =
1136:/usr/include/c++/6/bits/stl_tree.h **** 		 typename __has_is_transparent<_Compare, _Kt>::type>
1137:/usr/include/c++/6/bits/stl_tree.h **** 	const_iterator
1138:/usr/include/c++/6/bits/stl_tree.h **** 	_M_find_tr(const _Kt& __k) const
1139:/usr/include/c++/6/bits/stl_tree.h **** 	{
1140:/usr/include/c++/6/bits/stl_tree.h **** 	  auto __j = _M_lower_bound_tr(__k);
1141:/usr/include/c++/6/bits/stl_tree.h **** 	  if (__j != end() && _M_impl._M_key_compare(__k, _S_key(__j._M_node)))
1142:/usr/include/c++/6/bits/stl_tree.h **** 	    __j = end();
1143:/usr/include/c++/6/bits/stl_tree.h **** 	  return __j;
1144:/usr/include/c++/6/bits/stl_tree.h **** 	}
1145:/usr/include/c++/6/bits/stl_tree.h **** 
1146:/usr/include/c++/6/bits/stl_tree.h ****       template<typename _Kt,
1147:/usr/include/c++/6/bits/stl_tree.h **** 	       typename _Req =
1148:/usr/include/c++/6/bits/stl_tree.h **** 		 typename __has_is_transparent<_Compare, _Kt>::type>
1149:/usr/include/c++/6/bits/stl_tree.h **** 	size_type
1150:/usr/include/c++/6/bits/stl_tree.h **** 	_M_count_tr(const _Kt& __k) const
1151:/usr/include/c++/6/bits/stl_tree.h **** 	{
1152:/usr/include/c++/6/bits/stl_tree.h **** 	  auto __p = _M_equal_range_tr(__k);
1153:/usr/include/c++/6/bits/stl_tree.h **** 	  return std::distance(__p.first, __p.second);
1154:/usr/include/c++/6/bits/stl_tree.h **** 	}
1155:/usr/include/c++/6/bits/stl_tree.h **** 
1156:/usr/include/c++/6/bits/stl_tree.h ****       template<typename _Kt,
1157:/usr/include/c++/6/bits/stl_tree.h **** 	       typename _Req =
1158:/usr/include/c++/6/bits/stl_tree.h **** 		 typename __has_is_transparent<_Compare, _Kt>::type>
1159:/usr/include/c++/6/bits/stl_tree.h **** 	iterator
1160:/usr/include/c++/6/bits/stl_tree.h **** 	_M_lower_bound_tr(const _Kt& __k)
1161:/usr/include/c++/6/bits/stl_tree.h **** 	{
1162:/usr/include/c++/6/bits/stl_tree.h **** 	  const _Rb_tree* __const_this = this;
GAS LISTING /tmp/ccsIN87E.s 			page 384


1163:/usr/include/c++/6/bits/stl_tree.h **** 	  return __const_this->_M_lower_bound_tr(__k)._M_const_cast();
1164:/usr/include/c++/6/bits/stl_tree.h **** 	}
1165:/usr/include/c++/6/bits/stl_tree.h **** 
1166:/usr/include/c++/6/bits/stl_tree.h ****       template<typename _Kt,
1167:/usr/include/c++/6/bits/stl_tree.h **** 	       typename _Req =
1168:/usr/include/c++/6/bits/stl_tree.h **** 		 typename __has_is_transparent<_Compare, _Kt>::type>
1169:/usr/include/c++/6/bits/stl_tree.h **** 	const_iterator
1170:/usr/include/c++/6/bits/stl_tree.h **** 	_M_lower_bound_tr(const _Kt& __k) const
1171:/usr/include/c++/6/bits/stl_tree.h **** 	{
1172:/usr/include/c++/6/bits/stl_tree.h **** 	  auto __x = _M_begin();
1173:/usr/include/c++/6/bits/stl_tree.h **** 	  auto __y = _M_end();
1174:/usr/include/c++/6/bits/stl_tree.h **** 	  while (__x != 0)
1175:/usr/include/c++/6/bits/stl_tree.h **** 	    if (!_M_impl._M_key_compare(_S_key(__x), __k))
1176:/usr/include/c++/6/bits/stl_tree.h **** 	      {
1177:/usr/include/c++/6/bits/stl_tree.h **** 		__y = __x;
1178:/usr/include/c++/6/bits/stl_tree.h **** 		__x = _S_left(__x);
1179:/usr/include/c++/6/bits/stl_tree.h **** 	      }
1180:/usr/include/c++/6/bits/stl_tree.h **** 	    else
1181:/usr/include/c++/6/bits/stl_tree.h **** 	      __x = _S_right(__x);
1182:/usr/include/c++/6/bits/stl_tree.h **** 	  return const_iterator(__y);
1183:/usr/include/c++/6/bits/stl_tree.h **** 	}
1184:/usr/include/c++/6/bits/stl_tree.h **** 
1185:/usr/include/c++/6/bits/stl_tree.h ****       template<typename _Kt,
1186:/usr/include/c++/6/bits/stl_tree.h **** 	       typename _Req =
1187:/usr/include/c++/6/bits/stl_tree.h **** 		 typename __has_is_transparent<_Compare, _Kt>::type>
1188:/usr/include/c++/6/bits/stl_tree.h **** 	iterator
1189:/usr/include/c++/6/bits/stl_tree.h **** 	_M_upper_bound_tr(const _Kt& __k)
1190:/usr/include/c++/6/bits/stl_tree.h **** 	{
1191:/usr/include/c++/6/bits/stl_tree.h **** 	  const _Rb_tree* __const_this = this;
1192:/usr/include/c++/6/bits/stl_tree.h **** 	  return __const_this->_M_upper_bound_tr(__k)._M_const_cast();
1193:/usr/include/c++/6/bits/stl_tree.h **** 	}
1194:/usr/include/c++/6/bits/stl_tree.h **** 
1195:/usr/include/c++/6/bits/stl_tree.h ****       template<typename _Kt,
1196:/usr/include/c++/6/bits/stl_tree.h **** 	       typename _Req =
1197:/usr/include/c++/6/bits/stl_tree.h **** 		 typename __has_is_transparent<_Compare, _Kt>::type>
1198:/usr/include/c++/6/bits/stl_tree.h **** 	const_iterator
1199:/usr/include/c++/6/bits/stl_tree.h **** 	_M_upper_bound_tr(const _Kt& __k) const
1200:/usr/include/c++/6/bits/stl_tree.h **** 	{
1201:/usr/include/c++/6/bits/stl_tree.h **** 	  auto __x = _M_begin();
1202:/usr/include/c++/6/bits/stl_tree.h **** 	  auto __y = _M_end();
1203:/usr/include/c++/6/bits/stl_tree.h **** 	  while (__x != 0)
1204:/usr/include/c++/6/bits/stl_tree.h **** 	    if (_M_impl._M_key_compare(__k, _S_key(__x)))
1205:/usr/include/c++/6/bits/stl_tree.h **** 	      {
1206:/usr/include/c++/6/bits/stl_tree.h **** 		__y = __x;
1207:/usr/include/c++/6/bits/stl_tree.h **** 		__x = _S_left(__x);
1208:/usr/include/c++/6/bits/stl_tree.h **** 	      }
1209:/usr/include/c++/6/bits/stl_tree.h **** 	    else
1210:/usr/include/c++/6/bits/stl_tree.h **** 	      __x = _S_right(__x);
1211:/usr/include/c++/6/bits/stl_tree.h **** 	  return const_iterator(__y);
1212:/usr/include/c++/6/bits/stl_tree.h **** 	}
1213:/usr/include/c++/6/bits/stl_tree.h **** 
1214:/usr/include/c++/6/bits/stl_tree.h ****       template<typename _Kt,
1215:/usr/include/c++/6/bits/stl_tree.h **** 	       typename _Req =
1216:/usr/include/c++/6/bits/stl_tree.h **** 		 typename __has_is_transparent<_Compare, _Kt>::type>
1217:/usr/include/c++/6/bits/stl_tree.h **** 	pair<iterator, iterator>
1218:/usr/include/c++/6/bits/stl_tree.h **** 	_M_equal_range_tr(const _Kt& __k)
1219:/usr/include/c++/6/bits/stl_tree.h **** 	{
GAS LISTING /tmp/ccsIN87E.s 			page 385


1220:/usr/include/c++/6/bits/stl_tree.h **** 	  const _Rb_tree* __const_this = this;
1221:/usr/include/c++/6/bits/stl_tree.h **** 	  auto __ret = __const_this->_M_equal_range_tr(__k);
1222:/usr/include/c++/6/bits/stl_tree.h **** 	  return { __ret.first._M_const_cast(), __ret.second._M_const_cast() };
1223:/usr/include/c++/6/bits/stl_tree.h **** 	}
1224:/usr/include/c++/6/bits/stl_tree.h **** 
1225:/usr/include/c++/6/bits/stl_tree.h ****       template<typename _Kt,
1226:/usr/include/c++/6/bits/stl_tree.h **** 	       typename _Req =
1227:/usr/include/c++/6/bits/stl_tree.h **** 		 typename __has_is_transparent<_Compare, _Kt>::type>
1228:/usr/include/c++/6/bits/stl_tree.h **** 	pair<const_iterator, const_iterator>
1229:/usr/include/c++/6/bits/stl_tree.h **** 	_M_equal_range_tr(const _Kt& __k) const
1230:/usr/include/c++/6/bits/stl_tree.h **** 	{
1231:/usr/include/c++/6/bits/stl_tree.h **** 	  auto __low = _M_lower_bound_tr(__k);
1232:/usr/include/c++/6/bits/stl_tree.h **** 	  auto __high = __low;
1233:/usr/include/c++/6/bits/stl_tree.h **** 	  auto& __cmp = _M_impl._M_key_compare;
1234:/usr/include/c++/6/bits/stl_tree.h **** 	  while (__high != end() && !__cmp(__k, _S_key(__high._M_node)))
1235:/usr/include/c++/6/bits/stl_tree.h **** 	    ++__high;
1236:/usr/include/c++/6/bits/stl_tree.h **** 	  return { __low, __high };
1237:/usr/include/c++/6/bits/stl_tree.h **** 	}
1238:/usr/include/c++/6/bits/stl_tree.h **** #endif
1239:/usr/include/c++/6/bits/stl_tree.h **** 
1240:/usr/include/c++/6/bits/stl_tree.h ****       // Debugging.
1241:/usr/include/c++/6/bits/stl_tree.h ****       bool
1242:/usr/include/c++/6/bits/stl_tree.h ****       __rb_verify() const;
1243:/usr/include/c++/6/bits/stl_tree.h **** 
1244:/usr/include/c++/6/bits/stl_tree.h **** #if __cplusplus >= 201103L
1245:/usr/include/c++/6/bits/stl_tree.h ****       _Rb_tree&
1246:/usr/include/c++/6/bits/stl_tree.h ****       operator=(_Rb_tree&&)
1247:/usr/include/c++/6/bits/stl_tree.h ****       noexcept(_Alloc_traits::_S_nothrow_move()
1248:/usr/include/c++/6/bits/stl_tree.h **** 	       && is_nothrow_move_assignable<_Compare>::value);
1249:/usr/include/c++/6/bits/stl_tree.h **** 
1250:/usr/include/c++/6/bits/stl_tree.h ****       template<typename _Iterator>
1251:/usr/include/c++/6/bits/stl_tree.h **** 	void
1252:/usr/include/c++/6/bits/stl_tree.h **** 	_M_assign_unique(_Iterator, _Iterator);
1253:/usr/include/c++/6/bits/stl_tree.h **** 
1254:/usr/include/c++/6/bits/stl_tree.h ****       template<typename _Iterator>
1255:/usr/include/c++/6/bits/stl_tree.h **** 	void
1256:/usr/include/c++/6/bits/stl_tree.h **** 	_M_assign_equal(_Iterator, _Iterator);
1257:/usr/include/c++/6/bits/stl_tree.h **** 
1258:/usr/include/c++/6/bits/stl_tree.h ****     private:
1259:/usr/include/c++/6/bits/stl_tree.h ****       // Move elements from container with equal allocator.
1260:/usr/include/c++/6/bits/stl_tree.h ****       void
1261:/usr/include/c++/6/bits/stl_tree.h ****       _M_move_data(_Rb_tree&, std::true_type);
1262:/usr/include/c++/6/bits/stl_tree.h **** 
1263:/usr/include/c++/6/bits/stl_tree.h ****       // Move elements from container with possibly non-equal allocator,
1264:/usr/include/c++/6/bits/stl_tree.h ****       // which might result in a copy not a move.
1265:/usr/include/c++/6/bits/stl_tree.h ****       void
1266:/usr/include/c++/6/bits/stl_tree.h ****       _M_move_data(_Rb_tree&, std::false_type);
1267:/usr/include/c++/6/bits/stl_tree.h **** 
1268:/usr/include/c++/6/bits/stl_tree.h ****       // Move assignment from container with equal allocator.
1269:/usr/include/c++/6/bits/stl_tree.h ****       void
1270:/usr/include/c++/6/bits/stl_tree.h ****       _M_move_assign(_Rb_tree&, std::true_type);
1271:/usr/include/c++/6/bits/stl_tree.h **** 
1272:/usr/include/c++/6/bits/stl_tree.h ****       // Move assignment from container with possibly non-equal allocator,
1273:/usr/include/c++/6/bits/stl_tree.h ****       // which might result in a copy not a move.
1274:/usr/include/c++/6/bits/stl_tree.h ****       void
1275:/usr/include/c++/6/bits/stl_tree.h ****       _M_move_assign(_Rb_tree&, std::false_type);
1276:/usr/include/c++/6/bits/stl_tree.h **** #endif
GAS LISTING /tmp/ccsIN87E.s 			page 386


1277:/usr/include/c++/6/bits/stl_tree.h ****     };
1278:/usr/include/c++/6/bits/stl_tree.h **** 
1279:/usr/include/c++/6/bits/stl_tree.h ****   template<typename _Key, typename _Val, typename _KeyOfValue,
1280:/usr/include/c++/6/bits/stl_tree.h ****            typename _Compare, typename _Alloc>
1281:/usr/include/c++/6/bits/stl_tree.h ****     inline bool
1282:/usr/include/c++/6/bits/stl_tree.h ****     operator==(const _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>& __x,
1283:/usr/include/c++/6/bits/stl_tree.h **** 	       const _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>& __y)
1284:/usr/include/c++/6/bits/stl_tree.h ****     {
1285:/usr/include/c++/6/bits/stl_tree.h ****       return __x.size() == __y.size()
1286:/usr/include/c++/6/bits/stl_tree.h **** 	     && std::equal(__x.begin(), __x.end(), __y.begin());
1287:/usr/include/c++/6/bits/stl_tree.h ****     }
1288:/usr/include/c++/6/bits/stl_tree.h **** 
1289:/usr/include/c++/6/bits/stl_tree.h ****   template<typename _Key, typename _Val, typename _KeyOfValue,
1290:/usr/include/c++/6/bits/stl_tree.h ****            typename _Compare, typename _Alloc>
1291:/usr/include/c++/6/bits/stl_tree.h ****     inline bool
1292:/usr/include/c++/6/bits/stl_tree.h ****     operator<(const _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>& __x,
1293:/usr/include/c++/6/bits/stl_tree.h **** 	      const _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>& __y)
1294:/usr/include/c++/6/bits/stl_tree.h ****     {
1295:/usr/include/c++/6/bits/stl_tree.h ****       return std::lexicographical_compare(__x.begin(), __x.end(), 
1296:/usr/include/c++/6/bits/stl_tree.h **** 					  __y.begin(), __y.end());
1297:/usr/include/c++/6/bits/stl_tree.h ****     }
1298:/usr/include/c++/6/bits/stl_tree.h **** 
1299:/usr/include/c++/6/bits/stl_tree.h ****   template<typename _Key, typename _Val, typename _KeyOfValue,
1300:/usr/include/c++/6/bits/stl_tree.h ****            typename _Compare, typename _Alloc>
1301:/usr/include/c++/6/bits/stl_tree.h ****     inline bool
1302:/usr/include/c++/6/bits/stl_tree.h ****     operator!=(const _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>& __x,
1303:/usr/include/c++/6/bits/stl_tree.h **** 	       const _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>& __y)
1304:/usr/include/c++/6/bits/stl_tree.h ****     { return !(__x == __y); }
1305:/usr/include/c++/6/bits/stl_tree.h **** 
1306:/usr/include/c++/6/bits/stl_tree.h ****   template<typename _Key, typename _Val, typename _KeyOfValue,
1307:/usr/include/c++/6/bits/stl_tree.h ****            typename _Compare, typename _Alloc>
1308:/usr/include/c++/6/bits/stl_tree.h ****     inline bool
1309:/usr/include/c++/6/bits/stl_tree.h ****     operator>(const _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>& __x,
1310:/usr/include/c++/6/bits/stl_tree.h **** 	      const _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>& __y)
1311:/usr/include/c++/6/bits/stl_tree.h ****     { return __y < __x; }
1312:/usr/include/c++/6/bits/stl_tree.h **** 
1313:/usr/include/c++/6/bits/stl_tree.h ****   template<typename _Key, typename _Val, typename _KeyOfValue,
1314:/usr/include/c++/6/bits/stl_tree.h ****            typename _Compare, typename _Alloc>
1315:/usr/include/c++/6/bits/stl_tree.h ****     inline bool
1316:/usr/include/c++/6/bits/stl_tree.h ****     operator<=(const _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>& __x,
1317:/usr/include/c++/6/bits/stl_tree.h **** 	       const _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>& __y)
1318:/usr/include/c++/6/bits/stl_tree.h ****     { return !(__y < __x); }
1319:/usr/include/c++/6/bits/stl_tree.h **** 
1320:/usr/include/c++/6/bits/stl_tree.h ****   template<typename _Key, typename _Val, typename _KeyOfValue,
1321:/usr/include/c++/6/bits/stl_tree.h ****            typename _Compare, typename _Alloc>
1322:/usr/include/c++/6/bits/stl_tree.h ****     inline bool
1323:/usr/include/c++/6/bits/stl_tree.h ****     operator>=(const _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>& __x,
1324:/usr/include/c++/6/bits/stl_tree.h **** 	       const _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>& __y)
1325:/usr/include/c++/6/bits/stl_tree.h ****     { return !(__x < __y); }
1326:/usr/include/c++/6/bits/stl_tree.h **** 
1327:/usr/include/c++/6/bits/stl_tree.h ****   template<typename _Key, typename _Val, typename _KeyOfValue,
1328:/usr/include/c++/6/bits/stl_tree.h ****            typename _Compare, typename _Alloc>
1329:/usr/include/c++/6/bits/stl_tree.h ****     inline void
1330:/usr/include/c++/6/bits/stl_tree.h ****     swap(_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>& __x,
1331:/usr/include/c++/6/bits/stl_tree.h **** 	 _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>& __y)
1332:/usr/include/c++/6/bits/stl_tree.h ****     { __x.swap(__y); }
1333:/usr/include/c++/6/bits/stl_tree.h **** 
GAS LISTING /tmp/ccsIN87E.s 			page 387


1334:/usr/include/c++/6/bits/stl_tree.h **** #if __cplusplus >= 201103L
1335:/usr/include/c++/6/bits/stl_tree.h ****   template<typename _Key, typename _Val, typename _KeyOfValue,
1336:/usr/include/c++/6/bits/stl_tree.h ****            typename _Compare, typename _Alloc>
1337:/usr/include/c++/6/bits/stl_tree.h ****     _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
1338:/usr/include/c++/6/bits/stl_tree.h ****     _Rb_tree(_Rb_tree&& __x, _Node_allocator&& __a)
1339:/usr/include/c++/6/bits/stl_tree.h ****     : _M_impl(__x._M_impl._M_key_compare, std::move(__a))
1340:/usr/include/c++/6/bits/stl_tree.h ****     {
1341:/usr/include/c++/6/bits/stl_tree.h ****       using __eq = typename _Alloc_traits::is_always_equal;
1342:/usr/include/c++/6/bits/stl_tree.h ****       if (__x._M_root() != nullptr)
1343:/usr/include/c++/6/bits/stl_tree.h **** 	_M_move_data(__x, __eq());
1344:/usr/include/c++/6/bits/stl_tree.h ****     }
1345:/usr/include/c++/6/bits/stl_tree.h **** 
1346:/usr/include/c++/6/bits/stl_tree.h ****   template<typename _Key, typename _Val, typename _KeyOfValue,
1347:/usr/include/c++/6/bits/stl_tree.h ****            typename _Compare, typename _Alloc>
1348:/usr/include/c++/6/bits/stl_tree.h ****     void
1349:/usr/include/c++/6/bits/stl_tree.h ****     _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
1350:/usr/include/c++/6/bits/stl_tree.h ****     _M_move_data(_Rb_tree& __x, std::true_type)
1351:/usr/include/c++/6/bits/stl_tree.h ****     {
1352:/usr/include/c++/6/bits/stl_tree.h ****       _M_root() = __x._M_root();
1353:/usr/include/c++/6/bits/stl_tree.h ****       _M_leftmost() = __x._M_leftmost();
1354:/usr/include/c++/6/bits/stl_tree.h ****       _M_rightmost() = __x._M_rightmost();
1355:/usr/include/c++/6/bits/stl_tree.h ****       _M_root()->_M_parent = _M_end();
1356:/usr/include/c++/6/bits/stl_tree.h **** 
1357:/usr/include/c++/6/bits/stl_tree.h ****       __x._M_root() = 0;
1358:/usr/include/c++/6/bits/stl_tree.h ****       __x._M_leftmost() = __x._M_end();
1359:/usr/include/c++/6/bits/stl_tree.h ****       __x._M_rightmost() = __x._M_end();
1360:/usr/include/c++/6/bits/stl_tree.h **** 
1361:/usr/include/c++/6/bits/stl_tree.h ****       this->_M_impl._M_node_count = __x._M_impl._M_node_count;
1362:/usr/include/c++/6/bits/stl_tree.h ****       __x._M_impl._M_node_count = 0;
1363:/usr/include/c++/6/bits/stl_tree.h ****     }
1364:/usr/include/c++/6/bits/stl_tree.h **** 
1365:/usr/include/c++/6/bits/stl_tree.h ****   template<typename _Key, typename _Val, typename _KeyOfValue,
1366:/usr/include/c++/6/bits/stl_tree.h ****            typename _Compare, typename _Alloc>
1367:/usr/include/c++/6/bits/stl_tree.h ****     void
1368:/usr/include/c++/6/bits/stl_tree.h ****     _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
1369:/usr/include/c++/6/bits/stl_tree.h ****     _M_move_data(_Rb_tree& __x, std::false_type)
1370:/usr/include/c++/6/bits/stl_tree.h ****     {
1371:/usr/include/c++/6/bits/stl_tree.h ****       if (_M_get_Node_allocator() == __x._M_get_Node_allocator())
1372:/usr/include/c++/6/bits/stl_tree.h **** 	  _M_move_data(__x, std::true_type());
1373:/usr/include/c++/6/bits/stl_tree.h ****       else
1374:/usr/include/c++/6/bits/stl_tree.h **** 	{
1375:/usr/include/c++/6/bits/stl_tree.h **** 	  _Alloc_node __an(*this);
1376:/usr/include/c++/6/bits/stl_tree.h **** 	  auto __lbd =
1377:/usr/include/c++/6/bits/stl_tree.h **** 	    [&__an](const value_type& __cval)
1378:/usr/include/c++/6/bits/stl_tree.h **** 	    {
1379:/usr/include/c++/6/bits/stl_tree.h **** 	      auto& __val = const_cast<value_type&>(__cval);
1380:/usr/include/c++/6/bits/stl_tree.h **** 	      return __an(std::move_if_noexcept(__val));
1381:/usr/include/c++/6/bits/stl_tree.h **** 	    };
1382:/usr/include/c++/6/bits/stl_tree.h **** 	  _M_root() = _M_copy(__x._M_begin(), _M_end(), __lbd);
1383:/usr/include/c++/6/bits/stl_tree.h **** 	  _M_leftmost() = _S_minimum(_M_root());
1384:/usr/include/c++/6/bits/stl_tree.h **** 	  _M_rightmost() = _S_maximum(_M_root());
1385:/usr/include/c++/6/bits/stl_tree.h **** 	  _M_impl._M_node_count = __x._M_impl._M_node_count;
1386:/usr/include/c++/6/bits/stl_tree.h **** 	}
1387:/usr/include/c++/6/bits/stl_tree.h ****     }
1388:/usr/include/c++/6/bits/stl_tree.h **** 
1389:/usr/include/c++/6/bits/stl_tree.h ****   template<typename _Key, typename _Val, typename _KeyOfValue,
1390:/usr/include/c++/6/bits/stl_tree.h ****            typename _Compare, typename _Alloc>
GAS LISTING /tmp/ccsIN87E.s 			page 388


1391:/usr/include/c++/6/bits/stl_tree.h ****     inline void
1392:/usr/include/c++/6/bits/stl_tree.h ****     _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
1393:/usr/include/c++/6/bits/stl_tree.h ****     _M_move_assign(_Rb_tree& __x, true_type)
1394:/usr/include/c++/6/bits/stl_tree.h ****     {
1395:/usr/include/c++/6/bits/stl_tree.h ****       clear();
1396:/usr/include/c++/6/bits/stl_tree.h ****       if (__x._M_root() != nullptr)
1397:/usr/include/c++/6/bits/stl_tree.h **** 	_M_move_data(__x, std::true_type());
1398:/usr/include/c++/6/bits/stl_tree.h ****       std::__alloc_on_move(_M_get_Node_allocator(),
1399:/usr/include/c++/6/bits/stl_tree.h **** 			   __x._M_get_Node_allocator());
1400:/usr/include/c++/6/bits/stl_tree.h ****     }
1401:/usr/include/c++/6/bits/stl_tree.h **** 
1402:/usr/include/c++/6/bits/stl_tree.h ****   template<typename _Key, typename _Val, typename _KeyOfValue,
1403:/usr/include/c++/6/bits/stl_tree.h ****            typename _Compare, typename _Alloc>
1404:/usr/include/c++/6/bits/stl_tree.h ****     void
1405:/usr/include/c++/6/bits/stl_tree.h ****     _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
1406:/usr/include/c++/6/bits/stl_tree.h ****     _M_move_assign(_Rb_tree& __x, false_type)
1407:/usr/include/c++/6/bits/stl_tree.h ****     {
1408:/usr/include/c++/6/bits/stl_tree.h ****       if (_M_get_Node_allocator() == __x._M_get_Node_allocator())
1409:/usr/include/c++/6/bits/stl_tree.h **** 	return _M_move_assign(__x, true_type{});
1410:/usr/include/c++/6/bits/stl_tree.h **** 
1411:/usr/include/c++/6/bits/stl_tree.h ****       // Try to move each node reusing existing nodes and copying __x nodes
1412:/usr/include/c++/6/bits/stl_tree.h ****       // structure.
1413:/usr/include/c++/6/bits/stl_tree.h ****       _Reuse_or_alloc_node __roan(*this);
1414:/usr/include/c++/6/bits/stl_tree.h ****       _M_impl._M_reset();
1415:/usr/include/c++/6/bits/stl_tree.h ****       if (__x._M_root() != nullptr)
1416:/usr/include/c++/6/bits/stl_tree.h **** 	{
1417:/usr/include/c++/6/bits/stl_tree.h **** 	  auto __lbd =
1418:/usr/include/c++/6/bits/stl_tree.h **** 	    [&__roan](const value_type& __cval)
1419:/usr/include/c++/6/bits/stl_tree.h **** 	    {
1420:/usr/include/c++/6/bits/stl_tree.h **** 	      auto& __val = const_cast<value_type&>(__cval);
1421:/usr/include/c++/6/bits/stl_tree.h **** 	      return __roan(std::move_if_noexcept(__val));
1422:/usr/include/c++/6/bits/stl_tree.h **** 	    };
1423:/usr/include/c++/6/bits/stl_tree.h **** 	  _M_root() = _M_copy(__x._M_begin(), _M_end(), __lbd);
1424:/usr/include/c++/6/bits/stl_tree.h **** 	  _M_leftmost() = _S_minimum(_M_root());
1425:/usr/include/c++/6/bits/stl_tree.h **** 	  _M_rightmost() = _S_maximum(_M_root());
1426:/usr/include/c++/6/bits/stl_tree.h **** 	  _M_impl._M_node_count = __x._M_impl._M_node_count;
1427:/usr/include/c++/6/bits/stl_tree.h **** 	  __x.clear();
1428:/usr/include/c++/6/bits/stl_tree.h **** 	}
1429:/usr/include/c++/6/bits/stl_tree.h ****     }
1430:/usr/include/c++/6/bits/stl_tree.h **** 
1431:/usr/include/c++/6/bits/stl_tree.h ****   template<typename _Key, typename _Val, typename _KeyOfValue,
1432:/usr/include/c++/6/bits/stl_tree.h ****            typename _Compare, typename _Alloc>
1433:/usr/include/c++/6/bits/stl_tree.h ****     inline _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>&
1434:/usr/include/c++/6/bits/stl_tree.h ****     _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
1435:/usr/include/c++/6/bits/stl_tree.h ****     operator=(_Rb_tree&& __x)
1436:/usr/include/c++/6/bits/stl_tree.h ****     noexcept(_Alloc_traits::_S_nothrow_move()
1437:/usr/include/c++/6/bits/stl_tree.h **** 	     && is_nothrow_move_assignable<_Compare>::value)
1438:/usr/include/c++/6/bits/stl_tree.h ****     {
1439:/usr/include/c++/6/bits/stl_tree.h ****       _M_impl._M_key_compare = __x._M_impl._M_key_compare;
1440:/usr/include/c++/6/bits/stl_tree.h ****       constexpr bool __move_storage =
1441:/usr/include/c++/6/bits/stl_tree.h **** 	  _Alloc_traits::_S_propagate_on_move_assign()
1442:/usr/include/c++/6/bits/stl_tree.h **** 	  || _Alloc_traits::_S_always_equal();
1443:/usr/include/c++/6/bits/stl_tree.h ****       _M_move_assign(__x, __bool_constant<__move_storage>());
1444:/usr/include/c++/6/bits/stl_tree.h ****       return *this;
1445:/usr/include/c++/6/bits/stl_tree.h ****     }
1446:/usr/include/c++/6/bits/stl_tree.h **** 
1447:/usr/include/c++/6/bits/stl_tree.h ****   template<typename _Key, typename _Val, typename _KeyOfValue,
GAS LISTING /tmp/ccsIN87E.s 			page 389


1448:/usr/include/c++/6/bits/stl_tree.h ****            typename _Compare, typename _Alloc>
1449:/usr/include/c++/6/bits/stl_tree.h ****     template<typename _Iterator>
1450:/usr/include/c++/6/bits/stl_tree.h ****       void
1451:/usr/include/c++/6/bits/stl_tree.h ****       _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
1452:/usr/include/c++/6/bits/stl_tree.h ****       _M_assign_unique(_Iterator __first, _Iterator __last)
1453:/usr/include/c++/6/bits/stl_tree.h ****       {
1454:/usr/include/c++/6/bits/stl_tree.h **** 	_Reuse_or_alloc_node __roan(*this);
1455:/usr/include/c++/6/bits/stl_tree.h **** 	_M_impl._M_reset();
1456:/usr/include/c++/6/bits/stl_tree.h **** 	for (; __first != __last; ++__first)
1457:/usr/include/c++/6/bits/stl_tree.h **** 	  _M_insert_unique_(end(), *__first, __roan);
1458:/usr/include/c++/6/bits/stl_tree.h ****       }
1459:/usr/include/c++/6/bits/stl_tree.h **** 
1460:/usr/include/c++/6/bits/stl_tree.h ****   template<typename _Key, typename _Val, typename _KeyOfValue,
1461:/usr/include/c++/6/bits/stl_tree.h ****            typename _Compare, typename _Alloc>
1462:/usr/include/c++/6/bits/stl_tree.h ****     template<typename _Iterator>
1463:/usr/include/c++/6/bits/stl_tree.h ****       void
1464:/usr/include/c++/6/bits/stl_tree.h ****       _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
1465:/usr/include/c++/6/bits/stl_tree.h ****       _M_assign_equal(_Iterator __first, _Iterator __last)
1466:/usr/include/c++/6/bits/stl_tree.h ****       {
1467:/usr/include/c++/6/bits/stl_tree.h **** 	_Reuse_or_alloc_node __roan(*this);
1468:/usr/include/c++/6/bits/stl_tree.h **** 	_M_impl._M_reset();
1469:/usr/include/c++/6/bits/stl_tree.h **** 	for (; __first != __last; ++__first)
1470:/usr/include/c++/6/bits/stl_tree.h **** 	  _M_insert_equal_(end(), *__first, __roan);
1471:/usr/include/c++/6/bits/stl_tree.h ****       }
1472:/usr/include/c++/6/bits/stl_tree.h **** #endif
1473:/usr/include/c++/6/bits/stl_tree.h **** 
1474:/usr/include/c++/6/bits/stl_tree.h ****   template<typename _Key, typename _Val, typename _KeyOfValue,
1475:/usr/include/c++/6/bits/stl_tree.h ****            typename _Compare, typename _Alloc>
1476:/usr/include/c++/6/bits/stl_tree.h ****     _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>&
1477:/usr/include/c++/6/bits/stl_tree.h ****     _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
1478:/usr/include/c++/6/bits/stl_tree.h ****     operator=(const _Rb_tree& __x)
1479:/usr/include/c++/6/bits/stl_tree.h ****     {
1480:/usr/include/c++/6/bits/stl_tree.h ****       if (this != &__x)
1481:/usr/include/c++/6/bits/stl_tree.h **** 	{
1482:/usr/include/c++/6/bits/stl_tree.h **** 	  // Note that _Key may be a constant type.
1483:/usr/include/c++/6/bits/stl_tree.h **** #if __cplusplus >= 201103L
1484:/usr/include/c++/6/bits/stl_tree.h **** 	  if (_Alloc_traits::_S_propagate_on_copy_assign())
1485:/usr/include/c++/6/bits/stl_tree.h **** 	    {
1486:/usr/include/c++/6/bits/stl_tree.h **** 	      auto& __this_alloc = this->_M_get_Node_allocator();
1487:/usr/include/c++/6/bits/stl_tree.h **** 	      auto& __that_alloc = __x._M_get_Node_allocator();
1488:/usr/include/c++/6/bits/stl_tree.h **** 	      if (!_Alloc_traits::_S_always_equal()
1489:/usr/include/c++/6/bits/stl_tree.h **** 		  && __this_alloc != __that_alloc)
1490:/usr/include/c++/6/bits/stl_tree.h **** 		{
1491:/usr/include/c++/6/bits/stl_tree.h **** 		  // Replacement allocator cannot free existing storage, we need
1492:/usr/include/c++/6/bits/stl_tree.h **** 		  // to erase nodes first.
1493:/usr/include/c++/6/bits/stl_tree.h **** 		  clear();
1494:/usr/include/c++/6/bits/stl_tree.h **** 		  std::__alloc_on_copy(__this_alloc, __that_alloc);
1495:/usr/include/c++/6/bits/stl_tree.h **** 		}
1496:/usr/include/c++/6/bits/stl_tree.h **** 	    }
1497:/usr/include/c++/6/bits/stl_tree.h **** #endif
1498:/usr/include/c++/6/bits/stl_tree.h **** 
1499:/usr/include/c++/6/bits/stl_tree.h **** 	  _Reuse_or_alloc_node __roan(*this);
1500:/usr/include/c++/6/bits/stl_tree.h **** 	  _M_impl._M_reset();
1501:/usr/include/c++/6/bits/stl_tree.h **** 	  _M_impl._M_key_compare = __x._M_impl._M_key_compare;
1502:/usr/include/c++/6/bits/stl_tree.h **** 	  if (__x._M_root() != 0)
1503:/usr/include/c++/6/bits/stl_tree.h **** 	    {
1504:/usr/include/c++/6/bits/stl_tree.h **** 	      _M_root() = _M_copy(__x._M_begin(), _M_end(), __roan);
GAS LISTING /tmp/ccsIN87E.s 			page 390


1505:/usr/include/c++/6/bits/stl_tree.h **** 	      _M_leftmost() = _S_minimum(_M_root());
1506:/usr/include/c++/6/bits/stl_tree.h **** 	      _M_rightmost() = _S_maximum(_M_root());
1507:/usr/include/c++/6/bits/stl_tree.h **** 	      _M_impl._M_node_count = __x._M_impl._M_node_count;
1508:/usr/include/c++/6/bits/stl_tree.h **** 	    }
1509:/usr/include/c++/6/bits/stl_tree.h **** 	}
1510:/usr/include/c++/6/bits/stl_tree.h **** 
1511:/usr/include/c++/6/bits/stl_tree.h ****       return *this;
1512:/usr/include/c++/6/bits/stl_tree.h ****     }
1513:/usr/include/c++/6/bits/stl_tree.h **** 
1514:/usr/include/c++/6/bits/stl_tree.h ****   template<typename _Key, typename _Val, typename _KeyOfValue,
1515:/usr/include/c++/6/bits/stl_tree.h ****            typename _Compare, typename _Alloc>
1516:/usr/include/c++/6/bits/stl_tree.h **** #if __cplusplus >= 201103L
1517:/usr/include/c++/6/bits/stl_tree.h ****     template<typename _Arg, typename _NodeGen>
1518:/usr/include/c++/6/bits/stl_tree.h **** #else
1519:/usr/include/c++/6/bits/stl_tree.h ****     template<typename _NodeGen>
1520:/usr/include/c++/6/bits/stl_tree.h **** #endif
1521:/usr/include/c++/6/bits/stl_tree.h ****       typename _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::iterator
1522:/usr/include/c++/6/bits/stl_tree.h ****       _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
1523:/usr/include/c++/6/bits/stl_tree.h ****       _M_insert_(_Base_ptr __x, _Base_ptr __p,
1524:/usr/include/c++/6/bits/stl_tree.h **** #if __cplusplus >= 201103L
1525:/usr/include/c++/6/bits/stl_tree.h **** 		 _Arg&& __v,
1526:/usr/include/c++/6/bits/stl_tree.h **** #else
1527:/usr/include/c++/6/bits/stl_tree.h **** 		 const _Val& __v,
1528:/usr/include/c++/6/bits/stl_tree.h **** #endif
1529:/usr/include/c++/6/bits/stl_tree.h **** 		 _NodeGen& __node_gen)
1530:/usr/include/c++/6/bits/stl_tree.h ****       {
1531:/usr/include/c++/6/bits/stl_tree.h **** 	bool __insert_left = (__x != 0 || __p == _M_end()
1532:/usr/include/c++/6/bits/stl_tree.h **** 			      || _M_impl._M_key_compare(_KeyOfValue()(__v),
1533:/usr/include/c++/6/bits/stl_tree.h **** 							_S_key(__p)));
1534:/usr/include/c++/6/bits/stl_tree.h **** 
1535:/usr/include/c++/6/bits/stl_tree.h **** 	_Link_type __z = __node_gen(_GLIBCXX_FORWARD(_Arg, __v));
1536:/usr/include/c++/6/bits/stl_tree.h **** 
1537:/usr/include/c++/6/bits/stl_tree.h **** 	_Rb_tree_insert_and_rebalance(__insert_left, __z, __p,
1538:/usr/include/c++/6/bits/stl_tree.h **** 				      this->_M_impl._M_header);
1539:/usr/include/c++/6/bits/stl_tree.h **** 	++_M_impl._M_node_count;
1540:/usr/include/c++/6/bits/stl_tree.h **** 	return iterator(__z);
1541:/usr/include/c++/6/bits/stl_tree.h ****       }
1542:/usr/include/c++/6/bits/stl_tree.h **** 
1543:/usr/include/c++/6/bits/stl_tree.h ****   template<typename _Key, typename _Val, typename _KeyOfValue,
1544:/usr/include/c++/6/bits/stl_tree.h ****            typename _Compare, typename _Alloc>
1545:/usr/include/c++/6/bits/stl_tree.h **** #if __cplusplus >= 201103L
1546:/usr/include/c++/6/bits/stl_tree.h ****     template<typename _Arg>
1547:/usr/include/c++/6/bits/stl_tree.h **** #endif
1548:/usr/include/c++/6/bits/stl_tree.h ****     typename _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::iterator
1549:/usr/include/c++/6/bits/stl_tree.h ****     _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
1550:/usr/include/c++/6/bits/stl_tree.h **** #if __cplusplus >= 201103L
1551:/usr/include/c++/6/bits/stl_tree.h ****     _M_insert_lower(_Base_ptr __p, _Arg&& __v)
1552:/usr/include/c++/6/bits/stl_tree.h **** #else
1553:/usr/include/c++/6/bits/stl_tree.h ****     _M_insert_lower(_Base_ptr __p, const _Val& __v)
1554:/usr/include/c++/6/bits/stl_tree.h **** #endif
1555:/usr/include/c++/6/bits/stl_tree.h ****     {
1556:/usr/include/c++/6/bits/stl_tree.h ****       bool __insert_left = (__p == _M_end()
1557:/usr/include/c++/6/bits/stl_tree.h **** 			    || !_M_impl._M_key_compare(_S_key(__p),
1558:/usr/include/c++/6/bits/stl_tree.h **** 						       _KeyOfValue()(__v)));
1559:/usr/include/c++/6/bits/stl_tree.h **** 
1560:/usr/include/c++/6/bits/stl_tree.h ****       _Link_type __z = _M_create_node(_GLIBCXX_FORWARD(_Arg, __v));
1561:/usr/include/c++/6/bits/stl_tree.h **** 
GAS LISTING /tmp/ccsIN87E.s 			page 391


1562:/usr/include/c++/6/bits/stl_tree.h ****       _Rb_tree_insert_and_rebalance(__insert_left, __z, __p,
1563:/usr/include/c++/6/bits/stl_tree.h **** 				    this->_M_impl._M_header);
1564:/usr/include/c++/6/bits/stl_tree.h ****       ++_M_impl._M_node_count;
1565:/usr/include/c++/6/bits/stl_tree.h ****       return iterator(__z);
1566:/usr/include/c++/6/bits/stl_tree.h ****     }
1567:/usr/include/c++/6/bits/stl_tree.h **** 
1568:/usr/include/c++/6/bits/stl_tree.h ****   template<typename _Key, typename _Val, typename _KeyOfValue,
1569:/usr/include/c++/6/bits/stl_tree.h ****            typename _Compare, typename _Alloc>
1570:/usr/include/c++/6/bits/stl_tree.h **** #if __cplusplus >= 201103L
1571:/usr/include/c++/6/bits/stl_tree.h ****     template<typename _Arg>
1572:/usr/include/c++/6/bits/stl_tree.h **** #endif
1573:/usr/include/c++/6/bits/stl_tree.h ****     typename _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::iterator
1574:/usr/include/c++/6/bits/stl_tree.h ****     _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
1575:/usr/include/c++/6/bits/stl_tree.h **** #if __cplusplus >= 201103L
1576:/usr/include/c++/6/bits/stl_tree.h ****     _M_insert_equal_lower(_Arg&& __v)
1577:/usr/include/c++/6/bits/stl_tree.h **** #else
1578:/usr/include/c++/6/bits/stl_tree.h ****     _M_insert_equal_lower(const _Val& __v)
1579:/usr/include/c++/6/bits/stl_tree.h **** #endif
1580:/usr/include/c++/6/bits/stl_tree.h ****     {
1581:/usr/include/c++/6/bits/stl_tree.h ****       _Link_type __x = _M_begin();
1582:/usr/include/c++/6/bits/stl_tree.h ****       _Base_ptr __y = _M_end();
1583:/usr/include/c++/6/bits/stl_tree.h ****       while (__x != 0)
1584:/usr/include/c++/6/bits/stl_tree.h **** 	{
1585:/usr/include/c++/6/bits/stl_tree.h **** 	  __y = __x;
1586:/usr/include/c++/6/bits/stl_tree.h **** 	  __x = !_M_impl._M_key_compare(_S_key(__x), _KeyOfValue()(__v)) ?
1587:/usr/include/c++/6/bits/stl_tree.h **** 	        _S_left(__x) : _S_right(__x);
1588:/usr/include/c++/6/bits/stl_tree.h **** 	}
1589:/usr/include/c++/6/bits/stl_tree.h ****       return _M_insert_lower(__y, _GLIBCXX_FORWARD(_Arg, __v));
1590:/usr/include/c++/6/bits/stl_tree.h ****     }
1591:/usr/include/c++/6/bits/stl_tree.h **** 
1592:/usr/include/c++/6/bits/stl_tree.h ****   template<typename _Key, typename _Val, typename _KoV,
1593:/usr/include/c++/6/bits/stl_tree.h **** 	   typename _Compare, typename _Alloc>
1594:/usr/include/c++/6/bits/stl_tree.h ****     template<typename _NodeGen>
1595:/usr/include/c++/6/bits/stl_tree.h ****       typename _Rb_tree<_Key, _Val, _KoV, _Compare, _Alloc>::_Link_type
1596:/usr/include/c++/6/bits/stl_tree.h ****       _Rb_tree<_Key, _Val, _KoV, _Compare, _Alloc>::
1597:/usr/include/c++/6/bits/stl_tree.h ****       _M_copy(_Const_Link_type __x, _Base_ptr __p, _NodeGen& __node_gen)
1598:/usr/include/c++/6/bits/stl_tree.h ****       {
1599:/usr/include/c++/6/bits/stl_tree.h **** 	// Structural copy. __x and __p must be non-null.
1600:/usr/include/c++/6/bits/stl_tree.h **** 	_Link_type __top = _M_clone_node(__x, __node_gen);
1601:/usr/include/c++/6/bits/stl_tree.h **** 	__top->_M_parent = __p;
1602:/usr/include/c++/6/bits/stl_tree.h **** 
1603:/usr/include/c++/6/bits/stl_tree.h **** 	__try
1604:/usr/include/c++/6/bits/stl_tree.h **** 	  {
1605:/usr/include/c++/6/bits/stl_tree.h **** 	    if (__x->_M_right)
1606:/usr/include/c++/6/bits/stl_tree.h **** 	      __top->_M_right = _M_copy(_S_right(__x), __top, __node_gen);
1607:/usr/include/c++/6/bits/stl_tree.h **** 	    __p = __top;
1608:/usr/include/c++/6/bits/stl_tree.h **** 	    __x = _S_left(__x);
1609:/usr/include/c++/6/bits/stl_tree.h **** 
1610:/usr/include/c++/6/bits/stl_tree.h **** 	    while (__x != 0)
1611:/usr/include/c++/6/bits/stl_tree.h **** 	      {
1612:/usr/include/c++/6/bits/stl_tree.h **** 		_Link_type __y = _M_clone_node(__x, __node_gen);
1613:/usr/include/c++/6/bits/stl_tree.h **** 		__p->_M_left = __y;
1614:/usr/include/c++/6/bits/stl_tree.h **** 		__y->_M_parent = __p;
1615:/usr/include/c++/6/bits/stl_tree.h **** 		if (__x->_M_right)
1616:/usr/include/c++/6/bits/stl_tree.h **** 		  __y->_M_right = _M_copy(_S_right(__x), __y, __node_gen);
1617:/usr/include/c++/6/bits/stl_tree.h **** 		__p = __y;
1618:/usr/include/c++/6/bits/stl_tree.h **** 		__x = _S_left(__x);
GAS LISTING /tmp/ccsIN87E.s 			page 392


1619:/usr/include/c++/6/bits/stl_tree.h **** 	      }
1620:/usr/include/c++/6/bits/stl_tree.h **** 	  }
1621:/usr/include/c++/6/bits/stl_tree.h **** 	__catch(...)
1622:/usr/include/c++/6/bits/stl_tree.h **** 	  {
1623:/usr/include/c++/6/bits/stl_tree.h **** 	    _M_erase(__top);
1624:/usr/include/c++/6/bits/stl_tree.h **** 	    __throw_exception_again;
1625:/usr/include/c++/6/bits/stl_tree.h **** 	  }
1626:/usr/include/c++/6/bits/stl_tree.h **** 	return __top;
1627:/usr/include/c++/6/bits/stl_tree.h ****       }
1628:/usr/include/c++/6/bits/stl_tree.h **** 
1629:/usr/include/c++/6/bits/stl_tree.h ****   template<typename _Key, typename _Val, typename _KeyOfValue,
1630:/usr/include/c++/6/bits/stl_tree.h ****            typename _Compare, typename _Alloc>
1631:/usr/include/c++/6/bits/stl_tree.h ****     void
1632:/usr/include/c++/6/bits/stl_tree.h ****     _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
1633:/usr/include/c++/6/bits/stl_tree.h ****     _M_erase(_Link_type __x)
1634:/usr/include/c++/6/bits/stl_tree.h ****     {
1635:/usr/include/c++/6/bits/stl_tree.h ****       // Erase without rebalancing.
1636:/usr/include/c++/6/bits/stl_tree.h ****       while (__x != 0)
1637:/usr/include/c++/6/bits/stl_tree.h **** 	{
1638:/usr/include/c++/6/bits/stl_tree.h **** 	  _M_erase(_S_right(__x));
1639:/usr/include/c++/6/bits/stl_tree.h **** 	  _Link_type __y = _S_left(__x);
1640:/usr/include/c++/6/bits/stl_tree.h **** 	  _M_drop_node(__x);
1641:/usr/include/c++/6/bits/stl_tree.h **** 	  __x = __y;
1642:/usr/include/c++/6/bits/stl_tree.h **** 	}
1643:/usr/include/c++/6/bits/stl_tree.h ****     }
1644:/usr/include/c++/6/bits/stl_tree.h **** 
1645:/usr/include/c++/6/bits/stl_tree.h ****   template<typename _Key, typename _Val, typename _KeyOfValue,
1646:/usr/include/c++/6/bits/stl_tree.h ****            typename _Compare, typename _Alloc>
1647:/usr/include/c++/6/bits/stl_tree.h ****     typename _Rb_tree<_Key, _Val, _KeyOfValue,
1648:/usr/include/c++/6/bits/stl_tree.h **** 		      _Compare, _Alloc>::iterator
1649:/usr/include/c++/6/bits/stl_tree.h ****     _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
1650:/usr/include/c++/6/bits/stl_tree.h ****     _M_lower_bound(_Link_type __x, _Base_ptr __y,
1651:/usr/include/c++/6/bits/stl_tree.h **** 		   const _Key& __k)
1652:/usr/include/c++/6/bits/stl_tree.h ****     {
1653:/usr/include/c++/6/bits/stl_tree.h ****       while (__x != 0)
1654:/usr/include/c++/6/bits/stl_tree.h **** 	if (!_M_impl._M_key_compare(_S_key(__x), __k))
1655:/usr/include/c++/6/bits/stl_tree.h **** 	  __y = __x, __x = _S_left(__x);
1656:/usr/include/c++/6/bits/stl_tree.h **** 	else
1657:/usr/include/c++/6/bits/stl_tree.h **** 	  __x = _S_right(__x);
1658:/usr/include/c++/6/bits/stl_tree.h ****       return iterator(__y);
1659:/usr/include/c++/6/bits/stl_tree.h ****     }
1660:/usr/include/c++/6/bits/stl_tree.h **** 
1661:/usr/include/c++/6/bits/stl_tree.h ****   template<typename _Key, typename _Val, typename _KeyOfValue,
1662:/usr/include/c++/6/bits/stl_tree.h ****            typename _Compare, typename _Alloc>
1663:/usr/include/c++/6/bits/stl_tree.h ****     typename _Rb_tree<_Key, _Val, _KeyOfValue,
1664:/usr/include/c++/6/bits/stl_tree.h **** 		      _Compare, _Alloc>::const_iterator
1665:/usr/include/c++/6/bits/stl_tree.h ****     _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
1666:/usr/include/c++/6/bits/stl_tree.h ****     _M_lower_bound(_Const_Link_type __x, _Const_Base_ptr __y,
1667:/usr/include/c++/6/bits/stl_tree.h **** 		   const _Key& __k) const
1668:/usr/include/c++/6/bits/stl_tree.h ****     {
1669:/usr/include/c++/6/bits/stl_tree.h ****       while (__x != 0)
1670:/usr/include/c++/6/bits/stl_tree.h **** 	if (!_M_impl._M_key_compare(_S_key(__x), __k))
1671:/usr/include/c++/6/bits/stl_tree.h **** 	  __y = __x, __x = _S_left(__x);
1672:/usr/include/c++/6/bits/stl_tree.h **** 	else
1673:/usr/include/c++/6/bits/stl_tree.h **** 	  __x = _S_right(__x);
1674:/usr/include/c++/6/bits/stl_tree.h ****       return const_iterator(__y);
1675:/usr/include/c++/6/bits/stl_tree.h ****     }
GAS LISTING /tmp/ccsIN87E.s 			page 393


1676:/usr/include/c++/6/bits/stl_tree.h **** 
1677:/usr/include/c++/6/bits/stl_tree.h ****   template<typename _Key, typename _Val, typename _KeyOfValue,
1678:/usr/include/c++/6/bits/stl_tree.h ****            typename _Compare, typename _Alloc>
1679:/usr/include/c++/6/bits/stl_tree.h ****     typename _Rb_tree<_Key, _Val, _KeyOfValue,
1680:/usr/include/c++/6/bits/stl_tree.h **** 		      _Compare, _Alloc>::iterator
1681:/usr/include/c++/6/bits/stl_tree.h ****     _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
1682:/usr/include/c++/6/bits/stl_tree.h ****     _M_upper_bound(_Link_type __x, _Base_ptr __y,
1683:/usr/include/c++/6/bits/stl_tree.h **** 		   const _Key& __k)
1684:/usr/include/c++/6/bits/stl_tree.h ****     {
1685:/usr/include/c++/6/bits/stl_tree.h ****       while (__x != 0)
1686:/usr/include/c++/6/bits/stl_tree.h **** 	if (_M_impl._M_key_compare(__k, _S_key(__x)))
1687:/usr/include/c++/6/bits/stl_tree.h **** 	  __y = __x, __x = _S_left(__x);
1688:/usr/include/c++/6/bits/stl_tree.h **** 	else
1689:/usr/include/c++/6/bits/stl_tree.h **** 	  __x = _S_right(__x);
1690:/usr/include/c++/6/bits/stl_tree.h ****       return iterator(__y);
1691:/usr/include/c++/6/bits/stl_tree.h ****     }
1692:/usr/include/c++/6/bits/stl_tree.h **** 
1693:/usr/include/c++/6/bits/stl_tree.h ****   template<typename _Key, typename _Val, typename _KeyOfValue,
1694:/usr/include/c++/6/bits/stl_tree.h ****            typename _Compare, typename _Alloc>
1695:/usr/include/c++/6/bits/stl_tree.h ****     typename _Rb_tree<_Key, _Val, _KeyOfValue,
1696:/usr/include/c++/6/bits/stl_tree.h **** 		      _Compare, _Alloc>::const_iterator
1697:/usr/include/c++/6/bits/stl_tree.h ****     _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
1698:/usr/include/c++/6/bits/stl_tree.h ****     _M_upper_bound(_Const_Link_type __x, _Const_Base_ptr __y,
1699:/usr/include/c++/6/bits/stl_tree.h **** 		   const _Key& __k) const
1700:/usr/include/c++/6/bits/stl_tree.h ****     {
1701:/usr/include/c++/6/bits/stl_tree.h ****       while (__x != 0)
1702:/usr/include/c++/6/bits/stl_tree.h **** 	if (_M_impl._M_key_compare(__k, _S_key(__x)))
1703:/usr/include/c++/6/bits/stl_tree.h **** 	  __y = __x, __x = _S_left(__x);
1704:/usr/include/c++/6/bits/stl_tree.h **** 	else
1705:/usr/include/c++/6/bits/stl_tree.h **** 	  __x = _S_right(__x);
1706:/usr/include/c++/6/bits/stl_tree.h ****       return const_iterator(__y);
1707:/usr/include/c++/6/bits/stl_tree.h ****     }
1708:/usr/include/c++/6/bits/stl_tree.h **** 
1709:/usr/include/c++/6/bits/stl_tree.h ****   template<typename _Key, typename _Val, typename _KeyOfValue,
1710:/usr/include/c++/6/bits/stl_tree.h ****            typename _Compare, typename _Alloc>
1711:/usr/include/c++/6/bits/stl_tree.h ****     pair<typename _Rb_tree<_Key, _Val, _KeyOfValue,
1712:/usr/include/c++/6/bits/stl_tree.h **** 			   _Compare, _Alloc>::iterator,
1713:/usr/include/c++/6/bits/stl_tree.h **** 	 typename _Rb_tree<_Key, _Val, _KeyOfValue,
1714:/usr/include/c++/6/bits/stl_tree.h **** 			   _Compare, _Alloc>::iterator>
1715:/usr/include/c++/6/bits/stl_tree.h ****     _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
1716:/usr/include/c++/6/bits/stl_tree.h ****     equal_range(const _Key& __k)
1717:/usr/include/c++/6/bits/stl_tree.h ****     {
1718:/usr/include/c++/6/bits/stl_tree.h ****       _Link_type __x = _M_begin();
1719:/usr/include/c++/6/bits/stl_tree.h ****       _Base_ptr __y = _M_end();
1720:/usr/include/c++/6/bits/stl_tree.h ****       while (__x != 0)
1721:/usr/include/c++/6/bits/stl_tree.h **** 	{
1722:/usr/include/c++/6/bits/stl_tree.h **** 	  if (_M_impl._M_key_compare(_S_key(__x), __k))
1723:/usr/include/c++/6/bits/stl_tree.h **** 	    __x = _S_right(__x);
1724:/usr/include/c++/6/bits/stl_tree.h **** 	  else if (_M_impl._M_key_compare(__k, _S_key(__x)))
1725:/usr/include/c++/6/bits/stl_tree.h **** 	    __y = __x, __x = _S_left(__x);
1726:/usr/include/c++/6/bits/stl_tree.h **** 	  else
1727:/usr/include/c++/6/bits/stl_tree.h **** 	    {
1728:/usr/include/c++/6/bits/stl_tree.h **** 	      _Link_type __xu(__x);
1729:/usr/include/c++/6/bits/stl_tree.h **** 	      _Base_ptr __yu(__y);
1730:/usr/include/c++/6/bits/stl_tree.h **** 	      __y = __x, __x = _S_left(__x);
1731:/usr/include/c++/6/bits/stl_tree.h **** 	      __xu = _S_right(__xu);
1732:/usr/include/c++/6/bits/stl_tree.h **** 	      return pair<iterator,
GAS LISTING /tmp/ccsIN87E.s 			page 394


1733:/usr/include/c++/6/bits/stl_tree.h **** 		          iterator>(_M_lower_bound(__x, __y, __k),
1734:/usr/include/c++/6/bits/stl_tree.h **** 				    _M_upper_bound(__xu, __yu, __k));
1735:/usr/include/c++/6/bits/stl_tree.h **** 	    }
1736:/usr/include/c++/6/bits/stl_tree.h **** 	}
1737:/usr/include/c++/6/bits/stl_tree.h ****       return pair<iterator, iterator>(iterator(__y),
1738:/usr/include/c++/6/bits/stl_tree.h **** 				      iterator(__y));
1739:/usr/include/c++/6/bits/stl_tree.h ****     }
1740:/usr/include/c++/6/bits/stl_tree.h **** 
1741:/usr/include/c++/6/bits/stl_tree.h ****   template<typename _Key, typename _Val, typename _KeyOfValue,
1742:/usr/include/c++/6/bits/stl_tree.h ****            typename _Compare, typename _Alloc>
1743:/usr/include/c++/6/bits/stl_tree.h ****     pair<typename _Rb_tree<_Key, _Val, _KeyOfValue,
1744:/usr/include/c++/6/bits/stl_tree.h **** 			   _Compare, _Alloc>::const_iterator,
1745:/usr/include/c++/6/bits/stl_tree.h **** 	 typename _Rb_tree<_Key, _Val, _KeyOfValue,
1746:/usr/include/c++/6/bits/stl_tree.h **** 			   _Compare, _Alloc>::const_iterator>
1747:/usr/include/c++/6/bits/stl_tree.h ****     _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
1748:/usr/include/c++/6/bits/stl_tree.h ****     equal_range(const _Key& __k) const
1749:/usr/include/c++/6/bits/stl_tree.h ****     {
1750:/usr/include/c++/6/bits/stl_tree.h ****       _Const_Link_type __x = _M_begin();
1751:/usr/include/c++/6/bits/stl_tree.h ****       _Const_Base_ptr __y = _M_end();
1752:/usr/include/c++/6/bits/stl_tree.h ****       while (__x != 0)
1753:/usr/include/c++/6/bits/stl_tree.h **** 	{
1754:/usr/include/c++/6/bits/stl_tree.h **** 	  if (_M_impl._M_key_compare(_S_key(__x), __k))
1755:/usr/include/c++/6/bits/stl_tree.h **** 	    __x = _S_right(__x);
1756:/usr/include/c++/6/bits/stl_tree.h **** 	  else if (_M_impl._M_key_compare(__k, _S_key(__x)))
1757:/usr/include/c++/6/bits/stl_tree.h **** 	    __y = __x, __x = _S_left(__x);
1758:/usr/include/c++/6/bits/stl_tree.h **** 	  else
1759:/usr/include/c++/6/bits/stl_tree.h **** 	    {
1760:/usr/include/c++/6/bits/stl_tree.h **** 	      _Const_Link_type __xu(__x);
1761:/usr/include/c++/6/bits/stl_tree.h **** 	      _Const_Base_ptr __yu(__y);
1762:/usr/include/c++/6/bits/stl_tree.h **** 	      __y = __x, __x = _S_left(__x);
1763:/usr/include/c++/6/bits/stl_tree.h **** 	      __xu = _S_right(__xu);
1764:/usr/include/c++/6/bits/stl_tree.h **** 	      return pair<const_iterator,
1765:/usr/include/c++/6/bits/stl_tree.h **** 		          const_iterator>(_M_lower_bound(__x, __y, __k),
1766:/usr/include/c++/6/bits/stl_tree.h **** 					  _M_upper_bound(__xu, __yu, __k));
1767:/usr/include/c++/6/bits/stl_tree.h **** 	    }
1768:/usr/include/c++/6/bits/stl_tree.h **** 	}
1769:/usr/include/c++/6/bits/stl_tree.h ****       return pair<const_iterator, const_iterator>(const_iterator(__y),
1770:/usr/include/c++/6/bits/stl_tree.h **** 						  const_iterator(__y));
1771:/usr/include/c++/6/bits/stl_tree.h ****     }
1772:/usr/include/c++/6/bits/stl_tree.h **** 
1773:/usr/include/c++/6/bits/stl_tree.h ****   template<typename _Key, typename _Val, typename _KeyOfValue,
1774:/usr/include/c++/6/bits/stl_tree.h ****            typename _Compare, typename _Alloc>
1775:/usr/include/c++/6/bits/stl_tree.h ****     void
1776:/usr/include/c++/6/bits/stl_tree.h ****     _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
1777:/usr/include/c++/6/bits/stl_tree.h ****     swap(_Rb_tree& __t)
1778:/usr/include/c++/6/bits/stl_tree.h ****     _GLIBCXX_NOEXCEPT_IF(__is_nothrow_swappable<_Compare>::value)
1779:/usr/include/c++/6/bits/stl_tree.h ****     {
1780:/usr/include/c++/6/bits/stl_tree.h ****       if (_M_root() == 0)
1781:/usr/include/c++/6/bits/stl_tree.h **** 	{
1782:/usr/include/c++/6/bits/stl_tree.h **** 	  if (__t._M_root() != 0)
1783:/usr/include/c++/6/bits/stl_tree.h **** 	    {
1784:/usr/include/c++/6/bits/stl_tree.h **** 	      _M_root() = __t._M_root();
1785:/usr/include/c++/6/bits/stl_tree.h **** 	      _M_leftmost() = __t._M_leftmost();
1786:/usr/include/c++/6/bits/stl_tree.h **** 	      _M_rightmost() = __t._M_rightmost();
1787:/usr/include/c++/6/bits/stl_tree.h **** 	      _M_root()->_M_parent = _M_end();
1788:/usr/include/c++/6/bits/stl_tree.h **** 	      _M_impl._M_node_count = __t._M_impl._M_node_count;
1789:/usr/include/c++/6/bits/stl_tree.h **** 	      
GAS LISTING /tmp/ccsIN87E.s 			page 395


1790:/usr/include/c++/6/bits/stl_tree.h **** 	      __t._M_impl._M_reset();
1791:/usr/include/c++/6/bits/stl_tree.h **** 	    }
1792:/usr/include/c++/6/bits/stl_tree.h **** 	}
1793:/usr/include/c++/6/bits/stl_tree.h ****       else if (__t._M_root() == 0)
1794:/usr/include/c++/6/bits/stl_tree.h **** 	{
1795:/usr/include/c++/6/bits/stl_tree.h **** 	  __t._M_root() = _M_root();
1796:/usr/include/c++/6/bits/stl_tree.h **** 	  __t._M_leftmost() = _M_leftmost();
1797:/usr/include/c++/6/bits/stl_tree.h **** 	  __t._M_rightmost() = _M_rightmost();
1798:/usr/include/c++/6/bits/stl_tree.h **** 	  __t._M_root()->_M_parent = __t._M_end();
1799:/usr/include/c++/6/bits/stl_tree.h **** 	  __t._M_impl._M_node_count = _M_impl._M_node_count;
1800:/usr/include/c++/6/bits/stl_tree.h **** 	  
1801:/usr/include/c++/6/bits/stl_tree.h **** 	  _M_impl._M_reset();
1802:/usr/include/c++/6/bits/stl_tree.h **** 	}
1803:/usr/include/c++/6/bits/stl_tree.h ****       else
1804:/usr/include/c++/6/bits/stl_tree.h **** 	{
1805:/usr/include/c++/6/bits/stl_tree.h **** 	  std::swap(_M_root(),__t._M_root());
1806:/usr/include/c++/6/bits/stl_tree.h **** 	  std::swap(_M_leftmost(),__t._M_leftmost());
1807:/usr/include/c++/6/bits/stl_tree.h **** 	  std::swap(_M_rightmost(),__t._M_rightmost());
1808:/usr/include/c++/6/bits/stl_tree.h **** 	  
1809:/usr/include/c++/6/bits/stl_tree.h **** 	  _M_root()->_M_parent = _M_end();
1810:/usr/include/c++/6/bits/stl_tree.h **** 	  __t._M_root()->_M_parent = __t._M_end();
1811:/usr/include/c++/6/bits/stl_tree.h **** 	  std::swap(this->_M_impl._M_node_count, __t._M_impl._M_node_count);
1812:/usr/include/c++/6/bits/stl_tree.h **** 	}
1813:/usr/include/c++/6/bits/stl_tree.h ****       // No need to swap header's color as it does not change.
1814:/usr/include/c++/6/bits/stl_tree.h ****       std::swap(this->_M_impl._M_key_compare, __t._M_impl._M_key_compare);
1815:/usr/include/c++/6/bits/stl_tree.h **** 
1816:/usr/include/c++/6/bits/stl_tree.h ****       _Alloc_traits::_S_on_swap(_M_get_Node_allocator(),
1817:/usr/include/c++/6/bits/stl_tree.h **** 				__t._M_get_Node_allocator());
1818:/usr/include/c++/6/bits/stl_tree.h ****     }
1819:/usr/include/c++/6/bits/stl_tree.h **** 
1820:/usr/include/c++/6/bits/stl_tree.h ****   template<typename _Key, typename _Val, typename _KeyOfValue,
1821:/usr/include/c++/6/bits/stl_tree.h ****            typename _Compare, typename _Alloc>
1822:/usr/include/c++/6/bits/stl_tree.h ****     pair<typename _Rb_tree<_Key, _Val, _KeyOfValue,
1823:/usr/include/c++/6/bits/stl_tree.h **** 			   _Compare, _Alloc>::_Base_ptr,
1824:/usr/include/c++/6/bits/stl_tree.h **** 	 typename _Rb_tree<_Key, _Val, _KeyOfValue,
1825:/usr/include/c++/6/bits/stl_tree.h **** 			   _Compare, _Alloc>::_Base_ptr>
1826:/usr/include/c++/6/bits/stl_tree.h ****     _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
1827:/usr/include/c++/6/bits/stl_tree.h ****     _M_get_insert_unique_pos(const key_type& __k)
1828:/usr/include/c++/6/bits/stl_tree.h ****     {
1829:/usr/include/c++/6/bits/stl_tree.h ****       typedef pair<_Base_ptr, _Base_ptr> _Res;
1830:/usr/include/c++/6/bits/stl_tree.h ****       _Link_type __x = _M_begin();
1831:/usr/include/c++/6/bits/stl_tree.h ****       _Base_ptr __y = _M_end();
1832:/usr/include/c++/6/bits/stl_tree.h ****       bool __comp = true;
1833:/usr/include/c++/6/bits/stl_tree.h ****       while (__x != 0)
1834:/usr/include/c++/6/bits/stl_tree.h **** 	{
1835:/usr/include/c++/6/bits/stl_tree.h **** 	  __y = __x;
1836:/usr/include/c++/6/bits/stl_tree.h **** 	  __comp = _M_impl._M_key_compare(__k, _S_key(__x));
1837:/usr/include/c++/6/bits/stl_tree.h **** 	  __x = __comp ? _S_left(__x) : _S_right(__x);
1838:/usr/include/c++/6/bits/stl_tree.h **** 	}
1839:/usr/include/c++/6/bits/stl_tree.h ****       iterator __j = iterator(__y);
1840:/usr/include/c++/6/bits/stl_tree.h ****       if (__comp)
1841:/usr/include/c++/6/bits/stl_tree.h **** 	{
1842:/usr/include/c++/6/bits/stl_tree.h **** 	  if (__j == begin())
1843:/usr/include/c++/6/bits/stl_tree.h **** 	    return _Res(__x, __y);
1844:/usr/include/c++/6/bits/stl_tree.h **** 	  else
1845:/usr/include/c++/6/bits/stl_tree.h **** 	    --__j;
1846:/usr/include/c++/6/bits/stl_tree.h **** 	}
GAS LISTING /tmp/ccsIN87E.s 			page 396


1847:/usr/include/c++/6/bits/stl_tree.h ****       if (_M_impl._M_key_compare(_S_key(__j._M_node), __k))
1848:/usr/include/c++/6/bits/stl_tree.h **** 	return _Res(__x, __y);
1849:/usr/include/c++/6/bits/stl_tree.h ****       return _Res(__j._M_node, 0);
1850:/usr/include/c++/6/bits/stl_tree.h ****     }
1851:/usr/include/c++/6/bits/stl_tree.h **** 
1852:/usr/include/c++/6/bits/stl_tree.h ****   template<typename _Key, typename _Val, typename _KeyOfValue,
1853:/usr/include/c++/6/bits/stl_tree.h ****            typename _Compare, typename _Alloc>
1854:/usr/include/c++/6/bits/stl_tree.h ****     pair<typename _Rb_tree<_Key, _Val, _KeyOfValue,
1855:/usr/include/c++/6/bits/stl_tree.h **** 			   _Compare, _Alloc>::_Base_ptr,
1856:/usr/include/c++/6/bits/stl_tree.h **** 	 typename _Rb_tree<_Key, _Val, _KeyOfValue,
1857:/usr/include/c++/6/bits/stl_tree.h **** 			   _Compare, _Alloc>::_Base_ptr>
1858:/usr/include/c++/6/bits/stl_tree.h ****     _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
1859:/usr/include/c++/6/bits/stl_tree.h ****     _M_get_insert_equal_pos(const key_type& __k)
1860:/usr/include/c++/6/bits/stl_tree.h ****     {
1861:/usr/include/c++/6/bits/stl_tree.h ****       typedef pair<_Base_ptr, _Base_ptr> _Res;
1862:/usr/include/c++/6/bits/stl_tree.h ****       _Link_type __x = _M_begin();
1863:/usr/include/c++/6/bits/stl_tree.h ****       _Base_ptr __y = _M_end();
1864:/usr/include/c++/6/bits/stl_tree.h ****       while (__x != 0)
1865:/usr/include/c++/6/bits/stl_tree.h **** 	{
1866:/usr/include/c++/6/bits/stl_tree.h **** 	  __y = __x;
1867:/usr/include/c++/6/bits/stl_tree.h **** 	  __x = _M_impl._M_key_compare(__k, _S_key(__x)) ?
1868:/usr/include/c++/6/bits/stl_tree.h **** 	        _S_left(__x) : _S_right(__x);
1869:/usr/include/c++/6/bits/stl_tree.h **** 	}
1870:/usr/include/c++/6/bits/stl_tree.h ****       return _Res(__x, __y);
1871:/usr/include/c++/6/bits/stl_tree.h ****     }
1872:/usr/include/c++/6/bits/stl_tree.h **** 
1873:/usr/include/c++/6/bits/stl_tree.h ****   template<typename _Key, typename _Val, typename _KeyOfValue,
1874:/usr/include/c++/6/bits/stl_tree.h ****            typename _Compare, typename _Alloc>
1875:/usr/include/c++/6/bits/stl_tree.h **** #if __cplusplus >= 201103L
1876:/usr/include/c++/6/bits/stl_tree.h ****     template<typename _Arg>
1877:/usr/include/c++/6/bits/stl_tree.h **** #endif
1878:/usr/include/c++/6/bits/stl_tree.h ****     pair<typename _Rb_tree<_Key, _Val, _KeyOfValue,
1879:/usr/include/c++/6/bits/stl_tree.h **** 			   _Compare, _Alloc>::iterator, bool>
1880:/usr/include/c++/6/bits/stl_tree.h ****     _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
1881:/usr/include/c++/6/bits/stl_tree.h **** #if __cplusplus >= 201103L
1882:/usr/include/c++/6/bits/stl_tree.h ****     _M_insert_unique(_Arg&& __v)
1883:/usr/include/c++/6/bits/stl_tree.h **** #else
1884:/usr/include/c++/6/bits/stl_tree.h ****     _M_insert_unique(const _Val& __v)
1885:/usr/include/c++/6/bits/stl_tree.h **** #endif
1886:/usr/include/c++/6/bits/stl_tree.h ****     {
1887:/usr/include/c++/6/bits/stl_tree.h ****       typedef pair<iterator, bool> _Res;
1888:/usr/include/c++/6/bits/stl_tree.h ****       pair<_Base_ptr, _Base_ptr> __res
1889:/usr/include/c++/6/bits/stl_tree.h **** 	= _M_get_insert_unique_pos(_KeyOfValue()(__v));
1890:/usr/include/c++/6/bits/stl_tree.h **** 
1891:/usr/include/c++/6/bits/stl_tree.h ****       if (__res.second)
1892:/usr/include/c++/6/bits/stl_tree.h **** 	{
1893:/usr/include/c++/6/bits/stl_tree.h **** 	  _Alloc_node __an(*this);
1894:/usr/include/c++/6/bits/stl_tree.h **** 	  return _Res(_M_insert_(__res.first, __res.second,
1895:/usr/include/c++/6/bits/stl_tree.h **** 				 _GLIBCXX_FORWARD(_Arg, __v), __an),
1896:/usr/include/c++/6/bits/stl_tree.h **** 		      true);
1897:/usr/include/c++/6/bits/stl_tree.h **** 	}
1898:/usr/include/c++/6/bits/stl_tree.h **** 
1899:/usr/include/c++/6/bits/stl_tree.h ****       return _Res(iterator(__res.first), false);
1900:/usr/include/c++/6/bits/stl_tree.h ****     }
1901:/usr/include/c++/6/bits/stl_tree.h **** 
1902:/usr/include/c++/6/bits/stl_tree.h ****   template<typename _Key, typename _Val, typename _KeyOfValue,
1903:/usr/include/c++/6/bits/stl_tree.h ****            typename _Compare, typename _Alloc>
GAS LISTING /tmp/ccsIN87E.s 			page 397


1904:/usr/include/c++/6/bits/stl_tree.h **** #if __cplusplus >= 201103L
1905:/usr/include/c++/6/bits/stl_tree.h ****     template<typename _Arg>
1906:/usr/include/c++/6/bits/stl_tree.h **** #endif
1907:/usr/include/c++/6/bits/stl_tree.h ****     typename _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::iterator
1908:/usr/include/c++/6/bits/stl_tree.h ****     _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
1909:/usr/include/c++/6/bits/stl_tree.h **** #if __cplusplus >= 201103L
1910:/usr/include/c++/6/bits/stl_tree.h ****     _M_insert_equal(_Arg&& __v)
1911:/usr/include/c++/6/bits/stl_tree.h **** #else
1912:/usr/include/c++/6/bits/stl_tree.h ****     _M_insert_equal(const _Val& __v)
1913:/usr/include/c++/6/bits/stl_tree.h **** #endif
1914:/usr/include/c++/6/bits/stl_tree.h ****     {
1915:/usr/include/c++/6/bits/stl_tree.h ****       pair<_Base_ptr, _Base_ptr> __res
1916:/usr/include/c++/6/bits/stl_tree.h **** 	= _M_get_insert_equal_pos(_KeyOfValue()(__v));
1917:/usr/include/c++/6/bits/stl_tree.h ****       _Alloc_node __an(*this);
1918:/usr/include/c++/6/bits/stl_tree.h ****       return _M_insert_(__res.first, __res.second,
1919:/usr/include/c++/6/bits/stl_tree.h **** 			_GLIBCXX_FORWARD(_Arg, __v), __an);
1920:/usr/include/c++/6/bits/stl_tree.h ****     }
1921:/usr/include/c++/6/bits/stl_tree.h **** 
1922:/usr/include/c++/6/bits/stl_tree.h ****   template<typename _Key, typename _Val, typename _KeyOfValue,
1923:/usr/include/c++/6/bits/stl_tree.h ****            typename _Compare, typename _Alloc>
1924:/usr/include/c++/6/bits/stl_tree.h ****     pair<typename _Rb_tree<_Key, _Val, _KeyOfValue,
1925:/usr/include/c++/6/bits/stl_tree.h **** 			   _Compare, _Alloc>::_Base_ptr,
1926:/usr/include/c++/6/bits/stl_tree.h ****          typename _Rb_tree<_Key, _Val, _KeyOfValue,
1927:/usr/include/c++/6/bits/stl_tree.h **** 			   _Compare, _Alloc>::_Base_ptr>
1928:/usr/include/c++/6/bits/stl_tree.h ****     _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
1929:/usr/include/c++/6/bits/stl_tree.h ****     _M_get_insert_hint_unique_pos(const_iterator __position,
1930:/usr/include/c++/6/bits/stl_tree.h **** 				  const key_type& __k)
1931:/usr/include/c++/6/bits/stl_tree.h ****     {
1932:/usr/include/c++/6/bits/stl_tree.h ****       iterator __pos = __position._M_const_cast();
1933:/usr/include/c++/6/bits/stl_tree.h ****       typedef pair<_Base_ptr, _Base_ptr> _Res;
1934:/usr/include/c++/6/bits/stl_tree.h **** 
1935:/usr/include/c++/6/bits/stl_tree.h ****       // end()
1936:/usr/include/c++/6/bits/stl_tree.h ****       if (__pos._M_node == _M_end())
1937:/usr/include/c++/6/bits/stl_tree.h **** 	{
1938:/usr/include/c++/6/bits/stl_tree.h **** 	  if (size() > 0
1939:/usr/include/c++/6/bits/stl_tree.h **** 	      && _M_impl._M_key_compare(_S_key(_M_rightmost()), __k))
1940:/usr/include/c++/6/bits/stl_tree.h **** 	    return _Res(0, _M_rightmost());
1941:/usr/include/c++/6/bits/stl_tree.h **** 	  else
1942:/usr/include/c++/6/bits/stl_tree.h **** 	    return _M_get_insert_unique_pos(__k);
1943:/usr/include/c++/6/bits/stl_tree.h **** 	}
1944:/usr/include/c++/6/bits/stl_tree.h ****       else if (_M_impl._M_key_compare(__k, _S_key(__pos._M_node)))
1945:/usr/include/c++/6/bits/stl_tree.h **** 	{
1946:/usr/include/c++/6/bits/stl_tree.h **** 	  // First, try before...
1947:/usr/include/c++/6/bits/stl_tree.h **** 	  iterator __before = __pos;
1948:/usr/include/c++/6/bits/stl_tree.h **** 	  if (__pos._M_node == _M_leftmost()) // begin()
1949:/usr/include/c++/6/bits/stl_tree.h **** 	    return _Res(_M_leftmost(), _M_leftmost());
1950:/usr/include/c++/6/bits/stl_tree.h **** 	  else if (_M_impl._M_key_compare(_S_key((--__before)._M_node), __k))
1951:/usr/include/c++/6/bits/stl_tree.h **** 	    {
1952:/usr/include/c++/6/bits/stl_tree.h **** 	      if (_S_right(__before._M_node) == 0)
1953:/usr/include/c++/6/bits/stl_tree.h **** 		return _Res(0, __before._M_node);
1954:/usr/include/c++/6/bits/stl_tree.h **** 	      else
1955:/usr/include/c++/6/bits/stl_tree.h **** 		return _Res(__pos._M_node, __pos._M_node);
1956:/usr/include/c++/6/bits/stl_tree.h **** 	    }
1957:/usr/include/c++/6/bits/stl_tree.h **** 	  else
1958:/usr/include/c++/6/bits/stl_tree.h **** 	    return _M_get_insert_unique_pos(__k);
1959:/usr/include/c++/6/bits/stl_tree.h **** 	}
1960:/usr/include/c++/6/bits/stl_tree.h ****       else if (_M_impl._M_key_compare(_S_key(__pos._M_node), __k))
GAS LISTING /tmp/ccsIN87E.s 			page 398


1961:/usr/include/c++/6/bits/stl_tree.h **** 	{
1962:/usr/include/c++/6/bits/stl_tree.h **** 	  // ... then try after.
1963:/usr/include/c++/6/bits/stl_tree.h **** 	  iterator __after = __pos;
1964:/usr/include/c++/6/bits/stl_tree.h **** 	  if (__pos._M_node == _M_rightmost())
1965:/usr/include/c++/6/bits/stl_tree.h **** 	    return _Res(0, _M_rightmost());
1966:/usr/include/c++/6/bits/stl_tree.h **** 	  else if (_M_impl._M_key_compare(__k, _S_key((++__after)._M_node)))
1967:/usr/include/c++/6/bits/stl_tree.h **** 	    {
1968:/usr/include/c++/6/bits/stl_tree.h **** 	      if (_S_right(__pos._M_node) == 0)
1969:/usr/include/c++/6/bits/stl_tree.h **** 		return _Res(0, __pos._M_node);
1970:/usr/include/c++/6/bits/stl_tree.h **** 	      else
1971:/usr/include/c++/6/bits/stl_tree.h **** 		return _Res(__after._M_node, __after._M_node);
1972:/usr/include/c++/6/bits/stl_tree.h **** 	    }
1973:/usr/include/c++/6/bits/stl_tree.h **** 	  else
1974:/usr/include/c++/6/bits/stl_tree.h **** 	    return _M_get_insert_unique_pos(__k);
1975:/usr/include/c++/6/bits/stl_tree.h **** 	}
1976:/usr/include/c++/6/bits/stl_tree.h ****       else
1977:/usr/include/c++/6/bits/stl_tree.h **** 	// Equivalent keys.
1978:/usr/include/c++/6/bits/stl_tree.h **** 	return _Res(__pos._M_node, 0);
1979:/usr/include/c++/6/bits/stl_tree.h ****     }
1980:/usr/include/c++/6/bits/stl_tree.h **** 
1981:/usr/include/c++/6/bits/stl_tree.h ****   template<typename _Key, typename _Val, typename _KeyOfValue,
1982:/usr/include/c++/6/bits/stl_tree.h ****            typename _Compare, typename _Alloc>
1983:/usr/include/c++/6/bits/stl_tree.h **** #if __cplusplus >= 201103L
1984:/usr/include/c++/6/bits/stl_tree.h ****     template<typename _Arg, typename _NodeGen>
1985:/usr/include/c++/6/bits/stl_tree.h **** #else
1986:/usr/include/c++/6/bits/stl_tree.h ****     template<typename _NodeGen>
1987:/usr/include/c++/6/bits/stl_tree.h **** #endif
1988:/usr/include/c++/6/bits/stl_tree.h ****       typename _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::iterator
1989:/usr/include/c++/6/bits/stl_tree.h ****       _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
1990:/usr/include/c++/6/bits/stl_tree.h ****       _M_insert_unique_(const_iterator __position,
1991:/usr/include/c++/6/bits/stl_tree.h **** #if __cplusplus >= 201103L
1992:/usr/include/c++/6/bits/stl_tree.h **** 			_Arg&& __v,
1993:/usr/include/c++/6/bits/stl_tree.h **** #else
1994:/usr/include/c++/6/bits/stl_tree.h **** 			const _Val& __v,
1995:/usr/include/c++/6/bits/stl_tree.h **** #endif
1996:/usr/include/c++/6/bits/stl_tree.h **** 			_NodeGen& __node_gen)
1997:/usr/include/c++/6/bits/stl_tree.h ****     {
1998:/usr/include/c++/6/bits/stl_tree.h ****       pair<_Base_ptr, _Base_ptr> __res
1999:/usr/include/c++/6/bits/stl_tree.h **** 	= _M_get_insert_hint_unique_pos(__position, _KeyOfValue()(__v));
2000:/usr/include/c++/6/bits/stl_tree.h **** 
2001:/usr/include/c++/6/bits/stl_tree.h ****       if (__res.second)
2002:/usr/include/c++/6/bits/stl_tree.h **** 	return _M_insert_(__res.first, __res.second,
2003:/usr/include/c++/6/bits/stl_tree.h **** 			  _GLIBCXX_FORWARD(_Arg, __v),
2004:/usr/include/c++/6/bits/stl_tree.h **** 			  __node_gen);
2005:/usr/include/c++/6/bits/stl_tree.h ****       return iterator(__res.first);
2006:/usr/include/c++/6/bits/stl_tree.h ****     }
2007:/usr/include/c++/6/bits/stl_tree.h **** 
2008:/usr/include/c++/6/bits/stl_tree.h ****   template<typename _Key, typename _Val, typename _KeyOfValue,
2009:/usr/include/c++/6/bits/stl_tree.h ****            typename _Compare, typename _Alloc>
2010:/usr/include/c++/6/bits/stl_tree.h ****     pair<typename _Rb_tree<_Key, _Val, _KeyOfValue,
2011:/usr/include/c++/6/bits/stl_tree.h **** 			   _Compare, _Alloc>::_Base_ptr,
2012:/usr/include/c++/6/bits/stl_tree.h ****          typename _Rb_tree<_Key, _Val, _KeyOfValue,
2013:/usr/include/c++/6/bits/stl_tree.h **** 			   _Compare, _Alloc>::_Base_ptr>
2014:/usr/include/c++/6/bits/stl_tree.h ****     _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
2015:/usr/include/c++/6/bits/stl_tree.h ****     _M_get_insert_hint_equal_pos(const_iterator __position, const key_type& __k)
2016:/usr/include/c++/6/bits/stl_tree.h ****     {
2017:/usr/include/c++/6/bits/stl_tree.h ****       iterator __pos = __position._M_const_cast();
GAS LISTING /tmp/ccsIN87E.s 			page 399


2018:/usr/include/c++/6/bits/stl_tree.h ****       typedef pair<_Base_ptr, _Base_ptr> _Res;
2019:/usr/include/c++/6/bits/stl_tree.h **** 
2020:/usr/include/c++/6/bits/stl_tree.h ****       // end()
2021:/usr/include/c++/6/bits/stl_tree.h ****       if (__pos._M_node == _M_end())
2022:/usr/include/c++/6/bits/stl_tree.h **** 	{
2023:/usr/include/c++/6/bits/stl_tree.h **** 	  if (size() > 0
2024:/usr/include/c++/6/bits/stl_tree.h **** 	      && !_M_impl._M_key_compare(__k, _S_key(_M_rightmost())))
2025:/usr/include/c++/6/bits/stl_tree.h **** 	    return _Res(0, _M_rightmost());
2026:/usr/include/c++/6/bits/stl_tree.h **** 	  else
2027:/usr/include/c++/6/bits/stl_tree.h **** 	    return _M_get_insert_equal_pos(__k);
2028:/usr/include/c++/6/bits/stl_tree.h **** 	}
2029:/usr/include/c++/6/bits/stl_tree.h ****       else if (!_M_impl._M_key_compare(_S_key(__pos._M_node), __k))
2030:/usr/include/c++/6/bits/stl_tree.h **** 	{
2031:/usr/include/c++/6/bits/stl_tree.h **** 	  // First, try before...
2032:/usr/include/c++/6/bits/stl_tree.h **** 	  iterator __before = __pos;
2033:/usr/include/c++/6/bits/stl_tree.h **** 	  if (__pos._M_node == _M_leftmost()) // begin()
2034:/usr/include/c++/6/bits/stl_tree.h **** 	    return _Res(_M_leftmost(), _M_leftmost());
2035:/usr/include/c++/6/bits/stl_tree.h **** 	  else if (!_M_impl._M_key_compare(__k, _S_key((--__before)._M_node)))
2036:/usr/include/c++/6/bits/stl_tree.h **** 	    {
2037:/usr/include/c++/6/bits/stl_tree.h **** 	      if (_S_right(__before._M_node) == 0)
2038:/usr/include/c++/6/bits/stl_tree.h **** 		return _Res(0, __before._M_node);
2039:/usr/include/c++/6/bits/stl_tree.h **** 	      else
2040:/usr/include/c++/6/bits/stl_tree.h **** 		return _Res(__pos._M_node, __pos._M_node);
2041:/usr/include/c++/6/bits/stl_tree.h **** 	    }
2042:/usr/include/c++/6/bits/stl_tree.h **** 	  else
2043:/usr/include/c++/6/bits/stl_tree.h **** 	    return _M_get_insert_equal_pos(__k);
2044:/usr/include/c++/6/bits/stl_tree.h **** 	}
2045:/usr/include/c++/6/bits/stl_tree.h ****       else
2046:/usr/include/c++/6/bits/stl_tree.h **** 	{
2047:/usr/include/c++/6/bits/stl_tree.h **** 	  // ... then try after.  
2048:/usr/include/c++/6/bits/stl_tree.h **** 	  iterator __after = __pos;
2049:/usr/include/c++/6/bits/stl_tree.h **** 	  if (__pos._M_node == _M_rightmost())
2050:/usr/include/c++/6/bits/stl_tree.h **** 	    return _Res(0, _M_rightmost());
2051:/usr/include/c++/6/bits/stl_tree.h **** 	  else if (!_M_impl._M_key_compare(_S_key((++__after)._M_node), __k))
2052:/usr/include/c++/6/bits/stl_tree.h **** 	    {
2053:/usr/include/c++/6/bits/stl_tree.h **** 	      if (_S_right(__pos._M_node) == 0)
2054:/usr/include/c++/6/bits/stl_tree.h **** 		return _Res(0, __pos._M_node);
2055:/usr/include/c++/6/bits/stl_tree.h **** 	      else
2056:/usr/include/c++/6/bits/stl_tree.h **** 		return _Res(__after._M_node, __after._M_node);
2057:/usr/include/c++/6/bits/stl_tree.h **** 	    }
2058:/usr/include/c++/6/bits/stl_tree.h **** 	  else
2059:/usr/include/c++/6/bits/stl_tree.h **** 	    return _Res(0, 0);
2060:/usr/include/c++/6/bits/stl_tree.h **** 	}
2061:/usr/include/c++/6/bits/stl_tree.h ****     }
2062:/usr/include/c++/6/bits/stl_tree.h **** 
2063:/usr/include/c++/6/bits/stl_tree.h ****   template<typename _Key, typename _Val, typename _KeyOfValue,
2064:/usr/include/c++/6/bits/stl_tree.h ****            typename _Compare, typename _Alloc>
2065:/usr/include/c++/6/bits/stl_tree.h **** #if __cplusplus >= 201103L
2066:/usr/include/c++/6/bits/stl_tree.h ****     template<typename _Arg, typename _NodeGen>
2067:/usr/include/c++/6/bits/stl_tree.h **** #else
2068:/usr/include/c++/6/bits/stl_tree.h ****     template<typename _NodeGen>
2069:/usr/include/c++/6/bits/stl_tree.h **** #endif
2070:/usr/include/c++/6/bits/stl_tree.h ****       typename _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::iterator
2071:/usr/include/c++/6/bits/stl_tree.h ****       _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
2072:/usr/include/c++/6/bits/stl_tree.h ****       _M_insert_equal_(const_iterator __position,
2073:/usr/include/c++/6/bits/stl_tree.h **** #if __cplusplus >= 201103L
2074:/usr/include/c++/6/bits/stl_tree.h **** 		       _Arg&& __v,
GAS LISTING /tmp/ccsIN87E.s 			page 400


2075:/usr/include/c++/6/bits/stl_tree.h **** #else
2076:/usr/include/c++/6/bits/stl_tree.h **** 		       const _Val& __v,
2077:/usr/include/c++/6/bits/stl_tree.h **** #endif
2078:/usr/include/c++/6/bits/stl_tree.h **** 		       _NodeGen& __node_gen)
2079:/usr/include/c++/6/bits/stl_tree.h ****       {
2080:/usr/include/c++/6/bits/stl_tree.h **** 	pair<_Base_ptr, _Base_ptr> __res
2081:/usr/include/c++/6/bits/stl_tree.h **** 	  = _M_get_insert_hint_equal_pos(__position, _KeyOfValue()(__v));
2082:/usr/include/c++/6/bits/stl_tree.h **** 
2083:/usr/include/c++/6/bits/stl_tree.h **** 	if (__res.second)
2084:/usr/include/c++/6/bits/stl_tree.h **** 	  return _M_insert_(__res.first, __res.second,
2085:/usr/include/c++/6/bits/stl_tree.h **** 			    _GLIBCXX_FORWARD(_Arg, __v),
2086:/usr/include/c++/6/bits/stl_tree.h **** 			    __node_gen);
2087:/usr/include/c++/6/bits/stl_tree.h **** 
2088:/usr/include/c++/6/bits/stl_tree.h **** 	return _M_insert_equal_lower(_GLIBCXX_FORWARD(_Arg, __v));
2089:/usr/include/c++/6/bits/stl_tree.h ****       }
2090:/usr/include/c++/6/bits/stl_tree.h **** 
2091:/usr/include/c++/6/bits/stl_tree.h **** #if __cplusplus >= 201103L
2092:/usr/include/c++/6/bits/stl_tree.h ****   template<typename _Key, typename _Val, typename _KeyOfValue,
2093:/usr/include/c++/6/bits/stl_tree.h ****            typename _Compare, typename _Alloc>
2094:/usr/include/c++/6/bits/stl_tree.h ****     typename _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::iterator
2095:/usr/include/c++/6/bits/stl_tree.h ****     _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
2096:/usr/include/c++/6/bits/stl_tree.h ****     _M_insert_node(_Base_ptr __x, _Base_ptr __p, _Link_type __z)
2097:/usr/include/c++/6/bits/stl_tree.h ****     {
2098:/usr/include/c++/6/bits/stl_tree.h ****       bool __insert_left = (__x != 0 || __p == _M_end()
2099:/usr/include/c++/6/bits/stl_tree.h **** 			    || _M_impl._M_key_compare(_S_key(__z),
2100:/usr/include/c++/6/bits/stl_tree.h **** 						      _S_key(__p)));
2101:/usr/include/c++/6/bits/stl_tree.h **** 
2102:/usr/include/c++/6/bits/stl_tree.h ****       _Rb_tree_insert_and_rebalance(__insert_left, __z, __p,
2103:/usr/include/c++/6/bits/stl_tree.h **** 				    this->_M_impl._M_header);
2104:/usr/include/c++/6/bits/stl_tree.h ****       ++_M_impl._M_node_count;
2105:/usr/include/c++/6/bits/stl_tree.h ****       return iterator(__z);
2106:/usr/include/c++/6/bits/stl_tree.h ****     }
2107:/usr/include/c++/6/bits/stl_tree.h **** 
2108:/usr/include/c++/6/bits/stl_tree.h ****   template<typename _Key, typename _Val, typename _KeyOfValue,
2109:/usr/include/c++/6/bits/stl_tree.h ****            typename _Compare, typename _Alloc>
2110:/usr/include/c++/6/bits/stl_tree.h ****     typename _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::iterator
2111:/usr/include/c++/6/bits/stl_tree.h ****     _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
2112:/usr/include/c++/6/bits/stl_tree.h ****     _M_insert_lower_node(_Base_ptr __p, _Link_type __z)
2113:/usr/include/c++/6/bits/stl_tree.h ****     {
2114:/usr/include/c++/6/bits/stl_tree.h ****       bool __insert_left = (__p == _M_end()
2115:/usr/include/c++/6/bits/stl_tree.h **** 			    || !_M_impl._M_key_compare(_S_key(__p),
2116:/usr/include/c++/6/bits/stl_tree.h **** 						       _S_key(__z)));
2117:/usr/include/c++/6/bits/stl_tree.h **** 
2118:/usr/include/c++/6/bits/stl_tree.h ****       _Rb_tree_insert_and_rebalance(__insert_left, __z, __p,
2119:/usr/include/c++/6/bits/stl_tree.h **** 				    this->_M_impl._M_header);
2120:/usr/include/c++/6/bits/stl_tree.h ****       ++_M_impl._M_node_count;
2121:/usr/include/c++/6/bits/stl_tree.h ****       return iterator(__z);
2122:/usr/include/c++/6/bits/stl_tree.h ****     }
2123:/usr/include/c++/6/bits/stl_tree.h **** 
2124:/usr/include/c++/6/bits/stl_tree.h ****   template<typename _Key, typename _Val, typename _KeyOfValue,
2125:/usr/include/c++/6/bits/stl_tree.h ****            typename _Compare, typename _Alloc>
2126:/usr/include/c++/6/bits/stl_tree.h ****     typename _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::iterator
2127:/usr/include/c++/6/bits/stl_tree.h ****     _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
2128:/usr/include/c++/6/bits/stl_tree.h ****     _M_insert_equal_lower_node(_Link_type __z)
2129:/usr/include/c++/6/bits/stl_tree.h ****     {
2130:/usr/include/c++/6/bits/stl_tree.h ****       _Link_type __x = _M_begin();
2131:/usr/include/c++/6/bits/stl_tree.h ****       _Base_ptr __y = _M_end();
GAS LISTING /tmp/ccsIN87E.s 			page 401


2132:/usr/include/c++/6/bits/stl_tree.h ****       while (__x != 0)
2133:/usr/include/c++/6/bits/stl_tree.h **** 	{
2134:/usr/include/c++/6/bits/stl_tree.h **** 	  __y = __x;
2135:/usr/include/c++/6/bits/stl_tree.h **** 	  __x = !_M_impl._M_key_compare(_S_key(__x), _S_key(__z)) ?
2136:/usr/include/c++/6/bits/stl_tree.h **** 	        _S_left(__x) : _S_right(__x);
2137:/usr/include/c++/6/bits/stl_tree.h **** 	}
2138:/usr/include/c++/6/bits/stl_tree.h ****       return _M_insert_lower_node(__y, __z);
2139:/usr/include/c++/6/bits/stl_tree.h ****     }
2140:/usr/include/c++/6/bits/stl_tree.h **** 
2141:/usr/include/c++/6/bits/stl_tree.h ****   template<typename _Key, typename _Val, typename _KeyOfValue,
2142:/usr/include/c++/6/bits/stl_tree.h ****            typename _Compare, typename _Alloc>
2143:/usr/include/c++/6/bits/stl_tree.h ****     template<typename... _Args>
2144:/usr/include/c++/6/bits/stl_tree.h ****       pair<typename _Rb_tree<_Key, _Val, _KeyOfValue,
2145:/usr/include/c++/6/bits/stl_tree.h **** 			     _Compare, _Alloc>::iterator, bool>
2146:/usr/include/c++/6/bits/stl_tree.h ****       _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
2147:/usr/include/c++/6/bits/stl_tree.h ****       _M_emplace_unique(_Args&&... __args)
2148:/usr/include/c++/6/bits/stl_tree.h ****       {
2149:/usr/include/c++/6/bits/stl_tree.h **** 	_Link_type __z = _M_create_node(std::forward<_Args>(__args)...);
2150:/usr/include/c++/6/bits/stl_tree.h **** 
2151:/usr/include/c++/6/bits/stl_tree.h **** 	__try
2152:/usr/include/c++/6/bits/stl_tree.h **** 	  {
2153:/usr/include/c++/6/bits/stl_tree.h **** 	    typedef pair<iterator, bool> _Res;
2154:/usr/include/c++/6/bits/stl_tree.h **** 	    auto __res = _M_get_insert_unique_pos(_S_key(__z));
2155:/usr/include/c++/6/bits/stl_tree.h **** 	    if (__res.second)
2156:/usr/include/c++/6/bits/stl_tree.h **** 	      return _Res(_M_insert_node(__res.first, __res.second, __z), true);
2157:/usr/include/c++/6/bits/stl_tree.h **** 	
2158:/usr/include/c++/6/bits/stl_tree.h **** 	    _M_drop_node(__z);
2159:/usr/include/c++/6/bits/stl_tree.h **** 	    return _Res(iterator(__res.first), false);
2160:/usr/include/c++/6/bits/stl_tree.h **** 	  }
2161:/usr/include/c++/6/bits/stl_tree.h **** 	__catch(...)
2162:/usr/include/c++/6/bits/stl_tree.h **** 	  {
2163:/usr/include/c++/6/bits/stl_tree.h **** 	    _M_drop_node(__z);
2164:/usr/include/c++/6/bits/stl_tree.h **** 	    __throw_exception_again;
2165:/usr/include/c++/6/bits/stl_tree.h **** 	  }
2166:/usr/include/c++/6/bits/stl_tree.h ****       }
2167:/usr/include/c++/6/bits/stl_tree.h **** 
2168:/usr/include/c++/6/bits/stl_tree.h ****   template<typename _Key, typename _Val, typename _KeyOfValue,
2169:/usr/include/c++/6/bits/stl_tree.h ****            typename _Compare, typename _Alloc>
2170:/usr/include/c++/6/bits/stl_tree.h ****     template<typename... _Args>
2171:/usr/include/c++/6/bits/stl_tree.h ****       typename _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::iterator
2172:/usr/include/c++/6/bits/stl_tree.h ****       _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
2173:/usr/include/c++/6/bits/stl_tree.h ****       _M_emplace_equal(_Args&&... __args)
2174:/usr/include/c++/6/bits/stl_tree.h ****       {
2175:/usr/include/c++/6/bits/stl_tree.h **** 	_Link_type __z = _M_create_node(std::forward<_Args>(__args)...);
2176:/usr/include/c++/6/bits/stl_tree.h **** 
2177:/usr/include/c++/6/bits/stl_tree.h **** 	__try
2178:/usr/include/c++/6/bits/stl_tree.h **** 	  {
2179:/usr/include/c++/6/bits/stl_tree.h **** 	    auto __res = _M_get_insert_equal_pos(_S_key(__z));
2180:/usr/include/c++/6/bits/stl_tree.h **** 	    return _M_insert_node(__res.first, __res.second, __z);
2181:/usr/include/c++/6/bits/stl_tree.h **** 	  }
2182:/usr/include/c++/6/bits/stl_tree.h **** 	__catch(...)
2183:/usr/include/c++/6/bits/stl_tree.h **** 	  {
2184:/usr/include/c++/6/bits/stl_tree.h **** 	    _M_drop_node(__z);
2185:/usr/include/c++/6/bits/stl_tree.h **** 	    __throw_exception_again;
2186:/usr/include/c++/6/bits/stl_tree.h **** 	  }
2187:/usr/include/c++/6/bits/stl_tree.h ****       }
2188:/usr/include/c++/6/bits/stl_tree.h **** 
GAS LISTING /tmp/ccsIN87E.s 			page 402


2189:/usr/include/c++/6/bits/stl_tree.h ****   template<typename _Key, typename _Val, typename _KeyOfValue,
2190:/usr/include/c++/6/bits/stl_tree.h ****            typename _Compare, typename _Alloc>
2191:/usr/include/c++/6/bits/stl_tree.h ****     template<typename... _Args>
2192:/usr/include/c++/6/bits/stl_tree.h ****       typename _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::iterator
2193:/usr/include/c++/6/bits/stl_tree.h ****       _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
2194:/usr/include/c++/6/bits/stl_tree.h ****       _M_emplace_hint_unique(const_iterator __pos, _Args&&... __args)
2195:/usr/include/c++/6/bits/stl_tree.h ****       {
2196:/usr/include/c++/6/bits/stl_tree.h **** 	_Link_type __z = _M_create_node(std::forward<_Args>(__args)...);
2197:/usr/include/c++/6/bits/stl_tree.h **** 
2198:/usr/include/c++/6/bits/stl_tree.h **** 	__try
2199:/usr/include/c++/6/bits/stl_tree.h **** 	  {
2200:/usr/include/c++/6/bits/stl_tree.h **** 	    auto __res = _M_get_insert_hint_unique_pos(__pos, _S_key(__z));
2201:/usr/include/c++/6/bits/stl_tree.h **** 
2202:/usr/include/c++/6/bits/stl_tree.h **** 	    if (__res.second)
2203:/usr/include/c++/6/bits/stl_tree.h **** 	      return _M_insert_node(__res.first, __res.second, __z);
2204:/usr/include/c++/6/bits/stl_tree.h **** 
2205:/usr/include/c++/6/bits/stl_tree.h **** 	    _M_drop_node(__z);
2206:/usr/include/c++/6/bits/stl_tree.h **** 	    return iterator(__res.first);
2207:/usr/include/c++/6/bits/stl_tree.h **** 	  }
2208:/usr/include/c++/6/bits/stl_tree.h **** 	__catch(...)
2209:/usr/include/c++/6/bits/stl_tree.h **** 	  {
2210:/usr/include/c++/6/bits/stl_tree.h **** 	    _M_drop_node(__z);
2211:/usr/include/c++/6/bits/stl_tree.h **** 	    __throw_exception_again;
2212:/usr/include/c++/6/bits/stl_tree.h **** 	  }
2213:/usr/include/c++/6/bits/stl_tree.h ****       }
2214:/usr/include/c++/6/bits/stl_tree.h **** 
2215:/usr/include/c++/6/bits/stl_tree.h ****   template<typename _Key, typename _Val, typename _KeyOfValue,
2216:/usr/include/c++/6/bits/stl_tree.h ****            typename _Compare, typename _Alloc>
2217:/usr/include/c++/6/bits/stl_tree.h ****     template<typename... _Args>
2218:/usr/include/c++/6/bits/stl_tree.h ****       typename _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::iterator
2219:/usr/include/c++/6/bits/stl_tree.h ****       _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
2220:/usr/include/c++/6/bits/stl_tree.h ****       _M_emplace_hint_equal(const_iterator __pos, _Args&&... __args)
2221:/usr/include/c++/6/bits/stl_tree.h ****       {
2222:/usr/include/c++/6/bits/stl_tree.h **** 	_Link_type __z = _M_create_node(std::forward<_Args>(__args)...);
2223:/usr/include/c++/6/bits/stl_tree.h **** 
2224:/usr/include/c++/6/bits/stl_tree.h **** 	__try
2225:/usr/include/c++/6/bits/stl_tree.h **** 	  {
2226:/usr/include/c++/6/bits/stl_tree.h **** 	    auto __res = _M_get_insert_hint_equal_pos(__pos, _S_key(__z));
2227:/usr/include/c++/6/bits/stl_tree.h **** 
2228:/usr/include/c++/6/bits/stl_tree.h **** 	    if (__res.second)
2229:/usr/include/c++/6/bits/stl_tree.h **** 	      return _M_insert_node(__res.first, __res.second, __z);
2230:/usr/include/c++/6/bits/stl_tree.h **** 
2231:/usr/include/c++/6/bits/stl_tree.h **** 	    return _M_insert_equal_lower_node(__z);
2232:/usr/include/c++/6/bits/stl_tree.h **** 	  }
2233:/usr/include/c++/6/bits/stl_tree.h **** 	__catch(...)
2234:/usr/include/c++/6/bits/stl_tree.h **** 	  {
2235:/usr/include/c++/6/bits/stl_tree.h **** 	    _M_drop_node(__z);
2236:/usr/include/c++/6/bits/stl_tree.h **** 	    __throw_exception_again;
2237:/usr/include/c++/6/bits/stl_tree.h **** 	  }
2238:/usr/include/c++/6/bits/stl_tree.h ****       }
2239:/usr/include/c++/6/bits/stl_tree.h **** #endif
2240:/usr/include/c++/6/bits/stl_tree.h **** 
2241:/usr/include/c++/6/bits/stl_tree.h ****   template<typename _Key, typename _Val, typename _KoV,
2242:/usr/include/c++/6/bits/stl_tree.h ****            typename _Cmp, typename _Alloc>
2243:/usr/include/c++/6/bits/stl_tree.h ****     template<class _II>
2244:/usr/include/c++/6/bits/stl_tree.h ****       void
2245:/usr/include/c++/6/bits/stl_tree.h ****       _Rb_tree<_Key, _Val, _KoV, _Cmp, _Alloc>::
GAS LISTING /tmp/ccsIN87E.s 			page 403


2246:/usr/include/c++/6/bits/stl_tree.h ****       _M_insert_unique(_II __first, _II __last)
2247:/usr/include/c++/6/bits/stl_tree.h ****       {
2248:/usr/include/c++/6/bits/stl_tree.h **** 	_Alloc_node __an(*this);
2249:/usr/include/c++/6/bits/stl_tree.h **** 	for (; __first != __last; ++__first)
2250:/usr/include/c++/6/bits/stl_tree.h **** 	  _M_insert_unique_(end(), *__first, __an);
2251:/usr/include/c++/6/bits/stl_tree.h ****       }
2252:/usr/include/c++/6/bits/stl_tree.h **** 
2253:/usr/include/c++/6/bits/stl_tree.h ****   template<typename _Key, typename _Val, typename _KoV,
2254:/usr/include/c++/6/bits/stl_tree.h ****            typename _Cmp, typename _Alloc>
2255:/usr/include/c++/6/bits/stl_tree.h ****     template<class _II>
2256:/usr/include/c++/6/bits/stl_tree.h ****       void
2257:/usr/include/c++/6/bits/stl_tree.h ****       _Rb_tree<_Key, _Val, _KoV, _Cmp, _Alloc>::
2258:/usr/include/c++/6/bits/stl_tree.h ****       _M_insert_equal(_II __first, _II __last)
2259:/usr/include/c++/6/bits/stl_tree.h ****       {
2260:/usr/include/c++/6/bits/stl_tree.h **** 	_Alloc_node __an(*this);
2261:/usr/include/c++/6/bits/stl_tree.h **** 	for (; __first != __last; ++__first)
2262:/usr/include/c++/6/bits/stl_tree.h **** 	  _M_insert_equal_(end(), *__first, __an);
2263:/usr/include/c++/6/bits/stl_tree.h ****       }
2264:/usr/include/c++/6/bits/stl_tree.h **** 
2265:/usr/include/c++/6/bits/stl_tree.h ****   template<typename _Key, typename _Val, typename _KeyOfValue,
2266:/usr/include/c++/6/bits/stl_tree.h ****            typename _Compare, typename _Alloc>
2267:/usr/include/c++/6/bits/stl_tree.h ****     void
2268:/usr/include/c++/6/bits/stl_tree.h ****     _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
2269:/usr/include/c++/6/bits/stl_tree.h ****     _M_erase_aux(const_iterator __position)
2270:/usr/include/c++/6/bits/stl_tree.h ****     {
2271:/usr/include/c++/6/bits/stl_tree.h ****       _Link_type __y =
2272:/usr/include/c++/6/bits/stl_tree.h **** 	static_cast<_Link_type>(_Rb_tree_rebalance_for_erase
2273:/usr/include/c++/6/bits/stl_tree.h **** 				(const_cast<_Base_ptr>(__position._M_node),
2274:/usr/include/c++/6/bits/stl_tree.h **** 				 this->_M_impl._M_header));
2275:/usr/include/c++/6/bits/stl_tree.h ****       _M_drop_node(__y);
2276:/usr/include/c++/6/bits/stl_tree.h ****       --_M_impl._M_node_count;
2277:/usr/include/c++/6/bits/stl_tree.h ****     }
2278:/usr/include/c++/6/bits/stl_tree.h **** 
2279:/usr/include/c++/6/bits/stl_tree.h ****   template<typename _Key, typename _Val, typename _KeyOfValue,
2280:/usr/include/c++/6/bits/stl_tree.h ****            typename _Compare, typename _Alloc>
2281:/usr/include/c++/6/bits/stl_tree.h ****     void
2282:/usr/include/c++/6/bits/stl_tree.h ****     _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
2283:/usr/include/c++/6/bits/stl_tree.h ****     _M_erase_aux(const_iterator __first, const_iterator __last)
2284:/usr/include/c++/6/bits/stl_tree.h ****     {
2285:/usr/include/c++/6/bits/stl_tree.h ****       if (__first == begin() && __last == end())
2286:/usr/include/c++/6/bits/stl_tree.h **** 	clear();
2287:/usr/include/c++/6/bits/stl_tree.h ****       else
2288:/usr/include/c++/6/bits/stl_tree.h **** 	while (__first != __last)
2289:/usr/include/c++/6/bits/stl_tree.h **** 	  erase(__first++);
2290:/usr/include/c++/6/bits/stl_tree.h ****     }
2291:/usr/include/c++/6/bits/stl_tree.h **** 
2292:/usr/include/c++/6/bits/stl_tree.h ****   template<typename _Key, typename _Val, typename _KeyOfValue,
2293:/usr/include/c++/6/bits/stl_tree.h ****            typename _Compare, typename _Alloc>
2294:/usr/include/c++/6/bits/stl_tree.h ****     typename _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::size_type
2295:/usr/include/c++/6/bits/stl_tree.h ****     _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
2296:/usr/include/c++/6/bits/stl_tree.h ****     erase(const _Key& __x)
2297:/usr/include/c++/6/bits/stl_tree.h ****     {
2298:/usr/include/c++/6/bits/stl_tree.h ****       pair<iterator, iterator> __p = equal_range(__x);
2299:/usr/include/c++/6/bits/stl_tree.h ****       const size_type __old_size = size();
2300:/usr/include/c++/6/bits/stl_tree.h ****       erase(__p.first, __p.second);
2301:/usr/include/c++/6/bits/stl_tree.h ****       return __old_size - size();
2302:/usr/include/c++/6/bits/stl_tree.h ****     }
GAS LISTING /tmp/ccsIN87E.s 			page 404


2303:/usr/include/c++/6/bits/stl_tree.h **** 
2304:/usr/include/c++/6/bits/stl_tree.h ****   template<typename _Key, typename _Val, typename _KeyOfValue,
2305:/usr/include/c++/6/bits/stl_tree.h ****            typename _Compare, typename _Alloc>
2306:/usr/include/c++/6/bits/stl_tree.h ****     void
2307:/usr/include/c++/6/bits/stl_tree.h ****     _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
2308:/usr/include/c++/6/bits/stl_tree.h ****     erase(const _Key* __first, const _Key* __last)
2309:/usr/include/c++/6/bits/stl_tree.h ****     {
2310:/usr/include/c++/6/bits/stl_tree.h ****       while (__first != __last)
2311:/usr/include/c++/6/bits/stl_tree.h **** 	erase(*__first++);
2312:/usr/include/c++/6/bits/stl_tree.h ****     }
2313:/usr/include/c++/6/bits/stl_tree.h **** 
2314:/usr/include/c++/6/bits/stl_tree.h ****   template<typename _Key, typename _Val, typename _KeyOfValue,
2315:/usr/include/c++/6/bits/stl_tree.h ****            typename _Compare, typename _Alloc>
2316:/usr/include/c++/6/bits/stl_tree.h ****     typename _Rb_tree<_Key, _Val, _KeyOfValue,
2317:/usr/include/c++/6/bits/stl_tree.h **** 		      _Compare, _Alloc>::iterator
2318:/usr/include/c++/6/bits/stl_tree.h ****     _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 8186              		.loc 27 2318 0
 8187              		.cfi_startproc
 8188              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 8189              		.cfi_lsda 0x1b,.LLSDA12655
 8190 0000 55       		pushq	%rbp
 8191              		.cfi_def_cfa_offset 16
 8192              		.cfi_offset 6, -16
 8193 0001 4889E5   		movq	%rsp, %rbp
 8194              		.cfi_def_cfa_register 6
 8195 0004 53       		pushq	%rbx
 8196 0005 4883EC28 		subq	$40, %rsp
 8197              		.cfi_offset 3, -24
 8198 0009 48897DD8 		movq	%rdi, -40(%rbp)
 8199 000d 488975D0 		movq	%rsi, -48(%rbp)
2319:/usr/include/c++/6/bits/stl_tree.h ****     find(const _Key& __k)
2320:/usr/include/c++/6/bits/stl_tree.h ****     {
2321:/usr/include/c++/6/bits/stl_tree.h ****       iterator __j = _M_lower_bound(_M_begin(), _M_end(), __k);
 8200              		.loc 27 2321 0
 8201 0011 488B45D8 		movq	-40(%rbp), %rax
 8202 0015 4889C7   		movq	%rax, %rdi
 8203 0018 E8000000 		call	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt1
 8203      00
 8204 001d 4889C3   		movq	%rax, %rbx
 8205 0020 488B45D8 		movq	-40(%rbp), %rax
 8206 0024 4889C7   		movq	%rax, %rdi
 8207 0027 E8000000 		call	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt1
 8207      00
 8208 002c 4889C6   		movq	%rax, %rsi
 8209 002f 488B55D0 		movq	-48(%rbp), %rdx
 8210 0033 488B45D8 		movq	-40(%rbp), %rax
 8211 0037 4889D1   		movq	%rdx, %rcx
 8212 003a 4889DA   		movq	%rbx, %rdx
 8213 003d 4889C7   		movq	%rax, %rdi
 8214              	.LEHB60:
 8215 0040 E8000000 		call	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt1
 8215      00
 8216              	.LEHE60:
 8217 0045 488945E0 		movq	%rax, -32(%rbp)
2322:/usr/include/c++/6/bits/stl_tree.h ****       return (__j == end()
 8218              		.loc 27 2322 0
 8219 0049 488B45D8 		movq	-40(%rbp), %rax
GAS LISTING /tmp/ccsIN87E.s 			page 405


 8220 004d 4889C7   		movq	%rax, %rdi
 8221 0050 E8000000 		call	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt1
 8221      00
 8222 0055 488945E8 		movq	%rax, -24(%rbp)
2323:/usr/include/c++/6/bits/stl_tree.h **** 	      || _M_impl._M_key_compare(__k,
2324:/usr/include/c++/6/bits/stl_tree.h **** 					_S_key(__j._M_node))) ? end() : __j;
 8223              		.loc 27 2324 0
 8224 0059 BB010000 		movl	$1, %ebx
 8224      00
2322:/usr/include/c++/6/bits/stl_tree.h ****       return (__j == end()
 8225              		.loc 27 2322 0
 8226 005e 488D55E8 		leaq	-24(%rbp), %rdx
 8227 0062 488D45E0 		leaq	-32(%rbp), %rax
 8228 0066 4889D6   		movq	%rdx, %rsi
 8229 0069 4889C7   		movq	%rax, %rdi
 8230 006c E8000000 		call	_ZNKSt17_Rb_tree_iteratorISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS1_8functionIFvS5
 8230      00
 8231              		.loc 27 2324 0
 8232 0071 84C0     		testb	%al, %al
 8233 0073 7526     		jne	.L370
 8234              		.loc 27 2324 0 is_stmt 0 discriminator 2
 8235 0075 488B45E0 		movq	-32(%rbp), %rax
 8236 0079 4889C7   		movq	%rax, %rdi
 8237              	.LEHB61:
 8238 007c E8000000 		call	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt1
 8238      00
 8239 0081 4889C2   		movq	%rax, %rdx
2323:/usr/include/c++/6/bits/stl_tree.h **** 	      || _M_impl._M_key_compare(__k,
 8240              		.loc 27 2323 0 is_stmt 1 discriminator 2
 8241 0084 488B45D8 		movq	-40(%rbp), %rax
 8242 0088 488B4DD0 		movq	-48(%rbp), %rcx
 8243 008c 4889CE   		movq	%rcx, %rsi
 8244 008f 4889C7   		movq	%rax, %rdi
 8245 0092 E8000000 		call	_ZNK3pmt10comparatorclERKN5boost13intrusive_ptrINS_8pmt_baseEEES6_
 8245      00
 8246              	.LEHE61:
2323:/usr/include/c++/6/bits/stl_tree.h **** 	      || _M_impl._M_key_compare(__k,
 8247              		.loc 27 2323 0 is_stmt 0 discriminator 3
 8248 0097 84C0     		testb	%al, %al
 8249 0099 740E     		je	.L371
 8250              	.L370:
 8251              		.loc 27 2324 0 is_stmt 1 discriminator 1
 8252 009b 488B45D8 		movq	-40(%rbp), %rax
 8253 009f 4889C7   		movq	%rax, %rdi
 8254 00a2 E8000000 		call	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt1
 8254      00
 8255 00a7 EB04     		jmp	.L378
 8256              	.L371:
 8257              		.loc 27 2324 0 is_stmt 0
 8258 00a9 488B45E0 		movq	-32(%rbp), %rax
 8259              	.L378:
2322:/usr/include/c++/6/bits/stl_tree.h ****       return (__j == end()
 8260              		.loc 27 2322 0 is_stmt 1
 8261 00ad 84DB     		testb	%bl, %bl
 8262              		.loc 27 2324 0
 8263 00af EB0B     		jmp	.L379
 8264              	.L377:
GAS LISTING /tmp/ccsIN87E.s 			page 406


2322:/usr/include/c++/6/bits/stl_tree.h ****       return (__j == end()
 8265              		.loc 27 2322 0
 8266 00b1 84DB     		testb	%bl, %bl
 8267              		.loc 27 2324 0
 8268 00b3 90       		nop
 8269 00b4 4889C7   		movq	%rax, %rdi
 8270              	.LEHB62:
 8271 00b7 E8000000 		call	_Unwind_Resume@PLT
 8271      00
 8272              	.LEHE62:
 8273              	.L379:
2325:/usr/include/c++/6/bits/stl_tree.h ****     }
 8274              		.loc 27 2325 0
 8275 00bc 4883C428 		addq	$40, %rsp
 8276 00c0 5B       		popq	%rbx
 8277 00c1 5D       		popq	%rbp
 8278              		.cfi_def_cfa 7, 8
 8279 00c2 C3       		ret
 8280              		.cfi_endproc
 8281              	.LFE12655:
 8282              		.section	.gcc_except_table
 8283              	.LLSDA12655:
 8284 0134 FF       		.byte	0xff
 8285 0135 FF       		.byte	0xff
 8286 0136 01       		.byte	0x1
 8287 0137 0E       		.uleb128 .LLSDACSE12655-.LLSDACSB12655
 8288              	.LLSDACSB12655:
 8289 0138 40       		.uleb128 .LEHB60-.LFB12655
 8290 0139 05       		.uleb128 .LEHE60-.LEHB60
 8291 013a 00       		.uleb128 0
 8292 013b 00       		.uleb128 0
 8293 013c 7C       		.uleb128 .LEHB61-.LFB12655
 8294 013d 1B       		.uleb128 .LEHE61-.LEHB61
 8295 013e B101     		.uleb128 .L377-.LFB12655
 8296 0140 00       		.uleb128 0
 8297 0141 B701     		.uleb128 .LEHB62-.LFB12655
 8298 0143 05       		.uleb128 .LEHE62-.LEHB62
 8299 0144 00       		.uleb128 0
 8300 0145 00       		.uleb128 0
 8301              	.LLSDACSE12655:
 8302              		.section	.text._ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFv
 8304              		.section	.text._ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFv
 8305              		.align 2
 8306              		.weak	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt
 8308              	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt10_Sele
 8309              	.LFB12656:
 892:/usr/include/c++/6/bits/stl_tree.h ****       { return iterator(&this->_M_impl._M_header); }
 8310              		.loc 27 892 0
 8311              		.cfi_startproc
 8312 0000 55       		pushq	%rbp
 8313              		.cfi_def_cfa_offset 16
 8314              		.cfi_offset 6, -16
 8315 0001 4889E5   		movq	%rsp, %rbp
 8316              		.cfi_def_cfa_register 6
 8317 0004 4883EC20 		subq	$32, %rsp
 8318 0008 48897DE8 		movq	%rdi, -24(%rbp)
 893:/usr/include/c++/6/bits/stl_tree.h **** 
GAS LISTING /tmp/ccsIN87E.s 			page 407


 8319              		.loc 27 893 0
 8320 000c 488B45E8 		movq	-24(%rbp), %rax
 8321 0010 488D5008 		leaq	8(%rax), %rdx
 8322 0014 488D45F8 		leaq	-8(%rbp), %rax
 8323 0018 4889D6   		movq	%rdx, %rsi
 8324 001b 4889C7   		movq	%rax, %rdi
 8325 001e E8000000 		call	_ZNSt17_Rb_tree_iteratorISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS1_8functionIFvS5_
 8325      00
 8326 0023 488B45F8 		movq	-8(%rbp), %rax
 8327 0027 C9       		leave
 8328              		.cfi_def_cfa 7, 8
 8329 0028 C3       		ret
 8330              		.cfi_endproc
 8331              	.LFE12656:
 8333              		.section	.text._ZNSt3mapIN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS0_8functionIFvS4_EEENS2_10compa
 8334              		.align 2
 8335              		.weak	_ZNSt3mapIN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS0_8functionIFvS4_EEENS2_10comparatorESaI
 8337              	_ZNSt3mapIN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS0_8functionIFvS4_EEENS2_10comparatorESaISt4pair
 8338              	.LFB12657:
1081:/usr/include/c++/6/bits/stl_map.h **** 
1082:/usr/include/c++/6/bits/stl_map.h **** #if __cplusplus > 201103L
1083:/usr/include/c++/6/bits/stl_map.h ****       template<typename _Kt>
1084:/usr/include/c++/6/bits/stl_map.h **** 	auto
1085:/usr/include/c++/6/bits/stl_map.h **** 	find(const _Kt& __x) -> decltype(_M_t._M_find_tr(__x))
1086:/usr/include/c++/6/bits/stl_map.h **** 	{ return _M_t._M_find_tr(__x); }
1087:/usr/include/c++/6/bits/stl_map.h **** #endif
1088:/usr/include/c++/6/bits/stl_map.h ****       //@}
1089:/usr/include/c++/6/bits/stl_map.h **** 
1090:/usr/include/c++/6/bits/stl_map.h ****       //@{
1091:/usr/include/c++/6/bits/stl_map.h ****       /**
1092:/usr/include/c++/6/bits/stl_map.h ****        *  @brief Tries to locate an element in a %map.
1093:/usr/include/c++/6/bits/stl_map.h ****        *  @param  __x  Key of (key, value) %pair to be located.
1094:/usr/include/c++/6/bits/stl_map.h ****        *  @return  Read-only (constant) iterator pointing to sought-after
1095:/usr/include/c++/6/bits/stl_map.h ****        *           element, or end() if not found.
1096:/usr/include/c++/6/bits/stl_map.h ****        *
1097:/usr/include/c++/6/bits/stl_map.h ****        *  This function takes a key and tries to locate the element with which
1098:/usr/include/c++/6/bits/stl_map.h ****        *  the key matches.  If successful the function returns a constant
1099:/usr/include/c++/6/bits/stl_map.h ****        *  iterator pointing to the sought after %pair. If unsuccessful it
1100:/usr/include/c++/6/bits/stl_map.h ****        *  returns the past-the-end ( @c end() ) iterator.
1101:/usr/include/c++/6/bits/stl_map.h ****        */
1102:/usr/include/c++/6/bits/stl_map.h **** 
1103:/usr/include/c++/6/bits/stl_map.h ****       const_iterator
1104:/usr/include/c++/6/bits/stl_map.h ****       find(const key_type& __x) const
1105:/usr/include/c++/6/bits/stl_map.h ****       { return _M_t.find(__x); }
1106:/usr/include/c++/6/bits/stl_map.h **** 
1107:/usr/include/c++/6/bits/stl_map.h **** #if __cplusplus > 201103L
1108:/usr/include/c++/6/bits/stl_map.h ****       template<typename _Kt>
1109:/usr/include/c++/6/bits/stl_map.h **** 	auto
1110:/usr/include/c++/6/bits/stl_map.h **** 	find(const _Kt& __x) const -> decltype(_M_t._M_find_tr(__x))
1111:/usr/include/c++/6/bits/stl_map.h **** 	{ return _M_t._M_find_tr(__x); }
1112:/usr/include/c++/6/bits/stl_map.h **** #endif
1113:/usr/include/c++/6/bits/stl_map.h ****       //@}
1114:/usr/include/c++/6/bits/stl_map.h **** 
1115:/usr/include/c++/6/bits/stl_map.h ****       //@{
1116:/usr/include/c++/6/bits/stl_map.h ****       /**
1117:/usr/include/c++/6/bits/stl_map.h ****        *  @brief  Finds the number of elements with given key.
1118:/usr/include/c++/6/bits/stl_map.h ****        *  @param  __x  Key of (key, value) pairs to be located.
GAS LISTING /tmp/ccsIN87E.s 			page 408


1119:/usr/include/c++/6/bits/stl_map.h ****        *  @return  Number of elements with specified key.
1120:/usr/include/c++/6/bits/stl_map.h ****        *
1121:/usr/include/c++/6/bits/stl_map.h ****        *  This function only makes sense for multimaps; for map the result will
1122:/usr/include/c++/6/bits/stl_map.h ****        *  either be 0 (not present) or 1 (present).
1123:/usr/include/c++/6/bits/stl_map.h ****        */
1124:/usr/include/c++/6/bits/stl_map.h ****       size_type
1125:/usr/include/c++/6/bits/stl_map.h ****       count(const key_type& __x) const
1126:/usr/include/c++/6/bits/stl_map.h ****       { return _M_t.find(__x) == _M_t.end() ? 0 : 1; }
1127:/usr/include/c++/6/bits/stl_map.h **** 
1128:/usr/include/c++/6/bits/stl_map.h **** #if __cplusplus > 201103L
1129:/usr/include/c++/6/bits/stl_map.h ****       template<typename _Kt>
1130:/usr/include/c++/6/bits/stl_map.h **** 	auto
1131:/usr/include/c++/6/bits/stl_map.h **** 	count(const _Kt& __x) const -> decltype(_M_t._M_count_tr(__x))
1132:/usr/include/c++/6/bits/stl_map.h **** 	{ return _M_t._M_count_tr(__x); }
1133:/usr/include/c++/6/bits/stl_map.h **** #endif
1134:/usr/include/c++/6/bits/stl_map.h ****       //@}
1135:/usr/include/c++/6/bits/stl_map.h **** 
1136:/usr/include/c++/6/bits/stl_map.h ****       //@{
1137:/usr/include/c++/6/bits/stl_map.h ****       /**
1138:/usr/include/c++/6/bits/stl_map.h ****        *  @brief Finds the beginning of a subsequence matching given key.
1139:/usr/include/c++/6/bits/stl_map.h ****        *  @param  __x  Key of (key, value) pair to be located.
1140:/usr/include/c++/6/bits/stl_map.h ****        *  @return  Iterator pointing to first element equal to or greater
1141:/usr/include/c++/6/bits/stl_map.h ****        *           than key, or end().
1142:/usr/include/c++/6/bits/stl_map.h ****        *
1143:/usr/include/c++/6/bits/stl_map.h ****        *  This function returns the first element of a subsequence of elements
1144:/usr/include/c++/6/bits/stl_map.h ****        *  that matches the given key.  If unsuccessful it returns an iterator
1145:/usr/include/c++/6/bits/stl_map.h ****        *  pointing to the first element that has a greater value than given key
1146:/usr/include/c++/6/bits/stl_map.h ****        *  or end() if no such element exists.
1147:/usr/include/c++/6/bits/stl_map.h ****        */
1148:/usr/include/c++/6/bits/stl_map.h ****       iterator
1149:/usr/include/c++/6/bits/stl_map.h ****       lower_bound(const key_type& __x)
 8339              		.loc 26 1149 0
 8340              		.cfi_startproc
 8341 0000 55       		pushq	%rbp
 8342              		.cfi_def_cfa_offset 16
 8343              		.cfi_offset 6, -16
 8344 0001 4889E5   		movq	%rsp, %rbp
 8345              		.cfi_def_cfa_register 6
 8346 0004 4883EC10 		subq	$16, %rsp
 8347 0008 48897DF8 		movq	%rdi, -8(%rbp)
 8348 000c 488975F0 		movq	%rsi, -16(%rbp)
1150:/usr/include/c++/6/bits/stl_map.h ****       { return _M_t.lower_bound(__x); }
 8349              		.loc 26 1150 0
 8350 0010 488B45F8 		movq	-8(%rbp), %rax
 8351 0014 488B55F0 		movq	-16(%rbp), %rdx
 8352 0018 4889D6   		movq	%rdx, %rsi
 8353 001b 4889C7   		movq	%rax, %rdi
 8354 001e E8000000 		call	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt1
 8354      00
 8355 0023 C9       		leave
 8356              		.cfi_def_cfa 7, 8
 8357 0024 C3       		ret
 8358              		.cfi_endproc
 8359              	.LFE12657:
 8361              		.section	.text._ZNKSt17_Rb_tree_iteratorISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS1_8fun
 8362              		.align 2
 8363              		.weak	_ZNKSt17_Rb_tree_iteratorISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS1_8functionIFvS
GAS LISTING /tmp/ccsIN87E.s 			page 409


 8365              	_ZNKSt17_Rb_tree_iteratorISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS1_8functionIFvS5_EEEEE
 8366              	.LFB12658:
 237:/usr/include/c++/6/bits/stl_tree.h ****       { return _M_node == __x._M_node; }
 8367              		.loc 27 237 0
 8368              		.cfi_startproc
 8369 0000 55       		pushq	%rbp
 8370              		.cfi_def_cfa_offset 16
 8371              		.cfi_offset 6, -16
 8372 0001 4889E5   		movq	%rsp, %rbp
 8373              		.cfi_def_cfa_register 6
 8374 0004 48897DF8 		movq	%rdi, -8(%rbp)
 8375 0008 488975F0 		movq	%rsi, -16(%rbp)
 238:/usr/include/c++/6/bits/stl_tree.h **** 
 8376              		.loc 27 238 0
 8377 000c 488B45F8 		movq	-8(%rbp), %rax
 8378 0010 488B10   		movq	(%rax), %rdx
 8379 0013 488B45F0 		movq	-16(%rbp), %rax
 8380 0017 488B00   		movq	(%rax), %rax
 8381 001a 4839C2   		cmpq	%rax, %rdx
 8382 001d 0F94C0   		sete	%al
 8383 0020 5D       		popq	%rbp
 8384              		.cfi_def_cfa 7, 8
 8385 0021 C3       		ret
 8386              		.cfi_endproc
 8387              	.LFE12658:
 8389              		.section	.text._ZNKSt3mapIN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS0_8functionIFvS4_EEENS2_10comp
 8390              		.align 2
 8391              		.weak	_ZNKSt3mapIN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS0_8functionIFvS4_EEENS2_10comparatorESa
 8393              	_ZNKSt3mapIN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS0_8functionIFvS4_EEENS2_10comparatorESaISt4pai
 8394              	.LFB12659:
1052:/usr/include/c++/6/bits/stl_map.h ****       { return _M_t.key_comp(); }
 8395              		.loc 26 1052 0
 8396              		.cfi_startproc
 8397 0000 55       		pushq	%rbp
 8398              		.cfi_def_cfa_offset 16
 8399              		.cfi_offset 6, -16
 8400 0001 4889E5   		movq	%rsp, %rbp
 8401              		.cfi_def_cfa_register 6
 8402 0004 53       		pushq	%rbx
 8403 0005 4883EC18 		subq	$24, %rsp
 8404              		.cfi_offset 3, -24
 8405 0009 48897DE8 		movq	%rdi, -24(%rbp)
1053:/usr/include/c++/6/bits/stl_map.h **** 
 8406              		.loc 26 1053 0
 8407 000d 488B45E8 		movq	-24(%rbp), %rax
 8408 0011 4889C7   		movq	%rax, %rdi
 8409 0014 E8000000 		call	_ZNKSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt
 8409      00
 8410 0019 89D8     		movl	%ebx, %eax
 8411 001b 4883C418 		addq	$24, %rsp
 8412 001f 5B       		popq	%rbx
 8413 0020 5D       		popq	%rbp
 8414              		.cfi_def_cfa 7, 8
 8415 0021 C3       		ret
 8416              		.cfi_endproc
 8417              	.LFE12659:
 8419              		.section	.text._ZNKSt17_Rb_tree_iteratorISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS1_8fun
GAS LISTING /tmp/ccsIN87E.s 			page 410


 8420              		.align 2
 8421              		.weak	_ZNKSt17_Rb_tree_iteratorISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS1_8functionIFvS
 8423              	_ZNKSt17_Rb_tree_iteratorISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS1_8functionIFvS5_EEEEE
 8424              	.LFB12660:
 199:/usr/include/c++/6/bits/stl_tree.h ****       { return *static_cast<_Link_type>(_M_node)->_M_valptr(); }
 8425              		.loc 27 199 0
 8426              		.cfi_startproc
 8427 0000 55       		pushq	%rbp
 8428              		.cfi_def_cfa_offset 16
 8429              		.cfi_offset 6, -16
 8430 0001 4889E5   		movq	%rsp, %rbp
 8431              		.cfi_def_cfa_register 6
 8432 0004 4883EC10 		subq	$16, %rsp
 8433 0008 48897DF8 		movq	%rdi, -8(%rbp)
 200:/usr/include/c++/6/bits/stl_tree.h **** 
 8434              		.loc 27 200 0
 8435 000c 488B45F8 		movq	-8(%rbp), %rax
 8436 0010 488B00   		movq	(%rax), %rax
 8437 0013 4889C7   		movq	%rax, %rdi
 8438 0016 E8000000 		call	_ZNSt13_Rb_tree_nodeISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS1_8functionIFvS5_EEEE
 8438      00
 8439 001b C9       		leave
 8440              		.cfi_def_cfa 7, 8
 8441 001c C3       		ret
 8442              		.cfi_endproc
 8443              	.LFE12660:
 8445              		.section	.text._ZNSt23_Rb_tree_const_iteratorISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS1
 8446              		.align 2
 8447              		.weak	_ZNSt23_Rb_tree_const_iteratorISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS1_8functio
 8449              	_ZNSt23_Rb_tree_const_iteratorISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS1_8functionIFvS5_
 8450              	.LFB12662:
 270:/usr/include/c++/6/bits/stl_tree.h ****       : _M_node(__it._M_node) { }
 8451              		.loc 27 270 0
 8452              		.cfi_startproc
 8453 0000 55       		pushq	%rbp
 8454              		.cfi_def_cfa_offset 16
 8455              		.cfi_offset 6, -16
 8456 0001 4889E5   		movq	%rsp, %rbp
 8457              		.cfi_def_cfa_register 6
 8458 0004 48897DF8 		movq	%rdi, -8(%rbp)
 8459 0008 488975F0 		movq	%rsi, -16(%rbp)
 8460              	.LBB81:
 271:/usr/include/c++/6/bits/stl_tree.h **** 
 8461              		.loc 27 271 0
 8462 000c 488B45F0 		movq	-16(%rbp), %rax
 8463 0010 488B10   		movq	(%rax), %rdx
 8464 0013 488B45F8 		movq	-8(%rbp), %rax
 8465 0017 488910   		movq	%rdx, (%rax)
 8466              	.LBE81:
 8467 001a 90       		nop
 8468 001b 5D       		popq	%rbp
 8469              		.cfi_def_cfa 7, 8
 8470 001c C3       		ret
 8471              		.cfi_endproc
 8472              	.LFE12662:
 8474              		.weak	_ZNSt23_Rb_tree_const_iteratorISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS1_8functio
 8475              		.set	_ZNSt23_Rb_tree_const_iteratorISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS1_8function
GAS LISTING /tmp/ccsIN87E.s 			page 411


 8476              		.section	.text._ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE,"axG"
 8477              		.weak	_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE
 8479              	_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE:
 8480              	.LFB12665:
 8481              		.file 33 "/usr/include/c++/6/bits/move.h"
   1:/usr/include/c++/6/bits/move.h **** // Move, forward and identity for C++0x + swap -*- C++ -*-
   2:/usr/include/c++/6/bits/move.h **** 
   3:/usr/include/c++/6/bits/move.h **** // Copyright (C) 2007-2016 Free Software Foundation, Inc.
   4:/usr/include/c++/6/bits/move.h **** //
   5:/usr/include/c++/6/bits/move.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/6/bits/move.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/6/bits/move.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/6/bits/move.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/6/bits/move.h **** // any later version.
  10:/usr/include/c++/6/bits/move.h **** 
  11:/usr/include/c++/6/bits/move.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/6/bits/move.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/6/bits/move.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/6/bits/move.h **** // GNU General Public License for more details.
  15:/usr/include/c++/6/bits/move.h **** 
  16:/usr/include/c++/6/bits/move.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/6/bits/move.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/6/bits/move.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/6/bits/move.h **** 
  20:/usr/include/c++/6/bits/move.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/6/bits/move.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/6/bits/move.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/6/bits/move.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/6/bits/move.h **** 
  25:/usr/include/c++/6/bits/move.h **** /** @file bits/move.h
  26:/usr/include/c++/6/bits/move.h ****  *  This is an internal header file, included by other library headers.
  27:/usr/include/c++/6/bits/move.h ****  *  Do not attempt to use it directly. @headername{utility}
  28:/usr/include/c++/6/bits/move.h ****  */
  29:/usr/include/c++/6/bits/move.h **** 
  30:/usr/include/c++/6/bits/move.h **** #ifndef _MOVE_H
  31:/usr/include/c++/6/bits/move.h **** #define _MOVE_H 1
  32:/usr/include/c++/6/bits/move.h **** 
  33:/usr/include/c++/6/bits/move.h **** #include <bits/c++config.h>
  34:/usr/include/c++/6/bits/move.h **** #include <bits/concept_check.h>
  35:/usr/include/c++/6/bits/move.h **** 
  36:/usr/include/c++/6/bits/move.h **** namespace std _GLIBCXX_VISIBILITY(default)
  37:/usr/include/c++/6/bits/move.h **** {
  38:/usr/include/c++/6/bits/move.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  39:/usr/include/c++/6/bits/move.h **** 
  40:/usr/include/c++/6/bits/move.h ****   // Used, in C++03 mode too, by allocators, etc.
  41:/usr/include/c++/6/bits/move.h ****   /**
  42:/usr/include/c++/6/bits/move.h ****    *  @brief Same as C++11 std::addressof
  43:/usr/include/c++/6/bits/move.h ****    *  @ingroup utilities
  44:/usr/include/c++/6/bits/move.h ****    */
  45:/usr/include/c++/6/bits/move.h ****   template<typename _Tp>
  46:/usr/include/c++/6/bits/move.h ****     inline _Tp*
  47:/usr/include/c++/6/bits/move.h ****     __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
  48:/usr/include/c++/6/bits/move.h ****     {
  49:/usr/include/c++/6/bits/move.h ****       return reinterpret_cast<_Tp*>
  50:/usr/include/c++/6/bits/move.h **** 	(&const_cast<char&>(reinterpret_cast<const volatile char&>(__r)));
  51:/usr/include/c++/6/bits/move.h ****     }
  52:/usr/include/c++/6/bits/move.h **** 
GAS LISTING /tmp/ccsIN87E.s 			page 412


  53:/usr/include/c++/6/bits/move.h **** _GLIBCXX_END_NAMESPACE_VERSION
  54:/usr/include/c++/6/bits/move.h **** } // namespace
  55:/usr/include/c++/6/bits/move.h **** 
  56:/usr/include/c++/6/bits/move.h **** #if __cplusplus >= 201103L
  57:/usr/include/c++/6/bits/move.h **** #include <type_traits> // Brings in std::declval too.
  58:/usr/include/c++/6/bits/move.h **** 
  59:/usr/include/c++/6/bits/move.h **** namespace std _GLIBCXX_VISIBILITY(default)
  60:/usr/include/c++/6/bits/move.h **** {
  61:/usr/include/c++/6/bits/move.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  62:/usr/include/c++/6/bits/move.h **** 
  63:/usr/include/c++/6/bits/move.h ****   /**
  64:/usr/include/c++/6/bits/move.h ****    *  @addtogroup utilities
  65:/usr/include/c++/6/bits/move.h ****    *  @{
  66:/usr/include/c++/6/bits/move.h ****    */
  67:/usr/include/c++/6/bits/move.h **** 
  68:/usr/include/c++/6/bits/move.h ****   /**
  69:/usr/include/c++/6/bits/move.h ****    *  @brief  Forward an lvalue.
  70:/usr/include/c++/6/bits/move.h ****    *  @return The parameter cast to the specified type.
  71:/usr/include/c++/6/bits/move.h ****    *
  72:/usr/include/c++/6/bits/move.h ****    *  This function is used to implement "perfect forwarding".
  73:/usr/include/c++/6/bits/move.h ****    */
  74:/usr/include/c++/6/bits/move.h ****   template<typename _Tp>
  75:/usr/include/c++/6/bits/move.h ****     constexpr _Tp&&
  76:/usr/include/c++/6/bits/move.h ****     forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8482              		.loc 33 76 0
 8483              		.cfi_startproc
 8484 0000 55       		pushq	%rbp
 8485              		.cfi_def_cfa_offset 16
 8486              		.cfi_offset 6, -16
 8487 0001 4889E5   		movq	%rsp, %rbp
 8488              		.cfi_def_cfa_register 6
 8489 0004 48897DF8 		movq	%rdi, -8(%rbp)
  77:/usr/include/c++/6/bits/move.h ****     { return static_cast<_Tp&&>(__t); }
 8490              		.loc 33 77 0
 8491 0008 488B45F8 		movq	-8(%rbp), %rax
 8492 000c 5D       		popq	%rbp
 8493              		.cfi_def_cfa 7, 8
 8494 000d C3       		ret
 8495              		.cfi_endproc
 8496              	.LFE12665:
 8498              		.section	.text._ZSt7forwardISt5tupleIJRKN5boost13intrusive_ptrIN3pmt8pmt_baseEEEEEEOT_RNSt16remove
 8499              		.weak	_ZSt7forwardISt5tupleIJRKN5boost13intrusive_ptrIN3pmt8pmt_baseEEEEEEOT_RNSt16remove_referenc
 8501              	_ZSt7forwardISt5tupleIJRKN5boost13intrusive_ptrIN3pmt8pmt_baseEEEEEEOT_RNSt16remove_referenceIS9_E4
 8502              	.LFB12666:
  76:/usr/include/c++/6/bits/move.h ****     { return static_cast<_Tp&&>(__t); }
 8503              		.loc 33 76 0
 8504              		.cfi_startproc
 8505 0000 55       		pushq	%rbp
 8506              		.cfi_def_cfa_offset 16
 8507              		.cfi_offset 6, -16
 8508 0001 4889E5   		movq	%rsp, %rbp
 8509              		.cfi_def_cfa_register 6
 8510 0004 48897DF8 		movq	%rdi, -8(%rbp)
 8511              		.loc 33 77 0
 8512 0008 488B45F8 		movq	-8(%rbp), %rax
 8513 000c 5D       		popq	%rbp
 8514              		.cfi_def_cfa 7, 8
GAS LISTING /tmp/ccsIN87E.s 			page 413


 8515 000d C3       		ret
 8516              		.cfi_endproc
 8517              	.LFE12666:
 8519              		.section	.text._ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE,"axG",@progbits,_ZSt
 8520              		.weak	_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE
 8522              	_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE:
 8523              	.LFB12667:
  76:/usr/include/c++/6/bits/move.h ****     { return static_cast<_Tp&&>(__t); }
 8524              		.loc 33 76 0
 8525              		.cfi_startproc
 8526 0000 55       		pushq	%rbp
 8527              		.cfi_def_cfa_offset 16
 8528              		.cfi_offset 6, -16
 8529 0001 4889E5   		movq	%rsp, %rbp
 8530              		.cfi_def_cfa_register 6
 8531 0004 48897DF8 		movq	%rdi, -8(%rbp)
 8532              		.loc 33 77 0
 8533 0008 488B45F8 		movq	-8(%rbp), %rax
 8534 000c 5D       		popq	%rbp
 8535              		.cfi_def_cfa 7, 8
 8536 000d C3       		ret
 8537              		.cfi_endproc
 8538              	.LFE12667:
 8540              		.section	.text._ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFv
 8541              		.align 2
 8542              		.weak	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt
 8544              	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt10_Sele
 8545              	.LFB12664:
2193:/usr/include/c++/6/bits/stl_tree.h ****       _M_emplace_hint_unique(const_iterator __pos, _Args&&... __args)
 8546              		.loc 27 2193 0
 8547              		.cfi_startproc
 8548              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 8549              		.cfi_lsda 0x1b,.LLSDA12664
 8550 0000 55       		pushq	%rbp
 8551              		.cfi_def_cfa_offset 16
 8552              		.cfi_offset 6, -16
 8553 0001 4889E5   		movq	%rsp, %rbp
 8554              		.cfi_def_cfa_register 6
 8555 0004 4154     		pushq	%r12
 8556 0006 53       		pushq	%rbx
 8557 0007 4883EC50 		subq	$80, %rsp
 8558              		.cfi_offset 12, -24
 8559              		.cfi_offset 3, -32
 8560 000b 48897DC8 		movq	%rdi, -56(%rbp)
 8561 000f 488975C0 		movq	%rsi, -64(%rbp)
 8562 0013 488955B8 		movq	%rdx, -72(%rbp)
 8563 0017 48894DB0 		movq	%rcx, -80(%rbp)
 8564 001b 4C8945A8 		movq	%r8, -88(%rbp)
2196:/usr/include/c++/6/bits/stl_tree.h **** 
 8565              		.loc 27 2196 0
 8566 001f 488B45A8 		movq	-88(%rbp), %rax
 8567 0023 4889C7   		movq	%rax, %rdi
 8568 0026 E8000000 		call	_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE
 8568      00
 8569 002b 4989C4   		movq	%rax, %r12
 8570 002e 488B45B0 		movq	-80(%rbp), %rax
 8571 0032 4889C7   		movq	%rax, %rdi
GAS LISTING /tmp/ccsIN87E.s 			page 414


 8572 0035 E8000000 		call	_ZSt7forwardISt5tupleIJRKN5boost13intrusive_ptrIN3pmt8pmt_baseEEEEEEOT_RNSt16remove_reference
 8572      00
 8573 003a 4889C3   		movq	%rax, %rbx
 8574 003d 488B45B8 		movq	-72(%rbp), %rax
 8575 0041 4889C7   		movq	%rax, %rdi
 8576 0044 E8000000 		call	_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE
 8576      00
 8577 0049 4889C6   		movq	%rax, %rsi
 8578 004c 488B45C8 		movq	-56(%rbp), %rax
 8579 0050 4C89E1   		movq	%r12, %rcx
 8580 0053 4889DA   		movq	%rbx, %rdx
 8581 0056 4889C7   		movq	%rax, %rdi
 8582              	.LEHB63:
 8583 0059 E8000000 		call	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt1
 8583      00
 8584              	.LEHE63:
 8585 005e 488945E8 		movq	%rax, -24(%rbp)
 8586              	.LBB82:
2200:/usr/include/c++/6/bits/stl_tree.h **** 
 8587              		.loc 27 2200 0
 8588 0062 488B45E8 		movq	-24(%rbp), %rax
 8589 0066 4889C7   		movq	%rax, %rdi
 8590              	.LEHB64:
 8591 0069 E8000000 		call	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt1
 8591      00
 8592 006e 4889C2   		movq	%rax, %rdx
 8593 0071 488B4DC0 		movq	-64(%rbp), %rcx
 8594 0075 488B45C8 		movq	-56(%rbp), %rax
 8595 0079 4889CE   		movq	%rcx, %rsi
 8596 007c 4889C7   		movq	%rax, %rdi
 8597 007f E8000000 		call	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt1
 8597      00
2200:/usr/include/c++/6/bits/stl_tree.h **** 
 8598              		.loc 27 2200 0 is_stmt 0 discriminator 1
 8599 0084 488945D0 		movq	%rax, -48(%rbp)
 8600 0088 488955D8 		movq	%rdx, -40(%rbp)
2202:/usr/include/c++/6/bits/stl_tree.h **** 	      return _M_insert_node(__res.first, __res.second, __z);
 8601              		.loc 27 2202 0 is_stmt 1 discriminator 1
 8602 008c 488B45D8 		movq	-40(%rbp), %rax
 8603 0090 4885C0   		testq	%rax, %rax
 8604 0093 741A     		je	.L398
2203:/usr/include/c++/6/bits/stl_tree.h **** 
 8605              		.loc 27 2203 0
 8606 0095 488B55D8 		movq	-40(%rbp), %rdx
 8607 0099 488B75D0 		movq	-48(%rbp), %rsi
 8608 009d 488B4DE8 		movq	-24(%rbp), %rcx
 8609 00a1 488B45C8 		movq	-56(%rbp), %rax
 8610 00a5 4889C7   		movq	%rax, %rdi
 8611 00a8 E8000000 		call	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt1
 8611      00
 8612              	.LEHE64:
 8613 00ad EB5F     		jmp	.L405
 8614              	.L398:
2205:/usr/include/c++/6/bits/stl_tree.h **** 	    return iterator(__res.first);
 8615              		.loc 27 2205 0
 8616 00af 488B55E8 		movq	-24(%rbp), %rdx
 8617 00b3 488B45C8 		movq	-56(%rbp), %rax
GAS LISTING /tmp/ccsIN87E.s 			page 415


 8618 00b7 4889D6   		movq	%rdx, %rsi
 8619 00ba 4889C7   		movq	%rax, %rdi
 8620 00bd E8000000 		call	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt1
 8620      00
2206:/usr/include/c++/6/bits/stl_tree.h **** 	  }
 8621              		.loc 27 2206 0
 8622 00c2 488B55D0 		movq	-48(%rbp), %rdx
 8623 00c6 488D45E0 		leaq	-32(%rbp), %rax
 8624 00ca 4889D6   		movq	%rdx, %rsi
 8625 00cd 4889C7   		movq	%rax, %rdi
 8626 00d0 E8000000 		call	_ZNSt17_Rb_tree_iteratorISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS1_8functionIFvS5_
 8626      00
 8627 00d5 488B45E0 		movq	-32(%rbp), %rax
 8628 00d9 EB33     		jmp	.L405
 8629              	.L403:
 8630              	.LBE82:
2208:/usr/include/c++/6/bits/stl_tree.h **** 	  {
 8631              		.loc 27 2208 0
 8632 00db 4889C7   		movq	%rax, %rdi
 8633 00de E8000000 		call	__cxa_begin_catch@PLT
 8633      00
2210:/usr/include/c++/6/bits/stl_tree.h **** 	    __throw_exception_again;
 8634              		.loc 27 2210 0
 8635 00e3 488B55E8 		movq	-24(%rbp), %rdx
 8636 00e7 488B45C8 		movq	-56(%rbp), %rax
 8637 00eb 4889D6   		movq	%rdx, %rsi
 8638 00ee 4889C7   		movq	%rax, %rdi
 8639 00f1 E8000000 		call	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt1
 8639      00
 8640              	.LEHB65:
2211:/usr/include/c++/6/bits/stl_tree.h **** 	  }
 8641              		.loc 27 2211 0
 8642 00f6 E8000000 		call	__cxa_rethrow@PLT
 8642      00
 8643              	.LEHE65:
 8644              	.L404:
 8645 00fb 4889C3   		movq	%rax, %rbx
2208:/usr/include/c++/6/bits/stl_tree.h **** 	  {
 8646              		.loc 27 2208 0
 8647 00fe E8000000 		call	__cxa_end_catch@PLT
 8647      00
 8648 0103 4889D8   		movq	%rbx, %rax
 8649 0106 4889C7   		movq	%rax, %rdi
 8650              	.LEHB66:
 8651 0109 E8000000 		call	_Unwind_Resume@PLT
 8651      00
 8652              	.LEHE66:
 8653              	.L405:
2213:/usr/include/c++/6/bits/stl_tree.h **** 
 8654              		.loc 27 2213 0
 8655 010e 4883C450 		addq	$80, %rsp
 8656 0112 5B       		popq	%rbx
 8657 0113 415C     		popq	%r12
 8658 0115 5D       		popq	%rbp
 8659              		.cfi_def_cfa 7, 8
 8660 0116 C3       		ret
 8661              		.cfi_endproc
GAS LISTING /tmp/ccsIN87E.s 			page 416


 8662              	.LFE12664:
 8663              		.section	.gcc_except_table
 8664 0146 0000     		.align 4
 8665              	.LLSDA12664:
 8666 0148 FF       		.byte	0xff
 8667 0149 9B       		.byte	0x9b
 8668 014a 1D       		.uleb128 .LLSDATT12664-.LLSDATTD12664
 8669              	.LLSDATTD12664:
 8670 014b 01       		.byte	0x1
 8671 014c 14       		.uleb128 .LLSDACSE12664-.LLSDACSB12664
 8672              	.LLSDACSB12664:
 8673 014d 59       		.uleb128 .LEHB63-.LFB12664
 8674 014e 05       		.uleb128 .LEHE63-.LEHB63
 8675 014f 00       		.uleb128 0
 8676 0150 00       		.uleb128 0
 8677 0151 69       		.uleb128 .LEHB64-.LFB12664
 8678 0152 44       		.uleb128 .LEHE64-.LEHB64
 8679 0153 DB01     		.uleb128 .L403-.LFB12664
 8680 0155 01       		.uleb128 0x1
 8681 0156 F601     		.uleb128 .LEHB65-.LFB12664
 8682 0158 05       		.uleb128 .LEHE65-.LEHB65
 8683 0159 FB01     		.uleb128 .L404-.LFB12664
 8684 015b 00       		.uleb128 0
 8685 015c 8902     		.uleb128 .LEHB66-.LFB12664
 8686 015e 05       		.uleb128 .LEHE66-.LEHB66
 8687 015f 00       		.uleb128 0
 8688 0160 00       		.uleb128 0
 8689              	.LLSDACSE12664:
 8690 0161 01       		.byte	0x1
 8691 0162 00       		.byte	0
 8692 0163 00       		.align 4
 8693 0164 00000000 		.long	0
 8694              	
 8695              	.LLSDATT12664:
 8696              		.section	.text._ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFv
 8698              		.section	.text._ZN5boost17bad_function_callC2ERKS0_,"axG",@progbits,_ZN5boost17bad_function_callC5
 8699              		.align 2
 8700              		.weak	_ZN5boost17bad_function_callC2ERKS0_
 8702              	_ZN5boost17bad_function_callC2ERKS0_:
 8703              	.LFB12676:
 696:/usr/include/boost/function/function_base.hpp **** {
 8704              		.loc 13 696 0
 8705              		.cfi_startproc
 8706 0000 55       		pushq	%rbp
 8707              		.cfi_def_cfa_offset 16
 8708              		.cfi_offset 6, -16
 8709 0001 4889E5   		movq	%rsp, %rbp
 8710              		.cfi_def_cfa_register 6
 8711 0004 4883EC10 		subq	$16, %rsp
 8712 0008 48897DF8 		movq	%rdi, -8(%rbp)
 8713 000c 488975F0 		movq	%rsi, -16(%rbp)
 8714              	.LBB83:
 696:/usr/include/boost/function/function_base.hpp **** {
 8715              		.loc 13 696 0
 8716 0010 488B55F0 		movq	-16(%rbp), %rdx
 8717 0014 488B45F8 		movq	-8(%rbp), %rax
 8718 0018 4889D6   		movq	%rdx, %rsi
GAS LISTING /tmp/ccsIN87E.s 			page 417


 8719 001b 4889C7   		movq	%rax, %rdi
 8720 001e E8000000 		call	_ZNSt13runtime_errorC2ERKS_@PLT
 8720      00
 8721 0023 488D1500 		leaq	16+_ZTVN5boost17bad_function_callE(%rip), %rdx
 8721      000000
 8722 002a 488B45F8 		movq	-8(%rbp), %rax
 8723 002e 488910   		movq	%rdx, (%rax)
 8724              	.LBE83:
 8725 0031 90       		nop
 8726 0032 C9       		leave
 8727              		.cfi_def_cfa 7, 8
 8728 0033 C3       		ret
 8729              		.cfi_endproc
 8730              	.LFE12676:
 8732              		.weak	_ZN5boost17bad_function_callC1ERKS0_
 8733              		.set	_ZN5boost17bad_function_callC1ERKS0_,_ZN5boost17bad_function_callC2ERKS0_
 8734              		.section	.text._ZN5boost16exception_detail19error_info_injectorINS_17bad_function_callEEC2ERKS3_,"
 8735              		.align 2
 8736              		.weak	_ZN5boost16exception_detail19error_info_injectorINS_17bad_function_callEEC2ERKS3_
 8738              	_ZN5boost16exception_detail19error_info_injectorINS_17bad_function_callEEC2ERKS3_:
 8739              	.LFB12678:
 343:/usr/include/boost/exception/exception.hpp ****             public T,
 8740              		.loc 3 343 0
 8741              		.cfi_startproc
 8742              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 8743              		.cfi_lsda 0x1b,.LLSDA12678
 8744 0000 55       		pushq	%rbp
 8745              		.cfi_def_cfa_offset 16
 8746              		.cfi_offset 6, -16
 8747 0001 4889E5   		movq	%rsp, %rbp
 8748              		.cfi_def_cfa_register 6
 8749 0004 53       		pushq	%rbx
 8750 0005 4883EC18 		subq	$24, %rsp
 8751              		.cfi_offset 3, -24
 8752 0009 48897DE8 		movq	%rdi, -24(%rbp)
 8753 000d 488975E0 		movq	%rsi, -32(%rbp)
 8754              	.LBB84:
 343:/usr/include/boost/exception/exception.hpp ****             public T,
 8755              		.loc 3 343 0
 8756 0011 488B55E0 		movq	-32(%rbp), %rdx
 8757 0015 488B45E8 		movq	-24(%rbp), %rax
 8758 0019 4889D6   		movq	%rdx, %rsi
 8759 001c 4889C7   		movq	%rax, %rdi
 8760 001f E8000000 		call	_ZN5boost17bad_function_callC2ERKS0_
 8760      00
 8761 0024 488B45E0 		movq	-32(%rbp), %rax
 8762 0028 488D5010 		leaq	16(%rax), %rdx
 8763 002c 488B45E8 		movq	-24(%rbp), %rax
 8764 0030 4883C010 		addq	$16, %rax
 8765 0034 4889D6   		movq	%rdx, %rsi
 8766 0037 4889C7   		movq	%rax, %rdi
 8767              	.LEHB67:
 8768 003a E8000000 		call	_ZN5boost9exceptionC2ERKS0_
 8768      00
 8769              	.LEHE67:
 343:/usr/include/boost/exception/exception.hpp ****             public T,
 8770              		.loc 3 343 0 is_stmt 0 discriminator 2
GAS LISTING /tmp/ccsIN87E.s 			page 418


 8771 003f 488D1500 		leaq	16+_ZTVN5boost16exception_detail19error_info_injectorINS_17bad_function_callEEE(%rip), %rdx
 8771      000000
 8772 0046 488B45E8 		movq	-24(%rbp), %rax
 8773 004a 488910   		movq	%rdx, (%rax)
 8774 004d 488D1500 		leaq	56+_ZTVN5boost16exception_detail19error_info_injectorINS_17bad_function_callEEE(%rip), %rdx
 8774      000000
 8775 0054 488B45E8 		movq	-24(%rbp), %rax
 8776 0058 48895010 		movq	%rdx, 16(%rax)
 8777              	.LBE84:
 8778 005c EB1A     		jmp	.L410
 8779              	.L409:
 8780 005e 4889C3   		movq	%rax, %rbx
 8781              	.LBB85:
 343:/usr/include/boost/exception/exception.hpp ****             public T,
 8782              		.loc 3 343 0
 8783 0061 488B45E8 		movq	-24(%rbp), %rax
 8784 0065 4889C7   		movq	%rax, %rdi
 8785 0068 E8000000 		call	_ZN5boost17bad_function_callD2Ev
 8785      00
 8786 006d 4889D8   		movq	%rbx, %rax
 8787 0070 4889C7   		movq	%rax, %rdi
 8788              	.LEHB68:
 8789 0073 E8000000 		call	_Unwind_Resume@PLT
 8789      00
 8790              	.LEHE68:
 8791              	.L410:
 8792              	.LBE85:
 8793 0078 4883C418 		addq	$24, %rsp
 8794 007c 5B       		popq	%rbx
 8795 007d 5D       		popq	%rbp
 8796              		.cfi_def_cfa 7, 8
 8797 007e C3       		ret
 8798              		.cfi_endproc
 8799              	.LFE12678:
 8800              		.section	.gcc_except_table
 8801              	.LLSDA12678:
 8802 0168 FF       		.byte	0xff
 8803 0169 FF       		.byte	0xff
 8804 016a 01       		.byte	0x1
 8805 016b 08       		.uleb128 .LLSDACSE12678-.LLSDACSB12678
 8806              	.LLSDACSB12678:
 8807 016c 3A       		.uleb128 .LEHB67-.LFB12678
 8808 016d 05       		.uleb128 .LEHE67-.LEHB67
 8809 016e 5E       		.uleb128 .L409-.LFB12678
 8810 016f 00       		.uleb128 0
 8811 0170 73       		.uleb128 .LEHB68-.LFB12678
 8812 0171 05       		.uleb128 .LEHE68-.LEHB68
 8813 0172 00       		.uleb128 0
 8814 0173 00       		.uleb128 0
 8815              	.LLSDACSE12678:
 8816              		.section	.text._ZN5boost16exception_detail19error_info_injectorINS_17bad_function_callEEC2ERKS3_,"
 8818              		.weak	_ZN5boost16exception_detail19error_info_injectorINS_17bad_function_callEEC1ERKS3_
 8819              		.set	_ZN5boost16exception_detail19error_info_injectorINS_17bad_function_callEEC1ERKS3_,_ZN5boost16
 8820              		.section	.text._ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function
 8821              		.align 2
 8822              		.weak	_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEE
 8824              	_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEEC1ERKS5
GAS LISTING /tmp/ccsIN87E.s 			page 419


 8825              	.LFB12681:
 8826              		.loc 3 459 0 is_stmt 1
 8827              		.cfi_startproc
 8828              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 8829              		.cfi_lsda 0x1b,.LLSDA12681
 8830 0000 55       		pushq	%rbp
 8831              		.cfi_def_cfa_offset 16
 8832              		.cfi_offset 6, -16
 8833 0001 4889E5   		movq	%rsp, %rbp
 8834              		.cfi_def_cfa_register 6
 8835 0004 53       		pushq	%rbx
 8836 0005 4883EC18 		subq	$24, %rsp
 8837              		.cfi_offset 3, -24
 8838 0009 48897DE8 		movq	%rdi, -24(%rbp)
 8839 000d 488975E0 		movq	%rsi, -32(%rbp)
 8840              	.LBB86:
 8841              		.loc 3 459 0
 8842 0011 488B45E0 		movq	-32(%rbp), %rax
 8843 0015 488B00   		movq	(%rax), %rax
 8844 0018 4883E818 		subq	$24, %rax
 8845 001c 488B00   		movq	(%rax), %rax
 8846 001f 4889C2   		movq	%rax, %rdx
 8847 0022 488B45E0 		movq	-32(%rbp), %rax
 8848 0026 4801C2   		addq	%rax, %rdx
 8849 0029 488B45E8 		movq	-24(%rbp), %rax
 8850 002d 4883C038 		addq	$56, %rax
 8851 0031 4889D6   		movq	%rdx, %rsi
 8852 0034 4889C7   		movq	%rax, %rdi
 8853 0037 E8000000 		call	_ZN5boost16exception_detail10clone_baseC2ERKS1_
 8853      00
 8854 003c 488B55E0 		movq	-32(%rbp), %rdx
 8855 0040 488B45E8 		movq	-24(%rbp), %rax
 8856 0044 4889D6   		movq	%rdx, %rsi
 8857 0047 4889C7   		movq	%rax, %rdi
 8858              	.LEHB69:
 8859 004a E8000000 		call	_ZN5boost16exception_detail19error_info_injectorINS_17bad_function_callEEC2ERKS3_
 8859      00
 8860              	.LEHE69:
 8861              		.loc 3 459 0 is_stmt 0 discriminator 8
 8862 004f 488D1500 		leaq	24+_ZTVN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_call
 8862      000000
 8863 0056 488B45E8 		movq	-24(%rbp), %rax
 8864 005a 488910   		movq	%rdx, (%rax)
 8865 005d 488D1500 		leaq	80+_ZTVN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_call
 8865      000000
 8866 0064 488B45E8 		movq	-24(%rbp), %rax
 8867 0068 48895010 		movq	%rdx, 16(%rax)
 8868 006c 488B45E8 		movq	-24(%rbp), %rax
 8869 0070 488D5038 		leaq	56(%rax), %rdx
 8870 0074 488D0500 		leaq	136+_ZTVN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_cal
 8870      000000
 8871 007b 488902   		movq	%rax, (%rdx)
 8872              	.LBE86:
 8873 007e EB1E     		jmp	.L414
 8874              	.L413:
 8875 0080 4889C3   		movq	%rax, %rbx
 8876              	.LBB87:
GAS LISTING /tmp/ccsIN87E.s 			page 420


 8877              		.loc 3 459 0
 8878 0083 488B45E8 		movq	-24(%rbp), %rax
 8879 0087 4883C038 		addq	$56, %rax
 8880 008b 4889C7   		movq	%rax, %rdi
 8881 008e E8000000 		call	_ZN5boost16exception_detail10clone_baseD2Ev
 8881      00
 8882 0093 4889D8   		movq	%rbx, %rax
 8883 0096 4889C7   		movq	%rax, %rdi
 8884              	.LEHB70:
 8885 0099 E8000000 		call	_Unwind_Resume@PLT
 8885      00
 8886              	.LEHE70:
 8887              	.L414:
 8888              	.LBE87:
 8889 009e 4883C418 		addq	$24, %rsp
 8890 00a2 5B       		popq	%rbx
 8891 00a3 5D       		popq	%rbp
 8892              		.cfi_def_cfa 7, 8
 8893 00a4 C3       		ret
 8894              		.cfi_endproc
 8895              	.LFE12681:
 8896              		.section	.gcc_except_table
 8897              	.LLSDA12681:
 8898 0174 FF       		.byte	0xff
 8899 0175 FF       		.byte	0xff
 8900 0176 01       		.byte	0x1
 8901 0177 0A       		.uleb128 .LLSDACSE12681-.LLSDACSB12681
 8902              	.LLSDACSB12681:
 8903 0178 4A       		.uleb128 .LEHB69-.LFB12681
 8904 0179 05       		.uleb128 .LEHE69-.LEHB69
 8905 017a 8001     		.uleb128 .L413-.LFB12681
 8906 017c 00       		.uleb128 0
 8907 017d 9901     		.uleb128 .LEHB70-.LFB12681
 8908 017f 05       		.uleb128 .LEHE70-.LEHB70
 8909 0180 00       		.uleb128 0
 8910 0181 00       		.uleb128 0
 8911              	.LLSDACSE12681:
 8912              		.section	.text._ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function
 8914              		.section	.text._ZN5boost15throw_exceptionINS_17bad_function_callEEEvRKT_,"axG",@progbits,_ZN5boost
 8915              		.weak	_ZN5boost15throw_exceptionINS_17bad_function_callEEEvRKT_
 8917              	_ZN5boost15throw_exceptionINS_17bad_function_callEEEvRKT_:
 8918              	.LFB12672:
  61:/usr/include/boost/throw_exception.hpp **** 
  62:/usr/include/boost/throw_exception.hpp **** template<class E> BOOST_NORETURN inline void throw_exception( E const & e )
 8919              		.loc 4 62 0 is_stmt 1
 8920              		.cfi_startproc
 8921              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 8922              		.cfi_lsda 0x1b,.LLSDA12672
 8923 0000 55       		pushq	%rbp
 8924              		.cfi_def_cfa_offset 16
 8925              		.cfi_offset 6, -16
 8926 0001 4889E5   		movq	%rsp, %rbp
 8927              		.cfi_def_cfa_register 6
 8928 0004 4154     		pushq	%r12
 8929 0006 53       		pushq	%rbx
 8930 0007 4883EC50 		subq	$80, %rsp
 8931              		.cfi_offset 12, -24
GAS LISTING /tmp/ccsIN87E.s 			page 421


 8932              		.cfi_offset 3, -32
 8933 000b 48897DA8 		movq	%rdi, -88(%rbp)
  63:/usr/include/boost/throw_exception.hpp **** {
  64:/usr/include/boost/throw_exception.hpp ****     //All boost exceptions are required to derive from std::exception,
  65:/usr/include/boost/throw_exception.hpp ****     //to ensure compatibility with BOOST_NO_EXCEPTIONS.
  66:/usr/include/boost/throw_exception.hpp ****     throw_exception_assert_compatibility(e);
 8934              		.loc 4 66 0
 8935 000f 488B45A8 		movq	-88(%rbp), %rax
 8936 0013 4889C7   		movq	%rax, %rdi
 8937 0016 E8000000 		call	_ZN5boost36throw_exception_assert_compatibilityERKSt9exception
 8937      00
  67:/usr/include/boost/throw_exception.hpp **** 
  68:/usr/include/boost/throw_exception.hpp **** #ifndef BOOST_EXCEPTION_DISABLE
  69:/usr/include/boost/throw_exception.hpp ****     throw enable_current_exception(enable_error_info(e));
 8938              		.loc 4 69 0
 8939 001b BF400000 		movl	$64, %edi
 8939      00
 8940 0020 E8000000 		call	__cxa_allocate_exception@PLT
 8940      00
 8941 0025 4889C3   		movq	%rax, %rbx
 8942 0028 488D45B0 		leaq	-80(%rbp), %rax
 8943 002c 488B55A8 		movq	-88(%rbp), %rdx
 8944 0030 4889D6   		movq	%rdx, %rsi
 8945 0033 4889C7   		movq	%rax, %rdi
 8946              	.LEHB71:
 8947 0036 E8000000 		call	_ZN5boost17enable_error_infoINS_17bad_function_callEEENS_16exception_detail29enable_error_inf
 8947      00
 8948              	.LEHE71:
 8949              		.loc 4 69 0 is_stmt 0 discriminator 2
 8950 003b 488D45B0 		leaq	-80(%rbp), %rax
 8951 003f 4889C6   		movq	%rax, %rsi
 8952 0042 4889DF   		movq	%rbx, %rdi
 8953              	.LEHB72:
 8954 0045 E8000000 		call	_ZN5boost24enable_current_exceptionINS_16exception_detail19error_info_injectorINS_17bad_funct
 8954      00
 8955              	.LEHE72:
 8956              		.loc 4 69 0 discriminator 4
 8957 004a 488D45B0 		leaq	-80(%rbp), %rax
 8958 004e 4889C7   		movq	%rax, %rdi
 8959 0051 E8000000 		call	_ZN5boost16exception_detail19error_info_injectorINS_17bad_function_callEED1Ev
 8959      00
 8960 0056 488D1500 		leaq	_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEED
 8960      000000
 8961 005d 488D3500 		leaq	_ZTIN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEE
 8961      000000
 8962 0064 4889DF   		movq	%rbx, %rdi
 8963              	.LEHB73:
 8964 0067 E8000000 		call	__cxa_throw@PLT
 8964      00
 8965              	.L419:
 8966 006c 4989C4   		movq	%rax, %r12
 8967              		.loc 4 69 0
 8968 006f 488D45B0 		leaq	-80(%rbp), %rax
 8969 0073 4889C7   		movq	%rax, %rdi
 8970 0076 E8000000 		call	_ZN5boost16exception_detail19error_info_injectorINS_17bad_function_callEED1Ev
 8970      00
 8971 007b EB03     		jmp	.L417
GAS LISTING /tmp/ccsIN87E.s 			page 422


 8972              	.L418:
 8973 007d 4989C4   		movq	%rax, %r12
 8974              	.L417:
 8975              		.loc 4 69 0 discriminator 1
 8976 0080 4889DF   		movq	%rbx, %rdi
 8977 0083 E8000000 		call	__cxa_free_exception@PLT
 8977      00
 8978 0088 4C89E0   		movq	%r12, %rax
 8979 008b 4889C7   		movq	%rax, %rdi
 8980 008e E8000000 		call	_Unwind_Resume@PLT
 8980      00
 8981              	.LEHE73:
 8982              		.cfi_endproc
 8983              	.LFE12672:
 8984              		.section	.gcc_except_table
 8985              	.LLSDA12672:
 8986 0182 FF       		.byte	0xff
 8987 0183 FF       		.byte	0xff
 8988 0184 01       		.byte	0x1
 8989 0185 0C       		.uleb128 .LLSDACSE12672-.LLSDACSB12672
 8990              	.LLSDACSB12672:
 8991 0186 36       		.uleb128 .LEHB71-.LFB12672
 8992 0187 05       		.uleb128 .LEHE71-.LEHB71
 8993 0188 7D       		.uleb128 .L418-.LFB12672
 8994 0189 00       		.uleb128 0
 8995 018a 45       		.uleb128 .LEHB72-.LFB12672
 8996 018b 05       		.uleb128 .LEHE72-.LEHB72
 8997 018c 6C       		.uleb128 .L419-.LFB12672
 8998 018d 00       		.uleb128 0
 8999 018e 67       		.uleb128 .LEHB73-.LFB12672
 9000 018f 2C       		.uleb128 .LEHE73-.LEHB73
 9001 0190 00       		.uleb128 0
 9002 0191 00       		.uleb128 0
 9003              	.LLSDACSE12672:
 9004              		.section	.text._ZN5boost15throw_exceptionINS_17bad_function_callEEEvRKT_,"axG",@progbits,_ZN5boost
 9006              		.section	.text._ZNK5boost9function1IvNS_13intrusive_ptrIN3pmt8pmt_baseEEEE10get_vtableEv,"axG",@pr
 9007              		.align 2
 9008              		.weak	_ZNK5boost9function1IvNS_13intrusive_ptrIN3pmt8pmt_baseEEEE10get_vtableEv
 9010              	_ZNK5boost9function1IvNS_13intrusive_ptrIN3pmt8pmt_baseEEEE10get_vtableEv:
 9011              	.LFB12682:
 684:/usr/include/boost/function/function_template.hpp ****       return reinterpret_cast<vtable_type*>(
 9012              		.loc 29 684 0 is_stmt 1
 9013              		.cfi_startproc
 9014 0000 55       		pushq	%rbp
 9015              		.cfi_def_cfa_offset 16
 9016              		.cfi_offset 6, -16
 9017 0001 4889E5   		movq	%rsp, %rbp
 9018              		.cfi_def_cfa_register 6
 9019 0004 48897DF8 		movq	%rdi, -8(%rbp)
 686:/usr/include/boost/function/function_template.hpp ****     }
 9020              		.loc 29 686 0
 9021 0008 488B45F8 		movq	-8(%rbp), %rax
 9022 000c 488B00   		movq	(%rax), %rax
 9023 000f 4883E0FE 		andq	$-2, %rax
 687:/usr/include/boost/function/function_template.hpp **** 
 9024              		.loc 29 687 0
 9025 0013 5D       		popq	%rbp
GAS LISTING /tmp/ccsIN87E.s 			page 423


 9026              		.cfi_def_cfa 7, 8
 9027 0014 C3       		ret
 9028              		.cfi_endproc
 9029              	.LFE12682:
 9031              		.section	.text._ZN5boost7forwardINS_13intrusive_ptrIN3pmt8pmt_baseEEEEEOT_RNS_11move_detail16remov
 9032              		.weak	_ZN5boost7forwardINS_13intrusive_ptrIN3pmt8pmt_baseEEEEEOT_RNS_11move_detail16remove_referen
 9034              	_ZN5boost7forwardINS_13intrusive_ptrIN3pmt8pmt_baseEEEEEOT_RNS_11move_detail16remove_referenceIS5_E
 9035              	.LFB12683:
 9036              		.file 34 "/usr/include/boost/move/utility_core.hpp"
   1:/usr/include/boost/move/utility_core.hpp **** //////////////////////////////////////////////////////////////////////////////
   2:/usr/include/boost/move/utility_core.hpp **** //
   3:/usr/include/boost/move/utility_core.hpp **** // (C) Copyright Ion Gaztanaga 2012-2012.
   4:/usr/include/boost/move/utility_core.hpp **** // Distributed under the Boost Software License, Version 1.0.
   5:/usr/include/boost/move/utility_core.hpp **** // (See accompanying file LICENSE_1_0.txt or copy at
   6:/usr/include/boost/move/utility_core.hpp **** // http://www.boost.org/LICENSE_1_0.txt)
   7:/usr/include/boost/move/utility_core.hpp **** //
   8:/usr/include/boost/move/utility_core.hpp **** // See http://www.boost.org/libs/move for documentation.
   9:/usr/include/boost/move/utility_core.hpp **** //
  10:/usr/include/boost/move/utility_core.hpp **** //////////////////////////////////////////////////////////////////////////////
  11:/usr/include/boost/move/utility_core.hpp **** 
  12:/usr/include/boost/move/utility_core.hpp **** //! \file
  13:/usr/include/boost/move/utility_core.hpp **** //! This header defines core utilities to ease the development
  14:/usr/include/boost/move/utility_core.hpp **** //! of move-aware functions. This header minimizes dependencies
  15:/usr/include/boost/move/utility_core.hpp **** //! from other libraries.
  16:/usr/include/boost/move/utility_core.hpp **** 
  17:/usr/include/boost/move/utility_core.hpp **** #ifndef BOOST_MOVE_MOVE_UTILITY_CORE_HPP
  18:/usr/include/boost/move/utility_core.hpp **** #define BOOST_MOVE_MOVE_UTILITY_CORE_HPP
  19:/usr/include/boost/move/utility_core.hpp **** 
  20:/usr/include/boost/move/utility_core.hpp **** #ifndef BOOST_CONFIG_HPP
  21:/usr/include/boost/move/utility_core.hpp **** #  include <boost/config.hpp>
  22:/usr/include/boost/move/utility_core.hpp **** #endif
  23:/usr/include/boost/move/utility_core.hpp **** #
  24:/usr/include/boost/move/utility_core.hpp **** #if defined(BOOST_HAS_PRAGMA_ONCE)
  25:/usr/include/boost/move/utility_core.hpp **** #  pragma once
  26:/usr/include/boost/move/utility_core.hpp **** #endif
  27:/usr/include/boost/move/utility_core.hpp **** 
  28:/usr/include/boost/move/utility_core.hpp **** #include <boost/move/detail/config_begin.hpp>
  29:/usr/include/boost/move/utility_core.hpp **** #include <boost/move/detail/workaround.hpp>  //forceinline
  30:/usr/include/boost/move/utility_core.hpp **** #include <boost/move/core.hpp>
  31:/usr/include/boost/move/utility_core.hpp **** #include <boost/move/detail/meta_utils.hpp>
  32:/usr/include/boost/move/utility_core.hpp **** #include <boost/static_assert.hpp>
  33:/usr/include/boost/move/utility_core.hpp **** 
  34:/usr/include/boost/move/utility_core.hpp **** #if defined(BOOST_NO_CXX11_RVALUE_REFERENCES) && !defined(BOOST_MOVE_DOXYGEN_INVOKED)
  35:/usr/include/boost/move/utility_core.hpp **** 
  36:/usr/include/boost/move/utility_core.hpp ****    namespace boost {
  37:/usr/include/boost/move/utility_core.hpp **** 
  38:/usr/include/boost/move/utility_core.hpp ****    template<class T>
  39:/usr/include/boost/move/utility_core.hpp ****    struct enable_move_utility_emulation
  40:/usr/include/boost/move/utility_core.hpp ****    {
  41:/usr/include/boost/move/utility_core.hpp ****       static const bool value = true;
  42:/usr/include/boost/move/utility_core.hpp ****    };
  43:/usr/include/boost/move/utility_core.hpp ****     
  44:/usr/include/boost/move/utility_core.hpp ****    //////////////////////////////////////////////////////////////////////////////
  45:/usr/include/boost/move/utility_core.hpp ****    //
  46:/usr/include/boost/move/utility_core.hpp ****    //                            move()
  47:/usr/include/boost/move/utility_core.hpp ****    //
  48:/usr/include/boost/move/utility_core.hpp ****    //////////////////////////////////////////////////////////////////////////////
GAS LISTING /tmp/ccsIN87E.s 			page 424


  49:/usr/include/boost/move/utility_core.hpp **** 
  50:/usr/include/boost/move/utility_core.hpp ****    template <class T>
  51:/usr/include/boost/move/utility_core.hpp ****    BOOST_MOVE_FORCEINLINE typename ::boost::move_detail::enable_if_and
  52:/usr/include/boost/move/utility_core.hpp ****       < T &
  53:/usr/include/boost/move/utility_core.hpp ****       , enable_move_utility_emulation<T>
  54:/usr/include/boost/move/utility_core.hpp ****       , has_move_emulation_disabled<T>
  55:/usr/include/boost/move/utility_core.hpp ****       >::type
  56:/usr/include/boost/move/utility_core.hpp ****          move(T& x) BOOST_NOEXCEPT
  57:/usr/include/boost/move/utility_core.hpp ****    {
  58:/usr/include/boost/move/utility_core.hpp ****       return x;
  59:/usr/include/boost/move/utility_core.hpp ****    }
  60:/usr/include/boost/move/utility_core.hpp **** 
  61:/usr/include/boost/move/utility_core.hpp ****    template <class T>
  62:/usr/include/boost/move/utility_core.hpp ****    BOOST_MOVE_FORCEINLINE typename ::boost::move_detail::enable_if_and
  63:/usr/include/boost/move/utility_core.hpp ****       < rv<T>&
  64:/usr/include/boost/move/utility_core.hpp ****       , enable_move_utility_emulation<T>
  65:/usr/include/boost/move/utility_core.hpp ****       , has_move_emulation_enabled<T>
  66:/usr/include/boost/move/utility_core.hpp ****       >::type
  67:/usr/include/boost/move/utility_core.hpp ****          move(T& x) BOOST_NOEXCEPT
  68:/usr/include/boost/move/utility_core.hpp ****    {
  69:/usr/include/boost/move/utility_core.hpp ****       return *BOOST_MOVE_TO_RV_CAST(::boost::rv<T>*, ::boost::move_detail::addressof(x) );
  70:/usr/include/boost/move/utility_core.hpp ****    }
  71:/usr/include/boost/move/utility_core.hpp **** 
  72:/usr/include/boost/move/utility_core.hpp ****    template <class T>
  73:/usr/include/boost/move/utility_core.hpp ****    BOOST_MOVE_FORCEINLINE typename ::boost::move_detail::enable_if_and
  74:/usr/include/boost/move/utility_core.hpp ****       < rv<T>&
  75:/usr/include/boost/move/utility_core.hpp ****       , enable_move_utility_emulation<T>
  76:/usr/include/boost/move/utility_core.hpp ****       , has_move_emulation_enabled<T>
  77:/usr/include/boost/move/utility_core.hpp ****       >::type
  78:/usr/include/boost/move/utility_core.hpp ****          move(rv<T>& x) BOOST_NOEXCEPT
  79:/usr/include/boost/move/utility_core.hpp ****    {
  80:/usr/include/boost/move/utility_core.hpp ****       return x;
  81:/usr/include/boost/move/utility_core.hpp ****    }
  82:/usr/include/boost/move/utility_core.hpp **** 
  83:/usr/include/boost/move/utility_core.hpp ****    //////////////////////////////////////////////////////////////////////////////
  84:/usr/include/boost/move/utility_core.hpp ****    //
  85:/usr/include/boost/move/utility_core.hpp ****    //                            forward()
  86:/usr/include/boost/move/utility_core.hpp ****    //
  87:/usr/include/boost/move/utility_core.hpp ****    //////////////////////////////////////////////////////////////////////////////
  88:/usr/include/boost/move/utility_core.hpp **** 
  89:/usr/include/boost/move/utility_core.hpp ****    template <class T>
  90:/usr/include/boost/move/utility_core.hpp ****    BOOST_MOVE_FORCEINLINE typename ::boost::move_detail::enable_if_and
  91:/usr/include/boost/move/utility_core.hpp ****       < T &
  92:/usr/include/boost/move/utility_core.hpp ****       , enable_move_utility_emulation<T>
  93:/usr/include/boost/move/utility_core.hpp ****       , ::boost::move_detail::is_rv<T>
  94:/usr/include/boost/move/utility_core.hpp ****       >::type
  95:/usr/include/boost/move/utility_core.hpp ****          forward(const typename ::boost::move_detail::identity<T>::type &x) BOOST_NOEXCEPT
  96:/usr/include/boost/move/utility_core.hpp ****    {
  97:/usr/include/boost/move/utility_core.hpp ****       return const_cast<T&>(x);
  98:/usr/include/boost/move/utility_core.hpp ****    }
  99:/usr/include/boost/move/utility_core.hpp **** 
 100:/usr/include/boost/move/utility_core.hpp ****    template <class T>
 101:/usr/include/boost/move/utility_core.hpp ****    BOOST_MOVE_FORCEINLINE typename ::boost::move_detail::enable_if_and
 102:/usr/include/boost/move/utility_core.hpp ****       < const T &
 103:/usr/include/boost/move/utility_core.hpp ****       , enable_move_utility_emulation<T>
 104:/usr/include/boost/move/utility_core.hpp ****       , ::boost::move_detail::is_not_rv<T>
 105:/usr/include/boost/move/utility_core.hpp ****       >::type
GAS LISTING /tmp/ccsIN87E.s 			page 425


 106:/usr/include/boost/move/utility_core.hpp ****          forward(const typename ::boost::move_detail::identity<T>::type &x) BOOST_NOEXCEPT
 107:/usr/include/boost/move/utility_core.hpp ****    {
 108:/usr/include/boost/move/utility_core.hpp ****       return x;
 109:/usr/include/boost/move/utility_core.hpp ****    }
 110:/usr/include/boost/move/utility_core.hpp **** 
 111:/usr/include/boost/move/utility_core.hpp ****    //////////////////////////////////////////////////////////////////////////////
 112:/usr/include/boost/move/utility_core.hpp ****    //
 113:/usr/include/boost/move/utility_core.hpp ****    //                        move_if_not_lvalue_reference()
 114:/usr/include/boost/move/utility_core.hpp ****    //
 115:/usr/include/boost/move/utility_core.hpp ****    //////////////////////////////////////////////////////////////////////////////
 116:/usr/include/boost/move/utility_core.hpp **** 
 117:/usr/include/boost/move/utility_core.hpp ****    template <class T>
 118:/usr/include/boost/move/utility_core.hpp ****    BOOST_MOVE_FORCEINLINE typename ::boost::move_detail::enable_if_and
 119:/usr/include/boost/move/utility_core.hpp ****       < T &
 120:/usr/include/boost/move/utility_core.hpp ****       , enable_move_utility_emulation<T>
 121:/usr/include/boost/move/utility_core.hpp ****       , ::boost::move_detail::is_rv<T>
 122:/usr/include/boost/move/utility_core.hpp ****       >::type
 123:/usr/include/boost/move/utility_core.hpp ****          move_if_not_lvalue_reference(const typename ::boost::move_detail::identity<T>::type &x) BO
 124:/usr/include/boost/move/utility_core.hpp ****    {
 125:/usr/include/boost/move/utility_core.hpp ****       return const_cast<T&>(x);
 126:/usr/include/boost/move/utility_core.hpp ****    }
 127:/usr/include/boost/move/utility_core.hpp **** 
 128:/usr/include/boost/move/utility_core.hpp ****    template <class T>
 129:/usr/include/boost/move/utility_core.hpp ****    BOOST_MOVE_FORCEINLINE typename ::boost::move_detail::enable_if_and
 130:/usr/include/boost/move/utility_core.hpp ****       < typename ::boost::move_detail::add_lvalue_reference<T>::type
 131:/usr/include/boost/move/utility_core.hpp ****       , enable_move_utility_emulation<T>
 132:/usr/include/boost/move/utility_core.hpp ****       , ::boost::move_detail::is_not_rv<T>
 133:/usr/include/boost/move/utility_core.hpp ****       , ::boost::move_detail::or_
 134:/usr/include/boost/move/utility_core.hpp ****          < ::boost::move_detail::is_lvalue_reference<T>
 135:/usr/include/boost/move/utility_core.hpp ****          , has_move_emulation_disabled<T>
 136:/usr/include/boost/move/utility_core.hpp ****          >
 137:/usr/include/boost/move/utility_core.hpp ****       >::type
 138:/usr/include/boost/move/utility_core.hpp ****          move_if_not_lvalue_reference(typename ::boost::move_detail::remove_reference<T>::type &x) 
 139:/usr/include/boost/move/utility_core.hpp ****    {
 140:/usr/include/boost/move/utility_core.hpp ****       return x;
 141:/usr/include/boost/move/utility_core.hpp ****    }
 142:/usr/include/boost/move/utility_core.hpp **** 
 143:/usr/include/boost/move/utility_core.hpp ****    template <class T>
 144:/usr/include/boost/move/utility_core.hpp ****    BOOST_MOVE_FORCEINLINE typename ::boost::move_detail::enable_if_and
 145:/usr/include/boost/move/utility_core.hpp ****       < rv<T>&
 146:/usr/include/boost/move/utility_core.hpp ****       , enable_move_utility_emulation<T>
 147:/usr/include/boost/move/utility_core.hpp ****       , ::boost::move_detail::is_not_rv<T>
 148:/usr/include/boost/move/utility_core.hpp ****       , ::boost::move_detail::and_
 149:/usr/include/boost/move/utility_core.hpp ****          < ::boost::move_detail::not_< ::boost::move_detail::is_lvalue_reference<T> >
 150:/usr/include/boost/move/utility_core.hpp ****          , has_move_emulation_enabled<T>
 151:/usr/include/boost/move/utility_core.hpp ****          >
 152:/usr/include/boost/move/utility_core.hpp ****       >::type
 153:/usr/include/boost/move/utility_core.hpp ****          move_if_not_lvalue_reference(typename ::boost::move_detail::remove_reference<T>::type &x) 
 154:/usr/include/boost/move/utility_core.hpp ****    {
 155:/usr/include/boost/move/utility_core.hpp ****       return move(x);
 156:/usr/include/boost/move/utility_core.hpp ****    }
 157:/usr/include/boost/move/utility_core.hpp **** 
 158:/usr/include/boost/move/utility_core.hpp ****    }  //namespace boost
 159:/usr/include/boost/move/utility_core.hpp **** 
 160:/usr/include/boost/move/utility_core.hpp **** #else    //#if defined(BOOST_NO_CXX11_RVALUE_REFERENCES) && !defined(BOOST_MOVE_DOXYGEN_INVOKED)
 161:/usr/include/boost/move/utility_core.hpp **** 
 162:/usr/include/boost/move/utility_core.hpp ****    #if defined(BOOST_MOVE_USE_STANDARD_LIBRARY_MOVE)
GAS LISTING /tmp/ccsIN87E.s 			page 426


 163:/usr/include/boost/move/utility_core.hpp ****       #include <utility>
 164:/usr/include/boost/move/utility_core.hpp **** 
 165:/usr/include/boost/move/utility_core.hpp ****       namespace boost{
 166:/usr/include/boost/move/utility_core.hpp **** 
 167:/usr/include/boost/move/utility_core.hpp ****       using ::std::move;
 168:/usr/include/boost/move/utility_core.hpp ****       using ::std::forward;
 169:/usr/include/boost/move/utility_core.hpp **** 
 170:/usr/include/boost/move/utility_core.hpp ****       }  //namespace boost
 171:/usr/include/boost/move/utility_core.hpp **** 
 172:/usr/include/boost/move/utility_core.hpp ****    #else //!BOOST_MOVE_USE_STANDARD_LIBRARY_MOVE
 173:/usr/include/boost/move/utility_core.hpp **** 
 174:/usr/include/boost/move/utility_core.hpp ****       namespace boost {
 175:/usr/include/boost/move/utility_core.hpp **** 
 176:/usr/include/boost/move/utility_core.hpp ****       //! This trait's internal boolean `value` is false in compilers with rvalue references
 177:/usr/include/boost/move/utility_core.hpp ****       //! and true in compilers without rvalue references.
 178:/usr/include/boost/move/utility_core.hpp ****       //!
 179:/usr/include/boost/move/utility_core.hpp ****       //! A user can specialize this trait for a type T to false to SFINAE out `move` and `forward`
 180:/usr/include/boost/move/utility_core.hpp ****       //! so that the user can define a different move emulation for that type in namespace boost
 181:/usr/include/boost/move/utility_core.hpp ****       //! (e.g. another Boost library for its types) and avoid any overload ambiguity.
 182:/usr/include/boost/move/utility_core.hpp ****       template<class T>
 183:/usr/include/boost/move/utility_core.hpp ****       struct enable_move_utility_emulation
 184:/usr/include/boost/move/utility_core.hpp ****       {
 185:/usr/include/boost/move/utility_core.hpp ****          static const bool value = false;
 186:/usr/include/boost/move/utility_core.hpp ****       };
 187:/usr/include/boost/move/utility_core.hpp **** 
 188:/usr/include/boost/move/utility_core.hpp ****       //////////////////////////////////////////////////////////////////////////////
 189:/usr/include/boost/move/utility_core.hpp ****       //
 190:/usr/include/boost/move/utility_core.hpp ****       //                                  move
 191:/usr/include/boost/move/utility_core.hpp ****       //
 192:/usr/include/boost/move/utility_core.hpp ****       //////////////////////////////////////////////////////////////////////////////
 193:/usr/include/boost/move/utility_core.hpp **** 
 194:/usr/include/boost/move/utility_core.hpp ****       #if defined(BOOST_MOVE_DOXYGEN_INVOKED)
 195:/usr/include/boost/move/utility_core.hpp ****          //! This function provides a way to convert a reference into a rvalue reference
 196:/usr/include/boost/move/utility_core.hpp ****          //! in compilers with rvalue references. For other compilers if `T` is Boost.Move
 197:/usr/include/boost/move/utility_core.hpp ****          //! enabled type then it converts `T&` into <tt>::boost::rv<T> &</tt> so that
 198:/usr/include/boost/move/utility_core.hpp ****          //! move emulation is activated, else it returns `T &`.
 199:/usr/include/boost/move/utility_core.hpp ****          template <class T>
 200:/usr/include/boost/move/utility_core.hpp ****          rvalue_reference move(input_reference) noexcept;
 201:/usr/include/boost/move/utility_core.hpp **** 
 202:/usr/include/boost/move/utility_core.hpp ****       #elif defined(BOOST_MOVE_OLD_RVALUE_REF_BINDING_RULES)
 203:/usr/include/boost/move/utility_core.hpp **** 
 204:/usr/include/boost/move/utility_core.hpp ****          //Old move approach, lvalues could bind to rvalue references
 205:/usr/include/boost/move/utility_core.hpp ****          template <class T>
 206:/usr/include/boost/move/utility_core.hpp ****          BOOST_MOVE_FORCEINLINE typename ::boost::move_detail::remove_reference<T>::type && move(T&
 207:/usr/include/boost/move/utility_core.hpp ****          {  return t;   }
 208:/usr/include/boost/move/utility_core.hpp **** 
 209:/usr/include/boost/move/utility_core.hpp ****       #else //BOOST_MOVE_OLD_RVALUE_REF_BINDING_RULES
 210:/usr/include/boost/move/utility_core.hpp **** 
 211:/usr/include/boost/move/utility_core.hpp ****          template <class T>
 212:/usr/include/boost/move/utility_core.hpp ****          BOOST_MOVE_FORCEINLINE typename ::boost::move_detail::remove_reference<T>::type && move(T&
 213:/usr/include/boost/move/utility_core.hpp ****          { return static_cast<typename ::boost::move_detail::remove_reference<T>::type &&>(t); }
 214:/usr/include/boost/move/utility_core.hpp **** 
 215:/usr/include/boost/move/utility_core.hpp ****       #endif   //BOOST_MOVE_OLD_RVALUE_REF_BINDING_RULES
 216:/usr/include/boost/move/utility_core.hpp **** 
 217:/usr/include/boost/move/utility_core.hpp ****       //////////////////////////////////////////////////////////////////////////////
 218:/usr/include/boost/move/utility_core.hpp ****       //
 219:/usr/include/boost/move/utility_core.hpp ****       //                                  forward
GAS LISTING /tmp/ccsIN87E.s 			page 427


 220:/usr/include/boost/move/utility_core.hpp ****       //
 221:/usr/include/boost/move/utility_core.hpp ****       //////////////////////////////////////////////////////////////////////////////
 222:/usr/include/boost/move/utility_core.hpp **** 
 223:/usr/include/boost/move/utility_core.hpp **** 
 224:/usr/include/boost/move/utility_core.hpp ****       #if defined(BOOST_MOVE_DOXYGEN_INVOKED)
 225:/usr/include/boost/move/utility_core.hpp ****          //! This function provides limited form of forwarding that is usually enough for
 226:/usr/include/boost/move/utility_core.hpp ****          //! in-place construction and avoids the exponential overloading for
 227:/usr/include/boost/move/utility_core.hpp ****          //! achieve the limited forwarding in C++03.
 228:/usr/include/boost/move/utility_core.hpp ****          //!
 229:/usr/include/boost/move/utility_core.hpp ****          //! For compilers with rvalue references this function provides perfect forwarding.
 230:/usr/include/boost/move/utility_core.hpp ****          //!
 231:/usr/include/boost/move/utility_core.hpp ****          //! Otherwise:
 232:/usr/include/boost/move/utility_core.hpp ****          //! * If input_reference binds to const ::boost::rv<T> & then it output_reference is
 233:/usr/include/boost/move/utility_core.hpp ****          //!   ::boost::rv<T> &
 234:/usr/include/boost/move/utility_core.hpp ****          //!
 235:/usr/include/boost/move/utility_core.hpp ****          //! * Else, output_reference is equal to input_reference.
 236:/usr/include/boost/move/utility_core.hpp ****          template <class T> output_reference forward(input_reference) noexcept;
 237:/usr/include/boost/move/utility_core.hpp ****       #elif defined(BOOST_MOVE_OLD_RVALUE_REF_BINDING_RULES)
 238:/usr/include/boost/move/utility_core.hpp **** 
 239:/usr/include/boost/move/utility_core.hpp ****          //Old move approach, lvalues could bind to rvalue references
 240:/usr/include/boost/move/utility_core.hpp **** 
 241:/usr/include/boost/move/utility_core.hpp ****          template <class T>
 242:/usr/include/boost/move/utility_core.hpp ****          BOOST_MOVE_FORCEINLINE T&& forward(typename ::boost::move_detail::identity<T>::type&& t) B
 243:/usr/include/boost/move/utility_core.hpp ****          {  return t;   }
 244:/usr/include/boost/move/utility_core.hpp **** 
 245:/usr/include/boost/move/utility_core.hpp ****       #else //Old move
 246:/usr/include/boost/move/utility_core.hpp **** 
 247:/usr/include/boost/move/utility_core.hpp ****          template <class T>
 248:/usr/include/boost/move/utility_core.hpp ****          BOOST_MOVE_FORCEINLINE T&& forward(typename ::boost::move_detail::remove_reference<T>::typ
 9037              		.loc 34 248 0
 9038              		.cfi_startproc
 9039 0000 55       		pushq	%rbp
 9040              		.cfi_def_cfa_offset 16
 9041              		.cfi_offset 6, -16
 9042 0001 4889E5   		movq	%rsp, %rbp
 9043              		.cfi_def_cfa_register 6
 9044 0004 48897DF8 		movq	%rdi, -8(%rbp)
 249:/usr/include/boost/move/utility_core.hpp ****          {  return static_cast<T&&>(t);   }
 9045              		.loc 34 249 0
 9046 0008 488B45F8 		movq	-8(%rbp), %rax
 9047 000c 5D       		popq	%rbp
 9048              		.cfi_def_cfa 7, 8
 9049 000d C3       		ret
 9050              		.cfi_endproc
 9051              	.LFE12683:
 9053              		.section	.text._ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_St5dequeIS4_SaIS
 9054              		.align 2
 9055              		.weak	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_St5dequeIS4_SaIS4_EEESt10
 9057              	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_St5dequeIS4_SaIS4_EEESt10_Select
 9058              	.LFB12687:
2318:/usr/include/c++/6/bits/stl_tree.h ****     find(const _Key& __k)
 9059              		.loc 27 2318 0
 9060              		.cfi_startproc
 9061              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 9062              		.cfi_lsda 0x1b,.LLSDA12687
 9063 0000 55       		pushq	%rbp
 9064              		.cfi_def_cfa_offset 16
GAS LISTING /tmp/ccsIN87E.s 			page 428


 9065              		.cfi_offset 6, -16
 9066 0001 4889E5   		movq	%rsp, %rbp
 9067              		.cfi_def_cfa_register 6
 9068 0004 53       		pushq	%rbx
 9069 0005 4883EC28 		subq	$40, %rsp
 9070              		.cfi_offset 3, -24
 9071 0009 48897DD8 		movq	%rdi, -40(%rbp)
 9072 000d 488975D0 		movq	%rsi, -48(%rbp)
2321:/usr/include/c++/6/bits/stl_tree.h ****       return (__j == end()
 9073              		.loc 27 2321 0
 9074 0011 488B45D8 		movq	-40(%rbp), %rax
 9075 0015 4889C7   		movq	%rax, %rdi
 9076 0018 E8000000 		call	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_St5dequeIS4_SaIS4_EEESt10_
 9076      00
 9077 001d 4889C3   		movq	%rax, %rbx
 9078 0020 488B45D8 		movq	-40(%rbp), %rax
 9079 0024 4889C7   		movq	%rax, %rdi
 9080 0027 E8000000 		call	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_St5dequeIS4_SaIS4_EEESt10_
 9080      00
 9081 002c 4889C6   		movq	%rax, %rsi
 9082 002f 488B55D0 		movq	-48(%rbp), %rdx
 9083 0033 488B45D8 		movq	-40(%rbp), %rax
 9084 0037 4889D1   		movq	%rdx, %rcx
 9085 003a 4889DA   		movq	%rbx, %rdx
 9086 003d 4889C7   		movq	%rax, %rdi
 9087              	.LEHB74:
 9088 0040 E8000000 		call	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_St5dequeIS4_SaIS4_EEESt10_
 9088      00
 9089              	.LEHE74:
 9090 0045 488945E0 		movq	%rax, -32(%rbp)
2322:/usr/include/c++/6/bits/stl_tree.h **** 	      || _M_impl._M_key_compare(__k,
 9091              		.loc 27 2322 0
 9092 0049 488B45D8 		movq	-40(%rbp), %rax
 9093 004d 4889C7   		movq	%rax, %rdi
 9094 0050 E8000000 		call	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_St5dequeIS4_SaIS4_EEESt10_
 9094      00
 9095 0055 488945E8 		movq	%rax, -24(%rbp)
2324:/usr/include/c++/6/bits/stl_tree.h ****     }
 9096              		.loc 27 2324 0
 9097 0059 BB010000 		movl	$1, %ebx
 9097      00
2322:/usr/include/c++/6/bits/stl_tree.h **** 	      || _M_impl._M_key_compare(__k,
 9098              		.loc 27 2322 0
 9099 005e 488D55E8 		leaq	-24(%rbp), %rdx
 9100 0062 488D45E0 		leaq	-32(%rbp), %rax
 9101 0066 4889D6   		movq	%rdx, %rsi
 9102 0069 4889C7   		movq	%rax, %rdi
 9103 006c E8000000 		call	_ZNKSt17_Rb_tree_iteratorISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt5dequeIS5_SaIS5_
 9103      00
2324:/usr/include/c++/6/bits/stl_tree.h ****     }
 9104              		.loc 27 2324 0
 9105 0071 84C0     		testb	%al, %al
 9106 0073 7526     		jne	.L425
2324:/usr/include/c++/6/bits/stl_tree.h ****     }
 9107              		.loc 27 2324 0 is_stmt 0 discriminator 2
 9108 0075 488B45E0 		movq	-32(%rbp), %rax
 9109 0079 4889C7   		movq	%rax, %rdi
GAS LISTING /tmp/ccsIN87E.s 			page 429


 9110              	.LEHB75:
 9111 007c E8000000 		call	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_St5dequeIS4_SaIS4_EEESt10_
 9111      00
 9112 0081 4889C2   		movq	%rax, %rdx
2323:/usr/include/c++/6/bits/stl_tree.h **** 					_S_key(__j._M_node))) ? end() : __j;
 9113              		.loc 27 2323 0 is_stmt 1 discriminator 2
 9114 0084 488B45D8 		movq	-40(%rbp), %rax
 9115 0088 488B4DD0 		movq	-48(%rbp), %rcx
 9116 008c 4889CE   		movq	%rcx, %rsi
 9117 008f 4889C7   		movq	%rax, %rdi
 9118 0092 E8000000 		call	_ZNK3pmt10comparatorclERKN5boost13intrusive_ptrINS_8pmt_baseEEES6_
 9118      00
 9119              	.LEHE75:
2323:/usr/include/c++/6/bits/stl_tree.h **** 					_S_key(__j._M_node))) ? end() : __j;
 9120              		.loc 27 2323 0 is_stmt 0 discriminator 3
 9121 0097 84C0     		testb	%al, %al
 9122 0099 740E     		je	.L426
 9123              	.L425:
2324:/usr/include/c++/6/bits/stl_tree.h ****     }
 9124              		.loc 27 2324 0 is_stmt 1 discriminator 1
 9125 009b 488B45D8 		movq	-40(%rbp), %rax
 9126 009f 4889C7   		movq	%rax, %rdi
 9127 00a2 E8000000 		call	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_St5dequeIS4_SaIS4_EEESt10_
 9127      00
 9128 00a7 EB04     		jmp	.L433
 9129              	.L426:
2324:/usr/include/c++/6/bits/stl_tree.h ****     }
 9130              		.loc 27 2324 0 is_stmt 0
 9131 00a9 488B45E0 		movq	-32(%rbp), %rax
 9132              	.L433:
2322:/usr/include/c++/6/bits/stl_tree.h **** 	      || _M_impl._M_key_compare(__k,
 9133              		.loc 27 2322 0 is_stmt 1
 9134 00ad 84DB     		testb	%bl, %bl
2324:/usr/include/c++/6/bits/stl_tree.h ****     }
 9135              		.loc 27 2324 0
 9136 00af EB0B     		jmp	.L434
 9137              	.L432:
2322:/usr/include/c++/6/bits/stl_tree.h **** 	      || _M_impl._M_key_compare(__k,
 9138              		.loc 27 2322 0
 9139 00b1 84DB     		testb	%bl, %bl
2324:/usr/include/c++/6/bits/stl_tree.h ****     }
 9140              		.loc 27 2324 0
 9141 00b3 90       		nop
 9142 00b4 4889C7   		movq	%rax, %rdi
 9143              	.LEHB76:
 9144 00b7 E8000000 		call	_Unwind_Resume@PLT
 9144      00
 9145              	.LEHE76:
 9146              	.L434:
 9147              		.loc 27 2325 0
 9148 00bc 4883C428 		addq	$40, %rsp
 9149 00c0 5B       		popq	%rbx
 9150 00c1 5D       		popq	%rbp
 9151              		.cfi_def_cfa 7, 8
 9152 00c2 C3       		ret
 9153              		.cfi_endproc
 9154              	.LFE12687:
GAS LISTING /tmp/ccsIN87E.s 			page 430


 9155              		.section	.gcc_except_table
 9156              	.LLSDA12687:
 9157 0192 FF       		.byte	0xff
 9158 0193 FF       		.byte	0xff
 9159 0194 01       		.byte	0x1
 9160 0195 0E       		.uleb128 .LLSDACSE12687-.LLSDACSB12687
 9161              	.LLSDACSB12687:
 9162 0196 40       		.uleb128 .LEHB74-.LFB12687
 9163 0197 05       		.uleb128 .LEHE74-.LEHB74
 9164 0198 00       		.uleb128 0
 9165 0199 00       		.uleb128 0
 9166 019a 7C       		.uleb128 .LEHB75-.LFB12687
 9167 019b 1B       		.uleb128 .LEHE75-.LEHB75
 9168 019c B101     		.uleb128 .L432-.LFB12687
 9169 019e 00       		.uleb128 0
 9170 019f B701     		.uleb128 .LEHB76-.LFB12687
 9171 01a1 05       		.uleb128 .LEHE76-.LEHB76
 9172 01a2 00       		.uleb128 0
 9173 01a3 00       		.uleb128 0
 9174              	.LLSDACSE12687:
 9175              		.section	.text._ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_St5dequeIS4_SaIS
 9177              		.section	.text._ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_St5dequeIS4_SaIS
 9178              		.align 2
 9179              		.weak	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_St5dequeIS4_SaIS4_EEESt10
 9181              	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_St5dequeIS4_SaIS4_EEESt10_Select
 9182              	.LFB12688:
 892:/usr/include/c++/6/bits/stl_tree.h ****       { return iterator(&this->_M_impl._M_header); }
 9183              		.loc 27 892 0
 9184              		.cfi_startproc
 9185 0000 55       		pushq	%rbp
 9186              		.cfi_def_cfa_offset 16
 9187              		.cfi_offset 6, -16
 9188 0001 4889E5   		movq	%rsp, %rbp
 9189              		.cfi_def_cfa_register 6
 9190 0004 4883EC20 		subq	$32, %rsp
 9191 0008 48897DE8 		movq	%rdi, -24(%rbp)
 893:/usr/include/c++/6/bits/stl_tree.h **** 
 9192              		.loc 27 893 0
 9193 000c 488B45E8 		movq	-24(%rbp), %rax
 9194 0010 488D5008 		leaq	8(%rax), %rdx
 9195 0014 488D45F8 		leaq	-8(%rbp), %rax
 9196 0018 4889D6   		movq	%rdx, %rsi
 9197 001b 4889C7   		movq	%rax, %rdi
 9198 001e E8000000 		call	_ZNSt17_Rb_tree_iteratorISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt5dequeIS5_SaIS5_E
 9198      00
 9199 0023 488B45F8 		movq	-8(%rbp), %rax
 9200 0027 C9       		leave
 9201              		.cfi_def_cfa 7, 8
 9202 0028 C3       		ret
 9203              		.cfi_endproc
 9204              	.LFE12688:
 9206              		.section	.text._ZNSt12_Vector_baseIlSaIlEE12_Vector_implD2Ev,"axG",@progbits,_ZNSt12_Vector_baseIl
 9207              		.align 2
 9208              		.weak	_ZNSt12_Vector_baseIlSaIlEE12_Vector_implD2Ev
 9210              	_ZNSt12_Vector_baseIlSaIlEE12_Vector_implD2Ev:
 9211              	.LFB12718:
  79:/usr/include/c++/6/bits/stl_vector.h ****       : public _Tp_alloc_type
GAS LISTING /tmp/ccsIN87E.s 			page 431


 9212              		.loc 30 79 0
 9213              		.cfi_startproc
 9214 0000 55       		pushq	%rbp
 9215              		.cfi_def_cfa_offset 16
 9216              		.cfi_offset 6, -16
 9217 0001 4889E5   		movq	%rsp, %rbp
 9218              		.cfi_def_cfa_register 6
 9219 0004 4883EC10 		subq	$16, %rsp
 9220 0008 48897DF8 		movq	%rdi, -8(%rbp)
 9221              	.LBB88:
  79:/usr/include/c++/6/bits/stl_vector.h ****       : public _Tp_alloc_type
 9222              		.loc 30 79 0
 9223 000c 488B45F8 		movq	-8(%rbp), %rax
 9224 0010 4889C7   		movq	%rax, %rdi
 9225 0013 E8000000 		call	_ZNSaIlED2Ev
 9225      00
 9226              	.LBE88:
 9227 0018 90       		nop
 9228 0019 C9       		leave
 9229              		.cfi_def_cfa 7, 8
 9230 001a C3       		ret
 9231              		.cfi_endproc
 9232              	.LFE12718:
 9234              		.weak	_ZNSt12_Vector_baseIlSaIlEE12_Vector_implD1Ev
 9235              		.set	_ZNSt12_Vector_baseIlSaIlEE12_Vector_implD1Ev,_ZNSt12_Vector_baseIlSaIlEE12_Vector_implD2Ev
 9236              		.section	.text._ZNSt12_Vector_baseIlSaIlEED2Ev,"axG",@progbits,_ZNSt12_Vector_baseIlSaIlEED5Ev,com
 9237              		.align 2
 9238              		.weak	_ZNSt12_Vector_baseIlSaIlEED2Ev
 9240              	_ZNSt12_Vector_baseIlSaIlEED2Ev:
 9241              	.LFB12723:
 159:/usr/include/c++/6/bits/stl_vector.h ****       { _M_deallocate(this->_M_impl._M_start, this->_M_impl._M_end_of_storage
 9242              		.loc 30 159 0
 9243              		.cfi_startproc
 9244              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 9245              		.cfi_lsda 0x1b,.LLSDA12723
 9246 0000 55       		pushq	%rbp
 9247              		.cfi_def_cfa_offset 16
 9248              		.cfi_offset 6, -16
 9249 0001 4889E5   		movq	%rsp, %rbp
 9250              		.cfi_def_cfa_register 6
 9251 0004 4883EC10 		subq	$16, %rsp
 9252 0008 48897DF8 		movq	%rdi, -8(%rbp)
 9253              	.LBB89:
 160:/usr/include/c++/6/bits/stl_vector.h **** 		      - this->_M_impl._M_start); }
 9254              		.loc 30 160 0
 9255 000c 488B45F8 		movq	-8(%rbp), %rax
 9256 0010 488B4010 		movq	16(%rax), %rax
 161:/usr/include/c++/6/bits/stl_vector.h **** 
 9257              		.loc 30 161 0
 9258 0014 4889C2   		movq	%rax, %rdx
 9259 0017 488B45F8 		movq	-8(%rbp), %rax
 9260 001b 488B00   		movq	(%rax), %rax
 9261 001e 4829C2   		subq	%rax, %rdx
 9262 0021 4889D0   		movq	%rdx, %rax
 160:/usr/include/c++/6/bits/stl_vector.h **** 		      - this->_M_impl._M_start); }
 9263              		.loc 30 160 0
 9264 0024 48C1F803 		sarq	$3, %rax
GAS LISTING /tmp/ccsIN87E.s 			page 432


 9265 0028 4889C2   		movq	%rax, %rdx
 9266 002b 488B45F8 		movq	-8(%rbp), %rax
 9267 002f 488B08   		movq	(%rax), %rcx
 9268 0032 488B45F8 		movq	-8(%rbp), %rax
 9269 0036 4889CE   		movq	%rcx, %rsi
 9270 0039 4889C7   		movq	%rax, %rdi
 9271 003c E8000000 		call	_ZNSt12_Vector_baseIlSaIlEE13_M_deallocateEPlm
 9271      00
 161:/usr/include/c++/6/bits/stl_vector.h **** 
 9272              		.loc 30 161 0
 9273 0041 488B45F8 		movq	-8(%rbp), %rax
 9274 0045 4889C7   		movq	%rax, %rdi
 9275 0048 E8000000 		call	_ZNSt12_Vector_baseIlSaIlEE12_Vector_implD1Ev
 9275      00
 9276              	.LBE89:
 9277 004d 90       		nop
 9278 004e C9       		leave
 9279              		.cfi_def_cfa 7, 8
 9280 004f C3       		ret
 9281              		.cfi_endproc
 9282              	.LFE12723:
 9283              		.section	.gcc_except_table
 9284              	.LLSDA12723:
 9285 01a4 FF       		.byte	0xff
 9286 01a5 FF       		.byte	0xff
 9287 01a6 01       		.byte	0x1
 9288 01a7 00       		.uleb128 .LLSDACSE12723-.LLSDACSB12723
 9289              	.LLSDACSB12723:
 9290              	.LLSDACSE12723:
 9291              		.section	.text._ZNSt12_Vector_baseIlSaIlEED2Ev,"axG",@progbits,_ZNSt12_Vector_baseIlSaIlEED5Ev,com
 9293              		.weak	_ZNSt12_Vector_baseIlSaIlEED1Ev
 9294              		.set	_ZNSt12_Vector_baseIlSaIlEED1Ev,_ZNSt12_Vector_baseIlSaIlEED2Ev
 9295              		.section	.text._ZNSt12_Vector_baseIlSaIlEE19_M_get_Tp_allocatorEv,"axG",@progbits,_ZNSt12_Vector_b
 9296              		.align 2
 9297              		.weak	_ZNSt12_Vector_baseIlSaIlEE19_M_get_Tp_allocatorEv
 9299              	_ZNSt12_Vector_baseIlSaIlEE19_M_get_Tp_allocatorEv:
 9300              	.LFB12725:
 113:/usr/include/c++/6/bits/stl_vector.h ****       { return *static_cast<_Tp_alloc_type*>(&this->_M_impl); }
 9301              		.loc 30 113 0
 9302              		.cfi_startproc
 9303 0000 55       		pushq	%rbp
 9304              		.cfi_def_cfa_offset 16
 9305              		.cfi_offset 6, -16
 9306 0001 4889E5   		movq	%rsp, %rbp
 9307              		.cfi_def_cfa_register 6
 9308 0004 48897DF8 		movq	%rdi, -8(%rbp)
 114:/usr/include/c++/6/bits/stl_vector.h **** 
 9309              		.loc 30 114 0
 9310 0008 488B45F8 		movq	-8(%rbp), %rax
 9311 000c 5D       		popq	%rbp
 9312              		.cfi_def_cfa 7, 8
 9313 000d C3       		ret
 9314              		.cfi_endproc
 9315              	.LFE12725:
 9317              		.section	.text._ZSt8_DestroyIPllEvT_S1_RSaIT0_E,"axG",@progbits,_ZSt8_DestroyIPllEvT_S1_RSaIT0_E,c
 9318              		.weak	_ZSt8_DestroyIPllEvT_S1_RSaIT0_E
 9320              	_ZSt8_DestroyIPllEvT_S1_RSaIT0_E:
GAS LISTING /tmp/ccsIN87E.s 			page 433


 9321              	.LFB12726:
 9322              		.file 35 "/usr/include/c++/6/bits/stl_construct.h"
   1:/usr/include/c++/6/bits/stl_construct.h **** // nonstandard construct and destroy functions -*- C++ -*-
   2:/usr/include/c++/6/bits/stl_construct.h **** 
   3:/usr/include/c++/6/bits/stl_construct.h **** // Copyright (C) 2001-2016 Free Software Foundation, Inc.
   4:/usr/include/c++/6/bits/stl_construct.h **** //
   5:/usr/include/c++/6/bits/stl_construct.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/6/bits/stl_construct.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/6/bits/stl_construct.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/6/bits/stl_construct.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/6/bits/stl_construct.h **** // any later version.
  10:/usr/include/c++/6/bits/stl_construct.h **** 
  11:/usr/include/c++/6/bits/stl_construct.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/6/bits/stl_construct.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/6/bits/stl_construct.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/6/bits/stl_construct.h **** // GNU General Public License for more details.
  15:/usr/include/c++/6/bits/stl_construct.h **** 
  16:/usr/include/c++/6/bits/stl_construct.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/6/bits/stl_construct.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/6/bits/stl_construct.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/6/bits/stl_construct.h **** 
  20:/usr/include/c++/6/bits/stl_construct.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/6/bits/stl_construct.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/6/bits/stl_construct.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/6/bits/stl_construct.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/6/bits/stl_construct.h **** 
  25:/usr/include/c++/6/bits/stl_construct.h **** /*
  26:/usr/include/c++/6/bits/stl_construct.h ****  *
  27:/usr/include/c++/6/bits/stl_construct.h ****  * Copyright (c) 1994
  28:/usr/include/c++/6/bits/stl_construct.h ****  * Hewlett-Packard Company
  29:/usr/include/c++/6/bits/stl_construct.h ****  *
  30:/usr/include/c++/6/bits/stl_construct.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:/usr/include/c++/6/bits/stl_construct.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:/usr/include/c++/6/bits/stl_construct.h ****  * provided that the above copyright notice appear in all copies and
  33:/usr/include/c++/6/bits/stl_construct.h ****  * that both that copyright notice and this permission notice appear
  34:/usr/include/c++/6/bits/stl_construct.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:/usr/include/c++/6/bits/stl_construct.h ****  * representations about the suitability of this software for any
  36:/usr/include/c++/6/bits/stl_construct.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:/usr/include/c++/6/bits/stl_construct.h ****  *
  38:/usr/include/c++/6/bits/stl_construct.h ****  *
  39:/usr/include/c++/6/bits/stl_construct.h ****  * Copyright (c) 1996,1997
  40:/usr/include/c++/6/bits/stl_construct.h ****  * Silicon Graphics Computer Systems, Inc.
  41:/usr/include/c++/6/bits/stl_construct.h ****  *
  42:/usr/include/c++/6/bits/stl_construct.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:/usr/include/c++/6/bits/stl_construct.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:/usr/include/c++/6/bits/stl_construct.h ****  * provided that the above copyright notice appear in all copies and
  45:/usr/include/c++/6/bits/stl_construct.h ****  * that both that copyright notice and this permission notice appear
  46:/usr/include/c++/6/bits/stl_construct.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:/usr/include/c++/6/bits/stl_construct.h ****  * representations about the suitability of this software for any
  48:/usr/include/c++/6/bits/stl_construct.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:/usr/include/c++/6/bits/stl_construct.h ****  */
  50:/usr/include/c++/6/bits/stl_construct.h **** 
  51:/usr/include/c++/6/bits/stl_construct.h **** /** @file bits/stl_construct.h
  52:/usr/include/c++/6/bits/stl_construct.h ****  *  This is an internal header file, included by other library headers.
  53:/usr/include/c++/6/bits/stl_construct.h ****  *  Do not attempt to use it directly. @headername{memory}
  54:/usr/include/c++/6/bits/stl_construct.h ****  */
  55:/usr/include/c++/6/bits/stl_construct.h **** 
GAS LISTING /tmp/ccsIN87E.s 			page 434


  56:/usr/include/c++/6/bits/stl_construct.h **** #ifndef _STL_CONSTRUCT_H
  57:/usr/include/c++/6/bits/stl_construct.h **** #define _STL_CONSTRUCT_H 1
  58:/usr/include/c++/6/bits/stl_construct.h **** 
  59:/usr/include/c++/6/bits/stl_construct.h **** #include <new>
  60:/usr/include/c++/6/bits/stl_construct.h **** #include <bits/move.h>
  61:/usr/include/c++/6/bits/stl_construct.h **** #include <ext/alloc_traits.h>
  62:/usr/include/c++/6/bits/stl_construct.h **** 
  63:/usr/include/c++/6/bits/stl_construct.h **** namespace std _GLIBCXX_VISIBILITY(default)
  64:/usr/include/c++/6/bits/stl_construct.h **** {
  65:/usr/include/c++/6/bits/stl_construct.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  66:/usr/include/c++/6/bits/stl_construct.h **** 
  67:/usr/include/c++/6/bits/stl_construct.h ****   /**
  68:/usr/include/c++/6/bits/stl_construct.h ****    * Constructs an object in existing memory by invoking an allocated
  69:/usr/include/c++/6/bits/stl_construct.h ****    * object's constructor with an initializer.
  70:/usr/include/c++/6/bits/stl_construct.h ****    */
  71:/usr/include/c++/6/bits/stl_construct.h **** #if __cplusplus >= 201103L
  72:/usr/include/c++/6/bits/stl_construct.h ****   template<typename _T1, typename... _Args>
  73:/usr/include/c++/6/bits/stl_construct.h ****     inline void
  74:/usr/include/c++/6/bits/stl_construct.h ****     _Construct(_T1* __p, _Args&&... __args)
  75:/usr/include/c++/6/bits/stl_construct.h ****     { ::new(static_cast<void*>(__p)) _T1(std::forward<_Args>(__args)...); }
  76:/usr/include/c++/6/bits/stl_construct.h **** #else
  77:/usr/include/c++/6/bits/stl_construct.h ****   template<typename _T1, typename _T2>
  78:/usr/include/c++/6/bits/stl_construct.h ****     inline void
  79:/usr/include/c++/6/bits/stl_construct.h ****     _Construct(_T1* __p, const _T2& __value)
  80:/usr/include/c++/6/bits/stl_construct.h ****     {
  81:/usr/include/c++/6/bits/stl_construct.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
  82:/usr/include/c++/6/bits/stl_construct.h ****       // 402. wrong new expression in [some_]allocator::construct
  83:/usr/include/c++/6/bits/stl_construct.h ****       ::new(static_cast<void*>(__p)) _T1(__value);
  84:/usr/include/c++/6/bits/stl_construct.h ****     }
  85:/usr/include/c++/6/bits/stl_construct.h **** #endif
  86:/usr/include/c++/6/bits/stl_construct.h **** 
  87:/usr/include/c++/6/bits/stl_construct.h ****   /**
  88:/usr/include/c++/6/bits/stl_construct.h ****    * Destroy the object pointed to by a pointer type.
  89:/usr/include/c++/6/bits/stl_construct.h ****    */
  90:/usr/include/c++/6/bits/stl_construct.h ****   template<typename _Tp>
  91:/usr/include/c++/6/bits/stl_construct.h ****     inline void
  92:/usr/include/c++/6/bits/stl_construct.h ****     _Destroy(_Tp* __pointer)
  93:/usr/include/c++/6/bits/stl_construct.h ****     { __pointer->~_Tp(); }
  94:/usr/include/c++/6/bits/stl_construct.h **** 
  95:/usr/include/c++/6/bits/stl_construct.h ****   template<bool>
  96:/usr/include/c++/6/bits/stl_construct.h ****     struct _Destroy_aux
  97:/usr/include/c++/6/bits/stl_construct.h ****     {
  98:/usr/include/c++/6/bits/stl_construct.h ****       template<typename _ForwardIterator>
  99:/usr/include/c++/6/bits/stl_construct.h ****         static void
 100:/usr/include/c++/6/bits/stl_construct.h ****         __destroy(_ForwardIterator __first, _ForwardIterator __last)
 101:/usr/include/c++/6/bits/stl_construct.h **** 	{
 102:/usr/include/c++/6/bits/stl_construct.h **** 	  for (; __first != __last; ++__first)
 103:/usr/include/c++/6/bits/stl_construct.h **** 	    std::_Destroy(std::__addressof(*__first));
 104:/usr/include/c++/6/bits/stl_construct.h **** 	}
 105:/usr/include/c++/6/bits/stl_construct.h ****     };
 106:/usr/include/c++/6/bits/stl_construct.h **** 
 107:/usr/include/c++/6/bits/stl_construct.h ****   template<>
 108:/usr/include/c++/6/bits/stl_construct.h ****     struct _Destroy_aux<true>
 109:/usr/include/c++/6/bits/stl_construct.h ****     {
 110:/usr/include/c++/6/bits/stl_construct.h ****       template<typename _ForwardIterator>
 111:/usr/include/c++/6/bits/stl_construct.h ****         static void
 112:/usr/include/c++/6/bits/stl_construct.h ****         __destroy(_ForwardIterator, _ForwardIterator) { }
GAS LISTING /tmp/ccsIN87E.s 			page 435


 113:/usr/include/c++/6/bits/stl_construct.h ****     };
 114:/usr/include/c++/6/bits/stl_construct.h **** 
 115:/usr/include/c++/6/bits/stl_construct.h ****   /**
 116:/usr/include/c++/6/bits/stl_construct.h ****    * Destroy a range of objects.  If the value_type of the object has
 117:/usr/include/c++/6/bits/stl_construct.h ****    * a trivial destructor, the compiler should optimize all of this
 118:/usr/include/c++/6/bits/stl_construct.h ****    * away, otherwise the objects' destructors must be invoked.
 119:/usr/include/c++/6/bits/stl_construct.h ****    */
 120:/usr/include/c++/6/bits/stl_construct.h ****   template<typename _ForwardIterator>
 121:/usr/include/c++/6/bits/stl_construct.h ****     inline void
 122:/usr/include/c++/6/bits/stl_construct.h ****     _Destroy(_ForwardIterator __first, _ForwardIterator __last)
 123:/usr/include/c++/6/bits/stl_construct.h ****     {
 124:/usr/include/c++/6/bits/stl_construct.h ****       typedef typename iterator_traits<_ForwardIterator>::value_type
 125:/usr/include/c++/6/bits/stl_construct.h ****                        _Value_type;
 126:/usr/include/c++/6/bits/stl_construct.h ****       std::_Destroy_aux<__has_trivial_destructor(_Value_type)>::
 127:/usr/include/c++/6/bits/stl_construct.h **** 	__destroy(__first, __last);
 128:/usr/include/c++/6/bits/stl_construct.h ****     }
 129:/usr/include/c++/6/bits/stl_construct.h **** 
 130:/usr/include/c++/6/bits/stl_construct.h ****   /**
 131:/usr/include/c++/6/bits/stl_construct.h ****    * Destroy a range of objects using the supplied allocator.  For
 132:/usr/include/c++/6/bits/stl_construct.h ****    * nondefault allocators we do not optimize away invocation of 
 133:/usr/include/c++/6/bits/stl_construct.h ****    * destroy() even if _Tp has a trivial destructor.
 134:/usr/include/c++/6/bits/stl_construct.h ****    */
 135:/usr/include/c++/6/bits/stl_construct.h **** 
 136:/usr/include/c++/6/bits/stl_construct.h ****   template<typename _ForwardIterator, typename _Allocator>
 137:/usr/include/c++/6/bits/stl_construct.h ****     void
 138:/usr/include/c++/6/bits/stl_construct.h ****     _Destroy(_ForwardIterator __first, _ForwardIterator __last,
 139:/usr/include/c++/6/bits/stl_construct.h **** 	     _Allocator& __alloc)
 140:/usr/include/c++/6/bits/stl_construct.h ****     {
 141:/usr/include/c++/6/bits/stl_construct.h ****       typedef __gnu_cxx::__alloc_traits<_Allocator> __traits;
 142:/usr/include/c++/6/bits/stl_construct.h ****       for (; __first != __last; ++__first)
 143:/usr/include/c++/6/bits/stl_construct.h **** 	__traits::destroy(__alloc, std::__addressof(*__first));
 144:/usr/include/c++/6/bits/stl_construct.h ****     }
 145:/usr/include/c++/6/bits/stl_construct.h **** 
 146:/usr/include/c++/6/bits/stl_construct.h ****   template<typename _ForwardIterator, typename _Tp>
 147:/usr/include/c++/6/bits/stl_construct.h ****     inline void
 148:/usr/include/c++/6/bits/stl_construct.h ****     _Destroy(_ForwardIterator __first, _ForwardIterator __last,
 9323              		.loc 35 148 0
 9324              		.cfi_startproc
 9325 0000 55       		pushq	%rbp
 9326              		.cfi_def_cfa_offset 16
 9327              		.cfi_offset 6, -16
 9328 0001 4889E5   		movq	%rsp, %rbp
 9329              		.cfi_def_cfa_register 6
 9330 0004 4883EC20 		subq	$32, %rsp
 9331 0008 48897DF8 		movq	%rdi, -8(%rbp)
 9332 000c 488975F0 		movq	%rsi, -16(%rbp)
 9333 0010 488955E8 		movq	%rdx, -24(%rbp)
 149:/usr/include/c++/6/bits/stl_construct.h **** 	     allocator<_Tp>&)
 150:/usr/include/c++/6/bits/stl_construct.h ****     {
 151:/usr/include/c++/6/bits/stl_construct.h ****       _Destroy(__first, __last);
 9334              		.loc 35 151 0
 9335 0014 488B55F0 		movq	-16(%rbp), %rdx
 9336 0018 488B45F8 		movq	-8(%rbp), %rax
 9337 001c 4889D6   		movq	%rdx, %rsi
 9338 001f 4889C7   		movq	%rax, %rdi
 9339 0022 E8000000 		call	_ZSt8_DestroyIPlEvT_S1_
 9339      00
GAS LISTING /tmp/ccsIN87E.s 			page 436


 152:/usr/include/c++/6/bits/stl_construct.h ****     }
 9340              		.loc 35 152 0
 9341 0027 90       		nop
 9342 0028 C9       		leave
 9343              		.cfi_def_cfa 7, 8
 9344 0029 C3       		ret
 9345              		.cfi_endproc
 9346              	.LFE12726:
 9348              		.section	.text._ZN5boost13intrusive_ptrIN3pmt8pmt_baseEE4swapERS3_,"axG",@progbits,_ZN5boost13intr
 9349              		.align 2
 9350              		.weak	_ZN5boost13intrusive_ptrIN3pmt8pmt_baseEE4swapERS3_
 9352              	_ZN5boost13intrusive_ptrIN3pmt8pmt_baseEE4swapERS3_:
 9353              	.LFB12727:
 182:/usr/include/boost/smart_ptr/intrusive_ptr.hpp **** 
 183:/usr/include/boost/smart_ptr/intrusive_ptr.hpp ****     T * detach() BOOST_NOEXCEPT
 184:/usr/include/boost/smart_ptr/intrusive_ptr.hpp ****     {
 185:/usr/include/boost/smart_ptr/intrusive_ptr.hpp ****         T * ret = px;
 186:/usr/include/boost/smart_ptr/intrusive_ptr.hpp ****         px = 0;
 187:/usr/include/boost/smart_ptr/intrusive_ptr.hpp ****         return ret;
 188:/usr/include/boost/smart_ptr/intrusive_ptr.hpp ****     }
 189:/usr/include/boost/smart_ptr/intrusive_ptr.hpp **** 
 190:/usr/include/boost/smart_ptr/intrusive_ptr.hpp ****     T & operator*() const
 191:/usr/include/boost/smart_ptr/intrusive_ptr.hpp ****     {
 192:/usr/include/boost/smart_ptr/intrusive_ptr.hpp ****         BOOST_ASSERT( px != 0 );
 193:/usr/include/boost/smart_ptr/intrusive_ptr.hpp ****         return *px;
 194:/usr/include/boost/smart_ptr/intrusive_ptr.hpp ****     }
 195:/usr/include/boost/smart_ptr/intrusive_ptr.hpp **** 
 196:/usr/include/boost/smart_ptr/intrusive_ptr.hpp ****     T * operator->() const
 197:/usr/include/boost/smart_ptr/intrusive_ptr.hpp ****     {
 198:/usr/include/boost/smart_ptr/intrusive_ptr.hpp ****         BOOST_ASSERT( px != 0 );
 199:/usr/include/boost/smart_ptr/intrusive_ptr.hpp ****         return px;
 200:/usr/include/boost/smart_ptr/intrusive_ptr.hpp ****     }
 201:/usr/include/boost/smart_ptr/intrusive_ptr.hpp **** 
 202:/usr/include/boost/smart_ptr/intrusive_ptr.hpp **** // implicit conversion to "bool"
 203:/usr/include/boost/smart_ptr/intrusive_ptr.hpp **** #include <boost/smart_ptr/detail/operator_bool.hpp>
 204:/usr/include/boost/smart_ptr/intrusive_ptr.hpp **** 
 205:/usr/include/boost/smart_ptr/intrusive_ptr.hpp ****     void swap(intrusive_ptr & rhs) BOOST_NOEXCEPT
 9354              		.loc 25 205 0
 9355              		.cfi_startproc
 9356 0000 55       		pushq	%rbp
 9357              		.cfi_def_cfa_offset 16
 9358              		.cfi_offset 6, -16
 9359 0001 4889E5   		movq	%rsp, %rbp
 9360              		.cfi_def_cfa_register 6
 9361 0004 48897DE8 		movq	%rdi, -24(%rbp)
 9362 0008 488975E0 		movq	%rsi, -32(%rbp)
 206:/usr/include/boost/smart_ptr/intrusive_ptr.hpp ****     {
 207:/usr/include/boost/smart_ptr/intrusive_ptr.hpp ****         T * tmp = px;
 9363              		.loc 25 207 0
 9364 000c 488B45E8 		movq	-24(%rbp), %rax
 9365 0010 488B00   		movq	(%rax), %rax
 9366 0013 488945F8 		movq	%rax, -8(%rbp)
 208:/usr/include/boost/smart_ptr/intrusive_ptr.hpp ****         px = rhs.px;
 9367              		.loc 25 208 0
 9368 0017 488B45E0 		movq	-32(%rbp), %rax
 9369 001b 488B10   		movq	(%rax), %rdx
 9370 001e 488B45E8 		movq	-24(%rbp), %rax
GAS LISTING /tmp/ccsIN87E.s 			page 437


 9371 0022 488910   		movq	%rdx, (%rax)
 209:/usr/include/boost/smart_ptr/intrusive_ptr.hpp ****         rhs.px = tmp;
 9372              		.loc 25 209 0
 9373 0025 488B45E0 		movq	-32(%rbp), %rax
 9374 0029 488B55F8 		movq	-8(%rbp), %rdx
 9375 002d 488910   		movq	%rdx, (%rax)
 210:/usr/include/boost/smart_ptr/intrusive_ptr.hpp ****     }
 9376              		.loc 25 210 0
 9377 0030 90       		nop
 9378 0031 5D       		popq	%rbp
 9379              		.cfi_def_cfa 7, 8
 9380 0032 C3       		ret
 9381              		.cfi_endproc
 9382              	.LFE12727:
 9384              		.section	.text._ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEE7add_refEv,"a
 9385              		.align 2
 9386              		.weak	_ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEE7add_refEv
 9388              	_ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEE7add_refEv:
 9389              	.LFB12913:
  69:/usr/include/boost/exception/exception.hpp ****                 {
 9390              		.loc 3 69 0
 9391              		.cfi_startproc
 9392 0000 55       		pushq	%rbp
 9393              		.cfi_def_cfa_offset 16
 9394              		.cfi_offset 6, -16
 9395 0001 4889E5   		movq	%rsp, %rbp
 9396              		.cfi_def_cfa_register 6
 9397 0004 4883EC10 		subq	$16, %rsp
 9398 0008 48897DF8 		movq	%rdi, -8(%rbp)
  71:/usr/include/boost/exception/exception.hpp ****                     px_->add_ref();
 9399              		.loc 3 71 0
 9400 000c 488B45F8 		movq	-8(%rbp), %rax
 9401 0010 488B00   		movq	(%rax), %rax
 9402 0013 4885C0   		testq	%rax, %rax
 9403 0016 741D     		je	.L445
  72:/usr/include/boost/exception/exception.hpp ****                 }
 9404              		.loc 3 72 0
 9405 0018 488B45F8 		movq	-8(%rbp), %rax
 9406 001c 488B00   		movq	(%rax), %rax
 9407 001f 488B00   		movq	(%rax), %rax
 9408 0022 4883C018 		addq	$24, %rax
 9409 0026 488B00   		movq	(%rax), %rax
 9410 0029 488B55F8 		movq	-8(%rbp), %rdx
 9411 002d 488B12   		movq	(%rdx), %rdx
 9412 0030 4889D7   		movq	%rdx, %rdi
 9413 0033 FFD0     		call	*%rax
 9414              	.LVL9:
 9415              	.L445:
  73:/usr/include/boost/exception/exception.hpp **** 
 9416              		.loc 3 73 0
 9417 0035 90       		nop
 9418 0036 C9       		leave
 9419              		.cfi_def_cfa 7, 8
 9420 0037 C3       		ret
 9421              		.cfi_endproc
 9422              	.LFE12913:
 9424              		.section	.text._ZN5boost16exception_detail10clone_baseC2Ev,"axG",@progbits,_ZN5boost16exception_de
GAS LISTING /tmp/ccsIN87E.s 			page 438


 9425              		.align 2
 9426              		.weak	_ZN5boost16exception_detail10clone_baseC2Ev
 9428              	_ZN5boost16exception_detail10clone_baseC2Ev:
 9429              	.LFB12937:
 415:/usr/include/boost/exception/exception.hpp ****             {
 9430              		.loc 3 415 0
 9431              		.cfi_startproc
 9432 0000 55       		pushq	%rbp
 9433              		.cfi_def_cfa_offset 16
 9434              		.cfi_offset 6, -16
 9435 0001 4889E5   		movq	%rsp, %rbp
 9436              		.cfi_def_cfa_register 6
 9437 0004 48897DF8 		movq	%rdi, -8(%rbp)
 9438              	.LBB90:
 415:/usr/include/boost/exception/exception.hpp ****             {
 9439              		.loc 3 415 0
 9440 0008 488D1500 		leaq	16+_ZTVN5boost16exception_detail10clone_baseE(%rip), %rdx
 9440      000000
 9441 000f 488B45F8 		movq	-8(%rbp), %rax
 9442 0013 488910   		movq	%rdx, (%rax)
 9443              	.LBE90:
 9444 0016 90       		nop
 9445 0017 5D       		popq	%rbp
 9446              		.cfi_def_cfa 7, 8
 9447 0018 C3       		ret
 9448              		.cfi_endproc
 9449              	.LFE12937:
 9451              		.weak	_ZN5boost16exception_detail10clone_baseC1Ev
 9452              		.set	_ZN5boost16exception_detail10clone_baseC1Ev,_ZN5boost16exception_detail10clone_baseC2Ev
 9453              		.section	.text._ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EEC1ERKS2_,"axG",@progbits,
 9454              		.align 2
 9455              		.weak	_ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EEC1ERKS2_
 9457              	_ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EEC1ERKS2_:
 9458              	.LFB12940:
 460:/usr/include/boost/exception/exception.hpp ****             public T,
 461:/usr/include/boost/exception/exception.hpp ****             public virtual clone_base
 462:/usr/include/boost/exception/exception.hpp ****             {
 463:/usr/include/boost/exception/exception.hpp ****             struct clone_tag { };
 464:/usr/include/boost/exception/exception.hpp ****             clone_impl( clone_impl const & x, clone_tag ):
 465:/usr/include/boost/exception/exception.hpp ****                 T(x)
 466:/usr/include/boost/exception/exception.hpp ****                 {
 467:/usr/include/boost/exception/exception.hpp ****                 copy_boost_exception(this,&x);
 468:/usr/include/boost/exception/exception.hpp ****                 }
 469:/usr/include/boost/exception/exception.hpp **** 
 470:/usr/include/boost/exception/exception.hpp ****             public:
 471:/usr/include/boost/exception/exception.hpp **** 
 472:/usr/include/boost/exception/exception.hpp ****             explicit
 473:/usr/include/boost/exception/exception.hpp ****             clone_impl( T const & x ):
 9459              		.loc 3 473 0
 9460              		.cfi_startproc
 9461              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 9462              		.cfi_lsda 0x1b,.LLSDA12940
 9463 0000 55       		pushq	%rbp
 9464              		.cfi_def_cfa_offset 16
 9465              		.cfi_offset 6, -16
 9466 0001 4889E5   		movq	%rsp, %rbp
 9467              		.cfi_def_cfa_register 6
GAS LISTING /tmp/ccsIN87E.s 			page 439


 9468 0004 53       		pushq	%rbx
 9469 0005 4883EC18 		subq	$24, %rsp
 9470              		.cfi_offset 3, -24
 9471 0009 48897DE8 		movq	%rdi, -24(%rbp)
 9472 000d 488975E0 		movq	%rsi, -32(%rbp)
 9473              	.LBB91:
 474:/usr/include/boost/exception/exception.hpp ****                 T(x)
 9474              		.loc 3 474 0
 9475 0011 488B45E8 		movq	-24(%rbp), %rax
 9476 0015 4883C030 		addq	$48, %rax
 9477 0019 4889C7   		movq	%rax, %rdi
 9478 001c E8000000 		call	_ZN5boost16exception_detail10clone_baseC2Ev
 9478      00
 9479 0021 488B45E8 		movq	-24(%rbp), %rax
 9480 0025 488B55E0 		movq	-32(%rbp), %rdx
 9481 0029 4889D6   		movq	%rdx, %rsi
 9482 002c 4889C7   		movq	%rax, %rdi
 9483              	.LEHB77:
 9484 002f E8000000 		call	_ZN5boost16exception_detail10bad_alloc_C2ERKS1_
 9484      00
 9485              	.LEHE77:
 9486              		.loc 3 474 0 is_stmt 0 discriminator 5
 9487 0034 488D1500 		leaq	24+_ZTVN5boost16exception_detail10clone_implINS0_10bad_alloc_EEE(%rip), %rdx
 9487      000000
 9488 003b 488B45E8 		movq	-24(%rbp), %rax
 9489 003f 488910   		movq	%rdx, (%rax)
 9490 0042 488D1500 		leaq	72+_ZTVN5boost16exception_detail10clone_implINS0_10bad_alloc_EEE(%rip), %rdx
 9490      000000
 9491 0049 488B45E8 		movq	-24(%rbp), %rax
 9492 004d 48895028 		movq	%rdx, 40(%rax)
 9493 0051 488B45E8 		movq	-24(%rbp), %rax
 9494 0055 488D5030 		leaq	48(%rax), %rdx
 9495 0059 488D0500 		leaq	136+_ZTVN5boost16exception_detail10clone_implINS0_10bad_alloc_EEE(%rip), %rax
 9495      000000
 9496 0060 488902   		movq	%rax, (%rdx)
 475:/usr/include/boost/exception/exception.hpp ****                 {
 476:/usr/include/boost/exception/exception.hpp ****                 copy_boost_exception(this,&x);
 9497              		.loc 3 476 0 is_stmt 1 discriminator 5
 9498 0063 488B55E0 		movq	-32(%rbp), %rdx
 9499 0067 488B45E8 		movq	-24(%rbp), %rax
 9500 006b 4889D6   		movq	%rdx, %rsi
 9501 006e 4889C7   		movq	%rax, %rdi
 9502              	.LEHB78:
 9503 0071 E8000000 		call	_ZN5boost16exception_detail20copy_boost_exceptionEPNS_9exceptionEPKS1_
 9503      00
 9504              	.LEHE78:
 9505              	.LBE91:
 477:/usr/include/boost/exception/exception.hpp ****                 }
 9506              		.loc 3 477 0
 9507 0076 EB2F     		jmp	.L453
 9508              	.L451:
 9509 0078 4889C3   		movq	%rax, %rbx
 9510              	.LBB92:
 474:/usr/include/boost/exception/exception.hpp ****                 T(x)
 9511              		.loc 3 474 0
 9512 007b 488B45E8 		movq	-24(%rbp), %rax
 9513 007f 4889C7   		movq	%rax, %rdi
GAS LISTING /tmp/ccsIN87E.s 			page 440


 9514 0082 E8000000 		call	_ZN5boost16exception_detail10bad_alloc_D2Ev
 9514      00
 9515 0087 EB03     		jmp	.L452
 9516              	.L450:
 9517 0089 4889C3   		movq	%rax, %rbx
 9518              	.L452:
 474:/usr/include/boost/exception/exception.hpp ****                 T(x)
 9519              		.loc 3 474 0 is_stmt 0 discriminator 6
 9520 008c 488B45E8 		movq	-24(%rbp), %rax
 9521 0090 4883C030 		addq	$48, %rax
 9522 0094 4889C7   		movq	%rax, %rdi
 9523 0097 E8000000 		call	_ZN5boost16exception_detail10clone_baseD2Ev
 9523      00
 9524 009c 4889D8   		movq	%rbx, %rax
 9525 009f 4889C7   		movq	%rax, %rdi
 9526              	.LEHB79:
 9527 00a2 E8000000 		call	_Unwind_Resume@PLT
 9527      00
 9528              	.LEHE79:
 9529              	.L453:
 9530              	.LBE92:
 9531              		.loc 3 477 0 is_stmt 1
 9532 00a7 4883C418 		addq	$24, %rsp
 9533 00ab 5B       		popq	%rbx
 9534 00ac 5D       		popq	%rbp
 9535              		.cfi_def_cfa 7, 8
 9536 00ad C3       		ret
 9537              		.cfi_endproc
 9538              	.LFE12940:
 9539              		.section	.gcc_except_table
 9540              	.LLSDA12940:
 9541 01a8 FF       		.byte	0xff
 9542 01a9 FF       		.byte	0xff
 9543 01aa 01       		.byte	0x1
 9544 01ab 0E       		.uleb128 .LLSDACSE12940-.LLSDACSB12940
 9545              	.LLSDACSB12940:
 9546 01ac 2F       		.uleb128 .LEHB77-.LFB12940
 9547 01ad 05       		.uleb128 .LEHE77-.LEHB77
 9548 01ae 8901     		.uleb128 .L450-.LFB12940
 9549 01b0 00       		.uleb128 0
 9550 01b1 71       		.uleb128 .LEHB78-.LFB12940
 9551 01b2 05       		.uleb128 .LEHE78-.LEHB78
 9552 01b3 78       		.uleb128 .L451-.LFB12940
 9553 01b4 00       		.uleb128 0
 9554 01b5 A201     		.uleb128 .LEHB79-.LFB12940
 9555 01b7 05       		.uleb128 .LEHE79-.LEHB79
 9556 01b8 00       		.uleb128 0
 9557 01b9 00       		.uleb128 0
 9558              	.LLSDACSE12940:
 9559              		.section	.text._ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EEC1ERKS2_,"axG",@progbits,
 9561              		.section	.text._ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EED1Ev,"axG",@progbits,_ZN5
 9562              		.align 2
 9563              		.weak	_ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EED1Ev
 9565              	_ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EED1Ev:
 9566              	.LFB12943:
 478:/usr/include/boost/exception/exception.hpp **** 
 479:/usr/include/boost/exception/exception.hpp ****             ~clone_impl() throw()
GAS LISTING /tmp/ccsIN87E.s 			page 441


 9567              		.loc 3 479 0
 9568              		.cfi_startproc
 9569 0000 55       		pushq	%rbp
 9570              		.cfi_def_cfa_offset 16
 9571              		.cfi_offset 6, -16
 9572 0001 4889E5   		movq	%rsp, %rbp
 9573              		.cfi_def_cfa_register 6
 9574 0004 4883EC10 		subq	$16, %rsp
 9575 0008 48897DF8 		movq	%rdi, -8(%rbp)
 9576              	.LBB93:
 480:/usr/include/boost/exception/exception.hpp ****                 {
 481:/usr/include/boost/exception/exception.hpp ****                 }
 9577              		.loc 3 481 0
 9578 000c 488D1500 		leaq	24+_ZTVN5boost16exception_detail10clone_implINS0_10bad_alloc_EEE(%rip), %rdx
 9578      000000
 9579 0013 488B45F8 		movq	-8(%rbp), %rax
 9580 0017 488910   		movq	%rdx, (%rax)
 9581 001a 488D1500 		leaq	72+_ZTVN5boost16exception_detail10clone_implINS0_10bad_alloc_EEE(%rip), %rdx
 9581      000000
 9582 0021 488B45F8 		movq	-8(%rbp), %rax
 9583 0025 48895028 		movq	%rdx, 40(%rax)
 9584 0029 488B45F8 		movq	-8(%rbp), %rax
 9585 002d 488D5030 		leaq	48(%rax), %rdx
 9586 0031 488D0500 		leaq	136+_ZTVN5boost16exception_detail10clone_implINS0_10bad_alloc_EEE(%rip), %rax
 9586      000000
 9587 0038 488902   		movq	%rax, (%rdx)
 9588 003b 488B45F8 		movq	-8(%rbp), %rax
 9589 003f 4889C7   		movq	%rax, %rdi
 9590 0042 E8000000 		call	_ZN5boost16exception_detail10bad_alloc_D2Ev
 9590      00
 9591 0047 488B45F8 		movq	-8(%rbp), %rax
 9592 004b 4883C030 		addq	$48, %rax
 9593 004f 4889C7   		movq	%rax, %rdi
 9594 0052 E8000000 		call	_ZN5boost16exception_detail10clone_baseD2Ev
 9594      00
 9595              	.LBE93:
 9596 0057 90       		nop
 9597 0058 C9       		leave
 9598              		.cfi_def_cfa 7, 8
 9599 0059 C3       		ret
 9600              		.cfi_endproc
 9601              	.LFE12943:
 9603              		.set	.LTHUNK69,_ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EED1Ev
 9604              		.weak	_ZThn40_N5boost16exception_detail10clone_implINS0_10bad_alloc_EED1Ev
 9606              	_ZThn40_N5boost16exception_detail10clone_implINS0_10bad_alloc_EED1Ev:
 9607              	.LFB15697:
 479:/usr/include/boost/exception/exception.hpp ****                 {
 9608              		.loc 3 479 0
 9609              		.cfi_startproc
 9610 005a 4883EF28 		subq	$40, %rdi
 9611 005e EBA0     		jmp	.LTHUNK69
 9612              		.cfi_endproc
 9613              	.LFE15697:
 9615              		.set	.LTHUNK68,_ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EED1Ev
 9616              		.weak	_ZTv0_n40_N5boost16exception_detail10clone_implINS0_10bad_alloc_EED1Ev
 9618              	_ZTv0_n40_N5boost16exception_detail10clone_implINS0_10bad_alloc_EED1Ev:
 9619              	.LFB15698:
GAS LISTING /tmp/ccsIN87E.s 			page 442


 479:/usr/include/boost/exception/exception.hpp ****                 {
 9620              		.loc 3 479 0
 9621              		.cfi_startproc
 9622 0060 4C8B17   		movq	(%rdi), %r10
 9623 0063 49037AD8 		addq	-40(%r10), %rdi
 9624 0067 EB97     		jmp	.LTHUNK68
 9625              		.cfi_endproc
 9626              	.LFE15698:
 9628              		.section	.text._ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EED0Ev,"axG",@progbits,_ZN5
 9629              		.align 2
 9630              		.weak	_ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EED0Ev
 9632              	_ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EED0Ev:
 9633              	.LFB12944:
 479:/usr/include/boost/exception/exception.hpp ****                 {
 9634              		.loc 3 479 0
 9635              		.cfi_startproc
 9636 0000 55       		pushq	%rbp
 9637              		.cfi_def_cfa_offset 16
 9638              		.cfi_offset 6, -16
 9639 0001 4889E5   		movq	%rsp, %rbp
 9640              		.cfi_def_cfa_register 6
 9641 0004 4883EC10 		subq	$16, %rsp
 9642 0008 48897DF8 		movq	%rdi, -8(%rbp)
 9643              		.loc 3 481 0
 9644 000c 488B45F8 		movq	-8(%rbp), %rax
 9645 0010 4889C7   		movq	%rax, %rdi
 9646 0013 E8000000 		call	_ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EED1Ev
 9646      00
 9647 0018 488B45F8 		movq	-8(%rbp), %rax
 9648 001c BE380000 		movl	$56, %esi
 9648      00
 9649 0021 4889C7   		movq	%rax, %rdi
 9650 0024 E8000000 		call	_ZdlPvm@PLT
 9650      00
 9651 0029 C9       		leave
 9652              		.cfi_def_cfa 7, 8
 9653 002a C3       		ret
 9654              		.cfi_endproc
 9655              	.LFE12944:
 9657              		.set	.LTHUNK71,_ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EED0Ev
 9658              		.weak	_ZThn40_N5boost16exception_detail10clone_implINS0_10bad_alloc_EED0Ev
 9660              	_ZThn40_N5boost16exception_detail10clone_implINS0_10bad_alloc_EED0Ev:
 9661              	.LFB15699:
 479:/usr/include/boost/exception/exception.hpp ****                 {
 9662              		.loc 3 479 0
 9663              		.cfi_startproc
 9664 002b 4883EF28 		subq	$40, %rdi
 9665 002f EBCF     		jmp	.LTHUNK71
 9666              		.cfi_endproc
 9667              	.LFE15699:
 9669              		.set	.LTHUNK70,_ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EED0Ev
 9670              		.weak	_ZTv0_n40_N5boost16exception_detail10clone_implINS0_10bad_alloc_EED0Ev
 9672              	_ZTv0_n40_N5boost16exception_detail10clone_implINS0_10bad_alloc_EED0Ev:
 9673              	.LFB15700:
 479:/usr/include/boost/exception/exception.hpp ****                 {
 9674              		.loc 3 479 0
 9675              		.cfi_startproc
GAS LISTING /tmp/ccsIN87E.s 			page 443


 9676 0031 4C8B17   		movq	(%rdi), %r10
 9677 0034 49037AD8 		addq	-40(%r10), %rdi
 9678 0038 EBC6     		jmp	.LTHUNK70
 9679              		.cfi_endproc
 9680              	.LFE15700:
 9682              		.section	.text._ZSt4moveIRN5boost10error_infoINS0_15throw_function_EPKcEEEONSt16remove_referenceIT
 9683              		.weak	_ZSt4moveIRN5boost10error_infoINS0_15throw_function_EPKcEEEONSt16remove_referenceIT_E4typeEO
 9685              	_ZSt4moveIRN5boost10error_infoINS0_15throw_function_EPKcEEEONSt16remove_referenceIT_E4typeEOS8_:
 9686              	.LFB12946:
  78:/usr/include/c++/6/bits/move.h **** 
  79:/usr/include/c++/6/bits/move.h ****   /**
  80:/usr/include/c++/6/bits/move.h ****    *  @brief  Forward an rvalue.
  81:/usr/include/c++/6/bits/move.h ****    *  @return The parameter cast to the specified type.
  82:/usr/include/c++/6/bits/move.h ****    *
  83:/usr/include/c++/6/bits/move.h ****    *  This function is used to implement "perfect forwarding".
  84:/usr/include/c++/6/bits/move.h ****    */
  85:/usr/include/c++/6/bits/move.h ****   template<typename _Tp>
  86:/usr/include/c++/6/bits/move.h ****     constexpr _Tp&&
  87:/usr/include/c++/6/bits/move.h ****     forward(typename std::remove_reference<_Tp>::type&& __t) noexcept
  88:/usr/include/c++/6/bits/move.h ****     {
  89:/usr/include/c++/6/bits/move.h ****       static_assert(!std::is_lvalue_reference<_Tp>::value, "template argument"
  90:/usr/include/c++/6/bits/move.h **** 		    " substituting _Tp is an lvalue reference type");
  91:/usr/include/c++/6/bits/move.h ****       return static_cast<_Tp&&>(__t);
  92:/usr/include/c++/6/bits/move.h ****     }
  93:/usr/include/c++/6/bits/move.h **** 
  94:/usr/include/c++/6/bits/move.h ****   /**
  95:/usr/include/c++/6/bits/move.h ****    *  @brief  Convert a value to an rvalue.
  96:/usr/include/c++/6/bits/move.h ****    *  @param  __t  A thing of arbitrary type.
  97:/usr/include/c++/6/bits/move.h ****    *  @return The parameter cast to an rvalue-reference to allow moving it.
  98:/usr/include/c++/6/bits/move.h ****   */
  99:/usr/include/c++/6/bits/move.h ****   template<typename _Tp>
 100:/usr/include/c++/6/bits/move.h ****     constexpr typename std::remove_reference<_Tp>::type&&
 101:/usr/include/c++/6/bits/move.h ****     move(_Tp&& __t) noexcept
 9687              		.loc 33 101 0
 9688              		.cfi_startproc
 9689 0000 55       		pushq	%rbp
 9690              		.cfi_def_cfa_offset 16
 9691              		.cfi_offset 6, -16
 9692 0001 4889E5   		movq	%rsp, %rbp
 9693              		.cfi_def_cfa_register 6
 9694 0004 48897DF8 		movq	%rdi, -8(%rbp)
 102:/usr/include/c++/6/bits/move.h ****     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 9695              		.loc 33 102 0
 9696 0008 488B45F8 		movq	-8(%rbp), %rax
 9697 000c 5D       		popq	%rbp
 9698              		.cfi_def_cfa 7, 8
 9699 000d C3       		ret
 9700              		.cfi_endproc
 9701              	.LFE12946:
 9703              		.section	.text._ZN5boostlsINS_16exception_detail10clone_implINS1_10bad_alloc_EEENS_15throw_functio
 9704              		.weak	_ZN5boostlsINS_16exception_detail10clone_implINS1_10bad_alloc_EEENS_15throw_function_EPKcEEN
 9706              	_ZN5boostlsINS_16exception_detail10clone_implINS1_10bad_alloc_EEENS_15throw_function_EPKcEENS_9enab
 9707              	.LFB12945:
 9708              		.file 36 "/usr/include/boost/exception/info.hpp"
   1:/usr/include/boost/exception/info.hpp **** //Copyright (c) 2006-2010 Emil Dotchevski and Reverge Studios, Inc.
   2:/usr/include/boost/exception/info.hpp **** 
   3:/usr/include/boost/exception/info.hpp **** //Distributed under the Boost Software License, Version 1.0. (See accompanying
GAS LISTING /tmp/ccsIN87E.s 			page 444


   4:/usr/include/boost/exception/info.hpp **** //file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
   5:/usr/include/boost/exception/info.hpp **** 
   6:/usr/include/boost/exception/info.hpp **** #ifndef UUID_8D22C4CA9CC811DCAA9133D256D89593
   7:/usr/include/boost/exception/info.hpp **** #define UUID_8D22C4CA9CC811DCAA9133D256D89593
   8:/usr/include/boost/exception/info.hpp **** #if (__GNUC__*100+__GNUC_MINOR__>301) && !defined(BOOST_EXCEPTION_ENABLE_WARNINGS)
   9:/usr/include/boost/exception/info.hpp **** #pragma GCC system_header
  10:/usr/include/boost/exception/info.hpp **** #endif
  11:/usr/include/boost/exception/info.hpp **** #if defined(_MSC_VER) && !defined(BOOST_EXCEPTION_ENABLE_WARNINGS)
  12:/usr/include/boost/exception/info.hpp **** #pragma warning(push,1)
  13:/usr/include/boost/exception/info.hpp **** #endif
  14:/usr/include/boost/exception/info.hpp **** 
  15:/usr/include/boost/exception/info.hpp **** #include <boost/exception/exception.hpp>
  16:/usr/include/boost/exception/info.hpp **** #include <boost/exception/to_string_stub.hpp>
  17:/usr/include/boost/exception/info.hpp **** #include <boost/exception/detail/error_info_impl.hpp>
  18:/usr/include/boost/exception/info.hpp **** #include <boost/shared_ptr.hpp>
  19:/usr/include/boost/exception/info.hpp **** #include <boost/config.hpp>
  20:/usr/include/boost/exception/info.hpp **** #include <map>
  21:/usr/include/boost/exception/info.hpp **** 
  22:/usr/include/boost/exception/info.hpp **** namespace
  23:/usr/include/boost/exception/info.hpp **** boost
  24:/usr/include/boost/exception/info.hpp ****     {
  25:/usr/include/boost/exception/info.hpp ****     template <class Tag,class T>
  26:/usr/include/boost/exception/info.hpp ****     inline
  27:/usr/include/boost/exception/info.hpp ****     std::string
  28:/usr/include/boost/exception/info.hpp ****     error_info_name( error_info<Tag,T> const & x )
  29:/usr/include/boost/exception/info.hpp ****         {
  30:/usr/include/boost/exception/info.hpp ****         return tag_type_name<Tag>();
  31:/usr/include/boost/exception/info.hpp ****         }
  32:/usr/include/boost/exception/info.hpp **** 
  33:/usr/include/boost/exception/info.hpp ****     template <class Tag,class T>
  34:/usr/include/boost/exception/info.hpp ****     inline
  35:/usr/include/boost/exception/info.hpp ****     std::string
  36:/usr/include/boost/exception/info.hpp ****     to_string( error_info<Tag,T> const & x )
  37:/usr/include/boost/exception/info.hpp ****         {
  38:/usr/include/boost/exception/info.hpp ****         return '[' + error_info_name(x) + "] = " + to_string_stub(x.value()) + '\n';
  39:/usr/include/boost/exception/info.hpp ****         }
  40:/usr/include/boost/exception/info.hpp **** 
  41:/usr/include/boost/exception/info.hpp ****     template <class Tag,class T>
  42:/usr/include/boost/exception/info.hpp ****     inline
  43:/usr/include/boost/exception/info.hpp ****     error_info<Tag,T>::
  44:/usr/include/boost/exception/info.hpp ****     error_info( value_type const & value ):
  45:/usr/include/boost/exception/info.hpp ****         value_(value)
  46:/usr/include/boost/exception/info.hpp ****         {
  47:/usr/include/boost/exception/info.hpp ****         }
  48:/usr/include/boost/exception/info.hpp **** 
  49:/usr/include/boost/exception/info.hpp **** #ifndef BOOST_NO_CXX11_RVALUE_REFERENCES
  50:/usr/include/boost/exception/info.hpp **** 	template <class Tag,class T>
  51:/usr/include/boost/exception/info.hpp ****     inline
  52:/usr/include/boost/exception/info.hpp ****     error_info<Tag,T>::
  53:/usr/include/boost/exception/info.hpp **** 	error_info( error_info const & x ):
  54:/usr/include/boost/exception/info.hpp **** 		value_(x.value_)
  55:/usr/include/boost/exception/info.hpp **** 		{
  56:/usr/include/boost/exception/info.hpp **** 		}
  57:/usr/include/boost/exception/info.hpp ****     template <class Tag,class T>
  58:/usr/include/boost/exception/info.hpp ****     inline
  59:/usr/include/boost/exception/info.hpp ****     error_info<Tag,T>::
  60:/usr/include/boost/exception/info.hpp **** 	error_info( value_type && value ) BOOST_NOEXCEPT_IF(BOOST_NOEXCEPT_EXPR(value_type(std::move(value
GAS LISTING /tmp/ccsIN87E.s 			page 445


  61:/usr/include/boost/exception/info.hpp **** 		value_(std::move(value))
  62:/usr/include/boost/exception/info.hpp **** 		{
  63:/usr/include/boost/exception/info.hpp **** 		}
  64:/usr/include/boost/exception/info.hpp **** 	template <class Tag,class T>
  65:/usr/include/boost/exception/info.hpp ****     inline
  66:/usr/include/boost/exception/info.hpp ****     error_info<Tag,T>::
  67:/usr/include/boost/exception/info.hpp **** 	error_info( error_info && x ) BOOST_NOEXCEPT_IF(BOOST_NOEXCEPT_EXPR(value_type(std::move(x.value_)
  68:/usr/include/boost/exception/info.hpp **** 		value_(std::move(x.value_))
  69:/usr/include/boost/exception/info.hpp **** 		{
  70:/usr/include/boost/exception/info.hpp **** 		}
  71:/usr/include/boost/exception/info.hpp **** #endif
  72:/usr/include/boost/exception/info.hpp **** 
  73:/usr/include/boost/exception/info.hpp ****     template <class Tag,class T>
  74:/usr/include/boost/exception/info.hpp ****     inline
  75:/usr/include/boost/exception/info.hpp ****     error_info<Tag,T>::
  76:/usr/include/boost/exception/info.hpp ****     ~error_info() throw()
  77:/usr/include/boost/exception/info.hpp ****         {
  78:/usr/include/boost/exception/info.hpp ****         }
  79:/usr/include/boost/exception/info.hpp **** 
  80:/usr/include/boost/exception/info.hpp ****     template <class Tag,class T>
  81:/usr/include/boost/exception/info.hpp ****     inline
  82:/usr/include/boost/exception/info.hpp ****     std::string
  83:/usr/include/boost/exception/info.hpp ****     error_info<Tag,T>::
  84:/usr/include/boost/exception/info.hpp ****     name_value_string() const
  85:/usr/include/boost/exception/info.hpp ****         {
  86:/usr/include/boost/exception/info.hpp ****         return to_string_stub(*this);
  87:/usr/include/boost/exception/info.hpp ****         }
  88:/usr/include/boost/exception/info.hpp **** 
  89:/usr/include/boost/exception/info.hpp ****     namespace
  90:/usr/include/boost/exception/info.hpp ****     exception_detail
  91:/usr/include/boost/exception/info.hpp ****         {
  92:/usr/include/boost/exception/info.hpp ****         class
  93:/usr/include/boost/exception/info.hpp ****         error_info_container_impl:
  94:/usr/include/boost/exception/info.hpp ****             public error_info_container
  95:/usr/include/boost/exception/info.hpp ****             {
  96:/usr/include/boost/exception/info.hpp ****             public:
  97:/usr/include/boost/exception/info.hpp **** 
  98:/usr/include/boost/exception/info.hpp ****             error_info_container_impl():
  99:/usr/include/boost/exception/info.hpp ****                 count_(0)
 100:/usr/include/boost/exception/info.hpp ****                 {
 101:/usr/include/boost/exception/info.hpp ****                 }
 102:/usr/include/boost/exception/info.hpp **** 
 103:/usr/include/boost/exception/info.hpp ****             ~error_info_container_impl() throw()
 104:/usr/include/boost/exception/info.hpp ****                 {
 105:/usr/include/boost/exception/info.hpp ****                 }
 106:/usr/include/boost/exception/info.hpp **** 
 107:/usr/include/boost/exception/info.hpp ****             void
 108:/usr/include/boost/exception/info.hpp ****             set( shared_ptr<error_info_base> const & x, type_info_ const & typeid_ )
 109:/usr/include/boost/exception/info.hpp ****                 {
 110:/usr/include/boost/exception/info.hpp ****                 BOOST_ASSERT(x);
 111:/usr/include/boost/exception/info.hpp ****                 info_[typeid_] = x;
 112:/usr/include/boost/exception/info.hpp ****                 diagnostic_info_str_.clear();
 113:/usr/include/boost/exception/info.hpp ****                 }
 114:/usr/include/boost/exception/info.hpp **** 
 115:/usr/include/boost/exception/info.hpp ****             shared_ptr<error_info_base>
 116:/usr/include/boost/exception/info.hpp ****             get( type_info_ const & ti ) const
 117:/usr/include/boost/exception/info.hpp ****                 {
GAS LISTING /tmp/ccsIN87E.s 			page 446


 118:/usr/include/boost/exception/info.hpp ****                 error_info_map::const_iterator i=info_.find(ti);
 119:/usr/include/boost/exception/info.hpp ****                 if( info_.end()!=i )
 120:/usr/include/boost/exception/info.hpp ****                     {
 121:/usr/include/boost/exception/info.hpp ****                     shared_ptr<error_info_base> const & p = i->second;
 122:/usr/include/boost/exception/info.hpp **** #ifndef BOOST_NO_RTTI
 123:/usr/include/boost/exception/info.hpp ****                     BOOST_ASSERT( *BOOST_EXCEPTION_DYNAMIC_TYPEID(*p).type_==*ti.type_ );
 124:/usr/include/boost/exception/info.hpp **** #endif
 125:/usr/include/boost/exception/info.hpp ****                     return p;
 126:/usr/include/boost/exception/info.hpp ****                     }
 127:/usr/include/boost/exception/info.hpp ****                 return shared_ptr<error_info_base>();
 128:/usr/include/boost/exception/info.hpp ****                 }
 129:/usr/include/boost/exception/info.hpp **** 
 130:/usr/include/boost/exception/info.hpp ****             char const *
 131:/usr/include/boost/exception/info.hpp ****             diagnostic_information( char const * header ) const
 132:/usr/include/boost/exception/info.hpp ****                 {
 133:/usr/include/boost/exception/info.hpp ****                 if( header )
 134:/usr/include/boost/exception/info.hpp ****                     {
 135:/usr/include/boost/exception/info.hpp ****                     std::ostringstream tmp;
 136:/usr/include/boost/exception/info.hpp ****                     tmp << header;
 137:/usr/include/boost/exception/info.hpp ****                     for( error_info_map::const_iterator i=info_.begin(),end=info_.end(); i!=end; ++
 138:/usr/include/boost/exception/info.hpp ****                         {
 139:/usr/include/boost/exception/info.hpp ****                         error_info_base const & x = *i->second;
 140:/usr/include/boost/exception/info.hpp ****                         tmp << x.name_value_string();
 141:/usr/include/boost/exception/info.hpp ****                         }
 142:/usr/include/boost/exception/info.hpp ****                     tmp.str().swap(diagnostic_info_str_);
 143:/usr/include/boost/exception/info.hpp ****                     }
 144:/usr/include/boost/exception/info.hpp ****                 return diagnostic_info_str_.c_str();
 145:/usr/include/boost/exception/info.hpp ****                 }
 146:/usr/include/boost/exception/info.hpp **** 
 147:/usr/include/boost/exception/info.hpp ****             private:
 148:/usr/include/boost/exception/info.hpp **** 
 149:/usr/include/boost/exception/info.hpp ****             friend class boost::exception;
 150:/usr/include/boost/exception/info.hpp **** 
 151:/usr/include/boost/exception/info.hpp ****             typedef std::map< type_info_, shared_ptr<error_info_base> > error_info_map;
 152:/usr/include/boost/exception/info.hpp ****             error_info_map info_;
 153:/usr/include/boost/exception/info.hpp ****             mutable std::string diagnostic_info_str_;
 154:/usr/include/boost/exception/info.hpp ****             mutable int count_;
 155:/usr/include/boost/exception/info.hpp **** 
 156:/usr/include/boost/exception/info.hpp ****             error_info_container_impl( error_info_container_impl const & );
 157:/usr/include/boost/exception/info.hpp ****             error_info_container_impl & operator=( error_info_container const & );
 158:/usr/include/boost/exception/info.hpp **** 
 159:/usr/include/boost/exception/info.hpp ****             void
 160:/usr/include/boost/exception/info.hpp ****             add_ref() const
 161:/usr/include/boost/exception/info.hpp ****                 {
 162:/usr/include/boost/exception/info.hpp ****                 ++count_;
 163:/usr/include/boost/exception/info.hpp ****                 }
 164:/usr/include/boost/exception/info.hpp **** 
 165:/usr/include/boost/exception/info.hpp ****             bool
 166:/usr/include/boost/exception/info.hpp ****             release() const
 167:/usr/include/boost/exception/info.hpp ****                 {
 168:/usr/include/boost/exception/info.hpp ****                 if( --count_ )
 169:/usr/include/boost/exception/info.hpp ****                     return false;
 170:/usr/include/boost/exception/info.hpp ****                 else
 171:/usr/include/boost/exception/info.hpp ****                     {
 172:/usr/include/boost/exception/info.hpp ****                     delete this;
 173:/usr/include/boost/exception/info.hpp ****                     return true;
 174:/usr/include/boost/exception/info.hpp ****                     }
GAS LISTING /tmp/ccsIN87E.s 			page 447


 175:/usr/include/boost/exception/info.hpp ****                 }
 176:/usr/include/boost/exception/info.hpp **** 
 177:/usr/include/boost/exception/info.hpp ****             refcount_ptr<error_info_container>
 178:/usr/include/boost/exception/info.hpp ****             clone() const
 179:/usr/include/boost/exception/info.hpp ****                 {
 180:/usr/include/boost/exception/info.hpp ****                 refcount_ptr<error_info_container> p;
 181:/usr/include/boost/exception/info.hpp ****                 error_info_container_impl * c=new error_info_container_impl;
 182:/usr/include/boost/exception/info.hpp ****                 p.adopt(c);
 183:/usr/include/boost/exception/info.hpp ****                 c->info_ = info_;
 184:/usr/include/boost/exception/info.hpp ****                 return p;
 185:/usr/include/boost/exception/info.hpp ****                 }
 186:/usr/include/boost/exception/info.hpp ****             };
 187:/usr/include/boost/exception/info.hpp **** 
 188:/usr/include/boost/exception/info.hpp ****         template <class E,class Tag,class T>
 189:/usr/include/boost/exception/info.hpp ****         inline
 190:/usr/include/boost/exception/info.hpp ****         E const &
 191:/usr/include/boost/exception/info.hpp ****         set_info( E const & x, error_info<Tag,T> const & v )
 192:/usr/include/boost/exception/info.hpp ****             {
 193:/usr/include/boost/exception/info.hpp ****             typedef error_info<Tag,T> error_info_tag_t;
 194:/usr/include/boost/exception/info.hpp ****             shared_ptr<error_info_tag_t> p( new error_info_tag_t(v) );
 195:/usr/include/boost/exception/info.hpp ****             exception_detail::error_info_container * c=x.data_.get();
 196:/usr/include/boost/exception/info.hpp ****             if( !c )
 197:/usr/include/boost/exception/info.hpp ****                 x.data_.adopt(c=new exception_detail::error_info_container_impl);
 198:/usr/include/boost/exception/info.hpp ****             c->set(p,BOOST_EXCEPTION_STATIC_TYPEID(error_info_tag_t));
 199:/usr/include/boost/exception/info.hpp ****             return x;
 200:/usr/include/boost/exception/info.hpp ****             }
 201:/usr/include/boost/exception/info.hpp **** 
 202:/usr/include/boost/exception/info.hpp **** #ifndef BOOST_NO_CXX11_RVALUE_REFERENCES
 203:/usr/include/boost/exception/info.hpp ****         template <class E,class Tag,class T>
 204:/usr/include/boost/exception/info.hpp ****         E const & set_info( E const &, error_info<Tag,T> && );
 205:/usr/include/boost/exception/info.hpp **** 		template <class T>
 206:/usr/include/boost/exception/info.hpp **** 		class set_info_rv;
 207:/usr/include/boost/exception/info.hpp **** 		template <class Tag,class T>
 208:/usr/include/boost/exception/info.hpp **** 		class
 209:/usr/include/boost/exception/info.hpp **** 		set_info_rv<error_info<Tag,T> >
 210:/usr/include/boost/exception/info.hpp **** 			{
 211:/usr/include/boost/exception/info.hpp **** 			template <class E,class Tag1,class T1>
 212:/usr/include/boost/exception/info.hpp **** 			friend E const & set_info( E const &, error_info<Tag1,T1> && );
 213:/usr/include/boost/exception/info.hpp **** 			template <class E>
 214:/usr/include/boost/exception/info.hpp **** 			static
 215:/usr/include/boost/exception/info.hpp **** 			E const &
 216:/usr/include/boost/exception/info.hpp **** 			set( E const & x, error_info<Tag,T> && v )
 217:/usr/include/boost/exception/info.hpp **** 				{
 218:/usr/include/boost/exception/info.hpp **** 				typedef error_info<Tag,T> error_info_tag_t;
 219:/usr/include/boost/exception/info.hpp **** 				shared_ptr<error_info_tag_t> p( new error_info_tag_t(std::move(v)) );
 220:/usr/include/boost/exception/info.hpp **** 				exception_detail::error_info_container * c=x.data_.get();
 221:/usr/include/boost/exception/info.hpp **** 				if( !c )
 222:/usr/include/boost/exception/info.hpp **** 					x.data_.adopt(c=new exception_detail::error_info_container_impl);
 223:/usr/include/boost/exception/info.hpp **** 				c->set(p,BOOST_EXCEPTION_STATIC_TYPEID(error_info_tag_t));
 224:/usr/include/boost/exception/info.hpp **** 				return x;
 225:/usr/include/boost/exception/info.hpp **** 				}
 226:/usr/include/boost/exception/info.hpp **** 			};
 227:/usr/include/boost/exception/info.hpp **** 		template <>
 228:/usr/include/boost/exception/info.hpp **** 		class
 229:/usr/include/boost/exception/info.hpp **** 		set_info_rv<throw_function>
 230:/usr/include/boost/exception/info.hpp **** 			{
 231:/usr/include/boost/exception/info.hpp **** 			template <class E,class Tag1,class T1>
GAS LISTING /tmp/ccsIN87E.s 			page 448


 232:/usr/include/boost/exception/info.hpp **** 			friend E const & set_info( E const &, error_info<Tag1,T1> && );
 233:/usr/include/boost/exception/info.hpp **** 			template <class E>
 234:/usr/include/boost/exception/info.hpp **** 			static
 235:/usr/include/boost/exception/info.hpp **** 			E const &
 236:/usr/include/boost/exception/info.hpp **** 			set( E const & x, throw_function && y )
 237:/usr/include/boost/exception/info.hpp **** 				{
 238:/usr/include/boost/exception/info.hpp **** 				x.throw_function_=y.v_;
 239:/usr/include/boost/exception/info.hpp **** 				return x;
 240:/usr/include/boost/exception/info.hpp **** 				}
 241:/usr/include/boost/exception/info.hpp **** 			};
 242:/usr/include/boost/exception/info.hpp **** 		template <>
 243:/usr/include/boost/exception/info.hpp **** 		class
 244:/usr/include/boost/exception/info.hpp **** 		set_info_rv<throw_file>
 245:/usr/include/boost/exception/info.hpp **** 			{
 246:/usr/include/boost/exception/info.hpp **** 			template <class E,class Tag1,class T1>
 247:/usr/include/boost/exception/info.hpp **** 			friend E const & set_info( E const &, error_info<Tag1,T1> && );
 248:/usr/include/boost/exception/info.hpp **** 			template <class E>
 249:/usr/include/boost/exception/info.hpp **** 			static
 250:/usr/include/boost/exception/info.hpp **** 			E const &
 251:/usr/include/boost/exception/info.hpp **** 			set( E const & x, throw_file && y )
 252:/usr/include/boost/exception/info.hpp **** 				{
 253:/usr/include/boost/exception/info.hpp **** 				x.throw_file_=y.v_;
 254:/usr/include/boost/exception/info.hpp **** 				return x;
 255:/usr/include/boost/exception/info.hpp **** 				}
 256:/usr/include/boost/exception/info.hpp **** 			};
 257:/usr/include/boost/exception/info.hpp **** 		template <>
 258:/usr/include/boost/exception/info.hpp **** 		class
 259:/usr/include/boost/exception/info.hpp **** 		set_info_rv<throw_line>
 260:/usr/include/boost/exception/info.hpp **** 			{
 261:/usr/include/boost/exception/info.hpp **** 			template <class E,class Tag1,class T1>
 262:/usr/include/boost/exception/info.hpp **** 			friend E const & set_info( E const &, error_info<Tag1,T1> && );
 263:/usr/include/boost/exception/info.hpp **** 			template <class E>
 264:/usr/include/boost/exception/info.hpp **** 			static
 265:/usr/include/boost/exception/info.hpp **** 			E const &
 266:/usr/include/boost/exception/info.hpp **** 			set( E const & x, throw_line && y )
 267:/usr/include/boost/exception/info.hpp **** 				{
 268:/usr/include/boost/exception/info.hpp **** 				x.throw_line_=y.v_;
 269:/usr/include/boost/exception/info.hpp **** 				return x;
 270:/usr/include/boost/exception/info.hpp **** 				}
 271:/usr/include/boost/exception/info.hpp **** 			};
 272:/usr/include/boost/exception/info.hpp ****         template <class E,class Tag,class T>
 273:/usr/include/boost/exception/info.hpp ****         inline
 274:/usr/include/boost/exception/info.hpp ****         E const &
 275:/usr/include/boost/exception/info.hpp ****         set_info( E const & x, error_info<Tag,T> && v )
 276:/usr/include/boost/exception/info.hpp ****             {
 277:/usr/include/boost/exception/info.hpp **** 			return set_info_rv<error_info<Tag,T> >::template set<E>(x,std::move(v));
 278:/usr/include/boost/exception/info.hpp ****             }
 279:/usr/include/boost/exception/info.hpp **** #endif
 280:/usr/include/boost/exception/info.hpp **** 
 281:/usr/include/boost/exception/info.hpp ****         template <class T>
 282:/usr/include/boost/exception/info.hpp ****         struct
 283:/usr/include/boost/exception/info.hpp ****         derives_boost_exception
 284:/usr/include/boost/exception/info.hpp ****             {
 285:/usr/include/boost/exception/info.hpp ****             enum e { value = (sizeof(dispatch_boost_exception((T*)0))==sizeof(large_size)) };
 286:/usr/include/boost/exception/info.hpp ****             };
 287:/usr/include/boost/exception/info.hpp ****         }
 288:/usr/include/boost/exception/info.hpp **** 
GAS LISTING /tmp/ccsIN87E.s 			page 449


 289:/usr/include/boost/exception/info.hpp ****     template <class E,class Tag,class T>
 290:/usr/include/boost/exception/info.hpp ****     inline
 291:/usr/include/boost/exception/info.hpp ****     typename enable_if<exception_detail::derives_boost_exception<E>,E const &>::type
 292:/usr/include/boost/exception/info.hpp ****     operator<<( E const & x, error_info<Tag,T> const & v )
 293:/usr/include/boost/exception/info.hpp ****         {
 294:/usr/include/boost/exception/info.hpp ****         return exception_detail::set_info(x,v);
 295:/usr/include/boost/exception/info.hpp ****         }
 296:/usr/include/boost/exception/info.hpp **** 
 297:/usr/include/boost/exception/info.hpp **** #ifndef BOOST_NO_CXX11_RVALUE_REFERENCES
 298:/usr/include/boost/exception/info.hpp ****     template <class E,class Tag,class T>
 299:/usr/include/boost/exception/info.hpp ****     inline
 300:/usr/include/boost/exception/info.hpp ****     typename enable_if<exception_detail::derives_boost_exception<E>,E const &>::type
 301:/usr/include/boost/exception/info.hpp ****     operator<<( E const & x, error_info<Tag,T> && v )
 9709              		.loc 36 301 0
 9710              		.cfi_startproc
 9711 0000 55       		pushq	%rbp
 9712              		.cfi_def_cfa_offset 16
 9713              		.cfi_offset 6, -16
 9714 0001 4889E5   		movq	%rsp, %rbp
 9715              		.cfi_def_cfa_register 6
 9716 0004 4883EC10 		subq	$16, %rsp
 9717 0008 48897DF8 		movq	%rdi, -8(%rbp)
 9718 000c 488975F0 		movq	%rsi, -16(%rbp)
 302:/usr/include/boost/exception/info.hpp ****         {
 303:/usr/include/boost/exception/info.hpp ****         return exception_detail::set_info(x,std::move(v));
 9719              		.loc 36 303 0
 9720 0010 488B45F0 		movq	-16(%rbp), %rax
 9721 0014 4889C7   		movq	%rax, %rdi
 9722 0017 E8000000 		call	_ZSt4moveIRN5boost10error_infoINS0_15throw_function_EPKcEEEONSt16remove_referenceIT_E4typeEOS
 9722      00
 9723 001c 4889C2   		movq	%rax, %rdx
 9724 001f 488B45F8 		movq	-8(%rbp), %rax
 9725 0023 4889D6   		movq	%rdx, %rsi
 9726 0026 4889C7   		movq	%rax, %rdi
 9727 0029 E8000000 		call	_ZN5boost16exception_detail8set_infoINS0_10clone_implINS0_10bad_alloc_EEENS_15throw_function_
 9727      00
 304:/usr/include/boost/exception/info.hpp ****         }
 9728              		.loc 36 304 0
 9729 002e C9       		leave
 9730              		.cfi_def_cfa 7, 8
 9731 002f C3       		ret
 9732              		.cfi_endproc
 9733              	.LFE12945:
 9735              		.section	.text._ZSt4moveIRN5boost10error_infoINS0_11throw_file_EPKcEEEONSt16remove_referenceIT_E4t
 9736              		.weak	_ZSt4moveIRN5boost10error_infoINS0_11throw_file_EPKcEEEONSt16remove_referenceIT_E4typeEOS8_
 9738              	_ZSt4moveIRN5boost10error_infoINS0_11throw_file_EPKcEEEONSt16remove_referenceIT_E4typeEOS8_:
 9739              	.LFB12948:
 101:/usr/include/c++/6/bits/move.h ****     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 9740              		.loc 33 101 0
 9741              		.cfi_startproc
 9742 0000 55       		pushq	%rbp
 9743              		.cfi_def_cfa_offset 16
 9744              		.cfi_offset 6, -16
 9745 0001 4889E5   		movq	%rsp, %rbp
 9746              		.cfi_def_cfa_register 6
 9747 0004 48897DF8 		movq	%rdi, -8(%rbp)
 9748              		.loc 33 102 0
GAS LISTING /tmp/ccsIN87E.s 			page 450


 9749 0008 488B45F8 		movq	-8(%rbp), %rax
 9750 000c 5D       		popq	%rbp
 9751              		.cfi_def_cfa 7, 8
 9752 000d C3       		ret
 9753              		.cfi_endproc
 9754              	.LFE12948:
 9756              		.section	.text._ZN5boostlsINS_16exception_detail10clone_implINS1_10bad_alloc_EEENS_11throw_file_EP
 9757              		.weak	_ZN5boostlsINS_16exception_detail10clone_implINS1_10bad_alloc_EEENS_11throw_file_EPKcEENS_9e
 9759              	_ZN5boostlsINS_16exception_detail10clone_implINS1_10bad_alloc_EEENS_11throw_file_EPKcEENS_9enable_i
 9760              	.LFB12947:
 301:/usr/include/boost/exception/info.hpp ****         {
 9761              		.loc 36 301 0
 9762              		.cfi_startproc
 9763 0000 55       		pushq	%rbp
 9764              		.cfi_def_cfa_offset 16
 9765              		.cfi_offset 6, -16
 9766 0001 4889E5   		movq	%rsp, %rbp
 9767              		.cfi_def_cfa_register 6
 9768 0004 4883EC10 		subq	$16, %rsp
 9769 0008 48897DF8 		movq	%rdi, -8(%rbp)
 9770 000c 488975F0 		movq	%rsi, -16(%rbp)
 303:/usr/include/boost/exception/info.hpp ****         }
 9771              		.loc 36 303 0
 9772 0010 488B45F0 		movq	-16(%rbp), %rax
 9773 0014 4889C7   		movq	%rax, %rdi
 9774 0017 E8000000 		call	_ZSt4moveIRN5boost10error_infoINS0_11throw_file_EPKcEEEONSt16remove_referenceIT_E4typeEOS8_
 9774      00
 9775 001c 4889C2   		movq	%rax, %rdx
 9776 001f 488B45F8 		movq	-8(%rbp), %rax
 9777 0023 4889D6   		movq	%rdx, %rsi
 9778 0026 4889C7   		movq	%rax, %rdi
 9779 0029 E8000000 		call	_ZN5boost16exception_detail8set_infoINS0_10clone_implINS0_10bad_alloc_EEENS_11throw_file_EPKc
 9779      00
 9780              		.loc 36 304 0
 9781 002e C9       		leave
 9782              		.cfi_def_cfa 7, 8
 9783 002f C3       		ret
 9784              		.cfi_endproc
 9785              	.LFE12947:
 9787              		.section	.text._ZSt4moveIRN5boost10error_infoINS0_11throw_line_EiEEEONSt16remove_referenceIT_E4typ
 9788              		.weak	_ZSt4moveIRN5boost10error_infoINS0_11throw_line_EiEEEONSt16remove_referenceIT_E4typeEOS6_
 9790              	_ZSt4moveIRN5boost10error_infoINS0_11throw_line_EiEEEONSt16remove_referenceIT_E4typeEOS6_:
 9791              	.LFB12950:
 101:/usr/include/c++/6/bits/move.h ****     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 9792              		.loc 33 101 0
 9793              		.cfi_startproc
 9794 0000 55       		pushq	%rbp
 9795              		.cfi_def_cfa_offset 16
 9796              		.cfi_offset 6, -16
 9797 0001 4889E5   		movq	%rsp, %rbp
 9798              		.cfi_def_cfa_register 6
 9799 0004 48897DF8 		movq	%rdi, -8(%rbp)
 9800              		.loc 33 102 0
 9801 0008 488B45F8 		movq	-8(%rbp), %rax
 9802 000c 5D       		popq	%rbp
 9803              		.cfi_def_cfa 7, 8
 9804 000d C3       		ret
GAS LISTING /tmp/ccsIN87E.s 			page 451


 9805              		.cfi_endproc
 9806              	.LFE12950:
 9808              		.section	.text._ZN5boostlsINS_16exception_detail10clone_implINS1_10bad_alloc_EEENS_11throw_line_Ei
 9809              		.weak	_ZN5boostlsINS_16exception_detail10clone_implINS1_10bad_alloc_EEENS_11throw_line_EiEENS_9ena
 9811              	_ZN5boostlsINS_16exception_detail10clone_implINS1_10bad_alloc_EEENS_11throw_line_EiEENS_9enable_ifI
 9812              	.LFB12949:
 301:/usr/include/boost/exception/info.hpp ****         {
 9813              		.loc 36 301 0
 9814              		.cfi_startproc
 9815 0000 55       		pushq	%rbp
 9816              		.cfi_def_cfa_offset 16
 9817              		.cfi_offset 6, -16
 9818 0001 4889E5   		movq	%rsp, %rbp
 9819              		.cfi_def_cfa_register 6
 9820 0004 4883EC10 		subq	$16, %rsp
 9821 0008 48897DF8 		movq	%rdi, -8(%rbp)
 9822 000c 488975F0 		movq	%rsi, -16(%rbp)
 303:/usr/include/boost/exception/info.hpp ****         }
 9823              		.loc 36 303 0
 9824 0010 488B45F0 		movq	-16(%rbp), %rax
 9825 0014 4889C7   		movq	%rax, %rdi
 9826 0017 E8000000 		call	_ZSt4moveIRN5boost10error_infoINS0_11throw_line_EiEEEONSt16remove_referenceIT_E4typeEOS6_
 9826      00
 9827 001c 4889C2   		movq	%rax, %rdx
 9828 001f 488B45F8 		movq	-8(%rbp), %rax
 9829 0023 4889D6   		movq	%rdx, %rsi
 9830 0026 4889C7   		movq	%rax, %rdi
 9831 0029 E8000000 		call	_ZN5boost16exception_detail8set_infoINS0_10clone_implINS0_10bad_alloc_EEENS_11throw_line_EiEE
 9831      00
 9832              		.loc 36 304 0
 9833 002e C9       		leave
 9834              		.cfi_def_cfa 7, 8
 9835 002f C3       		ret
 9836              		.cfi_endproc
 9837              	.LFE12949:
 9839              		.section	.text._ZN5boost10shared_ptrIKNS_16exception_detail10clone_baseEEC2INS1_10clone_implINS1_1
 9840              		.align 2
 9841              		.weak	_ZN5boost10shared_ptrIKNS_16exception_detail10clone_baseEEC2INS1_10clone_implINS1_10bad_allo
 9843              	_ZN5boost10shared_ptrIKNS_16exception_detail10clone_baseEEC2INS1_10clone_implINS1_10bad_alloc_EEEEE
 9844              	.LFB12952:
 360:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     {
 9845              		.loc 7 360 0
 9846              		.cfi_startproc
 9847              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 9848              		.cfi_lsda 0x1b,.LLSDA12952
 9849 0000 55       		pushq	%rbp
 9850              		.cfi_def_cfa_offset 16
 9851              		.cfi_offset 6, -16
 9852 0001 4889E5   		movq	%rsp, %rbp
 9853              		.cfi_def_cfa_register 6
 9854 0004 53       		pushq	%rbx
 9855 0005 4883EC18 		subq	$24, %rsp
 9856              		.cfi_offset 3, -24
 9857 0009 48897DE8 		movq	%rdi, -24(%rbp)
 9858 000d 488975E0 		movq	%rsi, -32(%rbp)
 9859              	.LBB94:
 360:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     {
GAS LISTING /tmp/ccsIN87E.s 			page 452


 9860              		.loc 7 360 0
 9861 0011 48837DE0 		cmpq	$0, -32(%rbp)
 9861      00
 9862 0016 741A     		je	.L469
 360:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     {
 9863              		.loc 7 360 0 is_stmt 0 discriminator 1
 9864 0018 488B45E0 		movq	-32(%rbp), %rax
 9865 001c 488B00   		movq	(%rax), %rax
 9866 001f 4883E818 		subq	$24, %rax
 9867 0023 488B00   		movq	(%rax), %rax
 9868 0026 4889C2   		movq	%rax, %rdx
 9869 0029 488B45E0 		movq	-32(%rbp), %rax
 9870 002d 4801C2   		addq	%rax, %rdx
 9871 0030 EB05     		jmp	.L470
 9872              	.L469:
 360:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     {
 9873              		.loc 7 360 0 discriminator 2
 9874 0032 BA000000 		movl	$0, %edx
 9874      00
 9875              	.L470:
 360:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     {
 9876              		.loc 7 360 0 discriminator 4
 9877 0037 488B45E8 		movq	-24(%rbp), %rax
 9878 003b 488910   		movq	%rdx, (%rax)
 9879 003e 488B45E8 		movq	-24(%rbp), %rax
 9880 0042 4883C008 		addq	$8, %rax
 9881 0046 4889C7   		movq	%rax, %rdi
 9882 0049 E8000000 		call	_ZN5boost6detail12shared_countC1Ev
 9882      00
 362:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     }
 9883              		.loc 7 362 0 is_stmt 1 discriminator 4
 9884 004e 488B45E8 		movq	-24(%rbp), %rax
 9885 0052 488D5008 		leaq	8(%rax), %rdx
 9886 0056 488B4DE0 		movq	-32(%rbp), %rcx
 9887 005a 488B45E8 		movq	-24(%rbp), %rax
 9888 005e 4889CE   		movq	%rcx, %rsi
 9889 0061 4889C7   		movq	%rax, %rdi
 9890              	.LEHB80:
 9891 0064 E8000000 		call	_ZN5boost6detail20sp_pointer_constructIKNS_16exception_detail10clone_baseENS2_10clone_implINS
 9891      00
 9892              	.LEHE80:
 9893              	.LBE94:
 363:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 9894              		.loc 7 363 0
 9895 0069 EB1E     		jmp	.L473
 9896              	.L472:
 9897 006b 4889C3   		movq	%rax, %rbx
 9898              	.LBB95:
 360:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     {
 9899              		.loc 7 360 0
 9900 006e 488B45E8 		movq	-24(%rbp), %rax
 9901 0072 4883C008 		addq	$8, %rax
 9902 0076 4889C7   		movq	%rax, %rdi
 9903 0079 E8000000 		call	_ZN5boost6detail12shared_countD1Ev
 9903      00
 9904 007e 4889D8   		movq	%rbx, %rax
 9905 0081 4889C7   		movq	%rax, %rdi
GAS LISTING /tmp/ccsIN87E.s 			page 453


 9906              	.LEHB81:
 9907 0084 E8000000 		call	_Unwind_Resume@PLT
 9907      00
 9908              	.LEHE81:
 9909              	.L473:
 9910              	.LBE95:
 363:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 9911              		.loc 7 363 0
 9912 0089 4883C418 		addq	$24, %rsp
 9913 008d 5B       		popq	%rbx
 9914 008e 5D       		popq	%rbp
 9915              		.cfi_def_cfa 7, 8
 9916 008f C3       		ret
 9917              		.cfi_endproc
 9918              	.LFE12952:
 9919              		.section	.gcc_except_table
 9920              	.LLSDA12952:
 9921 01ba FF       		.byte	0xff
 9922 01bb FF       		.byte	0xff
 9923 01bc 01       		.byte	0x1
 9924 01bd 09       		.uleb128 .LLSDACSE12952-.LLSDACSB12952
 9925              	.LLSDACSB12952:
 9926 01be 64       		.uleb128 .LEHB80-.LFB12952
 9927 01bf 05       		.uleb128 .LEHE80-.LEHB80
 9928 01c0 6B       		.uleb128 .L472-.LFB12952
 9929 01c1 00       		.uleb128 0
 9930 01c2 8401     		.uleb128 .LEHB81-.LFB12952
 9931 01c4 05       		.uleb128 .LEHE81-.LEHB81
 9932 01c5 00       		.uleb128 0
 9933 01c6 00       		.uleb128 0
 9934              	.LLSDACSE12952:
 9935              		.section	.text._ZN5boost10shared_ptrIKNS_16exception_detail10clone_baseEEC2INS1_10clone_implINS1_1
 9937              		.weak	_ZN5boost10shared_ptrIKNS_16exception_detail10clone_baseEEC1INS1_10clone_implINS1_10bad_allo
 9938              		.set	_ZN5boost10shared_ptrIKNS_16exception_detail10clone_baseEEC1INS1_10clone_implINS1_10bad_alloc
 9939              		.section	.text._ZN5boost16exception_detail10clone_implINS0_14bad_exception_EEC1ERKS2_,"axG",@progb
 9940              		.align 2
 9941              		.weak	_ZN5boost16exception_detail10clone_implINS0_14bad_exception_EEC1ERKS2_
 9943              	_ZN5boost16exception_detail10clone_implINS0_14bad_exception_EEC1ERKS2_:
 9944              	.LFB12956:
 473:/usr/include/boost/exception/exception.hpp ****                 T(x)
 9945              		.loc 3 473 0
 9946              		.cfi_startproc
 9947              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 9948              		.cfi_lsda 0x1b,.LLSDA12956
 9949 0000 55       		pushq	%rbp
 9950              		.cfi_def_cfa_offset 16
 9951              		.cfi_offset 6, -16
 9952 0001 4889E5   		movq	%rsp, %rbp
 9953              		.cfi_def_cfa_register 6
 9954 0004 53       		pushq	%rbx
 9955 0005 4883EC18 		subq	$24, %rsp
 9956              		.cfi_offset 3, -24
 9957 0009 48897DE8 		movq	%rdi, -24(%rbp)
 9958 000d 488975E0 		movq	%rsi, -32(%rbp)
 9959              	.LBB96:
 474:/usr/include/boost/exception/exception.hpp ****                 {
 9960              		.loc 3 474 0
GAS LISTING /tmp/ccsIN87E.s 			page 454


 9961 0011 488B45E8 		movq	-24(%rbp), %rax
 9962 0015 4883C030 		addq	$48, %rax
 9963 0019 4889C7   		movq	%rax, %rdi
 9964 001c E8000000 		call	_ZN5boost16exception_detail10clone_baseC2Ev
 9964      00
 9965 0021 488B45E8 		movq	-24(%rbp), %rax
 9966 0025 488B55E0 		movq	-32(%rbp), %rdx
 9967 0029 4889D6   		movq	%rdx, %rsi
 9968 002c 4889C7   		movq	%rax, %rdi
 9969              	.LEHB82:
 9970 002f E8000000 		call	_ZN5boost16exception_detail14bad_exception_C2ERKS1_
 9970      00
 9971              	.LEHE82:
 474:/usr/include/boost/exception/exception.hpp ****                 {
 9972              		.loc 3 474 0 is_stmt 0 discriminator 5
 9973 0034 488D1500 		leaq	24+_ZTVN5boost16exception_detail10clone_implINS0_14bad_exception_EEE(%rip), %rdx
 9973      000000
 9974 003b 488B45E8 		movq	-24(%rbp), %rax
 9975 003f 488910   		movq	%rdx, (%rax)
 9976 0042 488D1500 		leaq	72+_ZTVN5boost16exception_detail10clone_implINS0_14bad_exception_EEE(%rip), %rdx
 9976      000000
 9977 0049 488B45E8 		movq	-24(%rbp), %rax
 9978 004d 48895028 		movq	%rdx, 40(%rax)
 9979 0051 488B45E8 		movq	-24(%rbp), %rax
 9980 0055 488D5030 		leaq	48(%rax), %rdx
 9981 0059 488D0500 		leaq	136+_ZTVN5boost16exception_detail10clone_implINS0_14bad_exception_EEE(%rip), %rax
 9981      000000
 9982 0060 488902   		movq	%rax, (%rdx)
 476:/usr/include/boost/exception/exception.hpp ****                 }
 9983              		.loc 3 476 0 is_stmt 1 discriminator 5
 9984 0063 488B55E0 		movq	-32(%rbp), %rdx
 9985 0067 488B45E8 		movq	-24(%rbp), %rax
 9986 006b 4889D6   		movq	%rdx, %rsi
 9987 006e 4889C7   		movq	%rax, %rdi
 9988              	.LEHB83:
 9989 0071 E8000000 		call	_ZN5boost16exception_detail20copy_boost_exceptionEPNS_9exceptionEPKS1_
 9989      00
 9990              	.LEHE83:
 9991              	.LBE96:
 477:/usr/include/boost/exception/exception.hpp **** 
 9992              		.loc 3 477 0
 9993 0076 EB2F     		jmp	.L480
 9994              	.L478:
 9995 0078 4889C3   		movq	%rax, %rbx
 9996              	.LBB97:
 474:/usr/include/boost/exception/exception.hpp ****                 {
 9997              		.loc 3 474 0
 9998 007b 488B45E8 		movq	-24(%rbp), %rax
 9999 007f 4889C7   		movq	%rax, %rdi
 10000 0082 E8000000 		call	_ZN5boost16exception_detail14bad_exception_D2Ev
 10000      00
 10001 0087 EB03     		jmp	.L479
 10002              	.L477:
 10003 0089 4889C3   		movq	%rax, %rbx
 10004              	.L479:
 474:/usr/include/boost/exception/exception.hpp ****                 {
 10005              		.loc 3 474 0 is_stmt 0 discriminator 6
GAS LISTING /tmp/ccsIN87E.s 			page 455


 10006 008c 488B45E8 		movq	-24(%rbp), %rax
 10007 0090 4883C030 		addq	$48, %rax
 10008 0094 4889C7   		movq	%rax, %rdi
 10009 0097 E8000000 		call	_ZN5boost16exception_detail10clone_baseD2Ev
 10009      00
 10010 009c 4889D8   		movq	%rbx, %rax
 10011 009f 4889C7   		movq	%rax, %rdi
 10012              	.LEHB84:
 10013 00a2 E8000000 		call	_Unwind_Resume@PLT
 10013      00
 10014              	.LEHE84:
 10015              	.L480:
 10016              	.LBE97:
 477:/usr/include/boost/exception/exception.hpp **** 
 10017              		.loc 3 477 0 is_stmt 1
 10018 00a7 4883C418 		addq	$24, %rsp
 10019 00ab 5B       		popq	%rbx
 10020 00ac 5D       		popq	%rbp
 10021              		.cfi_def_cfa 7, 8
 10022 00ad C3       		ret
 10023              		.cfi_endproc
 10024              	.LFE12956:
 10025              		.section	.gcc_except_table
 10026              	.LLSDA12956:
 10027 01c7 FF       		.byte	0xff
 10028 01c8 FF       		.byte	0xff
 10029 01c9 01       		.byte	0x1
 10030 01ca 0E       		.uleb128 .LLSDACSE12956-.LLSDACSB12956
 10031              	.LLSDACSB12956:
 10032 01cb 2F       		.uleb128 .LEHB82-.LFB12956
 10033 01cc 05       		.uleb128 .LEHE82-.LEHB82
 10034 01cd 8901     		.uleb128 .L477-.LFB12956
 10035 01cf 00       		.uleb128 0
 10036 01d0 71       		.uleb128 .LEHB83-.LFB12956
 10037 01d1 05       		.uleb128 .LEHE83-.LEHB83
 10038 01d2 78       		.uleb128 .L478-.LFB12956
 10039 01d3 00       		.uleb128 0
 10040 01d4 A201     		.uleb128 .LEHB84-.LFB12956
 10041 01d6 05       		.uleb128 .LEHE84-.LEHB84
 10042 01d7 00       		.uleb128 0
 10043 01d8 00       		.uleb128 0
 10044              	.LLSDACSE12956:
 10045              		.section	.text._ZN5boost16exception_detail10clone_implINS0_14bad_exception_EEC1ERKS2_,"axG",@progb
 10047              		.section	.text._ZN5boost16exception_detail10clone_implINS0_14bad_exception_EED1Ev,"axG",@progbits,
 10048              		.align 2
 10049              		.weak	_ZN5boost16exception_detail10clone_implINS0_14bad_exception_EED1Ev
 10051              	_ZN5boost16exception_detail10clone_implINS0_14bad_exception_EED1Ev:
 10052              	.LFB12959:
 479:/usr/include/boost/exception/exception.hpp ****                 {
 10053              		.loc 3 479 0
 10054              		.cfi_startproc
 10055 0000 55       		pushq	%rbp
 10056              		.cfi_def_cfa_offset 16
 10057              		.cfi_offset 6, -16
 10058 0001 4889E5   		movq	%rsp, %rbp
 10059              		.cfi_def_cfa_register 6
 10060 0004 4883EC10 		subq	$16, %rsp
GAS LISTING /tmp/ccsIN87E.s 			page 456


 10061 0008 48897DF8 		movq	%rdi, -8(%rbp)
 10062              	.LBB98:
 10063              		.loc 3 481 0
 10064 000c 488D1500 		leaq	24+_ZTVN5boost16exception_detail10clone_implINS0_14bad_exception_EEE(%rip), %rdx
 10064      000000
 10065 0013 488B45F8 		movq	-8(%rbp), %rax
 10066 0017 488910   		movq	%rdx, (%rax)
 10067 001a 488D1500 		leaq	72+_ZTVN5boost16exception_detail10clone_implINS0_14bad_exception_EEE(%rip), %rdx
 10067      000000
 10068 0021 488B45F8 		movq	-8(%rbp), %rax
 10069 0025 48895028 		movq	%rdx, 40(%rax)
 10070 0029 488B45F8 		movq	-8(%rbp), %rax
 10071 002d 488D5030 		leaq	48(%rax), %rdx
 10072 0031 488D0500 		leaq	136+_ZTVN5boost16exception_detail10clone_implINS0_14bad_exception_EEE(%rip), %rax
 10072      000000
 10073 0038 488902   		movq	%rax, (%rdx)
 10074 003b 488B45F8 		movq	-8(%rbp), %rax
 10075 003f 4889C7   		movq	%rax, %rdi
 10076 0042 E8000000 		call	_ZN5boost16exception_detail14bad_exception_D2Ev
 10076      00
 10077 0047 488B45F8 		movq	-8(%rbp), %rax
 10078 004b 4883C030 		addq	$48, %rax
 10079 004f 4889C7   		movq	%rax, %rdi
 10080 0052 E8000000 		call	_ZN5boost16exception_detail10clone_baseD2Ev
 10080      00
 10081              	.LBE98:
 10082 0057 90       		nop
 10083 0058 C9       		leave
 10084              		.cfi_def_cfa 7, 8
 10085 0059 C3       		ret
 10086              		.cfi_endproc
 10087              	.LFE12959:
 10089              		.set	.LTHUNK73,_ZN5boost16exception_detail10clone_implINS0_14bad_exception_EED1Ev
 10090              		.weak	_ZThn40_N5boost16exception_detail10clone_implINS0_14bad_exception_EED1Ev
 10092              	_ZThn40_N5boost16exception_detail10clone_implINS0_14bad_exception_EED1Ev:
 10093              	.LFB15701:
 479:/usr/include/boost/exception/exception.hpp ****                 {
 10094              		.loc 3 479 0
 10095              		.cfi_startproc
 10096 005a 4883EF28 		subq	$40, %rdi
 10097 005e EBA0     		jmp	.LTHUNK73
 10098              		.cfi_endproc
 10099              	.LFE15701:
 10101              		.set	.LTHUNK72,_ZN5boost16exception_detail10clone_implINS0_14bad_exception_EED1Ev
 10102              		.weak	_ZTv0_n40_N5boost16exception_detail10clone_implINS0_14bad_exception_EED1Ev
 10104              	_ZTv0_n40_N5boost16exception_detail10clone_implINS0_14bad_exception_EED1Ev:
 10105              	.LFB15702:
 479:/usr/include/boost/exception/exception.hpp ****                 {
 10106              		.loc 3 479 0
 10107              		.cfi_startproc
 10108 0060 4C8B17   		movq	(%rdi), %r10
 10109 0063 49037AD8 		addq	-40(%r10), %rdi
 10110 0067 EB97     		jmp	.LTHUNK72
 10111              		.cfi_endproc
 10112              	.LFE15702:
 10114              		.section	.text._ZN5boost16exception_detail10clone_implINS0_14bad_exception_EED0Ev,"axG",@progbits,
 10115              		.align 2
GAS LISTING /tmp/ccsIN87E.s 			page 457


 10116              		.weak	_ZN5boost16exception_detail10clone_implINS0_14bad_exception_EED0Ev
 10118              	_ZN5boost16exception_detail10clone_implINS0_14bad_exception_EED0Ev:
 10119              	.LFB12960:
 479:/usr/include/boost/exception/exception.hpp ****                 {
 10120              		.loc 3 479 0
 10121              		.cfi_startproc
 10122 0000 55       		pushq	%rbp
 10123              		.cfi_def_cfa_offset 16
 10124              		.cfi_offset 6, -16
 10125 0001 4889E5   		movq	%rsp, %rbp
 10126              		.cfi_def_cfa_register 6
 10127 0004 4883EC10 		subq	$16, %rsp
 10128 0008 48897DF8 		movq	%rdi, -8(%rbp)
 10129              		.loc 3 481 0
 10130 000c 488B45F8 		movq	-8(%rbp), %rax
 10131 0010 4889C7   		movq	%rax, %rdi
 10132 0013 E8000000 		call	_ZN5boost16exception_detail10clone_implINS0_14bad_exception_EED1Ev
 10132      00
 10133 0018 488B45F8 		movq	-8(%rbp), %rax
 10134 001c BE380000 		movl	$56, %esi
 10134      00
 10135 0021 4889C7   		movq	%rax, %rdi
 10136 0024 E8000000 		call	_ZdlPvm@PLT
 10136      00
 10137 0029 C9       		leave
 10138              		.cfi_def_cfa 7, 8
 10139 002a C3       		ret
 10140              		.cfi_endproc
 10141              	.LFE12960:
 10143              		.set	.LTHUNK75,_ZN5boost16exception_detail10clone_implINS0_14bad_exception_EED0Ev
 10144              		.weak	_ZThn40_N5boost16exception_detail10clone_implINS0_14bad_exception_EED0Ev
 10146              	_ZThn40_N5boost16exception_detail10clone_implINS0_14bad_exception_EED0Ev:
 10147              	.LFB15703:
 479:/usr/include/boost/exception/exception.hpp ****                 {
 10148              		.loc 3 479 0
 10149              		.cfi_startproc
 10150 002b 4883EF28 		subq	$40, %rdi
 10151 002f EBCF     		jmp	.LTHUNK75
 10152              		.cfi_endproc
 10153              	.LFE15703:
 10155              		.set	.LTHUNK74,_ZN5boost16exception_detail10clone_implINS0_14bad_exception_EED0Ev
 10156              		.weak	_ZTv0_n40_N5boost16exception_detail10clone_implINS0_14bad_exception_EED0Ev
 10158              	_ZTv0_n40_N5boost16exception_detail10clone_implINS0_14bad_exception_EED0Ev:
 10159              	.LFB15704:
 479:/usr/include/boost/exception/exception.hpp ****                 {
 10160              		.loc 3 479 0
 10161              		.cfi_startproc
 10162 0031 4C8B17   		movq	(%rdi), %r10
 10163 0034 49037AD8 		addq	-40(%r10), %rdi
 10164 0038 EBC6     		jmp	.LTHUNK74
 10165              		.cfi_endproc
 10166              	.LFE15704:
 10168              		.section	.text._ZN5boostlsINS_16exception_detail10clone_implINS1_14bad_exception_EEENS_15throw_fun
 10169              		.weak	_ZN5boostlsINS_16exception_detail10clone_implINS1_14bad_exception_EEENS_15throw_function_EPK
 10171              	_ZN5boostlsINS_16exception_detail10clone_implINS1_14bad_exception_EEENS_15throw_function_EPKcEENS_9
 10172              	.LFB12961:
 301:/usr/include/boost/exception/info.hpp ****         {
GAS LISTING /tmp/ccsIN87E.s 			page 458


 10173              		.loc 36 301 0
 10174              		.cfi_startproc
 10175 0000 55       		pushq	%rbp
 10176              		.cfi_def_cfa_offset 16
 10177              		.cfi_offset 6, -16
 10178 0001 4889E5   		movq	%rsp, %rbp
 10179              		.cfi_def_cfa_register 6
 10180 0004 4883EC10 		subq	$16, %rsp
 10181 0008 48897DF8 		movq	%rdi, -8(%rbp)
 10182 000c 488975F0 		movq	%rsi, -16(%rbp)
 303:/usr/include/boost/exception/info.hpp ****         }
 10183              		.loc 36 303 0
 10184 0010 488B45F0 		movq	-16(%rbp), %rax
 10185 0014 4889C7   		movq	%rax, %rdi
 10186 0017 E8000000 		call	_ZSt4moveIRN5boost10error_infoINS0_15throw_function_EPKcEEEONSt16remove_referenceIT_E4typeEOS
 10186      00
 10187 001c 4889C2   		movq	%rax, %rdx
 10188 001f 488B45F8 		movq	-8(%rbp), %rax
 10189 0023 4889D6   		movq	%rdx, %rsi
 10190 0026 4889C7   		movq	%rax, %rdi
 10191 0029 E8000000 		call	_ZN5boost16exception_detail8set_infoINS0_10clone_implINS0_14bad_exception_EEENS_15throw_funct
 10191      00
 10192              		.loc 36 304 0
 10193 002e C9       		leave
 10194              		.cfi_def_cfa 7, 8
 10195 002f C3       		ret
 10196              		.cfi_endproc
 10197              	.LFE12961:
 10199              		.section	.text._ZN5boostlsINS_16exception_detail10clone_implINS1_14bad_exception_EEENS_11throw_fil
 10200              		.weak	_ZN5boostlsINS_16exception_detail10clone_implINS1_14bad_exception_EEENS_11throw_file_EPKcEEN
 10202              	_ZN5boostlsINS_16exception_detail10clone_implINS1_14bad_exception_EEENS_11throw_file_EPKcEENS_9enab
 10203              	.LFB12962:
 301:/usr/include/boost/exception/info.hpp ****         {
 10204              		.loc 36 301 0
 10205              		.cfi_startproc
 10206 0000 55       		pushq	%rbp
 10207              		.cfi_def_cfa_offset 16
 10208              		.cfi_offset 6, -16
 10209 0001 4889E5   		movq	%rsp, %rbp
 10210              		.cfi_def_cfa_register 6
 10211 0004 4883EC10 		subq	$16, %rsp
 10212 0008 48897DF8 		movq	%rdi, -8(%rbp)
 10213 000c 488975F0 		movq	%rsi, -16(%rbp)
 303:/usr/include/boost/exception/info.hpp ****         }
 10214              		.loc 36 303 0
 10215 0010 488B45F0 		movq	-16(%rbp), %rax
 10216 0014 4889C7   		movq	%rax, %rdi
 10217 0017 E8000000 		call	_ZSt4moveIRN5boost10error_infoINS0_11throw_file_EPKcEEEONSt16remove_referenceIT_E4typeEOS8_
 10217      00
 10218 001c 4889C2   		movq	%rax, %rdx
 10219 001f 488B45F8 		movq	-8(%rbp), %rax
 10220 0023 4889D6   		movq	%rdx, %rsi
 10221 0026 4889C7   		movq	%rax, %rdi
 10222 0029 E8000000 		call	_ZN5boost16exception_detail8set_infoINS0_10clone_implINS0_14bad_exception_EEENS_11throw_file_
 10222      00
 10223              		.loc 36 304 0
 10224 002e C9       		leave
GAS LISTING /tmp/ccsIN87E.s 			page 459


 10225              		.cfi_def_cfa 7, 8
 10226 002f C3       		ret
 10227              		.cfi_endproc
 10228              	.LFE12962:
 10230              		.section	.text._ZN5boostlsINS_16exception_detail10clone_implINS1_14bad_exception_EEENS_11throw_lin
 10231              		.weak	_ZN5boostlsINS_16exception_detail10clone_implINS1_14bad_exception_EEENS_11throw_line_EiEENS_
 10233              	_ZN5boostlsINS_16exception_detail10clone_implINS1_14bad_exception_EEENS_11throw_line_EiEENS_9enable
 10234              	.LFB12963:
 301:/usr/include/boost/exception/info.hpp ****         {
 10235              		.loc 36 301 0
 10236              		.cfi_startproc
 10237 0000 55       		pushq	%rbp
 10238              		.cfi_def_cfa_offset 16
 10239              		.cfi_offset 6, -16
 10240 0001 4889E5   		movq	%rsp, %rbp
 10241              		.cfi_def_cfa_register 6
 10242 0004 4883EC10 		subq	$16, %rsp
 10243 0008 48897DF8 		movq	%rdi, -8(%rbp)
 10244 000c 488975F0 		movq	%rsi, -16(%rbp)
 303:/usr/include/boost/exception/info.hpp ****         }
 10245              		.loc 36 303 0
 10246 0010 488B45F0 		movq	-16(%rbp), %rax
 10247 0014 4889C7   		movq	%rax, %rdi
 10248 0017 E8000000 		call	_ZSt4moveIRN5boost10error_infoINS0_11throw_line_EiEEEONSt16remove_referenceIT_E4typeEOS6_
 10248      00
 10249 001c 4889C2   		movq	%rax, %rdx
 10250 001f 488B45F8 		movq	-8(%rbp), %rax
 10251 0023 4889D6   		movq	%rdx, %rsi
 10252 0026 4889C7   		movq	%rax, %rdi
 10253 0029 E8000000 		call	_ZN5boost16exception_detail8set_infoINS0_10clone_implINS0_14bad_exception_EEENS_11throw_line_
 10253      00
 10254              		.loc 36 304 0
 10255 002e C9       		leave
 10256              		.cfi_def_cfa 7, 8
 10257 002f C3       		ret
 10258              		.cfi_endproc
 10259              	.LFE12963:
 10261              		.section	.text._ZN5boost10shared_ptrIKNS_16exception_detail10clone_baseEEC2INS1_10clone_implINS1_1
 10262              		.align 2
 10263              		.weak	_ZN5boost10shared_ptrIKNS_16exception_detail10clone_baseEEC2INS1_10clone_implINS1_14bad_exce
 10265              	_ZN5boost10shared_ptrIKNS_16exception_detail10clone_baseEEC2INS1_10clone_implINS1_14bad_exception_E
 10266              	.LFB12965:
 360:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     {
 10267              		.loc 7 360 0
 10268              		.cfi_startproc
 10269              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 10270              		.cfi_lsda 0x1b,.LLSDA12965
 10271 0000 55       		pushq	%rbp
 10272              		.cfi_def_cfa_offset 16
 10273              		.cfi_offset 6, -16
 10274 0001 4889E5   		movq	%rsp, %rbp
 10275              		.cfi_def_cfa_register 6
 10276 0004 53       		pushq	%rbx
 10277 0005 4883EC18 		subq	$24, %rsp
 10278              		.cfi_offset 3, -24
 10279 0009 48897DE8 		movq	%rdi, -24(%rbp)
 10280 000d 488975E0 		movq	%rsi, -32(%rbp)
GAS LISTING /tmp/ccsIN87E.s 			page 460


 10281              	.LBB99:
 360:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     {
 10282              		.loc 7 360 0
 10283 0011 48837DE0 		cmpq	$0, -32(%rbp)
 10283      00
 10284 0016 741A     		je	.L490
 360:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     {
 10285              		.loc 7 360 0 is_stmt 0 discriminator 1
 10286 0018 488B45E0 		movq	-32(%rbp), %rax
 10287 001c 488B00   		movq	(%rax), %rax
 10288 001f 4883E818 		subq	$24, %rax
 10289 0023 488B00   		movq	(%rax), %rax
 10290 0026 4889C2   		movq	%rax, %rdx
 10291 0029 488B45E0 		movq	-32(%rbp), %rax
 10292 002d 4801C2   		addq	%rax, %rdx
 10293 0030 EB05     		jmp	.L491
 10294              	.L490:
 360:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     {
 10295              		.loc 7 360 0 discriminator 2
 10296 0032 BA000000 		movl	$0, %edx
 10296      00
 10297              	.L491:
 360:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     {
 10298              		.loc 7 360 0 discriminator 4
 10299 0037 488B45E8 		movq	-24(%rbp), %rax
 10300 003b 488910   		movq	%rdx, (%rax)
 10301 003e 488B45E8 		movq	-24(%rbp), %rax
 10302 0042 4883C008 		addq	$8, %rax
 10303 0046 4889C7   		movq	%rax, %rdi
 10304 0049 E8000000 		call	_ZN5boost6detail12shared_countC1Ev
 10304      00
 362:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     }
 10305              		.loc 7 362 0 is_stmt 1 discriminator 4
 10306 004e 488B45E8 		movq	-24(%rbp), %rax
 10307 0052 488D5008 		leaq	8(%rax), %rdx
 10308 0056 488B4DE0 		movq	-32(%rbp), %rcx
 10309 005a 488B45E8 		movq	-24(%rbp), %rax
 10310 005e 4889CE   		movq	%rcx, %rsi
 10311 0061 4889C7   		movq	%rax, %rdi
 10312              	.LEHB85:
 10313 0064 E8000000 		call	_ZN5boost6detail20sp_pointer_constructIKNS_16exception_detail10clone_baseENS2_10clone_implINS
 10313      00
 10314              	.LEHE85:
 10315              	.LBE99:
 363:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 10316              		.loc 7 363 0
 10317 0069 EB1E     		jmp	.L494
 10318              	.L493:
 10319 006b 4889C3   		movq	%rax, %rbx
 10320              	.LBB100:
 360:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     {
 10321              		.loc 7 360 0
 10322 006e 488B45E8 		movq	-24(%rbp), %rax
 10323 0072 4883C008 		addq	$8, %rax
 10324 0076 4889C7   		movq	%rax, %rdi
 10325 0079 E8000000 		call	_ZN5boost6detail12shared_countD1Ev
 10325      00
GAS LISTING /tmp/ccsIN87E.s 			page 461


 10326 007e 4889D8   		movq	%rbx, %rax
 10327 0081 4889C7   		movq	%rax, %rdi
 10328              	.LEHB86:
 10329 0084 E8000000 		call	_Unwind_Resume@PLT
 10329      00
 10330              	.LEHE86:
 10331              	.L494:
 10332              	.LBE100:
 363:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 10333              		.loc 7 363 0
 10334 0089 4883C418 		addq	$24, %rsp
 10335 008d 5B       		popq	%rbx
 10336 008e 5D       		popq	%rbp
 10337              		.cfi_def_cfa 7, 8
 10338 008f C3       		ret
 10339              		.cfi_endproc
 10340              	.LFE12965:
 10341              		.section	.gcc_except_table
 10342              	.LLSDA12965:
 10343 01d9 FF       		.byte	0xff
 10344 01da FF       		.byte	0xff
 10345 01db 01       		.byte	0x1
 10346 01dc 09       		.uleb128 .LLSDACSE12965-.LLSDACSB12965
 10347              	.LLSDACSB12965:
 10348 01dd 64       		.uleb128 .LEHB85-.LFB12965
 10349 01de 05       		.uleb128 .LEHE85-.LEHB85
 10350 01df 6B       		.uleb128 .L493-.LFB12965
 10351 01e0 00       		.uleb128 0
 10352 01e1 8401     		.uleb128 .LEHB86-.LFB12965
 10353 01e3 05       		.uleb128 .LEHE86-.LEHB86
 10354 01e4 00       		.uleb128 0
 10355 01e5 00       		.uleb128 0
 10356              	.LLSDACSE12965:
 10357              		.section	.text._ZN5boost10shared_ptrIKNS_16exception_detail10clone_baseEEC2INS1_10clone_implINS1_1
 10359              		.weak	_ZN5boost10shared_ptrIKNS_16exception_detail10clone_baseEEC1INS1_10clone_implINS1_14bad_exce
 10360              		.set	_ZN5boost10shared_ptrIKNS_16exception_detail10clone_baseEEC1INS1_10clone_implINS1_14bad_excep
 10361              		.section	.text._ZNKSt6vectorIiSaIiEE4sizeEv,"axG",@progbits,_ZNKSt6vectorIiSaIiEE4sizeEv,comdat
 10362              		.align 2
 10363              		.weak	_ZNKSt6vectorIiSaIiEE4sizeEv
 10365              	_ZNKSt6vectorIiSaIiEE4sizeEv:
 10366              	.LFB13386:
 655:/usr/include/c++/6/bits/stl_vector.h ****       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 10367              		.loc 30 655 0
 10368              		.cfi_startproc
 10369 0000 55       		pushq	%rbp
 10370              		.cfi_def_cfa_offset 16
 10371              		.cfi_offset 6, -16
 10372 0001 4889E5   		movq	%rsp, %rbp
 10373              		.cfi_def_cfa_register 6
 10374 0004 48897DF8 		movq	%rdi, -8(%rbp)
 656:/usr/include/c++/6/bits/stl_vector.h **** 
 10375              		.loc 30 656 0
 10376 0008 488B45F8 		movq	-8(%rbp), %rax
 10377 000c 488B4008 		movq	8(%rax), %rax
 10378 0010 4889C2   		movq	%rax, %rdx
 10379 0013 488B45F8 		movq	-8(%rbp), %rax
 10380 0017 488B00   		movq	(%rax), %rax
GAS LISTING /tmp/ccsIN87E.s 			page 462


 10381 001a 4829C2   		subq	%rax, %rdx
 10382 001d 4889D0   		movq	%rdx, %rax
 10383 0020 48C1F802 		sarq	$2, %rax
 10384 0024 5D       		popq	%rbp
 10385              		.cfi_def_cfa 7, 8
 10386 0025 C3       		ret
 10387              		.cfi_endproc
 10388              	.LFE13386:
 10390              		.section	.text._ZN9__gnu_cxx14__alloc_traitsISaIiEE17_S_select_on_copyERKS1_,"axG",@progbits,_ZN9_
 10391              		.weak	_ZN9__gnu_cxx14__alloc_traitsISaIiEE17_S_select_on_copyERKS1_
 10393              	_ZN9__gnu_cxx14__alloc_traitsISaIiEE17_S_select_on_copyERKS1_:
 10394              	.LFB13387:
 10395              		.file 37 "/usr/include/c++/6/ext/alloc_traits.h"
   1:/usr/include/c++/6/ext/alloc_traits.h **** // Allocator traits -*- C++ -*-
   2:/usr/include/c++/6/ext/alloc_traits.h **** 
   3:/usr/include/c++/6/ext/alloc_traits.h **** // Copyright (C) 2011-2016 Free Software Foundation, Inc.
   4:/usr/include/c++/6/ext/alloc_traits.h **** //
   5:/usr/include/c++/6/ext/alloc_traits.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/6/ext/alloc_traits.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/6/ext/alloc_traits.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/6/ext/alloc_traits.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/6/ext/alloc_traits.h **** // any later version.
  10:/usr/include/c++/6/ext/alloc_traits.h **** 
  11:/usr/include/c++/6/ext/alloc_traits.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/6/ext/alloc_traits.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/6/ext/alloc_traits.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/6/ext/alloc_traits.h **** // GNU General Public License for more details.
  15:/usr/include/c++/6/ext/alloc_traits.h **** 
  16:/usr/include/c++/6/ext/alloc_traits.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/6/ext/alloc_traits.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/6/ext/alloc_traits.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/6/ext/alloc_traits.h **** 
  20:/usr/include/c++/6/ext/alloc_traits.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/6/ext/alloc_traits.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/6/ext/alloc_traits.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/6/ext/alloc_traits.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/6/ext/alloc_traits.h **** 
  25:/usr/include/c++/6/ext/alloc_traits.h **** /** @file ext/alloc_traits.h
  26:/usr/include/c++/6/ext/alloc_traits.h ****  *  This file is a GNU extension to the Standard C++ Library.
  27:/usr/include/c++/6/ext/alloc_traits.h ****  */
  28:/usr/include/c++/6/ext/alloc_traits.h **** 
  29:/usr/include/c++/6/ext/alloc_traits.h **** #ifndef _EXT_ALLOC_TRAITS_H
  30:/usr/include/c++/6/ext/alloc_traits.h **** #define _EXT_ALLOC_TRAITS_H 1
  31:/usr/include/c++/6/ext/alloc_traits.h **** 
  32:/usr/include/c++/6/ext/alloc_traits.h **** #pragma GCC system_header
  33:/usr/include/c++/6/ext/alloc_traits.h **** 
  34:/usr/include/c++/6/ext/alloc_traits.h **** #if __cplusplus >= 201103L
  35:/usr/include/c++/6/ext/alloc_traits.h **** # include <bits/move.h>
  36:/usr/include/c++/6/ext/alloc_traits.h **** # include <bits/alloc_traits.h>
  37:/usr/include/c++/6/ext/alloc_traits.h **** #else
  38:/usr/include/c++/6/ext/alloc_traits.h **** # include <bits/allocator.h>  // for __alloc_swap
  39:/usr/include/c++/6/ext/alloc_traits.h **** #endif
  40:/usr/include/c++/6/ext/alloc_traits.h **** 
  41:/usr/include/c++/6/ext/alloc_traits.h **** namespace __gnu_cxx _GLIBCXX_VISIBILITY(default)
  42:/usr/include/c++/6/ext/alloc_traits.h **** {
  43:/usr/include/c++/6/ext/alloc_traits.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  44:/usr/include/c++/6/ext/alloc_traits.h **** 
GAS LISTING /tmp/ccsIN87E.s 			page 463


  45:/usr/include/c++/6/ext/alloc_traits.h **** /**
  46:/usr/include/c++/6/ext/alloc_traits.h ****  * @brief  Uniform interface to C++98 and C++11 allocators.
  47:/usr/include/c++/6/ext/alloc_traits.h ****  * @ingroup allocators
  48:/usr/include/c++/6/ext/alloc_traits.h **** */
  49:/usr/include/c++/6/ext/alloc_traits.h **** template<typename _Alloc>
  50:/usr/include/c++/6/ext/alloc_traits.h ****   struct __alloc_traits
  51:/usr/include/c++/6/ext/alloc_traits.h **** #if __cplusplus >= 201103L
  52:/usr/include/c++/6/ext/alloc_traits.h ****   : std::allocator_traits<_Alloc>
  53:/usr/include/c++/6/ext/alloc_traits.h **** #endif
  54:/usr/include/c++/6/ext/alloc_traits.h ****   {
  55:/usr/include/c++/6/ext/alloc_traits.h ****     typedef _Alloc allocator_type;
  56:/usr/include/c++/6/ext/alloc_traits.h **** #if __cplusplus >= 201103L
  57:/usr/include/c++/6/ext/alloc_traits.h ****     typedef std::allocator_traits<_Alloc>           _Base_type;
  58:/usr/include/c++/6/ext/alloc_traits.h ****     typedef typename _Base_type::value_type         value_type;
  59:/usr/include/c++/6/ext/alloc_traits.h ****     typedef typename _Base_type::pointer            pointer;
  60:/usr/include/c++/6/ext/alloc_traits.h ****     typedef typename _Base_type::const_pointer      const_pointer;
  61:/usr/include/c++/6/ext/alloc_traits.h ****     typedef typename _Base_type::size_type          size_type;
  62:/usr/include/c++/6/ext/alloc_traits.h ****     typedef typename _Base_type::difference_type    difference_type;
  63:/usr/include/c++/6/ext/alloc_traits.h ****     // C++11 allocators do not define reference or const_reference
  64:/usr/include/c++/6/ext/alloc_traits.h ****     typedef value_type&                             reference;
  65:/usr/include/c++/6/ext/alloc_traits.h ****     typedef const value_type&                       const_reference;
  66:/usr/include/c++/6/ext/alloc_traits.h ****     using _Base_type::allocate;
  67:/usr/include/c++/6/ext/alloc_traits.h ****     using _Base_type::deallocate;
  68:/usr/include/c++/6/ext/alloc_traits.h ****     using _Base_type::construct;
  69:/usr/include/c++/6/ext/alloc_traits.h ****     using _Base_type::destroy;
  70:/usr/include/c++/6/ext/alloc_traits.h ****     using _Base_type::max_size;
  71:/usr/include/c++/6/ext/alloc_traits.h **** 
  72:/usr/include/c++/6/ext/alloc_traits.h ****   private:
  73:/usr/include/c++/6/ext/alloc_traits.h ****     template<typename _Ptr>
  74:/usr/include/c++/6/ext/alloc_traits.h ****       using __is_custom_pointer
  75:/usr/include/c++/6/ext/alloc_traits.h **** 	= std::__and_<std::is_same<pointer, _Ptr>,
  76:/usr/include/c++/6/ext/alloc_traits.h **** 		      std::__not_<std::is_pointer<_Ptr>>>;
  77:/usr/include/c++/6/ext/alloc_traits.h **** 
  78:/usr/include/c++/6/ext/alloc_traits.h ****   public:
  79:/usr/include/c++/6/ext/alloc_traits.h ****     // overload construct for non-standard pointer types
  80:/usr/include/c++/6/ext/alloc_traits.h ****     template<typename _Ptr, typename... _Args>
  81:/usr/include/c++/6/ext/alloc_traits.h ****       static typename std::enable_if<__is_custom_pointer<_Ptr>::value>::type
  82:/usr/include/c++/6/ext/alloc_traits.h ****       construct(_Alloc& __a, _Ptr __p, _Args&&... __args)
  83:/usr/include/c++/6/ext/alloc_traits.h ****       {
  84:/usr/include/c++/6/ext/alloc_traits.h **** 	_Base_type::construct(__a, std::addressof(*__p),
  85:/usr/include/c++/6/ext/alloc_traits.h **** 			      std::forward<_Args>(__args)...);
  86:/usr/include/c++/6/ext/alloc_traits.h ****       }
  87:/usr/include/c++/6/ext/alloc_traits.h **** 
  88:/usr/include/c++/6/ext/alloc_traits.h ****     // overload destroy for non-standard pointer types
  89:/usr/include/c++/6/ext/alloc_traits.h ****     template<typename _Ptr>
  90:/usr/include/c++/6/ext/alloc_traits.h ****       static typename std::enable_if<__is_custom_pointer<_Ptr>::value>::type
  91:/usr/include/c++/6/ext/alloc_traits.h ****       destroy(_Alloc& __a, _Ptr __p)
  92:/usr/include/c++/6/ext/alloc_traits.h ****       { _Base_type::destroy(__a, std::addressof(*__p)); }
  93:/usr/include/c++/6/ext/alloc_traits.h **** 
  94:/usr/include/c++/6/ext/alloc_traits.h ****     static _Alloc _S_select_on_copy(const _Alloc& __a)
 10396              		.loc 37 94 0
 10397              		.cfi_startproc
 10398 0000 55       		pushq	%rbp
 10399              		.cfi_def_cfa_offset 16
 10400              		.cfi_offset 6, -16
 10401 0001 4889E5   		movq	%rsp, %rbp
 10402              		.cfi_def_cfa_register 6
GAS LISTING /tmp/ccsIN87E.s 			page 464


 10403 0004 4883EC10 		subq	$16, %rsp
 10404 0008 48897DF8 		movq	%rdi, -8(%rbp)
 10405 000c 488975F0 		movq	%rsi, -16(%rbp)
  95:/usr/include/c++/6/ext/alloc_traits.h ****     { return _Base_type::select_on_container_copy_construction(__a); }
 10406              		.loc 37 95 0
 10407 0010 488B45F8 		movq	-8(%rbp), %rax
 10408 0014 488B55F0 		movq	-16(%rbp), %rdx
 10409 0018 4889D6   		movq	%rdx, %rsi
 10410 001b 4889C7   		movq	%rax, %rdi
 10411 001e E8000000 		call	_ZNSt16allocator_traitsISaIiEE37select_on_container_copy_constructionERKS0_
 10411      00
 10412 0023 488B45F8 		movq	-8(%rbp), %rax
 10413 0027 C9       		leave
 10414              		.cfi_def_cfa 7, 8
 10415 0028 C3       		ret
 10416              		.cfi_endproc
 10417              	.LFE13387:
 10419              		.section	.text._ZNKSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv,"axG",@progbits,_ZNKSt12_Vector
 10420              		.align 2
 10421              		.weak	_ZNKSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv
 10423              	_ZNKSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv:
 10424              	.LFB13388:
 117:/usr/include/c++/6/bits/stl_vector.h ****       { return *static_cast<const _Tp_alloc_type*>(&this->_M_impl); }
 10425              		.loc 30 117 0
 10426              		.cfi_startproc
 10427 0000 55       		pushq	%rbp
 10428              		.cfi_def_cfa_offset 16
 10429              		.cfi_offset 6, -16
 10430 0001 4889E5   		movq	%rsp, %rbp
 10431              		.cfi_def_cfa_register 6
 10432 0004 48897DF8 		movq	%rdi, -8(%rbp)
 118:/usr/include/c++/6/bits/stl_vector.h **** 
 10433              		.loc 30 118 0
 10434 0008 488B45F8 		movq	-8(%rbp), %rax
 10435 000c 5D       		popq	%rbp
 10436              		.cfi_def_cfa 7, 8
 10437 000d C3       		ret
 10438              		.cfi_endproc
 10439              	.LFE13388:
 10441              		.section	.text._ZNSaIiED2Ev,"axG",@progbits,_ZNSaIiED5Ev,comdat
 10442              		.align 2
 10443              		.weak	_ZNSaIiED2Ev
 10445              	_ZNSaIiED2Ev:
 10446              	.LFB13390:
 10447              		.file 38 "/usr/include/c++/6/bits/allocator.h"
   1:/usr/include/c++/6/bits/allocator.h **** // Allocators -*- C++ -*-
   2:/usr/include/c++/6/bits/allocator.h **** 
   3:/usr/include/c++/6/bits/allocator.h **** // Copyright (C) 2001-2016 Free Software Foundation, Inc.
   4:/usr/include/c++/6/bits/allocator.h **** //
   5:/usr/include/c++/6/bits/allocator.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/6/bits/allocator.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/6/bits/allocator.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/6/bits/allocator.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/6/bits/allocator.h **** // any later version.
  10:/usr/include/c++/6/bits/allocator.h **** 
  11:/usr/include/c++/6/bits/allocator.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/6/bits/allocator.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
GAS LISTING /tmp/ccsIN87E.s 			page 465


  13:/usr/include/c++/6/bits/allocator.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/6/bits/allocator.h **** // GNU General Public License for more details.
  15:/usr/include/c++/6/bits/allocator.h **** 
  16:/usr/include/c++/6/bits/allocator.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/6/bits/allocator.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/6/bits/allocator.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/6/bits/allocator.h **** 
  20:/usr/include/c++/6/bits/allocator.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/6/bits/allocator.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/6/bits/allocator.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/6/bits/allocator.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/6/bits/allocator.h **** 
  25:/usr/include/c++/6/bits/allocator.h **** /*
  26:/usr/include/c++/6/bits/allocator.h ****  * Copyright (c) 1996-1997
  27:/usr/include/c++/6/bits/allocator.h ****  * Silicon Graphics Computer Systems, Inc.
  28:/usr/include/c++/6/bits/allocator.h ****  *
  29:/usr/include/c++/6/bits/allocator.h ****  * Permission to use, copy, modify, distribute and sell this software
  30:/usr/include/c++/6/bits/allocator.h ****  * and its documentation for any purpose is hereby granted without fee,
  31:/usr/include/c++/6/bits/allocator.h ****  * provided that the above copyright notice appear in all copies and
  32:/usr/include/c++/6/bits/allocator.h ****  * that both that copyright notice and this permission notice appear
  33:/usr/include/c++/6/bits/allocator.h ****  * in supporting documentation.  Silicon Graphics makes no
  34:/usr/include/c++/6/bits/allocator.h ****  * representations about the suitability of this software for any
  35:/usr/include/c++/6/bits/allocator.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  36:/usr/include/c++/6/bits/allocator.h ****  */
  37:/usr/include/c++/6/bits/allocator.h **** 
  38:/usr/include/c++/6/bits/allocator.h **** /** @file bits/allocator.h
  39:/usr/include/c++/6/bits/allocator.h ****  *  This is an internal header file, included by other library headers.
  40:/usr/include/c++/6/bits/allocator.h ****  *  Do not attempt to use it directly. @headername{memory}
  41:/usr/include/c++/6/bits/allocator.h ****  */
  42:/usr/include/c++/6/bits/allocator.h **** 
  43:/usr/include/c++/6/bits/allocator.h **** #ifndef _ALLOCATOR_H
  44:/usr/include/c++/6/bits/allocator.h **** #define _ALLOCATOR_H 1
  45:/usr/include/c++/6/bits/allocator.h **** 
  46:/usr/include/c++/6/bits/allocator.h **** #include <bits/c++allocator.h> // Define the base class to std::allocator.
  47:/usr/include/c++/6/bits/allocator.h **** #include <bits/memoryfwd.h>
  48:/usr/include/c++/6/bits/allocator.h **** #if __cplusplus >= 201103L
  49:/usr/include/c++/6/bits/allocator.h **** #include <type_traits>
  50:/usr/include/c++/6/bits/allocator.h **** #endif
  51:/usr/include/c++/6/bits/allocator.h **** 
  52:/usr/include/c++/6/bits/allocator.h **** #define __cpp_lib_incomplete_container_elements 201505
  53:/usr/include/c++/6/bits/allocator.h **** #if __cplusplus >= 201103L
  54:/usr/include/c++/6/bits/allocator.h **** # define __cpp_lib_allocator_is_always_equal 201411
  55:/usr/include/c++/6/bits/allocator.h **** #endif
  56:/usr/include/c++/6/bits/allocator.h **** 
  57:/usr/include/c++/6/bits/allocator.h **** namespace std _GLIBCXX_VISIBILITY(default)
  58:/usr/include/c++/6/bits/allocator.h **** {
  59:/usr/include/c++/6/bits/allocator.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  60:/usr/include/c++/6/bits/allocator.h **** 
  61:/usr/include/c++/6/bits/allocator.h ****   /**
  62:/usr/include/c++/6/bits/allocator.h ****    *  @addtogroup allocators
  63:/usr/include/c++/6/bits/allocator.h ****    *  @{
  64:/usr/include/c++/6/bits/allocator.h ****    */
  65:/usr/include/c++/6/bits/allocator.h **** 
  66:/usr/include/c++/6/bits/allocator.h ****   /// allocator<void> specialization.
  67:/usr/include/c++/6/bits/allocator.h ****   template<>
  68:/usr/include/c++/6/bits/allocator.h ****     class allocator<void>
  69:/usr/include/c++/6/bits/allocator.h ****     {
GAS LISTING /tmp/ccsIN87E.s 			page 466


  70:/usr/include/c++/6/bits/allocator.h ****     public:
  71:/usr/include/c++/6/bits/allocator.h ****       typedef size_t      size_type;
  72:/usr/include/c++/6/bits/allocator.h ****       typedef ptrdiff_t   difference_type;
  73:/usr/include/c++/6/bits/allocator.h ****       typedef void*       pointer;
  74:/usr/include/c++/6/bits/allocator.h ****       typedef const void* const_pointer;
  75:/usr/include/c++/6/bits/allocator.h ****       typedef void        value_type;
  76:/usr/include/c++/6/bits/allocator.h **** 
  77:/usr/include/c++/6/bits/allocator.h ****       template<typename _Tp1>
  78:/usr/include/c++/6/bits/allocator.h ****         struct rebind
  79:/usr/include/c++/6/bits/allocator.h ****         { typedef allocator<_Tp1> other; };
  80:/usr/include/c++/6/bits/allocator.h **** 
  81:/usr/include/c++/6/bits/allocator.h **** #if __cplusplus >= 201103L
  82:/usr/include/c++/6/bits/allocator.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
  83:/usr/include/c++/6/bits/allocator.h ****       // 2103. std::allocator propagate_on_container_move_assignment
  84:/usr/include/c++/6/bits/allocator.h ****       typedef true_type propagate_on_container_move_assignment;
  85:/usr/include/c++/6/bits/allocator.h **** 
  86:/usr/include/c++/6/bits/allocator.h ****       typedef true_type is_always_equal;
  87:/usr/include/c++/6/bits/allocator.h **** 
  88:/usr/include/c++/6/bits/allocator.h ****       template<typename _Up, typename... _Args>
  89:/usr/include/c++/6/bits/allocator.h **** 	void
  90:/usr/include/c++/6/bits/allocator.h **** 	construct(_Up* __p, _Args&&... __args)
  91:/usr/include/c++/6/bits/allocator.h **** 	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
  92:/usr/include/c++/6/bits/allocator.h **** 
  93:/usr/include/c++/6/bits/allocator.h ****       template<typename _Up>
  94:/usr/include/c++/6/bits/allocator.h **** 	void
  95:/usr/include/c++/6/bits/allocator.h **** 	destroy(_Up* __p) { __p->~_Up(); }
  96:/usr/include/c++/6/bits/allocator.h **** #endif
  97:/usr/include/c++/6/bits/allocator.h ****     };
  98:/usr/include/c++/6/bits/allocator.h **** 
  99:/usr/include/c++/6/bits/allocator.h ****   /**
 100:/usr/include/c++/6/bits/allocator.h ****    * @brief  The @a standard allocator, as per [20.4].
 101:/usr/include/c++/6/bits/allocator.h ****    *
 102:/usr/include/c++/6/bits/allocator.h ****    *  See https://gcc.gnu.org/onlinedocs/libstdc++/manual/memory.html#std.util.memory.allocator
 103:/usr/include/c++/6/bits/allocator.h ****    *  for further details.
 104:/usr/include/c++/6/bits/allocator.h ****    *
 105:/usr/include/c++/6/bits/allocator.h ****    *  @tparam  _Tp  Type of allocated object.
 106:/usr/include/c++/6/bits/allocator.h ****    */
 107:/usr/include/c++/6/bits/allocator.h ****   template<typename _Tp>
 108:/usr/include/c++/6/bits/allocator.h ****     class allocator: public __allocator_base<_Tp>
 109:/usr/include/c++/6/bits/allocator.h ****     {
 110:/usr/include/c++/6/bits/allocator.h ****    public:
 111:/usr/include/c++/6/bits/allocator.h ****       typedef size_t     size_type;
 112:/usr/include/c++/6/bits/allocator.h ****       typedef ptrdiff_t  difference_type;
 113:/usr/include/c++/6/bits/allocator.h ****       typedef _Tp*       pointer;
 114:/usr/include/c++/6/bits/allocator.h ****       typedef const _Tp* const_pointer;
 115:/usr/include/c++/6/bits/allocator.h ****       typedef _Tp&       reference;
 116:/usr/include/c++/6/bits/allocator.h ****       typedef const _Tp& const_reference;
 117:/usr/include/c++/6/bits/allocator.h ****       typedef _Tp        value_type;
 118:/usr/include/c++/6/bits/allocator.h **** 
 119:/usr/include/c++/6/bits/allocator.h ****       template<typename _Tp1>
 120:/usr/include/c++/6/bits/allocator.h ****         struct rebind
 121:/usr/include/c++/6/bits/allocator.h ****         { typedef allocator<_Tp1> other; };
 122:/usr/include/c++/6/bits/allocator.h **** 
 123:/usr/include/c++/6/bits/allocator.h **** #if __cplusplus >= 201103L
 124:/usr/include/c++/6/bits/allocator.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 125:/usr/include/c++/6/bits/allocator.h ****       // 2103. std::allocator propagate_on_container_move_assignment
 126:/usr/include/c++/6/bits/allocator.h ****       typedef true_type propagate_on_container_move_assignment;
GAS LISTING /tmp/ccsIN87E.s 			page 467


 127:/usr/include/c++/6/bits/allocator.h **** 
 128:/usr/include/c++/6/bits/allocator.h ****       typedef true_type is_always_equal;
 129:/usr/include/c++/6/bits/allocator.h **** #endif
 130:/usr/include/c++/6/bits/allocator.h **** 
 131:/usr/include/c++/6/bits/allocator.h ****       allocator() throw() { }
 132:/usr/include/c++/6/bits/allocator.h **** 
 133:/usr/include/c++/6/bits/allocator.h ****       allocator(const allocator& __a) throw()
 134:/usr/include/c++/6/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 135:/usr/include/c++/6/bits/allocator.h **** 
 136:/usr/include/c++/6/bits/allocator.h ****       template<typename _Tp1>
 137:/usr/include/c++/6/bits/allocator.h ****         allocator(const allocator<_Tp1>&) throw() { }
 138:/usr/include/c++/6/bits/allocator.h **** 
 139:/usr/include/c++/6/bits/allocator.h ****       ~allocator() throw() { }
 10448              		.loc 38 139 0
 10449              		.cfi_startproc
 10450 0000 55       		pushq	%rbp
 10451              		.cfi_def_cfa_offset 16
 10452              		.cfi_offset 6, -16
 10453 0001 4889E5   		movq	%rsp, %rbp
 10454              		.cfi_def_cfa_register 6
 10455 0004 4883EC10 		subq	$16, %rsp
 10456 0008 48897DF8 		movq	%rdi, -8(%rbp)
 10457              	.LBB101:
 10458              		.loc 38 139 0
 10459 000c 488B45F8 		movq	-8(%rbp), %rax
 10460 0010 4889C7   		movq	%rax, %rdi
 10461 0013 E8000000 		call	_ZN9__gnu_cxx13new_allocatorIiED2Ev
 10461      00
 10462              	.LBE101:
 10463 0018 90       		nop
 10464 0019 C9       		leave
 10465              		.cfi_def_cfa 7, 8
 10466 001a C3       		ret
 10467              		.cfi_endproc
 10468              	.LFE13390:
 10470              		.weak	_ZNSaIiED1Ev
 10471              		.set	_ZNSaIiED1Ev,_ZNSaIiED2Ev
 10472              		.section	.text._ZNSt12_Vector_baseIiSaIiEE12_Vector_implD2Ev,"axG",@progbits,_ZNSt12_Vector_baseIi
 10473              		.align 2
 10474              		.weak	_ZNSt12_Vector_baseIiSaIiEE12_Vector_implD2Ev
 10476              	_ZNSt12_Vector_baseIiSaIiEE12_Vector_implD2Ev:
 10477              	.LFB13394:
  79:/usr/include/c++/6/bits/stl_vector.h ****       : public _Tp_alloc_type
 10478              		.loc 30 79 0
 10479              		.cfi_startproc
 10480 0000 55       		pushq	%rbp
 10481              		.cfi_def_cfa_offset 16
 10482              		.cfi_offset 6, -16
 10483 0001 4889E5   		movq	%rsp, %rbp
 10484              		.cfi_def_cfa_register 6
 10485 0004 4883EC10 		subq	$16, %rsp
 10486 0008 48897DF8 		movq	%rdi, -8(%rbp)
 10487              	.LBB102:
  79:/usr/include/c++/6/bits/stl_vector.h ****       : public _Tp_alloc_type
 10488              		.loc 30 79 0
 10489 000c 488B45F8 		movq	-8(%rbp), %rax
 10490 0010 4889C7   		movq	%rax, %rdi
GAS LISTING /tmp/ccsIN87E.s 			page 468


 10491 0013 E8000000 		call	_ZNSaIiED2Ev
 10491      00
 10492              	.LBE102:
 10493 0018 90       		nop
 10494 0019 C9       		leave
 10495              		.cfi_def_cfa 7, 8
 10496 001a C3       		ret
 10497              		.cfi_endproc
 10498              	.LFE13394:
 10500              		.weak	_ZNSt12_Vector_baseIiSaIiEE12_Vector_implD1Ev
 10501              		.set	_ZNSt12_Vector_baseIiSaIiEE12_Vector_implD1Ev,_ZNSt12_Vector_baseIiSaIiEE12_Vector_implD2Ev
 10502              		.section	.text._ZNSt12_Vector_baseIiSaIiEEC2EmRKS0_,"axG",@progbits,_ZNSt12_Vector_baseIiSaIiEEC5E
 10503              		.align 2
 10504              		.weak	_ZNSt12_Vector_baseIiSaIiEEC2EmRKS0_
 10506              	_ZNSt12_Vector_baseIiSaIiEEC2EmRKS0_:
 10507              	.LFB13396:
 134:/usr/include/c++/6/bits/stl_vector.h ****       : _M_impl(__a)
 10508              		.loc 30 134 0
 10509              		.cfi_startproc
 10510              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 10511              		.cfi_lsda 0x1b,.LLSDA13396
 10512 0000 55       		pushq	%rbp
 10513              		.cfi_def_cfa_offset 16
 10514              		.cfi_offset 6, -16
 10515 0001 4889E5   		movq	%rsp, %rbp
 10516              		.cfi_def_cfa_register 6
 10517 0004 53       		pushq	%rbx
 10518 0005 4883EC28 		subq	$40, %rsp
 10519              		.cfi_offset 3, -24
 10520 0009 48897DE8 		movq	%rdi, -24(%rbp)
 10521 000d 488975E0 		movq	%rsi, -32(%rbp)
 10522 0011 488955D8 		movq	%rdx, -40(%rbp)
 10523              	.LBB103:
 135:/usr/include/c++/6/bits/stl_vector.h ****       { _M_create_storage(__n); }
 10524              		.loc 30 135 0
 10525 0015 488B45E8 		movq	-24(%rbp), %rax
 10526 0019 488B55D8 		movq	-40(%rbp), %rdx
 10527 001d 4889D6   		movq	%rdx, %rsi
 10528 0020 4889C7   		movq	%rax, %rdi
 10529 0023 E8000000 		call	_ZNSt12_Vector_baseIiSaIiEE12_Vector_implC1ERKS0_
 10529      00
 136:/usr/include/c++/6/bits/stl_vector.h **** 
 10530              		.loc 30 136 0
 10531 0028 488B55E0 		movq	-32(%rbp), %rdx
 10532 002c 488B45E8 		movq	-24(%rbp), %rax
 10533 0030 4889D6   		movq	%rdx, %rsi
 10534 0033 4889C7   		movq	%rax, %rdi
 10535              	.LEHB87:
 10536 0036 E8000000 		call	_ZNSt12_Vector_baseIiSaIiEE17_M_create_storageEm
 10536      00
 10537              	.LEHE87:
 10538              	.LBE103:
 10539 003b EB1A     		jmp	.L506
 10540              	.L505:
 10541 003d 4889C3   		movq	%rax, %rbx
 10542              	.LBB104:
 135:/usr/include/c++/6/bits/stl_vector.h ****       { _M_create_storage(__n); }
GAS LISTING /tmp/ccsIN87E.s 			page 469


 10543              		.loc 30 135 0
 10544 0040 488B45E8 		movq	-24(%rbp), %rax
 10545 0044 4889C7   		movq	%rax, %rdi
 10546 0047 E8000000 		call	_ZNSt12_Vector_baseIiSaIiEE12_Vector_implD1Ev
 10546      00
 10547 004c 4889D8   		movq	%rbx, %rax
 10548 004f 4889C7   		movq	%rax, %rdi
 10549              	.LEHB88:
 10550 0052 E8000000 		call	_Unwind_Resume@PLT
 10550      00
 10551              	.LEHE88:
 10552              	.L506:
 10553              	.LBE104:
 136:/usr/include/c++/6/bits/stl_vector.h **** 
 10554              		.loc 30 136 0
 10555 0057 4883C428 		addq	$40, %rsp
 10556 005b 5B       		popq	%rbx
 10557 005c 5D       		popq	%rbp
 10558              		.cfi_def_cfa 7, 8
 10559 005d C3       		ret
 10560              		.cfi_endproc
 10561              	.LFE13396:
 10562              		.section	.gcc_except_table
 10563              	.LLSDA13396:
 10564 01e6 FF       		.byte	0xff
 10565 01e7 FF       		.byte	0xff
 10566 01e8 01       		.byte	0x1
 10567 01e9 08       		.uleb128 .LLSDACSE13396-.LLSDACSB13396
 10568              	.LLSDACSB13396:
 10569 01ea 36       		.uleb128 .LEHB87-.LFB13396
 10570 01eb 05       		.uleb128 .LEHE87-.LEHB87
 10571 01ec 3D       		.uleb128 .L505-.LFB13396
 10572 01ed 00       		.uleb128 0
 10573 01ee 52       		.uleb128 .LEHB88-.LFB13396
 10574 01ef 05       		.uleb128 .LEHE88-.LEHB88
 10575 01f0 00       		.uleb128 0
 10576 01f1 00       		.uleb128 0
 10577              	.LLSDACSE13396:
 10578              		.section	.text._ZNSt12_Vector_baseIiSaIiEEC2EmRKS0_,"axG",@progbits,_ZNSt12_Vector_baseIiSaIiEEC5E
 10580              		.weak	_ZNSt12_Vector_baseIiSaIiEEC1EmRKS0_
 10581              		.set	_ZNSt12_Vector_baseIiSaIiEEC1EmRKS0_,_ZNSt12_Vector_baseIiSaIiEEC2EmRKS0_
 10582              		.section	.text._ZNSt12_Vector_baseIiSaIiEED2Ev,"axG",@progbits,_ZNSt12_Vector_baseIiSaIiEED5Ev,com
 10583              		.align 2
 10584              		.weak	_ZNSt12_Vector_baseIiSaIiEED2Ev
 10586              	_ZNSt12_Vector_baseIiSaIiEED2Ev:
 10587              	.LFB13399:
 159:/usr/include/c++/6/bits/stl_vector.h ****       { _M_deallocate(this->_M_impl._M_start, this->_M_impl._M_end_of_storage
 10588              		.loc 30 159 0
 10589              		.cfi_startproc
 10590              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 10591              		.cfi_lsda 0x1b,.LLSDA13399
 10592 0000 55       		pushq	%rbp
 10593              		.cfi_def_cfa_offset 16
 10594              		.cfi_offset 6, -16
 10595 0001 4889E5   		movq	%rsp, %rbp
 10596              		.cfi_def_cfa_register 6
 10597 0004 4883EC10 		subq	$16, %rsp
GAS LISTING /tmp/ccsIN87E.s 			page 470


 10598 0008 48897DF8 		movq	%rdi, -8(%rbp)
 10599              	.LBB105:
 160:/usr/include/c++/6/bits/stl_vector.h **** 		      - this->_M_impl._M_start); }
 10600              		.loc 30 160 0
 10601 000c 488B45F8 		movq	-8(%rbp), %rax
 10602 0010 488B4010 		movq	16(%rax), %rax
 161:/usr/include/c++/6/bits/stl_vector.h **** 
 10603              		.loc 30 161 0
 10604 0014 4889C2   		movq	%rax, %rdx
 10605 0017 488B45F8 		movq	-8(%rbp), %rax
 10606 001b 488B00   		movq	(%rax), %rax
 10607 001e 4829C2   		subq	%rax, %rdx
 10608 0021 4889D0   		movq	%rdx, %rax
 160:/usr/include/c++/6/bits/stl_vector.h **** 		      - this->_M_impl._M_start); }
 10609              		.loc 30 160 0
 10610 0024 48C1F802 		sarq	$2, %rax
 10611 0028 4889C2   		movq	%rax, %rdx
 10612 002b 488B45F8 		movq	-8(%rbp), %rax
 10613 002f 488B08   		movq	(%rax), %rcx
 10614 0032 488B45F8 		movq	-8(%rbp), %rax
 10615 0036 4889CE   		movq	%rcx, %rsi
 10616 0039 4889C7   		movq	%rax, %rdi
 10617 003c E8000000 		call	_ZNSt12_Vector_baseIiSaIiEE13_M_deallocateEPim
 10617      00
 161:/usr/include/c++/6/bits/stl_vector.h **** 
 10618              		.loc 30 161 0
 10619 0041 488B45F8 		movq	-8(%rbp), %rax
 10620 0045 4889C7   		movq	%rax, %rdi
 10621 0048 E8000000 		call	_ZNSt12_Vector_baseIiSaIiEE12_Vector_implD1Ev
 10621      00
 10622              	.LBE105:
 10623 004d 90       		nop
 10624 004e C9       		leave
 10625              		.cfi_def_cfa 7, 8
 10626 004f C3       		ret
 10627              		.cfi_endproc
 10628              	.LFE13399:
 10629              		.section	.gcc_except_table
 10630              	.LLSDA13399:
 10631 01f2 FF       		.byte	0xff
 10632 01f3 FF       		.byte	0xff
 10633 01f4 01       		.byte	0x1
 10634 01f5 00       		.uleb128 .LLSDACSE13399-.LLSDACSB13399
 10635              	.LLSDACSB13399:
 10636              	.LLSDACSE13399:
 10637              		.section	.text._ZNSt12_Vector_baseIiSaIiEED2Ev,"axG",@progbits,_ZNSt12_Vector_baseIiSaIiEED5Ev,com
 10639              		.weak	_ZNSt12_Vector_baseIiSaIiEED1Ev
 10640              		.set	_ZNSt12_Vector_baseIiSaIiEED1Ev,_ZNSt12_Vector_baseIiSaIiEED2Ev
 10641              		.section	.text._ZNKSt6vectorIiSaIiEE5beginEv,"axG",@progbits,_ZNKSt6vectorIiSaIiEE5beginEv,comdat
 10642              		.align 2
 10643              		.weak	_ZNKSt6vectorIiSaIiEE5beginEv
 10645              	_ZNKSt6vectorIiSaIiEE5beginEv:
 10646              	.LFB13401:
 557:/usr/include/c++/6/bits/stl_vector.h ****       { return const_iterator(this->_M_impl._M_start); }
 10647              		.loc 30 557 0
 10648              		.cfi_startproc
 10649 0000 55       		pushq	%rbp
GAS LISTING /tmp/ccsIN87E.s 			page 471


 10650              		.cfi_def_cfa_offset 16
 10651              		.cfi_offset 6, -16
 10652 0001 4889E5   		movq	%rsp, %rbp
 10653              		.cfi_def_cfa_register 6
 10654 0004 4883EC20 		subq	$32, %rsp
 10655 0008 48897DE8 		movq	%rdi, -24(%rbp)
 558:/usr/include/c++/6/bits/stl_vector.h **** 
 10656              		.loc 30 558 0
 10657 000c 488B45E8 		movq	-24(%rbp), %rax
 10658 0010 488B00   		movq	(%rax), %rax
 10659 0013 488945F8 		movq	%rax, -8(%rbp)
 10660 0017 488D55F8 		leaq	-8(%rbp), %rdx
 10661 001b 488D45F0 		leaq	-16(%rbp), %rax
 10662 001f 4889D6   		movq	%rdx, %rsi
 10663 0022 4889C7   		movq	%rax, %rdi
 10664 0025 E8000000 		call	_ZN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEC1ERKS2_
 10664      00
 10665 002a 488B45F0 		movq	-16(%rbp), %rax
 10666 002e C9       		leave
 10667              		.cfi_def_cfa 7, 8
 10668 002f C3       		ret
 10669              		.cfi_endproc
 10670              	.LFE13401:
 10672              		.section	.text._ZNKSt6vectorIiSaIiEE3endEv,"axG",@progbits,_ZNKSt6vectorIiSaIiEE3endEv,comdat
 10673              		.align 2
 10674              		.weak	_ZNKSt6vectorIiSaIiEE3endEv
 10676              	_ZNKSt6vectorIiSaIiEE3endEv:
 10677              	.LFB13402:
 575:/usr/include/c++/6/bits/stl_vector.h ****       { return const_iterator(this->_M_impl._M_finish); }
 10678              		.loc 30 575 0
 10679              		.cfi_startproc
 10680 0000 55       		pushq	%rbp
 10681              		.cfi_def_cfa_offset 16
 10682              		.cfi_offset 6, -16
 10683 0001 4889E5   		movq	%rsp, %rbp
 10684              		.cfi_def_cfa_register 6
 10685 0004 4883EC20 		subq	$32, %rsp
 10686 0008 48897DE8 		movq	%rdi, -24(%rbp)
 576:/usr/include/c++/6/bits/stl_vector.h **** 
 10687              		.loc 30 576 0
 10688 000c 488B45E8 		movq	-24(%rbp), %rax
 10689 0010 488B4008 		movq	8(%rax), %rax
 10690 0014 488945F8 		movq	%rax, -8(%rbp)
 10691 0018 488D55F8 		leaq	-8(%rbp), %rdx
 10692 001c 488D45F0 		leaq	-16(%rbp), %rax
 10693 0020 4889D6   		movq	%rdx, %rsi
 10694 0023 4889C7   		movq	%rax, %rdi
 10695 0026 E8000000 		call	_ZN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEC1ERKS2_
 10695      00
 10696 002b 488B45F0 		movq	-16(%rbp), %rax
 10697 002f C9       		leave
 10698              		.cfi_def_cfa 7, 8
 10699 0030 C3       		ret
 10700              		.cfi_endproc
 10701              	.LFE13402:
 10703              		.section	.text._ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv,"axG",@progbits,_ZNSt12_Vector_b
 10704              		.align 2
GAS LISTING /tmp/ccsIN87E.s 			page 472


 10705              		.weak	_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv
 10707              	_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv:
 10708              	.LFB13403:
 113:/usr/include/c++/6/bits/stl_vector.h ****       { return *static_cast<_Tp_alloc_type*>(&this->_M_impl); }
 10709              		.loc 30 113 0
 10710              		.cfi_startproc
 10711 0000 55       		pushq	%rbp
 10712              		.cfi_def_cfa_offset 16
 10713              		.cfi_offset 6, -16
 10714 0001 4889E5   		movq	%rsp, %rbp
 10715              		.cfi_def_cfa_register 6
 10716 0004 48897DF8 		movq	%rdi, -8(%rbp)
 114:/usr/include/c++/6/bits/stl_vector.h **** 
 10717              		.loc 30 114 0
 10718 0008 488B45F8 		movq	-8(%rbp), %rax
 10719 000c 5D       		popq	%rbp
 10720              		.cfi_def_cfa 7, 8
 10721 000d C3       		ret
 10722              		.cfi_endproc
 10723              	.LFE13403:
 10725              		.section	.text._ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEP
 10726              		.weak	_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEPiiET0_T_S
 10728              	_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEPiiET0_T_SA_S9_RS
 10729              	.LFB13404:
 10730              		.file 39 "/usr/include/c++/6/bits/stl_uninitialized.h"
   1:/usr/include/c++/6/bits/stl_uninitialized.h **** // Raw memory manipulators -*- C++ -*-
   2:/usr/include/c++/6/bits/stl_uninitialized.h **** 
   3:/usr/include/c++/6/bits/stl_uninitialized.h **** // Copyright (C) 2001-2016 Free Software Foundation, Inc.
   4:/usr/include/c++/6/bits/stl_uninitialized.h **** //
   5:/usr/include/c++/6/bits/stl_uninitialized.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/6/bits/stl_uninitialized.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/6/bits/stl_uninitialized.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/6/bits/stl_uninitialized.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/6/bits/stl_uninitialized.h **** // any later version.
  10:/usr/include/c++/6/bits/stl_uninitialized.h **** 
  11:/usr/include/c++/6/bits/stl_uninitialized.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/6/bits/stl_uninitialized.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/6/bits/stl_uninitialized.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/6/bits/stl_uninitialized.h **** // GNU General Public License for more details.
  15:/usr/include/c++/6/bits/stl_uninitialized.h **** 
  16:/usr/include/c++/6/bits/stl_uninitialized.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/6/bits/stl_uninitialized.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/6/bits/stl_uninitialized.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/6/bits/stl_uninitialized.h **** 
  20:/usr/include/c++/6/bits/stl_uninitialized.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/6/bits/stl_uninitialized.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/6/bits/stl_uninitialized.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/6/bits/stl_uninitialized.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/6/bits/stl_uninitialized.h **** 
  25:/usr/include/c++/6/bits/stl_uninitialized.h **** /*
  26:/usr/include/c++/6/bits/stl_uninitialized.h ****  *
  27:/usr/include/c++/6/bits/stl_uninitialized.h ****  * Copyright (c) 1994
  28:/usr/include/c++/6/bits/stl_uninitialized.h ****  * Hewlett-Packard Company
  29:/usr/include/c++/6/bits/stl_uninitialized.h ****  *
  30:/usr/include/c++/6/bits/stl_uninitialized.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:/usr/include/c++/6/bits/stl_uninitialized.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:/usr/include/c++/6/bits/stl_uninitialized.h ****  * provided that the above copyright notice appear in all copies and
GAS LISTING /tmp/ccsIN87E.s 			page 473


  33:/usr/include/c++/6/bits/stl_uninitialized.h ****  * that both that copyright notice and this permission notice appear
  34:/usr/include/c++/6/bits/stl_uninitialized.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:/usr/include/c++/6/bits/stl_uninitialized.h ****  * representations about the suitability of this software for any
  36:/usr/include/c++/6/bits/stl_uninitialized.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:/usr/include/c++/6/bits/stl_uninitialized.h ****  *
  38:/usr/include/c++/6/bits/stl_uninitialized.h ****  *
  39:/usr/include/c++/6/bits/stl_uninitialized.h ****  * Copyright (c) 1996,1997
  40:/usr/include/c++/6/bits/stl_uninitialized.h ****  * Silicon Graphics Computer Systems, Inc.
  41:/usr/include/c++/6/bits/stl_uninitialized.h ****  *
  42:/usr/include/c++/6/bits/stl_uninitialized.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:/usr/include/c++/6/bits/stl_uninitialized.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:/usr/include/c++/6/bits/stl_uninitialized.h ****  * provided that the above copyright notice appear in all copies and
  45:/usr/include/c++/6/bits/stl_uninitialized.h ****  * that both that copyright notice and this permission notice appear
  46:/usr/include/c++/6/bits/stl_uninitialized.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:/usr/include/c++/6/bits/stl_uninitialized.h ****  * representations about the suitability of this software for any
  48:/usr/include/c++/6/bits/stl_uninitialized.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:/usr/include/c++/6/bits/stl_uninitialized.h ****  */
  50:/usr/include/c++/6/bits/stl_uninitialized.h **** 
  51:/usr/include/c++/6/bits/stl_uninitialized.h **** /** @file bits/stl_uninitialized.h
  52:/usr/include/c++/6/bits/stl_uninitialized.h ****  *  This is an internal header file, included by other library headers.
  53:/usr/include/c++/6/bits/stl_uninitialized.h ****  *  Do not attempt to use it directly. @headername{memory}
  54:/usr/include/c++/6/bits/stl_uninitialized.h ****  */
  55:/usr/include/c++/6/bits/stl_uninitialized.h **** 
  56:/usr/include/c++/6/bits/stl_uninitialized.h **** #ifndef _STL_UNINITIALIZED_H
  57:/usr/include/c++/6/bits/stl_uninitialized.h **** #define _STL_UNINITIALIZED_H 1
  58:/usr/include/c++/6/bits/stl_uninitialized.h **** 
  59:/usr/include/c++/6/bits/stl_uninitialized.h **** namespace std _GLIBCXX_VISIBILITY(default)
  60:/usr/include/c++/6/bits/stl_uninitialized.h **** {
  61:/usr/include/c++/6/bits/stl_uninitialized.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  62:/usr/include/c++/6/bits/stl_uninitialized.h **** 
  63:/usr/include/c++/6/bits/stl_uninitialized.h ****   template<bool _TrivialValueTypes>
  64:/usr/include/c++/6/bits/stl_uninitialized.h ****     struct __uninitialized_copy
  65:/usr/include/c++/6/bits/stl_uninitialized.h ****     {
  66:/usr/include/c++/6/bits/stl_uninitialized.h ****       template<typename _InputIterator, typename _ForwardIterator>
  67:/usr/include/c++/6/bits/stl_uninitialized.h ****         static _ForwardIterator
  68:/usr/include/c++/6/bits/stl_uninitialized.h ****         __uninit_copy(_InputIterator __first, _InputIterator __last,
  69:/usr/include/c++/6/bits/stl_uninitialized.h **** 		      _ForwardIterator __result)
  70:/usr/include/c++/6/bits/stl_uninitialized.h ****         {
  71:/usr/include/c++/6/bits/stl_uninitialized.h **** 	  _ForwardIterator __cur = __result;
  72:/usr/include/c++/6/bits/stl_uninitialized.h **** 	  __try
  73:/usr/include/c++/6/bits/stl_uninitialized.h **** 	    {
  74:/usr/include/c++/6/bits/stl_uninitialized.h **** 	      for (; __first != __last; ++__first, (void)++__cur)
  75:/usr/include/c++/6/bits/stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur), *__first);
  76:/usr/include/c++/6/bits/stl_uninitialized.h **** 	      return __cur;
  77:/usr/include/c++/6/bits/stl_uninitialized.h **** 	    }
  78:/usr/include/c++/6/bits/stl_uninitialized.h **** 	  __catch(...)
  79:/usr/include/c++/6/bits/stl_uninitialized.h **** 	    {
  80:/usr/include/c++/6/bits/stl_uninitialized.h **** 	      std::_Destroy(__result, __cur);
  81:/usr/include/c++/6/bits/stl_uninitialized.h **** 	      __throw_exception_again;
  82:/usr/include/c++/6/bits/stl_uninitialized.h **** 	    }
  83:/usr/include/c++/6/bits/stl_uninitialized.h **** 	}
  84:/usr/include/c++/6/bits/stl_uninitialized.h ****     };
  85:/usr/include/c++/6/bits/stl_uninitialized.h **** 
  86:/usr/include/c++/6/bits/stl_uninitialized.h ****   template<>
  87:/usr/include/c++/6/bits/stl_uninitialized.h ****     struct __uninitialized_copy<true>
  88:/usr/include/c++/6/bits/stl_uninitialized.h ****     {
  89:/usr/include/c++/6/bits/stl_uninitialized.h ****       template<typename _InputIterator, typename _ForwardIterator>
GAS LISTING /tmp/ccsIN87E.s 			page 474


  90:/usr/include/c++/6/bits/stl_uninitialized.h ****         static _ForwardIterator
  91:/usr/include/c++/6/bits/stl_uninitialized.h ****         __uninit_copy(_InputIterator __first, _InputIterator __last,
  92:/usr/include/c++/6/bits/stl_uninitialized.h **** 		      _ForwardIterator __result)
  93:/usr/include/c++/6/bits/stl_uninitialized.h ****         { return std::copy(__first, __last, __result); }
  94:/usr/include/c++/6/bits/stl_uninitialized.h ****     };
  95:/usr/include/c++/6/bits/stl_uninitialized.h **** 
  96:/usr/include/c++/6/bits/stl_uninitialized.h ****   /**
  97:/usr/include/c++/6/bits/stl_uninitialized.h ****    *  @brief Copies the range [first,last) into result.
  98:/usr/include/c++/6/bits/stl_uninitialized.h ****    *  @param  __first  An input iterator.
  99:/usr/include/c++/6/bits/stl_uninitialized.h ****    *  @param  __last   An input iterator.
 100:/usr/include/c++/6/bits/stl_uninitialized.h ****    *  @param  __result An output iterator.
 101:/usr/include/c++/6/bits/stl_uninitialized.h ****    *  @return   __result + (__first - __last)
 102:/usr/include/c++/6/bits/stl_uninitialized.h ****    *
 103:/usr/include/c++/6/bits/stl_uninitialized.h ****    *  Like copy(), but does not require an initialized output range.
 104:/usr/include/c++/6/bits/stl_uninitialized.h ****   */
 105:/usr/include/c++/6/bits/stl_uninitialized.h ****   template<typename _InputIterator, typename _ForwardIterator>
 106:/usr/include/c++/6/bits/stl_uninitialized.h ****     inline _ForwardIterator
 107:/usr/include/c++/6/bits/stl_uninitialized.h ****     uninitialized_copy(_InputIterator __first, _InputIterator __last,
 108:/usr/include/c++/6/bits/stl_uninitialized.h **** 		       _ForwardIterator __result)
 109:/usr/include/c++/6/bits/stl_uninitialized.h ****     {
 110:/usr/include/c++/6/bits/stl_uninitialized.h ****       typedef typename iterator_traits<_InputIterator>::value_type
 111:/usr/include/c++/6/bits/stl_uninitialized.h **** 	_ValueType1;
 112:/usr/include/c++/6/bits/stl_uninitialized.h ****       typedef typename iterator_traits<_ForwardIterator>::value_type
 113:/usr/include/c++/6/bits/stl_uninitialized.h **** 	_ValueType2;
 114:/usr/include/c++/6/bits/stl_uninitialized.h **** #if __cplusplus < 201103L
 115:/usr/include/c++/6/bits/stl_uninitialized.h ****       const bool __assignable = true;
 116:/usr/include/c++/6/bits/stl_uninitialized.h **** #else
 117:/usr/include/c++/6/bits/stl_uninitialized.h ****       // trivial types can have deleted assignment
 118:/usr/include/c++/6/bits/stl_uninitialized.h ****       typedef typename iterator_traits<_InputIterator>::reference _RefType1;
 119:/usr/include/c++/6/bits/stl_uninitialized.h ****       typedef typename iterator_traits<_ForwardIterator>::reference _RefType2;
 120:/usr/include/c++/6/bits/stl_uninitialized.h ****       const bool __assignable = is_assignable<_RefType2, _RefType1>::value;
 121:/usr/include/c++/6/bits/stl_uninitialized.h **** #endif
 122:/usr/include/c++/6/bits/stl_uninitialized.h **** 
 123:/usr/include/c++/6/bits/stl_uninitialized.h ****       return std::__uninitialized_copy<__is_trivial(_ValueType1)
 124:/usr/include/c++/6/bits/stl_uninitialized.h **** 				       && __is_trivial(_ValueType2)
 125:/usr/include/c++/6/bits/stl_uninitialized.h **** 				       && __assignable>::
 126:/usr/include/c++/6/bits/stl_uninitialized.h **** 	__uninit_copy(__first, __last, __result);
 127:/usr/include/c++/6/bits/stl_uninitialized.h ****     }
 128:/usr/include/c++/6/bits/stl_uninitialized.h **** 
 129:/usr/include/c++/6/bits/stl_uninitialized.h **** 
 130:/usr/include/c++/6/bits/stl_uninitialized.h ****   template<bool _TrivialValueType>
 131:/usr/include/c++/6/bits/stl_uninitialized.h ****     struct __uninitialized_fill
 132:/usr/include/c++/6/bits/stl_uninitialized.h ****     {
 133:/usr/include/c++/6/bits/stl_uninitialized.h ****       template<typename _ForwardIterator, typename _Tp>
 134:/usr/include/c++/6/bits/stl_uninitialized.h ****         static void
 135:/usr/include/c++/6/bits/stl_uninitialized.h ****         __uninit_fill(_ForwardIterator __first, _ForwardIterator __last,
 136:/usr/include/c++/6/bits/stl_uninitialized.h **** 		      const _Tp& __x)
 137:/usr/include/c++/6/bits/stl_uninitialized.h ****         {
 138:/usr/include/c++/6/bits/stl_uninitialized.h **** 	  _ForwardIterator __cur = __first;
 139:/usr/include/c++/6/bits/stl_uninitialized.h **** 	  __try
 140:/usr/include/c++/6/bits/stl_uninitialized.h **** 	    {
 141:/usr/include/c++/6/bits/stl_uninitialized.h **** 	      for (; __cur != __last; ++__cur)
 142:/usr/include/c++/6/bits/stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur), __x);
 143:/usr/include/c++/6/bits/stl_uninitialized.h **** 	    }
 144:/usr/include/c++/6/bits/stl_uninitialized.h **** 	  __catch(...)
 145:/usr/include/c++/6/bits/stl_uninitialized.h **** 	    {
 146:/usr/include/c++/6/bits/stl_uninitialized.h **** 	      std::_Destroy(__first, __cur);
GAS LISTING /tmp/ccsIN87E.s 			page 475


 147:/usr/include/c++/6/bits/stl_uninitialized.h **** 	      __throw_exception_again;
 148:/usr/include/c++/6/bits/stl_uninitialized.h **** 	    }
 149:/usr/include/c++/6/bits/stl_uninitialized.h **** 	}
 150:/usr/include/c++/6/bits/stl_uninitialized.h ****     };
 151:/usr/include/c++/6/bits/stl_uninitialized.h **** 
 152:/usr/include/c++/6/bits/stl_uninitialized.h ****   template<>
 153:/usr/include/c++/6/bits/stl_uninitialized.h ****     struct __uninitialized_fill<true>
 154:/usr/include/c++/6/bits/stl_uninitialized.h ****     {
 155:/usr/include/c++/6/bits/stl_uninitialized.h ****       template<typename _ForwardIterator, typename _Tp>
 156:/usr/include/c++/6/bits/stl_uninitialized.h ****         static void
 157:/usr/include/c++/6/bits/stl_uninitialized.h ****         __uninit_fill(_ForwardIterator __first, _ForwardIterator __last,
 158:/usr/include/c++/6/bits/stl_uninitialized.h **** 		      const _Tp& __x)
 159:/usr/include/c++/6/bits/stl_uninitialized.h ****         { std::fill(__first, __last, __x); }
 160:/usr/include/c++/6/bits/stl_uninitialized.h ****     };
 161:/usr/include/c++/6/bits/stl_uninitialized.h **** 
 162:/usr/include/c++/6/bits/stl_uninitialized.h ****   /**
 163:/usr/include/c++/6/bits/stl_uninitialized.h ****    *  @brief Copies the value x into the range [first,last).
 164:/usr/include/c++/6/bits/stl_uninitialized.h ****    *  @param  __first  An input iterator.
 165:/usr/include/c++/6/bits/stl_uninitialized.h ****    *  @param  __last   An input iterator.
 166:/usr/include/c++/6/bits/stl_uninitialized.h ****    *  @param  __x      The source value.
 167:/usr/include/c++/6/bits/stl_uninitialized.h ****    *  @return   Nothing.
 168:/usr/include/c++/6/bits/stl_uninitialized.h ****    *
 169:/usr/include/c++/6/bits/stl_uninitialized.h ****    *  Like fill(), but does not require an initialized output range.
 170:/usr/include/c++/6/bits/stl_uninitialized.h ****   */
 171:/usr/include/c++/6/bits/stl_uninitialized.h ****   template<typename _ForwardIterator, typename _Tp>
 172:/usr/include/c++/6/bits/stl_uninitialized.h ****     inline void
 173:/usr/include/c++/6/bits/stl_uninitialized.h ****     uninitialized_fill(_ForwardIterator __first, _ForwardIterator __last,
 174:/usr/include/c++/6/bits/stl_uninitialized.h **** 		       const _Tp& __x)
 175:/usr/include/c++/6/bits/stl_uninitialized.h ****     {
 176:/usr/include/c++/6/bits/stl_uninitialized.h ****       typedef typename iterator_traits<_ForwardIterator>::value_type
 177:/usr/include/c++/6/bits/stl_uninitialized.h **** 	_ValueType;
 178:/usr/include/c++/6/bits/stl_uninitialized.h **** #if __cplusplus < 201103L
 179:/usr/include/c++/6/bits/stl_uninitialized.h ****       const bool __assignable = true;
 180:/usr/include/c++/6/bits/stl_uninitialized.h **** #else
 181:/usr/include/c++/6/bits/stl_uninitialized.h ****       // trivial types can have deleted assignment
 182:/usr/include/c++/6/bits/stl_uninitialized.h ****       const bool __assignable = is_copy_assignable<_ValueType>::value;
 183:/usr/include/c++/6/bits/stl_uninitialized.h **** #endif
 184:/usr/include/c++/6/bits/stl_uninitialized.h **** 
 185:/usr/include/c++/6/bits/stl_uninitialized.h ****       std::__uninitialized_fill<__is_trivial(_ValueType) && __assignable>::
 186:/usr/include/c++/6/bits/stl_uninitialized.h **** 	__uninit_fill(__first, __last, __x);
 187:/usr/include/c++/6/bits/stl_uninitialized.h ****     }
 188:/usr/include/c++/6/bits/stl_uninitialized.h **** 
 189:/usr/include/c++/6/bits/stl_uninitialized.h **** 
 190:/usr/include/c++/6/bits/stl_uninitialized.h ****   template<bool _TrivialValueType>
 191:/usr/include/c++/6/bits/stl_uninitialized.h ****     struct __uninitialized_fill_n
 192:/usr/include/c++/6/bits/stl_uninitialized.h ****     {
 193:/usr/include/c++/6/bits/stl_uninitialized.h ****       template<typename _ForwardIterator, typename _Size, typename _Tp>
 194:/usr/include/c++/6/bits/stl_uninitialized.h ****         static _ForwardIterator
 195:/usr/include/c++/6/bits/stl_uninitialized.h ****         __uninit_fill_n(_ForwardIterator __first, _Size __n,
 196:/usr/include/c++/6/bits/stl_uninitialized.h **** 			const _Tp& __x)
 197:/usr/include/c++/6/bits/stl_uninitialized.h ****         {
 198:/usr/include/c++/6/bits/stl_uninitialized.h **** 	  _ForwardIterator __cur = __first;
 199:/usr/include/c++/6/bits/stl_uninitialized.h **** 	  __try
 200:/usr/include/c++/6/bits/stl_uninitialized.h **** 	    {
 201:/usr/include/c++/6/bits/stl_uninitialized.h **** 	      for (; __n > 0; --__n, ++__cur)
 202:/usr/include/c++/6/bits/stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur), __x);
 203:/usr/include/c++/6/bits/stl_uninitialized.h **** 	      return __cur;
GAS LISTING /tmp/ccsIN87E.s 			page 476


 204:/usr/include/c++/6/bits/stl_uninitialized.h **** 	    }
 205:/usr/include/c++/6/bits/stl_uninitialized.h **** 	  __catch(...)
 206:/usr/include/c++/6/bits/stl_uninitialized.h **** 	    {
 207:/usr/include/c++/6/bits/stl_uninitialized.h **** 	      std::_Destroy(__first, __cur);
 208:/usr/include/c++/6/bits/stl_uninitialized.h **** 	      __throw_exception_again;
 209:/usr/include/c++/6/bits/stl_uninitialized.h **** 	    }
 210:/usr/include/c++/6/bits/stl_uninitialized.h **** 	}
 211:/usr/include/c++/6/bits/stl_uninitialized.h ****     };
 212:/usr/include/c++/6/bits/stl_uninitialized.h **** 
 213:/usr/include/c++/6/bits/stl_uninitialized.h ****   template<>
 214:/usr/include/c++/6/bits/stl_uninitialized.h ****     struct __uninitialized_fill_n<true>
 215:/usr/include/c++/6/bits/stl_uninitialized.h ****     {
 216:/usr/include/c++/6/bits/stl_uninitialized.h ****       template<typename _ForwardIterator, typename _Size, typename _Tp>
 217:/usr/include/c++/6/bits/stl_uninitialized.h ****         static _ForwardIterator
 218:/usr/include/c++/6/bits/stl_uninitialized.h ****         __uninit_fill_n(_ForwardIterator __first, _Size __n,
 219:/usr/include/c++/6/bits/stl_uninitialized.h **** 			const _Tp& __x)
 220:/usr/include/c++/6/bits/stl_uninitialized.h ****         { return std::fill_n(__first, __n, __x); }
 221:/usr/include/c++/6/bits/stl_uninitialized.h ****     };
 222:/usr/include/c++/6/bits/stl_uninitialized.h **** 
 223:/usr/include/c++/6/bits/stl_uninitialized.h ****    // _GLIBCXX_RESOLVE_LIB_DEFECTS
 224:/usr/include/c++/6/bits/stl_uninitialized.h ****    // DR 1339. uninitialized_fill_n should return the end of its range
 225:/usr/include/c++/6/bits/stl_uninitialized.h ****   /**
 226:/usr/include/c++/6/bits/stl_uninitialized.h ****    *  @brief Copies the value x into the range [first,first+n).
 227:/usr/include/c++/6/bits/stl_uninitialized.h ****    *  @param  __first  An input iterator.
 228:/usr/include/c++/6/bits/stl_uninitialized.h ****    *  @param  __n      The number of copies to make.
 229:/usr/include/c++/6/bits/stl_uninitialized.h ****    *  @param  __x      The source value.
 230:/usr/include/c++/6/bits/stl_uninitialized.h ****    *  @return   Nothing.
 231:/usr/include/c++/6/bits/stl_uninitialized.h ****    *
 232:/usr/include/c++/6/bits/stl_uninitialized.h ****    *  Like fill_n(), but does not require an initialized output range.
 233:/usr/include/c++/6/bits/stl_uninitialized.h ****   */
 234:/usr/include/c++/6/bits/stl_uninitialized.h ****   template<typename _ForwardIterator, typename _Size, typename _Tp>
 235:/usr/include/c++/6/bits/stl_uninitialized.h ****     inline _ForwardIterator
 236:/usr/include/c++/6/bits/stl_uninitialized.h ****     uninitialized_fill_n(_ForwardIterator __first, _Size __n, const _Tp& __x)
 237:/usr/include/c++/6/bits/stl_uninitialized.h ****     {
 238:/usr/include/c++/6/bits/stl_uninitialized.h ****       typedef typename iterator_traits<_ForwardIterator>::value_type
 239:/usr/include/c++/6/bits/stl_uninitialized.h **** 	_ValueType;
 240:/usr/include/c++/6/bits/stl_uninitialized.h **** #if __cplusplus < 201103L
 241:/usr/include/c++/6/bits/stl_uninitialized.h ****       const bool __assignable = true;
 242:/usr/include/c++/6/bits/stl_uninitialized.h **** #else
 243:/usr/include/c++/6/bits/stl_uninitialized.h ****       // trivial types can have deleted assignment
 244:/usr/include/c++/6/bits/stl_uninitialized.h ****       const bool __assignable = is_copy_assignable<_ValueType>::value;
 245:/usr/include/c++/6/bits/stl_uninitialized.h **** #endif
 246:/usr/include/c++/6/bits/stl_uninitialized.h ****       return __uninitialized_fill_n<__is_trivial(_ValueType) && __assignable>::
 247:/usr/include/c++/6/bits/stl_uninitialized.h **** 	__uninit_fill_n(__first, __n, __x);
 248:/usr/include/c++/6/bits/stl_uninitialized.h ****     }
 249:/usr/include/c++/6/bits/stl_uninitialized.h **** 
 250:/usr/include/c++/6/bits/stl_uninitialized.h ****   // Extensions: versions of uninitialized_copy, uninitialized_fill,
 251:/usr/include/c++/6/bits/stl_uninitialized.h ****   //  and uninitialized_fill_n that take an allocator parameter.
 252:/usr/include/c++/6/bits/stl_uninitialized.h ****   //  We dispatch back to the standard versions when we're given the
 253:/usr/include/c++/6/bits/stl_uninitialized.h ****   //  default allocator.  For nondefault allocators we do not use 
 254:/usr/include/c++/6/bits/stl_uninitialized.h ****   //  any of the POD optimizations.
 255:/usr/include/c++/6/bits/stl_uninitialized.h **** 
 256:/usr/include/c++/6/bits/stl_uninitialized.h ****   template<typename _InputIterator, typename _ForwardIterator,
 257:/usr/include/c++/6/bits/stl_uninitialized.h **** 	   typename _Allocator>
 258:/usr/include/c++/6/bits/stl_uninitialized.h ****     _ForwardIterator
 259:/usr/include/c++/6/bits/stl_uninitialized.h ****     __uninitialized_copy_a(_InputIterator __first, _InputIterator __last,
 260:/usr/include/c++/6/bits/stl_uninitialized.h **** 			   _ForwardIterator __result, _Allocator& __alloc)
GAS LISTING /tmp/ccsIN87E.s 			page 477


 261:/usr/include/c++/6/bits/stl_uninitialized.h ****     {
 262:/usr/include/c++/6/bits/stl_uninitialized.h ****       _ForwardIterator __cur = __result;
 263:/usr/include/c++/6/bits/stl_uninitialized.h ****       __try
 264:/usr/include/c++/6/bits/stl_uninitialized.h **** 	{
 265:/usr/include/c++/6/bits/stl_uninitialized.h **** 	  typedef __gnu_cxx::__alloc_traits<_Allocator> __traits;
 266:/usr/include/c++/6/bits/stl_uninitialized.h **** 	  for (; __first != __last; ++__first, (void)++__cur)
 267:/usr/include/c++/6/bits/stl_uninitialized.h **** 	    __traits::construct(__alloc, std::__addressof(*__cur), *__first);
 268:/usr/include/c++/6/bits/stl_uninitialized.h **** 	  return __cur;
 269:/usr/include/c++/6/bits/stl_uninitialized.h **** 	}
 270:/usr/include/c++/6/bits/stl_uninitialized.h ****       __catch(...)
 271:/usr/include/c++/6/bits/stl_uninitialized.h **** 	{
 272:/usr/include/c++/6/bits/stl_uninitialized.h **** 	  std::_Destroy(__result, __cur, __alloc);
 273:/usr/include/c++/6/bits/stl_uninitialized.h **** 	  __throw_exception_again;
 274:/usr/include/c++/6/bits/stl_uninitialized.h **** 	}
 275:/usr/include/c++/6/bits/stl_uninitialized.h ****     }
 276:/usr/include/c++/6/bits/stl_uninitialized.h **** 
 277:/usr/include/c++/6/bits/stl_uninitialized.h ****   template<typename _InputIterator, typename _ForwardIterator, typename _Tp>
 278:/usr/include/c++/6/bits/stl_uninitialized.h ****     inline _ForwardIterator
 279:/usr/include/c++/6/bits/stl_uninitialized.h ****     __uninitialized_copy_a(_InputIterator __first, _InputIterator __last,
 10731              		.loc 39 279 0
 10732              		.cfi_startproc
 10733 0000 55       		pushq	%rbp
 10734              		.cfi_def_cfa_offset 16
 10735              		.cfi_offset 6, -16
 10736 0001 4889E5   		movq	%rsp, %rbp
 10737              		.cfi_def_cfa_register 6
 10738 0004 4883EC20 		subq	$32, %rsp
 10739 0008 48897DF8 		movq	%rdi, -8(%rbp)
 10740 000c 488975F0 		movq	%rsi, -16(%rbp)
 10741 0010 488955E8 		movq	%rdx, -24(%rbp)
 10742 0014 48894DE0 		movq	%rcx, -32(%rbp)
 280:/usr/include/c++/6/bits/stl_uninitialized.h **** 			   _ForwardIterator __result, allocator<_Tp>&)
 281:/usr/include/c++/6/bits/stl_uninitialized.h ****     { return std::uninitialized_copy(__first, __last, __result); }
 10743              		.loc 39 281 0
 10744 0018 488B55E8 		movq	-24(%rbp), %rdx
 10745 001c 488B4DF0 		movq	-16(%rbp), %rcx
 10746 0020 488B45F8 		movq	-8(%rbp), %rax
 10747 0024 4889CE   		movq	%rcx, %rsi
 10748 0027 4889C7   		movq	%rax, %rdi
 10749 002a E8000000 		call	_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEPiET0_T_SA_S9_
 10749      00
 10750 002f C9       		leave
 10751              		.cfi_def_cfa 7, 8
 10752 0030 C3       		ret
 10753              		.cfi_endproc
 10754              	.LFE13404:
 10756              		.section	.text._ZNK5boost10shared_ptrIN2gr11basic_blockEE3getEv,"axG",@progbits,_ZNK5boost10shared
 10757              		.align 2
 10758              		.weak	_ZNK5boost10shared_ptrIN2gr11basic_blockEE3getEv
 10760              	_ZNK5boost10shared_ptrIN2gr11basic_blockEE3getEv:
 10761              	.LFB13410:
 631:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 632:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     shared_ptr & operator=( shared_ptr && r ) BOOST_NOEXCEPT
 633:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     {
 634:/usr/include/boost/smart_ptr/shared_ptr.hpp ****         this_type( static_cast< shared_ptr && >( r ) ).swap( *this );
 635:/usr/include/boost/smart_ptr/shared_ptr.hpp ****         return *this;
 636:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     }
GAS LISTING /tmp/ccsIN87E.s 			page 478


 637:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 638:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     template<class Y>
 639:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     shared_ptr & operator=( shared_ptr<Y> && r ) BOOST_NOEXCEPT
 640:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     {
 641:/usr/include/boost/smart_ptr/shared_ptr.hpp ****         this_type( static_cast< shared_ptr<Y> && >( r ) ).swap( *this );
 642:/usr/include/boost/smart_ptr/shared_ptr.hpp ****         return *this;
 643:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     }
 644:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 645:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     // aliasing move
 646:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     template<class Y>
 647:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     shared_ptr( shared_ptr<Y> && r, element_type * p ) BOOST_NOEXCEPT : px( p ), pn()
 648:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     {
 649:/usr/include/boost/smart_ptr/shared_ptr.hpp ****         pn.swap( r.pn );
 650:/usr/include/boost/smart_ptr/shared_ptr.hpp ****         r.px = 0;
 651:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     }
 652:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 653:/usr/include/boost/smart_ptr/shared_ptr.hpp **** #endif
 654:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 655:/usr/include/boost/smart_ptr/shared_ptr.hpp **** #if !defined( BOOST_NO_CXX11_NULLPTR )
 656:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 657:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     shared_ptr & operator=( boost::detail::sp_nullptr_t ) BOOST_NOEXCEPT // never throws
 658:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     {
 659:/usr/include/boost/smart_ptr/shared_ptr.hpp ****         this_type().swap(*this);
 660:/usr/include/boost/smart_ptr/shared_ptr.hpp ****         return *this;
 661:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     }
 662:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 663:/usr/include/boost/smart_ptr/shared_ptr.hpp **** #endif
 664:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 665:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     void reset() BOOST_NOEXCEPT // never throws in 1.30+
 666:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     {
 667:/usr/include/boost/smart_ptr/shared_ptr.hpp ****         this_type().swap(*this);
 668:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     }
 669:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 670:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     template<class Y> void reset( Y * p ) // Y must be complete
 671:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     {
 672:/usr/include/boost/smart_ptr/shared_ptr.hpp ****         BOOST_ASSERT( p == 0 || p != px ); // catch self-reset errors
 673:/usr/include/boost/smart_ptr/shared_ptr.hpp ****         this_type( p ).swap( *this );
 674:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     }
 675:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 676:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     template<class Y, class D> void reset( Y * p, D d )
 677:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     {
 678:/usr/include/boost/smart_ptr/shared_ptr.hpp ****         this_type( p, d ).swap( *this );
 679:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     }
 680:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 681:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     template<class Y, class D, class A> void reset( Y * p, D d, A a )
 682:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     {
 683:/usr/include/boost/smart_ptr/shared_ptr.hpp ****         this_type( p, d, a ).swap( *this );
 684:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     }
 685:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 686:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     template<class Y> void reset( shared_ptr<Y> const & r, element_type * p )
 687:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     {
 688:/usr/include/boost/smart_ptr/shared_ptr.hpp ****         this_type( r, p ).swap( *this );
 689:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     }
 690:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 691:/usr/include/boost/smart_ptr/shared_ptr.hpp **** #if !defined( BOOST_NO_CXX11_RVALUE_REFERENCES )
 692:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 693:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     template<class Y> void reset( shared_ptr<Y> && r, element_type * p )
GAS LISTING /tmp/ccsIN87E.s 			page 479


 694:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     {
 695:/usr/include/boost/smart_ptr/shared_ptr.hpp ****         this_type( static_cast< shared_ptr<Y> && >( r ), p ).swap( *this );
 696:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     }
 697:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 698:/usr/include/boost/smart_ptr/shared_ptr.hpp **** #endif
 699:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 700:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     // never throws (but has a BOOST_ASSERT in it, so not marked with BOOST_NOEXCEPT)
 701:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     typename boost::detail::sp_dereference< T >::type operator* () const
 702:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     {
 703:/usr/include/boost/smart_ptr/shared_ptr.hpp ****         BOOST_ASSERT( px != 0 );
 704:/usr/include/boost/smart_ptr/shared_ptr.hpp ****         return *px;
 705:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     }
 706:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     
 707:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     // never throws (but has a BOOST_ASSERT in it, so not marked with BOOST_NOEXCEPT)
 708:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     typename boost::detail::sp_member_access< T >::type operator-> () const 
 709:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     {
 710:/usr/include/boost/smart_ptr/shared_ptr.hpp ****         BOOST_ASSERT( px != 0 );
 711:/usr/include/boost/smart_ptr/shared_ptr.hpp ****         return px;
 712:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     }
 713:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     
 714:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     // never throws (but has a BOOST_ASSERT in it, so not marked with BOOST_NOEXCEPT)
 715:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     typename boost::detail::sp_array_access< T >::type operator[] ( std::ptrdiff_t i ) const
 716:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     {
 717:/usr/include/boost/smart_ptr/shared_ptr.hpp ****         BOOST_ASSERT( px != 0 );
 718:/usr/include/boost/smart_ptr/shared_ptr.hpp ****         BOOST_ASSERT( i >= 0 && ( i < boost::detail::sp_extent< T >::value || boost::detail::sp_ext
 719:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 720:/usr/include/boost/smart_ptr/shared_ptr.hpp ****         return static_cast< typename boost::detail::sp_array_access< T >::type >( px[ i ] );
 721:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     }
 722:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 723:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     element_type * get() const BOOST_NOEXCEPT
 10762              		.loc 7 723 0
 10763              		.cfi_startproc
 10764 0000 55       		pushq	%rbp
 10765              		.cfi_def_cfa_offset 16
 10766              		.cfi_offset 6, -16
 10767 0001 4889E5   		movq	%rsp, %rbp
 10768              		.cfi_def_cfa_register 6
 10769 0004 48897DF8 		movq	%rdi, -8(%rbp)
 724:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     {
 725:/usr/include/boost/smart_ptr/shared_ptr.hpp ****         return px;
 10770              		.loc 7 725 0
 10771 0008 488B45F8 		movq	-8(%rbp), %rax
 10772 000c 488B00   		movq	(%rax), %rax
 726:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     }
 10773              		.loc 7 726 0
 10774 000f 5D       		popq	%rbp
 10775              		.cfi_def_cfa 7, 8
 10776 0010 C3       		ret
 10777              		.cfi_endproc
 10778              	.LFE13410:
 10780              		.section	.text._ZN5boost20dynamic_pointer_castIN2gr5lfast12costas2_implENS1_11basic_blockEEENS_10s
 10781              		.weak	_ZN5boost20dynamic_pointer_castIN2gr5lfast12costas2_implENS1_11basic_blockEEENS_10shared_ptr
 10783              	_ZN5boost20dynamic_pointer_castIN2gr5lfast12costas2_implENS1_11basic_blockEEENS_10shared_ptrIT_EERK
 10784              	.LFB13417:
 727:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 728:/usr/include/boost/smart_ptr/shared_ptr.hpp **** // implicit conversion to "bool"
 729:/usr/include/boost/smart_ptr/shared_ptr.hpp **** #include <boost/smart_ptr/detail/operator_bool.hpp>
GAS LISTING /tmp/ccsIN87E.s 			page 480


 730:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 731:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     bool unique() const BOOST_NOEXCEPT
 732:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     {
 733:/usr/include/boost/smart_ptr/shared_ptr.hpp ****         return pn.unique();
 734:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     }
 735:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 736:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     long use_count() const BOOST_NOEXCEPT
 737:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     {
 738:/usr/include/boost/smart_ptr/shared_ptr.hpp ****         return pn.use_count();
 739:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     }
 740:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 741:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     void swap( shared_ptr & other ) BOOST_NOEXCEPT
 742:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     {
 743:/usr/include/boost/smart_ptr/shared_ptr.hpp ****         std::swap(px, other.px);
 744:/usr/include/boost/smart_ptr/shared_ptr.hpp ****         pn.swap(other.pn);
 745:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     }
 746:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 747:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     template<class Y> bool owner_before( shared_ptr<Y> const & rhs ) const BOOST_NOEXCEPT
 748:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     {
 749:/usr/include/boost/smart_ptr/shared_ptr.hpp ****         return pn < rhs.pn;
 750:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     }
 751:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 752:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     template<class Y> bool owner_before( weak_ptr<Y> const & rhs ) const BOOST_NOEXCEPT
 753:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     {
 754:/usr/include/boost/smart_ptr/shared_ptr.hpp ****         return pn < rhs.pn;
 755:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     }
 756:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 757:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     void * _internal_get_deleter( boost::detail::sp_typeinfo const & ti ) const BOOST_NOEXCEPT
 758:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     {
 759:/usr/include/boost/smart_ptr/shared_ptr.hpp ****         return pn.get_deleter( ti );
 760:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     }
 761:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 762:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     void * _internal_get_untyped_deleter() const BOOST_NOEXCEPT
 763:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     {
 764:/usr/include/boost/smart_ptr/shared_ptr.hpp ****         return pn.get_untyped_deleter();
 765:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     }
 766:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 767:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     bool _internal_equiv( shared_ptr const & r ) const BOOST_NOEXCEPT
 768:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     {
 769:/usr/include/boost/smart_ptr/shared_ptr.hpp ****         return px == r.px && pn == r.pn;
 770:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     }
 771:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 772:/usr/include/boost/smart_ptr/shared_ptr.hpp **** // Tasteless as this may seem, making all members public allows member templates
 773:/usr/include/boost/smart_ptr/shared_ptr.hpp **** // to work in the absence of member template friends. (Matthew Langston)
 774:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 775:/usr/include/boost/smart_ptr/shared_ptr.hpp **** #ifndef BOOST_NO_MEMBER_TEMPLATE_FRIENDS
 776:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 777:/usr/include/boost/smart_ptr/shared_ptr.hpp **** private:
 778:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 779:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     template<class Y> friend class shared_ptr;
 780:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     template<class Y> friend class weak_ptr;
 781:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 782:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 783:/usr/include/boost/smart_ptr/shared_ptr.hpp **** #endif
 784:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 785:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     element_type * px;                 // contained pointer
 786:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     boost::detail::shared_count pn;    // reference counter
GAS LISTING /tmp/ccsIN87E.s 			page 481


 787:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 788:/usr/include/boost/smart_ptr/shared_ptr.hpp **** };  // shared_ptr
 789:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 790:/usr/include/boost/smart_ptr/shared_ptr.hpp **** template<class T, class U> inline bool operator==(shared_ptr<T> const & a, shared_ptr<U> const & b)
 791:/usr/include/boost/smart_ptr/shared_ptr.hpp **** {
 792:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     return a.get() == b.get();
 793:/usr/include/boost/smart_ptr/shared_ptr.hpp **** }
 794:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 795:/usr/include/boost/smart_ptr/shared_ptr.hpp **** template<class T, class U> inline bool operator!=(shared_ptr<T> const & a, shared_ptr<U> const & b)
 796:/usr/include/boost/smart_ptr/shared_ptr.hpp **** {
 797:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     return a.get() != b.get();
 798:/usr/include/boost/smart_ptr/shared_ptr.hpp **** }
 799:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 800:/usr/include/boost/smart_ptr/shared_ptr.hpp **** #if __GNUC__ == 2 && __GNUC_MINOR__ <= 96
 801:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 802:/usr/include/boost/smart_ptr/shared_ptr.hpp **** // Resolve the ambiguity between our op!= and the one in rel_ops
 803:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 804:/usr/include/boost/smart_ptr/shared_ptr.hpp **** template<class T> inline bool operator!=(shared_ptr<T> const & a, shared_ptr<T> const & b) BOOST_NO
 805:/usr/include/boost/smart_ptr/shared_ptr.hpp **** {
 806:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     return a.get() != b.get();
 807:/usr/include/boost/smart_ptr/shared_ptr.hpp **** }
 808:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 809:/usr/include/boost/smart_ptr/shared_ptr.hpp **** #endif
 810:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 811:/usr/include/boost/smart_ptr/shared_ptr.hpp **** #if !defined( BOOST_NO_CXX11_NULLPTR )
 812:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 813:/usr/include/boost/smart_ptr/shared_ptr.hpp **** template<class T> inline bool operator==( shared_ptr<T> const & p, boost::detail::sp_nullptr_t ) BO
 814:/usr/include/boost/smart_ptr/shared_ptr.hpp **** {
 815:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     return p.get() == 0;
 816:/usr/include/boost/smart_ptr/shared_ptr.hpp **** }
 817:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 818:/usr/include/boost/smart_ptr/shared_ptr.hpp **** template<class T> inline bool operator==( boost::detail::sp_nullptr_t, shared_ptr<T> const & p ) BO
 819:/usr/include/boost/smart_ptr/shared_ptr.hpp **** {
 820:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     return p.get() == 0;
 821:/usr/include/boost/smart_ptr/shared_ptr.hpp **** }
 822:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 823:/usr/include/boost/smart_ptr/shared_ptr.hpp **** template<class T> inline bool operator!=( shared_ptr<T> const & p, boost::detail::sp_nullptr_t ) BO
 824:/usr/include/boost/smart_ptr/shared_ptr.hpp **** {
 825:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     return p.get() != 0;
 826:/usr/include/boost/smart_ptr/shared_ptr.hpp **** }
 827:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 828:/usr/include/boost/smart_ptr/shared_ptr.hpp **** template<class T> inline bool operator!=( boost::detail::sp_nullptr_t, shared_ptr<T> const & p ) BO
 829:/usr/include/boost/smart_ptr/shared_ptr.hpp **** {
 830:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     return p.get() != 0;
 831:/usr/include/boost/smart_ptr/shared_ptr.hpp **** }
 832:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 833:/usr/include/boost/smart_ptr/shared_ptr.hpp **** #endif
 834:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 835:/usr/include/boost/smart_ptr/shared_ptr.hpp **** template<class T, class U> inline bool operator<(shared_ptr<T> const & a, shared_ptr<U> const & b) 
 836:/usr/include/boost/smart_ptr/shared_ptr.hpp **** {
 837:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     return a.owner_before( b );
 838:/usr/include/boost/smart_ptr/shared_ptr.hpp **** }
 839:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 840:/usr/include/boost/smart_ptr/shared_ptr.hpp **** template<class T> inline void swap(shared_ptr<T> & a, shared_ptr<T> & b) BOOST_NOEXCEPT
 841:/usr/include/boost/smart_ptr/shared_ptr.hpp **** {
 842:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     a.swap(b);
 843:/usr/include/boost/smart_ptr/shared_ptr.hpp **** }
GAS LISTING /tmp/ccsIN87E.s 			page 482


 844:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 845:/usr/include/boost/smart_ptr/shared_ptr.hpp **** template<class T, class U> shared_ptr<T> static_pointer_cast( shared_ptr<U> const & r ) BOOST_NOEXC
 846:/usr/include/boost/smart_ptr/shared_ptr.hpp **** {
 847:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     (void) static_cast< T* >( static_cast< U* >( 0 ) );
 848:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 849:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     typedef typename shared_ptr<T>::element_type E;
 850:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 851:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     E * p = static_cast< E* >( r.get() );
 852:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     return shared_ptr<T>( r, p );
 853:/usr/include/boost/smart_ptr/shared_ptr.hpp **** }
 854:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 855:/usr/include/boost/smart_ptr/shared_ptr.hpp **** template<class T, class U> shared_ptr<T> const_pointer_cast( shared_ptr<U> const & r ) BOOST_NOEXCE
 856:/usr/include/boost/smart_ptr/shared_ptr.hpp **** {
 857:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     (void) const_cast< T* >( static_cast< U* >( 0 ) );
 858:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 859:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     typedef typename shared_ptr<T>::element_type E;
 860:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 861:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     E * p = const_cast< E* >( r.get() );
 862:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     return shared_ptr<T>( r, p );
 863:/usr/include/boost/smart_ptr/shared_ptr.hpp **** }
 864:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 865:/usr/include/boost/smart_ptr/shared_ptr.hpp **** template<class T, class U> shared_ptr<T> dynamic_pointer_cast( shared_ptr<U> const & r ) BOOST_NOEX
 10785              		.loc 7 865 0
 10786              		.cfi_startproc
 10787 0000 55       		pushq	%rbp
 10788              		.cfi_def_cfa_offset 16
 10789              		.cfi_offset 6, -16
 10790 0001 4889E5   		movq	%rsp, %rbp
 10791              		.cfi_def_cfa_register 6
 10792 0004 4883EC20 		subq	$32, %rsp
 10793 0008 48897DE8 		movq	%rdi, -24(%rbp)
 10794 000c 488975E0 		movq	%rsi, -32(%rbp)
 866:/usr/include/boost/smart_ptr/shared_ptr.hpp **** {
 867:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     (void) dynamic_cast< T* >( static_cast< U* >( 0 ) );
 868:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 869:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     typedef typename shared_ptr<T>::element_type E;
 870:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 871:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     E * p = dynamic_cast< E* >( r.get() );
 10795              		.loc 7 871 0
 10796 0010 488B45E0 		movq	-32(%rbp), %rax
 10797 0014 4889C7   		movq	%rax, %rdi
 10798 0017 E8000000 		call	_ZNK5boost10shared_ptrIN2gr11basic_blockEE3getEv
 10798      00
 10799 001c 4885C0   		testq	%rax, %rax
 10800 001f 741F     		je	.L519
 10801              		.loc 7 871 0 is_stmt 0 discriminator 1
 10802 0021 48C7C1FF 		movq	$-1, %rcx
 10802      FFFFFF
 10803 0028 488D1500 		leaq	_ZTIN2gr5lfast12costas2_implE(%rip), %rdx
 10803      000000
 10804 002f 488D3500 		leaq	_ZTIN2gr11basic_blockE(%rip), %rsi
 10804      000000
 10805 0036 4889C7   		movq	%rax, %rdi
 10806 0039 E8000000 		call	__dynamic_cast@PLT
 10806      00
 10807 003e EB05     		jmp	.L520
 10808              	.L519:
GAS LISTING /tmp/ccsIN87E.s 			page 483


 10809              		.loc 7 871 0 discriminator 2
 10810 0040 B8000000 		movl	$0, %eax
 10810      00
 10811              	.L520:
 10812              		.loc 7 871 0 discriminator 4
 10813 0045 488945F8 		movq	%rax, -8(%rbp)
 872:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     return p? shared_ptr<T>( r, p ): shared_ptr<T>();
 10814              		.loc 7 872 0 is_stmt 1 discriminator 4
 10815 0049 48837DF8 		cmpq	$0, -8(%rbp)
 10815      00
 10816 004e 7419     		je	.L521
 10817              		.loc 7 872 0 is_stmt 0 discriminator 1
 10818 0050 488B55F8 		movq	-8(%rbp), %rdx
 10819 0054 488B4DE0 		movq	-32(%rbp), %rcx
 10820 0058 488B45E8 		movq	-24(%rbp), %rax
 10821 005c 4889CE   		movq	%rcx, %rsi
 10822 005f 4889C7   		movq	%rax, %rdi
 10823 0062 E8000000 		call	_ZN5boost10shared_ptrIN2gr5lfast12costas2_implEEC1INS1_11basic_blockEEERKNS0_IT_EEPS3_
 10823      00
 10824 0067 EB0C     		jmp	.L518
 10825              	.L521:
 10826              		.loc 7 872 0 discriminator 2
 10827 0069 488B45E8 		movq	-24(%rbp), %rax
 10828 006d 4889C7   		movq	%rax, %rdi
 10829 0070 E8000000 		call	_ZN5boost10shared_ptrIN2gr5lfast12costas2_implEEC1Ev
 10829      00
 10830              	.L518:
 873:/usr/include/boost/smart_ptr/shared_ptr.hpp **** }
 10831              		.loc 7 873 0 is_stmt 1
 10832 0075 488B45E8 		movq	-24(%rbp), %rax
 10833 0079 C9       		leave
 10834              		.cfi_def_cfa 7, 8
 10835 007a C3       		ret
 10836              		.cfi_endproc
 10837              	.LFE13417:
 10839              		.section	.text._ZN5boost6detail21sp_assert_convertibleIN2gr5lfast12costas2_implENS3_7costas2EEEvv,
 10840              		.weak	_ZN5boost6detail21sp_assert_convertibleIN2gr5lfast12costas2_implENS3_7costas2EEEvv
 10842              	_ZN5boost6detail21sp_assert_convertibleIN2gr5lfast12costas2_implENS3_7costas2EEEvv:
 10843              	.LFB13421:
 264:/usr/include/boost/smart_ptr/shared_ptr.hpp **** {
 10844              		.loc 7 264 0
 10845              		.cfi_startproc
 10846 0000 55       		pushq	%rbp
 10847              		.cfi_def_cfa_offset 16
 10848              		.cfi_offset 6, -16
 10849 0001 4889E5   		movq	%rsp, %rbp
 10850              		.cfi_def_cfa_register 6
 278:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 10851              		.loc 7 278 0
 10852 0004 90       		nop
 10853 0005 5D       		popq	%rbp
 10854              		.cfi_def_cfa 7, 8
 10855 0006 C3       		ret
 10856              		.cfi_endproc
 10857              	.LFE13421:
 10859              		.section	.text._ZNSt12_Vector_baseIN2gr5tag_tESaIS1_EE12_Vector_implD2Ev,"axG",@progbits,_ZNSt12_V
 10860              		.align 2
GAS LISTING /tmp/ccsIN87E.s 			page 484


 10861              		.weak	_ZNSt12_Vector_baseIN2gr5tag_tESaIS1_EE12_Vector_implD2Ev
 10863              	_ZNSt12_Vector_baseIN2gr5tag_tESaIS1_EE12_Vector_implD2Ev:
 10864              	.LFB13424:
  79:/usr/include/c++/6/bits/stl_vector.h ****       : public _Tp_alloc_type
 10865              		.loc 30 79 0
 10866              		.cfi_startproc
 10867 0000 55       		pushq	%rbp
 10868              		.cfi_def_cfa_offset 16
 10869              		.cfi_offset 6, -16
 10870 0001 4889E5   		movq	%rsp, %rbp
 10871              		.cfi_def_cfa_register 6
 10872 0004 4883EC10 		subq	$16, %rsp
 10873 0008 48897DF8 		movq	%rdi, -8(%rbp)
 10874              	.LBB106:
  79:/usr/include/c++/6/bits/stl_vector.h ****       : public _Tp_alloc_type
 10875              		.loc 30 79 0
 10876 000c 488B45F8 		movq	-8(%rbp), %rax
 10877 0010 4889C7   		movq	%rax, %rdi
 10878 0013 E8000000 		call	_ZNSaIN2gr5tag_tEED2Ev
 10878      00
 10879              	.LBE106:
 10880 0018 90       		nop
 10881 0019 C9       		leave
 10882              		.cfi_def_cfa 7, 8
 10883 001a C3       		ret
 10884              		.cfi_endproc
 10885              	.LFE13424:
 10887              		.weak	_ZNSt12_Vector_baseIN2gr5tag_tESaIS1_EE12_Vector_implD1Ev
 10888              		.set	_ZNSt12_Vector_baseIN2gr5tag_tESaIS1_EE12_Vector_implD1Ev,_ZNSt12_Vector_baseIN2gr5tag_tESaIS
 10889              		.section	.text._ZNSt12_Vector_baseIN2gr5tag_tESaIS1_EEC2Ev,"axG",@progbits,_ZNSt12_Vector_baseIN2g
 10890              		.align 2
 10891              		.weak	_ZNSt12_Vector_baseIN2gr5tag_tESaIS1_EEC2Ev
 10893              	_ZNSt12_Vector_baseIN2gr5tag_tESaIS1_EEC2Ev:
 10894              	.LFB13426:
 124:/usr/include/c++/6/bits/stl_vector.h ****       : _M_impl() { }
 10895              		.loc 30 124 0
 10896              		.cfi_startproc
 10897 0000 55       		pushq	%rbp
 10898              		.cfi_def_cfa_offset 16
 10899              		.cfi_offset 6, -16
 10900 0001 4889E5   		movq	%rsp, %rbp
 10901              		.cfi_def_cfa_register 6
 10902 0004 4883EC10 		subq	$16, %rsp
 10903 0008 48897DF8 		movq	%rdi, -8(%rbp)
 10904              	.LBB107:
 125:/usr/include/c++/6/bits/stl_vector.h **** 
 10905              		.loc 30 125 0
 10906 000c 488B45F8 		movq	-8(%rbp), %rax
 10907 0010 4889C7   		movq	%rax, %rdi
 10908 0013 E8000000 		call	_ZNSt12_Vector_baseIN2gr5tag_tESaIS1_EE12_Vector_implC1Ev
 10908      00
 10909              	.LBE107:
 10910 0018 90       		nop
 10911 0019 C9       		leave
 10912              		.cfi_def_cfa 7, 8
 10913 001a C3       		ret
 10914              		.cfi_endproc
GAS LISTING /tmp/ccsIN87E.s 			page 485


 10915              	.LFE13426:
 10917              		.weak	_ZNSt12_Vector_baseIN2gr5tag_tESaIS1_EEC1Ev
 10918              		.set	_ZNSt12_Vector_baseIN2gr5tag_tESaIS1_EEC1Ev,_ZNSt12_Vector_baseIN2gr5tag_tESaIS1_EEC2Ev
 10919              		.section	.text._ZNSt12_Vector_baseIN2gr5tag_tESaIS1_EED2Ev,"axG",@progbits,_ZNSt12_Vector_baseIN2g
 10920              		.align 2
 10921              		.weak	_ZNSt12_Vector_baseIN2gr5tag_tESaIS1_EED2Ev
 10923              	_ZNSt12_Vector_baseIN2gr5tag_tESaIS1_EED2Ev:
 10924              	.LFB13429:
 159:/usr/include/c++/6/bits/stl_vector.h ****       { _M_deallocate(this->_M_impl._M_start, this->_M_impl._M_end_of_storage
 10925              		.loc 30 159 0
 10926              		.cfi_startproc
 10927              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 10928              		.cfi_lsda 0x1b,.LLSDA13429
 10929 0000 55       		pushq	%rbp
 10930              		.cfi_def_cfa_offset 16
 10931              		.cfi_offset 6, -16
 10932 0001 4889E5   		movq	%rsp, %rbp
 10933              		.cfi_def_cfa_register 6
 10934 0004 4883EC10 		subq	$16, %rsp
 10935 0008 48897DF8 		movq	%rdi, -8(%rbp)
 10936              	.LBB108:
 160:/usr/include/c++/6/bits/stl_vector.h **** 		      - this->_M_impl._M_start); }
 10937              		.loc 30 160 0
 10938 000c 488B45F8 		movq	-8(%rbp), %rax
 10939 0010 488B4010 		movq	16(%rax), %rax
 161:/usr/include/c++/6/bits/stl_vector.h **** 
 10940              		.loc 30 161 0
 10941 0014 4889C2   		movq	%rax, %rdx
 10942 0017 488B45F8 		movq	-8(%rbp), %rax
 10943 001b 488B00   		movq	(%rax), %rax
 10944 001e 4829C2   		subq	%rax, %rdx
 10945 0021 4889D0   		movq	%rdx, %rax
 160:/usr/include/c++/6/bits/stl_vector.h **** 		      - this->_M_impl._M_start); }
 10946              		.loc 30 160 0
 10947 0024 48C1F803 		sarq	$3, %rax
 10948 0028 4889C2   		movq	%rax, %rdx
 10949 002b 48B8B76D 		movabsq	$7905747460161236407, %rax
 10949      DBB66DDB 
 10949      B66D
 10950 0035 480FAFC2 		imulq	%rdx, %rax
 10951 0039 4889C2   		movq	%rax, %rdx
 10952 003c 488B45F8 		movq	-8(%rbp), %rax
 10953 0040 488B08   		movq	(%rax), %rcx
 10954 0043 488B45F8 		movq	-8(%rbp), %rax
 10955 0047 4889CE   		movq	%rcx, %rsi
 10956 004a 4889C7   		movq	%rax, %rdi
 10957 004d E8000000 		call	_ZNSt12_Vector_baseIN2gr5tag_tESaIS1_EE13_M_deallocateEPS1_m
 10957      00
 161:/usr/include/c++/6/bits/stl_vector.h **** 
 10958              		.loc 30 161 0
 10959 0052 488B45F8 		movq	-8(%rbp), %rax
 10960 0056 4889C7   		movq	%rax, %rdi
 10961 0059 E8000000 		call	_ZNSt12_Vector_baseIN2gr5tag_tESaIS1_EE12_Vector_implD1Ev
 10961      00
 10962              	.LBE108:
 10963 005e 90       		nop
 10964 005f C9       		leave
GAS LISTING /tmp/ccsIN87E.s 			page 486


 10965              		.cfi_def_cfa 7, 8
 10966 0060 C3       		ret
 10967              		.cfi_endproc
 10968              	.LFE13429:
 10969              		.section	.gcc_except_table
 10970              	.LLSDA13429:
 10971 01f6 FF       		.byte	0xff
 10972 01f7 FF       		.byte	0xff
 10973 01f8 01       		.byte	0x1
 10974 01f9 00       		.uleb128 .LLSDACSE13429-.LLSDACSB13429
 10975              	.LLSDACSB13429:
 10976              	.LLSDACSE13429:
 10977              		.section	.text._ZNSt12_Vector_baseIN2gr5tag_tESaIS1_EED2Ev,"axG",@progbits,_ZNSt12_Vector_baseIN2g
 10979              		.weak	_ZNSt12_Vector_baseIN2gr5tag_tESaIS1_EED1Ev
 10980              		.set	_ZNSt12_Vector_baseIN2gr5tag_tESaIS1_EED1Ev,_ZNSt12_Vector_baseIN2gr5tag_tESaIS1_EED2Ev
 10981              		.section	.text._ZNSt12_Vector_baseIN2gr5tag_tESaIS1_EE19_M_get_Tp_allocatorEv,"axG",@progbits,_ZNS
 10982              		.align 2
 10983              		.weak	_ZNSt12_Vector_baseIN2gr5tag_tESaIS1_EE19_M_get_Tp_allocatorEv
 10985              	_ZNSt12_Vector_baseIN2gr5tag_tESaIS1_EE19_M_get_Tp_allocatorEv:
 10986              	.LFB13431:
 113:/usr/include/c++/6/bits/stl_vector.h ****       { return *static_cast<_Tp_alloc_type*>(&this->_M_impl); }
 10987              		.loc 30 113 0
 10988              		.cfi_startproc
 10989 0000 55       		pushq	%rbp
 10990              		.cfi_def_cfa_offset 16
 10991              		.cfi_offset 6, -16
 10992 0001 4889E5   		movq	%rsp, %rbp
 10993              		.cfi_def_cfa_register 6
 10994 0004 48897DF8 		movq	%rdi, -8(%rbp)
 114:/usr/include/c++/6/bits/stl_vector.h **** 
 10995              		.loc 30 114 0
 10996 0008 488B45F8 		movq	-8(%rbp), %rax
 10997 000c 5D       		popq	%rbp
 10998              		.cfi_def_cfa 7, 8
 10999 000d C3       		ret
 11000              		.cfi_endproc
 11001              	.LFE13431:
 11003              		.section	.text._ZSt8_DestroyIPN2gr5tag_tES1_EvT_S3_RSaIT0_E,"axG",@progbits,_ZSt8_DestroyIPN2gr5ta
 11004              		.weak	_ZSt8_DestroyIPN2gr5tag_tES1_EvT_S3_RSaIT0_E
 11006              	_ZSt8_DestroyIPN2gr5tag_tES1_EvT_S3_RSaIT0_E:
 11007              	.LFB13432:
 148:/usr/include/c++/6/bits/stl_construct.h **** 	     allocator<_Tp>&)
 11008              		.loc 35 148 0
 11009              		.cfi_startproc
 11010 0000 55       		pushq	%rbp
 11011              		.cfi_def_cfa_offset 16
 11012              		.cfi_offset 6, -16
 11013 0001 4889E5   		movq	%rsp, %rbp
 11014              		.cfi_def_cfa_register 6
 11015 0004 4883EC20 		subq	$32, %rsp
 11016 0008 48897DF8 		movq	%rdi, -8(%rbp)
 11017 000c 488975F0 		movq	%rsi, -16(%rbp)
 11018 0010 488955E8 		movq	%rdx, -24(%rbp)
 151:/usr/include/c++/6/bits/stl_construct.h ****     }
 11019              		.loc 35 151 0
 11020 0014 488B55F0 		movq	-16(%rbp), %rdx
 11021 0018 488B45F8 		movq	-8(%rbp), %rax
GAS LISTING /tmp/ccsIN87E.s 			page 487


 11022 001c 4889D6   		movq	%rdx, %rsi
 11023 001f 4889C7   		movq	%rax, %rdi
 11024 0022 E8000000 		call	_ZSt8_DestroyIPN2gr5tag_tEEvT_S3_
 11024      00
 11025              		.loc 35 152 0
 11026 0027 90       		nop
 11027 0028 C9       		leave
 11028              		.cfi_def_cfa 7, 8
 11029 0029 C3       		ret
 11030              		.cfi_endproc
 11031              	.LFE13432:
 11033              		.section	.text._ZN9__gnu_cxx17__normal_iteratorIPN2gr5tag_tESt6vectorIS2_SaIS2_EEEC2ERKS3_,"axG",@
 11034              		.align 2
 11035              		.weak	_ZN9__gnu_cxx17__normal_iteratorIPN2gr5tag_tESt6vectorIS2_SaIS2_EEEC2ERKS3_
 11037              	_ZN9__gnu_cxx17__normal_iteratorIPN2gr5tag_tESt6vectorIS2_SaIS2_EEEC2ERKS3_:
 11038              	.LFB13434:
 776:/usr/include/c++/6/bits/stl_iterator.h ****       : _M_current(__i) { }
 11039              		.loc 32 776 0
 11040              		.cfi_startproc
 11041 0000 55       		pushq	%rbp
 11042              		.cfi_def_cfa_offset 16
 11043              		.cfi_offset 6, -16
 11044 0001 4889E5   		movq	%rsp, %rbp
 11045              		.cfi_def_cfa_register 6
 11046 0004 48897DF8 		movq	%rdi, -8(%rbp)
 11047 0008 488975F0 		movq	%rsi, -16(%rbp)
 11048              	.LBB109:
 777:/usr/include/c++/6/bits/stl_iterator.h **** 
 11049              		.loc 32 777 0
 11050 000c 488B45F0 		movq	-16(%rbp), %rax
 11051 0010 488B10   		movq	(%rax), %rdx
 11052 0013 488B45F8 		movq	-8(%rbp), %rax
 11053 0017 488910   		movq	%rdx, (%rax)
 11054              	.LBE109:
 11055 001a 90       		nop
 11056 001b 5D       		popq	%rbp
 11057              		.cfi_def_cfa 7, 8
 11058 001c C3       		ret
 11059              		.cfi_endproc
 11060              	.LFE13434:
 11062              		.weak	_ZN9__gnu_cxx17__normal_iteratorIPN2gr5tag_tESt6vectorIS2_SaIS2_EEEC1ERKS3_
 11063              		.set	_ZN9__gnu_cxx17__normal_iteratorIPN2gr5tag_tESt6vectorIS2_SaIS2_EEEC1ERKS3_,_ZN9__gnu_cxx17__
 11064              		.section	.text._ZNK9__gnu_cxx17__normal_iteratorIPN2gr5tag_tESt6vectorIS2_SaIS2_EEE4baseEv,"axG",@
 11065              		.align 2
 11066              		.weak	_ZNK9__gnu_cxx17__normal_iteratorIPN2gr5tag_tESt6vectorIS2_SaIS2_EEE4baseEv
 11068              	_ZNK9__gnu_cxx17__normal_iteratorIPN2gr5tag_tESt6vectorIS2_SaIS2_EEE4baseEv:
 11069              	.LFB13436:
 786:/usr/include/c++/6/bits/stl_iterator.h **** 
 787:/usr/include/c++/6/bits/stl_iterator.h ****       // Forward iterator requirements
 788:/usr/include/c++/6/bits/stl_iterator.h ****       reference
 789:/usr/include/c++/6/bits/stl_iterator.h ****       operator*() const _GLIBCXX_NOEXCEPT
 790:/usr/include/c++/6/bits/stl_iterator.h ****       { return *_M_current; }
 791:/usr/include/c++/6/bits/stl_iterator.h **** 
 792:/usr/include/c++/6/bits/stl_iterator.h ****       pointer
 793:/usr/include/c++/6/bits/stl_iterator.h ****       operator->() const _GLIBCXX_NOEXCEPT
 794:/usr/include/c++/6/bits/stl_iterator.h ****       { return _M_current; }
 795:/usr/include/c++/6/bits/stl_iterator.h **** 
GAS LISTING /tmp/ccsIN87E.s 			page 488


 796:/usr/include/c++/6/bits/stl_iterator.h ****       __normal_iterator&
 797:/usr/include/c++/6/bits/stl_iterator.h ****       operator++() _GLIBCXX_NOEXCEPT
 798:/usr/include/c++/6/bits/stl_iterator.h ****       {
 799:/usr/include/c++/6/bits/stl_iterator.h **** 	++_M_current;
 800:/usr/include/c++/6/bits/stl_iterator.h **** 	return *this;
 801:/usr/include/c++/6/bits/stl_iterator.h ****       }
 802:/usr/include/c++/6/bits/stl_iterator.h **** 
 803:/usr/include/c++/6/bits/stl_iterator.h ****       __normal_iterator
 804:/usr/include/c++/6/bits/stl_iterator.h ****       operator++(int) _GLIBCXX_NOEXCEPT
 805:/usr/include/c++/6/bits/stl_iterator.h ****       { return __normal_iterator(_M_current++); }
 806:/usr/include/c++/6/bits/stl_iterator.h **** 
 807:/usr/include/c++/6/bits/stl_iterator.h ****       // Bidirectional iterator requirements
 808:/usr/include/c++/6/bits/stl_iterator.h ****       __normal_iterator&
 809:/usr/include/c++/6/bits/stl_iterator.h ****       operator--() _GLIBCXX_NOEXCEPT
 810:/usr/include/c++/6/bits/stl_iterator.h ****       {
 811:/usr/include/c++/6/bits/stl_iterator.h **** 	--_M_current;
 812:/usr/include/c++/6/bits/stl_iterator.h **** 	return *this;
 813:/usr/include/c++/6/bits/stl_iterator.h ****       }
 814:/usr/include/c++/6/bits/stl_iterator.h **** 
 815:/usr/include/c++/6/bits/stl_iterator.h ****       __normal_iterator
 816:/usr/include/c++/6/bits/stl_iterator.h ****       operator--(int) _GLIBCXX_NOEXCEPT
 817:/usr/include/c++/6/bits/stl_iterator.h ****       { return __normal_iterator(_M_current--); }
 818:/usr/include/c++/6/bits/stl_iterator.h **** 
 819:/usr/include/c++/6/bits/stl_iterator.h ****       // Random access iterator requirements
 820:/usr/include/c++/6/bits/stl_iterator.h ****       reference
 821:/usr/include/c++/6/bits/stl_iterator.h ****       operator[](difference_type __n) const _GLIBCXX_NOEXCEPT
 822:/usr/include/c++/6/bits/stl_iterator.h ****       { return _M_current[__n]; }
 823:/usr/include/c++/6/bits/stl_iterator.h **** 
 824:/usr/include/c++/6/bits/stl_iterator.h ****       __normal_iterator&
 825:/usr/include/c++/6/bits/stl_iterator.h ****       operator+=(difference_type __n) _GLIBCXX_NOEXCEPT
 826:/usr/include/c++/6/bits/stl_iterator.h ****       { _M_current += __n; return *this; }
 827:/usr/include/c++/6/bits/stl_iterator.h **** 
 828:/usr/include/c++/6/bits/stl_iterator.h ****       __normal_iterator
 829:/usr/include/c++/6/bits/stl_iterator.h ****       operator+(difference_type __n) const _GLIBCXX_NOEXCEPT
 830:/usr/include/c++/6/bits/stl_iterator.h ****       { return __normal_iterator(_M_current + __n); }
 831:/usr/include/c++/6/bits/stl_iterator.h **** 
 832:/usr/include/c++/6/bits/stl_iterator.h ****       __normal_iterator&
 833:/usr/include/c++/6/bits/stl_iterator.h ****       operator-=(difference_type __n) _GLIBCXX_NOEXCEPT
 834:/usr/include/c++/6/bits/stl_iterator.h ****       { _M_current -= __n; return *this; }
 835:/usr/include/c++/6/bits/stl_iterator.h **** 
 836:/usr/include/c++/6/bits/stl_iterator.h ****       __normal_iterator
 837:/usr/include/c++/6/bits/stl_iterator.h ****       operator-(difference_type __n) const _GLIBCXX_NOEXCEPT
 838:/usr/include/c++/6/bits/stl_iterator.h ****       { return __normal_iterator(_M_current - __n); }
 839:/usr/include/c++/6/bits/stl_iterator.h **** 
 840:/usr/include/c++/6/bits/stl_iterator.h ****       const _Iterator&
 841:/usr/include/c++/6/bits/stl_iterator.h ****       base() const _GLIBCXX_NOEXCEPT
 11070              		.loc 32 841 0
 11071              		.cfi_startproc
 11072 0000 55       		pushq	%rbp
 11073              		.cfi_def_cfa_offset 16
 11074              		.cfi_offset 6, -16
 11075 0001 4889E5   		movq	%rsp, %rbp
 11076              		.cfi_def_cfa_register 6
 11077 0004 48897DF8 		movq	%rdi, -8(%rbp)
 842:/usr/include/c++/6/bits/stl_iterator.h ****       { return _M_current; }
 11078              		.loc 32 842 0
 11079 0008 488B45F8 		movq	-8(%rbp), %rax
GAS LISTING /tmp/ccsIN87E.s 			page 489


 11080 000c 5D       		popq	%rbp
 11081              		.cfi_def_cfa 7, 8
 11082 000d C3       		ret
 11083              		.cfi_endproc
 11084              	.LFE13436:
 11086              		.section	.text._ZNKSt6vectorIN2gr5tag_tESaIS1_EE6cbeginEv,"axG",@progbits,_ZNKSt6vectorIN2gr5tag_t
 11087              		.align 2
 11088              		.weak	_ZNKSt6vectorIN2gr5tag_tESaIS1_EE6cbeginEv
 11090              	_ZNKSt6vectorIN2gr5tag_tESaIS1_EE6cbeginEv:
 11091              	.LFB13437:
 621:/usr/include/c++/6/bits/stl_vector.h ****       { return const_iterator(this->_M_impl._M_start); }
 11092              		.loc 30 621 0
 11093              		.cfi_startproc
 11094 0000 55       		pushq	%rbp
 11095              		.cfi_def_cfa_offset 16
 11096              		.cfi_offset 6, -16
 11097 0001 4889E5   		movq	%rsp, %rbp
 11098              		.cfi_def_cfa_register 6
 11099 0004 4883EC20 		subq	$32, %rsp
 11100 0008 48897DE8 		movq	%rdi, -24(%rbp)
 622:/usr/include/c++/6/bits/stl_vector.h **** 
 11101              		.loc 30 622 0
 11102 000c 488B45E8 		movq	-24(%rbp), %rax
 11103 0010 488B00   		movq	(%rax), %rax
 11104 0013 488945F8 		movq	%rax, -8(%rbp)
 11105 0017 488D55F8 		leaq	-8(%rbp), %rdx
 11106 001b 488D45F0 		leaq	-16(%rbp), %rax
 11107 001f 4889D6   		movq	%rdx, %rsi
 11108 0022 4889C7   		movq	%rax, %rdi
 11109 0025 E8000000 		call	_ZN9__gnu_cxx17__normal_iteratorIPKN2gr5tag_tESt6vectorIS2_SaIS2_EEEC1ERKS4_
 11109      00
 11110 002a 488B45F0 		movq	-16(%rbp), %rax
 11111 002e C9       		leave
 11112              		.cfi_def_cfa 7, 8
 11113 002f C3       		ret
 11114              		.cfi_endproc
 11115              	.LFE13437:
 11117              		.section	.text._ZN9__gnu_cxxmiIPKN2gr5tag_tESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15
 11118              		.weak	_ZN9__gnu_cxxmiIPKN2gr5tag_tESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15differenc
 11120              	_ZN9__gnu_cxxmiIPKN2gr5tag_tESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeE
 11121              	.LFB13438:
 843:/usr/include/c++/6/bits/stl_iterator.h ****     };
 844:/usr/include/c++/6/bits/stl_iterator.h **** 
 845:/usr/include/c++/6/bits/stl_iterator.h ****   // Note: In what follows, the left- and right-hand-side iterators are
 846:/usr/include/c++/6/bits/stl_iterator.h ****   // allowed to vary in types (conceptually in cv-qualification) so that
 847:/usr/include/c++/6/bits/stl_iterator.h ****   // comparison between cv-qualified and non-cv-qualified iterators be
 848:/usr/include/c++/6/bits/stl_iterator.h ****   // valid.  However, the greedy and unfriendly operators in std::rel_ops
 849:/usr/include/c++/6/bits/stl_iterator.h ****   // will make overload resolution ambiguous (when in scope) if we don't
 850:/usr/include/c++/6/bits/stl_iterator.h ****   // provide overloads whose operands are of the same type.  Can someone
 851:/usr/include/c++/6/bits/stl_iterator.h ****   // remind me what generic programming is about? -- Gaby
 852:/usr/include/c++/6/bits/stl_iterator.h **** 
 853:/usr/include/c++/6/bits/stl_iterator.h ****   // Forward iterator requirements
 854:/usr/include/c++/6/bits/stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR, typename _Container>
 855:/usr/include/c++/6/bits/stl_iterator.h ****     inline bool
 856:/usr/include/c++/6/bits/stl_iterator.h ****     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,
 857:/usr/include/c++/6/bits/stl_iterator.h **** 	       const __normal_iterator<_IteratorR, _Container>& __rhs)
 858:/usr/include/c++/6/bits/stl_iterator.h ****     _GLIBCXX_NOEXCEPT
GAS LISTING /tmp/ccsIN87E.s 			page 490


 859:/usr/include/c++/6/bits/stl_iterator.h ****     { return __lhs.base() == __rhs.base(); }
 860:/usr/include/c++/6/bits/stl_iterator.h **** 
 861:/usr/include/c++/6/bits/stl_iterator.h ****   template<typename _Iterator, typename _Container>
 862:/usr/include/c++/6/bits/stl_iterator.h ****     inline bool
 863:/usr/include/c++/6/bits/stl_iterator.h ****     operator==(const __normal_iterator<_Iterator, _Container>& __lhs,
 864:/usr/include/c++/6/bits/stl_iterator.h **** 	       const __normal_iterator<_Iterator, _Container>& __rhs)
 865:/usr/include/c++/6/bits/stl_iterator.h ****     _GLIBCXX_NOEXCEPT
 866:/usr/include/c++/6/bits/stl_iterator.h ****     { return __lhs.base() == __rhs.base(); }
 867:/usr/include/c++/6/bits/stl_iterator.h **** 
 868:/usr/include/c++/6/bits/stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR, typename _Container>
 869:/usr/include/c++/6/bits/stl_iterator.h ****     inline bool
 870:/usr/include/c++/6/bits/stl_iterator.h ****     operator!=(const __normal_iterator<_IteratorL, _Container>& __lhs,
 871:/usr/include/c++/6/bits/stl_iterator.h **** 	       const __normal_iterator<_IteratorR, _Container>& __rhs)
 872:/usr/include/c++/6/bits/stl_iterator.h ****     _GLIBCXX_NOEXCEPT
 873:/usr/include/c++/6/bits/stl_iterator.h ****     { return __lhs.base() != __rhs.base(); }
 874:/usr/include/c++/6/bits/stl_iterator.h **** 
 875:/usr/include/c++/6/bits/stl_iterator.h ****   template<typename _Iterator, typename _Container>
 876:/usr/include/c++/6/bits/stl_iterator.h ****     inline bool
 877:/usr/include/c++/6/bits/stl_iterator.h ****     operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
 878:/usr/include/c++/6/bits/stl_iterator.h **** 	       const __normal_iterator<_Iterator, _Container>& __rhs)
 879:/usr/include/c++/6/bits/stl_iterator.h ****     _GLIBCXX_NOEXCEPT
 880:/usr/include/c++/6/bits/stl_iterator.h ****     { return __lhs.base() != __rhs.base(); }
 881:/usr/include/c++/6/bits/stl_iterator.h **** 
 882:/usr/include/c++/6/bits/stl_iterator.h ****   // Random access iterator requirements
 883:/usr/include/c++/6/bits/stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR, typename _Container>
 884:/usr/include/c++/6/bits/stl_iterator.h ****     inline bool
 885:/usr/include/c++/6/bits/stl_iterator.h ****     operator<(const __normal_iterator<_IteratorL, _Container>& __lhs,
 886:/usr/include/c++/6/bits/stl_iterator.h **** 	      const __normal_iterator<_IteratorR, _Container>& __rhs)
 887:/usr/include/c++/6/bits/stl_iterator.h ****     _GLIBCXX_NOEXCEPT
 888:/usr/include/c++/6/bits/stl_iterator.h ****     { return __lhs.base() < __rhs.base(); }
 889:/usr/include/c++/6/bits/stl_iterator.h **** 
 890:/usr/include/c++/6/bits/stl_iterator.h ****   template<typename _Iterator, typename _Container>
 891:/usr/include/c++/6/bits/stl_iterator.h ****     inline bool
 892:/usr/include/c++/6/bits/stl_iterator.h ****     operator<(const __normal_iterator<_Iterator, _Container>& __lhs,
 893:/usr/include/c++/6/bits/stl_iterator.h **** 	      const __normal_iterator<_Iterator, _Container>& __rhs)
 894:/usr/include/c++/6/bits/stl_iterator.h ****     _GLIBCXX_NOEXCEPT
 895:/usr/include/c++/6/bits/stl_iterator.h ****     { return __lhs.base() < __rhs.base(); }
 896:/usr/include/c++/6/bits/stl_iterator.h **** 
 897:/usr/include/c++/6/bits/stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR, typename _Container>
 898:/usr/include/c++/6/bits/stl_iterator.h ****     inline bool
 899:/usr/include/c++/6/bits/stl_iterator.h ****     operator>(const __normal_iterator<_IteratorL, _Container>& __lhs,
 900:/usr/include/c++/6/bits/stl_iterator.h **** 	      const __normal_iterator<_IteratorR, _Container>& __rhs)
 901:/usr/include/c++/6/bits/stl_iterator.h ****     _GLIBCXX_NOEXCEPT
 902:/usr/include/c++/6/bits/stl_iterator.h ****     { return __lhs.base() > __rhs.base(); }
 903:/usr/include/c++/6/bits/stl_iterator.h **** 
 904:/usr/include/c++/6/bits/stl_iterator.h ****   template<typename _Iterator, typename _Container>
 905:/usr/include/c++/6/bits/stl_iterator.h ****     inline bool
 906:/usr/include/c++/6/bits/stl_iterator.h ****     operator>(const __normal_iterator<_Iterator, _Container>& __lhs,
 907:/usr/include/c++/6/bits/stl_iterator.h **** 	      const __normal_iterator<_Iterator, _Container>& __rhs)
 908:/usr/include/c++/6/bits/stl_iterator.h ****     _GLIBCXX_NOEXCEPT
 909:/usr/include/c++/6/bits/stl_iterator.h ****     { return __lhs.base() > __rhs.base(); }
 910:/usr/include/c++/6/bits/stl_iterator.h **** 
 911:/usr/include/c++/6/bits/stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR, typename _Container>
 912:/usr/include/c++/6/bits/stl_iterator.h ****     inline bool
 913:/usr/include/c++/6/bits/stl_iterator.h ****     operator<=(const __normal_iterator<_IteratorL, _Container>& __lhs,
 914:/usr/include/c++/6/bits/stl_iterator.h **** 	       const __normal_iterator<_IteratorR, _Container>& __rhs)
 915:/usr/include/c++/6/bits/stl_iterator.h ****     _GLIBCXX_NOEXCEPT
GAS LISTING /tmp/ccsIN87E.s 			page 491


 916:/usr/include/c++/6/bits/stl_iterator.h ****     { return __lhs.base() <= __rhs.base(); }
 917:/usr/include/c++/6/bits/stl_iterator.h **** 
 918:/usr/include/c++/6/bits/stl_iterator.h ****   template<typename _Iterator, typename _Container>
 919:/usr/include/c++/6/bits/stl_iterator.h ****     inline bool
 920:/usr/include/c++/6/bits/stl_iterator.h ****     operator<=(const __normal_iterator<_Iterator, _Container>& __lhs,
 921:/usr/include/c++/6/bits/stl_iterator.h **** 	       const __normal_iterator<_Iterator, _Container>& __rhs)
 922:/usr/include/c++/6/bits/stl_iterator.h ****     _GLIBCXX_NOEXCEPT
 923:/usr/include/c++/6/bits/stl_iterator.h ****     { return __lhs.base() <= __rhs.base(); }
 924:/usr/include/c++/6/bits/stl_iterator.h **** 
 925:/usr/include/c++/6/bits/stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR, typename _Container>
 926:/usr/include/c++/6/bits/stl_iterator.h ****     inline bool
 927:/usr/include/c++/6/bits/stl_iterator.h ****     operator>=(const __normal_iterator<_IteratorL, _Container>& __lhs,
 928:/usr/include/c++/6/bits/stl_iterator.h **** 	       const __normal_iterator<_IteratorR, _Container>& __rhs)
 929:/usr/include/c++/6/bits/stl_iterator.h ****     _GLIBCXX_NOEXCEPT
 930:/usr/include/c++/6/bits/stl_iterator.h ****     { return __lhs.base() >= __rhs.base(); }
 931:/usr/include/c++/6/bits/stl_iterator.h **** 
 932:/usr/include/c++/6/bits/stl_iterator.h ****   template<typename _Iterator, typename _Container>
 933:/usr/include/c++/6/bits/stl_iterator.h ****     inline bool
 934:/usr/include/c++/6/bits/stl_iterator.h ****     operator>=(const __normal_iterator<_Iterator, _Container>& __lhs,
 935:/usr/include/c++/6/bits/stl_iterator.h **** 	       const __normal_iterator<_Iterator, _Container>& __rhs)
 936:/usr/include/c++/6/bits/stl_iterator.h ****     _GLIBCXX_NOEXCEPT
 937:/usr/include/c++/6/bits/stl_iterator.h ****     { return __lhs.base() >= __rhs.base(); }
 938:/usr/include/c++/6/bits/stl_iterator.h **** 
 939:/usr/include/c++/6/bits/stl_iterator.h ****   // _GLIBCXX_RESOLVE_LIB_DEFECTS
 940:/usr/include/c++/6/bits/stl_iterator.h ****   // According to the resolution of DR179 not only the various comparison
 941:/usr/include/c++/6/bits/stl_iterator.h ****   // operators but also operator- must accept mixed iterator/const_iterator
 942:/usr/include/c++/6/bits/stl_iterator.h ****   // parameters.
 943:/usr/include/c++/6/bits/stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR, typename _Container>
 944:/usr/include/c++/6/bits/stl_iterator.h **** #if __cplusplus >= 201103L
 945:/usr/include/c++/6/bits/stl_iterator.h ****     // DR 685.
 946:/usr/include/c++/6/bits/stl_iterator.h ****     inline auto
 947:/usr/include/c++/6/bits/stl_iterator.h ****     operator-(const __normal_iterator<_IteratorL, _Container>& __lhs,
 948:/usr/include/c++/6/bits/stl_iterator.h **** 	      const __normal_iterator<_IteratorR, _Container>& __rhs) noexcept
 949:/usr/include/c++/6/bits/stl_iterator.h ****     -> decltype(__lhs.base() - __rhs.base())
 950:/usr/include/c++/6/bits/stl_iterator.h **** #else
 951:/usr/include/c++/6/bits/stl_iterator.h ****     inline typename __normal_iterator<_IteratorL, _Container>::difference_type
 952:/usr/include/c++/6/bits/stl_iterator.h ****     operator-(const __normal_iterator<_IteratorL, _Container>& __lhs,
 953:/usr/include/c++/6/bits/stl_iterator.h **** 	      const __normal_iterator<_IteratorR, _Container>& __rhs)
 954:/usr/include/c++/6/bits/stl_iterator.h **** #endif
 955:/usr/include/c++/6/bits/stl_iterator.h ****     { return __lhs.base() - __rhs.base(); }
 956:/usr/include/c++/6/bits/stl_iterator.h **** 
 957:/usr/include/c++/6/bits/stl_iterator.h ****   template<typename _Iterator, typename _Container>
 958:/usr/include/c++/6/bits/stl_iterator.h ****     inline typename __normal_iterator<_Iterator, _Container>::difference_type
 959:/usr/include/c++/6/bits/stl_iterator.h ****     operator-(const __normal_iterator<_Iterator, _Container>& __lhs,
 11122              		.loc 32 959 0
 11123              		.cfi_startproc
 11124 0000 55       		pushq	%rbp
 11125              		.cfi_def_cfa_offset 16
 11126              		.cfi_offset 6, -16
 11127 0001 4889E5   		movq	%rsp, %rbp
 11128              		.cfi_def_cfa_register 6
 11129 0004 53       		pushq	%rbx
 11130 0005 4883EC18 		subq	$24, %rsp
 11131              		.cfi_offset 3, -24
 11132 0009 48897DE8 		movq	%rdi, -24(%rbp)
 11133 000d 488975E0 		movq	%rsi, -32(%rbp)
 960:/usr/include/c++/6/bits/stl_iterator.h **** 	      const __normal_iterator<_Iterator, _Container>& __rhs)
GAS LISTING /tmp/ccsIN87E.s 			page 492


 961:/usr/include/c++/6/bits/stl_iterator.h ****     _GLIBCXX_NOEXCEPT
 962:/usr/include/c++/6/bits/stl_iterator.h ****     { return __lhs.base() - __rhs.base(); }
 11134              		.loc 32 962 0
 11135 0011 488B45E8 		movq	-24(%rbp), %rax
 11136 0015 4889C7   		movq	%rax, %rdi
 11137 0018 E8000000 		call	_ZNK9__gnu_cxx17__normal_iteratorIPKN2gr5tag_tESt6vectorIS2_SaIS2_EEE4baseEv
 11137      00
 11138 001d 488B00   		movq	(%rax), %rax
 11139 0020 4889C3   		movq	%rax, %rbx
 11140 0023 488B45E0 		movq	-32(%rbp), %rax
 11141 0027 4889C7   		movq	%rax, %rdi
 11142 002a E8000000 		call	_ZNK9__gnu_cxx17__normal_iteratorIPKN2gr5tag_tESt6vectorIS2_SaIS2_EEE4baseEv
 11142      00
 11143 002f 488B00   		movq	(%rax), %rax
 11144 0032 4829C3   		subq	%rax, %rbx
 11145 0035 4889D8   		movq	%rbx, %rax
 11146 0038 48C1F803 		sarq	$3, %rax
 11147 003c 4889C2   		movq	%rax, %rdx
 11148 003f 48B8B76D 		movabsq	$7905747460161236407, %rax
 11148      DBB66DDB 
 11148      B66D
 11149 0049 480FAFC2 		imulq	%rdx, %rax
 11150 004d 4883C418 		addq	$24, %rsp
 11151 0051 5B       		popq	%rbx
 11152 0052 5D       		popq	%rbp
 11153              		.cfi_def_cfa 7, 8
 11154 0053 C3       		ret
 11155              		.cfi_endproc
 11156              	.LFE13438:
 11158              		.section	.text._ZNK9__gnu_cxx17__normal_iteratorIPN2gr5tag_tESt6vectorIS2_SaIS2_EEEplEl,"axG",@pro
 11159              		.align 2
 11160              		.weak	_ZNK9__gnu_cxx17__normal_iteratorIPN2gr5tag_tESt6vectorIS2_SaIS2_EEEplEl
 11162              	_ZNK9__gnu_cxx17__normal_iteratorIPN2gr5tag_tESt6vectorIS2_SaIS2_EEEplEl:
 11163              	.LFB13439:
 829:/usr/include/c++/6/bits/stl_iterator.h ****       { return __normal_iterator(_M_current + __n); }
 11164              		.loc 32 829 0
 11165              		.cfi_startproc
 11166 0000 55       		pushq	%rbp
 11167              		.cfi_def_cfa_offset 16
 11168              		.cfi_offset 6, -16
 11169 0001 4889E5   		movq	%rsp, %rbp
 11170              		.cfi_def_cfa_register 6
 11171 0004 4883EC20 		subq	$32, %rsp
 11172 0008 48897DE8 		movq	%rdi, -24(%rbp)
 11173 000c 488975E0 		movq	%rsi, -32(%rbp)
 830:/usr/include/c++/6/bits/stl_iterator.h **** 
 11174              		.loc 32 830 0
 11175 0010 488B45E8 		movq	-24(%rbp), %rax
 11176 0014 488B08   		movq	(%rax), %rcx
 11177 0017 488B55E0 		movq	-32(%rbp), %rdx
 11178 001b 4889D0   		movq	%rdx, %rax
 11179 001e 48C1E003 		salq	$3, %rax
 11180 0022 4829D0   		subq	%rdx, %rax
 11181 0025 48C1E003 		salq	$3, %rax
 11182 0029 4801C8   		addq	%rcx, %rax
 11183 002c 488945F8 		movq	%rax, -8(%rbp)
 11184 0030 488D55F8 		leaq	-8(%rbp), %rdx
GAS LISTING /tmp/ccsIN87E.s 			page 493


 11185 0034 488D45F0 		leaq	-16(%rbp), %rax
 11186 0038 4889D6   		movq	%rdx, %rsi
 11187 003b 4889C7   		movq	%rax, %rdi
 11188 003e E8000000 		call	_ZN9__gnu_cxx17__normal_iteratorIPN2gr5tag_tESt6vectorIS2_SaIS2_EEEC1ERKS3_
 11188      00
 11189 0043 488B45F0 		movq	-16(%rbp), %rax
 11190 0047 C9       		leave
 11191              		.cfi_def_cfa 7, 8
 11192 0048 C3       		ret
 11193              		.cfi_endproc
 11194              	.LFE13439:
 11196              		.section	.text._ZNSt6vectorIN2gr5tag_tESaIS1_EE8_M_eraseEN9__gnu_cxx17__normal_iteratorIPS1_S3_EE,
 11197              		.align 2
 11198              		.weak	_ZNSt6vectorIN2gr5tag_tESaIS1_EE8_M_eraseEN9__gnu_cxx17__normal_iteratorIPS1_S3_EE
 11200              	_ZNSt6vectorIN2gr5tag_tESaIS1_EE8_M_eraseEN9__gnu_cxx17__normal_iteratorIPS1_S3_EE:
 11201              	.LFB13440:
 11202              		.file 40 "/usr/include/c++/6/bits/vector.tcc"
   1:/usr/include/c++/6/bits/vector.tcc **** // Vector implementation (out of line) -*- C++ -*-
   2:/usr/include/c++/6/bits/vector.tcc **** 
   3:/usr/include/c++/6/bits/vector.tcc **** // Copyright (C) 2001-2016 Free Software Foundation, Inc.
   4:/usr/include/c++/6/bits/vector.tcc **** //
   5:/usr/include/c++/6/bits/vector.tcc **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/6/bits/vector.tcc **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/6/bits/vector.tcc **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/6/bits/vector.tcc **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/6/bits/vector.tcc **** // any later version.
  10:/usr/include/c++/6/bits/vector.tcc **** 
  11:/usr/include/c++/6/bits/vector.tcc **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/6/bits/vector.tcc **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/6/bits/vector.tcc **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/6/bits/vector.tcc **** // GNU General Public License for more details.
  15:/usr/include/c++/6/bits/vector.tcc **** 
  16:/usr/include/c++/6/bits/vector.tcc **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/6/bits/vector.tcc **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/6/bits/vector.tcc **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/6/bits/vector.tcc **** 
  20:/usr/include/c++/6/bits/vector.tcc **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/6/bits/vector.tcc **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/6/bits/vector.tcc **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/6/bits/vector.tcc **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/6/bits/vector.tcc **** 
  25:/usr/include/c++/6/bits/vector.tcc **** /*
  26:/usr/include/c++/6/bits/vector.tcc ****  *
  27:/usr/include/c++/6/bits/vector.tcc ****  * Copyright (c) 1994
  28:/usr/include/c++/6/bits/vector.tcc ****  * Hewlett-Packard Company
  29:/usr/include/c++/6/bits/vector.tcc ****  *
  30:/usr/include/c++/6/bits/vector.tcc ****  * Permission to use, copy, modify, distribute and sell this software
  31:/usr/include/c++/6/bits/vector.tcc ****  * and its documentation for any purpose is hereby granted without fee,
  32:/usr/include/c++/6/bits/vector.tcc ****  * provided that the above copyright notice appear in all copies and
  33:/usr/include/c++/6/bits/vector.tcc ****  * that both that copyright notice and this permission notice appear
  34:/usr/include/c++/6/bits/vector.tcc ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:/usr/include/c++/6/bits/vector.tcc ****  * representations about the suitability of this software for any
  36:/usr/include/c++/6/bits/vector.tcc ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:/usr/include/c++/6/bits/vector.tcc ****  *
  38:/usr/include/c++/6/bits/vector.tcc ****  *
  39:/usr/include/c++/6/bits/vector.tcc ****  * Copyright (c) 1996
  40:/usr/include/c++/6/bits/vector.tcc ****  * Silicon Graphics Computer Systems, Inc.
GAS LISTING /tmp/ccsIN87E.s 			page 494


  41:/usr/include/c++/6/bits/vector.tcc ****  *
  42:/usr/include/c++/6/bits/vector.tcc ****  * Permission to use, copy, modify, distribute and sell this software
  43:/usr/include/c++/6/bits/vector.tcc ****  * and its documentation for any purpose is hereby granted without fee,
  44:/usr/include/c++/6/bits/vector.tcc ****  * provided that the above copyright notice appear in all copies and
  45:/usr/include/c++/6/bits/vector.tcc ****  * that both that copyright notice and this permission notice appear
  46:/usr/include/c++/6/bits/vector.tcc ****  * in supporting documentation.  Silicon Graphics makes no
  47:/usr/include/c++/6/bits/vector.tcc ****  * representations about the suitability of this  software for any
  48:/usr/include/c++/6/bits/vector.tcc ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:/usr/include/c++/6/bits/vector.tcc ****  */
  50:/usr/include/c++/6/bits/vector.tcc **** 
  51:/usr/include/c++/6/bits/vector.tcc **** /** @file bits/vector.tcc
  52:/usr/include/c++/6/bits/vector.tcc ****  *  This is an internal header file, included by other library headers.
  53:/usr/include/c++/6/bits/vector.tcc ****  *  Do not attempt to use it directly. @headername{vector}
  54:/usr/include/c++/6/bits/vector.tcc ****  */
  55:/usr/include/c++/6/bits/vector.tcc **** 
  56:/usr/include/c++/6/bits/vector.tcc **** #ifndef _VECTOR_TCC
  57:/usr/include/c++/6/bits/vector.tcc **** #define _VECTOR_TCC 1
  58:/usr/include/c++/6/bits/vector.tcc **** 
  59:/usr/include/c++/6/bits/vector.tcc **** namespace std _GLIBCXX_VISIBILITY(default)
  60:/usr/include/c++/6/bits/vector.tcc **** {
  61:/usr/include/c++/6/bits/vector.tcc **** _GLIBCXX_BEGIN_NAMESPACE_CONTAINER
  62:/usr/include/c++/6/bits/vector.tcc **** 
  63:/usr/include/c++/6/bits/vector.tcc ****   template<typename _Tp, typename _Alloc>
  64:/usr/include/c++/6/bits/vector.tcc ****     void
  65:/usr/include/c++/6/bits/vector.tcc ****     vector<_Tp, _Alloc>::
  66:/usr/include/c++/6/bits/vector.tcc ****     reserve(size_type __n)
  67:/usr/include/c++/6/bits/vector.tcc ****     {
  68:/usr/include/c++/6/bits/vector.tcc ****       if (__n > this->max_size())
  69:/usr/include/c++/6/bits/vector.tcc **** 	__throw_length_error(__N("vector::reserve"));
  70:/usr/include/c++/6/bits/vector.tcc ****       if (this->capacity() < __n)
  71:/usr/include/c++/6/bits/vector.tcc **** 	{
  72:/usr/include/c++/6/bits/vector.tcc **** 	  const size_type __old_size = size();
  73:/usr/include/c++/6/bits/vector.tcc **** 	  pointer __tmp = _M_allocate_and_copy(__n,
  74:/usr/include/c++/6/bits/vector.tcc **** 	    _GLIBCXX_MAKE_MOVE_IF_NOEXCEPT_ITERATOR(this->_M_impl._M_start),
  75:/usr/include/c++/6/bits/vector.tcc **** 	    _GLIBCXX_MAKE_MOVE_IF_NOEXCEPT_ITERATOR(this->_M_impl._M_finish));
  76:/usr/include/c++/6/bits/vector.tcc **** 	  std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
  77:/usr/include/c++/6/bits/vector.tcc **** 			_M_get_Tp_allocator());
  78:/usr/include/c++/6/bits/vector.tcc **** 	  _M_deallocate(this->_M_impl._M_start,
  79:/usr/include/c++/6/bits/vector.tcc **** 			this->_M_impl._M_end_of_storage
  80:/usr/include/c++/6/bits/vector.tcc **** 			- this->_M_impl._M_start);
  81:/usr/include/c++/6/bits/vector.tcc **** 	  this->_M_impl._M_start = __tmp;
  82:/usr/include/c++/6/bits/vector.tcc **** 	  this->_M_impl._M_finish = __tmp + __old_size;
  83:/usr/include/c++/6/bits/vector.tcc **** 	  this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
  84:/usr/include/c++/6/bits/vector.tcc **** 	}
  85:/usr/include/c++/6/bits/vector.tcc ****     }
  86:/usr/include/c++/6/bits/vector.tcc **** 
  87:/usr/include/c++/6/bits/vector.tcc **** #if __cplusplus >= 201103L
  88:/usr/include/c++/6/bits/vector.tcc ****   template<typename _Tp, typename _Alloc>
  89:/usr/include/c++/6/bits/vector.tcc ****     template<typename... _Args>
  90:/usr/include/c++/6/bits/vector.tcc ****       void
  91:/usr/include/c++/6/bits/vector.tcc ****       vector<_Tp, _Alloc>::
  92:/usr/include/c++/6/bits/vector.tcc ****       emplace_back(_Args&&... __args)
  93:/usr/include/c++/6/bits/vector.tcc ****       {
  94:/usr/include/c++/6/bits/vector.tcc **** 	if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
  95:/usr/include/c++/6/bits/vector.tcc **** 	  {
  96:/usr/include/c++/6/bits/vector.tcc **** 	    _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish,
  97:/usr/include/c++/6/bits/vector.tcc **** 				     std::forward<_Args>(__args)...);
GAS LISTING /tmp/ccsIN87E.s 			page 495


  98:/usr/include/c++/6/bits/vector.tcc **** 	    ++this->_M_impl._M_finish;
  99:/usr/include/c++/6/bits/vector.tcc **** 	  }
 100:/usr/include/c++/6/bits/vector.tcc **** 	else
 101:/usr/include/c++/6/bits/vector.tcc **** 	  _M_emplace_back_aux(std::forward<_Args>(__args)...);
 102:/usr/include/c++/6/bits/vector.tcc ****       }
 103:/usr/include/c++/6/bits/vector.tcc **** #endif
 104:/usr/include/c++/6/bits/vector.tcc **** 
 105:/usr/include/c++/6/bits/vector.tcc ****   template<typename _Tp, typename _Alloc>
 106:/usr/include/c++/6/bits/vector.tcc ****     typename vector<_Tp, _Alloc>::iterator
 107:/usr/include/c++/6/bits/vector.tcc ****     vector<_Tp, _Alloc>::
 108:/usr/include/c++/6/bits/vector.tcc **** #if __cplusplus >= 201103L
 109:/usr/include/c++/6/bits/vector.tcc ****     insert(const_iterator __position, const value_type& __x)
 110:/usr/include/c++/6/bits/vector.tcc **** #else
 111:/usr/include/c++/6/bits/vector.tcc ****     insert(iterator __position, const value_type& __x)
 112:/usr/include/c++/6/bits/vector.tcc **** #endif
 113:/usr/include/c++/6/bits/vector.tcc ****     {
 114:/usr/include/c++/6/bits/vector.tcc ****       const size_type __n = __position - begin();
 115:/usr/include/c++/6/bits/vector.tcc ****       if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage
 116:/usr/include/c++/6/bits/vector.tcc **** 	  && __position == end())
 117:/usr/include/c++/6/bits/vector.tcc **** 	{
 118:/usr/include/c++/6/bits/vector.tcc **** 	  _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish, __x);
 119:/usr/include/c++/6/bits/vector.tcc **** 	  ++this->_M_impl._M_finish;
 120:/usr/include/c++/6/bits/vector.tcc **** 	}
 121:/usr/include/c++/6/bits/vector.tcc ****       else
 122:/usr/include/c++/6/bits/vector.tcc **** 	{
 123:/usr/include/c++/6/bits/vector.tcc **** #if __cplusplus >= 201103L
 124:/usr/include/c++/6/bits/vector.tcc **** 	  const auto __pos = begin() + (__position - cbegin());
 125:/usr/include/c++/6/bits/vector.tcc **** 	  if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
 126:/usr/include/c++/6/bits/vector.tcc **** 	    {
 127:/usr/include/c++/6/bits/vector.tcc **** 	      _Tp __x_copy = __x;
 128:/usr/include/c++/6/bits/vector.tcc **** 	      _M_insert_aux(__pos, std::move(__x_copy));
 129:/usr/include/c++/6/bits/vector.tcc **** 	    }
 130:/usr/include/c++/6/bits/vector.tcc **** 	  else
 131:/usr/include/c++/6/bits/vector.tcc **** 	    _M_insert_aux(__pos, __x);
 132:/usr/include/c++/6/bits/vector.tcc **** #else
 133:/usr/include/c++/6/bits/vector.tcc **** 	    _M_insert_aux(__position, __x);
 134:/usr/include/c++/6/bits/vector.tcc **** #endif
 135:/usr/include/c++/6/bits/vector.tcc **** 	}
 136:/usr/include/c++/6/bits/vector.tcc ****       return iterator(this->_M_impl._M_start + __n);
 137:/usr/include/c++/6/bits/vector.tcc ****     }
 138:/usr/include/c++/6/bits/vector.tcc **** 
 139:/usr/include/c++/6/bits/vector.tcc ****   template<typename _Tp, typename _Alloc>
 140:/usr/include/c++/6/bits/vector.tcc ****     typename vector<_Tp, _Alloc>::iterator
 141:/usr/include/c++/6/bits/vector.tcc ****     vector<_Tp, _Alloc>::
 11203              		.loc 40 141 0
 11204              		.cfi_startproc
 11205 0000 55       		pushq	%rbp
 11206              		.cfi_def_cfa_offset 16
 11207              		.cfi_offset 6, -16
 11208 0001 4889E5   		movq	%rsp, %rbp
 11209              		.cfi_def_cfa_register 6
 11210 0004 53       		pushq	%rbx
 11211 0005 4883EC28 		subq	$40, %rsp
 11212              		.cfi_offset 3, -24
 11213 0009 48897DD8 		movq	%rdi, -40(%rbp)
 11214 000d 488975D0 		movq	%rsi, -48(%rbp)
 142:/usr/include/c++/6/bits/vector.tcc ****     _M_erase(iterator __position)
GAS LISTING /tmp/ccsIN87E.s 			page 496


 143:/usr/include/c++/6/bits/vector.tcc ****     {
 144:/usr/include/c++/6/bits/vector.tcc ****       if (__position + 1 != end())
 11215              		.loc 40 144 0
 11216 0011 488B45D8 		movq	-40(%rbp), %rax
 11217 0015 4889C7   		movq	%rax, %rdi
 11218 0018 E8000000 		call	_ZNSt6vectorIN2gr5tag_tESaIS1_EE3endEv
 11218      00
 11219 001d 488945E0 		movq	%rax, -32(%rbp)
 11220 0021 488D45D0 		leaq	-48(%rbp), %rax
 11221 0025 BE010000 		movl	$1, %esi
 11221      00
 11222 002a 4889C7   		movq	%rax, %rdi
 11223 002d E8000000 		call	_ZNK9__gnu_cxx17__normal_iteratorIPN2gr5tag_tESt6vectorIS2_SaIS2_EEEplEl
 11223      00
 11224 0032 488945E8 		movq	%rax, -24(%rbp)
 11225 0036 488D55E0 		leaq	-32(%rbp), %rdx
 11226 003a 488D45E8 		leaq	-24(%rbp), %rax
 11227 003e 4889D6   		movq	%rdx, %rsi
 11228 0041 4889C7   		movq	%rax, %rdi
 11229 0044 E8000000 		call	_ZN9__gnu_cxxneIPN2gr5tag_tESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_
 11229      00
 11230 0049 84C0     		testb	%al, %al
 11231 004b 7435     		je	.L541
 145:/usr/include/c++/6/bits/vector.tcc **** 	_GLIBCXX_MOVE3(__position + 1, end(), __position);
 11232              		.loc 40 145 0
 11233 004d 488B45D8 		movq	-40(%rbp), %rax
 11234 0051 4889C7   		movq	%rax, %rdi
 11235 0054 E8000000 		call	_ZNSt6vectorIN2gr5tag_tESaIS1_EE3endEv
 11235      00
 11236 0059 4889C3   		movq	%rax, %rbx
 11237 005c 488D45D0 		leaq	-48(%rbp), %rax
 11238 0060 BE010000 		movl	$1, %esi
 11238      00
 11239 0065 4889C7   		movq	%rax, %rdi
 11240 0068 E8000000 		call	_ZNK9__gnu_cxx17__normal_iteratorIPN2gr5tag_tESt6vectorIS2_SaIS2_EEEplEl
 11240      00
 11241 006d 4889C1   		movq	%rax, %rcx
 11242 0070 488B45D0 		movq	-48(%rbp), %rax
 11243 0074 4889C2   		movq	%rax, %rdx
 11244 0077 4889DE   		movq	%rbx, %rsi
 11245 007a 4889CF   		movq	%rcx, %rdi
 11246 007d E8000000 		call	_ZSt4moveIN9__gnu_cxx17__normal_iteratorIPN2gr5tag_tESt6vectorIS3_SaIS3_EEEES8_ET0_T_SA_S9_
 11246      00
 11247              	.L541:
 146:/usr/include/c++/6/bits/vector.tcc ****       --this->_M_impl._M_finish;
 11248              		.loc 40 146 0
 11249 0082 488B45D8 		movq	-40(%rbp), %rax
 11250 0086 488B4008 		movq	8(%rax), %rax
 11251 008a 488D50C8 		leaq	-56(%rax), %rdx
 11252 008e 488B45D8 		movq	-40(%rbp), %rax
 11253 0092 48895008 		movq	%rdx, 8(%rax)
 147:/usr/include/c++/6/bits/vector.tcc ****       _Alloc_traits::destroy(this->_M_impl, this->_M_impl._M_finish);
 11254              		.loc 40 147 0
 11255 0096 488B45D8 		movq	-40(%rbp), %rax
 11256 009a 488B5008 		movq	8(%rax), %rdx
 11257 009e 488B45D8 		movq	-40(%rbp), %rax
 11258 00a2 4889D6   		movq	%rdx, %rsi
GAS LISTING /tmp/ccsIN87E.s 			page 497


 11259 00a5 4889C7   		movq	%rax, %rdi
 11260 00a8 E8000000 		call	_ZNSt16allocator_traitsISaIN2gr5tag_tEEE7destroyIS1_EEvRS2_PT_
 11260      00
 148:/usr/include/c++/6/bits/vector.tcc ****       return __position;
 11261              		.loc 40 148 0
 11262 00ad 488B45D0 		movq	-48(%rbp), %rax
 149:/usr/include/c++/6/bits/vector.tcc ****     }
 11263              		.loc 40 149 0
 11264 00b1 4883C428 		addq	$40, %rsp
 11265 00b5 5B       		popq	%rbx
 11266 00b6 5D       		popq	%rbp
 11267              		.cfi_def_cfa 7, 8
 11268 00b7 C3       		ret
 11269              		.cfi_endproc
 11270              	.LFE13440:
 11272              		.section	.text._ZNSt7complexIfEmLIfEERS0_RKS_IT_E,"axG",@progbits,_ZNSt7complexIfEmLIfEERS0_RKS_IT
 11273              		.align 2
 11274              		.weak	_ZNSt7complexIfEmLIfEERS0_RKS_IT_E
 11276              	_ZNSt7complexIfEmLIfEERS0_RKS_IT_E:
 11277              	.LFB13441:
1081:/usr/include/c++/6/complex **** #else
1082:/usr/include/c++/6/complex ****       float& 
1083:/usr/include/c++/6/complex ****       real() { return __real__ _M_value; }
1084:/usr/include/c++/6/complex **** 
1085:/usr/include/c++/6/complex ****       const float& 
1086:/usr/include/c++/6/complex ****       real() const { return __real__ _M_value; }      
1087:/usr/include/c++/6/complex **** 
1088:/usr/include/c++/6/complex ****       float& 
1089:/usr/include/c++/6/complex ****       imag() { return __imag__ _M_value; }
1090:/usr/include/c++/6/complex **** 
1091:/usr/include/c++/6/complex ****       const float& 
1092:/usr/include/c++/6/complex ****       imag() const { return __imag__ _M_value; }
1093:/usr/include/c++/6/complex **** #endif
1094:/usr/include/c++/6/complex **** 
1095:/usr/include/c++/6/complex ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
1096:/usr/include/c++/6/complex ****       // DR 387. std::complex over-encapsulated.
1097:/usr/include/c++/6/complex ****       void 
1098:/usr/include/c++/6/complex ****       real(float __val) { __real__ _M_value = __val; }
1099:/usr/include/c++/6/complex **** 
1100:/usr/include/c++/6/complex ****       void 
1101:/usr/include/c++/6/complex ****       imag(float __val) { __imag__ _M_value = __val; }
1102:/usr/include/c++/6/complex **** 
1103:/usr/include/c++/6/complex ****       complex&
1104:/usr/include/c++/6/complex ****       operator=(float __f)
1105:/usr/include/c++/6/complex ****       {
1106:/usr/include/c++/6/complex **** 	_M_value = __f;
1107:/usr/include/c++/6/complex **** 	return *this;
1108:/usr/include/c++/6/complex ****       }
1109:/usr/include/c++/6/complex **** 
1110:/usr/include/c++/6/complex ****       complex&
1111:/usr/include/c++/6/complex ****       operator+=(float __f)
1112:/usr/include/c++/6/complex ****       {
1113:/usr/include/c++/6/complex **** 	_M_value += __f;
1114:/usr/include/c++/6/complex **** 	return *this;
1115:/usr/include/c++/6/complex ****       }
1116:/usr/include/c++/6/complex **** 
1117:/usr/include/c++/6/complex ****       complex&
GAS LISTING /tmp/ccsIN87E.s 			page 498


1118:/usr/include/c++/6/complex ****       operator-=(float __f)
1119:/usr/include/c++/6/complex ****       {
1120:/usr/include/c++/6/complex **** 	_M_value -= __f;
1121:/usr/include/c++/6/complex **** 	return *this;
1122:/usr/include/c++/6/complex ****       }
1123:/usr/include/c++/6/complex **** 
1124:/usr/include/c++/6/complex ****       complex&
1125:/usr/include/c++/6/complex ****       operator*=(float __f)
1126:/usr/include/c++/6/complex ****       {
1127:/usr/include/c++/6/complex **** 	_M_value *= __f;
1128:/usr/include/c++/6/complex **** 	return *this;
1129:/usr/include/c++/6/complex ****       }
1130:/usr/include/c++/6/complex **** 
1131:/usr/include/c++/6/complex ****       complex&
1132:/usr/include/c++/6/complex ****       operator/=(float __f)
1133:/usr/include/c++/6/complex ****       {
1134:/usr/include/c++/6/complex **** 	_M_value /= __f;
1135:/usr/include/c++/6/complex **** 	return *this;
1136:/usr/include/c++/6/complex ****       }
1137:/usr/include/c++/6/complex **** 
1138:/usr/include/c++/6/complex ****       // Let the compiler synthesize the copy and assignment
1139:/usr/include/c++/6/complex ****       // operator.  It always does a pretty good job.
1140:/usr/include/c++/6/complex ****       // complex& operator=(const complex&);
1141:/usr/include/c++/6/complex **** 
1142:/usr/include/c++/6/complex ****       template<typename _Tp>
1143:/usr/include/c++/6/complex ****         complex&
1144:/usr/include/c++/6/complex ****         operator=(const complex<_Tp>&  __z)
1145:/usr/include/c++/6/complex **** 	{
1146:/usr/include/c++/6/complex **** 	  __real__ _M_value = __z.real();
1147:/usr/include/c++/6/complex **** 	  __imag__ _M_value = __z.imag();
1148:/usr/include/c++/6/complex **** 	  return *this;
1149:/usr/include/c++/6/complex **** 	}
1150:/usr/include/c++/6/complex **** 
1151:/usr/include/c++/6/complex ****       template<typename _Tp>
1152:/usr/include/c++/6/complex ****         complex&
1153:/usr/include/c++/6/complex ****         operator+=(const complex<_Tp>& __z)
1154:/usr/include/c++/6/complex **** 	{
1155:/usr/include/c++/6/complex **** 	  __real__ _M_value += __z.real();
1156:/usr/include/c++/6/complex **** 	  __imag__ _M_value += __z.imag();
1157:/usr/include/c++/6/complex **** 	  return *this;
1158:/usr/include/c++/6/complex **** 	}
1159:/usr/include/c++/6/complex **** 
1160:/usr/include/c++/6/complex ****       template<class _Tp>
1161:/usr/include/c++/6/complex ****         complex&
1162:/usr/include/c++/6/complex ****         operator-=(const complex<_Tp>& __z)
1163:/usr/include/c++/6/complex **** 	{
1164:/usr/include/c++/6/complex **** 	  __real__ _M_value -= __z.real();
1165:/usr/include/c++/6/complex **** 	  __imag__ _M_value -= __z.imag();
1166:/usr/include/c++/6/complex **** 	  return *this;
1167:/usr/include/c++/6/complex **** 	}
1168:/usr/include/c++/6/complex **** 
1169:/usr/include/c++/6/complex ****       template<class _Tp>
1170:/usr/include/c++/6/complex ****         complex&
1171:/usr/include/c++/6/complex ****         operator*=(const complex<_Tp>& __z)
 11278              		.loc 9 1171 0
 11279              		.cfi_startproc
 11280 0000 55       		pushq	%rbp
GAS LISTING /tmp/ccsIN87E.s 			page 499


 11281              		.cfi_def_cfa_offset 16
 11282              		.cfi_offset 6, -16
 11283 0001 4889E5   		movq	%rsp, %rbp
 11284              		.cfi_def_cfa_register 6
 11285 0004 4883EC30 		subq	$48, %rsp
 11286 0008 48897DE8 		movq	%rdi, -24(%rbp)
 11287 000c 488975E0 		movq	%rsi, -32(%rbp)
1172:/usr/include/c++/6/complex **** 	{
1173:/usr/include/c++/6/complex **** 	  _ComplexT __t;
1174:/usr/include/c++/6/complex **** 	  __real__ __t = __z.real();
 11288              		.loc 9 1174 0
 11289 0010 488B45E0 		movq	-32(%rbp), %rax
 11290 0014 4889C7   		movq	%rax, %rdi
 11291 0017 E8000000 		call	_ZNKSt7complexIfE4realB5cxx11Ev
 11291      00
 11292 001c 660F7EC0 		movd	%xmm0, %eax
 11293 0020 8945FC   		movl	%eax, -4(%rbp)
 11294 0023 F30F1045 		movss	-8(%rbp), %xmm0
 11294      F8
 11295 0028 F30F104D 		movss	-4(%rbp), %xmm1
 11295      FC
 11296 002d F30F114D 		movss	%xmm1, -16(%rbp)
 11296      F0
 11297 0032 F30F1145 		movss	%xmm0, -12(%rbp)
 11297      F4
1175:/usr/include/c++/6/complex **** 	  __imag__ __t = __z.imag();
 11298              		.loc 9 1175 0
 11299 0037 488B45E0 		movq	-32(%rbp), %rax
 11300 003b 4889C7   		movq	%rax, %rdi
 11301 003e E8000000 		call	_ZNKSt7complexIfE4imagB5cxx11Ev
 11301      00
 11302 0043 660F7EC0 		movd	%xmm0, %eax
 11303 0047 8945F8   		movl	%eax, -8(%rbp)
 11304 004a F30F1045 		movss	-8(%rbp), %xmm0
 11304      F8
 11305 004f F30F104D 		movss	-4(%rbp), %xmm1
 11305      FC
 11306 0054 F30F114D 		movss	%xmm1, -16(%rbp)
 11306      F0
 11307 0059 F30F1145 		movss	%xmm0, -12(%rbp)
 11307      F4
 11308 005e 488B45E8 		movq	-24(%rbp), %rax
 11309 0062 8B00     		movl	(%rax), %eax
 11310 0064 488B55E8 		movq	-24(%rbp), %rdx
 11311 0068 F30F1042 		movss	4(%rdx), %xmm0
 11311      04
1176:/usr/include/c++/6/complex **** 	  _M_value *= __t;
 11312              		.loc 9 1176 0
 11313 006d F30F1055 		movss	-8(%rbp), %xmm2
 11313      F8
 11314 0072 F30F104D 		movss	-4(%rbp), %xmm1
 11314      FC
 11315 0077 0F28DA   		movaps	%xmm2, %xmm3
 11316 007a 0F28D1   		movaps	%xmm1, %xmm2
 11317 007d 0F28C8   		movaps	%xmm0, %xmm1
 11318 0080 8945D4   		movl	%eax, -44(%rbp)
 11319 0083 F30F1045 		movss	-44(%rbp), %xmm0
GAS LISTING /tmp/ccsIN87E.s 			page 500


 11319      D4
 11320 0088 E8000000 		call	__mulsc3@PLT
 11320      00
 11321 008d 66480F7E 		movq	%xmm0, %rax
 11321      C0
 11322 0092 488945D8 		movq	%rax, -40(%rbp)
 11323 0096 F30F104D 		movss	-40(%rbp), %xmm1
 11323      D8
 11324 009b F30F1045 		movss	-36(%rbp), %xmm0
 11324      DC
 11325 00a0 488B45E8 		movq	-24(%rbp), %rax
 11326 00a4 F30F1108 		movss	%xmm1, (%rax)
 11327 00a8 488B45E8 		movq	-24(%rbp), %rax
 11328 00ac F30F1140 		movss	%xmm0, 4(%rax)
 11328      04
1177:/usr/include/c++/6/complex **** 	  return *this;
 11329              		.loc 9 1177 0
 11330 00b1 488B45E8 		movq	-24(%rbp), %rax
1178:/usr/include/c++/6/complex **** 	}
 11331              		.loc 9 1178 0
 11332 00b5 C9       		leave
 11333              		.cfi_def_cfa 7, 8
 11334 00b6 C3       		ret
 11335              		.cfi_endproc
 11336              	.LFE13441:
 11338              		.section	.text._ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFv
 11339              		.weak	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt
 11341              	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt10_Sele
 11342              	.LFB13677:
 700:/usr/include/c++/6/bits/stl_tree.h ****       { return static_cast<_Link_type>(__x->_M_right); }
 11343              		.loc 27 700 0
 11344              		.cfi_startproc
 11345 0000 55       		pushq	%rbp
 11346              		.cfi_def_cfa_offset 16
 11347              		.cfi_offset 6, -16
 11348 0001 4889E5   		movq	%rsp, %rbp
 11349              		.cfi_def_cfa_register 6
 11350 0004 48897DF8 		movq	%rdi, -8(%rbp)
 701:/usr/include/c++/6/bits/stl_tree.h **** 
 11351              		.loc 27 701 0
 11352 0008 488B45F8 		movq	-8(%rbp), %rax
 11353 000c 488B4018 		movq	24(%rax), %rax
 11354 0010 5D       		popq	%rbp
 11355              		.cfi_def_cfa 7, 8
 11356 0011 C3       		ret
 11357              		.cfi_endproc
 11358              	.LFE13677:
 11360              		.section	.text._ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFv
 11361              		.weak	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt
 11363              	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt10_Sele
 11364              	.LFB13678:
 692:/usr/include/c++/6/bits/stl_tree.h ****       { return static_cast<_Link_type>(__x->_M_left); }
 11365              		.loc 27 692 0
 11366              		.cfi_startproc
 11367 0000 55       		pushq	%rbp
 11368              		.cfi_def_cfa_offset 16
 11369              		.cfi_offset 6, -16
GAS LISTING /tmp/ccsIN87E.s 			page 501


 11370 0001 4889E5   		movq	%rsp, %rbp
 11371              		.cfi_def_cfa_register 6
 11372 0004 48897DF8 		movq	%rdi, -8(%rbp)
 693:/usr/include/c++/6/bits/stl_tree.h **** 
 11373              		.loc 27 693 0
 11374 0008 488B45F8 		movq	-8(%rbp), %rax
 11375 000c 488B4010 		movq	16(%rax), %rax
 11376 0010 5D       		popq	%rbp
 11377              		.cfi_def_cfa 7, 8
 11378 0011 C3       		ret
 11379              		.cfi_endproc
 11380              	.LFE13678:
 11382              		.section	.text._ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFv
 11383              		.align 2
 11384              		.weak	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt
 11386              	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt10_Sele
 11387              	.LFB13679:
 573:/usr/include/c++/6/bits/stl_tree.h ****       {
 11388              		.loc 27 573 0
 11389              		.cfi_startproc
 11390 0000 55       		pushq	%rbp
 11391              		.cfi_def_cfa_offset 16
 11392              		.cfi_offset 6, -16
 11393 0001 4889E5   		movq	%rsp, %rbp
 11394              		.cfi_def_cfa_register 6
 11395 0004 4883EC10 		subq	$16, %rsp
 11396 0008 48897DF8 		movq	%rdi, -8(%rbp)
 11397 000c 488975F0 		movq	%rsi, -16(%rbp)
 575:/usr/include/c++/6/bits/stl_tree.h **** 	_M_put_node(__p);
 11398              		.loc 27 575 0
 11399 0010 488B55F0 		movq	-16(%rbp), %rdx
 11400 0014 488B45F8 		movq	-8(%rbp), %rax
 11401 0018 4889D6   		movq	%rdx, %rsi
 11402 001b 4889C7   		movq	%rax, %rdi
 11403 001e E8000000 		call	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt1
 11403      00
 576:/usr/include/c++/6/bits/stl_tree.h ****       }
 11404              		.loc 27 576 0
 11405 0023 488B55F0 		movq	-16(%rbp), %rdx
 11406 0027 488B45F8 		movq	-8(%rbp), %rax
 11407 002b 4889D6   		movq	%rdx, %rsi
 11408 002e 4889C7   		movq	%rax, %rdi
 11409 0031 E8000000 		call	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt1
 11409      00
 577:/usr/include/c++/6/bits/stl_tree.h **** 
 11410              		.loc 27 577 0
 11411 0036 90       		nop
 11412 0037 C9       		leave
 11413              		.cfi_def_cfa 7, 8
 11414 0038 C3       		ret
 11415              		.cfi_endproc
 11416              	.LFE13679:
 11418              		.section	.text._ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_St5dequeIS4_SaIS
 11419              		.weak	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_St5dequeIS4_SaIS4_EEESt10
 11421              	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_St5dequeIS4_SaIS4_EEESt10_Select
 11422              	.LFB13695:
 700:/usr/include/c++/6/bits/stl_tree.h ****       { return static_cast<_Link_type>(__x->_M_right); }
GAS LISTING /tmp/ccsIN87E.s 			page 502


 11423              		.loc 27 700 0
 11424              		.cfi_startproc
 11425 0000 55       		pushq	%rbp
 11426              		.cfi_def_cfa_offset 16
 11427              		.cfi_offset 6, -16
 11428 0001 4889E5   		movq	%rsp, %rbp
 11429              		.cfi_def_cfa_register 6
 11430 0004 48897DF8 		movq	%rdi, -8(%rbp)
 701:/usr/include/c++/6/bits/stl_tree.h **** 
 11431              		.loc 27 701 0
 11432 0008 488B45F8 		movq	-8(%rbp), %rax
 11433 000c 488B4018 		movq	24(%rax), %rax
 11434 0010 5D       		popq	%rbp
 11435              		.cfi_def_cfa 7, 8
 11436 0011 C3       		ret
 11437              		.cfi_endproc
 11438              	.LFE13695:
 11440              		.section	.text._ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_St5dequeIS4_SaIS
 11441              		.weak	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_St5dequeIS4_SaIS4_EEESt10
 11443              	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_St5dequeIS4_SaIS4_EEESt10_Select
 11444              	.LFB13696:
 692:/usr/include/c++/6/bits/stl_tree.h ****       { return static_cast<_Link_type>(__x->_M_left); }
 11445              		.loc 27 692 0
 11446              		.cfi_startproc
 11447 0000 55       		pushq	%rbp
 11448              		.cfi_def_cfa_offset 16
 11449              		.cfi_offset 6, -16
 11450 0001 4889E5   		movq	%rsp, %rbp
 11451              		.cfi_def_cfa_register 6
 11452 0004 48897DF8 		movq	%rdi, -8(%rbp)
 693:/usr/include/c++/6/bits/stl_tree.h **** 
 11453              		.loc 27 693 0
 11454 0008 488B45F8 		movq	-8(%rbp), %rax
 11455 000c 488B4010 		movq	16(%rax), %rax
 11456 0010 5D       		popq	%rbp
 11457              		.cfi_def_cfa 7, 8
 11458 0011 C3       		ret
 11459              		.cfi_endproc
 11460              	.LFE13696:
 11462              		.section	.text._ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFv
 11463              		.align 2
 11464              		.weak	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt
 11466              	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt10_Sele
 11467              	.LFB13708:
 676:/usr/include/c++/6/bits/stl_tree.h ****       { return &this->_M_impl._M_header; }
 11468              		.loc 27 676 0
 11469              		.cfi_startproc
 11470 0000 55       		pushq	%rbp
 11471              		.cfi_def_cfa_offset 16
 11472              		.cfi_offset 6, -16
 11473 0001 4889E5   		movq	%rsp, %rbp
 11474              		.cfi_def_cfa_register 6
 11475 0004 48897DF8 		movq	%rdi, -8(%rbp)
 677:/usr/include/c++/6/bits/stl_tree.h **** 
 11476              		.loc 27 677 0
 11477 0008 488B45F8 		movq	-8(%rbp), %rax
 11478 000c 4883C008 		addq	$8, %rax
GAS LISTING /tmp/ccsIN87E.s 			page 503


 11479 0010 5D       		popq	%rbp
 11480              		.cfi_def_cfa 7, 8
 11481 0011 C3       		ret
 11482              		.cfi_endproc
 11483              	.LFE13708:
 11485              		.section	.text._ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFv
 11486              		.align 2
 11487              		.weak	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt
 11489              	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt10_Sele
 11490              	.LFB13709:
1649:/usr/include/c++/6/bits/stl_tree.h ****     _M_lower_bound(_Link_type __x, _Base_ptr __y,
 11491              		.loc 27 1649 0
 11492              		.cfi_startproc
 11493 0000 55       		pushq	%rbp
 11494              		.cfi_def_cfa_offset 16
 11495              		.cfi_offset 6, -16
 11496 0001 4889E5   		movq	%rsp, %rbp
 11497              		.cfi_def_cfa_register 6
 11498 0004 4883EC30 		subq	$48, %rsp
 11499 0008 48897DE8 		movq	%rdi, -24(%rbp)
 11500 000c 488975E0 		movq	%rsi, -32(%rbp)
 11501 0010 488955D8 		movq	%rdx, -40(%rbp)
 11502 0014 48894DD0 		movq	%rcx, -48(%rbp)
 11503              	.L560:
1653:/usr/include/c++/6/bits/stl_tree.h **** 	if (!_M_impl._M_key_compare(_S_key(__x), __k))
 11504              		.loc 27 1653 0
 11505 0018 48837DE0 		cmpq	$0, -32(%rbp)
 11505      00
 11506 001d 7455     		je	.L557
1654:/usr/include/c++/6/bits/stl_tree.h **** 	  __y = __x, __x = _S_left(__x);
 11507              		.loc 27 1654 0
 11508 001f 488B45E0 		movq	-32(%rbp), %rax
 11509 0023 4889C7   		movq	%rax, %rdi
 11510 0026 E8000000 		call	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt1
 11510      00
 11511 002b 4889C1   		movq	%rax, %rcx
 11512 002e 488B45E8 		movq	-24(%rbp), %rax
 11513 0032 488B55D0 		movq	-48(%rbp), %rdx
 11514 0036 4889CE   		movq	%rcx, %rsi
 11515 0039 4889C7   		movq	%rax, %rdi
 11516 003c E8000000 		call	_ZNK3pmt10comparatorclERKN5boost13intrusive_ptrINS_8pmt_baseEEES6_
 11516      00
 11517 0041 83F001   		xorl	$1, %eax
 11518 0044 84C0     		testb	%al, %al
 11519 0046 741A     		je	.L558
1655:/usr/include/c++/6/bits/stl_tree.h **** 	else
 11520              		.loc 27 1655 0
 11521 0048 488B45E0 		movq	-32(%rbp), %rax
 11522 004c 488945D8 		movq	%rax, -40(%rbp)
 11523 0050 488B45E0 		movq	-32(%rbp), %rax
 11524 0054 4889C7   		movq	%rax, %rdi
 11525 0057 E8000000 		call	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt1
 11525      00
 11526 005c 488945E0 		movq	%rax, -32(%rbp)
 11527 0060 EBB6     		jmp	.L560
 11528              	.L558:
1657:/usr/include/c++/6/bits/stl_tree.h ****       return iterator(__y);
GAS LISTING /tmp/ccsIN87E.s 			page 504


 11529              		.loc 27 1657 0
 11530 0062 488B45E0 		movq	-32(%rbp), %rax
 11531 0066 4889C7   		movq	%rax, %rdi
 11532 0069 E8000000 		call	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt1
 11532      00
 11533 006e 488945E0 		movq	%rax, -32(%rbp)
1653:/usr/include/c++/6/bits/stl_tree.h **** 	if (!_M_impl._M_key_compare(_S_key(__x), __k))
 11534              		.loc 27 1653 0
 11535 0072 EBA4     		jmp	.L560
 11536              	.L557:
1658:/usr/include/c++/6/bits/stl_tree.h ****     }
 11537              		.loc 27 1658 0
 11538 0074 488B55D8 		movq	-40(%rbp), %rdx
 11539 0078 488D45F8 		leaq	-8(%rbp), %rax
 11540 007c 4889D6   		movq	%rdx, %rsi
 11541 007f 4889C7   		movq	%rax, %rdi
 11542 0082 E8000000 		call	_ZNSt17_Rb_tree_iteratorISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS1_8functionIFvS5_
 11542      00
 11543 0087 488B45F8 		movq	-8(%rbp), %rax
1659:/usr/include/c++/6/bits/stl_tree.h **** 
 11544              		.loc 27 1659 0
 11545 008b C9       		leave
 11546              		.cfi_def_cfa 7, 8
 11547 008c C3       		ret
 11548              		.cfi_endproc
 11549              	.LFE13709:
 11551              		.section	.text._ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFv
 11552              		.weak	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt
 11554              	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt10_Sele
 11555              	.LFB13710:
 712:/usr/include/c++/6/bits/stl_tree.h ****       { return _KeyOfValue()(_S_value(__x)); }
 11556              		.loc 27 712 0
 11557              		.cfi_startproc
 11558 0000 55       		pushq	%rbp
 11559              		.cfi_def_cfa_offset 16
 11560              		.cfi_offset 6, -16
 11561 0001 4889E5   		movq	%rsp, %rbp
 11562              		.cfi_def_cfa_register 6
 11563 0004 4883EC20 		subq	$32, %rsp
 11564 0008 48897DE8 		movq	%rdi, -24(%rbp)
 713:/usr/include/c++/6/bits/stl_tree.h **** 
 11565              		.loc 27 713 0
 11566 000c 488B45E8 		movq	-24(%rbp), %rax
 11567 0010 4889C7   		movq	%rax, %rdi
 11568 0013 E8000000 		call	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt1
 11568      00
 11569 0018 4889C2   		movq	%rax, %rdx
 11570 001b 488D45FF 		leaq	-1(%rbp), %rax
 11571 001f 4889D6   		movq	%rdx, %rsi
 11572 0022 4889C7   		movq	%rax, %rdi
 11573 0025 E8000000 		call	_ZNKSt10_Select1stISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS1_8functionIFvS5_EEEEEc
 11573      00
 11574 002a C9       		leave
 11575              		.cfi_def_cfa 7, 8
 11576 002b C3       		ret
 11577              		.cfi_endproc
 11578              	.LFE13710:
GAS LISTING /tmp/ccsIN87E.s 			page 505


 11580              		.section	.text._ZNSt17_Rb_tree_iteratorISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS1_8func
 11581              		.align 2
 11582              		.weak	_ZNSt17_Rb_tree_iteratorISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS1_8functionIFvS5
 11584              	_ZNSt17_Rb_tree_iteratorISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS1_8functionIFvS5_EEEEEC
 11585              	.LFB13712:
 195:/usr/include/c++/6/bits/stl_tree.h ****       : _M_node(__x) { }
 11586              		.loc 27 195 0
 11587              		.cfi_startproc
 11588 0000 55       		pushq	%rbp
 11589              		.cfi_def_cfa_offset 16
 11590              		.cfi_offset 6, -16
 11591 0001 4889E5   		movq	%rsp, %rbp
 11592              		.cfi_def_cfa_register 6
 11593 0004 48897DF8 		movq	%rdi, -8(%rbp)
 11594 0008 488975F0 		movq	%rsi, -16(%rbp)
 11595              	.LBB110:
 196:/usr/include/c++/6/bits/stl_tree.h **** 
 11596              		.loc 27 196 0
 11597 000c 488B45F8 		movq	-8(%rbp), %rax
 11598 0010 488B55F0 		movq	-16(%rbp), %rdx
 11599 0014 488910   		movq	%rdx, (%rax)
 11600              	.LBE110:
 11601 0017 90       		nop
 11602 0018 5D       		popq	%rbp
 11603              		.cfi_def_cfa 7, 8
 11604 0019 C3       		ret
 11605              		.cfi_endproc
 11606              	.LFE13712:
 11608              		.weak	_ZNSt17_Rb_tree_iteratorISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS1_8functionIFvS5
 11609              		.set	_ZNSt17_Rb_tree_iteratorISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS1_8functionIFvS5_
 11610              		.section	.text._ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFv
 11611              		.align 2
 11612              		.weak	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt
 11614              	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt10_Sele
 11615              	.LFB13714:
1102:/usr/include/c++/6/bits/stl_tree.h ****       { return _M_lower_bound(_M_begin(), _M_end(), __k); }
 11616              		.loc 27 1102 0
 11617              		.cfi_startproc
 11618 0000 55       		pushq	%rbp
 11619              		.cfi_def_cfa_offset 16
 11620              		.cfi_offset 6, -16
 11621 0001 4889E5   		movq	%rsp, %rbp
 11622              		.cfi_def_cfa_register 6
 11623 0004 53       		pushq	%rbx
 11624 0005 4883EC18 		subq	$24, %rsp
 11625              		.cfi_offset 3, -24
 11626 0009 48897DE8 		movq	%rdi, -24(%rbp)
 11627 000d 488975E0 		movq	%rsi, -32(%rbp)
1103:/usr/include/c++/6/bits/stl_tree.h **** 
 11628              		.loc 27 1103 0
 11629 0011 488B45E8 		movq	-24(%rbp), %rax
 11630 0015 4889C7   		movq	%rax, %rdi
 11631 0018 E8000000 		call	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt1
 11631      00
 11632 001d 4889C3   		movq	%rax, %rbx
 11633 0020 488B45E8 		movq	-24(%rbp), %rax
 11634 0024 4889C7   		movq	%rax, %rdi
GAS LISTING /tmp/ccsIN87E.s 			page 506


 11635 0027 E8000000 		call	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt1
 11635      00
 11636 002c 4889C6   		movq	%rax, %rsi
 11637 002f 488B55E0 		movq	-32(%rbp), %rdx
 11638 0033 488B45E8 		movq	-24(%rbp), %rax
 11639 0037 4889D1   		movq	%rdx, %rcx
 11640 003a 4889DA   		movq	%rbx, %rdx
 11641 003d 4889C7   		movq	%rax, %rdi
 11642 0040 E8000000 		call	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt1
 11642      00
 11643 0045 4883C418 		addq	$24, %rsp
 11644 0049 5B       		popq	%rbx
 11645 004a 5D       		popq	%rbp
 11646              		.cfi_def_cfa 7, 8
 11647 004b C3       		ret
 11648              		.cfi_endproc
 11649              	.LFE13714:
 11651              		.section	.text._ZNKSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIF
 11652              		.align 2
 11653              		.weak	_ZNKSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEES
 11655              	_ZNKSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt10_Sel
 11656              	.LFB13715:
 880:/usr/include/c++/6/bits/stl_tree.h ****       { return _M_impl._M_key_compare; }
 11657              		.loc 27 880 0
 11658              		.cfi_startproc
 11659 0000 55       		pushq	%rbp
 11660              		.cfi_def_cfa_offset 16
 11661              		.cfi_offset 6, -16
 11662 0001 4889E5   		movq	%rsp, %rbp
 11663              		.cfi_def_cfa_register 6
 11664 0004 48897DF8 		movq	%rdi, -8(%rbp)
 881:/usr/include/c++/6/bits/stl_tree.h **** 
 11665              		.loc 27 881 0
 11666 0008 5D       		popq	%rbp
 11667              		.cfi_def_cfa 7, 8
 11668 0009 C3       		ret
 11669              		.cfi_endproc
 11670              	.LFE13715:
 11672              		.section	.text._ZNSt13_Rb_tree_nodeISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS1_8function
 11673              		.align 2
 11674              		.weak	_ZNSt13_Rb_tree_nodeISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS1_8functionIFvS5_EEE
 11676              	_ZNSt13_Rb_tree_nodeISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS1_8functionIFvS5_EEEEE9_M_v
 11677              	.LFB13716:
 156:/usr/include/c++/6/bits/stl_tree.h ****       { return _M_storage._M_ptr(); }
 11678              		.loc 27 156 0
 11679              		.cfi_startproc
 11680 0000 55       		pushq	%rbp
 11681              		.cfi_def_cfa_offset 16
 11682              		.cfi_offset 6, -16
 11683 0001 4889E5   		movq	%rsp, %rbp
 11684              		.cfi_def_cfa_register 6
 11685 0004 4883EC10 		subq	$16, %rsp
 11686 0008 48897DF8 		movq	%rdi, -8(%rbp)
 157:/usr/include/c++/6/bits/stl_tree.h **** 
 11687              		.loc 27 157 0
 11688 000c 488B45F8 		movq	-8(%rbp), %rax
 11689 0010 4883C020 		addq	$32, %rax
GAS LISTING /tmp/ccsIN87E.s 			page 507


 11690 0014 4889C7   		movq	%rax, %rdi
 11691 0017 E8000000 		call	_ZN9__gnu_cxx16__aligned_membufISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS2_8functio
 11691      00
 11692 001c C9       		leave
 11693              		.cfi_def_cfa 7, 8
 11694 001d C3       		ret
 11695              		.cfi_endproc
 11696              	.LFE13716:
 11698              		.section	.text._ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFv
 11699              		.align 2
 11700              		.weak	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt
 11702              	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt10_Sele
 11703              	.LFB13717:
 557:/usr/include/c++/6/bits/stl_tree.h **** 	{
 11704              		.loc 27 557 0
 11705              		.cfi_startproc
 11706 0000 55       		pushq	%rbp
 11707              		.cfi_def_cfa_offset 16
 11708              		.cfi_offset 6, -16
 11709 0001 4889E5   		movq	%rsp, %rbp
 11710              		.cfi_def_cfa_register 6
 11711 0004 4154     		pushq	%r12
 11712 0006 53       		pushq	%rbx
 11713 0007 4883EC30 		subq	$48, %rsp
 11714              		.cfi_offset 12, -24
 11715              		.cfi_offset 3, -32
 11716 000b 48897DD8 		movq	%rdi, -40(%rbp)
 11717 000f 488975D0 		movq	%rsi, -48(%rbp)
 11718 0013 488955C8 		movq	%rdx, -56(%rbp)
 11719 0017 48894DC0 		movq	%rcx, -64(%rbp)
 559:/usr/include/c++/6/bits/stl_tree.h **** 	  _M_construct_node(__tmp, std::forward<_Args>(__args)...);
 11720              		.loc 27 559 0
 11721 001b 488B45D8 		movq	-40(%rbp), %rax
 11722 001f 4889C7   		movq	%rax, %rdi
 11723 0022 E8000000 		call	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt1
 11723      00
 11724 0027 488945E8 		movq	%rax, -24(%rbp)
 560:/usr/include/c++/6/bits/stl_tree.h **** 	  return __tmp;
 11725              		.loc 27 560 0
 11726 002b 488B45C0 		movq	-64(%rbp), %rax
 11727 002f 4889C7   		movq	%rax, %rdi
 11728 0032 E8000000 		call	_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE
 11728      00
 11729 0037 4989C4   		movq	%rax, %r12
 11730 003a 488B45C8 		movq	-56(%rbp), %rax
 11731 003e 4889C7   		movq	%rax, %rdi
 11732 0041 E8000000 		call	_ZSt7forwardISt5tupleIJRKN5boost13intrusive_ptrIN3pmt8pmt_baseEEEEEEOT_RNSt16remove_reference
 11732      00
 11733 0046 4889C3   		movq	%rax, %rbx
 11734 0049 488B45D0 		movq	-48(%rbp), %rax
 11735 004d 4889C7   		movq	%rax, %rdi
 11736 0050 E8000000 		call	_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE
 11736      00
 11737 0055 4889C2   		movq	%rax, %rdx
 11738 0058 488B75E8 		movq	-24(%rbp), %rsi
 11739 005c 488B45D8 		movq	-40(%rbp), %rax
 11740 0060 4D89E0   		movq	%r12, %r8
GAS LISTING /tmp/ccsIN87E.s 			page 508


 11741 0063 4889D9   		movq	%rbx, %rcx
 11742 0066 4889C7   		movq	%rax, %rdi
 11743 0069 E8000000 		call	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt1
 11743      00
 561:/usr/include/c++/6/bits/stl_tree.h **** 	}
 11744              		.loc 27 561 0
 11745 006e 488B45E8 		movq	-24(%rbp), %rax
 562:/usr/include/c++/6/bits/stl_tree.h **** 
 11746              		.loc 27 562 0
 11747 0072 4883C430 		addq	$48, %rsp
 11748 0076 5B       		popq	%rbx
 11749 0077 415C     		popq	%r12
 11750 0079 5D       		popq	%rbp
 11751              		.cfi_def_cfa 7, 8
 11752 007a C3       		ret
 11753              		.cfi_endproc
 11754              	.LFE13717:
 11756              		.section	.text._ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE,"axG",@p
 11757              		.weak	_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE
 11759              	_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE:
 11760              	.LFB13728:
  76:/usr/include/c++/6/bits/move.h ****     { return static_cast<_Tp&&>(__t); }
 11761              		.loc 33 76 0
 11762              		.cfi_startproc
 11763 0000 55       		pushq	%rbp
 11764              		.cfi_def_cfa_offset 16
 11765              		.cfi_offset 6, -16
 11766 0001 4889E5   		movq	%rsp, %rbp
 11767              		.cfi_def_cfa_register 6
 11768 0004 48897DF8 		movq	%rdi, -8(%rbp)
  77:/usr/include/c++/6/bits/move.h **** 
 11769              		.loc 33 77 0
 11770 0008 488B45F8 		movq	-8(%rbp), %rax
 11771 000c 5D       		popq	%rbp
 11772              		.cfi_def_cfa 7, 8
 11773 000d C3       		ret
 11774              		.cfi_endproc
 11775              	.LFE13728:
 11777              		.section	.text._ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_Lb1EEERKS1_OT_,"axG",@progbits,_ZNSt4p
 11778              		.align 2
 11779              		.weak	_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_Lb1EEERKS1_OT_
 11781              	_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_Lb1EEERKS1_OT_:
 11782              	.LFB13729:
 11783              		.file 41 "/usr/include/c++/6/bits/stl_pair.h"
   1:/usr/include/c++/6/bits/stl_pair.h **** // Pair implementation -*- C++ -*-
   2:/usr/include/c++/6/bits/stl_pair.h **** 
   3:/usr/include/c++/6/bits/stl_pair.h **** // Copyright (C) 2001-2016 Free Software Foundation, Inc.
   4:/usr/include/c++/6/bits/stl_pair.h **** //
   5:/usr/include/c++/6/bits/stl_pair.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/6/bits/stl_pair.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/6/bits/stl_pair.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/6/bits/stl_pair.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/6/bits/stl_pair.h **** // any later version.
  10:/usr/include/c++/6/bits/stl_pair.h **** 
  11:/usr/include/c++/6/bits/stl_pair.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/6/bits/stl_pair.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/6/bits/stl_pair.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GAS LISTING /tmp/ccsIN87E.s 			page 509


  14:/usr/include/c++/6/bits/stl_pair.h **** // GNU General Public License for more details.
  15:/usr/include/c++/6/bits/stl_pair.h **** 
  16:/usr/include/c++/6/bits/stl_pair.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/6/bits/stl_pair.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/6/bits/stl_pair.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/6/bits/stl_pair.h **** 
  20:/usr/include/c++/6/bits/stl_pair.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/6/bits/stl_pair.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/6/bits/stl_pair.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/6/bits/stl_pair.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/6/bits/stl_pair.h **** 
  25:/usr/include/c++/6/bits/stl_pair.h **** /*
  26:/usr/include/c++/6/bits/stl_pair.h ****  *
  27:/usr/include/c++/6/bits/stl_pair.h ****  * Copyright (c) 1994
  28:/usr/include/c++/6/bits/stl_pair.h ****  * Hewlett-Packard Company
  29:/usr/include/c++/6/bits/stl_pair.h ****  *
  30:/usr/include/c++/6/bits/stl_pair.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:/usr/include/c++/6/bits/stl_pair.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:/usr/include/c++/6/bits/stl_pair.h ****  * provided that the above copyright notice appear in all copies and
  33:/usr/include/c++/6/bits/stl_pair.h ****  * that both that copyright notice and this permission notice appear
  34:/usr/include/c++/6/bits/stl_pair.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:/usr/include/c++/6/bits/stl_pair.h ****  * representations about the suitability of this software for any
  36:/usr/include/c++/6/bits/stl_pair.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:/usr/include/c++/6/bits/stl_pair.h ****  *
  38:/usr/include/c++/6/bits/stl_pair.h ****  *
  39:/usr/include/c++/6/bits/stl_pair.h ****  * Copyright (c) 1996,1997
  40:/usr/include/c++/6/bits/stl_pair.h ****  * Silicon Graphics Computer Systems, Inc.
  41:/usr/include/c++/6/bits/stl_pair.h ****  *
  42:/usr/include/c++/6/bits/stl_pair.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:/usr/include/c++/6/bits/stl_pair.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:/usr/include/c++/6/bits/stl_pair.h ****  * provided that the above copyright notice appear in all copies and
  45:/usr/include/c++/6/bits/stl_pair.h ****  * that both that copyright notice and this permission notice appear
  46:/usr/include/c++/6/bits/stl_pair.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:/usr/include/c++/6/bits/stl_pair.h ****  * representations about the suitability of this software for any
  48:/usr/include/c++/6/bits/stl_pair.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:/usr/include/c++/6/bits/stl_pair.h ****  */
  50:/usr/include/c++/6/bits/stl_pair.h **** 
  51:/usr/include/c++/6/bits/stl_pair.h **** /** @file bits/stl_pair.h
  52:/usr/include/c++/6/bits/stl_pair.h ****  *  This is an internal header file, included by other library headers.
  53:/usr/include/c++/6/bits/stl_pair.h ****  *  Do not attempt to use it directly. @headername{utility}
  54:/usr/include/c++/6/bits/stl_pair.h ****  */
  55:/usr/include/c++/6/bits/stl_pair.h **** 
  56:/usr/include/c++/6/bits/stl_pair.h **** #ifndef _STL_PAIR_H
  57:/usr/include/c++/6/bits/stl_pair.h **** #define _STL_PAIR_H 1
  58:/usr/include/c++/6/bits/stl_pair.h **** 
  59:/usr/include/c++/6/bits/stl_pair.h **** #include <bits/move.h> // for std::move / std::forward, and std::swap
  60:/usr/include/c++/6/bits/stl_pair.h **** 
  61:/usr/include/c++/6/bits/stl_pair.h **** #if __cplusplus >= 201103L
  62:/usr/include/c++/6/bits/stl_pair.h **** #include <type_traits> // for std::__decay_and_strip too
  63:/usr/include/c++/6/bits/stl_pair.h **** #endif
  64:/usr/include/c++/6/bits/stl_pair.h **** 
  65:/usr/include/c++/6/bits/stl_pair.h **** namespace std _GLIBCXX_VISIBILITY(default)
  66:/usr/include/c++/6/bits/stl_pair.h **** {
  67:/usr/include/c++/6/bits/stl_pair.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  68:/usr/include/c++/6/bits/stl_pair.h **** 
  69:/usr/include/c++/6/bits/stl_pair.h ****   /**
  70:/usr/include/c++/6/bits/stl_pair.h ****    *  @addtogroup utilities
GAS LISTING /tmp/ccsIN87E.s 			page 510


  71:/usr/include/c++/6/bits/stl_pair.h ****    *  @{
  72:/usr/include/c++/6/bits/stl_pair.h ****    */
  73:/usr/include/c++/6/bits/stl_pair.h **** 
  74:/usr/include/c++/6/bits/stl_pair.h **** #if __cplusplus >= 201103L
  75:/usr/include/c++/6/bits/stl_pair.h ****   /// piecewise_construct_t
  76:/usr/include/c++/6/bits/stl_pair.h ****   struct piecewise_construct_t { explicit piecewise_construct_t() = default; };
  77:/usr/include/c++/6/bits/stl_pair.h **** 
  78:/usr/include/c++/6/bits/stl_pair.h ****   /// piecewise_construct
  79:/usr/include/c++/6/bits/stl_pair.h ****   constexpr piecewise_construct_t piecewise_construct = piecewise_construct_t();
  80:/usr/include/c++/6/bits/stl_pair.h **** 
  81:/usr/include/c++/6/bits/stl_pair.h ****   // Forward declarations.
  82:/usr/include/c++/6/bits/stl_pair.h ****   template<typename...>
  83:/usr/include/c++/6/bits/stl_pair.h ****     class tuple;
  84:/usr/include/c++/6/bits/stl_pair.h **** 
  85:/usr/include/c++/6/bits/stl_pair.h ****   template<std::size_t...>
  86:/usr/include/c++/6/bits/stl_pair.h ****     struct _Index_tuple;
  87:/usr/include/c++/6/bits/stl_pair.h **** 
  88:/usr/include/c++/6/bits/stl_pair.h ****   // Concept utility functions, reused in conditionally-explicit
  89:/usr/include/c++/6/bits/stl_pair.h ****   // constructors.
  90:/usr/include/c++/6/bits/stl_pair.h ****   // See PR 70437, don't look at is_constructible or
  91:/usr/include/c++/6/bits/stl_pair.h ****   // is_convertible if the types are the same to
  92:/usr/include/c++/6/bits/stl_pair.h ****   // avoid querying those properties for incomplete types.
  93:/usr/include/c++/6/bits/stl_pair.h ****   template <bool, typename _T1, typename _T2>
  94:/usr/include/c++/6/bits/stl_pair.h ****     struct _PCC
  95:/usr/include/c++/6/bits/stl_pair.h ****     {
  96:/usr/include/c++/6/bits/stl_pair.h ****       template <typename _U1, typename _U2>
  97:/usr/include/c++/6/bits/stl_pair.h ****       static constexpr bool _ConstructiblePair()
  98:/usr/include/c++/6/bits/stl_pair.h ****       {
  99:/usr/include/c++/6/bits/stl_pair.h **** 	return __and_<is_constructible<_T1, const _U1&>,
 100:/usr/include/c++/6/bits/stl_pair.h **** 		      is_constructible<_T2, const _U2&>>::value;
 101:/usr/include/c++/6/bits/stl_pair.h ****       }
 102:/usr/include/c++/6/bits/stl_pair.h **** 
 103:/usr/include/c++/6/bits/stl_pair.h ****       template <typename _U1, typename _U2>
 104:/usr/include/c++/6/bits/stl_pair.h ****       static constexpr bool _ImplicitlyConvertiblePair()
 105:/usr/include/c++/6/bits/stl_pair.h ****       {
 106:/usr/include/c++/6/bits/stl_pair.h **** 	return __and_<is_convertible<const _U1&, _T1>,
 107:/usr/include/c++/6/bits/stl_pair.h **** 		      is_convertible<const _U2&, _T2>>::value;
 108:/usr/include/c++/6/bits/stl_pair.h ****       }
 109:/usr/include/c++/6/bits/stl_pair.h **** 
 110:/usr/include/c++/6/bits/stl_pair.h ****       template <typename _U1, typename _U2>
 111:/usr/include/c++/6/bits/stl_pair.h ****       static constexpr bool _MoveConstructiblePair()
 112:/usr/include/c++/6/bits/stl_pair.h ****       {
 113:/usr/include/c++/6/bits/stl_pair.h **** 	return __and_<is_constructible<_T1, _U1&&>,
 114:/usr/include/c++/6/bits/stl_pair.h **** 		      is_constructible<_T2, _U2&&>>::value;
 115:/usr/include/c++/6/bits/stl_pair.h ****       }
 116:/usr/include/c++/6/bits/stl_pair.h **** 
 117:/usr/include/c++/6/bits/stl_pair.h ****       template <typename _U1, typename _U2>
 118:/usr/include/c++/6/bits/stl_pair.h ****       static constexpr bool _ImplicitlyMoveConvertiblePair()
 119:/usr/include/c++/6/bits/stl_pair.h ****       {
 120:/usr/include/c++/6/bits/stl_pair.h **** 	return __and_<is_convertible<_U1&&, _T1>,
 121:/usr/include/c++/6/bits/stl_pair.h **** 		      is_convertible<_U2&&, _T2>>::value;
 122:/usr/include/c++/6/bits/stl_pair.h ****       }
 123:/usr/include/c++/6/bits/stl_pair.h **** 
 124:/usr/include/c++/6/bits/stl_pair.h ****       template <bool __implicit, typename _U1, typename _U2>
 125:/usr/include/c++/6/bits/stl_pair.h ****       static constexpr bool _CopyMovePair()
 126:/usr/include/c++/6/bits/stl_pair.h ****       {
 127:/usr/include/c++/6/bits/stl_pair.h **** 	using __do_converts = __and_<is_convertible<const _U1&, _T1>,
GAS LISTING /tmp/ccsIN87E.s 			page 511


 128:/usr/include/c++/6/bits/stl_pair.h **** 				  is_convertible<_U2&&, _T2>>;
 129:/usr/include/c++/6/bits/stl_pair.h **** 	using __converts = typename conditional<__implicit,
 130:/usr/include/c++/6/bits/stl_pair.h **** 				       __do_converts,
 131:/usr/include/c++/6/bits/stl_pair.h **** 				       __not_<__do_converts>>::type;
 132:/usr/include/c++/6/bits/stl_pair.h **** 	return __and_<is_constructible<_T1, const _U1&>,
 133:/usr/include/c++/6/bits/stl_pair.h **** 		      is_constructible<_T2, _U2&&>,
 134:/usr/include/c++/6/bits/stl_pair.h **** 		      __converts
 135:/usr/include/c++/6/bits/stl_pair.h **** 		      >::value;
 136:/usr/include/c++/6/bits/stl_pair.h ****       }
 137:/usr/include/c++/6/bits/stl_pair.h **** 
 138:/usr/include/c++/6/bits/stl_pair.h ****       template <bool __implicit, typename _U1, typename _U2>
 139:/usr/include/c++/6/bits/stl_pair.h ****       static constexpr bool _MoveCopyPair()
 140:/usr/include/c++/6/bits/stl_pair.h ****       {
 141:/usr/include/c++/6/bits/stl_pair.h **** 	using __do_converts = __and_<is_convertible<_U1&&, _T1>,
 142:/usr/include/c++/6/bits/stl_pair.h **** 				  is_convertible<const _U2&, _T2>>;
 143:/usr/include/c++/6/bits/stl_pair.h **** 	using __converts = typename conditional<__implicit,
 144:/usr/include/c++/6/bits/stl_pair.h **** 				       __do_converts,
 145:/usr/include/c++/6/bits/stl_pair.h **** 				       __not_<__do_converts>>::type;
 146:/usr/include/c++/6/bits/stl_pair.h **** 	return __and_<is_constructible<_T1, _U1&&>,
 147:/usr/include/c++/6/bits/stl_pair.h **** 		      is_constructible<_T2, const _U2&&>,
 148:/usr/include/c++/6/bits/stl_pair.h **** 		      __converts
 149:/usr/include/c++/6/bits/stl_pair.h **** 		      >::value;
 150:/usr/include/c++/6/bits/stl_pair.h ****       }
 151:/usr/include/c++/6/bits/stl_pair.h ****   };
 152:/usr/include/c++/6/bits/stl_pair.h **** 
 153:/usr/include/c++/6/bits/stl_pair.h ****   template <typename _T1, typename _T2>
 154:/usr/include/c++/6/bits/stl_pair.h ****     struct _PCC<false, _T1, _T2>
 155:/usr/include/c++/6/bits/stl_pair.h ****     {
 156:/usr/include/c++/6/bits/stl_pair.h ****       template <typename _U1, typename _U2>
 157:/usr/include/c++/6/bits/stl_pair.h ****       static constexpr bool _ConstructiblePair()
 158:/usr/include/c++/6/bits/stl_pair.h ****       {
 159:/usr/include/c++/6/bits/stl_pair.h **** 	return false;
 160:/usr/include/c++/6/bits/stl_pair.h ****       }
 161:/usr/include/c++/6/bits/stl_pair.h **** 
 162:/usr/include/c++/6/bits/stl_pair.h ****       template <typename _U1, typename _U2>
 163:/usr/include/c++/6/bits/stl_pair.h ****       static constexpr bool _ImplicitlyConvertiblePair()
 164:/usr/include/c++/6/bits/stl_pair.h ****       {
 165:/usr/include/c++/6/bits/stl_pair.h **** 	return false;
 166:/usr/include/c++/6/bits/stl_pair.h ****       }
 167:/usr/include/c++/6/bits/stl_pair.h **** 
 168:/usr/include/c++/6/bits/stl_pair.h ****       template <typename _U1, typename _U2>
 169:/usr/include/c++/6/bits/stl_pair.h ****       static constexpr bool _MoveConstructiblePair()
 170:/usr/include/c++/6/bits/stl_pair.h ****       {
 171:/usr/include/c++/6/bits/stl_pair.h **** 	return false;
 172:/usr/include/c++/6/bits/stl_pair.h ****       }
 173:/usr/include/c++/6/bits/stl_pair.h **** 
 174:/usr/include/c++/6/bits/stl_pair.h ****       template <typename _U1, typename _U2>
 175:/usr/include/c++/6/bits/stl_pair.h ****       static constexpr bool _ImplicitlyMoveConvertiblePair()
 176:/usr/include/c++/6/bits/stl_pair.h ****       {
 177:/usr/include/c++/6/bits/stl_pair.h **** 	return false;
 178:/usr/include/c++/6/bits/stl_pair.h ****       }
 179:/usr/include/c++/6/bits/stl_pair.h ****   };
 180:/usr/include/c++/6/bits/stl_pair.h **** 
 181:/usr/include/c++/6/bits/stl_pair.h ****   struct __wrap_nonesuch : std::__nonesuch {
 182:/usr/include/c++/6/bits/stl_pair.h ****     explicit __wrap_nonesuch(const __nonesuch&) = delete;
 183:/usr/include/c++/6/bits/stl_pair.h ****   };
 184:/usr/include/c++/6/bits/stl_pair.h ****   
GAS LISTING /tmp/ccsIN87E.s 			page 512


 185:/usr/include/c++/6/bits/stl_pair.h **** #endif
 186:/usr/include/c++/6/bits/stl_pair.h **** 
 187:/usr/include/c++/6/bits/stl_pair.h ****  /**
 188:/usr/include/c++/6/bits/stl_pair.h ****    *  @brief Struct holding two objects of arbitrary type.
 189:/usr/include/c++/6/bits/stl_pair.h ****    *
 190:/usr/include/c++/6/bits/stl_pair.h ****    *  @tparam _T1  Type of first object.
 191:/usr/include/c++/6/bits/stl_pair.h ****    *  @tparam _T2  Type of second object.
 192:/usr/include/c++/6/bits/stl_pair.h ****    */
 193:/usr/include/c++/6/bits/stl_pair.h ****   template<typename _T1, typename _T2>
 194:/usr/include/c++/6/bits/stl_pair.h ****     struct pair
 195:/usr/include/c++/6/bits/stl_pair.h ****     {
 196:/usr/include/c++/6/bits/stl_pair.h ****       typedef _T1 first_type;    /// @c first_type is the first bound type
 197:/usr/include/c++/6/bits/stl_pair.h ****       typedef _T2 second_type;   /// @c second_type is the second bound type
 198:/usr/include/c++/6/bits/stl_pair.h **** 
 199:/usr/include/c++/6/bits/stl_pair.h ****       _T1 first;                 /// @c first is a copy of the first object
 200:/usr/include/c++/6/bits/stl_pair.h ****       _T2 second;                /// @c second is a copy of the second object
 201:/usr/include/c++/6/bits/stl_pair.h **** 
 202:/usr/include/c++/6/bits/stl_pair.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 203:/usr/include/c++/6/bits/stl_pair.h ****       // 265.  std::pair::pair() effects overly restrictive
 204:/usr/include/c++/6/bits/stl_pair.h ****       /** The default constructor creates @c first and @c second using their
 205:/usr/include/c++/6/bits/stl_pair.h ****        *  respective default constructors.  */
 206:/usr/include/c++/6/bits/stl_pair.h **** #if __cplusplus >= 201103L
 207:/usr/include/c++/6/bits/stl_pair.h ****       template <typename _U1 = _T1,
 208:/usr/include/c++/6/bits/stl_pair.h ****                 typename _U2 = _T2,
 209:/usr/include/c++/6/bits/stl_pair.h ****                 typename enable_if<__and_<
 210:/usr/include/c++/6/bits/stl_pair.h ****                                      __is_implicitly_default_constructible<_U1>,
 211:/usr/include/c++/6/bits/stl_pair.h ****                                      __is_implicitly_default_constructible<_U2>>
 212:/usr/include/c++/6/bits/stl_pair.h ****                                    ::value, bool>::type = true>
 213:/usr/include/c++/6/bits/stl_pair.h **** #endif
 214:/usr/include/c++/6/bits/stl_pair.h ****       _GLIBCXX_CONSTEXPR pair()
 215:/usr/include/c++/6/bits/stl_pair.h ****       : first(), second() { }
 216:/usr/include/c++/6/bits/stl_pair.h **** 
 217:/usr/include/c++/6/bits/stl_pair.h **** #if __cplusplus >= 201103L
 218:/usr/include/c++/6/bits/stl_pair.h ****       template <typename _U1 = _T1,
 219:/usr/include/c++/6/bits/stl_pair.h ****                 typename _U2 = _T2,
 220:/usr/include/c++/6/bits/stl_pair.h ****                 typename enable_if<__and_<
 221:/usr/include/c++/6/bits/stl_pair.h ****                        is_default_constructible<_U1>,
 222:/usr/include/c++/6/bits/stl_pair.h ****                        is_default_constructible<_U2>,
 223:/usr/include/c++/6/bits/stl_pair.h ****                        __not_<
 224:/usr/include/c++/6/bits/stl_pair.h ****                          __and_<__is_implicitly_default_constructible<_U1>,
 225:/usr/include/c++/6/bits/stl_pair.h ****                                 __is_implicitly_default_constructible<_U2>>>>
 226:/usr/include/c++/6/bits/stl_pair.h ****                                    ::value, bool>::type = false>
 227:/usr/include/c++/6/bits/stl_pair.h ****       explicit constexpr pair()
 228:/usr/include/c++/6/bits/stl_pair.h ****       : first(), second() { }
 229:/usr/include/c++/6/bits/stl_pair.h **** #endif
 230:/usr/include/c++/6/bits/stl_pair.h **** 
 231:/usr/include/c++/6/bits/stl_pair.h ****       /** Two objects may be passed to a @c pair constructor to be copied.  */
 232:/usr/include/c++/6/bits/stl_pair.h **** #if __cplusplus < 201103L
 233:/usr/include/c++/6/bits/stl_pair.h ****       pair(const _T1& __a, const _T2& __b)
 234:/usr/include/c++/6/bits/stl_pair.h ****       : first(__a), second(__b) { }
 235:/usr/include/c++/6/bits/stl_pair.h **** #else
 236:/usr/include/c++/6/bits/stl_pair.h ****       // Shortcut for constraining the templates that don't take pairs.
 237:/usr/include/c++/6/bits/stl_pair.h ****       using _PCCP = _PCC<true, _T1, _T2>;
 238:/usr/include/c++/6/bits/stl_pair.h **** 
 239:/usr/include/c++/6/bits/stl_pair.h ****       template<typename _U1 = _T1, typename _U2=_T2, typename
 240:/usr/include/c++/6/bits/stl_pair.h **** 	       enable_if<_PCCP::template
 241:/usr/include/c++/6/bits/stl_pair.h **** 			   _ConstructiblePair<_U1, _U2>()
GAS LISTING /tmp/ccsIN87E.s 			page 513


 242:/usr/include/c++/6/bits/stl_pair.h **** 	                 && _PCCP::template
 243:/usr/include/c++/6/bits/stl_pair.h **** 			   _ImplicitlyConvertiblePair<_U1, _U2>(),
 244:/usr/include/c++/6/bits/stl_pair.h ****                          bool>::type=true>
 245:/usr/include/c++/6/bits/stl_pair.h ****       constexpr pair(const _T1& __a, const _T2& __b)
 246:/usr/include/c++/6/bits/stl_pair.h ****       : first(__a), second(__b) { }
 247:/usr/include/c++/6/bits/stl_pair.h **** 
 248:/usr/include/c++/6/bits/stl_pair.h ****        template<typename _U1 = _T1, typename _U2=_T2, typename
 249:/usr/include/c++/6/bits/stl_pair.h **** 		enable_if<_PCCP::template
 250:/usr/include/c++/6/bits/stl_pair.h **** 			    _ConstructiblePair<_U1, _U2>()
 251:/usr/include/c++/6/bits/stl_pair.h **** 	                  && !_PCCP::template
 252:/usr/include/c++/6/bits/stl_pair.h **** 			    _ImplicitlyConvertiblePair<_U1, _U2>(),
 253:/usr/include/c++/6/bits/stl_pair.h ****                          bool>::type=false>
 254:/usr/include/c++/6/bits/stl_pair.h ****       explicit constexpr pair(const _T1& __a, const _T2& __b)
 255:/usr/include/c++/6/bits/stl_pair.h ****       : first(__a), second(__b) { }
 256:/usr/include/c++/6/bits/stl_pair.h **** #endif
 257:/usr/include/c++/6/bits/stl_pair.h **** 
 258:/usr/include/c++/6/bits/stl_pair.h ****       /** There is also a templated copy ctor for the @c pair class itself.  */
 259:/usr/include/c++/6/bits/stl_pair.h **** #if __cplusplus < 201103L
 260:/usr/include/c++/6/bits/stl_pair.h ****       template<typename _U1, typename _U2>
 261:/usr/include/c++/6/bits/stl_pair.h **** 	pair(const pair<_U1, _U2>& __p)
 262:/usr/include/c++/6/bits/stl_pair.h **** 	: first(__p.first), second(__p.second) { }
 263:/usr/include/c++/6/bits/stl_pair.h **** #else
 264:/usr/include/c++/6/bits/stl_pair.h ****       // Shortcut for constraining the templates that take pairs.
 265:/usr/include/c++/6/bits/stl_pair.h ****       template <typename _U1, typename _U2>
 266:/usr/include/c++/6/bits/stl_pair.h ****         using _PCCFP = _PCC<!is_same<_T1, _U1>::value
 267:/usr/include/c++/6/bits/stl_pair.h **** 			    || !is_same<_T2, _U2>::value,
 268:/usr/include/c++/6/bits/stl_pair.h **** 			    _T1, _T2>;
 269:/usr/include/c++/6/bits/stl_pair.h **** 
 270:/usr/include/c++/6/bits/stl_pair.h ****       template<typename _U1, typename _U2, typename
 271:/usr/include/c++/6/bits/stl_pair.h **** 	       enable_if<_PCCFP<_U1, _U2>::template
 272:/usr/include/c++/6/bits/stl_pair.h **** 			   _ConstructiblePair<_U1, _U2>()
 273:/usr/include/c++/6/bits/stl_pair.h **** 	                 && _PCCFP<_U1, _U2>::template
 274:/usr/include/c++/6/bits/stl_pair.h **** 			   _ImplicitlyConvertiblePair<_U1, _U2>(),
 275:/usr/include/c++/6/bits/stl_pair.h **** 			  bool>::type=true>
 276:/usr/include/c++/6/bits/stl_pair.h ****         constexpr pair(const pair<_U1, _U2>& __p)
 277:/usr/include/c++/6/bits/stl_pair.h ****         : first(__p.first), second(__p.second) { }
 278:/usr/include/c++/6/bits/stl_pair.h **** 
 279:/usr/include/c++/6/bits/stl_pair.h ****       template<typename _U1, typename _U2, typename
 280:/usr/include/c++/6/bits/stl_pair.h **** 	       enable_if<_PCCFP<_U1, _U2>::template
 281:/usr/include/c++/6/bits/stl_pair.h **** 			   _ConstructiblePair<_U1, _U2>()
 282:/usr/include/c++/6/bits/stl_pair.h **** 			 && !_PCCFP<_U1, _U2>::template
 283:/usr/include/c++/6/bits/stl_pair.h **** 			   _ImplicitlyConvertiblePair<_U1, _U2>(),
 284:/usr/include/c++/6/bits/stl_pair.h ****                          bool>::type=false>
 285:/usr/include/c++/6/bits/stl_pair.h **** 	explicit constexpr pair(const pair<_U1, _U2>& __p)
 286:/usr/include/c++/6/bits/stl_pair.h **** 	: first(__p.first), second(__p.second) { }
 287:/usr/include/c++/6/bits/stl_pair.h **** 
 288:/usr/include/c++/6/bits/stl_pair.h ****       constexpr pair(const pair&) = default;
 289:/usr/include/c++/6/bits/stl_pair.h ****       constexpr pair(pair&&) = default;
 290:/usr/include/c++/6/bits/stl_pair.h **** 
 291:/usr/include/c++/6/bits/stl_pair.h ****       // DR 811.
 292:/usr/include/c++/6/bits/stl_pair.h ****       template<typename _U1, typename
 293:/usr/include/c++/6/bits/stl_pair.h **** 	       enable_if<_PCCP::template
 294:/usr/include/c++/6/bits/stl_pair.h **** 			   _MoveCopyPair<true, _U1, _T2>(),
 295:/usr/include/c++/6/bits/stl_pair.h ****                          bool>::type=true>
 296:/usr/include/c++/6/bits/stl_pair.h ****        constexpr pair(_U1&& __x, const _T2& __y)
 297:/usr/include/c++/6/bits/stl_pair.h ****        : first(std::forward<_U1>(__x)), second(__y) { }
 298:/usr/include/c++/6/bits/stl_pair.h **** 
GAS LISTING /tmp/ccsIN87E.s 			page 514


 299:/usr/include/c++/6/bits/stl_pair.h ****       template<typename _U1, typename
 300:/usr/include/c++/6/bits/stl_pair.h **** 	       enable_if<_PCCP::template
 301:/usr/include/c++/6/bits/stl_pair.h **** 			   _MoveCopyPair<false, _U1, _T2>(),
 302:/usr/include/c++/6/bits/stl_pair.h ****                          bool>::type=false>
 303:/usr/include/c++/6/bits/stl_pair.h ****        explicit constexpr pair(_U1&& __x, const _T2& __y)
 304:/usr/include/c++/6/bits/stl_pair.h ****        : first(std::forward<_U1>(__x)), second(__y) { }
 305:/usr/include/c++/6/bits/stl_pair.h **** 
 306:/usr/include/c++/6/bits/stl_pair.h ****       template<typename _U2, typename
 307:/usr/include/c++/6/bits/stl_pair.h **** 	       enable_if<_PCCP::template
 308:/usr/include/c++/6/bits/stl_pair.h **** 			   _CopyMovePair<true, _T1, _U2>(),
 309:/usr/include/c++/6/bits/stl_pair.h ****                          bool>::type=true>
 310:/usr/include/c++/6/bits/stl_pair.h ****        constexpr pair(const _T1& __x, _U2&& __y)
 11784              		.loc 41 310 0
 11785              		.cfi_startproc
 11786 0000 55       		pushq	%rbp
 11787              		.cfi_def_cfa_offset 16
 11788              		.cfi_offset 6, -16
 11789 0001 4889E5   		movq	%rsp, %rbp
 11790              		.cfi_def_cfa_register 6
 11791 0004 4883EC20 		subq	$32, %rsp
 11792 0008 48897DF8 		movq	%rdi, -8(%rbp)
 11793 000c 488975F0 		movq	%rsi, -16(%rbp)
 11794 0010 488955E8 		movq	%rdx, -24(%rbp)
 11795              	.LBB111:
 311:/usr/include/c++/6/bits/stl_pair.h ****        : first(__x), second(std::forward<_U2>(__y)) { }
 11796              		.loc 41 311 0
 11797 0014 488B45F0 		movq	-16(%rbp), %rax
 11798 0018 488B10   		movq	(%rax), %rdx
 11799 001b 488B45F8 		movq	-8(%rbp), %rax
 11800 001f 488910   		movq	%rdx, (%rax)
 11801 0022 488B45E8 		movq	-24(%rbp), %rax
 11802 0026 4889C7   		movq	%rax, %rdi
 11803 0029 E8000000 		call	_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE
 11803      00
 11804 002e 488B10   		movq	(%rax), %rdx
 11805 0031 488B45F8 		movq	-8(%rbp), %rax
 11806 0035 48895008 		movq	%rdx, 8(%rax)
 11807              	.LBE111:
 11808 0039 90       		nop
 11809 003a C9       		leave
 11810              		.cfi_def_cfa 7, 8
 11811 003b C3       		ret
 11812              		.cfi_endproc
 11813              	.LFE13729:
 11815              		.weak	_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_Lb1EEERKS1_OT_
 11816              		.set	_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_Lb1EEERKS1_OT_,_ZNSt4pairIPSt18_Rb_tree_node_bas
 11817              		.section	.text._ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_S4_Lb1EEEOT_OT0_,"axG",@progbits,_ZNSt
 11818              		.align 2
 11819              		.weak	_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_S4_Lb1EEEOT_OT0_
 11821              	_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_S4_Lb1EEEOT_OT0_:
 11822              	.LFB13736:
 312:/usr/include/c++/6/bits/stl_pair.h **** 
 313:/usr/include/c++/6/bits/stl_pair.h ****       template<typename _U2, typename
 314:/usr/include/c++/6/bits/stl_pair.h **** 	       enable_if<_PCCP::template
 315:/usr/include/c++/6/bits/stl_pair.h **** 			   _CopyMovePair<false, _T1, _U2>(),
 316:/usr/include/c++/6/bits/stl_pair.h ****                          bool>::type=false>
 317:/usr/include/c++/6/bits/stl_pair.h ****        explicit pair(const _T1& __x, _U2&& __y)
GAS LISTING /tmp/ccsIN87E.s 			page 515


 318:/usr/include/c++/6/bits/stl_pair.h ****        : first(__x), second(std::forward<_U2>(__y)) { }
 319:/usr/include/c++/6/bits/stl_pair.h **** 
 320:/usr/include/c++/6/bits/stl_pair.h ****       template<typename _U1, typename _U2, typename
 321:/usr/include/c++/6/bits/stl_pair.h **** 	       enable_if<_PCCP::template
 322:/usr/include/c++/6/bits/stl_pair.h **** 			   _MoveConstructiblePair<_U1, _U2>()
 323:/usr/include/c++/6/bits/stl_pair.h **** 			  && _PCCP::template
 324:/usr/include/c++/6/bits/stl_pair.h **** 			   _ImplicitlyMoveConvertiblePair<_U1, _U2>(),
 325:/usr/include/c++/6/bits/stl_pair.h ****                          bool>::type=true>
 326:/usr/include/c++/6/bits/stl_pair.h **** 	constexpr pair(_U1&& __x, _U2&& __y)
 11823              		.loc 41 326 0
 11824              		.cfi_startproc
 11825 0000 55       		pushq	%rbp
 11826              		.cfi_def_cfa_offset 16
 11827              		.cfi_offset 6, -16
 11828 0001 4889E5   		movq	%rsp, %rbp
 11829              		.cfi_def_cfa_register 6
 11830 0004 4883EC20 		subq	$32, %rsp
 11831 0008 48897DF8 		movq	%rdi, -8(%rbp)
 11832 000c 488975F0 		movq	%rsi, -16(%rbp)
 11833 0010 488955E8 		movq	%rdx, -24(%rbp)
 11834              	.LBB112:
 327:/usr/include/c++/6/bits/stl_pair.h **** 	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
 11835              		.loc 41 327 0
 11836 0014 488B45F0 		movq	-16(%rbp), %rax
 11837 0018 4889C7   		movq	%rax, %rdi
 11838 001b E8000000 		call	_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE
 11838      00
 11839 0020 488B10   		movq	(%rax), %rdx
 11840 0023 488B45F8 		movq	-8(%rbp), %rax
 11841 0027 488910   		movq	%rdx, (%rax)
 11842 002a 488B45E8 		movq	-24(%rbp), %rax
 11843 002e 4889C7   		movq	%rax, %rdi
 11844 0031 E8000000 		call	_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE
 11844      00
 11845 0036 488B10   		movq	(%rax), %rdx
 11846 0039 488B45F8 		movq	-8(%rbp), %rax
 11847 003d 48895008 		movq	%rdx, 8(%rax)
 11848              	.LBE112:
 11849 0041 90       		nop
 11850 0042 C9       		leave
 11851              		.cfi_def_cfa 7, 8
 11852 0043 C3       		ret
 11853              		.cfi_endproc
 11854              	.LFE13736:
 11856              		.weak	_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_S4_Lb1EEEOT_OT0_
 11857              		.set	_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_S4_Lb1EEEOT_OT0_,_ZNSt4pairIPSt18_Rb_tree_node_b
 11858              		.section	.text._ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_Lb1EEEOT_RKS1_,"axG",@progbits,_ZNSt4p
 11859              		.align 2
 11860              		.weak	_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_Lb1EEEOT_RKS1_
 11862              	_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_Lb1EEEOT_RKS1_:
 11863              	.LFB13743:
 296:/usr/include/c++/6/bits/stl_pair.h ****        : first(std::forward<_U1>(__x)), second(__y) { }
 11864              		.loc 41 296 0
 11865              		.cfi_startproc
 11866 0000 55       		pushq	%rbp
 11867              		.cfi_def_cfa_offset 16
 11868              		.cfi_offset 6, -16
GAS LISTING /tmp/ccsIN87E.s 			page 516


 11869 0001 4889E5   		movq	%rsp, %rbp
 11870              		.cfi_def_cfa_register 6
 11871 0004 4883EC20 		subq	$32, %rsp
 11872 0008 48897DF8 		movq	%rdi, -8(%rbp)
 11873 000c 488975F0 		movq	%rsi, -16(%rbp)
 11874 0010 488955E8 		movq	%rdx, -24(%rbp)
 11875              	.LBB113:
 297:/usr/include/c++/6/bits/stl_pair.h **** 
 11876              		.loc 41 297 0
 11877 0014 488B45F0 		movq	-16(%rbp), %rax
 11878 0018 4889C7   		movq	%rax, %rdi
 11879 001b E8000000 		call	_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE
 11879      00
 11880 0020 488B10   		movq	(%rax), %rdx
 11881 0023 488B45F8 		movq	-8(%rbp), %rax
 11882 0027 488910   		movq	%rdx, (%rax)
 11883 002a 488B45E8 		movq	-24(%rbp), %rax
 11884 002e 488B10   		movq	(%rax), %rdx
 11885 0031 488B45F8 		movq	-8(%rbp), %rax
 11886 0035 48895008 		movq	%rdx, 8(%rax)
 11887              	.LBE113:
 11888 0039 90       		nop
 11889 003a C9       		leave
 11890              		.cfi_def_cfa 7, 8
 11891 003b C3       		ret
 11892              		.cfi_endproc
 11893              	.LFE13743:
 11895              		.weak	_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_Lb1EEEOT_RKS1_
 11896              		.set	_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_Lb1EEEOT_RKS1_,_ZNSt4pairIPSt18_Rb_tree_node_bas
 11897              		.section	.text._ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFv
 11898              		.align 2
 11899              		.weak	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt
 11901              	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt10_Sele
 11902              	.LFB13718:
1928:/usr/include/c++/6/bits/stl_tree.h ****     _M_get_insert_hint_unique_pos(const_iterator __position,
 11903              		.loc 27 1928 0
 11904              		.cfi_startproc
 11905 0000 55       		pushq	%rbp
 11906              		.cfi_def_cfa_offset 16
 11907              		.cfi_offset 6, -16
 11908 0001 4889E5   		movq	%rsp, %rbp
 11909              		.cfi_def_cfa_register 6
 11910 0004 53       		pushq	%rbx
 11911 0005 4881EC18 		subq	$280, %rsp
 11911      010000
 11912              		.cfi_offset 3, -24
 11913 000c 4889BDF8 		movq	%rdi, -264(%rbp)
 11913      FEFFFF
 11914 0013 4889B5F0 		movq	%rsi, -272(%rbp)
 11914      FEFFFF
 11915 001a 488995E8 		movq	%rdx, -280(%rbp)
 11915      FEFFFF
1932:/usr/include/c++/6/bits/stl_tree.h ****       typedef pair<_Base_ptr, _Base_ptr> _Res;
 11916              		.loc 27 1932 0
 11917 0021 488D85F0 		leaq	-272(%rbp), %rax
 11917      FEFFFF
 11918 0028 4889C7   		movq	%rax, %rdi
GAS LISTING /tmp/ccsIN87E.s 			page 517


 11919 002b E8000000 		call	_ZNKSt23_Rb_tree_const_iteratorISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS1_8functio
 11919      00
 11920 0030 48898518 		movq	%rax, -232(%rbp)
 11920      FFFFFF
 11921              	.LBB114:
1936:/usr/include/c++/6/bits/stl_tree.h **** 	{
 11922              		.loc 27 1936 0
 11923 0037 488B9D18 		movq	-232(%rbp), %rbx
 11923      FFFFFF
 11924 003e 488B85F8 		movq	-264(%rbp), %rax
 11924      FEFFFF
 11925 0045 4889C7   		movq	%rax, %rdi
 11926 0048 E8000000 		call	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt1
 11926      00
 11927 004d 4839C3   		cmpq	%rax, %rbx
 11928 0050 0F94C0   		sete	%al
 11929 0053 84C0     		testb	%al, %al
 11930 0055 0F84C500 		je	.L579
 11930      0000
1938:/usr/include/c++/6/bits/stl_tree.h **** 	      && _M_impl._M_key_compare(_S_key(_M_rightmost()), __k))
 11931              		.loc 27 1938 0
 11932 005b 488B85F8 		movq	-264(%rbp), %rax
 11932      FEFFFF
 11933 0062 4889C7   		movq	%rax, %rdi
 11934 0065 E8000000 		call	_ZNKSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt
 11934      00
1939:/usr/include/c++/6/bits/stl_tree.h **** 	    return _Res(0, _M_rightmost());
 11935              		.loc 27 1939 0
 11936 006a 4885C0   		testq	%rax, %rax
 11937 006d 7441     		je	.L580
1939:/usr/include/c++/6/bits/stl_tree.h **** 	    return _Res(0, _M_rightmost());
 11938              		.loc 27 1939 0 is_stmt 0 discriminator 1
 11939 006f 488B85F8 		movq	-264(%rbp), %rax
 11939      FEFFFF
 11940 0076 4889C7   		movq	%rax, %rdi
 11941 0079 E8000000 		call	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt1
 11941      00
 11942 007e 488B00   		movq	(%rax), %rax
 11943 0081 4889C7   		movq	%rax, %rdi
 11944 0084 E8000000 		call	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt1
 11944      00
 11945 0089 4889C1   		movq	%rax, %rcx
 11946 008c 488B85F8 		movq	-264(%rbp), %rax
 11946      FEFFFF
 11947 0093 488B95E8 		movq	-280(%rbp), %rdx
 11947      FEFFFF
 11948 009a 4889CE   		movq	%rcx, %rsi
 11949 009d 4889C7   		movq	%rax, %rdi
 11950 00a0 E8000000 		call	_ZNK3pmt10comparatorclERKN5boost13intrusive_ptrINS_8pmt_baseEEES6_
 11950      00
 11951 00a5 84C0     		testb	%al, %al
 11952 00a7 7407     		je	.L580
1939:/usr/include/c++/6/bits/stl_tree.h **** 	    return _Res(0, _M_rightmost());
 11953              		.loc 27 1939 0 discriminator 5
 11954 00a9 B8010000 		movl	$1, %eax
 11954      00
 11955 00ae EB05     		jmp	.L581
GAS LISTING /tmp/ccsIN87E.s 			page 518


 11956              	.L580:
1939:/usr/include/c++/6/bits/stl_tree.h **** 	    return _Res(0, _M_rightmost());
 11957              		.loc 27 1939 0 discriminator 6
 11958 00b0 B8000000 		movl	$0, %eax
 11958      00
 11959              	.L581:
1938:/usr/include/c++/6/bits/stl_tree.h **** 	      && _M_impl._M_key_compare(_S_key(_M_rightmost()), __k))
 11960              		.loc 27 1938 0 is_stmt 1
 11961 00b5 84C0     		testb	%al, %al
 11962 00b7 7449     		je	.L582
1940:/usr/include/c++/6/bits/stl_tree.h **** 	  else
 11963              		.loc 27 1940 0
 11964 00b9 488B85F8 		movq	-264(%rbp), %rax
 11964      FEFFFF
 11965 00c0 4889C7   		movq	%rax, %rdi
 11966 00c3 E8000000 		call	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt1
 11966      00
 11967 00c8 4889C2   		movq	%rax, %rdx
 11968 00cb 48C78538 		movq	$0, -200(%rbp)
 11968      FFFFFF00 
 11968      000000
 11969 00d6 488D8D38 		leaq	-200(%rbp), %rcx
 11969      FFFFFF
 11970 00dd 488D8520 		leaq	-224(%rbp), %rax
 11970      FFFFFF
 11971 00e4 4889CE   		movq	%rcx, %rsi
 11972 00e7 4889C7   		movq	%rax, %rdi
 11973 00ea E8000000 		call	_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_Lb1EEERKS1_OT_
 11973      00
 11974 00ef 488B8520 		movq	-224(%rbp), %rax
 11974      FFFFFF
 11975 00f6 488B9528 		movq	-216(%rbp), %rdx
 11975      FFFFFF
 11976 00fd E93D0300 		jmp	.L594
 11976      00
 11977              	.L582:
1942:/usr/include/c++/6/bits/stl_tree.h **** 	}
 11978              		.loc 27 1942 0
 11979 0102 488B95E8 		movq	-280(%rbp), %rdx
 11979      FEFFFF
 11980 0109 488B85F8 		movq	-264(%rbp), %rax
 11980      FEFFFF
 11981 0110 4889D6   		movq	%rdx, %rsi
 11982 0113 4889C7   		movq	%rax, %rdi
 11983 0116 E8000000 		call	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt1
 11983      00
 11984 011b E91F0300 		jmp	.L594
 11984      00
 11985              	.L579:
 11986              	.LBB115:
 11987              	.LBB116:
1944:/usr/include/c++/6/bits/stl_tree.h **** 	{
 11988              		.loc 27 1944 0
 11989 0120 488B8518 		movq	-232(%rbp), %rax
 11989      FFFFFF
 11990 0127 4889C7   		movq	%rax, %rdi
 11991 012a E8000000 		call	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt1
GAS LISTING /tmp/ccsIN87E.s 			page 519


 11991      00
 11992 012f 4889C2   		movq	%rax, %rdx
 11993 0132 488B85F8 		movq	-264(%rbp), %rax
 11993      FEFFFF
 11994 0139 488B8DE8 		movq	-280(%rbp), %rcx
 11994      FEFFFF
 11995 0140 4889CE   		movq	%rcx, %rsi
 11996 0143 4889C7   		movq	%rax, %rdi
 11997 0146 E8000000 		call	_ZNK3pmt10comparatorclERKN5boost13intrusive_ptrINS_8pmt_baseEEES6_
 11997      00
 11998 014b 84C0     		testb	%al, %al
 11999 014d 0F846301 		je	.L584
 11999      0000
 12000              	.LBB117:
1947:/usr/include/c++/6/bits/stl_tree.h **** 	  if (__pos._M_node == _M_leftmost()) // begin()
 12001              		.loc 27 1947 0
 12002 0153 488B8518 		movq	-232(%rbp), %rax
 12002      FFFFFF
 12003 015a 48898510 		movq	%rax, -240(%rbp)
 12003      FFFFFF
1948:/usr/include/c++/6/bits/stl_tree.h **** 	    return _Res(_M_leftmost(), _M_leftmost());
 12004              		.loc 27 1948 0
 12005 0161 488B9D18 		movq	-232(%rbp), %rbx
 12005      FFFFFF
 12006 0168 488B85F8 		movq	-264(%rbp), %rax
 12006      FEFFFF
 12007 016f 4889C7   		movq	%rax, %rdi
 12008 0172 E8000000 		call	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt1
 12008      00
 12009 0177 488B00   		movq	(%rax), %rax
 12010 017a 4839C3   		cmpq	%rax, %rbx
 12011 017d 0F94C0   		sete	%al
 12012 0180 84C0     		testb	%al, %al
 12013 0182 744C     		je	.L585
1949:/usr/include/c++/6/bits/stl_tree.h **** 	  else if (_M_impl._M_key_compare(_S_key((--__before)._M_node), __k))
 12014              		.loc 27 1949 0
 12015 0184 488B85F8 		movq	-264(%rbp), %rax
 12015      FEFFFF
 12016 018b 4889C7   		movq	%rax, %rdi
 12017 018e E8000000 		call	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt1
 12017      00
 12018 0193 4889C3   		movq	%rax, %rbx
 12019 0196 488B85F8 		movq	-264(%rbp), %rax
 12019      FEFFFF
 12020 019d 4889C7   		movq	%rax, %rdi
 12021 01a0 E8000000 		call	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt1
 12021      00
 12022 01a5 4889C1   		movq	%rax, %rcx
 12023 01a8 488D8540 		leaq	-192(%rbp), %rax
 12023      FFFFFF
 12024 01af 4889DA   		movq	%rbx, %rdx
 12025 01b2 4889CE   		movq	%rcx, %rsi
 12026 01b5 4889C7   		movq	%rax, %rdi
 12027 01b8 E8000000 		call	_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_S4_Lb1EEEOT_OT0_
 12027      00
 12028 01bd 488B8540 		movq	-192(%rbp), %rax
 12028      FFFFFF
GAS LISTING /tmp/ccsIN87E.s 			page 520


 12029 01c4 488B9548 		movq	-184(%rbp), %rdx
 12029      FFFFFF
 12030 01cb E96F0200 		jmp	.L594
 12030      00
 12031              	.L585:
1950:/usr/include/c++/6/bits/stl_tree.h **** 	    {
 12032              		.loc 27 1950 0
 12033 01d0 488D8510 		leaq	-240(%rbp), %rax
 12033      FFFFFF
 12034 01d7 4889C7   		movq	%rax, %rdi
 12035 01da E8000000 		call	_ZNSt17_Rb_tree_iteratorISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS1_8functionIFvS5_
 12035      00
 12036 01df 488B00   		movq	(%rax), %rax
 12037 01e2 4889C7   		movq	%rax, %rdi
 12038 01e5 E8000000 		call	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt1
 12038      00
 12039 01ea 4889C1   		movq	%rax, %rcx
 12040 01ed 488B85F8 		movq	-264(%rbp), %rax
 12040      FEFFFF
 12041 01f4 488B95E8 		movq	-280(%rbp), %rdx
 12041      FEFFFF
 12042 01fb 4889CE   		movq	%rcx, %rsi
 12043 01fe 4889C7   		movq	%rax, %rdi
 12044 0201 E8000000 		call	_ZNK3pmt10comparatorclERKN5boost13intrusive_ptrINS_8pmt_baseEEES6_
 12044      00
 12045 0206 84C0     		testb	%al, %al
 12046 0208 0F848A00 		je	.L587
 12046      0000
1952:/usr/include/c++/6/bits/stl_tree.h **** 		return _Res(0, __before._M_node);
 12047              		.loc 27 1952 0
 12048 020e 488B8510 		movq	-240(%rbp), %rax
 12048      FFFFFF
 12049 0215 4889C7   		movq	%rax, %rdi
 12050 0218 E8000000 		call	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt1
 12050      00
 12051 021d 4885C0   		testq	%rax, %rax
 12052 0220 0F94C0   		sete	%al
 12053 0223 84C0     		testb	%al, %al
 12054 0225 743E     		je	.L588
1953:/usr/include/c++/6/bits/stl_tree.h **** 	      else
 12055              		.loc 27 1953 0
 12056 0227 48C78568 		movq	$0, -152(%rbp)
 12056      FFFFFF00 
 12056      000000
 12057 0232 488D9510 		leaq	-240(%rbp), %rdx
 12057      FFFFFF
 12058 0239 488D8D68 		leaq	-152(%rbp), %rcx
 12058      FFFFFF
 12059 0240 488D8550 		leaq	-176(%rbp), %rax
 12059      FFFFFF
 12060 0247 4889CE   		movq	%rcx, %rsi
 12061 024a 4889C7   		movq	%rax, %rdi
 12062 024d E8000000 		call	_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_Lb1EEERKS1_OT_
 12062      00
 12063 0252 488B8550 		movq	-176(%rbp), %rax
 12063      FFFFFF
 12064 0259 488B9558 		movq	-168(%rbp), %rdx
GAS LISTING /tmp/ccsIN87E.s 			page 521


 12064      FFFFFF
 12065 0260 E9DA0100 		jmp	.L594
 12065      00
 12066              	.L588:
1955:/usr/include/c++/6/bits/stl_tree.h **** 	    }
 12067              		.loc 27 1955 0
 12068 0265 488D9518 		leaq	-232(%rbp), %rdx
 12068      FFFFFF
 12069 026c 488D8D18 		leaq	-232(%rbp), %rcx
 12069      FFFFFF
 12070 0273 488D8570 		leaq	-144(%rbp), %rax
 12070      FFFFFF
 12071 027a 4889CE   		movq	%rcx, %rsi
 12072 027d 4889C7   		movq	%rax, %rdi
 12073 0280 E8000000 		call	_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_S4_Lb1EEEOT_OT0_
 12073      00
 12074 0285 488B8570 		movq	-144(%rbp), %rax
 12074      FFFFFF
 12075 028c 488B9578 		movq	-136(%rbp), %rdx
 12075      FFFFFF
 12076 0293 E9A70100 		jmp	.L594
 12076      00
 12077              	.L587:
1958:/usr/include/c++/6/bits/stl_tree.h **** 	}
 12078              		.loc 27 1958 0
 12079 0298 488B95E8 		movq	-280(%rbp), %rdx
 12079      FEFFFF
 12080 029f 488B85F8 		movq	-264(%rbp), %rax
 12080      FEFFFF
 12081 02a6 4889D6   		movq	%rdx, %rsi
 12082 02a9 4889C7   		movq	%rax, %rdi
 12083 02ac E8000000 		call	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt1
 12083      00
 12084 02b1 E9890100 		jmp	.L594
 12084      00
 12085              	.L584:
 12086              	.LBE117:
 12087              	.LBB118:
 12088              	.LBB119:
1960:/usr/include/c++/6/bits/stl_tree.h **** 	{
 12089              		.loc 27 1960 0
 12090 02b6 488B8518 		movq	-232(%rbp), %rax
 12090      FFFFFF
 12091 02bd 4889C7   		movq	%rax, %rdi
 12092 02c0 E8000000 		call	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt1
 12092      00
 12093 02c5 4889C1   		movq	%rax, %rcx
 12094 02c8 488B85F8 		movq	-264(%rbp), %rax
 12094      FEFFFF
 12095 02cf 488B95E8 		movq	-280(%rbp), %rdx
 12095      FEFFFF
 12096 02d6 4889CE   		movq	%rcx, %rsi
 12097 02d9 4889C7   		movq	%rax, %rdi
 12098 02dc E8000000 		call	_ZNK3pmt10comparatorclERKN5boost13intrusive_ptrINS_8pmt_baseEEES6_
 12098      00
 12099 02e1 84C0     		testb	%al, %al
 12100 02e3 0F842C01 		je	.L589
GAS LISTING /tmp/ccsIN87E.s 			page 522


 12100      0000
 12101              	.LBB120:
1963:/usr/include/c++/6/bits/stl_tree.h **** 	  if (__pos._M_node == _M_rightmost())
 12102              		.loc 27 1963 0
 12103 02e9 488B8518 		movq	-232(%rbp), %rax
 12103      FFFFFF
 12104 02f0 48898508 		movq	%rax, -248(%rbp)
 12104      FFFFFF
1964:/usr/include/c++/6/bits/stl_tree.h **** 	    return _Res(0, _M_rightmost());
 12105              		.loc 27 1964 0
 12106 02f7 488B9D18 		movq	-232(%rbp), %rbx
 12106      FFFFFF
 12107 02fe 488B85F8 		movq	-264(%rbp), %rax
 12107      FEFFFF
 12108 0305 4889C7   		movq	%rax, %rdi
 12109 0308 E8000000 		call	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt1
 12109      00
 12110 030d 488B00   		movq	(%rax), %rax
 12111 0310 4839C3   		cmpq	%rax, %rbx
 12112 0313 0F94C0   		sete	%al
 12113 0316 84C0     		testb	%al, %al
 12114 0318 743A     		je	.L590
1965:/usr/include/c++/6/bits/stl_tree.h **** 	  else if (_M_impl._M_key_compare(__k, _S_key((++__after)._M_node)))
 12115              		.loc 27 1965 0
 12116 031a 488B85F8 		movq	-264(%rbp), %rax
 12116      FEFFFF
 12117 0321 4889C7   		movq	%rax, %rdi
 12118 0324 E8000000 		call	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt1
 12118      00
 12119 0329 4889C2   		movq	%rax, %rdx
 12120 032c 48C74598 		movq	$0, -104(%rbp)
 12120      00000000 
 12121 0334 488D4D98 		leaq	-104(%rbp), %rcx
 12122 0338 488D4580 		leaq	-128(%rbp), %rax
 12123 033c 4889CE   		movq	%rcx, %rsi
 12124 033f 4889C7   		movq	%rax, %rdi
 12125 0342 E8000000 		call	_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_Lb1EEERKS1_OT_
 12125      00
 12126 0347 488B4580 		movq	-128(%rbp), %rax
 12127 034b 488B5588 		movq	-120(%rbp), %rdx
 12128 034f E9EB0000 		jmp	.L594
 12128      00
 12129              	.L590:
1966:/usr/include/c++/6/bits/stl_tree.h **** 	    {
 12130              		.loc 27 1966 0
 12131 0354 488D8508 		leaq	-248(%rbp), %rax
 12131      FFFFFF
 12132 035b 4889C7   		movq	%rax, %rdi
 12133 035e E8000000 		call	_ZNSt17_Rb_tree_iteratorISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS1_8functionIFvS5_
 12133      00
 12134 0363 488B00   		movq	(%rax), %rax
 12135 0366 4889C7   		movq	%rax, %rdi
 12136 0369 E8000000 		call	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt1
 12136      00
 12137 036e 4889C2   		movq	%rax, %rdx
 12138 0371 488B85F8 		movq	-264(%rbp), %rax
 12138      FEFFFF
GAS LISTING /tmp/ccsIN87E.s 			page 523


 12139 0378 488B8DE8 		movq	-280(%rbp), %rcx
 12139      FEFFFF
 12140 037f 4889CE   		movq	%rcx, %rsi
 12141 0382 4889C7   		movq	%rax, %rdi
 12142 0385 E8000000 		call	_ZNK3pmt10comparatorclERKN5boost13intrusive_ptrINS_8pmt_baseEEES6_
 12142      00
 12143 038a 84C0     		testb	%al, %al
 12144 038c 746C     		je	.L592
1968:/usr/include/c++/6/bits/stl_tree.h **** 		return _Res(0, __pos._M_node);
 12145              		.loc 27 1968 0
 12146 038e 488B8518 		movq	-232(%rbp), %rax
 12146      FFFFFF
 12147 0395 4889C7   		movq	%rax, %rdi
 12148 0398 E8000000 		call	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt1
 12148      00
 12149 039d 4885C0   		testq	%rax, %rax
 12150 03a0 0F94C0   		sete	%al
 12151 03a3 84C0     		testb	%al, %al
 12152 03a5 742C     		je	.L593
1969:/usr/include/c++/6/bits/stl_tree.h **** 	      else
 12153              		.loc 27 1969 0
 12154 03a7 48C745B8 		movq	$0, -72(%rbp)
 12154      00000000 
 12155 03af 488D9518 		leaq	-232(%rbp), %rdx
 12155      FFFFFF
 12156 03b6 488D4DB8 		leaq	-72(%rbp), %rcx
 12157 03ba 488D45A0 		leaq	-96(%rbp), %rax
 12158 03be 4889CE   		movq	%rcx, %rsi
 12159 03c1 4889C7   		movq	%rax, %rdi
 12160 03c4 E8000000 		call	_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_Lb1EEERKS1_OT_
 12160      00
 12161 03c9 488B45A0 		movq	-96(%rbp), %rax
 12162 03cd 488B55A8 		movq	-88(%rbp), %rdx
 12163 03d1 EB6C     		jmp	.L594
 12164              	.L593:
1971:/usr/include/c++/6/bits/stl_tree.h **** 	    }
 12165              		.loc 27 1971 0
 12166 03d3 488D9508 		leaq	-248(%rbp), %rdx
 12166      FFFFFF
 12167 03da 488D8D08 		leaq	-248(%rbp), %rcx
 12167      FFFFFF
 12168 03e1 488D45C0 		leaq	-64(%rbp), %rax
 12169 03e5 4889CE   		movq	%rcx, %rsi
 12170 03e8 4889C7   		movq	%rax, %rdi
 12171 03eb E8000000 		call	_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_S4_Lb1EEEOT_OT0_
 12171      00
 12172 03f0 488B45C0 		movq	-64(%rbp), %rax
 12173 03f4 488B55C8 		movq	-56(%rbp), %rdx
 12174 03f8 EB45     		jmp	.L594
 12175              	.L592:
1974:/usr/include/c++/6/bits/stl_tree.h **** 	}
 12176              		.loc 27 1974 0
 12177 03fa 488B95E8 		movq	-280(%rbp), %rdx
 12177      FEFFFF
 12178 0401 488B85F8 		movq	-264(%rbp), %rax
 12178      FEFFFF
 12179 0408 4889D6   		movq	%rdx, %rsi
GAS LISTING /tmp/ccsIN87E.s 			page 524


 12180 040b 4889C7   		movq	%rax, %rdi
 12181 040e E8000000 		call	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt1
 12181      00
 12182 0413 EB2A     		jmp	.L594
 12183              	.L589:
 12184              	.LBE120:
1978:/usr/include/c++/6/bits/stl_tree.h ****     }
 12185              		.loc 27 1978 0
 12186 0415 48C745E8 		movq	$0, -24(%rbp)
 12186      00000000 
 12187 041d 488D55E8 		leaq	-24(%rbp), %rdx
 12188 0421 488D8D18 		leaq	-232(%rbp), %rcx
 12188      FFFFFF
 12189 0428 488D45D0 		leaq	-48(%rbp), %rax
 12190 042c 4889CE   		movq	%rcx, %rsi
 12191 042f 4889C7   		movq	%rax, %rdi
 12192 0432 E8000000 		call	_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_Lb1EEEOT_RKS1_
 12192      00
 12193 0437 488B45D0 		movq	-48(%rbp), %rax
 12194 043b 488B55D8 		movq	-40(%rbp), %rdx
 12195              	.L594:
 12196              	.LBE119:
 12197              	.LBE118:
 12198              	.LBE116:
 12199              	.LBE115:
 12200              	.LBE114:
1979:/usr/include/c++/6/bits/stl_tree.h **** 
 12201              		.loc 27 1979 0 discriminator 3
 12202 043f 4881C418 		addq	$280, %rsp
 12202      010000
 12203 0446 5B       		popq	%rbx
 12204 0447 5D       		popq	%rbp
 12205              		.cfi_def_cfa 7, 8
 12206 0448 C3       		ret
 12207              		.cfi_endproc
 12208              	.LFE13718:
 12210              		.section	.text._ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFv
 12211              		.weak	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt
 12213              	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt10_Sele
 12214              	.LFB13745:
 688:/usr/include/c++/6/bits/stl_tree.h ****       { return _KeyOfValue()(_S_value(__x)); }
 12215              		.loc 27 688 0
 12216              		.cfi_startproc
 12217 0000 55       		pushq	%rbp
 12218              		.cfi_def_cfa_offset 16
 12219              		.cfi_offset 6, -16
 12220 0001 4889E5   		movq	%rsp, %rbp
 12221              		.cfi_def_cfa_register 6
 12222 0004 4883EC20 		subq	$32, %rsp
 12223 0008 48897DE8 		movq	%rdi, -24(%rbp)
 689:/usr/include/c++/6/bits/stl_tree.h **** 
 12224              		.loc 27 689 0
 12225 000c 488B45E8 		movq	-24(%rbp), %rax
 12226 0010 4889C7   		movq	%rax, %rdi
 12227 0013 E8000000 		call	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt1
 12227      00
 12228 0018 4889C2   		movq	%rax, %rdx
GAS LISTING /tmp/ccsIN87E.s 			page 525


 12229 001b 488D45FF 		leaq	-1(%rbp), %rax
 12230 001f 4889D6   		movq	%rdx, %rsi
 12231 0022 4889C7   		movq	%rax, %rdi
 12232 0025 E8000000 		call	_ZNKSt10_Select1stISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS1_8functionIFvS5_EEEEEc
 12232      00
 12233 002a C9       		leave
 12234              		.cfi_def_cfa 7, 8
 12235 002b C3       		ret
 12236              		.cfi_endproc
 12237              	.LFE13745:
 12239              		.section	.text._ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFv
 12240              		.align 2
 12241              		.weak	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt
 12243              	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt10_Sele
 12244              	.LFB13746:
2095:/usr/include/c++/6/bits/stl_tree.h ****     _M_insert_node(_Base_ptr __x, _Base_ptr __p, _Link_type __z)
 12245              		.loc 27 2095 0
 12246              		.cfi_startproc
 12247 0000 55       		pushq	%rbp
 12248              		.cfi_def_cfa_offset 16
 12249              		.cfi_offset 6, -16
 12250 0001 4889E5   		movq	%rsp, %rbp
 12251              		.cfi_def_cfa_register 6
 12252 0004 53       		pushq	%rbx
 12253 0005 4883EC38 		subq	$56, %rsp
 12254              		.cfi_offset 3, -24
 12255 0009 48897DD8 		movq	%rdi, -40(%rbp)
 12256 000d 488975D0 		movq	%rsi, -48(%rbp)
 12257 0011 488955C8 		movq	%rdx, -56(%rbp)
 12258 0015 48894DC0 		movq	%rcx, -64(%rbp)
2099:/usr/include/c++/6/bits/stl_tree.h **** 						      _S_key(__p)));
 12259              		.loc 27 2099 0
 12260 0019 48837DD0 		cmpq	$0, -48(%rbp)
 12260      00
 12261 001e 7546     		jne	.L598
2098:/usr/include/c++/6/bits/stl_tree.h **** 			    || _M_impl._M_key_compare(_S_key(__z),
 12262              		.loc 27 2098 0
 12263 0020 488B45D8 		movq	-40(%rbp), %rax
 12264 0024 4889C7   		movq	%rax, %rdi
 12265 0027 E8000000 		call	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt1
 12265      00
 12266 002c 483B45C8 		cmpq	-56(%rbp), %rax
 12267 0030 7434     		je	.L598
2100:/usr/include/c++/6/bits/stl_tree.h **** 
 12268              		.loc 27 2100 0 discriminator 2
 12269 0032 488B45C8 		movq	-56(%rbp), %rax
 12270 0036 4889C7   		movq	%rax, %rdi
 12271 0039 E8000000 		call	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt1
 12271      00
 12272 003e 4889C3   		movq	%rax, %rbx
2099:/usr/include/c++/6/bits/stl_tree.h **** 						      _S_key(__p)));
 12273              		.loc 27 2099 0 discriminator 2
 12274 0041 488B45C0 		movq	-64(%rbp), %rax
 12275 0045 4889C7   		movq	%rax, %rdi
 12276 0048 E8000000 		call	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt1
 12276      00
 12277 004d 4889C1   		movq	%rax, %rcx
GAS LISTING /tmp/ccsIN87E.s 			page 526


 12278 0050 488B45D8 		movq	-40(%rbp), %rax
 12279 0054 4889DA   		movq	%rbx, %rdx
 12280 0057 4889CE   		movq	%rcx, %rsi
 12281 005a 4889C7   		movq	%rax, %rdi
 12282 005d E8000000 		call	_ZNK3pmt10comparatorclERKN5boost13intrusive_ptrINS_8pmt_baseEEES6_
 12282      00
 12283 0062 84C0     		testb	%al, %al
 12284 0064 7407     		je	.L599
 12285              	.L598:
2099:/usr/include/c++/6/bits/stl_tree.h **** 						      _S_key(__p)));
 12286              		.loc 27 2099 0 is_stmt 0 discriminator 1
 12287 0066 B8010000 		movl	$1, %eax
 12287      00
 12288 006b EB05     		jmp	.L600
 12289              	.L599:
2099:/usr/include/c++/6/bits/stl_tree.h **** 						      _S_key(__p)));
 12290              		.loc 27 2099 0 discriminator 3
 12291 006d B8000000 		movl	$0, %eax
 12291      00
 12292              	.L600:
2100:/usr/include/c++/6/bits/stl_tree.h **** 
 12293              		.loc 27 2100 0 is_stmt 1
 12294 0072 8845EF   		movb	%al, -17(%rbp)
2102:/usr/include/c++/6/bits/stl_tree.h **** 				    this->_M_impl._M_header);
 12295              		.loc 27 2102 0
 12296 0075 488B45D8 		movq	-40(%rbp), %rax
 12297 0079 488D4808 		leaq	8(%rax), %rcx
 12298 007d 0FB645EF 		movzbl	-17(%rbp), %eax
 12299 0081 488B55C8 		movq	-56(%rbp), %rdx
 12300 0085 488B75C0 		movq	-64(%rbp), %rsi
 12301 0089 89C7     		movl	%eax, %edi
 12302 008b E8000000 		call	_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_@PLT
 12302      00
2104:/usr/include/c++/6/bits/stl_tree.h ****       return iterator(__z);
 12303              		.loc 27 2104 0
 12304 0090 488B45D8 		movq	-40(%rbp), %rax
 12305 0094 488B4028 		movq	40(%rax), %rax
 12306 0098 488D5001 		leaq	1(%rax), %rdx
 12307 009c 488B45D8 		movq	-40(%rbp), %rax
 12308 00a0 48895028 		movq	%rdx, 40(%rax)
2105:/usr/include/c++/6/bits/stl_tree.h ****     }
 12309              		.loc 27 2105 0
 12310 00a4 488B55C0 		movq	-64(%rbp), %rdx
 12311 00a8 488D45E0 		leaq	-32(%rbp), %rax
 12312 00ac 4889D6   		movq	%rdx, %rsi
 12313 00af 4889C7   		movq	%rax, %rdi
 12314 00b2 E8000000 		call	_ZNSt17_Rb_tree_iteratorISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS1_8functionIFvS5_
 12314      00
 12315 00b7 488B45E0 		movq	-32(%rbp), %rax
2106:/usr/include/c++/6/bits/stl_tree.h **** 
 12316              		.loc 27 2106 0
 12317 00bb 4883C438 		addq	$56, %rsp
 12318 00bf 5B       		popq	%rbx
 12319 00c0 5D       		popq	%rbp
 12320              		.cfi_def_cfa 7, 8
 12321 00c1 C3       		ret
 12322              		.cfi_endproc
GAS LISTING /tmp/ccsIN87E.s 			page 527


 12323              	.LFE13746:
 12325              		.section	.text._ZN5boost17enable_error_infoINS_17bad_function_callEEENS_16exception_detail29enable
 12326              		.weak	_ZN5boost17enable_error_infoINS_17bad_function_callEEENS_16exception_detail29enable_error_in
 12328              	_ZN5boost17enable_error_infoINS_17bad_function_callEEENS_16exception_detail29enable_error_info_retu
 12329              	.LFB13747:
 398:/usr/include/boost/exception/exception.hpp ****         {
 12330              		.loc 3 398 0
 12331              		.cfi_startproc
 12332 0000 55       		pushq	%rbp
 12333              		.cfi_def_cfa_offset 16
 12334              		.cfi_offset 6, -16
 12335 0001 4889E5   		movq	%rsp, %rbp
 12336              		.cfi_def_cfa_register 6
 12337 0004 4883EC10 		subq	$16, %rsp
 12338 0008 48897DF8 		movq	%rdi, -8(%rbp)
 12339 000c 488975F0 		movq	%rsi, -16(%rbp)
 401:/usr/include/boost/exception/exception.hpp ****         }
 12340              		.loc 3 401 0
 12341 0010 488B55F0 		movq	-16(%rbp), %rdx
 12342 0014 488B45F8 		movq	-8(%rbp), %rax
 12343 0018 4889D6   		movq	%rdx, %rsi
 12344 001b 4889C7   		movq	%rax, %rdi
 12345 001e E8000000 		call	_ZN5boost16exception_detail19error_info_injectorINS_17bad_function_callEEC1ERKS2_
 12345      00
 402:/usr/include/boost/exception/exception.hpp **** 
 12346              		.loc 3 402 0
 12347 0023 488B45F8 		movq	-8(%rbp), %rax
 12348 0027 C9       		leave
 12349              		.cfi_def_cfa 7, 8
 12350 0028 C3       		ret
 12351              		.cfi_endproc
 12352              	.LFE13747:
 12354              		.section	.text._ZN5boost16exception_detail19error_info_injectorINS_17bad_function_callEED2Ev,"axG"
 12355              		.align 2
 12356              		.weak	_ZN5boost16exception_detail19error_info_injectorINS_17bad_function_callEED2Ev
 12358              	_ZN5boost16exception_detail19error_info_injectorINS_17bad_function_callEED2Ev:
 12359              	.LFB13749:
 353:/usr/include/boost/exception/exception.hpp ****                 {
 12360              		.loc 3 353 0
 12361              		.cfi_startproc
 12362 0000 55       		pushq	%rbp
 12363              		.cfi_def_cfa_offset 16
 12364              		.cfi_offset 6, -16
 12365 0001 4889E5   		movq	%rsp, %rbp
 12366              		.cfi_def_cfa_register 6
 12367 0004 4883EC10 		subq	$16, %rsp
 12368 0008 48897DF8 		movq	%rdi, -8(%rbp)
 12369              	.LBB121:
 355:/usr/include/boost/exception/exception.hpp ****             };
 12370              		.loc 3 355 0
 12371 000c 488D1500 		leaq	16+_ZTVN5boost16exception_detail19error_info_injectorINS_17bad_function_callEEE(%rip), %rdx
 12371      000000
 12372 0013 488B45F8 		movq	-8(%rbp), %rax
 12373 0017 488910   		movq	%rdx, (%rax)
 12374 001a 488D1500 		leaq	56+_ZTVN5boost16exception_detail19error_info_injectorINS_17bad_function_callEEE(%rip), %rdx
 12374      000000
 12375 0021 488B45F8 		movq	-8(%rbp), %rax
GAS LISTING /tmp/ccsIN87E.s 			page 528


 12376 0025 48895010 		movq	%rdx, 16(%rax)
 12377 0029 488B45F8 		movq	-8(%rbp), %rax
 12378 002d 4883C010 		addq	$16, %rax
 12379 0031 4889C7   		movq	%rax, %rdi
 12380 0034 E8000000 		call	_ZN5boost9exceptionD2Ev
 12380      00
 12381 0039 488B45F8 		movq	-8(%rbp), %rax
 12382 003d 4889C7   		movq	%rax, %rdi
 12383 0040 E8000000 		call	_ZN5boost17bad_function_callD2Ev
 12383      00
 12384              	.LBE121:
 12385 0045 90       		nop
 12386 0046 C9       		leave
 12387              		.cfi_def_cfa 7, 8
 12388 0047 C3       		ret
 12389              		.cfi_endproc
 12390              	.LFE13749:
 12392              		.weak	_ZN5boost16exception_detail19error_info_injectorINS_17bad_function_callEED1Ev
 12393              		.set	_ZN5boost16exception_detail19error_info_injectorINS_17bad_function_callEED1Ev,_ZN5boost16exce
 12394              		.set	.LTHUNK130,_ZN5boost16exception_detail19error_info_injectorINS_17bad_function_callEED1Ev
 12395              		.weak	_ZThn16_N5boost16exception_detail19error_info_injectorINS_17bad_function_callEED1Ev
 12397              	_ZThn16_N5boost16exception_detail19error_info_injectorINS_17bad_function_callEED1Ev:
 12398              	.LFB15705:
 353:/usr/include/boost/exception/exception.hpp ****                 {
 12399              		.loc 3 353 0
 12400              		.cfi_startproc
 12401 0048 4883EF10 		subq	$16, %rdi
 12402 004c EBB2     		jmp	.LTHUNK130
 12403              		.cfi_endproc
 12404              	.LFE15705:
 12406              		.section	.text._ZN5boost16exception_detail19error_info_injectorINS_17bad_function_callEED0Ev,"axG"
 12407              		.align 2
 12408              		.weak	_ZN5boost16exception_detail19error_info_injectorINS_17bad_function_callEED0Ev
 12410              	_ZN5boost16exception_detail19error_info_injectorINS_17bad_function_callEED0Ev:
 12411              	.LFB13751:
 353:/usr/include/boost/exception/exception.hpp ****                 {
 12412              		.loc 3 353 0
 12413              		.cfi_startproc
 12414 0000 55       		pushq	%rbp
 12415              		.cfi_def_cfa_offset 16
 12416              		.cfi_offset 6, -16
 12417 0001 4889E5   		movq	%rsp, %rbp
 12418              		.cfi_def_cfa_register 6
 12419 0004 4883EC10 		subq	$16, %rsp
 12420 0008 48897DF8 		movq	%rdi, -8(%rbp)
 355:/usr/include/boost/exception/exception.hpp ****             };
 12421              		.loc 3 355 0
 12422 000c 488B45F8 		movq	-8(%rbp), %rax
 12423 0010 4889C7   		movq	%rax, %rdi
 12424 0013 E8000000 		call	_ZN5boost16exception_detail19error_info_injectorINS_17bad_function_callEED1Ev
 12424      00
 12425 0018 488B45F8 		movq	-8(%rbp), %rax
 12426 001c BE380000 		movl	$56, %esi
 12426      00
 12427 0021 4889C7   		movq	%rax, %rdi
 12428 0024 E8000000 		call	_ZdlPvm@PLT
 12428      00
GAS LISTING /tmp/ccsIN87E.s 			page 529


 12429 0029 C9       		leave
 12430              		.cfi_def_cfa 7, 8
 12431 002a C3       		ret
 12432              		.cfi_endproc
 12433              	.LFE13751:
 12435              		.set	.LTHUNK131,_ZN5boost16exception_detail19error_info_injectorINS_17bad_function_callEED0Ev
 12436              		.weak	_ZThn16_N5boost16exception_detail19error_info_injectorINS_17bad_function_callEED0Ev
 12438              	_ZThn16_N5boost16exception_detail19error_info_injectorINS_17bad_function_callEED0Ev:
 12439              	.LFB15706:
 353:/usr/include/boost/exception/exception.hpp ****                 {
 12440              		.loc 3 353 0
 12441              		.cfi_startproc
 12442 002b 4883EF10 		subq	$16, %rdi
 12443 002f EBCF     		jmp	.LTHUNK131
 12444              		.cfi_endproc
 12445              	.LFE15706:
 12447              		.section	.text._ZN5boost24enable_current_exceptionINS_16exception_detail19error_info_injectorINS_1
 12448              		.weak	_ZN5boost24enable_current_exceptionINS_16exception_detail19error_info_injectorINS_17bad_func
 12450              	_ZN5boost24enable_current_exceptionINS_16exception_detail19error_info_injectorINS_17bad_function_ca
 12451              	.LFB13752:
 482:/usr/include/boost/exception/exception.hpp **** 
 483:/usr/include/boost/exception/exception.hpp ****             private:
 484:/usr/include/boost/exception/exception.hpp **** 
 485:/usr/include/boost/exception/exception.hpp ****             clone_base const *
 486:/usr/include/boost/exception/exception.hpp ****             clone() const
 487:/usr/include/boost/exception/exception.hpp ****                 {
 488:/usr/include/boost/exception/exception.hpp ****                 return new clone_impl(*this,clone_tag());
 489:/usr/include/boost/exception/exception.hpp ****                 }
 490:/usr/include/boost/exception/exception.hpp **** 
 491:/usr/include/boost/exception/exception.hpp ****             void
 492:/usr/include/boost/exception/exception.hpp ****             rethrow() const
 493:/usr/include/boost/exception/exception.hpp ****                 {
 494:/usr/include/boost/exception/exception.hpp ****                 throw*this;
 495:/usr/include/boost/exception/exception.hpp ****                 }
 496:/usr/include/boost/exception/exception.hpp ****             };
 497:/usr/include/boost/exception/exception.hpp ****         }
 498:/usr/include/boost/exception/exception.hpp **** #if defined(__GNUC__)
 499:/usr/include/boost/exception/exception.hpp **** # if (__GNUC__ == 4 && __GNUC_MINOR__ >= 1) || (__GNUC__ > 4)
 500:/usr/include/boost/exception/exception.hpp **** #  pragma GCC visibility pop
 501:/usr/include/boost/exception/exception.hpp **** # endif
 502:/usr/include/boost/exception/exception.hpp **** #endif
 503:/usr/include/boost/exception/exception.hpp **** 
 504:/usr/include/boost/exception/exception.hpp ****     template <class T>
 505:/usr/include/boost/exception/exception.hpp ****     inline
 506:/usr/include/boost/exception/exception.hpp ****     exception_detail::clone_impl<T>
 507:/usr/include/boost/exception/exception.hpp ****     enable_current_exception( T const & x )
 12452              		.loc 3 507 0
 12453              		.cfi_startproc
 12454 0000 55       		pushq	%rbp
 12455              		.cfi_def_cfa_offset 16
 12456              		.cfi_offset 6, -16
 12457 0001 4889E5   		movq	%rsp, %rbp
 12458              		.cfi_def_cfa_register 6
 12459 0004 4883EC10 		subq	$16, %rsp
 12460 0008 48897DF8 		movq	%rdi, -8(%rbp)
 12461 000c 488975F0 		movq	%rsi, -16(%rbp)
 508:/usr/include/boost/exception/exception.hpp ****         {
GAS LISTING /tmp/ccsIN87E.s 			page 530


 509:/usr/include/boost/exception/exception.hpp ****         return exception_detail::clone_impl<T>(x);
 12462              		.loc 3 509 0
 12463 0010 488B55F0 		movq	-16(%rbp), %rdx
 12464 0014 488B45F8 		movq	-8(%rbp), %rax
 12465 0018 4889D6   		movq	%rdx, %rsi
 12466 001b 4889C7   		movq	%rax, %rdi
 12467 001e E8000000 		call	_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEEC
 12467      00
 510:/usr/include/boost/exception/exception.hpp ****         }
 12468              		.loc 3 510 0
 12469 0023 488B45F8 		movq	-8(%rbp), %rax
 12470 0027 C9       		leave
 12471              		.cfi_def_cfa 7, 8
 12472 0028 C3       		ret
 12473              		.cfi_endproc
 12474              	.LFE13752:
 12476              		.section	.text._ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function
 12477              		.align 2
 12478              		.weak	_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEE
 12480              	_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEED1Ev:
 12481              	.LFB13755:
 479:/usr/include/boost/exception/exception.hpp ****                 {
 12482              		.loc 3 479 0
 12483              		.cfi_startproc
 12484 0000 55       		pushq	%rbp
 12485              		.cfi_def_cfa_offset 16
 12486              		.cfi_offset 6, -16
 12487 0001 4889E5   		movq	%rsp, %rbp
 12488              		.cfi_def_cfa_register 6
 12489 0004 4883EC10 		subq	$16, %rsp
 12490 0008 48897DF8 		movq	%rdi, -8(%rbp)
 12491              	.LBB122:
 481:/usr/include/boost/exception/exception.hpp **** 
 12492              		.loc 3 481 0
 12493 000c 488D1500 		leaq	24+_ZTVN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_call
 12493      000000
 12494 0013 488B45F8 		movq	-8(%rbp), %rax
 12495 0017 488910   		movq	%rdx, (%rax)
 12496 001a 488D1500 		leaq	80+_ZTVN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_call
 12496      000000
 12497 0021 488B45F8 		movq	-8(%rbp), %rax
 12498 0025 48895010 		movq	%rdx, 16(%rax)
 12499 0029 488B45F8 		movq	-8(%rbp), %rax
 12500 002d 488D5038 		leaq	56(%rax), %rdx
 12501 0031 488D0500 		leaq	136+_ZTVN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_cal
 12501      000000
 12502 0038 488902   		movq	%rax, (%rdx)
 12503 003b 488B45F8 		movq	-8(%rbp), %rax
 12504 003f 4889C7   		movq	%rax, %rdi
 12505 0042 E8000000 		call	_ZN5boost16exception_detail19error_info_injectorINS_17bad_function_callEED2Ev
 12505      00
 12506 0047 488B45F8 		movq	-8(%rbp), %rax
 12507 004b 4883C038 		addq	$56, %rax
 12508 004f 4889C7   		movq	%rax, %rdi
 12509 0052 E8000000 		call	_ZN5boost16exception_detail10clone_baseD2Ev
 12509      00
 12510              	.LBE122:
GAS LISTING /tmp/ccsIN87E.s 			page 531


 12511 0057 90       		nop
 12512 0058 C9       		leave
 12513              		.cfi_def_cfa 7, 8
 12514 0059 C3       		ret
 12515              		.cfi_endproc
 12516              	.LFE13755:
 12518              		.set	.LTHUNK133,_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_functio
 12519              		.weak	_ZThn16_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_ca
 12521              	_ZThn16_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEED
 12522              	.LFB15707:
 479:/usr/include/boost/exception/exception.hpp ****                 {
 12523              		.loc 3 479 0
 12524              		.cfi_startproc
 12525 005a 4883EF10 		subq	$16, %rdi
 12526 005e EBA0     		jmp	.LTHUNK133
 12527              		.cfi_endproc
 12528              	.LFE15707:
 12530              		.set	.LTHUNK132,_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_functio
 12531              		.weak	_ZTv0_n40_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_
 12533              	_ZTv0_n40_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEE
 12534              	.LFB15708:
 479:/usr/include/boost/exception/exception.hpp ****                 {
 12535              		.loc 3 479 0
 12536              		.cfi_startproc
 12537 0060 4C8B17   		movq	(%rdi), %r10
 12538 0063 49037AD8 		addq	-40(%r10), %rdi
 12539 0067 EB97     		jmp	.LTHUNK132
 12540              		.cfi_endproc
 12541              	.LFE15708:
 12543              		.section	.text._ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function
 12544              		.align 2
 12545              		.weak	_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEE
 12547              	_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEED0Ev:
 12548              	.LFB13756:
 479:/usr/include/boost/exception/exception.hpp ****                 {
 12549              		.loc 3 479 0
 12550              		.cfi_startproc
 12551 0000 55       		pushq	%rbp
 12552              		.cfi_def_cfa_offset 16
 12553              		.cfi_offset 6, -16
 12554 0001 4889E5   		movq	%rsp, %rbp
 12555              		.cfi_def_cfa_register 6
 12556 0004 4883EC10 		subq	$16, %rsp
 12557 0008 48897DF8 		movq	%rdi, -8(%rbp)
 481:/usr/include/boost/exception/exception.hpp **** 
 12558              		.loc 3 481 0
 12559 000c 488B45F8 		movq	-8(%rbp), %rax
 12560 0010 4889C7   		movq	%rax, %rdi
 12561 0013 E8000000 		call	_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEED
 12561      00
 12562 0018 488B45F8 		movq	-8(%rbp), %rax
 12563 001c BE400000 		movl	$64, %esi
 12563      00
 12564 0021 4889C7   		movq	%rax, %rdi
 12565 0024 E8000000 		call	_ZdlPvm@PLT
 12565      00
 12566 0029 C9       		leave
GAS LISTING /tmp/ccsIN87E.s 			page 532


 12567              		.cfi_def_cfa 7, 8
 12568 002a C3       		ret
 12569              		.cfi_endproc
 12570              	.LFE13756:
 12572              		.set	.LTHUNK135,_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_functio
 12573              		.weak	_ZThn16_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_ca
 12575              	_ZThn16_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEED
 12576              	.LFB15709:
 479:/usr/include/boost/exception/exception.hpp ****                 {
 12577              		.loc 3 479 0
 12578              		.cfi_startproc
 12579 002b 4883EF10 		subq	$16, %rdi
 12580 002f EBCF     		jmp	.LTHUNK135
 12581              		.cfi_endproc
 12582              	.LFE15709:
 12584              		.set	.LTHUNK134,_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_functio
 12585              		.weak	_ZTv0_n40_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_
 12587              	_ZTv0_n40_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEE
 12588              	.LFB15710:
 479:/usr/include/boost/exception/exception.hpp ****                 {
 12589              		.loc 3 479 0
 12590              		.cfi_startproc
 12591 0031 4C8B17   		movq	(%rdi), %r10
 12592 0034 49037AD8 		addq	-40(%r10), %rdi
 12593 0038 EBC6     		jmp	.LTHUNK134
 12594              		.cfi_endproc
 12595              	.LFE15710:
 12597              		.section	.text._ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_St5dequeIS4_SaIS
 12598              		.align 2
 12599              		.weak	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_St5dequeIS4_SaIS4_EEESt10
 12601              	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_St5dequeIS4_SaIS4_EEESt10_Select
 12602              	.LFB13759:
 676:/usr/include/c++/6/bits/stl_tree.h ****       { return &this->_M_impl._M_header; }
 12603              		.loc 27 676 0
 12604              		.cfi_startproc
 12605 0000 55       		pushq	%rbp
 12606              		.cfi_def_cfa_offset 16
 12607              		.cfi_offset 6, -16
 12608 0001 4889E5   		movq	%rsp, %rbp
 12609              		.cfi_def_cfa_register 6
 12610 0004 48897DF8 		movq	%rdi, -8(%rbp)
 677:/usr/include/c++/6/bits/stl_tree.h **** 
 12611              		.loc 27 677 0
 12612 0008 488B45F8 		movq	-8(%rbp), %rax
 12613 000c 4883C008 		addq	$8, %rax
 12614 0010 5D       		popq	%rbp
 12615              		.cfi_def_cfa 7, 8
 12616 0011 C3       		ret
 12617              		.cfi_endproc
 12618              	.LFE13759:
 12620              		.section	.text._ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_St5dequeIS4_SaIS
 12621              		.align 2
 12622              		.weak	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_St5dequeIS4_SaIS4_EEESt10
 12624              	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_St5dequeIS4_SaIS4_EEESt10_Select
 12625              	.LFB13760:
1649:/usr/include/c++/6/bits/stl_tree.h ****     _M_lower_bound(_Link_type __x, _Base_ptr __y,
 12626              		.loc 27 1649 0
GAS LISTING /tmp/ccsIN87E.s 			page 533


 12627              		.cfi_startproc
 12628 0000 55       		pushq	%rbp
 12629              		.cfi_def_cfa_offset 16
 12630              		.cfi_offset 6, -16
 12631 0001 4889E5   		movq	%rsp, %rbp
 12632              		.cfi_def_cfa_register 6
 12633 0004 4883EC30 		subq	$48, %rsp
 12634 0008 48897DE8 		movq	%rdi, -24(%rbp)
 12635 000c 488975E0 		movq	%rsi, -32(%rbp)
 12636 0010 488955D8 		movq	%rdx, -40(%rbp)
 12637 0014 48894DD0 		movq	%rcx, -48(%rbp)
 12638              	.L616:
1653:/usr/include/c++/6/bits/stl_tree.h **** 	if (!_M_impl._M_key_compare(_S_key(__x), __k))
 12639              		.loc 27 1653 0
 12640 0018 48837DE0 		cmpq	$0, -32(%rbp)
 12640      00
 12641 001d 7455     		je	.L613
1654:/usr/include/c++/6/bits/stl_tree.h **** 	  __y = __x, __x = _S_left(__x);
 12642              		.loc 27 1654 0
 12643 001f 488B45E0 		movq	-32(%rbp), %rax
 12644 0023 4889C7   		movq	%rax, %rdi
 12645 0026 E8000000 		call	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_St5dequeIS4_SaIS4_EEESt10_
 12645      00
 12646 002b 4889C1   		movq	%rax, %rcx
 12647 002e 488B45E8 		movq	-24(%rbp), %rax
 12648 0032 488B55D0 		movq	-48(%rbp), %rdx
 12649 0036 4889CE   		movq	%rcx, %rsi
 12650 0039 4889C7   		movq	%rax, %rdi
 12651 003c E8000000 		call	_ZNK3pmt10comparatorclERKN5boost13intrusive_ptrINS_8pmt_baseEEES6_
 12651      00
 12652 0041 83F001   		xorl	$1, %eax
 12653 0044 84C0     		testb	%al, %al
 12654 0046 741A     		je	.L614
1655:/usr/include/c++/6/bits/stl_tree.h **** 	else
 12655              		.loc 27 1655 0
 12656 0048 488B45E0 		movq	-32(%rbp), %rax
 12657 004c 488945D8 		movq	%rax, -40(%rbp)
 12658 0050 488B45E0 		movq	-32(%rbp), %rax
 12659 0054 4889C7   		movq	%rax, %rdi
 12660 0057 E8000000 		call	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_St5dequeIS4_SaIS4_EEESt10_
 12660      00
 12661 005c 488945E0 		movq	%rax, -32(%rbp)
 12662 0060 EBB6     		jmp	.L616
 12663              	.L614:
1657:/usr/include/c++/6/bits/stl_tree.h ****       return iterator(__y);
 12664              		.loc 27 1657 0
 12665 0062 488B45E0 		movq	-32(%rbp), %rax
 12666 0066 4889C7   		movq	%rax, %rdi
 12667 0069 E8000000 		call	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_St5dequeIS4_SaIS4_EEESt10_
 12667      00
 12668 006e 488945E0 		movq	%rax, -32(%rbp)
1653:/usr/include/c++/6/bits/stl_tree.h **** 	if (!_M_impl._M_key_compare(_S_key(__x), __k))
 12669              		.loc 27 1653 0
 12670 0072 EBA4     		jmp	.L616
 12671              	.L613:
1658:/usr/include/c++/6/bits/stl_tree.h ****     }
 12672              		.loc 27 1658 0
GAS LISTING /tmp/ccsIN87E.s 			page 534


 12673 0074 488B55D8 		movq	-40(%rbp), %rdx
 12674 0078 488D45F8 		leaq	-8(%rbp), %rax
 12675 007c 4889D6   		movq	%rdx, %rsi
 12676 007f 4889C7   		movq	%rax, %rdi
 12677 0082 E8000000 		call	_ZNSt17_Rb_tree_iteratorISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt5dequeIS5_SaIS5_E
 12677      00
 12678 0087 488B45F8 		movq	-8(%rbp), %rax
1659:/usr/include/c++/6/bits/stl_tree.h **** 
 12679              		.loc 27 1659 0
 12680 008b C9       		leave
 12681              		.cfi_def_cfa 7, 8
 12682 008c C3       		ret
 12683              		.cfi_endproc
 12684              	.LFE13760:
 12686              		.section	.text._ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_St5dequeIS4_SaIS
 12687              		.weak	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_St5dequeIS4_SaIS4_EEESt10
 12689              	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_St5dequeIS4_SaIS4_EEESt10_Select
 12690              	.LFB13761:
 712:/usr/include/c++/6/bits/stl_tree.h ****       { return _KeyOfValue()(_S_value(__x)); }
 12691              		.loc 27 712 0
 12692              		.cfi_startproc
 12693 0000 55       		pushq	%rbp
 12694              		.cfi_def_cfa_offset 16
 12695              		.cfi_offset 6, -16
 12696 0001 4889E5   		movq	%rsp, %rbp
 12697              		.cfi_def_cfa_register 6
 12698 0004 4883EC20 		subq	$32, %rsp
 12699 0008 48897DE8 		movq	%rdi, -24(%rbp)
 713:/usr/include/c++/6/bits/stl_tree.h **** 
 12700              		.loc 27 713 0
 12701 000c 488B45E8 		movq	-24(%rbp), %rax
 12702 0010 4889C7   		movq	%rax, %rdi
 12703 0013 E8000000 		call	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_St5dequeIS4_SaIS4_EEESt10_
 12703      00
 12704 0018 4889C2   		movq	%rax, %rdx
 12705 001b 488D45FF 		leaq	-1(%rbp), %rax
 12706 001f 4889D6   		movq	%rdx, %rsi
 12707 0022 4889C7   		movq	%rax, %rdi
 12708 0025 E8000000 		call	_ZNKSt10_Select1stISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt5dequeIS5_SaIS5_EEEEclE
 12708      00
 12709 002a C9       		leave
 12710              		.cfi_def_cfa 7, 8
 12711 002b C3       		ret
 12712              		.cfi_endproc
 12713              	.LFE13761:
 12715              		.section	.text._ZNSt17_Rb_tree_iteratorISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt5dequeI
 12716              		.align 2
 12717              		.weak	_ZNSt17_Rb_tree_iteratorISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt5dequeIS5_SaIS5_
 12719              	_ZNSt17_Rb_tree_iteratorISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt5dequeIS5_SaIS5_EEEEC2E
 12720              	.LFB13763:
 195:/usr/include/c++/6/bits/stl_tree.h ****       : _M_node(__x) { }
 12721              		.loc 27 195 0
 12722              		.cfi_startproc
 12723 0000 55       		pushq	%rbp
 12724              		.cfi_def_cfa_offset 16
 12725              		.cfi_offset 6, -16
 12726 0001 4889E5   		movq	%rsp, %rbp
GAS LISTING /tmp/ccsIN87E.s 			page 535


 12727              		.cfi_def_cfa_register 6
 12728 0004 48897DF8 		movq	%rdi, -8(%rbp)
 12729 0008 488975F0 		movq	%rsi, -16(%rbp)
 12730              	.LBB123:
 196:/usr/include/c++/6/bits/stl_tree.h **** 
 12731              		.loc 27 196 0
 12732 000c 488B45F8 		movq	-8(%rbp), %rax
 12733 0010 488B55F0 		movq	-16(%rbp), %rdx
 12734 0014 488910   		movq	%rdx, (%rax)
 12735              	.LBE123:
 12736 0017 90       		nop
 12737 0018 5D       		popq	%rbp
 12738              		.cfi_def_cfa 7, 8
 12739 0019 C3       		ret
 12740              		.cfi_endproc
 12741              	.LFE13763:
 12743              		.weak	_ZNSt17_Rb_tree_iteratorISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt5dequeIS5_SaIS5_
 12744              		.set	_ZNSt17_Rb_tree_iteratorISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt5dequeIS5_SaIS5_E
 12745              		.section	.text._ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_St5dequeIS4_SaIS
 12746              		.weak	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_St5dequeIS4_SaIS4_EEESt10
 12748              	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_St5dequeIS4_SaIS4_EEESt10_Select
 12749              	.LFB13770:
 688:/usr/include/c++/6/bits/stl_tree.h ****       { return _KeyOfValue()(_S_value(__x)); }
 12750              		.loc 27 688 0
 12751              		.cfi_startproc
 12752 0000 55       		pushq	%rbp
 12753              		.cfi_def_cfa_offset 16
 12754              		.cfi_offset 6, -16
 12755 0001 4889E5   		movq	%rsp, %rbp
 12756              		.cfi_def_cfa_register 6
 12757 0004 4883EC20 		subq	$32, %rsp
 12758 0008 48897DE8 		movq	%rdi, -24(%rbp)
 689:/usr/include/c++/6/bits/stl_tree.h **** 
 12759              		.loc 27 689 0
 12760 000c 488B45E8 		movq	-24(%rbp), %rax
 12761 0010 4889C7   		movq	%rax, %rdi
 12762 0013 E8000000 		call	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_St5dequeIS4_SaIS4_EEESt10_
 12762      00
 12763 0018 4889C2   		movq	%rax, %rdx
 12764 001b 488D45FF 		leaq	-1(%rbp), %rax
 12765 001f 4889D6   		movq	%rdx, %rsi
 12766 0022 4889C7   		movq	%rax, %rdi
 12767 0025 E8000000 		call	_ZNKSt10_Select1stISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt5dequeIS5_SaIS5_EEEEclE
 12767      00
 12768 002a C9       		leave
 12769              		.cfi_def_cfa 7, 8
 12770 002b C3       		ret
 12771              		.cfi_endproc
 12772              	.LFE13770:
 12774              		.section	.text._ZNSaIlED2Ev,"axG",@progbits,_ZNSaIlED5Ev,comdat
 12775              		.align 2
 12776              		.weak	_ZNSaIlED2Ev
 12778              	_ZNSaIlED2Ev:
 12779              	.LFB13796:
 12780              		.loc 38 139 0
 12781              		.cfi_startproc
 12782 0000 55       		pushq	%rbp
GAS LISTING /tmp/ccsIN87E.s 			page 536


 12783              		.cfi_def_cfa_offset 16
 12784              		.cfi_offset 6, -16
 12785 0001 4889E5   		movq	%rsp, %rbp
 12786              		.cfi_def_cfa_register 6
 12787 0004 4883EC10 		subq	$16, %rsp
 12788 0008 48897DF8 		movq	%rdi, -8(%rbp)
 12789              	.LBB124:
 12790              		.loc 38 139 0
 12791 000c 488B45F8 		movq	-8(%rbp), %rax
 12792 0010 4889C7   		movq	%rax, %rdi
 12793 0013 E8000000 		call	_ZN9__gnu_cxx13new_allocatorIlED2Ev
 12793      00
 12794              	.LBE124:
 12795 0018 90       		nop
 12796 0019 C9       		leave
 12797              		.cfi_def_cfa 7, 8
 12798 001a C3       		ret
 12799              		.cfi_endproc
 12800              	.LFE13796:
 12802              		.weak	_ZNSaIlED1Ev
 12803              		.set	_ZNSaIlED1Ev,_ZNSaIlED2Ev
 12804              		.section	.text._ZNSt12_Vector_baseIlSaIlEE13_M_deallocateEPlm,"axG",@progbits,_ZNSt12_Vector_baseI
 12805              		.align 2
 12806              		.weak	_ZNSt12_Vector_baseIlSaIlEE13_M_deallocateEPlm
 12808              	_ZNSt12_Vector_baseIlSaIlEE13_M_deallocateEPlm:
 12809              	.LFB13798:
 174:/usr/include/c++/6/bits/stl_vector.h ****       {
 12810              		.loc 30 174 0
 12811              		.cfi_startproc
 12812 0000 55       		pushq	%rbp
 12813              		.cfi_def_cfa_offset 16
 12814              		.cfi_offset 6, -16
 12815 0001 4889E5   		movq	%rsp, %rbp
 12816              		.cfi_def_cfa_register 6
 12817 0004 4883EC20 		subq	$32, %rsp
 12818 0008 48897DF8 		movq	%rdi, -8(%rbp)
 12819 000c 488975F0 		movq	%rsi, -16(%rbp)
 12820 0010 488955E8 		movq	%rdx, -24(%rbp)
 177:/usr/include/c++/6/bits/stl_vector.h **** 	  _Tr::deallocate(_M_impl, __p, __n);
 12821              		.loc 30 177 0
 12822 0014 48837DF0 		cmpq	$0, -16(%rbp)
 12822      00
 12823 0019 7417     		je	.L626
 178:/usr/include/c++/6/bits/stl_vector.h ****       }
 12824              		.loc 30 178 0
 12825 001b 488B45F8 		movq	-8(%rbp), %rax
 12826 001f 488B55E8 		movq	-24(%rbp), %rdx
 12827 0023 488B4DF0 		movq	-16(%rbp), %rcx
 12828 0027 4889CE   		movq	%rcx, %rsi
 12829 002a 4889C7   		movq	%rax, %rdi
 12830 002d E8000000 		call	_ZNSt16allocator_traitsISaIlEE10deallocateERS0_Plm
 12830      00
 12831              	.L626:
 179:/usr/include/c++/6/bits/stl_vector.h **** 
 12832              		.loc 30 179 0
 12833 0032 90       		nop
 12834 0033 C9       		leave
GAS LISTING /tmp/ccsIN87E.s 			page 537


 12835              		.cfi_def_cfa 7, 8
 12836 0034 C3       		ret
 12837              		.cfi_endproc
 12838              	.LFE13798:
 12840              		.section	.text._ZSt8_DestroyIPlEvT_S1_,"axG",@progbits,_ZSt8_DestroyIPlEvT_S1_,comdat
 12841              		.weak	_ZSt8_DestroyIPlEvT_S1_
 12843              	_ZSt8_DestroyIPlEvT_S1_:
 12844              	.LFB13799:
 122:/usr/include/c++/6/bits/stl_construct.h ****     {
 12845              		.loc 35 122 0
 12846              		.cfi_startproc
 12847 0000 55       		pushq	%rbp
 12848              		.cfi_def_cfa_offset 16
 12849              		.cfi_offset 6, -16
 12850 0001 4889E5   		movq	%rsp, %rbp
 12851              		.cfi_def_cfa_register 6
 12852 0004 4883EC10 		subq	$16, %rsp
 12853 0008 48897DF8 		movq	%rdi, -8(%rbp)
 12854 000c 488975F0 		movq	%rsi, -16(%rbp)
 126:/usr/include/c++/6/bits/stl_construct.h **** 	__destroy(__first, __last);
 12855              		.loc 35 126 0
 12856 0010 488B55F0 		movq	-16(%rbp), %rdx
 12857 0014 488B45F8 		movq	-8(%rbp), %rax
 12858 0018 4889D6   		movq	%rdx, %rsi
 12859 001b 4889C7   		movq	%rax, %rdi
 12860 001e E8000000 		call	_ZNSt12_Destroy_auxILb1EE9__destroyIPlEEvT_S3_
 12860      00
 128:/usr/include/c++/6/bits/stl_construct.h **** 
 12861              		.loc 35 128 0
 12862 0023 90       		nop
 12863 0024 C9       		leave
 12864              		.cfi_def_cfa 7, 8
 12865 0025 C3       		ret
 12866              		.cfi_endproc
 12867              	.LFE13799:
 12869              		.section	.text._ZN5boost16exception_detail8set_infoINS0_10clone_implINS0_10bad_alloc_EEENS_15throw
 12870              		.weak	_ZN5boost16exception_detail8set_infoINS0_10clone_implINS0_10bad_alloc_EEENS_15throw_function
 12872              	_ZN5boost16exception_detail8set_infoINS0_10clone_implINS0_10bad_alloc_EEENS_15throw_function_EPKcEE
 12873              	.LFB13971:
 275:/usr/include/boost/exception/info.hpp ****             {
 12874              		.loc 36 275 0
 12875              		.cfi_startproc
 12876 0000 55       		pushq	%rbp
 12877              		.cfi_def_cfa_offset 16
 12878              		.cfi_offset 6, -16
 12879 0001 4889E5   		movq	%rsp, %rbp
 12880              		.cfi_def_cfa_register 6
 12881 0004 4883EC10 		subq	$16, %rsp
 12882 0008 48897DF8 		movq	%rdi, -8(%rbp)
 12883 000c 488975F0 		movq	%rsi, -16(%rbp)
 277:/usr/include/boost/exception/info.hpp ****             }
 12884              		.loc 36 277 0
 12885 0010 488B45F0 		movq	-16(%rbp), %rax
 12886 0014 4889C7   		movq	%rax, %rdi
 12887 0017 E8000000 		call	_ZSt4moveIRN5boost10error_infoINS0_15throw_function_EPKcEEEONSt16remove_referenceIT_E4typeEOS
 12887      00
 12888 001c 4889C2   		movq	%rax, %rdx
GAS LISTING /tmp/ccsIN87E.s 			page 538


 12889 001f 488B45F8 		movq	-8(%rbp), %rax
 12890 0023 4889D6   		movq	%rdx, %rsi
 12891 0026 4889C7   		movq	%rax, %rdi
 12892 0029 E8000000 		call	_ZN5boost16exception_detail11set_info_rvINS_10error_infoINS_15throw_function_EPKcEEE3setINS0_
 12892      00
 278:/usr/include/boost/exception/info.hpp **** #endif
 12893              		.loc 36 278 0
 12894 002e C9       		leave
 12895              		.cfi_def_cfa 7, 8
 12896 002f C3       		ret
 12897              		.cfi_endproc
 12898              	.LFE13971:
 12900              		.section	.text._ZN5boost16exception_detail8set_infoINS0_10clone_implINS0_10bad_alloc_EEENS_11throw
 12901              		.weak	_ZN5boost16exception_detail8set_infoINS0_10clone_implINS0_10bad_alloc_EEENS_11throw_file_EPK
 12903              	_ZN5boost16exception_detail8set_infoINS0_10clone_implINS0_10bad_alloc_EEENS_11throw_file_EPKcEERKT_
 12904              	.LFB13972:
 275:/usr/include/boost/exception/info.hpp ****             {
 12905              		.loc 36 275 0
 12906              		.cfi_startproc
 12907 0000 55       		pushq	%rbp
 12908              		.cfi_def_cfa_offset 16
 12909              		.cfi_offset 6, -16
 12910 0001 4889E5   		movq	%rsp, %rbp
 12911              		.cfi_def_cfa_register 6
 12912 0004 4883EC10 		subq	$16, %rsp
 12913 0008 48897DF8 		movq	%rdi, -8(%rbp)
 12914 000c 488975F0 		movq	%rsi, -16(%rbp)
 277:/usr/include/boost/exception/info.hpp ****             }
 12915              		.loc 36 277 0
 12916 0010 488B45F0 		movq	-16(%rbp), %rax
 12917 0014 4889C7   		movq	%rax, %rdi
 12918 0017 E8000000 		call	_ZSt4moveIRN5boost10error_infoINS0_11throw_file_EPKcEEEONSt16remove_referenceIT_E4typeEOS8_
 12918      00
 12919 001c 4889C2   		movq	%rax, %rdx
 12920 001f 488B45F8 		movq	-8(%rbp), %rax
 12921 0023 4889D6   		movq	%rdx, %rsi
 12922 0026 4889C7   		movq	%rax, %rdi
 12923 0029 E8000000 		call	_ZN5boost16exception_detail11set_info_rvINS_10error_infoINS_11throw_file_EPKcEEE3setINS0_10cl
 12923      00
 278:/usr/include/boost/exception/info.hpp **** #endif
 12924              		.loc 36 278 0
 12925 002e C9       		leave
 12926              		.cfi_def_cfa 7, 8
 12927 002f C3       		ret
 12928              		.cfi_endproc
 12929              	.LFE13972:
 12931              		.section	.text._ZN5boost16exception_detail8set_infoINS0_10clone_implINS0_10bad_alloc_EEENS_11throw
 12932              		.weak	_ZN5boost16exception_detail8set_infoINS0_10clone_implINS0_10bad_alloc_EEENS_11throw_line_EiE
 12934              	_ZN5boost16exception_detail8set_infoINS0_10clone_implINS0_10bad_alloc_EEENS_11throw_line_EiEERKT_S8
 12935              	.LFB13973:
 275:/usr/include/boost/exception/info.hpp ****             {
 12936              		.loc 36 275 0
 12937              		.cfi_startproc
 12938 0000 55       		pushq	%rbp
 12939              		.cfi_def_cfa_offset 16
 12940              		.cfi_offset 6, -16
 12941 0001 4889E5   		movq	%rsp, %rbp
GAS LISTING /tmp/ccsIN87E.s 			page 539


 12942              		.cfi_def_cfa_register 6
 12943 0004 4883EC10 		subq	$16, %rsp
 12944 0008 48897DF8 		movq	%rdi, -8(%rbp)
 12945 000c 488975F0 		movq	%rsi, -16(%rbp)
 277:/usr/include/boost/exception/info.hpp ****             }
 12946              		.loc 36 277 0
 12947 0010 488B45F0 		movq	-16(%rbp), %rax
 12948 0014 4889C7   		movq	%rax, %rdi
 12949 0017 E8000000 		call	_ZSt4moveIRN5boost10error_infoINS0_11throw_line_EiEEEONSt16remove_referenceIT_E4typeEOS6_
 12949      00
 12950 001c 4889C2   		movq	%rax, %rdx
 12951 001f 488B45F8 		movq	-8(%rbp), %rax
 12952 0023 4889D6   		movq	%rdx, %rsi
 12953 0026 4889C7   		movq	%rax, %rdi
 12954 0029 E8000000 		call	_ZN5boost16exception_detail11set_info_rvINS_10error_infoINS_11throw_line_EiEEE3setINS0_10clon
 12954      00
 278:/usr/include/boost/exception/info.hpp **** #endif
 12955              		.loc 36 278 0
 12956 002e C9       		leave
 12957              		.cfi_def_cfa 7, 8
 12958 002f C3       		ret
 12959              		.cfi_endproc
 12960              	.LFE13973:
 12962              		.section	.text._ZN5boost6detail20sp_pointer_constructIKNS_16exception_detail10clone_baseENS2_10clo
 12963              		.weak	_ZN5boost6detail20sp_pointer_constructIKNS_16exception_detail10clone_baseENS2_10clone_implIN
 12965              	_ZN5boost6detail20sp_pointer_constructIKNS_16exception_detail10clone_baseENS2_10clone_implINS2_10ba
 12966              	.LFB13974:
 282:/usr/include/boost/smart_ptr/shared_ptr.hpp **** {
 12967              		.loc 7 282 0
 12968              		.cfi_startproc
 12969 0000 55       		pushq	%rbp
 12970              		.cfi_def_cfa_offset 16
 12971              		.cfi_offset 6, -16
 12972 0001 4889E5   		movq	%rsp, %rbp
 12973              		.cfi_def_cfa_register 6
 12974 0004 4883EC30 		subq	$48, %rsp
 12975 0008 48897DE8 		movq	%rdi, -24(%rbp)
 12976 000c 488975E0 		movq	%rsi, -32(%rbp)
 12977 0010 488955D8 		movq	%rdx, -40(%rbp)
 284:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     boost::detail::sp_enable_shared_from_this( ppx, p, p );
 12978              		.loc 7 284 0
 12979 0014 488B55E0 		movq	-32(%rbp), %rdx
 12980 0018 488D45F8 		leaq	-8(%rbp), %rax
 12981 001c 4889D6   		movq	%rdx, %rsi
 12982 001f 4889C7   		movq	%rax, %rdi
 12983 0022 E8000000 		call	_ZN5boost6detail12shared_countC1INS_16exception_detail10clone_implINS3_10bad_alloc_EEEEEPT_
 12983      00
 12984 0027 488B55D8 		movq	-40(%rbp), %rdx
 12985 002b 488D45F8 		leaq	-8(%rbp), %rax
 12986 002f 4889D6   		movq	%rdx, %rsi
 12987 0032 4889C7   		movq	%rax, %rdi
 12988 0035 E8000000 		call	_ZN5boost6detail12shared_count4swapERS1_
 12988      00
 12989 003a 488D45F8 		leaq	-8(%rbp), %rax
 12990 003e 4889C7   		movq	%rax, %rdi
 12991 0041 E8000000 		call	_ZN5boost6detail12shared_countD1Ev
 12991      00
GAS LISTING /tmp/ccsIN87E.s 			page 540


 285:/usr/include/boost/smart_ptr/shared_ptr.hpp **** }
 12992              		.loc 7 285 0
 12993 0046 488B55E0 		movq	-32(%rbp), %rdx
 12994 004a 488B4DE0 		movq	-32(%rbp), %rcx
 12995 004e 488B45E8 		movq	-24(%rbp), %rax
 12996 0052 4889CE   		movq	%rcx, %rsi
 12997 0055 4889C7   		movq	%rax, %rdi
 12998 0058 B8000000 		movl	$0, %eax
 12998      00
 12999 005d E8000000 		call	_ZN5boost6detail26sp_enable_shared_from_thisEz
 12999      00
 286:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 13000              		.loc 7 286 0
 13001 0062 90       		nop
 13002 0063 C9       		leave
 13003              		.cfi_def_cfa 7, 8
 13004 0064 C3       		ret
 13005              		.cfi_endproc
 13006              	.LFE13974:
 13008              		.section	.text._ZN5boost16exception_detail8set_infoINS0_10clone_implINS0_14bad_exception_EEENS_15t
 13009              		.weak	_ZN5boost16exception_detail8set_infoINS0_10clone_implINS0_14bad_exception_EEENS_15throw_func
 13011              	_ZN5boost16exception_detail8set_infoINS0_10clone_implINS0_14bad_exception_EEENS_15throw_function_EP
 13012              	.LFB13975:
 275:/usr/include/boost/exception/info.hpp ****             {
 13013              		.loc 36 275 0
 13014              		.cfi_startproc
 13015 0000 55       		pushq	%rbp
 13016              		.cfi_def_cfa_offset 16
 13017              		.cfi_offset 6, -16
 13018 0001 4889E5   		movq	%rsp, %rbp
 13019              		.cfi_def_cfa_register 6
 13020 0004 4883EC10 		subq	$16, %rsp
 13021 0008 48897DF8 		movq	%rdi, -8(%rbp)
 13022 000c 488975F0 		movq	%rsi, -16(%rbp)
 277:/usr/include/boost/exception/info.hpp ****             }
 13023              		.loc 36 277 0
 13024 0010 488B45F0 		movq	-16(%rbp), %rax
 13025 0014 4889C7   		movq	%rax, %rdi
 13026 0017 E8000000 		call	_ZSt4moveIRN5boost10error_infoINS0_15throw_function_EPKcEEEONSt16remove_referenceIT_E4typeEOS
 13026      00
 13027 001c 4889C2   		movq	%rax, %rdx
 13028 001f 488B45F8 		movq	-8(%rbp), %rax
 13029 0023 4889D6   		movq	%rdx, %rsi
 13030 0026 4889C7   		movq	%rax, %rdi
 13031 0029 E8000000 		call	_ZN5boost16exception_detail11set_info_rvINS_10error_infoINS_15throw_function_EPKcEEE3setINS0_
 13031      00
 278:/usr/include/boost/exception/info.hpp **** #endif
 13032              		.loc 36 278 0
 13033 002e C9       		leave
 13034              		.cfi_def_cfa 7, 8
 13035 002f C3       		ret
 13036              		.cfi_endproc
 13037              	.LFE13975:
 13039              		.section	.text._ZN5boost16exception_detail8set_infoINS0_10clone_implINS0_14bad_exception_EEENS_11t
 13040              		.weak	_ZN5boost16exception_detail8set_infoINS0_10clone_implINS0_14bad_exception_EEENS_11throw_file
 13042              	_ZN5boost16exception_detail8set_infoINS0_10clone_implINS0_14bad_exception_EEENS_11throw_file_EPKcEE
 13043              	.LFB13976:
GAS LISTING /tmp/ccsIN87E.s 			page 541


 275:/usr/include/boost/exception/info.hpp ****             {
 13044              		.loc 36 275 0
 13045              		.cfi_startproc
 13046 0000 55       		pushq	%rbp
 13047              		.cfi_def_cfa_offset 16
 13048              		.cfi_offset 6, -16
 13049 0001 4889E5   		movq	%rsp, %rbp
 13050              		.cfi_def_cfa_register 6
 13051 0004 4883EC10 		subq	$16, %rsp
 13052 0008 48897DF8 		movq	%rdi, -8(%rbp)
 13053 000c 488975F0 		movq	%rsi, -16(%rbp)
 277:/usr/include/boost/exception/info.hpp ****             }
 13054              		.loc 36 277 0
 13055 0010 488B45F0 		movq	-16(%rbp), %rax
 13056 0014 4889C7   		movq	%rax, %rdi
 13057 0017 E8000000 		call	_ZSt4moveIRN5boost10error_infoINS0_11throw_file_EPKcEEEONSt16remove_referenceIT_E4typeEOS8_
 13057      00
 13058 001c 4889C2   		movq	%rax, %rdx
 13059 001f 488B45F8 		movq	-8(%rbp), %rax
 13060 0023 4889D6   		movq	%rdx, %rsi
 13061 0026 4889C7   		movq	%rax, %rdi
 13062 0029 E8000000 		call	_ZN5boost16exception_detail11set_info_rvINS_10error_infoINS_11throw_file_EPKcEEE3setINS0_10cl
 13062      00
 278:/usr/include/boost/exception/info.hpp **** #endif
 13063              		.loc 36 278 0
 13064 002e C9       		leave
 13065              		.cfi_def_cfa 7, 8
 13066 002f C3       		ret
 13067              		.cfi_endproc
 13068              	.LFE13976:
 13070              		.section	.text._ZN5boost16exception_detail8set_infoINS0_10clone_implINS0_14bad_exception_EEENS_11t
 13071              		.weak	_ZN5boost16exception_detail8set_infoINS0_10clone_implINS0_14bad_exception_EEENS_11throw_line
 13073              	_ZN5boost16exception_detail8set_infoINS0_10clone_implINS0_14bad_exception_EEENS_11throw_line_EiEERK
 13074              	.LFB13977:
 275:/usr/include/boost/exception/info.hpp ****             {
 13075              		.loc 36 275 0
 13076              		.cfi_startproc
 13077 0000 55       		pushq	%rbp
 13078              		.cfi_def_cfa_offset 16
 13079              		.cfi_offset 6, -16
 13080 0001 4889E5   		movq	%rsp, %rbp
 13081              		.cfi_def_cfa_register 6
 13082 0004 4883EC10 		subq	$16, %rsp
 13083 0008 48897DF8 		movq	%rdi, -8(%rbp)
 13084 000c 488975F0 		movq	%rsi, -16(%rbp)
 277:/usr/include/boost/exception/info.hpp ****             }
 13085              		.loc 36 277 0
 13086 0010 488B45F0 		movq	-16(%rbp), %rax
 13087 0014 4889C7   		movq	%rax, %rdi
 13088 0017 E8000000 		call	_ZSt4moveIRN5boost10error_infoINS0_11throw_line_EiEEEONSt16remove_referenceIT_E4typeEOS6_
 13088      00
 13089 001c 4889C2   		movq	%rax, %rdx
 13090 001f 488B45F8 		movq	-8(%rbp), %rax
 13091 0023 4889D6   		movq	%rdx, %rsi
 13092 0026 4889C7   		movq	%rax, %rdi
 13093 0029 E8000000 		call	_ZN5boost16exception_detail11set_info_rvINS_10error_infoINS_11throw_line_EiEEE3setINS0_10clon
 13093      00
GAS LISTING /tmp/ccsIN87E.s 			page 542


 278:/usr/include/boost/exception/info.hpp **** #endif
 13094              		.loc 36 278 0
 13095 002e C9       		leave
 13096              		.cfi_def_cfa 7, 8
 13097 002f C3       		ret
 13098              		.cfi_endproc
 13099              	.LFE13977:
 13101              		.section	.text._ZN5boost6detail20sp_pointer_constructIKNS_16exception_detail10clone_baseENS2_10clo
 13102              		.weak	_ZN5boost6detail20sp_pointer_constructIKNS_16exception_detail10clone_baseENS2_10clone_implIN
 13104              	_ZN5boost6detail20sp_pointer_constructIKNS_16exception_detail10clone_baseENS2_10clone_implINS2_14ba
 13105              	.LFB13978:
 282:/usr/include/boost/smart_ptr/shared_ptr.hpp **** {
 13106              		.loc 7 282 0
 13107              		.cfi_startproc
 13108 0000 55       		pushq	%rbp
 13109              		.cfi_def_cfa_offset 16
 13110              		.cfi_offset 6, -16
 13111 0001 4889E5   		movq	%rsp, %rbp
 13112              		.cfi_def_cfa_register 6
 13113 0004 4883EC30 		subq	$48, %rsp
 13114 0008 48897DE8 		movq	%rdi, -24(%rbp)
 13115 000c 488975E0 		movq	%rsi, -32(%rbp)
 13116 0010 488955D8 		movq	%rdx, -40(%rbp)
 284:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     boost::detail::sp_enable_shared_from_this( ppx, p, p );
 13117              		.loc 7 284 0
 13118 0014 488B55E0 		movq	-32(%rbp), %rdx
 13119 0018 488D45F8 		leaq	-8(%rbp), %rax
 13120 001c 4889D6   		movq	%rdx, %rsi
 13121 001f 4889C7   		movq	%rax, %rdi
 13122 0022 E8000000 		call	_ZN5boost6detail12shared_countC1INS_16exception_detail10clone_implINS3_14bad_exception_EEEEEP
 13122      00
 13123 0027 488B55D8 		movq	-40(%rbp), %rdx
 13124 002b 488D45F8 		leaq	-8(%rbp), %rax
 13125 002f 4889D6   		movq	%rdx, %rsi
 13126 0032 4889C7   		movq	%rax, %rdi
 13127 0035 E8000000 		call	_ZN5boost6detail12shared_count4swapERS1_
 13127      00
 13128 003a 488D45F8 		leaq	-8(%rbp), %rax
 13129 003e 4889C7   		movq	%rax, %rdi
 13130 0041 E8000000 		call	_ZN5boost6detail12shared_countD1Ev
 13130      00
 285:/usr/include/boost/smart_ptr/shared_ptr.hpp **** }
 13131              		.loc 7 285 0
 13132 0046 488B55E0 		movq	-32(%rbp), %rdx
 13133 004a 488B4DE0 		movq	-32(%rbp), %rcx
 13134 004e 488B45E8 		movq	-24(%rbp), %rax
 13135 0052 4889CE   		movq	%rcx, %rsi
 13136 0055 4889C7   		movq	%rax, %rdi
 13137 0058 B8000000 		movl	$0, %eax
 13137      00
 13138 005d E8000000 		call	_ZN5boost6detail26sp_enable_shared_from_thisEz
 13138      00
 286:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 13139              		.loc 7 286 0
 13140 0062 90       		nop
 13141 0063 C9       		leave
 13142              		.cfi_def_cfa 7, 8
GAS LISTING /tmp/ccsIN87E.s 			page 543


 13143 0064 C3       		ret
 13144              		.cfi_endproc
 13145              	.LFE13978:
 13147              		.section	.text._ZNSt16allocator_traitsISaIiEE37select_on_container_copy_constructionERKS0_,"axG",@
 13148              		.weak	_ZNSt16allocator_traitsISaIiEE37select_on_container_copy_constructionERKS0_
 13150              	_ZNSt16allocator_traitsISaIiEE37select_on_container_copy_constructionERKS0_:
 13151              	.LFB14144:
 13152              		.file 42 "/usr/include/c++/6/bits/alloc_traits.h"
   1:/usr/include/c++/6/bits/alloc_traits.h **** // Allocator traits -*- C++ -*-
   2:/usr/include/c++/6/bits/alloc_traits.h **** 
   3:/usr/include/c++/6/bits/alloc_traits.h **** // Copyright (C) 2011-2016 Free Software Foundation, Inc.
   4:/usr/include/c++/6/bits/alloc_traits.h **** //
   5:/usr/include/c++/6/bits/alloc_traits.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/6/bits/alloc_traits.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/6/bits/alloc_traits.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/6/bits/alloc_traits.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/6/bits/alloc_traits.h **** // any later version.
  10:/usr/include/c++/6/bits/alloc_traits.h **** 
  11:/usr/include/c++/6/bits/alloc_traits.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/6/bits/alloc_traits.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/6/bits/alloc_traits.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/6/bits/alloc_traits.h **** // GNU General Public License for more details.
  15:/usr/include/c++/6/bits/alloc_traits.h **** 
  16:/usr/include/c++/6/bits/alloc_traits.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/6/bits/alloc_traits.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/6/bits/alloc_traits.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/6/bits/alloc_traits.h **** 
  20:/usr/include/c++/6/bits/alloc_traits.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/6/bits/alloc_traits.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/6/bits/alloc_traits.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/6/bits/alloc_traits.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/6/bits/alloc_traits.h **** 
  25:/usr/include/c++/6/bits/alloc_traits.h **** /** @file bits/alloc_traits.h
  26:/usr/include/c++/6/bits/alloc_traits.h ****  *  This is an internal header file, included by other library headers.
  27:/usr/include/c++/6/bits/alloc_traits.h ****  *  Do not attempt to use it directly. @headername{memory}
  28:/usr/include/c++/6/bits/alloc_traits.h ****  */
  29:/usr/include/c++/6/bits/alloc_traits.h **** 
  30:/usr/include/c++/6/bits/alloc_traits.h **** #ifndef _ALLOC_TRAITS_H
  31:/usr/include/c++/6/bits/alloc_traits.h **** #define _ALLOC_TRAITS_H 1
  32:/usr/include/c++/6/bits/alloc_traits.h **** 
  33:/usr/include/c++/6/bits/alloc_traits.h **** #if __cplusplus >= 201103L
  34:/usr/include/c++/6/bits/alloc_traits.h **** 
  35:/usr/include/c++/6/bits/alloc_traits.h **** #include <bits/memoryfwd.h>
  36:/usr/include/c++/6/bits/alloc_traits.h **** #include <bits/ptr_traits.h>
  37:/usr/include/c++/6/bits/alloc_traits.h **** #include <ext/numeric_traits.h>
  38:/usr/include/c++/6/bits/alloc_traits.h **** 
  39:/usr/include/c++/6/bits/alloc_traits.h **** #define __cpp_lib_allocator_traits_is_always_equal 201411
  40:/usr/include/c++/6/bits/alloc_traits.h **** 
  41:/usr/include/c++/6/bits/alloc_traits.h **** namespace std _GLIBCXX_VISIBILITY(default)
  42:/usr/include/c++/6/bits/alloc_traits.h **** {
  43:/usr/include/c++/6/bits/alloc_traits.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  44:/usr/include/c++/6/bits/alloc_traits.h **** 
  45:/usr/include/c++/6/bits/alloc_traits.h ****   struct __allocator_traits_base
  46:/usr/include/c++/6/bits/alloc_traits.h ****   {
  47:/usr/include/c++/6/bits/alloc_traits.h ****     template<typename _Tp, typename _Up, typename = void>
  48:/usr/include/c++/6/bits/alloc_traits.h ****       struct __rebind : __replace_first_arg<_Tp, _Up> { };
  49:/usr/include/c++/6/bits/alloc_traits.h **** 
GAS LISTING /tmp/ccsIN87E.s 			page 544


  50:/usr/include/c++/6/bits/alloc_traits.h ****     template<typename _Tp, typename _Up>
  51:/usr/include/c++/6/bits/alloc_traits.h ****       struct __rebind<_Tp, _Up,
  52:/usr/include/c++/6/bits/alloc_traits.h **** 		      __void_t<typename _Tp::template rebind<_Up>::other>>
  53:/usr/include/c++/6/bits/alloc_traits.h ****       { using type = typename _Tp::template rebind<_Up>::other; };
  54:/usr/include/c++/6/bits/alloc_traits.h **** 
  55:/usr/include/c++/6/bits/alloc_traits.h ****   protected:
  56:/usr/include/c++/6/bits/alloc_traits.h ****     template<typename _Tp>
  57:/usr/include/c++/6/bits/alloc_traits.h ****       using __pointer = typename _Tp::pointer;
  58:/usr/include/c++/6/bits/alloc_traits.h ****     template<typename _Tp>
  59:/usr/include/c++/6/bits/alloc_traits.h ****       using __c_pointer = typename _Tp::const_pointer;
  60:/usr/include/c++/6/bits/alloc_traits.h ****     template<typename _Tp>
  61:/usr/include/c++/6/bits/alloc_traits.h ****       using __v_pointer = typename _Tp::void_pointer;
  62:/usr/include/c++/6/bits/alloc_traits.h ****     template<typename _Tp>
  63:/usr/include/c++/6/bits/alloc_traits.h ****       using __cv_pointer = typename _Tp::const_void_pointer;
  64:/usr/include/c++/6/bits/alloc_traits.h ****     template<typename _Tp>
  65:/usr/include/c++/6/bits/alloc_traits.h ****       using __pocca = typename _Tp::propagate_on_container_copy_assignment;
  66:/usr/include/c++/6/bits/alloc_traits.h ****     template<typename _Tp>
  67:/usr/include/c++/6/bits/alloc_traits.h ****       using __pocma = typename _Tp::propagate_on_container_move_assignment;
  68:/usr/include/c++/6/bits/alloc_traits.h ****     template<typename _Tp>
  69:/usr/include/c++/6/bits/alloc_traits.h ****       using __pocs = typename _Tp::propagate_on_container_swap;
  70:/usr/include/c++/6/bits/alloc_traits.h ****     template<typename _Tp>
  71:/usr/include/c++/6/bits/alloc_traits.h ****       using __equal = typename _Tp::is_always_equal;
  72:/usr/include/c++/6/bits/alloc_traits.h ****   };
  73:/usr/include/c++/6/bits/alloc_traits.h **** 
  74:/usr/include/c++/6/bits/alloc_traits.h ****   template<typename _Alloc, typename _Up>
  75:/usr/include/c++/6/bits/alloc_traits.h ****     using __alloc_rebind
  76:/usr/include/c++/6/bits/alloc_traits.h ****       = typename __allocator_traits_base::template __rebind<_Alloc, _Up>::type;
  77:/usr/include/c++/6/bits/alloc_traits.h **** 
  78:/usr/include/c++/6/bits/alloc_traits.h ****   /**
  79:/usr/include/c++/6/bits/alloc_traits.h ****    * @brief  Uniform interface to all allocator types.
  80:/usr/include/c++/6/bits/alloc_traits.h ****    * @ingroup allocators
  81:/usr/include/c++/6/bits/alloc_traits.h ****   */
  82:/usr/include/c++/6/bits/alloc_traits.h ****   template<typename _Alloc>
  83:/usr/include/c++/6/bits/alloc_traits.h ****     struct allocator_traits : __allocator_traits_base
  84:/usr/include/c++/6/bits/alloc_traits.h ****     {
  85:/usr/include/c++/6/bits/alloc_traits.h ****       /// The allocator type
  86:/usr/include/c++/6/bits/alloc_traits.h ****       typedef _Alloc allocator_type;
  87:/usr/include/c++/6/bits/alloc_traits.h ****       /// The allocated type
  88:/usr/include/c++/6/bits/alloc_traits.h ****       typedef typename _Alloc::value_type value_type;
  89:/usr/include/c++/6/bits/alloc_traits.h **** 
  90:/usr/include/c++/6/bits/alloc_traits.h ****       /**
  91:/usr/include/c++/6/bits/alloc_traits.h ****        * @brief   The allocator's pointer type.
  92:/usr/include/c++/6/bits/alloc_traits.h ****        *
  93:/usr/include/c++/6/bits/alloc_traits.h ****        * @c Alloc::pointer if that type exists, otherwise @c value_type*
  94:/usr/include/c++/6/bits/alloc_traits.h ****       */
  95:/usr/include/c++/6/bits/alloc_traits.h ****       using pointer = __detected_or_t<value_type*, __pointer, _Alloc>;
  96:/usr/include/c++/6/bits/alloc_traits.h **** 
  97:/usr/include/c++/6/bits/alloc_traits.h ****     private:
  98:/usr/include/c++/6/bits/alloc_traits.h ****       // Select _Func<_Alloc> or pointer_traits<pointer>::rebind<_Tp>
  99:/usr/include/c++/6/bits/alloc_traits.h ****       template<template<typename> class _Func, typename _Tp, typename = void>
 100:/usr/include/c++/6/bits/alloc_traits.h **** 	struct _Ptr
 101:/usr/include/c++/6/bits/alloc_traits.h **** 	{
 102:/usr/include/c++/6/bits/alloc_traits.h **** 	  using type = typename pointer_traits<pointer>::template rebind<_Tp>;
 103:/usr/include/c++/6/bits/alloc_traits.h **** 	};
 104:/usr/include/c++/6/bits/alloc_traits.h **** 
 105:/usr/include/c++/6/bits/alloc_traits.h ****       template<template<typename> class _Func, typename _Tp>
 106:/usr/include/c++/6/bits/alloc_traits.h **** 	struct _Ptr<_Func, _Tp, __void_t<_Func<_Alloc>>>
GAS LISTING /tmp/ccsIN87E.s 			page 545


 107:/usr/include/c++/6/bits/alloc_traits.h **** 	{
 108:/usr/include/c++/6/bits/alloc_traits.h **** 	  using type = _Func<_Alloc>;
 109:/usr/include/c++/6/bits/alloc_traits.h **** 	};
 110:/usr/include/c++/6/bits/alloc_traits.h **** 
 111:/usr/include/c++/6/bits/alloc_traits.h ****       // Select _A2::difference_type or pointer_traits<_Ptr>::difference_type
 112:/usr/include/c++/6/bits/alloc_traits.h ****       template<typename _A2, typename _PtrT, typename = void>
 113:/usr/include/c++/6/bits/alloc_traits.h **** 	struct _Diff
 114:/usr/include/c++/6/bits/alloc_traits.h **** 	{ using type = typename pointer_traits<_PtrT>::difference_type; };
 115:/usr/include/c++/6/bits/alloc_traits.h **** 
 116:/usr/include/c++/6/bits/alloc_traits.h ****       template<typename _A2, typename _PtrT>
 117:/usr/include/c++/6/bits/alloc_traits.h **** 	struct _Diff<_A2, _PtrT, __void_t<typename _A2::difference_type>>
 118:/usr/include/c++/6/bits/alloc_traits.h **** 	{ using type = typename _A2::difference_type; };
 119:/usr/include/c++/6/bits/alloc_traits.h **** 
 120:/usr/include/c++/6/bits/alloc_traits.h ****       // Select _A2::size_type or make_unsigned<_DiffT>::type
 121:/usr/include/c++/6/bits/alloc_traits.h ****       template<typename _A2, typename _DiffT, typename = void>
 122:/usr/include/c++/6/bits/alloc_traits.h **** 	struct _Size : make_unsigned<_DiffT> { };
 123:/usr/include/c++/6/bits/alloc_traits.h **** 
 124:/usr/include/c++/6/bits/alloc_traits.h ****       template<typename _A2, typename _DiffT>
 125:/usr/include/c++/6/bits/alloc_traits.h **** 	struct _Size<_A2, _DiffT, __void_t<typename _A2::size_type>>
 126:/usr/include/c++/6/bits/alloc_traits.h **** 	{ using type = typename _A2::size_type; };
 127:/usr/include/c++/6/bits/alloc_traits.h **** 
 128:/usr/include/c++/6/bits/alloc_traits.h ****     public:
 129:/usr/include/c++/6/bits/alloc_traits.h ****       /**
 130:/usr/include/c++/6/bits/alloc_traits.h ****        * @brief   The allocator's const pointer type.
 131:/usr/include/c++/6/bits/alloc_traits.h ****        *
 132:/usr/include/c++/6/bits/alloc_traits.h ****        * @c Alloc::const_pointer if that type exists, otherwise
 133:/usr/include/c++/6/bits/alloc_traits.h ****        * <tt> pointer_traits<pointer>::rebind<const value_type> </tt>
 134:/usr/include/c++/6/bits/alloc_traits.h ****       */
 135:/usr/include/c++/6/bits/alloc_traits.h ****       using const_pointer = typename _Ptr<__c_pointer, const value_type>::type;
 136:/usr/include/c++/6/bits/alloc_traits.h **** 
 137:/usr/include/c++/6/bits/alloc_traits.h ****       /**
 138:/usr/include/c++/6/bits/alloc_traits.h ****        * @brief   The allocator's void pointer type.
 139:/usr/include/c++/6/bits/alloc_traits.h ****        *
 140:/usr/include/c++/6/bits/alloc_traits.h ****        * @c Alloc::void_pointer if that type exists, otherwise
 141:/usr/include/c++/6/bits/alloc_traits.h ****        * <tt> pointer_traits<pointer>::rebind<void> </tt>
 142:/usr/include/c++/6/bits/alloc_traits.h ****       */
 143:/usr/include/c++/6/bits/alloc_traits.h ****       using void_pointer = typename _Ptr<__v_pointer, void>::type;
 144:/usr/include/c++/6/bits/alloc_traits.h **** 
 145:/usr/include/c++/6/bits/alloc_traits.h ****       /**
 146:/usr/include/c++/6/bits/alloc_traits.h ****        * @brief   The allocator's const void pointer type.
 147:/usr/include/c++/6/bits/alloc_traits.h ****        *
 148:/usr/include/c++/6/bits/alloc_traits.h ****        * @c Alloc::const_void_pointer if that type exists, otherwise
 149:/usr/include/c++/6/bits/alloc_traits.h ****        * <tt> pointer_traits<pointer>::rebind<const void> </tt>
 150:/usr/include/c++/6/bits/alloc_traits.h ****       */
 151:/usr/include/c++/6/bits/alloc_traits.h ****       using const_void_pointer = typename _Ptr<__cv_pointer, const void>::type;
 152:/usr/include/c++/6/bits/alloc_traits.h **** 
 153:/usr/include/c++/6/bits/alloc_traits.h ****       /**
 154:/usr/include/c++/6/bits/alloc_traits.h ****        * @brief   The allocator's difference type
 155:/usr/include/c++/6/bits/alloc_traits.h ****        *
 156:/usr/include/c++/6/bits/alloc_traits.h ****        * @c Alloc::difference_type if that type exists, otherwise
 157:/usr/include/c++/6/bits/alloc_traits.h ****        * <tt> pointer_traits<pointer>::difference_type </tt>
 158:/usr/include/c++/6/bits/alloc_traits.h ****       */
 159:/usr/include/c++/6/bits/alloc_traits.h ****       using difference_type = typename _Diff<_Alloc, pointer>::type;
 160:/usr/include/c++/6/bits/alloc_traits.h **** 
 161:/usr/include/c++/6/bits/alloc_traits.h ****       /**
 162:/usr/include/c++/6/bits/alloc_traits.h ****        * @brief   The allocator's size type
 163:/usr/include/c++/6/bits/alloc_traits.h ****        *
GAS LISTING /tmp/ccsIN87E.s 			page 546


 164:/usr/include/c++/6/bits/alloc_traits.h ****        * @c Alloc::size_type if that type exists, otherwise
 165:/usr/include/c++/6/bits/alloc_traits.h ****        * <tt> make_unsigned<difference_type>::type </tt>
 166:/usr/include/c++/6/bits/alloc_traits.h ****       */
 167:/usr/include/c++/6/bits/alloc_traits.h ****       using size_type = typename _Size<_Alloc, difference_type>::type;
 168:/usr/include/c++/6/bits/alloc_traits.h **** 
 169:/usr/include/c++/6/bits/alloc_traits.h ****       /**
 170:/usr/include/c++/6/bits/alloc_traits.h ****        * @brief   How the allocator is propagated on copy assignment
 171:/usr/include/c++/6/bits/alloc_traits.h ****        *
 172:/usr/include/c++/6/bits/alloc_traits.h ****        * @c Alloc::propagate_on_container_copy_assignment if that type exists,
 173:/usr/include/c++/6/bits/alloc_traits.h ****        * otherwise @c false_type
 174:/usr/include/c++/6/bits/alloc_traits.h ****       */
 175:/usr/include/c++/6/bits/alloc_traits.h ****       using propagate_on_container_copy_assignment
 176:/usr/include/c++/6/bits/alloc_traits.h **** 	= __detected_or_t<false_type, __pocca, _Alloc>;
 177:/usr/include/c++/6/bits/alloc_traits.h **** 
 178:/usr/include/c++/6/bits/alloc_traits.h ****       /**
 179:/usr/include/c++/6/bits/alloc_traits.h ****        * @brief   How the allocator is propagated on move assignment
 180:/usr/include/c++/6/bits/alloc_traits.h ****        *
 181:/usr/include/c++/6/bits/alloc_traits.h ****        * @c Alloc::propagate_on_container_move_assignment if that type exists,
 182:/usr/include/c++/6/bits/alloc_traits.h ****        * otherwise @c false_type
 183:/usr/include/c++/6/bits/alloc_traits.h ****       */
 184:/usr/include/c++/6/bits/alloc_traits.h ****       using propagate_on_container_move_assignment
 185:/usr/include/c++/6/bits/alloc_traits.h **** 	= __detected_or_t<false_type, __pocma, _Alloc>;
 186:/usr/include/c++/6/bits/alloc_traits.h **** 
 187:/usr/include/c++/6/bits/alloc_traits.h ****       /**
 188:/usr/include/c++/6/bits/alloc_traits.h ****        * @brief   How the allocator is propagated on swap
 189:/usr/include/c++/6/bits/alloc_traits.h ****        *
 190:/usr/include/c++/6/bits/alloc_traits.h ****        * @c Alloc::propagate_on_container_swap if that type exists,
 191:/usr/include/c++/6/bits/alloc_traits.h ****        * otherwise @c false_type
 192:/usr/include/c++/6/bits/alloc_traits.h ****       */
 193:/usr/include/c++/6/bits/alloc_traits.h ****       using propagate_on_container_swap
 194:/usr/include/c++/6/bits/alloc_traits.h **** 	= __detected_or_t<false_type, __pocs, _Alloc>;
 195:/usr/include/c++/6/bits/alloc_traits.h **** 
 196:/usr/include/c++/6/bits/alloc_traits.h ****       /**
 197:/usr/include/c++/6/bits/alloc_traits.h ****        * @brief   Whether all instances of the allocator type compare equal.
 198:/usr/include/c++/6/bits/alloc_traits.h ****        *
 199:/usr/include/c++/6/bits/alloc_traits.h ****        * @c Alloc::is_always_equal if that type exists,
 200:/usr/include/c++/6/bits/alloc_traits.h ****        * otherwise @c is_empty<Alloc>::type
 201:/usr/include/c++/6/bits/alloc_traits.h ****       */
 202:/usr/include/c++/6/bits/alloc_traits.h ****       using is_always_equal
 203:/usr/include/c++/6/bits/alloc_traits.h **** 	= __detected_or_t<typename is_empty<_Alloc>::type, __equal, _Alloc>;
 204:/usr/include/c++/6/bits/alloc_traits.h **** 
 205:/usr/include/c++/6/bits/alloc_traits.h ****       template<typename _Tp>
 206:/usr/include/c++/6/bits/alloc_traits.h **** 	using rebind_alloc = __alloc_rebind<_Alloc, _Tp>;
 207:/usr/include/c++/6/bits/alloc_traits.h ****       template<typename _Tp>
 208:/usr/include/c++/6/bits/alloc_traits.h **** 	using rebind_traits = allocator_traits<rebind_alloc<_Tp>>;
 209:/usr/include/c++/6/bits/alloc_traits.h **** 
 210:/usr/include/c++/6/bits/alloc_traits.h ****     private:
 211:/usr/include/c++/6/bits/alloc_traits.h ****       template<typename _Alloc2>
 212:/usr/include/c++/6/bits/alloc_traits.h **** 	static auto
 213:/usr/include/c++/6/bits/alloc_traits.h **** 	_S_allocate(_Alloc2& __a, size_type __n, const_void_pointer __hint, int)
 214:/usr/include/c++/6/bits/alloc_traits.h **** 	-> decltype(__a.allocate(__n, __hint))
 215:/usr/include/c++/6/bits/alloc_traits.h **** 	{ return __a.allocate(__n, __hint); }
 216:/usr/include/c++/6/bits/alloc_traits.h **** 
 217:/usr/include/c++/6/bits/alloc_traits.h ****       template<typename _Alloc2>
 218:/usr/include/c++/6/bits/alloc_traits.h **** 	static pointer
 219:/usr/include/c++/6/bits/alloc_traits.h **** 	_S_allocate(_Alloc2& __a, size_type __n, const_void_pointer, ...)
 220:/usr/include/c++/6/bits/alloc_traits.h **** 	{ return __a.allocate(__n); }
GAS LISTING /tmp/ccsIN87E.s 			page 547


 221:/usr/include/c++/6/bits/alloc_traits.h **** 
 222:/usr/include/c++/6/bits/alloc_traits.h ****       template<typename _Tp, typename... _Args>
 223:/usr/include/c++/6/bits/alloc_traits.h **** 	struct __construct_helper
 224:/usr/include/c++/6/bits/alloc_traits.h **** 	{
 225:/usr/include/c++/6/bits/alloc_traits.h **** 	  template<typename _Alloc2,
 226:/usr/include/c++/6/bits/alloc_traits.h **** 	    typename = decltype(std::declval<_Alloc2*>()->construct(
 227:/usr/include/c++/6/bits/alloc_traits.h **** 		  std::declval<_Tp*>(), std::declval<_Args>()...))>
 228:/usr/include/c++/6/bits/alloc_traits.h **** 	    static true_type __test(int);
 229:/usr/include/c++/6/bits/alloc_traits.h **** 
 230:/usr/include/c++/6/bits/alloc_traits.h **** 	  template<typename>
 231:/usr/include/c++/6/bits/alloc_traits.h **** 	    static false_type __test(...);
 232:/usr/include/c++/6/bits/alloc_traits.h **** 
 233:/usr/include/c++/6/bits/alloc_traits.h **** 	  using type = decltype(__test<_Alloc>(0));
 234:/usr/include/c++/6/bits/alloc_traits.h **** 	};
 235:/usr/include/c++/6/bits/alloc_traits.h **** 
 236:/usr/include/c++/6/bits/alloc_traits.h ****       template<typename _Tp, typename... _Args>
 237:/usr/include/c++/6/bits/alloc_traits.h **** 	using __has_construct
 238:/usr/include/c++/6/bits/alloc_traits.h **** 	  = typename __construct_helper<_Tp, _Args...>::type;
 239:/usr/include/c++/6/bits/alloc_traits.h **** 
 240:/usr/include/c++/6/bits/alloc_traits.h ****       template<typename _Tp, typename... _Args>
 241:/usr/include/c++/6/bits/alloc_traits.h **** 	static _Require<__has_construct<_Tp, _Args...>>
 242:/usr/include/c++/6/bits/alloc_traits.h **** 	_S_construct(_Alloc& __a, _Tp* __p, _Args&&... __args)
 243:/usr/include/c++/6/bits/alloc_traits.h **** 	{ __a.construct(__p, std::forward<_Args>(__args)...); }
 244:/usr/include/c++/6/bits/alloc_traits.h **** 
 245:/usr/include/c++/6/bits/alloc_traits.h ****       template<typename _Tp, typename... _Args>
 246:/usr/include/c++/6/bits/alloc_traits.h **** 	static
 247:/usr/include/c++/6/bits/alloc_traits.h **** 	_Require<__and_<__not_<__has_construct<_Tp, _Args...>>,
 248:/usr/include/c++/6/bits/alloc_traits.h **** 			       is_constructible<_Tp, _Args...>>>
 249:/usr/include/c++/6/bits/alloc_traits.h **** 	_S_construct(_Alloc&, _Tp* __p, _Args&&... __args)
 250:/usr/include/c++/6/bits/alloc_traits.h **** 	{ ::new((void*)__p) _Tp(std::forward<_Args>(__args)...); }
 251:/usr/include/c++/6/bits/alloc_traits.h **** 
 252:/usr/include/c++/6/bits/alloc_traits.h ****       template<typename _Alloc2, typename _Tp>
 253:/usr/include/c++/6/bits/alloc_traits.h **** 	static auto
 254:/usr/include/c++/6/bits/alloc_traits.h **** 	_S_destroy(_Alloc2& __a, _Tp* __p, int)
 255:/usr/include/c++/6/bits/alloc_traits.h **** 	-> decltype(__a.destroy(__p))
 256:/usr/include/c++/6/bits/alloc_traits.h **** 	{ __a.destroy(__p); }
 257:/usr/include/c++/6/bits/alloc_traits.h **** 
 258:/usr/include/c++/6/bits/alloc_traits.h ****       template<typename _Alloc2, typename _Tp>
 259:/usr/include/c++/6/bits/alloc_traits.h **** 	static void
 260:/usr/include/c++/6/bits/alloc_traits.h **** 	_S_destroy(_Alloc2&, _Tp* __p, ...)
 261:/usr/include/c++/6/bits/alloc_traits.h **** 	{ __p->~_Tp(); }
 262:/usr/include/c++/6/bits/alloc_traits.h **** 
 263:/usr/include/c++/6/bits/alloc_traits.h ****       template<typename _Alloc2>
 264:/usr/include/c++/6/bits/alloc_traits.h **** 	static auto
 265:/usr/include/c++/6/bits/alloc_traits.h **** 	_S_max_size(_Alloc2& __a, int)
 266:/usr/include/c++/6/bits/alloc_traits.h **** 	-> decltype(__a.max_size())
 267:/usr/include/c++/6/bits/alloc_traits.h **** 	{ return __a.max_size(); }
 268:/usr/include/c++/6/bits/alloc_traits.h **** 
 269:/usr/include/c++/6/bits/alloc_traits.h ****       template<typename _Alloc2>
 270:/usr/include/c++/6/bits/alloc_traits.h **** 	static size_type
 271:/usr/include/c++/6/bits/alloc_traits.h **** 	_S_max_size(_Alloc2&, ...)
 272:/usr/include/c++/6/bits/alloc_traits.h **** 	{
 273:/usr/include/c++/6/bits/alloc_traits.h **** 	  // _GLIBCXX_RESOLVE_LIB_DEFECTS
 274:/usr/include/c++/6/bits/alloc_traits.h **** 	  // 2466. allocator_traits::max_size() default behavior is incorrect
 275:/usr/include/c++/6/bits/alloc_traits.h **** 	  return __gnu_cxx::__numeric_traits<size_type>::__max
 276:/usr/include/c++/6/bits/alloc_traits.h **** 	    / sizeof(value_type);
 277:/usr/include/c++/6/bits/alloc_traits.h **** 	}
GAS LISTING /tmp/ccsIN87E.s 			page 548


 278:/usr/include/c++/6/bits/alloc_traits.h **** 
 279:/usr/include/c++/6/bits/alloc_traits.h ****       template<typename _Alloc2>
 280:/usr/include/c++/6/bits/alloc_traits.h **** 	static auto
 281:/usr/include/c++/6/bits/alloc_traits.h **** 	_S_select(_Alloc2& __a, int)
 282:/usr/include/c++/6/bits/alloc_traits.h **** 	-> decltype(__a.select_on_container_copy_construction())
 283:/usr/include/c++/6/bits/alloc_traits.h **** 	{ return __a.select_on_container_copy_construction(); }
 284:/usr/include/c++/6/bits/alloc_traits.h **** 
 285:/usr/include/c++/6/bits/alloc_traits.h ****       template<typename _Alloc2>
 286:/usr/include/c++/6/bits/alloc_traits.h **** 	static _Alloc2
 287:/usr/include/c++/6/bits/alloc_traits.h **** 	_S_select(_Alloc2& __a, ...)
 288:/usr/include/c++/6/bits/alloc_traits.h **** 	{ return __a; }
 289:/usr/include/c++/6/bits/alloc_traits.h **** 
 290:/usr/include/c++/6/bits/alloc_traits.h ****     public:
 291:/usr/include/c++/6/bits/alloc_traits.h **** 
 292:/usr/include/c++/6/bits/alloc_traits.h ****       /**
 293:/usr/include/c++/6/bits/alloc_traits.h ****        *  @brief  Allocate memory.
 294:/usr/include/c++/6/bits/alloc_traits.h ****        *  @param  __a  An allocator.
 295:/usr/include/c++/6/bits/alloc_traits.h ****        *  @param  __n  The number of objects to allocate space for.
 296:/usr/include/c++/6/bits/alloc_traits.h ****        *
 297:/usr/include/c++/6/bits/alloc_traits.h ****        *  Calls @c a.allocate(n)
 298:/usr/include/c++/6/bits/alloc_traits.h ****       */
 299:/usr/include/c++/6/bits/alloc_traits.h ****       static pointer
 300:/usr/include/c++/6/bits/alloc_traits.h ****       allocate(_Alloc& __a, size_type __n)
 301:/usr/include/c++/6/bits/alloc_traits.h ****       { return __a.allocate(__n); }
 302:/usr/include/c++/6/bits/alloc_traits.h **** 
 303:/usr/include/c++/6/bits/alloc_traits.h ****       /**
 304:/usr/include/c++/6/bits/alloc_traits.h ****        *  @brief  Allocate memory.
 305:/usr/include/c++/6/bits/alloc_traits.h ****        *  @param  __a  An allocator.
 306:/usr/include/c++/6/bits/alloc_traits.h ****        *  @param  __n  The number of objects to allocate space for.
 307:/usr/include/c++/6/bits/alloc_traits.h ****        *  @param  __hint Aid to locality.
 308:/usr/include/c++/6/bits/alloc_traits.h ****        *  @return Memory of suitable size and alignment for @a n objects
 309:/usr/include/c++/6/bits/alloc_traits.h ****        *          of type @c value_type
 310:/usr/include/c++/6/bits/alloc_traits.h ****        *
 311:/usr/include/c++/6/bits/alloc_traits.h ****        *  Returns <tt> a.allocate(n, hint) </tt> if that expression is
 312:/usr/include/c++/6/bits/alloc_traits.h ****        *  well-formed, otherwise returns @c a.allocate(n)
 313:/usr/include/c++/6/bits/alloc_traits.h ****       */
 314:/usr/include/c++/6/bits/alloc_traits.h ****       static pointer
 315:/usr/include/c++/6/bits/alloc_traits.h ****       allocate(_Alloc& __a, size_type __n, const_void_pointer __hint)
 316:/usr/include/c++/6/bits/alloc_traits.h ****       { return _S_allocate(__a, __n, __hint, 0); }
 317:/usr/include/c++/6/bits/alloc_traits.h **** 
 318:/usr/include/c++/6/bits/alloc_traits.h ****       /**
 319:/usr/include/c++/6/bits/alloc_traits.h ****        *  @brief  Deallocate memory.
 320:/usr/include/c++/6/bits/alloc_traits.h ****        *  @param  __a  An allocator.
 321:/usr/include/c++/6/bits/alloc_traits.h ****        *  @param  __p  Pointer to the memory to deallocate.
 322:/usr/include/c++/6/bits/alloc_traits.h ****        *  @param  __n  The number of objects space was allocated for.
 323:/usr/include/c++/6/bits/alloc_traits.h ****        *
 324:/usr/include/c++/6/bits/alloc_traits.h ****        *  Calls <tt> a.deallocate(p, n) </tt>
 325:/usr/include/c++/6/bits/alloc_traits.h ****       */
 326:/usr/include/c++/6/bits/alloc_traits.h ****       static void
 327:/usr/include/c++/6/bits/alloc_traits.h ****       deallocate(_Alloc& __a, pointer __p, size_type __n)
 328:/usr/include/c++/6/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 329:/usr/include/c++/6/bits/alloc_traits.h **** 
 330:/usr/include/c++/6/bits/alloc_traits.h ****       /**
 331:/usr/include/c++/6/bits/alloc_traits.h ****        *  @brief  Construct an object of type @a _Tp
 332:/usr/include/c++/6/bits/alloc_traits.h ****        *  @param  __a  An allocator.
 333:/usr/include/c++/6/bits/alloc_traits.h ****        *  @param  __p  Pointer to memory of suitable size and alignment for Tp
 334:/usr/include/c++/6/bits/alloc_traits.h ****        *  @param  __args Constructor arguments.
GAS LISTING /tmp/ccsIN87E.s 			page 549


 335:/usr/include/c++/6/bits/alloc_traits.h ****        *
 336:/usr/include/c++/6/bits/alloc_traits.h ****        *  Calls <tt> __a.construct(__p, std::forward<Args>(__args)...) </tt>
 337:/usr/include/c++/6/bits/alloc_traits.h ****        *  if that expression is well-formed, otherwise uses placement-new
 338:/usr/include/c++/6/bits/alloc_traits.h ****        *  to construct an object of type @a _Tp at location @a __p from the
 339:/usr/include/c++/6/bits/alloc_traits.h ****        *  arguments @a __args...
 340:/usr/include/c++/6/bits/alloc_traits.h ****       */
 341:/usr/include/c++/6/bits/alloc_traits.h ****       template<typename _Tp, typename... _Args>
 342:/usr/include/c++/6/bits/alloc_traits.h **** 	static auto construct(_Alloc& __a, _Tp* __p, _Args&&... __args)
 343:/usr/include/c++/6/bits/alloc_traits.h **** 	-> decltype(_S_construct(__a, __p, std::forward<_Args>(__args)...))
 344:/usr/include/c++/6/bits/alloc_traits.h **** 	{ _S_construct(__a, __p, std::forward<_Args>(__args)...); }
 345:/usr/include/c++/6/bits/alloc_traits.h **** 
 346:/usr/include/c++/6/bits/alloc_traits.h ****       /**
 347:/usr/include/c++/6/bits/alloc_traits.h ****        *  @brief  Destroy an object of type @a _Tp
 348:/usr/include/c++/6/bits/alloc_traits.h ****        *  @param  __a  An allocator.
 349:/usr/include/c++/6/bits/alloc_traits.h ****        *  @param  __p  Pointer to the object to destroy
 350:/usr/include/c++/6/bits/alloc_traits.h ****        *
 351:/usr/include/c++/6/bits/alloc_traits.h ****        *  Calls @c __a.destroy(__p) if that expression is well-formed,
 352:/usr/include/c++/6/bits/alloc_traits.h ****        *  otherwise calls @c __p->~_Tp()
 353:/usr/include/c++/6/bits/alloc_traits.h ****       */
 354:/usr/include/c++/6/bits/alloc_traits.h ****       template<typename _Tp>
 355:/usr/include/c++/6/bits/alloc_traits.h **** 	static void destroy(_Alloc& __a, _Tp* __p)
 356:/usr/include/c++/6/bits/alloc_traits.h **** 	{ _S_destroy(__a, __p, 0); }
 357:/usr/include/c++/6/bits/alloc_traits.h **** 
 358:/usr/include/c++/6/bits/alloc_traits.h ****       /**
 359:/usr/include/c++/6/bits/alloc_traits.h ****        *  @brief  The maximum supported allocation size
 360:/usr/include/c++/6/bits/alloc_traits.h ****        *  @param  __a  An allocator.
 361:/usr/include/c++/6/bits/alloc_traits.h ****        *  @return @c __a.max_size() or @c numeric_limits<size_type>::max()
 362:/usr/include/c++/6/bits/alloc_traits.h ****        *
 363:/usr/include/c++/6/bits/alloc_traits.h ****        *  Returns @c __a.max_size() if that expression is well-formed,
 364:/usr/include/c++/6/bits/alloc_traits.h ****        *  otherwise returns @c numeric_limits<size_type>::max()
 365:/usr/include/c++/6/bits/alloc_traits.h ****       */
 366:/usr/include/c++/6/bits/alloc_traits.h ****       static size_type max_size(const _Alloc& __a) noexcept
 367:/usr/include/c++/6/bits/alloc_traits.h ****       { return _S_max_size(__a, 0); }
 368:/usr/include/c++/6/bits/alloc_traits.h **** 
 369:/usr/include/c++/6/bits/alloc_traits.h ****       /**
 370:/usr/include/c++/6/bits/alloc_traits.h ****        *  @brief  Obtain an allocator to use when copying a container.
 371:/usr/include/c++/6/bits/alloc_traits.h ****        *  @param  __rhs  An allocator.
 372:/usr/include/c++/6/bits/alloc_traits.h ****        *  @return @c __rhs.select_on_container_copy_construction() or @a __rhs
 373:/usr/include/c++/6/bits/alloc_traits.h ****        *
 374:/usr/include/c++/6/bits/alloc_traits.h ****        *  Returns @c __rhs.select_on_container_copy_construction() if that
 375:/usr/include/c++/6/bits/alloc_traits.h ****        *  expression is well-formed, otherwise returns @a __rhs
 376:/usr/include/c++/6/bits/alloc_traits.h ****       */
 377:/usr/include/c++/6/bits/alloc_traits.h ****       static _Alloc
 378:/usr/include/c++/6/bits/alloc_traits.h ****       select_on_container_copy_construction(const _Alloc& __rhs)
 379:/usr/include/c++/6/bits/alloc_traits.h ****       { return _S_select(__rhs, 0); }
 380:/usr/include/c++/6/bits/alloc_traits.h ****     };
 381:/usr/include/c++/6/bits/alloc_traits.h **** 
 382:/usr/include/c++/6/bits/alloc_traits.h ****   /// Partial specialization for std::allocator.
 383:/usr/include/c++/6/bits/alloc_traits.h ****   template<typename _Tp>
 384:/usr/include/c++/6/bits/alloc_traits.h ****     struct allocator_traits<allocator<_Tp>>
 385:/usr/include/c++/6/bits/alloc_traits.h ****     {
 386:/usr/include/c++/6/bits/alloc_traits.h ****       /// The allocator type
 387:/usr/include/c++/6/bits/alloc_traits.h ****       using allocator_type = allocator<_Tp>;
 388:/usr/include/c++/6/bits/alloc_traits.h ****       /// The allocated type
 389:/usr/include/c++/6/bits/alloc_traits.h ****       using value_type = _Tp;
 390:/usr/include/c++/6/bits/alloc_traits.h **** 
 391:/usr/include/c++/6/bits/alloc_traits.h ****       /// The allocator's pointer type.
GAS LISTING /tmp/ccsIN87E.s 			page 550


 392:/usr/include/c++/6/bits/alloc_traits.h ****       using pointer = _Tp*;
 393:/usr/include/c++/6/bits/alloc_traits.h **** 
 394:/usr/include/c++/6/bits/alloc_traits.h ****       /// The allocator's const pointer type.
 395:/usr/include/c++/6/bits/alloc_traits.h ****       using const_pointer = const _Tp*;
 396:/usr/include/c++/6/bits/alloc_traits.h **** 
 397:/usr/include/c++/6/bits/alloc_traits.h ****       /// The allocator's void pointer type.
 398:/usr/include/c++/6/bits/alloc_traits.h ****       using void_pointer = void*;
 399:/usr/include/c++/6/bits/alloc_traits.h **** 
 400:/usr/include/c++/6/bits/alloc_traits.h ****       /// The allocator's const void pointer type.
 401:/usr/include/c++/6/bits/alloc_traits.h ****       using const_void_pointer = const void*;
 402:/usr/include/c++/6/bits/alloc_traits.h **** 
 403:/usr/include/c++/6/bits/alloc_traits.h ****       /// The allocator's difference type
 404:/usr/include/c++/6/bits/alloc_traits.h ****       using difference_type = std::ptrdiff_t;
 405:/usr/include/c++/6/bits/alloc_traits.h **** 
 406:/usr/include/c++/6/bits/alloc_traits.h ****       /// The allocator's size type
 407:/usr/include/c++/6/bits/alloc_traits.h ****       using size_type = std::size_t;
 408:/usr/include/c++/6/bits/alloc_traits.h **** 
 409:/usr/include/c++/6/bits/alloc_traits.h ****       /// How the allocator is propagated on copy assignment
 410:/usr/include/c++/6/bits/alloc_traits.h ****       using propagate_on_container_copy_assignment = false_type;
 411:/usr/include/c++/6/bits/alloc_traits.h **** 
 412:/usr/include/c++/6/bits/alloc_traits.h ****       /// How the allocator is propagated on move assignment
 413:/usr/include/c++/6/bits/alloc_traits.h ****       using propagate_on_container_move_assignment = true_type;
 414:/usr/include/c++/6/bits/alloc_traits.h **** 
 415:/usr/include/c++/6/bits/alloc_traits.h ****       /// How the allocator is propagated on swap
 416:/usr/include/c++/6/bits/alloc_traits.h ****       using propagate_on_container_swap = false_type;
 417:/usr/include/c++/6/bits/alloc_traits.h **** 
 418:/usr/include/c++/6/bits/alloc_traits.h ****       /// Whether all instances of the allocator type compare equal.
 419:/usr/include/c++/6/bits/alloc_traits.h ****       using is_always_equal = true_type;
 420:/usr/include/c++/6/bits/alloc_traits.h **** 
 421:/usr/include/c++/6/bits/alloc_traits.h ****       template<typename _Up>
 422:/usr/include/c++/6/bits/alloc_traits.h **** 	using rebind_alloc = allocator<_Up>;
 423:/usr/include/c++/6/bits/alloc_traits.h **** 
 424:/usr/include/c++/6/bits/alloc_traits.h ****       template<typename _Up>
 425:/usr/include/c++/6/bits/alloc_traits.h **** 	using rebind_traits = allocator_traits<allocator<_Up>>;
 426:/usr/include/c++/6/bits/alloc_traits.h **** 
 427:/usr/include/c++/6/bits/alloc_traits.h ****       /**
 428:/usr/include/c++/6/bits/alloc_traits.h ****        *  @brief  Allocate memory.
 429:/usr/include/c++/6/bits/alloc_traits.h ****        *  @param  __a  An allocator.
 430:/usr/include/c++/6/bits/alloc_traits.h ****        *  @param  __n  The number of objects to allocate space for.
 431:/usr/include/c++/6/bits/alloc_traits.h ****        *
 432:/usr/include/c++/6/bits/alloc_traits.h ****        *  Calls @c a.allocate(n)
 433:/usr/include/c++/6/bits/alloc_traits.h ****       */
 434:/usr/include/c++/6/bits/alloc_traits.h ****       static pointer
 435:/usr/include/c++/6/bits/alloc_traits.h ****       allocate(allocator_type& __a, size_type __n)
 436:/usr/include/c++/6/bits/alloc_traits.h ****       { return __a.allocate(__n); }
 437:/usr/include/c++/6/bits/alloc_traits.h **** 
 438:/usr/include/c++/6/bits/alloc_traits.h ****       /**
 439:/usr/include/c++/6/bits/alloc_traits.h ****        *  @brief  Allocate memory.
 440:/usr/include/c++/6/bits/alloc_traits.h ****        *  @param  __a  An allocator.
 441:/usr/include/c++/6/bits/alloc_traits.h ****        *  @param  __n  The number of objects to allocate space for.
 442:/usr/include/c++/6/bits/alloc_traits.h ****        *  @param  __hint Aid to locality.
 443:/usr/include/c++/6/bits/alloc_traits.h ****        *  @return Memory of suitable size and alignment for @a n objects
 444:/usr/include/c++/6/bits/alloc_traits.h ****        *          of type @c value_type
 445:/usr/include/c++/6/bits/alloc_traits.h ****        *
 446:/usr/include/c++/6/bits/alloc_traits.h ****        *  Returns <tt> a.allocate(n, hint) </tt>
 447:/usr/include/c++/6/bits/alloc_traits.h ****       */
 448:/usr/include/c++/6/bits/alloc_traits.h ****       static pointer
GAS LISTING /tmp/ccsIN87E.s 			page 551


 449:/usr/include/c++/6/bits/alloc_traits.h ****       allocate(allocator_type& __a, size_type __n, const_void_pointer __hint)
 450:/usr/include/c++/6/bits/alloc_traits.h ****       { return __a.allocate(__n, __hint); }
 451:/usr/include/c++/6/bits/alloc_traits.h **** 
 452:/usr/include/c++/6/bits/alloc_traits.h ****       /**
 453:/usr/include/c++/6/bits/alloc_traits.h ****        *  @brief  Deallocate memory.
 454:/usr/include/c++/6/bits/alloc_traits.h ****        *  @param  __a  An allocator.
 455:/usr/include/c++/6/bits/alloc_traits.h ****        *  @param  __p  Pointer to the memory to deallocate.
 456:/usr/include/c++/6/bits/alloc_traits.h ****        *  @param  __n  The number of objects space was allocated for.
 457:/usr/include/c++/6/bits/alloc_traits.h ****        *
 458:/usr/include/c++/6/bits/alloc_traits.h ****        *  Calls <tt> a.deallocate(p, n) </tt>
 459:/usr/include/c++/6/bits/alloc_traits.h ****       */
 460:/usr/include/c++/6/bits/alloc_traits.h ****       static void
 461:/usr/include/c++/6/bits/alloc_traits.h ****       deallocate(allocator_type& __a, pointer __p, size_type __n)
 462:/usr/include/c++/6/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 463:/usr/include/c++/6/bits/alloc_traits.h **** 
 464:/usr/include/c++/6/bits/alloc_traits.h ****       /**
 465:/usr/include/c++/6/bits/alloc_traits.h ****        *  @brief  Construct an object of type @a _Up
 466:/usr/include/c++/6/bits/alloc_traits.h ****        *  @param  __a  An allocator.
 467:/usr/include/c++/6/bits/alloc_traits.h ****        *  @param  __p  Pointer to memory of suitable size and alignment for Tp
 468:/usr/include/c++/6/bits/alloc_traits.h ****        *  @param  __args Constructor arguments.
 469:/usr/include/c++/6/bits/alloc_traits.h ****        *
 470:/usr/include/c++/6/bits/alloc_traits.h ****        *  Calls <tt> __a.construct(__p, std::forward<Args>(__args)...) </tt>
 471:/usr/include/c++/6/bits/alloc_traits.h ****       */
 472:/usr/include/c++/6/bits/alloc_traits.h ****       template<typename _Up, typename... _Args>
 473:/usr/include/c++/6/bits/alloc_traits.h **** 	static void
 474:/usr/include/c++/6/bits/alloc_traits.h **** 	construct(allocator_type& __a, _Up* __p, _Args&&... __args)
 475:/usr/include/c++/6/bits/alloc_traits.h **** 	{ __a.construct(__p, std::forward<_Args>(__args)...); }
 476:/usr/include/c++/6/bits/alloc_traits.h **** 
 477:/usr/include/c++/6/bits/alloc_traits.h ****       /**
 478:/usr/include/c++/6/bits/alloc_traits.h ****        *  @brief  Destroy an object of type @a _Up
 479:/usr/include/c++/6/bits/alloc_traits.h ****        *  @param  __a  An allocator.
 480:/usr/include/c++/6/bits/alloc_traits.h ****        *  @param  __p  Pointer to the object to destroy
 481:/usr/include/c++/6/bits/alloc_traits.h ****        *
 482:/usr/include/c++/6/bits/alloc_traits.h ****        *  Calls @c __a.destroy(__p).
 483:/usr/include/c++/6/bits/alloc_traits.h ****       */
 484:/usr/include/c++/6/bits/alloc_traits.h ****       template<typename _Up>
 485:/usr/include/c++/6/bits/alloc_traits.h **** 	static void
 486:/usr/include/c++/6/bits/alloc_traits.h **** 	destroy(allocator_type& __a, _Up* __p)
 487:/usr/include/c++/6/bits/alloc_traits.h **** 	{ __a.destroy(__p); }
 488:/usr/include/c++/6/bits/alloc_traits.h **** 
 489:/usr/include/c++/6/bits/alloc_traits.h ****       /**
 490:/usr/include/c++/6/bits/alloc_traits.h ****        *  @brief  The maximum supported allocation size
 491:/usr/include/c++/6/bits/alloc_traits.h ****        *  @param  __a  An allocator.
 492:/usr/include/c++/6/bits/alloc_traits.h ****        *  @return @c __a.max_size()
 493:/usr/include/c++/6/bits/alloc_traits.h ****       */
 494:/usr/include/c++/6/bits/alloc_traits.h ****       static size_type
 495:/usr/include/c++/6/bits/alloc_traits.h ****       max_size(const allocator_type& __a) noexcept
 496:/usr/include/c++/6/bits/alloc_traits.h ****       { return __a.max_size(); }
 497:/usr/include/c++/6/bits/alloc_traits.h **** 
 498:/usr/include/c++/6/bits/alloc_traits.h ****       /**
 499:/usr/include/c++/6/bits/alloc_traits.h ****        *  @brief  Obtain an allocator to use when copying a container.
 500:/usr/include/c++/6/bits/alloc_traits.h ****        *  @param  __rhs  An allocator.
 501:/usr/include/c++/6/bits/alloc_traits.h ****        *  @return @c __rhs
 502:/usr/include/c++/6/bits/alloc_traits.h ****       */
 503:/usr/include/c++/6/bits/alloc_traits.h ****       static allocator_type
 504:/usr/include/c++/6/bits/alloc_traits.h ****       select_on_container_copy_construction(const allocator_type& __rhs)
 13153              		.loc 42 504 0
GAS LISTING /tmp/ccsIN87E.s 			page 552


 13154              		.cfi_startproc
 13155 0000 55       		pushq	%rbp
 13156              		.cfi_def_cfa_offset 16
 13157              		.cfi_offset 6, -16
 13158 0001 4889E5   		movq	%rsp, %rbp
 13159              		.cfi_def_cfa_register 6
 13160 0004 4883EC10 		subq	$16, %rsp
 13161 0008 48897DF8 		movq	%rdi, -8(%rbp)
 13162 000c 488975F0 		movq	%rsi, -16(%rbp)
 505:/usr/include/c++/6/bits/alloc_traits.h ****       { return __rhs; }
 13163              		.loc 42 505 0
 13164 0010 488B55F0 		movq	-16(%rbp), %rdx
 13165 0014 488B45F8 		movq	-8(%rbp), %rax
 13166 0018 4889D6   		movq	%rdx, %rsi
 13167 001b 4889C7   		movq	%rax, %rdi
 13168 001e E8000000 		call	_ZNSaIiEC1ERKS_
 13168      00
 13169 0023 488B45F8 		movq	-8(%rbp), %rax
 13170 0027 C9       		leave
 13171              		.cfi_def_cfa 7, 8
 13172 0028 C3       		ret
 13173              		.cfi_endproc
 13174              	.LFE14144:
 13176              		.section	.text._ZNSaIiEC2ERKS_,"axG",@progbits,_ZNSaIiEC5ERKS_,comdat
 13177              		.align 2
 13178              		.weak	_ZNSaIiEC2ERKS_
 13180              	_ZNSaIiEC2ERKS_:
 13181              	.LFB14146:
 133:/usr/include/c++/6/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 13182              		.loc 38 133 0
 13183              		.cfi_startproc
 13184 0000 55       		pushq	%rbp
 13185              		.cfi_def_cfa_offset 16
 13186              		.cfi_offset 6, -16
 13187 0001 4889E5   		movq	%rsp, %rbp
 13188              		.cfi_def_cfa_register 6
 13189 0004 4883EC10 		subq	$16, %rsp
 13190 0008 48897DF8 		movq	%rdi, -8(%rbp)
 13191 000c 488975F0 		movq	%rsi, -16(%rbp)
 13192              	.LBB125:
 134:/usr/include/c++/6/bits/allocator.h **** 
 13193              		.loc 38 134 0
 13194 0010 488B55F0 		movq	-16(%rbp), %rdx
 13195 0014 488B45F8 		movq	-8(%rbp), %rax
 13196 0018 4889D6   		movq	%rdx, %rsi
 13197 001b 4889C7   		movq	%rax, %rdi
 13198 001e E8000000 		call	_ZN9__gnu_cxx13new_allocatorIiEC2ERKS1_
 13198      00
 13199              	.LBE125:
 13200 0023 90       		nop
 13201 0024 C9       		leave
 13202              		.cfi_def_cfa 7, 8
 13203 0025 C3       		ret
 13204              		.cfi_endproc
 13205              	.LFE14146:
 13207              		.weak	_ZNSaIiEC1ERKS_
 13208              		.set	_ZNSaIiEC1ERKS_,_ZNSaIiEC2ERKS_
GAS LISTING /tmp/ccsIN87E.s 			page 553


 13209              		.section	.text._ZN9__gnu_cxx13new_allocatorIiED2Ev,"axG",@progbits,_ZN9__gnu_cxx13new_allocatorIiE
 13210              		.align 2
 13211              		.weak	_ZN9__gnu_cxx13new_allocatorIiED2Ev
 13213              	_ZN9__gnu_cxx13new_allocatorIiED2Ev:
 13214              	.LFB14149:
 13215              		.file 43 "/usr/include/c++/6/ext/new_allocator.h"
   1:/usr/include/c++/6/ext/new_allocator.h **** // Allocator that wraps operator new -*- C++ -*-
   2:/usr/include/c++/6/ext/new_allocator.h **** 
   3:/usr/include/c++/6/ext/new_allocator.h **** // Copyright (C) 2001-2016 Free Software Foundation, Inc.
   4:/usr/include/c++/6/ext/new_allocator.h **** //
   5:/usr/include/c++/6/ext/new_allocator.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/6/ext/new_allocator.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/6/ext/new_allocator.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/6/ext/new_allocator.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/6/ext/new_allocator.h **** // any later version.
  10:/usr/include/c++/6/ext/new_allocator.h **** 
  11:/usr/include/c++/6/ext/new_allocator.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/6/ext/new_allocator.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/6/ext/new_allocator.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/6/ext/new_allocator.h **** // GNU General Public License for more details.
  15:/usr/include/c++/6/ext/new_allocator.h **** 
  16:/usr/include/c++/6/ext/new_allocator.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/6/ext/new_allocator.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/6/ext/new_allocator.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/6/ext/new_allocator.h **** 
  20:/usr/include/c++/6/ext/new_allocator.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/6/ext/new_allocator.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/6/ext/new_allocator.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/6/ext/new_allocator.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/6/ext/new_allocator.h **** 
  25:/usr/include/c++/6/ext/new_allocator.h **** /** @file ext/new_allocator.h
  26:/usr/include/c++/6/ext/new_allocator.h ****  *  This file is a GNU extension to the Standard C++ Library.
  27:/usr/include/c++/6/ext/new_allocator.h ****  */
  28:/usr/include/c++/6/ext/new_allocator.h **** 
  29:/usr/include/c++/6/ext/new_allocator.h **** #ifndef _NEW_ALLOCATOR_H
  30:/usr/include/c++/6/ext/new_allocator.h **** #define _NEW_ALLOCATOR_H 1
  31:/usr/include/c++/6/ext/new_allocator.h **** 
  32:/usr/include/c++/6/ext/new_allocator.h **** #include <bits/c++config.h>
  33:/usr/include/c++/6/ext/new_allocator.h **** #include <new>
  34:/usr/include/c++/6/ext/new_allocator.h **** #include <bits/functexcept.h>
  35:/usr/include/c++/6/ext/new_allocator.h **** #include <bits/move.h>
  36:/usr/include/c++/6/ext/new_allocator.h **** #if __cplusplus >= 201103L
  37:/usr/include/c++/6/ext/new_allocator.h **** #include <type_traits>
  38:/usr/include/c++/6/ext/new_allocator.h **** #endif
  39:/usr/include/c++/6/ext/new_allocator.h **** 
  40:/usr/include/c++/6/ext/new_allocator.h **** namespace __gnu_cxx _GLIBCXX_VISIBILITY(default)
  41:/usr/include/c++/6/ext/new_allocator.h **** {
  42:/usr/include/c++/6/ext/new_allocator.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  43:/usr/include/c++/6/ext/new_allocator.h **** 
  44:/usr/include/c++/6/ext/new_allocator.h ****   using std::size_t;
  45:/usr/include/c++/6/ext/new_allocator.h ****   using std::ptrdiff_t;
  46:/usr/include/c++/6/ext/new_allocator.h **** 
  47:/usr/include/c++/6/ext/new_allocator.h ****   /**
  48:/usr/include/c++/6/ext/new_allocator.h ****    *  @brief  An allocator that uses global new, as per [20.4].
  49:/usr/include/c++/6/ext/new_allocator.h ****    *  @ingroup allocators
  50:/usr/include/c++/6/ext/new_allocator.h ****    *
  51:/usr/include/c++/6/ext/new_allocator.h ****    *  This is precisely the allocator defined in the C++ Standard. 
GAS LISTING /tmp/ccsIN87E.s 			page 554


  52:/usr/include/c++/6/ext/new_allocator.h ****    *    - all allocation calls operator new
  53:/usr/include/c++/6/ext/new_allocator.h ****    *    - all deallocation calls operator delete
  54:/usr/include/c++/6/ext/new_allocator.h ****    *
  55:/usr/include/c++/6/ext/new_allocator.h ****    *  @tparam  _Tp  Type of allocated object.
  56:/usr/include/c++/6/ext/new_allocator.h ****    */
  57:/usr/include/c++/6/ext/new_allocator.h ****   template<typename _Tp>
  58:/usr/include/c++/6/ext/new_allocator.h ****     class new_allocator
  59:/usr/include/c++/6/ext/new_allocator.h ****     {
  60:/usr/include/c++/6/ext/new_allocator.h ****     public:
  61:/usr/include/c++/6/ext/new_allocator.h ****       typedef size_t     size_type;
  62:/usr/include/c++/6/ext/new_allocator.h ****       typedef ptrdiff_t  difference_type;
  63:/usr/include/c++/6/ext/new_allocator.h ****       typedef _Tp*       pointer;
  64:/usr/include/c++/6/ext/new_allocator.h ****       typedef const _Tp* const_pointer;
  65:/usr/include/c++/6/ext/new_allocator.h ****       typedef _Tp&       reference;
  66:/usr/include/c++/6/ext/new_allocator.h ****       typedef const _Tp& const_reference;
  67:/usr/include/c++/6/ext/new_allocator.h ****       typedef _Tp        value_type;
  68:/usr/include/c++/6/ext/new_allocator.h **** 
  69:/usr/include/c++/6/ext/new_allocator.h ****       template<typename _Tp1>
  70:/usr/include/c++/6/ext/new_allocator.h ****         struct rebind
  71:/usr/include/c++/6/ext/new_allocator.h ****         { typedef new_allocator<_Tp1> other; };
  72:/usr/include/c++/6/ext/new_allocator.h **** 
  73:/usr/include/c++/6/ext/new_allocator.h **** #if __cplusplus >= 201103L
  74:/usr/include/c++/6/ext/new_allocator.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
  75:/usr/include/c++/6/ext/new_allocator.h ****       // 2103. propagate_on_container_move_assignment
  76:/usr/include/c++/6/ext/new_allocator.h ****       typedef std::true_type propagate_on_container_move_assignment;
  77:/usr/include/c++/6/ext/new_allocator.h **** #endif
  78:/usr/include/c++/6/ext/new_allocator.h **** 
  79:/usr/include/c++/6/ext/new_allocator.h ****       new_allocator() _GLIBCXX_USE_NOEXCEPT { }
  80:/usr/include/c++/6/ext/new_allocator.h **** 
  81:/usr/include/c++/6/ext/new_allocator.h ****       new_allocator(const new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
  82:/usr/include/c++/6/ext/new_allocator.h **** 
  83:/usr/include/c++/6/ext/new_allocator.h ****       template<typename _Tp1>
  84:/usr/include/c++/6/ext/new_allocator.h ****         new_allocator(const new_allocator<_Tp1>&) _GLIBCXX_USE_NOEXCEPT { }
  85:/usr/include/c++/6/ext/new_allocator.h **** 
  86:/usr/include/c++/6/ext/new_allocator.h ****       ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
 13216              		.loc 43 86 0
 13217              		.cfi_startproc
 13218 0000 55       		pushq	%rbp
 13219              		.cfi_def_cfa_offset 16
 13220              		.cfi_offset 6, -16
 13221 0001 4889E5   		movq	%rsp, %rbp
 13222              		.cfi_def_cfa_register 6
 13223 0004 48897DF8 		movq	%rdi, -8(%rbp)
 13224              		.loc 43 86 0
 13225 0008 90       		nop
 13226 0009 5D       		popq	%rbp
 13227              		.cfi_def_cfa 7, 8
 13228 000a C3       		ret
 13229              		.cfi_endproc
 13230              	.LFE14149:
 13232              		.weak	_ZN9__gnu_cxx13new_allocatorIiED1Ev
 13233              		.set	_ZN9__gnu_cxx13new_allocatorIiED1Ev,_ZN9__gnu_cxx13new_allocatorIiED2Ev
 13234              		.section	.text._ZNSt12_Vector_baseIiSaIiEE12_Vector_implC2ERKS0_,"axG",@progbits,_ZNSt12_Vector_ba
 13235              		.align 2
 13236              		.weak	_ZNSt12_Vector_baseIiSaIiEE12_Vector_implC2ERKS0_
 13238              	_ZNSt12_Vector_baseIiSaIiEE12_Vector_implC2ERKS0_:
 13239              	.LFB14152:
GAS LISTING /tmp/ccsIN87E.s 			page 555


  90:/usr/include/c++/6/bits/stl_vector.h **** 	: _Tp_alloc_type(__a), _M_start(), _M_finish(), _M_end_of_storage()
 13240              		.loc 30 90 0
 13241              		.cfi_startproc
 13242 0000 55       		pushq	%rbp
 13243              		.cfi_def_cfa_offset 16
 13244              		.cfi_offset 6, -16
 13245 0001 4889E5   		movq	%rsp, %rbp
 13246              		.cfi_def_cfa_register 6
 13247 0004 4883EC10 		subq	$16, %rsp
 13248 0008 48897DF8 		movq	%rdi, -8(%rbp)
 13249 000c 488975F0 		movq	%rsi, -16(%rbp)
 13250              	.LBB126:
  91:/usr/include/c++/6/bits/stl_vector.h **** 	{ }
 13251              		.loc 30 91 0
 13252 0010 488B55F0 		movq	-16(%rbp), %rdx
 13253 0014 488B45F8 		movq	-8(%rbp), %rax
 13254 0018 4889D6   		movq	%rdx, %rsi
 13255 001b 4889C7   		movq	%rax, %rdi
 13256 001e E8000000 		call	_ZNSaIiEC2ERKS_
 13256      00
 13257 0023 488B45F8 		movq	-8(%rbp), %rax
 13258 0027 48C70000 		movq	$0, (%rax)
 13258      000000
 13259 002e 488B45F8 		movq	-8(%rbp), %rax
 13260 0032 48C74008 		movq	$0, 8(%rax)
 13260      00000000 
 13261 003a 488B45F8 		movq	-8(%rbp), %rax
 13262 003e 48C74010 		movq	$0, 16(%rax)
 13262      00000000 
 13263              	.LBE126:
  92:/usr/include/c++/6/bits/stl_vector.h **** 
 13264              		.loc 30 92 0
 13265 0046 90       		nop
 13266 0047 C9       		leave
 13267              		.cfi_def_cfa 7, 8
 13268 0048 C3       		ret
 13269              		.cfi_endproc
 13270              	.LFE14152:
 13272              		.weak	_ZNSt12_Vector_baseIiSaIiEE12_Vector_implC1ERKS0_
 13273              		.set	_ZNSt12_Vector_baseIiSaIiEE12_Vector_implC1ERKS0_,_ZNSt12_Vector_baseIiSaIiEE12_Vector_implC2
 13274              		.section	.text._ZNSt12_Vector_baseIiSaIiEE17_M_create_storageEm,"axG",@progbits,_ZNSt12_Vector_bas
 13275              		.align 2
 13276              		.weak	_ZNSt12_Vector_baseIiSaIiEE17_M_create_storageEm
 13278              	_ZNSt12_Vector_baseIiSaIiEE17_M_create_storageEm:
 13279              	.LFB14154:
 183:/usr/include/c++/6/bits/stl_vector.h ****       {
 13280              		.loc 30 183 0
 13281              		.cfi_startproc
 13282 0000 55       		pushq	%rbp
 13283              		.cfi_def_cfa_offset 16
 13284              		.cfi_offset 6, -16
 13285 0001 4889E5   		movq	%rsp, %rbp
 13286              		.cfi_def_cfa_register 6
 13287 0004 4883EC10 		subq	$16, %rsp
 13288 0008 48897DF8 		movq	%rdi, -8(%rbp)
 13289 000c 488975F0 		movq	%rsi, -16(%rbp)
 185:/usr/include/c++/6/bits/stl_vector.h **** 	this->_M_impl._M_finish = this->_M_impl._M_start;
GAS LISTING /tmp/ccsIN87E.s 			page 556


 13290              		.loc 30 185 0
 13291 0010 488B55F0 		movq	-16(%rbp), %rdx
 13292 0014 488B45F8 		movq	-8(%rbp), %rax
 13293 0018 4889D6   		movq	%rdx, %rsi
 13294 001b 4889C7   		movq	%rax, %rdi
 13295 001e E8000000 		call	_ZNSt12_Vector_baseIiSaIiEE11_M_allocateEm
 13295      00
 13296 0023 4889C2   		movq	%rax, %rdx
 13297 0026 488B45F8 		movq	-8(%rbp), %rax
 13298 002a 488910   		movq	%rdx, (%rax)
 186:/usr/include/c++/6/bits/stl_vector.h **** 	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
 13299              		.loc 30 186 0
 13300 002d 488B45F8 		movq	-8(%rbp), %rax
 13301 0031 488B10   		movq	(%rax), %rdx
 13302 0034 488B45F8 		movq	-8(%rbp), %rax
 13303 0038 48895008 		movq	%rdx, 8(%rax)
 187:/usr/include/c++/6/bits/stl_vector.h ****       }
 13304              		.loc 30 187 0
 13305 003c 488B45F8 		movq	-8(%rbp), %rax
 13306 0040 488B00   		movq	(%rax), %rax
 13307 0043 488B55F0 		movq	-16(%rbp), %rdx
 13308 0047 48C1E202 		salq	$2, %rdx
 13309 004b 4801C2   		addq	%rax, %rdx
 13310 004e 488B45F8 		movq	-8(%rbp), %rax
 13311 0052 48895010 		movq	%rdx, 16(%rax)
 188:/usr/include/c++/6/bits/stl_vector.h ****     };
 13312              		.loc 30 188 0
 13313 0056 90       		nop
 13314 0057 C9       		leave
 13315              		.cfi_def_cfa 7, 8
 13316 0058 C3       		ret
 13317              		.cfi_endproc
 13318              	.LFE14154:
 13320              		.section	.text._ZNSt12_Vector_baseIiSaIiEE13_M_deallocateEPim,"axG",@progbits,_ZNSt12_Vector_baseI
 13321              		.align 2
 13322              		.weak	_ZNSt12_Vector_baseIiSaIiEE13_M_deallocateEPim
 13324              	_ZNSt12_Vector_baseIiSaIiEE13_M_deallocateEPim:
 13325              	.LFB14155:
 174:/usr/include/c++/6/bits/stl_vector.h ****       {
 13326              		.loc 30 174 0
 13327              		.cfi_startproc
 13328 0000 55       		pushq	%rbp
 13329              		.cfi_def_cfa_offset 16
 13330              		.cfi_offset 6, -16
 13331 0001 4889E5   		movq	%rsp, %rbp
 13332              		.cfi_def_cfa_register 6
 13333 0004 4883EC20 		subq	$32, %rsp
 13334 0008 48897DF8 		movq	%rdi, -8(%rbp)
 13335 000c 488975F0 		movq	%rsi, -16(%rbp)
 13336 0010 488955E8 		movq	%rdx, -24(%rbp)
 177:/usr/include/c++/6/bits/stl_vector.h **** 	  _Tr::deallocate(_M_impl, __p, __n);
 13337              		.loc 30 177 0
 13338 0014 48837DF0 		cmpq	$0, -16(%rbp)
 13338      00
 13339 0019 7417     		je	.L650
 178:/usr/include/c++/6/bits/stl_vector.h ****       }
 13340              		.loc 30 178 0
GAS LISTING /tmp/ccsIN87E.s 			page 557


 13341 001b 488B45F8 		movq	-8(%rbp), %rax
 13342 001f 488B55E8 		movq	-24(%rbp), %rdx
 13343 0023 488B4DF0 		movq	-16(%rbp), %rcx
 13344 0027 4889CE   		movq	%rcx, %rsi
 13345 002a 4889C7   		movq	%rax, %rdi
 13346 002d E8000000 		call	_ZNSt16allocator_traitsISaIiEE10deallocateERS0_Pim
 13346      00
 13347              	.L650:
 179:/usr/include/c++/6/bits/stl_vector.h **** 
 13348              		.loc 30 179 0
 13349 0032 90       		nop
 13350 0033 C9       		leave
 13351              		.cfi_def_cfa 7, 8
 13352 0034 C3       		ret
 13353              		.cfi_endproc
 13354              	.LFE14155:
 13356              		.section	.text._ZN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEC2ERKS2_,"axG",@progbits,_ZN9
 13357              		.align 2
 13358              		.weak	_ZN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEC2ERKS2_
 13360              	_ZN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEC2ERKS2_:
 13361              	.LFB14157:
 776:/usr/include/c++/6/bits/stl_iterator.h ****       : _M_current(__i) { }
 13362              		.loc 32 776 0
 13363              		.cfi_startproc
 13364 0000 55       		pushq	%rbp
 13365              		.cfi_def_cfa_offset 16
 13366              		.cfi_offset 6, -16
 13367 0001 4889E5   		movq	%rsp, %rbp
 13368              		.cfi_def_cfa_register 6
 13369 0004 48897DF8 		movq	%rdi, -8(%rbp)
 13370 0008 488975F0 		movq	%rsi, -16(%rbp)
 13371              	.LBB127:
 777:/usr/include/c++/6/bits/stl_iterator.h **** 
 13372              		.loc 32 777 0
 13373 000c 488B45F0 		movq	-16(%rbp), %rax
 13374 0010 488B10   		movq	(%rax), %rdx
 13375 0013 488B45F8 		movq	-8(%rbp), %rax
 13376 0017 488910   		movq	%rdx, (%rax)
 13377              	.LBE127:
 13378 001a 90       		nop
 13379 001b 5D       		popq	%rbp
 13380              		.cfi_def_cfa 7, 8
 13381 001c C3       		ret
 13382              		.cfi_endproc
 13383              	.LFE14157:
 13385              		.weak	_ZN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEC1ERKS2_
 13386              		.set	_ZN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEC1ERKS2_,_ZN9__gnu_cxx17__normal_iterat
 13387              		.section	.text._ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEPiET0
 13388              		.weak	_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEPiET0_T_SA_S9_
 13390              	_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEPiET0_T_SA_S9_:
 13391              	.LFB14159:
 107:/usr/include/c++/6/bits/stl_uninitialized.h **** 		       _ForwardIterator __result)
 13392              		.loc 39 107 0
 13393              		.cfi_startproc
 13394 0000 55       		pushq	%rbp
 13395              		.cfi_def_cfa_offset 16
 13396              		.cfi_offset 6, -16
GAS LISTING /tmp/ccsIN87E.s 			page 558


 13397 0001 4889E5   		movq	%rsp, %rbp
 13398              		.cfi_def_cfa_register 6
 13399 0004 4883EC30 		subq	$48, %rsp
 13400 0008 48897DE8 		movq	%rdi, -24(%rbp)
 13401 000c 488975E0 		movq	%rsi, -32(%rbp)
 13402 0010 488955D8 		movq	%rdx, -40(%rbp)
 120:/usr/include/c++/6/bits/stl_uninitialized.h **** #endif
 13403              		.loc 39 120 0
 13404 0014 C645FF01 		movb	$1, -1(%rbp)
 126:/usr/include/c++/6/bits/stl_uninitialized.h ****     }
 13405              		.loc 39 126 0
 13406 0018 488B55D8 		movq	-40(%rbp), %rdx
 13407 001c 488B4DE0 		movq	-32(%rbp), %rcx
 13408 0020 488B45E8 		movq	-24(%rbp), %rax
 13409 0024 4889CE   		movq	%rcx, %rsi
 13410 0027 4889C7   		movq	%rax, %rdi
 13411 002a E8000000 		call	_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorI
 13411      00
 127:/usr/include/c++/6/bits/stl_uninitialized.h **** 
 13412              		.loc 39 127 0
 13413 002f C9       		leave
 13414              		.cfi_def_cfa 7, 8
 13415 0030 C3       		ret
 13416              		.cfi_endproc
 13417              	.LFE14159:
 13419              		.section	.text._ZN5boost10shared_ptrIN2gr5lfast12costas2_implEEC2INS1_11basic_blockEEERKNS0_IT_EEP
 13420              		.align 2
 13421              		.weak	_ZN5boost10shared_ptrIN2gr5lfast12costas2_implEEC2INS1_11basic_blockEEERKNS0_IT_EEPS3_
 13423              	_ZN5boost10shared_ptrIN2gr5lfast12costas2_implEEC2INS1_11basic_blockEEERKNS0_IT_EEPS3_:
 13424              	.LFB14167:
 447:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     {
 13425              		.loc 7 447 0
 13426              		.cfi_startproc
 13427 0000 55       		pushq	%rbp
 13428              		.cfi_def_cfa_offset 16
 13429              		.cfi_offset 6, -16
 13430 0001 4889E5   		movq	%rsp, %rbp
 13431              		.cfi_def_cfa_register 6
 13432 0004 4883EC20 		subq	$32, %rsp
 13433 0008 48897DF8 		movq	%rdi, -8(%rbp)
 13434 000c 488975F0 		movq	%rsi, -16(%rbp)
 13435 0010 488955E8 		movq	%rdx, -24(%rbp)
 13436              	.LBB128:
 447:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     {
 13437              		.loc 7 447 0
 13438 0014 488B45F8 		movq	-8(%rbp), %rax
 13439 0018 488B55E8 		movq	-24(%rbp), %rdx
 13440 001c 488910   		movq	%rdx, (%rax)
 13441 001f 488B45F0 		movq	-16(%rbp), %rax
 13442 0023 488D5008 		leaq	8(%rax), %rdx
 13443 0027 488B45F8 		movq	-8(%rbp), %rax
 13444 002b 4883C008 		addq	$8, %rax
 13445 002f 4889D6   		movq	%rdx, %rsi
 13446 0032 4889C7   		movq	%rax, %rdi
 13447 0035 E8000000 		call	_ZN5boost6detail12shared_countC1ERKS1_
 13447      00
 13448              	.LBE128:
GAS LISTING /tmp/ccsIN87E.s 			page 559


 449:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 13449              		.loc 7 449 0
 13450 003a 90       		nop
 13451 003b C9       		leave
 13452              		.cfi_def_cfa 7, 8
 13453 003c C3       		ret
 13454              		.cfi_endproc
 13455              	.LFE14167:
 13457              		.weak	_ZN5boost10shared_ptrIN2gr5lfast12costas2_implEEC1INS1_11basic_blockEEERKNS0_IT_EEPS3_
 13458              		.set	_ZN5boost10shared_ptrIN2gr5lfast12costas2_implEEC1INS1_11basic_blockEEERKNS0_IT_EEPS3_,_ZN5bo
 13459              		.section	.text._ZN5boost10shared_ptrIN2gr5lfast12costas2_implEEC2Ev,"axG",@progbits,_ZN5boost10sha
 13460              		.align 2
 13461              		.weak	_ZN5boost10shared_ptrIN2gr5lfast12costas2_implEEC2Ev
 13463              	_ZN5boost10shared_ptrIN2gr5lfast12costas2_implEEC2Ev:
 13464              	.LFB14170:
 347:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     {
 13465              		.loc 7 347 0
 13466              		.cfi_startproc
 13467 0000 55       		pushq	%rbp
 13468              		.cfi_def_cfa_offset 16
 13469              		.cfi_offset 6, -16
 13470 0001 4889E5   		movq	%rsp, %rbp
 13471              		.cfi_def_cfa_register 6
 13472 0004 4883EC10 		subq	$16, %rsp
 13473 0008 48897DF8 		movq	%rdi, -8(%rbp)
 13474              	.LBB129:
 347:/usr/include/boost/smart_ptr/shared_ptr.hpp ****     {
 13475              		.loc 7 347 0
 13476 000c 488B45F8 		movq	-8(%rbp), %rax
 13477 0010 48C70000 		movq	$0, (%rax)
 13477      000000
 13478 0017 488B45F8 		movq	-8(%rbp), %rax
 13479 001b 4883C008 		addq	$8, %rax
 13480 001f 4889C7   		movq	%rax, %rdi
 13481 0022 E8000000 		call	_ZN5boost6detail12shared_countC1Ev
 13481      00
 13482              	.LBE129:
 349:/usr/include/boost/smart_ptr/shared_ptr.hpp **** 
 13483              		.loc 7 349 0
 13484 0027 90       		nop
 13485 0028 C9       		leave
 13486              		.cfi_def_cfa 7, 8
 13487 0029 C3       		ret
 13488              		.cfi_endproc
 13489              	.LFE14170:
 13491              		.weak	_ZN5boost10shared_ptrIN2gr5lfast12costas2_implEEC1Ev
 13492              		.set	_ZN5boost10shared_ptrIN2gr5lfast12costas2_implEEC1Ev,_ZN5boost10shared_ptrIN2gr5lfast12costas
 13493              		.section	.text._ZNSt12_Vector_baseIN2gr5tag_tESaIS1_EE12_Vector_implC2Ev,"axG",@progbits,_ZNSt12_V
 13494              		.align 2
 13495              		.weak	_ZNSt12_Vector_baseIN2gr5tag_tESaIS1_EE12_Vector_implC2Ev
 13497              	_ZNSt12_Vector_baseIN2gr5tag_tESaIS1_EE12_Vector_implC2Ev:
 13498              	.LFB14173:
  86:/usr/include/c++/6/bits/stl_vector.h **** 	: _Tp_alloc_type(), _M_start(), _M_finish(), _M_end_of_storage()
 13499              		.loc 30 86 0
 13500              		.cfi_startproc
 13501 0000 55       		pushq	%rbp
 13502              		.cfi_def_cfa_offset 16
GAS LISTING /tmp/ccsIN87E.s 			page 560


 13503              		.cfi_offset 6, -16
 13504 0001 4889E5   		movq	%rsp, %rbp
 13505              		.cfi_def_cfa_register 6
 13506 0004 4883EC10 		subq	$16, %rsp
 13507 0008 48897DF8 		movq	%rdi, -8(%rbp)
 13508              	.LBB130:
  87:/usr/include/c++/6/bits/stl_vector.h **** 	{ }
 13509              		.loc 30 87 0
 13510 000c 488B45F8 		movq	-8(%rbp), %rax
 13511 0010 4889C7   		movq	%rax, %rdi
 13512 0013 E8000000 		call	_ZNSaIN2gr5tag_tEEC2Ev
 13512      00
 13513 0018 488B45F8 		movq	-8(%rbp), %rax
 13514 001c 48C70000 		movq	$0, (%rax)
 13514      000000
 13515 0023 488B45F8 		movq	-8(%rbp), %rax
 13516 0027 48C74008 		movq	$0, 8(%rax)
 13516      00000000 
 13517 002f 488B45F8 		movq	-8(%rbp), %rax
 13518 0033 48C74010 		movq	$0, 16(%rax)
 13518      00000000 
 13519              	.LBE130:
  88:/usr/include/c++/6/bits/stl_vector.h **** 
 13520              		.loc 30 88 0
 13521 003b 90       		nop
 13522 003c C9       		leave
 13523              		.cfi_def_cfa 7, 8
 13524 003d C3       		ret
 13525              		.cfi_endproc
 13526              	.LFE14173:
 13528              		.weak	_ZNSt12_Vector_baseIN2gr5tag_tESaIS1_EE12_Vector_implC1Ev
 13529              		.set	_ZNSt12_Vector_baseIN2gr5tag_tESaIS1_EE12_Vector_implC1Ev,_ZNSt12_Vector_baseIN2gr5tag_tESaIS
 13530              		.section	.text._ZNSaIN2gr5tag_tEED2Ev,"axG",@progbits,_ZNSaIN2gr5tag_tEED5Ev,comdat
 13531              		.align 2
 13532              		.weak	_ZNSaIN2gr5tag_tEED2Ev
 13534              	_ZNSaIN2gr5tag_tEED2Ev:
 13535              	.LFB14176:
 13536              		.loc 38 139 0
 13537              		.cfi_startproc
 13538 0000 55       		pushq	%rbp
 13539              		.cfi_def_cfa_offset 16
 13540              		.cfi_offset 6, -16
 13541 0001 4889E5   		movq	%rsp, %rbp
 13542              		.cfi_def_cfa_register 6
 13543 0004 4883EC10 		subq	$16, %rsp
 13544 0008 48897DF8 		movq	%rdi, -8(%rbp)
 13545              	.LBB131:
 13546              		.loc 38 139 0
 13547 000c 488B45F8 		movq	-8(%rbp), %rax
 13548 0010 4889C7   		movq	%rax, %rdi
 13549 0013 E8000000 		call	_ZN9__gnu_cxx13new_allocatorIN2gr5tag_tEED2Ev
 13549      00
 13550              	.LBE131:
 13551 0018 90       		nop
 13552 0019 C9       		leave
 13553              		.cfi_def_cfa 7, 8
 13554 001a C3       		ret
GAS LISTING /tmp/ccsIN87E.s 			page 561


 13555              		.cfi_endproc
 13556              	.LFE14176:
 13558              		.weak	_ZNSaIN2gr5tag_tEED1Ev
 13559              		.set	_ZNSaIN2gr5tag_tEED1Ev,_ZNSaIN2gr5tag_tEED2Ev
 13560              		.section	.text._ZNSt12_Vector_baseIN2gr5tag_tESaIS1_EE13_M_deallocateEPS1_m,"axG",@progbits,_ZNSt1
 13561              		.align 2
 13562              		.weak	_ZNSt12_Vector_baseIN2gr5tag_tESaIS1_EE13_M_deallocateEPS1_m
 13564              	_ZNSt12_Vector_baseIN2gr5tag_tESaIS1_EE13_M_deallocateEPS1_m:
 13565              	.LFB14178:
 174:/usr/include/c++/6/bits/stl_vector.h ****       {
 13566              		.loc 30 174 0
 13567              		.cfi_startproc
 13568 0000 55       		pushq	%rbp
 13569              		.cfi_def_cfa_offset 16
 13570              		.cfi_offset 6, -16
 13571 0001 4889E5   		movq	%rsp, %rbp
 13572              		.cfi_def_cfa_register 6
 13573 0004 4883EC20 		subq	$32, %rsp
 13574 0008 48897DF8 		movq	%rdi, -8(%rbp)
 13575 000c 488975F0 		movq	%rsi, -16(%rbp)
 13576 0010 488955E8 		movq	%rdx, -24(%rbp)
 177:/usr/include/c++/6/bits/stl_vector.h **** 	  _Tr::deallocate(_M_impl, __p, __n);
 13577              		.loc 30 177 0
 13578 0014 48837DF0 		cmpq	$0, -16(%rbp)
 13578      00
 13579 0019 7417     		je	.L660
 178:/usr/include/c++/6/bits/stl_vector.h ****       }
 13580              		.loc 30 178 0
 13581 001b 488B45F8 		movq	-8(%rbp), %rax
 13582 001f 488B55E8 		movq	-24(%rbp), %rdx
 13583 0023 488B4DF0 		movq	-16(%rbp), %rcx
 13584 0027 4889CE   		movq	%rcx, %rsi
 13585 002a 4889C7   		movq	%rax, %rdi
 13586 002d E8000000 		call	_ZNSt16allocator_traitsISaIN2gr5tag_tEEE10deallocateERS2_PS1_m
 13586      00
 13587              	.L660:
 179:/usr/include/c++/6/bits/stl_vector.h **** 
 13588              		.loc 30 179 0
 13589 0032 90       		nop
 13590 0033 C9       		leave
 13591              		.cfi_def_cfa 7, 8
 13592 0034 C3       		ret
 13593              		.cfi_endproc
 13594              	.LFE14178:
 13596              		.section	.text._ZSt8_DestroyIPN2gr5tag_tEEvT_S3_,"axG",@progbits,_ZSt8_DestroyIPN2gr5tag_tEEvT_S3_
 13597              		.weak	_ZSt8_DestroyIPN2gr5tag_tEEvT_S3_
 13599              	_ZSt8_DestroyIPN2gr5tag_tEEvT_S3_:
 13600              	.LFB14179:
 122:/usr/include/c++/6/bits/stl_construct.h ****     {
 13601              		.loc 35 122 0
 13602              		.cfi_startproc
 13603 0000 55       		pushq	%rbp
 13604              		.cfi_def_cfa_offset 16
 13605              		.cfi_offset 6, -16
 13606 0001 4889E5   		movq	%rsp, %rbp
 13607              		.cfi_def_cfa_register 6
 13608 0004 4883EC10 		subq	$16, %rsp
GAS LISTING /tmp/ccsIN87E.s 			page 562


 13609 0008 48897DF8 		movq	%rdi, -8(%rbp)
 13610 000c 488975F0 		movq	%rsi, -16(%rbp)
 126:/usr/include/c++/6/bits/stl_construct.h **** 	__destroy(__first, __last);
 13611              		.loc 35 126 0
 13612 0010 488B55F0 		movq	-16(%rbp), %rdx
 13613 0014 488B45F8 		movq	-8(%rbp), %rax
 13614 0018 4889D6   		movq	%rdx, %rsi
 13615 001b 4889C7   		movq	%rax, %rdi
 13616 001e E8000000 		call	_ZNSt12_Destroy_auxILb0EE9__destroyIPN2gr5tag_tEEEvT_S5_
 13616      00
 128:/usr/include/c++/6/bits/stl_construct.h **** 
 13617              		.loc 35 128 0
 13618 0023 90       		nop
 13619 0024 C9       		leave
 13620              		.cfi_def_cfa 7, 8
 13621 0025 C3       		ret
 13622              		.cfi_endproc
 13623              	.LFE14179:
 13625              		.section	.text._ZN9__gnu_cxx17__normal_iteratorIPKN2gr5tag_tESt6vectorIS2_SaIS2_EEEC2ERKS4_,"axG",
 13626              		.align 2
 13627              		.weak	_ZN9__gnu_cxx17__normal_iteratorIPKN2gr5tag_tESt6vectorIS2_SaIS2_EEEC2ERKS4_
 13629              	_ZN9__gnu_cxx17__normal_iteratorIPKN2gr5tag_tESt6vectorIS2_SaIS2_EEEC2ERKS4_:
 13630              	.LFB14181:
 776:/usr/include/c++/6/bits/stl_iterator.h ****       : _M_current(__i) { }
 13631              		.loc 32 776 0
 13632              		.cfi_startproc
 13633 0000 55       		pushq	%rbp
 13634              		.cfi_def_cfa_offset 16
 13635              		.cfi_offset 6, -16
 13636 0001 4889E5   		movq	%rsp, %rbp
 13637              		.cfi_def_cfa_register 6
 13638 0004 48897DF8 		movq	%rdi, -8(%rbp)
 13639 0008 488975F0 		movq	%rsi, -16(%rbp)
 13640              	.LBB132:
 777:/usr/include/c++/6/bits/stl_iterator.h **** 
 13641              		.loc 32 777 0
 13642 000c 488B45F0 		movq	-16(%rbp), %rax
 13643 0010 488B10   		movq	(%rax), %rdx
 13644 0013 488B45F8 		movq	-8(%rbp), %rax
 13645 0017 488910   		movq	%rdx, (%rax)
 13646              	.LBE132:
 13647 001a 90       		nop
 13648 001b 5D       		popq	%rbp
 13649              		.cfi_def_cfa 7, 8
 13650 001c C3       		ret
 13651              		.cfi_endproc
 13652              	.LFE14181:
 13654              		.weak	_ZN9__gnu_cxx17__normal_iteratorIPKN2gr5tag_tESt6vectorIS2_SaIS2_EEEC1ERKS4_
 13655              		.set	_ZN9__gnu_cxx17__normal_iteratorIPKN2gr5tag_tESt6vectorIS2_SaIS2_EEEC1ERKS4_,_ZN9__gnu_cxx17_
 13656              		.section	.text._ZNK9__gnu_cxx17__normal_iteratorIPKN2gr5tag_tESt6vectorIS2_SaIS2_EEE4baseEv,"axG",
 13657              		.align 2
 13658              		.weak	_ZNK9__gnu_cxx17__normal_iteratorIPKN2gr5tag_tESt6vectorIS2_SaIS2_EEE4baseEv
 13660              	_ZNK9__gnu_cxx17__normal_iteratorIPKN2gr5tag_tESt6vectorIS2_SaIS2_EEE4baseEv:
 13661              	.LFB14183:
 841:/usr/include/c++/6/bits/stl_iterator.h ****       { return _M_current; }
 13662              		.loc 32 841 0
 13663              		.cfi_startproc
GAS LISTING /tmp/ccsIN87E.s 			page 563


 13664 0000 55       		pushq	%rbp
 13665              		.cfi_def_cfa_offset 16
 13666              		.cfi_offset 6, -16
 13667 0001 4889E5   		movq	%rsp, %rbp
 13668              		.cfi_def_cfa_register 6
 13669 0004 48897DF8 		movq	%rdi, -8(%rbp)
 842:/usr/include/c++/6/bits/stl_iterator.h ****     };
 13670              		.loc 32 842 0
 13671 0008 488B45F8 		movq	-8(%rbp), %rax
 13672 000c 5D       		popq	%rbp
 13673              		.cfi_def_cfa 7, 8
 13674 000d C3       		ret
 13675              		.cfi_endproc
 13676              	.LFE14183:
 13678              		.section	.text._ZNSt6vectorIN2gr5tag_tESaIS1_EE3endEv,"axG",@progbits,_ZNSt6vectorIN2gr5tag_tESaIS
 13679              		.align 2
 13680              		.weak	_ZNSt6vectorIN2gr5tag_tESaIS1_EE3endEv
 13682              	_ZNSt6vectorIN2gr5tag_tESaIS1_EE3endEv:
 13683              	.LFB14184:
 566:/usr/include/c++/6/bits/stl_vector.h ****       { return iterator(this->_M_impl._M_finish); }
 13684              		.loc 30 566 0
 13685              		.cfi_startproc
 13686 0000 55       		pushq	%rbp
 13687              		.cfi_def_cfa_offset 16
 13688              		.cfi_offset 6, -16
 13689 0001 4889E5   		movq	%rsp, %rbp
 13690              		.cfi_def_cfa_register 6
 13691 0004 4883EC20 		subq	$32, %rsp
 13692 0008 48897DE8 		movq	%rdi, -24(%rbp)
 567:/usr/include/c++/6/bits/stl_vector.h **** 
 13693              		.loc 30 567 0
 13694 000c 488B45E8 		movq	-24(%rbp), %rax
 13695 0010 488D5008 		leaq	8(%rax), %rdx
 13696 0014 488D45F8 		leaq	-8(%rbp), %rax
 13697 0018 4889D6   		movq	%rdx, %rsi
 13698 001b 4889C7   		movq	%rax, %rdi
 13699 001e E8000000 		call	_ZN9__gnu_cxx17__normal_iteratorIPN2gr5tag_tESt6vectorIS2_SaIS2_EEEC1ERKS3_
 13699      00
 13700 0023 488B45F8 		movq	-8(%rbp), %rax
 13701 0027 C9       		leave
 13702              		.cfi_def_cfa 7, 8
 13703 0028 C3       		ret
 13704              		.cfi_endproc
 13705              	.LFE14184:
 13707              		.section	.text._ZN9__gnu_cxxneIPN2gr5tag_tESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_E
 13708              		.weak	_ZN9__gnu_cxxneIPN2gr5tag_tESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_
 13710              	_ZN9__gnu_cxxneIPN2gr5tag_tESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_:
 13711              	.LFB14185:
 877:/usr/include/c++/6/bits/stl_iterator.h **** 	       const __normal_iterator<_Iterator, _Container>& __rhs)
 13712              		.loc 32 877 0
 13713              		.cfi_startproc
 13714 0000 55       		pushq	%rbp
 13715              		.cfi_def_cfa_offset 16
 13716              		.cfi_offset 6, -16
 13717 0001 4889E5   		movq	%rsp, %rbp
 13718              		.cfi_def_cfa_register 6
 13719 0004 53       		pushq	%rbx
GAS LISTING /tmp/ccsIN87E.s 			page 564


 13720 0005 4883EC18 		subq	$24, %rsp
 13721              		.cfi_offset 3, -24
 13722 0009 48897DE8 		movq	%rdi, -24(%rbp)
 13723 000d 488975E0 		movq	%rsi, -32(%rbp)
 880:/usr/include/c++/6/bits/stl_iterator.h **** 
 13724              		.loc 32 880 0
 13725 0011 488B45E8 		movq	-24(%rbp), %rax
 13726 0015 4889C7   		movq	%rax, %rdi
 13727 0018 E8000000 		call	_ZNK9__gnu_cxx17__normal_iteratorIPN2gr5tag_tESt6vectorIS2_SaIS2_EEE4baseEv
 13727      00
 13728 001d 488B18   		movq	(%rax), %rbx
 13729 0020 488B45E0 		movq	-32(%rbp), %rax
 13730 0024 4889C7   		movq	%rax, %rdi
 13731 0027 E8000000 		call	_ZNK9__gnu_cxx17__normal_iteratorIPN2gr5tag_tESt6vectorIS2_SaIS2_EEE4baseEv
 13731      00
 13732 002c 488B00   		movq	(%rax), %rax
 13733 002f 4839C3   		cmpq	%rax, %rbx
 13734 0032 0F95C0   		setne	%al
 13735 0035 4883C418 		addq	$24, %rsp
 13736 0039 5B       		popq	%rbx
 13737 003a 5D       		popq	%rbp
 13738              		.cfi_def_cfa 7, 8
 13739 003b C3       		ret
 13740              		.cfi_endproc
 13741              	.LFE14185:
 13743              		.section	.text._ZSt4moveIN9__gnu_cxx17__normal_iteratorIPN2gr5tag_tESt6vectorIS3_SaIS3_EEEES8_ET0_
 13744              		.weak	_ZSt4moveIN9__gnu_cxx17__normal_iteratorIPN2gr5tag_tESt6vectorIS3_SaIS3_EEEES8_ET0_T_SA_S9_
 13746              	_ZSt4moveIN9__gnu_cxx17__normal_iteratorIPN2gr5tag_tESt6vectorIS3_SaIS3_EEEES8_ET0_T_SA_S9_:
 13747              	.LFB14186:
 13748              		.file 44 "/usr/include/c++/6/bits/stl_algobase.h"
   1:/usr/include/c++/6/bits/stl_algobase.h **** // Core algorithmic facilities -*- C++ -*-
   2:/usr/include/c++/6/bits/stl_algobase.h **** 
   3:/usr/include/c++/6/bits/stl_algobase.h **** // Copyright (C) 2001-2016 Free Software Foundation, Inc.
   4:/usr/include/c++/6/bits/stl_algobase.h **** //
   5:/usr/include/c++/6/bits/stl_algobase.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/6/bits/stl_algobase.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/6/bits/stl_algobase.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/6/bits/stl_algobase.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/6/bits/stl_algobase.h **** // any later version.
  10:/usr/include/c++/6/bits/stl_algobase.h **** 
  11:/usr/include/c++/6/bits/stl_algobase.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/6/bits/stl_algobase.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/6/bits/stl_algobase.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/6/bits/stl_algobase.h **** // GNU General Public License for more details.
  15:/usr/include/c++/6/bits/stl_algobase.h **** 
  16:/usr/include/c++/6/bits/stl_algobase.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/6/bits/stl_algobase.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/6/bits/stl_algobase.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/6/bits/stl_algobase.h **** 
  20:/usr/include/c++/6/bits/stl_algobase.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/6/bits/stl_algobase.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/6/bits/stl_algobase.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/6/bits/stl_algobase.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/6/bits/stl_algobase.h **** 
  25:/usr/include/c++/6/bits/stl_algobase.h **** /*
  26:/usr/include/c++/6/bits/stl_algobase.h ****  *
  27:/usr/include/c++/6/bits/stl_algobase.h ****  * Copyright (c) 1994
GAS LISTING /tmp/ccsIN87E.s 			page 565


  28:/usr/include/c++/6/bits/stl_algobase.h ****  * Hewlett-Packard Company
  29:/usr/include/c++/6/bits/stl_algobase.h ****  *
  30:/usr/include/c++/6/bits/stl_algobase.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:/usr/include/c++/6/bits/stl_algobase.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:/usr/include/c++/6/bits/stl_algobase.h ****  * provided that the above copyright notice appear in all copies and
  33:/usr/include/c++/6/bits/stl_algobase.h ****  * that both that copyright notice and this permission notice appear
  34:/usr/include/c++/6/bits/stl_algobase.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:/usr/include/c++/6/bits/stl_algobase.h ****  * representations about the suitability of this software for any
  36:/usr/include/c++/6/bits/stl_algobase.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:/usr/include/c++/6/bits/stl_algobase.h ****  *
  38:/usr/include/c++/6/bits/stl_algobase.h ****  *
  39:/usr/include/c++/6/bits/stl_algobase.h ****  * Copyright (c) 1996-1998
  40:/usr/include/c++/6/bits/stl_algobase.h ****  * Silicon Graphics Computer Systems, Inc.
  41:/usr/include/c++/6/bits/stl_algobase.h ****  *
  42:/usr/include/c++/6/bits/stl_algobase.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:/usr/include/c++/6/bits/stl_algobase.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:/usr/include/c++/6/bits/stl_algobase.h ****  * provided that the above copyright notice appear in all copies and
  45:/usr/include/c++/6/bits/stl_algobase.h ****  * that both that copyright notice and this permission notice appear
  46:/usr/include/c++/6/bits/stl_algobase.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:/usr/include/c++/6/bits/stl_algobase.h ****  * representations about the suitability of this software for any
  48:/usr/include/c++/6/bits/stl_algobase.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:/usr/include/c++/6/bits/stl_algobase.h ****  */
  50:/usr/include/c++/6/bits/stl_algobase.h **** 
  51:/usr/include/c++/6/bits/stl_algobase.h **** /** @file bits/stl_algobase.h
  52:/usr/include/c++/6/bits/stl_algobase.h ****  *  This is an internal header file, included by other library headers.
  53:/usr/include/c++/6/bits/stl_algobase.h ****  *  Do not attempt to use it directly. @headername{algorithm}
  54:/usr/include/c++/6/bits/stl_algobase.h ****  */
  55:/usr/include/c++/6/bits/stl_algobase.h **** 
  56:/usr/include/c++/6/bits/stl_algobase.h **** #ifndef _STL_ALGOBASE_H
  57:/usr/include/c++/6/bits/stl_algobase.h **** #define _STL_ALGOBASE_H 1
  58:/usr/include/c++/6/bits/stl_algobase.h **** 
  59:/usr/include/c++/6/bits/stl_algobase.h **** #include <bits/c++config.h>
  60:/usr/include/c++/6/bits/stl_algobase.h **** #include <bits/functexcept.h>
  61:/usr/include/c++/6/bits/stl_algobase.h **** #include <bits/cpp_type_traits.h>
  62:/usr/include/c++/6/bits/stl_algobase.h **** #include <ext/type_traits.h>
  63:/usr/include/c++/6/bits/stl_algobase.h **** #include <ext/numeric_traits.h>
  64:/usr/include/c++/6/bits/stl_algobase.h **** #include <bits/stl_pair.h>
  65:/usr/include/c++/6/bits/stl_algobase.h **** #include <bits/stl_iterator_base_types.h>
  66:/usr/include/c++/6/bits/stl_algobase.h **** #include <bits/stl_iterator_base_funcs.h>
  67:/usr/include/c++/6/bits/stl_algobase.h **** #include <bits/stl_iterator.h>
  68:/usr/include/c++/6/bits/stl_algobase.h **** #include <bits/concept_check.h>
  69:/usr/include/c++/6/bits/stl_algobase.h **** #include <debug/debug.h>
  70:/usr/include/c++/6/bits/stl_algobase.h **** #include <bits/move.h> // For std::swap and _GLIBCXX_MOVE
  71:/usr/include/c++/6/bits/stl_algobase.h **** #include <bits/predefined_ops.h>
  72:/usr/include/c++/6/bits/stl_algobase.h **** 
  73:/usr/include/c++/6/bits/stl_algobase.h **** namespace std _GLIBCXX_VISIBILITY(default)
  74:/usr/include/c++/6/bits/stl_algobase.h **** {
  75:/usr/include/c++/6/bits/stl_algobase.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  76:/usr/include/c++/6/bits/stl_algobase.h **** 
  77:/usr/include/c++/6/bits/stl_algobase.h **** #if __cplusplus < 201103L
  78:/usr/include/c++/6/bits/stl_algobase.h ****   // See http://gcc.gnu.org/ml/libstdc++/2004-08/msg00167.html: in a
  79:/usr/include/c++/6/bits/stl_algobase.h ****   // nutshell, we are partially implementing the resolution of DR 187,
  80:/usr/include/c++/6/bits/stl_algobase.h ****   // when it's safe, i.e., the value_types are equal.
  81:/usr/include/c++/6/bits/stl_algobase.h ****   template<bool _BoolType>
  82:/usr/include/c++/6/bits/stl_algobase.h ****     struct __iter_swap
  83:/usr/include/c++/6/bits/stl_algobase.h ****     {
  84:/usr/include/c++/6/bits/stl_algobase.h ****       template<typename _ForwardIterator1, typename _ForwardIterator2>
GAS LISTING /tmp/ccsIN87E.s 			page 566


  85:/usr/include/c++/6/bits/stl_algobase.h ****         static void
  86:/usr/include/c++/6/bits/stl_algobase.h ****         iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b)
  87:/usr/include/c++/6/bits/stl_algobase.h ****         {
  88:/usr/include/c++/6/bits/stl_algobase.h ****           typedef typename iterator_traits<_ForwardIterator1>::value_type
  89:/usr/include/c++/6/bits/stl_algobase.h ****             _ValueType1;
  90:/usr/include/c++/6/bits/stl_algobase.h ****           _ValueType1 __tmp = _GLIBCXX_MOVE(*__a);
  91:/usr/include/c++/6/bits/stl_algobase.h ****           *__a = _GLIBCXX_MOVE(*__b);
  92:/usr/include/c++/6/bits/stl_algobase.h ****           *__b = _GLIBCXX_MOVE(__tmp);
  93:/usr/include/c++/6/bits/stl_algobase.h **** 	}
  94:/usr/include/c++/6/bits/stl_algobase.h ****     };
  95:/usr/include/c++/6/bits/stl_algobase.h **** 
  96:/usr/include/c++/6/bits/stl_algobase.h ****   template<>
  97:/usr/include/c++/6/bits/stl_algobase.h ****     struct __iter_swap<true>
  98:/usr/include/c++/6/bits/stl_algobase.h ****     {
  99:/usr/include/c++/6/bits/stl_algobase.h ****       template<typename _ForwardIterator1, typename _ForwardIterator2>
 100:/usr/include/c++/6/bits/stl_algobase.h ****         static void 
 101:/usr/include/c++/6/bits/stl_algobase.h ****         iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b)
 102:/usr/include/c++/6/bits/stl_algobase.h ****         {
 103:/usr/include/c++/6/bits/stl_algobase.h ****           swap(*__a, *__b);
 104:/usr/include/c++/6/bits/stl_algobase.h ****         }
 105:/usr/include/c++/6/bits/stl_algobase.h ****     };
 106:/usr/include/c++/6/bits/stl_algobase.h **** #endif
 107:/usr/include/c++/6/bits/stl_algobase.h **** 
 108:/usr/include/c++/6/bits/stl_algobase.h ****   /**
 109:/usr/include/c++/6/bits/stl_algobase.h ****    *  @brief Swaps the contents of two iterators.
 110:/usr/include/c++/6/bits/stl_algobase.h ****    *  @ingroup mutating_algorithms
 111:/usr/include/c++/6/bits/stl_algobase.h ****    *  @param  __a  An iterator.
 112:/usr/include/c++/6/bits/stl_algobase.h ****    *  @param  __b  Another iterator.
 113:/usr/include/c++/6/bits/stl_algobase.h ****    *  @return   Nothing.
 114:/usr/include/c++/6/bits/stl_algobase.h ****    *
 115:/usr/include/c++/6/bits/stl_algobase.h ****    *  This function swaps the values pointed to by two iterators, not the
 116:/usr/include/c++/6/bits/stl_algobase.h ****    *  iterators themselves.
 117:/usr/include/c++/6/bits/stl_algobase.h ****   */
 118:/usr/include/c++/6/bits/stl_algobase.h ****   template<typename _ForwardIterator1, typename _ForwardIterator2>
 119:/usr/include/c++/6/bits/stl_algobase.h ****     inline void
 120:/usr/include/c++/6/bits/stl_algobase.h ****     iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b)
 121:/usr/include/c++/6/bits/stl_algobase.h ****     {
 122:/usr/include/c++/6/bits/stl_algobase.h ****       // concept requirements
 123:/usr/include/c++/6/bits/stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 124:/usr/include/c++/6/bits/stl_algobase.h **** 				  _ForwardIterator1>)
 125:/usr/include/c++/6/bits/stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 126:/usr/include/c++/6/bits/stl_algobase.h **** 				  _ForwardIterator2>)
 127:/usr/include/c++/6/bits/stl_algobase.h **** 
 128:/usr/include/c++/6/bits/stl_algobase.h **** #if __cplusplus < 201103L
 129:/usr/include/c++/6/bits/stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator1>::value_type
 130:/usr/include/c++/6/bits/stl_algobase.h **** 	_ValueType1;
 131:/usr/include/c++/6/bits/stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator2>::value_type
 132:/usr/include/c++/6/bits/stl_algobase.h **** 	_ValueType2;
 133:/usr/include/c++/6/bits/stl_algobase.h **** 
 134:/usr/include/c++/6/bits/stl_algobase.h ****       __glibcxx_function_requires(_ConvertibleConcept<_ValueType1,
 135:/usr/include/c++/6/bits/stl_algobase.h **** 				  _ValueType2>)
 136:/usr/include/c++/6/bits/stl_algobase.h ****       __glibcxx_function_requires(_ConvertibleConcept<_ValueType2,
 137:/usr/include/c++/6/bits/stl_algobase.h **** 				  _ValueType1>)
 138:/usr/include/c++/6/bits/stl_algobase.h **** 
 139:/usr/include/c++/6/bits/stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator1>::reference
 140:/usr/include/c++/6/bits/stl_algobase.h **** 	_ReferenceType1;
 141:/usr/include/c++/6/bits/stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator2>::reference
GAS LISTING /tmp/ccsIN87E.s 			page 567


 142:/usr/include/c++/6/bits/stl_algobase.h **** 	_ReferenceType2;
 143:/usr/include/c++/6/bits/stl_algobase.h ****       std::__iter_swap<__are_same<_ValueType1, _ValueType2>::__value
 144:/usr/include/c++/6/bits/stl_algobase.h **** 	&& __are_same<_ValueType1&, _ReferenceType1>::__value
 145:/usr/include/c++/6/bits/stl_algobase.h **** 	&& __are_same<_ValueType2&, _ReferenceType2>::__value>::
 146:/usr/include/c++/6/bits/stl_algobase.h **** 	iter_swap(__a, __b);
 147:/usr/include/c++/6/bits/stl_algobase.h **** #else
 148:/usr/include/c++/6/bits/stl_algobase.h ****       swap(*__a, *__b);
 149:/usr/include/c++/6/bits/stl_algobase.h **** #endif
 150:/usr/include/c++/6/bits/stl_algobase.h ****     }
 151:/usr/include/c++/6/bits/stl_algobase.h **** 
 152:/usr/include/c++/6/bits/stl_algobase.h ****   /**
 153:/usr/include/c++/6/bits/stl_algobase.h ****    *  @brief Swap the elements of two sequences.
 154:/usr/include/c++/6/bits/stl_algobase.h ****    *  @ingroup mutating_algorithms
 155:/usr/include/c++/6/bits/stl_algobase.h ****    *  @param  __first1  A forward iterator.
 156:/usr/include/c++/6/bits/stl_algobase.h ****    *  @param  __last1   A forward iterator.
 157:/usr/include/c++/6/bits/stl_algobase.h ****    *  @param  __first2  A forward iterator.
 158:/usr/include/c++/6/bits/stl_algobase.h ****    *  @return   An iterator equal to @p first2+(last1-first1).
 159:/usr/include/c++/6/bits/stl_algobase.h ****    *
 160:/usr/include/c++/6/bits/stl_algobase.h ****    *  Swaps each element in the range @p [first1,last1) with the
 161:/usr/include/c++/6/bits/stl_algobase.h ****    *  corresponding element in the range @p [first2,(last1-first1)).
 162:/usr/include/c++/6/bits/stl_algobase.h ****    *  The ranges must not overlap.
 163:/usr/include/c++/6/bits/stl_algobase.h ****   */
 164:/usr/include/c++/6/bits/stl_algobase.h ****   template<typename _ForwardIterator1, typename _ForwardIterator2>
 165:/usr/include/c++/6/bits/stl_algobase.h ****     _ForwardIterator2
 166:/usr/include/c++/6/bits/stl_algobase.h ****     swap_ranges(_ForwardIterator1 __first1, _ForwardIterator1 __last1,
 167:/usr/include/c++/6/bits/stl_algobase.h **** 		_ForwardIterator2 __first2)
 168:/usr/include/c++/6/bits/stl_algobase.h ****     {
 169:/usr/include/c++/6/bits/stl_algobase.h ****       // concept requirements
 170:/usr/include/c++/6/bits/stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 171:/usr/include/c++/6/bits/stl_algobase.h **** 				  _ForwardIterator1>)
 172:/usr/include/c++/6/bits/stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 173:/usr/include/c++/6/bits/stl_algobase.h **** 				  _ForwardIterator2>)
 174:/usr/include/c++/6/bits/stl_algobase.h ****       __glibcxx_requires_valid_range(__first1, __last1);
 175:/usr/include/c++/6/bits/stl_algobase.h **** 
 176:/usr/include/c++/6/bits/stl_algobase.h ****       for (; __first1 != __last1; ++__first1, (void)++__first2)
 177:/usr/include/c++/6/bits/stl_algobase.h **** 	std::iter_swap(__first1, __first2);
 178:/usr/include/c++/6/bits/stl_algobase.h ****       return __first2;
 179:/usr/include/c++/6/bits/stl_algobase.h ****     }
 180:/usr/include/c++/6/bits/stl_algobase.h **** 
 181:/usr/include/c++/6/bits/stl_algobase.h ****   /**
 182:/usr/include/c++/6/bits/stl_algobase.h ****    *  @brief This does what you think it does.
 183:/usr/include/c++/6/bits/stl_algobase.h ****    *  @ingroup sorting_algorithms
 184:/usr/include/c++/6/bits/stl_algobase.h ****    *  @param  __a  A thing of arbitrary type.
 185:/usr/include/c++/6/bits/stl_algobase.h ****    *  @param  __b  Another thing of arbitrary type.
 186:/usr/include/c++/6/bits/stl_algobase.h ****    *  @return   The lesser of the parameters.
 187:/usr/include/c++/6/bits/stl_algobase.h ****    *
 188:/usr/include/c++/6/bits/stl_algobase.h ****    *  This is the simple classic generic implementation.  It will work on
 189:/usr/include/c++/6/bits/stl_algobase.h ****    *  temporary expressions, since they are only evaluated once, unlike a
 190:/usr/include/c++/6/bits/stl_algobase.h ****    *  preprocessor macro.
 191:/usr/include/c++/6/bits/stl_algobase.h ****   */
 192:/usr/include/c++/6/bits/stl_algobase.h ****   template<typename _Tp>
 193:/usr/include/c++/6/bits/stl_algobase.h ****     _GLIBCXX14_CONSTEXPR
 194:/usr/include/c++/6/bits/stl_algobase.h ****     inline const _Tp&
 195:/usr/include/c++/6/bits/stl_algobase.h ****     min(const _Tp& __a, const _Tp& __b)
 196:/usr/include/c++/6/bits/stl_algobase.h ****     {
 197:/usr/include/c++/6/bits/stl_algobase.h ****       // concept requirements
 198:/usr/include/c++/6/bits/stl_algobase.h ****       __glibcxx_function_requires(_LessThanComparableConcept<_Tp>)
GAS LISTING /tmp/ccsIN87E.s 			page 568


 199:/usr/include/c++/6/bits/stl_algobase.h ****       //return __b < __a ? __b : __a;
 200:/usr/include/c++/6/bits/stl_algobase.h ****       if (__b < __a)
 201:/usr/include/c++/6/bits/stl_algobase.h **** 	return __b;
 202:/usr/include/c++/6/bits/stl_algobase.h ****       return __a;
 203:/usr/include/c++/6/bits/stl_algobase.h ****     }
 204:/usr/include/c++/6/bits/stl_algobase.h **** 
 205:/usr/include/c++/6/bits/stl_algobase.h ****   /**
 206:/usr/include/c++/6/bits/stl_algobase.h ****    *  @brief This does what you think it does.
 207:/usr/include/c++/6/bits/stl_algobase.h ****    *  @ingroup sorting_algorithms
 208:/usr/include/c++/6/bits/stl_algobase.h ****    *  @param  __a  A thing of arbitrary type.
 209:/usr/include/c++/6/bits/stl_algobase.h ****    *  @param  __b  Another thing of arbitrary type.
 210:/usr/include/c++/6/bits/stl_algobase.h ****    *  @return   The greater of the parameters.
 211:/usr/include/c++/6/bits/stl_algobase.h ****    *
 212:/usr/include/c++/6/bits/stl_algobase.h ****    *  This is the simple classic generic implementation.  It will work on
 213:/usr/include/c++/6/bits/stl_algobase.h ****    *  temporary expressions, since they are only evaluated once, unlike a
 214:/usr/include/c++/6/bits/stl_algobase.h ****    *  preprocessor macro.
 215:/usr/include/c++/6/bits/stl_algobase.h ****   */
 216:/usr/include/c++/6/bits/stl_algobase.h ****   template<typename _Tp>
 217:/usr/include/c++/6/bits/stl_algobase.h ****     _GLIBCXX14_CONSTEXPR
 218:/usr/include/c++/6/bits/stl_algobase.h ****     inline const _Tp&
 219:/usr/include/c++/6/bits/stl_algobase.h ****     max(const _Tp& __a, const _Tp& __b)
 220:/usr/include/c++/6/bits/stl_algobase.h ****     {
 221:/usr/include/c++/6/bits/stl_algobase.h ****       // concept requirements
 222:/usr/include/c++/6/bits/stl_algobase.h ****       __glibcxx_function_requires(_LessThanComparableConcept<_Tp>)
 223:/usr/include/c++/6/bits/stl_algobase.h ****       //return  __a < __b ? __b : __a;
 224:/usr/include/c++/6/bits/stl_algobase.h ****       if (__a < __b)
 225:/usr/include/c++/6/bits/stl_algobase.h **** 	return __b;
 226:/usr/include/c++/6/bits/stl_algobase.h ****       return __a;
 227:/usr/include/c++/6/bits/stl_algobase.h ****     }
 228:/usr/include/c++/6/bits/stl_algobase.h **** 
 229:/usr/include/c++/6/bits/stl_algobase.h ****   /**
 230:/usr/include/c++/6/bits/stl_algobase.h ****    *  @brief This does what you think it does.
 231:/usr/include/c++/6/bits/stl_algobase.h ****    *  @ingroup sorting_algorithms
 232:/usr/include/c++/6/bits/stl_algobase.h ****    *  @param  __a  A thing of arbitrary type.
 233:/usr/include/c++/6/bits/stl_algobase.h ****    *  @param  __b  Another thing of arbitrary type.
 234:/usr/include/c++/6/bits/stl_algobase.h ****    *  @param  __comp  A @link comparison_functors comparison functor@endlink.
 235:/usr/include/c++/6/bits/stl_algobase.h ****    *  @return   The lesser of the parameters.
 236:/usr/include/c++/6/bits/stl_algobase.h ****    *
 237:/usr/include/c++/6/bits/stl_algobase.h ****    *  This will work on temporary expressions, since they are only evaluated
 238:/usr/include/c++/6/bits/stl_algobase.h ****    *  once, unlike a preprocessor macro.
 239:/usr/include/c++/6/bits/stl_algobase.h ****   */
 240:/usr/include/c++/6/bits/stl_algobase.h ****   template<typename _Tp, typename _Compare>
 241:/usr/include/c++/6/bits/stl_algobase.h ****     _GLIBCXX14_CONSTEXPR
 242:/usr/include/c++/6/bits/stl_algobase.h ****     inline const _Tp&
 243:/usr/include/c++/6/bits/stl_algobase.h ****     min(const _Tp& __a, const _Tp& __b, _Compare __comp)
 244:/usr/include/c++/6/bits/stl_algobase.h ****     {
 245:/usr/include/c++/6/bits/stl_algobase.h ****       //return __comp(__b, __a) ? __b : __a;
 246:/usr/include/c++/6/bits/stl_algobase.h ****       if (__comp(__b, __a))
 247:/usr/include/c++/6/bits/stl_algobase.h **** 	return __b;
 248:/usr/include/c++/6/bits/stl_algobase.h ****       return __a;
 249:/usr/include/c++/6/bits/stl_algobase.h ****     }
 250:/usr/include/c++/6/bits/stl_algobase.h **** 
 251:/usr/include/c++/6/bits/stl_algobase.h ****   /**
 252:/usr/include/c++/6/bits/stl_algobase.h ****    *  @brief This does what you think it does.
 253:/usr/include/c++/6/bits/stl_algobase.h ****    *  @ingroup sorting_algorithms
 254:/usr/include/c++/6/bits/stl_algobase.h ****    *  @param  __a  A thing of arbitrary type.
 255:/usr/include/c++/6/bits/stl_algobase.h ****    *  @param  __b  Another thing of arbitrary type.
GAS LISTING /tmp/ccsIN87E.s 			page 569


 256:/usr/include/c++/6/bits/stl_algobase.h ****    *  @param  __comp  A @link comparison_functors comparison functor@endlink.
 257:/usr/include/c++/6/bits/stl_algobase.h ****    *  @return   The greater of the parameters.
 258:/usr/include/c++/6/bits/stl_algobase.h ****    *
 259:/usr/include/c++/6/bits/stl_algobase.h ****    *  This will work on temporary expressions, since they are only evaluated
 260:/usr/include/c++/6/bits/stl_algobase.h ****    *  once, unlike a preprocessor macro.
 261:/usr/include/c++/6/bits/stl_algobase.h ****   */
 262:/usr/include/c++/6/bits/stl_algobase.h ****   template<typename _Tp, typename _Compare>
 263:/usr/include/c++/6/bits/stl_algobase.h ****     _GLIBCXX14_CONSTEXPR
 264:/usr/include/c++/6/bits/stl_algobase.h ****     inline const _Tp&
 265:/usr/include/c++/6/bits/stl_algobase.h ****     max(const _Tp& __a, const _Tp& __b, _Compare __comp)
 266:/usr/include/c++/6/bits/stl_algobase.h ****     {
 267:/usr/include/c++/6/bits/stl_algobase.h ****       //return __comp(__a, __b) ? __b : __a;
 268:/usr/include/c++/6/bits/stl_algobase.h ****       if (__comp(__a, __b))
 269:/usr/include/c++/6/bits/stl_algobase.h **** 	return __b;
 270:/usr/include/c++/6/bits/stl_algobase.h ****       return __a;
 271:/usr/include/c++/6/bits/stl_algobase.h ****     }
 272:/usr/include/c++/6/bits/stl_algobase.h **** 
 273:/usr/include/c++/6/bits/stl_algobase.h ****   // Fallback implementation of the function in bits/stl_iterator.h used to
 274:/usr/include/c++/6/bits/stl_algobase.h ****   // remove the __normal_iterator wrapper. See copy, fill, ...
 275:/usr/include/c++/6/bits/stl_algobase.h ****   template<typename _Iterator>
 276:/usr/include/c++/6/bits/stl_algobase.h ****     inline _Iterator
 277:/usr/include/c++/6/bits/stl_algobase.h ****     __niter_base(_Iterator __it)
 278:/usr/include/c++/6/bits/stl_algobase.h ****     { return __it; }
 279:/usr/include/c++/6/bits/stl_algobase.h **** 
 280:/usr/include/c++/6/bits/stl_algobase.h ****   // All of these auxiliary structs serve two purposes.  (1) Replace
 281:/usr/include/c++/6/bits/stl_algobase.h ****   // calls to copy with memmove whenever possible.  (Memmove, not memcpy,
 282:/usr/include/c++/6/bits/stl_algobase.h ****   // because the input and output ranges are permitted to overlap.)
 283:/usr/include/c++/6/bits/stl_algobase.h ****   // (2) If we're using random access iterators, then write the loop as
 284:/usr/include/c++/6/bits/stl_algobase.h ****   // a for loop with an explicit count.
 285:/usr/include/c++/6/bits/stl_algobase.h **** 
 286:/usr/include/c++/6/bits/stl_algobase.h ****   template<bool, bool, typename>
 287:/usr/include/c++/6/bits/stl_algobase.h ****     struct __copy_move
 288:/usr/include/c++/6/bits/stl_algobase.h ****     {
 289:/usr/include/c++/6/bits/stl_algobase.h ****       template<typename _II, typename _OI>
 290:/usr/include/c++/6/bits/stl_algobase.h ****         static _OI
 291:/usr/include/c++/6/bits/stl_algobase.h ****         __copy_m(_II __first, _II __last, _OI __result)
 292:/usr/include/c++/6/bits/stl_algobase.h ****         {
 293:/usr/include/c++/6/bits/stl_algobase.h **** 	  for (; __first != __last; ++__result, (void)++__first)
 294:/usr/include/c++/6/bits/stl_algobase.h **** 	    *__result = *__first;
 295:/usr/include/c++/6/bits/stl_algobase.h **** 	  return __result;
 296:/usr/include/c++/6/bits/stl_algobase.h **** 	}
 297:/usr/include/c++/6/bits/stl_algobase.h ****     };
 298:/usr/include/c++/6/bits/stl_algobase.h **** 
 299:/usr/include/c++/6/bits/stl_algobase.h **** #if __cplusplus >= 201103L
 300:/usr/include/c++/6/bits/stl_algobase.h ****   template<typename _Category>
 301:/usr/include/c++/6/bits/stl_algobase.h ****     struct __copy_move<true, false, _Category>
 302:/usr/include/c++/6/bits/stl_algobase.h ****     {
 303:/usr/include/c++/6/bits/stl_algobase.h ****       template<typename _II, typename _OI>
 304:/usr/include/c++/6/bits/stl_algobase.h ****         static _OI
 305:/usr/include/c++/6/bits/stl_algobase.h ****         __copy_m(_II __first, _II __last, _OI __result)
 306:/usr/include/c++/6/bits/stl_algobase.h ****         {
 307:/usr/include/c++/6/bits/stl_algobase.h **** 	  for (; __first != __last; ++__result, (void)++__first)
 308:/usr/include/c++/6/bits/stl_algobase.h **** 	    *__result = std::move(*__first);
 309:/usr/include/c++/6/bits/stl_algobase.h **** 	  return __result;
 310:/usr/include/c++/6/bits/stl_algobase.h **** 	}
 311:/usr/include/c++/6/bits/stl_algobase.h ****     };
 312:/usr/include/c++/6/bits/stl_algobase.h **** #endif
GAS LISTING /tmp/ccsIN87E.s 			page 570


 313:/usr/include/c++/6/bits/stl_algobase.h **** 
 314:/usr/include/c++/6/bits/stl_algobase.h ****   template<>
 315:/usr/include/c++/6/bits/stl_algobase.h ****     struct __copy_move<false, false, random_access_iterator_tag>
 316:/usr/include/c++/6/bits/stl_algobase.h ****     {
 317:/usr/include/c++/6/bits/stl_algobase.h ****       template<typename _II, typename _OI>
 318:/usr/include/c++/6/bits/stl_algobase.h ****         static _OI
 319:/usr/include/c++/6/bits/stl_algobase.h ****         __copy_m(_II __first, _II __last, _OI __result)
 320:/usr/include/c++/6/bits/stl_algobase.h ****         { 
 321:/usr/include/c++/6/bits/stl_algobase.h **** 	  typedef typename iterator_traits<_II>::difference_type _Distance;
 322:/usr/include/c++/6/bits/stl_algobase.h **** 	  for(_Distance __n = __last - __first; __n > 0; --__n)
 323:/usr/include/c++/6/bits/stl_algobase.h **** 	    {
 324:/usr/include/c++/6/bits/stl_algobase.h **** 	      *__result = *__first;
 325:/usr/include/c++/6/bits/stl_algobase.h **** 	      ++__first;
 326:/usr/include/c++/6/bits/stl_algobase.h **** 	      ++__result;
 327:/usr/include/c++/6/bits/stl_algobase.h **** 	    }
 328:/usr/include/c++/6/bits/stl_algobase.h **** 	  return __result;
 329:/usr/include/c++/6/bits/stl_algobase.h **** 	}
 330:/usr/include/c++/6/bits/stl_algobase.h ****     };
 331:/usr/include/c++/6/bits/stl_algobase.h **** 
 332:/usr/include/c++/6/bits/stl_algobase.h **** #if __cplusplus >= 201103L
 333:/usr/include/c++/6/bits/stl_algobase.h ****   template<>
 334:/usr/include/c++/6/bits/stl_algobase.h ****     struct __copy_move<true, false, random_access_iterator_tag>
 335:/usr/include/c++/6/bits/stl_algobase.h ****     {
 336:/usr/include/c++/6/bits/stl_algobase.h ****       template<typename _II, typename _OI>
 337:/usr/include/c++/6/bits/stl_algobase.h ****         static _OI
 338:/usr/include/c++/6/bits/stl_algobase.h ****         __copy_m(_II __first, _II __last, _OI __result)
 339:/usr/include/c++/6/bits/stl_algobase.h ****         { 
 340:/usr/include/c++/6/bits/stl_algobase.h **** 	  typedef typename iterator_traits<_II>::difference_type _Distance;
 341:/usr/include/c++/6/bits/stl_algobase.h **** 	  for(_Distance __n = __last - __first; __n > 0; --__n)
 342:/usr/include/c++/6/bits/stl_algobase.h **** 	    {
 343:/usr/include/c++/6/bits/stl_algobase.h **** 	      *__result = std::move(*__first);
 344:/usr/include/c++/6/bits/stl_algobase.h **** 	      ++__first;
 345:/usr/include/c++/6/bits/stl_algobase.h **** 	      ++__result;
 346:/usr/include/c++/6/bits/stl_algobase.h **** 	    }
 347:/usr/include/c++/6/bits/stl_algobase.h **** 	  return __result;
 348:/usr/include/c++/6/bits/stl_algobase.h **** 	}
 349:/usr/include/c++/6/bits/stl_algobase.h ****     };
 350:/usr/include/c++/6/bits/stl_algobase.h **** #endif
 351:/usr/include/c++/6/bits/stl_algobase.h **** 
 352:/usr/include/c++/6/bits/stl_algobase.h ****   template<bool _IsMove>
 353:/usr/include/c++/6/bits/stl_algobase.h ****     struct __copy_move<_IsMove, true, random_access_iterator_tag>
 354:/usr/include/c++/6/bits/stl_algobase.h ****     {
 355:/usr/include/c++/6/bits/stl_algobase.h ****       template<typename _Tp>
 356:/usr/include/c++/6/bits/stl_algobase.h ****         static _Tp*
 357:/usr/include/c++/6/bits/stl_algobase.h ****         __copy_m(const _Tp* __first, const _Tp* __last, _Tp* __result)
 358:/usr/include/c++/6/bits/stl_algobase.h ****         {
 359:/usr/include/c++/6/bits/stl_algobase.h **** #if __cplusplus >= 201103L
 360:/usr/include/c++/6/bits/stl_algobase.h **** 	  using __assignable = conditional<_IsMove,
 361:/usr/include/c++/6/bits/stl_algobase.h **** 					   is_move_assignable<_Tp>,
 362:/usr/include/c++/6/bits/stl_algobase.h **** 					   is_copy_assignable<_Tp>>;
 363:/usr/include/c++/6/bits/stl_algobase.h **** 	  // trivial types can have deleted assignment
 364:/usr/include/c++/6/bits/stl_algobase.h **** 	  static_assert( __assignable::type::value, "type is not assignable" );
 365:/usr/include/c++/6/bits/stl_algobase.h **** #endif
 366:/usr/include/c++/6/bits/stl_algobase.h **** 	  const ptrdiff_t _Num = __last - __first;
 367:/usr/include/c++/6/bits/stl_algobase.h **** 	  if (_Num)
 368:/usr/include/c++/6/bits/stl_algobase.h **** 	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
 369:/usr/include/c++/6/bits/stl_algobase.h **** 	  return __result + _Num;
GAS LISTING /tmp/ccsIN87E.s 			page 571


 370:/usr/include/c++/6/bits/stl_algobase.h **** 	}
 371:/usr/include/c++/6/bits/stl_algobase.h ****     };
 372:/usr/include/c++/6/bits/stl_algobase.h **** 
 373:/usr/include/c++/6/bits/stl_algobase.h ****   template<bool _IsMove, typename _II, typename _OI>
 374:/usr/include/c++/6/bits/stl_algobase.h ****     inline _OI
 375:/usr/include/c++/6/bits/stl_algobase.h ****     __copy_move_a(_II __first, _II __last, _OI __result)
 376:/usr/include/c++/6/bits/stl_algobase.h ****     {
 377:/usr/include/c++/6/bits/stl_algobase.h ****       typedef typename iterator_traits<_II>::value_type _ValueTypeI;
 378:/usr/include/c++/6/bits/stl_algobase.h ****       typedef typename iterator_traits<_OI>::value_type _ValueTypeO;
 379:/usr/include/c++/6/bits/stl_algobase.h ****       typedef typename iterator_traits<_II>::iterator_category _Category;
 380:/usr/include/c++/6/bits/stl_algobase.h ****       const bool __simple = (__is_trivial(_ValueTypeI)
 381:/usr/include/c++/6/bits/stl_algobase.h **** 	                     && __is_pointer<_II>::__value
 382:/usr/include/c++/6/bits/stl_algobase.h **** 	                     && __is_pointer<_OI>::__value
 383:/usr/include/c++/6/bits/stl_algobase.h **** 			     && __are_same<_ValueTypeI, _ValueTypeO>::__value);
 384:/usr/include/c++/6/bits/stl_algobase.h **** 
 385:/usr/include/c++/6/bits/stl_algobase.h ****       return std::__copy_move<_IsMove, __simple,
 386:/usr/include/c++/6/bits/stl_algobase.h **** 	                      _Category>::__copy_m(__first, __last, __result);
 387:/usr/include/c++/6/bits/stl_algobase.h ****     }
 388:/usr/include/c++/6/bits/stl_algobase.h **** 
 389:/usr/include/c++/6/bits/stl_algobase.h ****   // Helpers for streambuf iterators (either istream or ostream).
 390:/usr/include/c++/6/bits/stl_algobase.h ****   // NB: avoid including <iosfwd>, relatively large.
 391:/usr/include/c++/6/bits/stl_algobase.h ****   template<typename _CharT>
 392:/usr/include/c++/6/bits/stl_algobase.h ****     struct char_traits;
 393:/usr/include/c++/6/bits/stl_algobase.h **** 
 394:/usr/include/c++/6/bits/stl_algobase.h ****   template<typename _CharT, typename _Traits>
 395:/usr/include/c++/6/bits/stl_algobase.h ****     class istreambuf_iterator;
 396:/usr/include/c++/6/bits/stl_algobase.h **** 
 397:/usr/include/c++/6/bits/stl_algobase.h ****   template<typename _CharT, typename _Traits>
 398:/usr/include/c++/6/bits/stl_algobase.h ****     class ostreambuf_iterator;
 399:/usr/include/c++/6/bits/stl_algobase.h **** 
 400:/usr/include/c++/6/bits/stl_algobase.h ****   template<bool _IsMove, typename _CharT>
 401:/usr/include/c++/6/bits/stl_algobase.h ****     typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value, 
 402:/usr/include/c++/6/bits/stl_algobase.h **** 	     ostreambuf_iterator<_CharT, char_traits<_CharT> > >::__type
 403:/usr/include/c++/6/bits/stl_algobase.h ****     __copy_move_a2(_CharT*, _CharT*,
 404:/usr/include/c++/6/bits/stl_algobase.h **** 		   ostreambuf_iterator<_CharT, char_traits<_CharT> >);
 405:/usr/include/c++/6/bits/stl_algobase.h **** 
 406:/usr/include/c++/6/bits/stl_algobase.h ****   template<bool _IsMove, typename _CharT>
 407:/usr/include/c++/6/bits/stl_algobase.h ****     typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value, 
 408:/usr/include/c++/6/bits/stl_algobase.h **** 	     ostreambuf_iterator<_CharT, char_traits<_CharT> > >::__type
 409:/usr/include/c++/6/bits/stl_algobase.h ****     __copy_move_a2(const _CharT*, const _CharT*,
 410:/usr/include/c++/6/bits/stl_algobase.h **** 		   ostreambuf_iterator<_CharT, char_traits<_CharT> >);
 411:/usr/include/c++/6/bits/stl_algobase.h **** 
 412:/usr/include/c++/6/bits/stl_algobase.h ****   template<bool _IsMove, typename _CharT>
 413:/usr/include/c++/6/bits/stl_algobase.h ****     typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value,
 414:/usr/include/c++/6/bits/stl_algobase.h **** 				    _CharT*>::__type
 415:/usr/include/c++/6/bits/stl_algobase.h ****     __copy_move_a2(istreambuf_iterator<_CharT, char_traits<_CharT> >,
 416:/usr/include/c++/6/bits/stl_algobase.h **** 		   istreambuf_iterator<_CharT, char_traits<_CharT> >, _CharT*);
 417:/usr/include/c++/6/bits/stl_algobase.h **** 
 418:/usr/include/c++/6/bits/stl_algobase.h ****   template<bool _IsMove, typename _II, typename _OI>
 419:/usr/include/c++/6/bits/stl_algobase.h ****     inline _OI
 420:/usr/include/c++/6/bits/stl_algobase.h ****     __copy_move_a2(_II __first, _II __last, _OI __result)
 421:/usr/include/c++/6/bits/stl_algobase.h ****     {
 422:/usr/include/c++/6/bits/stl_algobase.h ****       return _OI(std::__copy_move_a<_IsMove>(std::__niter_base(__first),
 423:/usr/include/c++/6/bits/stl_algobase.h **** 					     std::__niter_base(__last),
 424:/usr/include/c++/6/bits/stl_algobase.h **** 					     std::__niter_base(__result)));
 425:/usr/include/c++/6/bits/stl_algobase.h ****     }
 426:/usr/include/c++/6/bits/stl_algobase.h **** 
GAS LISTING /tmp/ccsIN87E.s 			page 572


 427:/usr/include/c++/6/bits/stl_algobase.h ****   /**
 428:/usr/include/c++/6/bits/stl_algobase.h ****    *  @brief Copies the range [first,last) into result.
 429:/usr/include/c++/6/bits/stl_algobase.h ****    *  @ingroup mutating_algorithms
 430:/usr/include/c++/6/bits/stl_algobase.h ****    *  @param  __first  An input iterator.
 431:/usr/include/c++/6/bits/stl_algobase.h ****    *  @param  __last   An input iterator.
 432:/usr/include/c++/6/bits/stl_algobase.h ****    *  @param  __result An output iterator.
 433:/usr/include/c++/6/bits/stl_algobase.h ****    *  @return   result + (first - last)
 434:/usr/include/c++/6/bits/stl_algobase.h ****    *
 435:/usr/include/c++/6/bits/stl_algobase.h ****    *  This inline function will boil down to a call to @c memmove whenever
 436:/usr/include/c++/6/bits/stl_algobase.h ****    *  possible.  Failing that, if random access iterators are passed, then the
 437:/usr/include/c++/6/bits/stl_algobase.h ****    *  loop count will be known (and therefore a candidate for compiler
 438:/usr/include/c++/6/bits/stl_algobase.h ****    *  optimizations such as unrolling).  Result may not be contained within
 439:/usr/include/c++/6/bits/stl_algobase.h ****    *  [first,last); the copy_backward function should be used instead.
 440:/usr/include/c++/6/bits/stl_algobase.h ****    *
 441:/usr/include/c++/6/bits/stl_algobase.h ****    *  Note that the end of the output range is permitted to be contained
 442:/usr/include/c++/6/bits/stl_algobase.h ****    *  within [first,last).
 443:/usr/include/c++/6/bits/stl_algobase.h ****   */
 444:/usr/include/c++/6/bits/stl_algobase.h ****   template<typename _II, typename _OI>
 445:/usr/include/c++/6/bits/stl_algobase.h ****     inline _OI
 446:/usr/include/c++/6/bits/stl_algobase.h ****     copy(_II __first, _II __last, _OI __result)
 447:/usr/include/c++/6/bits/stl_algobase.h ****     {
 448:/usr/include/c++/6/bits/stl_algobase.h ****       // concept requirements
 449:/usr/include/c++/6/bits/stl_algobase.h ****       __glibcxx_function_requires(_InputIteratorConcept<_II>)
 450:/usr/include/c++/6/bits/stl_algobase.h ****       __glibcxx_function_requires(_OutputIteratorConcept<_OI,
 451:/usr/include/c++/6/bits/stl_algobase.h **** 	    typename iterator_traits<_II>::value_type>)
 452:/usr/include/c++/6/bits/stl_algobase.h ****       __glibcxx_requires_valid_range(__first, __last);
 453:/usr/include/c++/6/bits/stl_algobase.h **** 
 454:/usr/include/c++/6/bits/stl_algobase.h ****       return (std::__copy_move_a2<__is_move_iterator<_II>::__value>
 455:/usr/include/c++/6/bits/stl_algobase.h **** 	      (std::__miter_base(__first), std::__miter_base(__last),
 456:/usr/include/c++/6/bits/stl_algobase.h **** 	       __result));
 457:/usr/include/c++/6/bits/stl_algobase.h ****     }
 458:/usr/include/c++/6/bits/stl_algobase.h **** 
 459:/usr/include/c++/6/bits/stl_algobase.h **** #if __cplusplus >= 201103L
 460:/usr/include/c++/6/bits/stl_algobase.h ****   /**
 461:/usr/include/c++/6/bits/stl_algobase.h ****    *  @brief Moves the range [first,last) into result.
 462:/usr/include/c++/6/bits/stl_algobase.h ****    *  @ingroup mutating_algorithms
 463:/usr/include/c++/6/bits/stl_algobase.h ****    *  @param  __first  An input iterator.
 464:/usr/include/c++/6/bits/stl_algobase.h ****    *  @param  __last   An input iterator.
 465:/usr/include/c++/6/bits/stl_algobase.h ****    *  @param  __result An output iterator.
 466:/usr/include/c++/6/bits/stl_algobase.h ****    *  @return   result + (first - last)
 467:/usr/include/c++/6/bits/stl_algobase.h ****    *
 468:/usr/include/c++/6/bits/stl_algobase.h ****    *  This inline function will boil down to a call to @c memmove whenever
 469:/usr/include/c++/6/bits/stl_algobase.h ****    *  possible.  Failing that, if random access iterators are passed, then the
 470:/usr/include/c++/6/bits/stl_algobase.h ****    *  loop count will be known (and therefore a candidate for compiler
 471:/usr/include/c++/6/bits/stl_algobase.h ****    *  optimizations such as unrolling).  Result may not be contained within
 472:/usr/include/c++/6/bits/stl_algobase.h ****    *  [first,last); the move_backward function should be used instead.
 473:/usr/include/c++/6/bits/stl_algobase.h ****    *
 474:/usr/include/c++/6/bits/stl_algobase.h ****    *  Note that the end of the output range is permitted to be contained
 475:/usr/include/c++/6/bits/stl_algobase.h ****    *  within [first,last).
 476:/usr/include/c++/6/bits/stl_algobase.h ****   */
 477:/usr/include/c++/6/bits/stl_algobase.h ****   template<typename _II, typename _OI>
 478:/usr/include/c++/6/bits/stl_algobase.h ****     inline _OI
 479:/usr/include/c++/6/bits/stl_algobase.h ****     move(_II __first, _II __last, _OI __result)
 13749              		.loc 44 479 0
 13750              		.cfi_startproc
 13751 0000 55       		pushq	%rbp
 13752              		.cfi_def_cfa_offset 16
GAS LISTING /tmp/ccsIN87E.s 			page 573


 13753              		.cfi_offset 6, -16
 13754 0001 4889E5   		movq	%rsp, %rbp
 13755              		.cfi_def_cfa_register 6
 13756 0004 53       		pushq	%rbx
 13757 0005 4883EC28 		subq	$40, %rsp
 13758              		.cfi_offset 3, -24
 13759 0009 48897DE8 		movq	%rdi, -24(%rbp)
 13760 000d 488975E0 		movq	%rsi, -32(%rbp)
 13761 0011 488955D8 		movq	%rdx, -40(%rbp)
 480:/usr/include/c++/6/bits/stl_algobase.h ****     {
 481:/usr/include/c++/6/bits/stl_algobase.h ****       // concept requirements
 482:/usr/include/c++/6/bits/stl_algobase.h ****       __glibcxx_function_requires(_InputIteratorConcept<_II>)
 483:/usr/include/c++/6/bits/stl_algobase.h ****       __glibcxx_function_requires(_OutputIteratorConcept<_OI,
 484:/usr/include/c++/6/bits/stl_algobase.h **** 	    typename iterator_traits<_II>::value_type>)
 485:/usr/include/c++/6/bits/stl_algobase.h ****       __glibcxx_requires_valid_range(__first, __last);
 486:/usr/include/c++/6/bits/stl_algobase.h **** 
 487:/usr/include/c++/6/bits/stl_algobase.h ****       return std::__copy_move_a2<true>(std::__miter_base(__first),
 13762              		.loc 44 487 0
 13763 0015 488B45E0 		movq	-32(%rbp), %rax
 13764 0019 4889C7   		movq	%rax, %rdi
 13765 001c E8000000 		call	_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPN2gr5tag_tESt6vectorIS3_SaIS3_EEEEET_S9_
 13765      00
 13766 0021 4889C3   		movq	%rax, %rbx
 13767 0024 488B45E8 		movq	-24(%rbp), %rax
 13768 0028 4889C7   		movq	%rax, %rdi
 13769 002b E8000000 		call	_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPN2gr5tag_tESt6vectorIS3_SaIS3_EEEEET_S9_
 13769      00
 13770 0030 4889C1   		movq	%rax, %rcx
 488:/usr/include/c++/6/bits/stl_algobase.h **** 				       std::__miter_base(__last), __result);
 13771              		.loc 44 488 0
 13772 0033 488B45D8 		movq	-40(%rbp), %rax
 13773 0037 4889C2   		movq	%rax, %rdx
 13774 003a 4889DE   		movq	%rbx, %rsi
 13775 003d 4889CF   		movq	%rcx, %rdi
 13776 0040 E8000000 		call	_ZSt14__copy_move_a2ILb1EN9__gnu_cxx17__normal_iteratorIPN2gr5tag_tESt6vectorIS3_SaIS3_EEEES8
 13776      00
 489:/usr/include/c++/6/bits/stl_algobase.h ****     }
 13777              		.loc 44 489 0
 13778 0045 4883C428 		addq	$40, %rsp
 13779 0049 5B       		popq	%rbx
 13780 004a 5D       		popq	%rbp
 13781              		.cfi_def_cfa 7, 8
 13782 004b C3       		ret
 13783              		.cfi_endproc
 13784              	.LFE14186:
 13786              		.section	.text._ZNSt16allocator_traitsISaIN2gr5tag_tEEE7destroyIS1_EEvRS2_PT_,"axG",@progbits,_ZNS
 13787              		.weak	_ZNSt16allocator_traitsISaIN2gr5tag_tEEE7destroyIS1_EEvRS2_PT_
 13789              	_ZNSt16allocator_traitsISaIN2gr5tag_tEEE7destroyIS1_EEvRS2_PT_:
 13790              	.LFB14187:
 486:/usr/include/c++/6/bits/alloc_traits.h **** 	{ __a.destroy(__p); }
 13791              		.loc 42 486 0
 13792              		.cfi_startproc
 13793 0000 55       		pushq	%rbp
 13794              		.cfi_def_cfa_offset 16
 13795              		.cfi_offset 6, -16
 13796 0001 4889E5   		movq	%rsp, %rbp
 13797              		.cfi_def_cfa_register 6
GAS LISTING /tmp/ccsIN87E.s 			page 574


 13798 0004 4883EC10 		subq	$16, %rsp
 13799 0008 48897DF8 		movq	%rdi, -8(%rbp)
 13800 000c 488975F0 		movq	%rsi, -16(%rbp)
 487:/usr/include/c++/6/bits/alloc_traits.h **** 
 13801              		.loc 42 487 0
 13802 0010 488B55F0 		movq	-16(%rbp), %rdx
 13803 0014 488B45F8 		movq	-8(%rbp), %rax
 13804 0018 4889D6   		movq	%rdx, %rsi
 13805 001b 4889C7   		movq	%rax, %rdi
 13806 001e E8000000 		call	_ZN9__gnu_cxx13new_allocatorIN2gr5tag_tEE7destroyIS2_EEvPT_
 13806      00
 13807 0023 90       		nop
 13808 0024 C9       		leave
 13809              		.cfi_def_cfa 7, 8
 13810 0025 C3       		ret
 13811              		.cfi_endproc
 13812              	.LFE14187:
 13814              		.section	.text._ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFv
 13815              		.align 2
 13816              		.weak	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt
 13818              	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt10_Sele
 13819              	.LFB14335:
 565:/usr/include/c++/6/bits/stl_tree.h ****       {
 13820              		.loc 27 565 0
 13821              		.cfi_startproc
 13822              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 13823              		.cfi_lsda 0x1b,.LLSDA14335
 13824 0000 55       		pushq	%rbp
 13825              		.cfi_def_cfa_offset 16
 13826              		.cfi_offset 6, -16
 13827 0001 4889E5   		movq	%rsp, %rbp
 13828              		.cfi_def_cfa_register 6
 13829 0004 53       		pushq	%rbx
 13830 0005 4883EC18 		subq	$24, %rsp
 13831              		.cfi_offset 3, -24
 13832 0009 48897DE8 		movq	%rdi, -24(%rbp)
 13833 000d 488975E0 		movq	%rsi, -32(%rbp)
 567:/usr/include/c++/6/bits/stl_tree.h **** 	__p->~_Rb_tree_node<_Val>();
 13834              		.loc 27 567 0
 13835 0011 488B45E0 		movq	-32(%rbp), %rax
 13836 0015 4889C7   		movq	%rax, %rdi
 13837 0018 E8000000 		call	_ZNSt13_Rb_tree_nodeISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS1_8functionIFvS5_EEEE
 13837      00
 13838 001d 4889C3   		movq	%rax, %rbx
 13839 0020 488B45E8 		movq	-24(%rbp), %rax
 13840 0024 4889C7   		movq	%rax, %rdi
 13841 0027 E8000000 		call	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt1
 13841      00
 13842 002c 4889DE   		movq	%rbx, %rsi
 13843 002f 4889C7   		movq	%rax, %rdi
 13844 0032 E8000000 		call	_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEE
 13844      00
 569:/usr/include/c++/6/bits/stl_tree.h **** #endif
 13845              		.loc 27 569 0
 13846 0037 90       		nop
 13847 0038 4883C418 		addq	$24, %rsp
 13848 003c 5B       		popq	%rbx
GAS LISTING /tmp/ccsIN87E.s 			page 575


 13849 003d 5D       		popq	%rbp
 13850              		.cfi_def_cfa 7, 8
 13851 003e C3       		ret
 13852              		.cfi_endproc
 13853              	.LFE14335:
 13854              		.section	.gcc_except_table
 13855              	.LLSDA14335:
 13856 01fa FF       		.byte	0xff
 13857 01fb FF       		.byte	0xff
 13858 01fc 01       		.byte	0x1
 13859 01fd 00       		.uleb128 .LLSDACSE14335-.LLSDACSB14335
 13860              	.LLSDACSB14335:
 13861              	.LLSDACSE14335:
 13862              		.section	.text._ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFv
 13864              		.section	.text._ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFv
 13865              		.align 2
 13866              		.weak	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt
 13868              	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt10_Sele
 13869              	.LFB14336:
 508:/usr/include/c++/6/bits/stl_tree.h ****       { _Alloc_traits::deallocate(_M_get_Node_allocator(), __p, 1); }
 13870              		.loc 27 508 0
 13871              		.cfi_startproc
 13872              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 13873              		.cfi_lsda 0x1b,.LLSDA14336
 13874 0000 55       		pushq	%rbp
 13875              		.cfi_def_cfa_offset 16
 13876              		.cfi_offset 6, -16
 13877 0001 4889E5   		movq	%rsp, %rbp
 13878              		.cfi_def_cfa_register 6
 13879 0004 4883EC10 		subq	$16, %rsp
 13880 0008 48897DF8 		movq	%rdi, -8(%rbp)
 13881 000c 488975F0 		movq	%rsi, -16(%rbp)
 509:/usr/include/c++/6/bits/stl_tree.h **** 
 13882              		.loc 27 509 0
 13883 0010 488B45F8 		movq	-8(%rbp), %rax
 13884 0014 4889C7   		movq	%rax, %rdi
 13885 0017 E8000000 		call	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt1
 13885      00
 13886 001c 4889C1   		movq	%rax, %rcx
 13887 001f 488B45F0 		movq	-16(%rbp), %rax
 13888 0023 BA010000 		movl	$1, %edx
 13888      00
 13889 0028 4889C6   		movq	%rax, %rsi
 13890 002b 4889CF   		movq	%rcx, %rdi
 13891 002e E8000000 		call	_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEE
 13891      00
 13892 0033 90       		nop
 13893 0034 C9       		leave
 13894              		.cfi_def_cfa 7, 8
 13895 0035 C3       		ret
 13896              		.cfi_endproc
 13897              	.LFE14336:
 13898              		.section	.gcc_except_table
 13899              	.LLSDA14336:
 13900 01fe FF       		.byte	0xff
 13901 01ff FF       		.byte	0xff
 13902 0200 01       		.byte	0x1
GAS LISTING /tmp/ccsIN87E.s 			page 576


 13903 0201 00       		.uleb128 .LLSDACSE14336-.LLSDACSB14336
 13904              	.LLSDACSB14336:
 13905              	.LLSDACSE14336:
 13906              		.section	.text._ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFv
 13908              		.section	.text._ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFv
 13909              		.weak	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt
 13911              	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt10_Sele
 13912              	.LFB14357:
 708:/usr/include/c++/6/bits/stl_tree.h ****       { return *static_cast<_Const_Link_type>(__x)->_M_valptr(); }
 13913              		.loc 27 708 0
 13914              		.cfi_startproc
 13915 0000 55       		pushq	%rbp
 13916              		.cfi_def_cfa_offset 16
 13917              		.cfi_offset 6, -16
 13918 0001 4889E5   		movq	%rsp, %rbp
 13919              		.cfi_def_cfa_register 6
 13920 0004 4883EC10 		subq	$16, %rsp
 13921 0008 48897DF8 		movq	%rdi, -8(%rbp)
 709:/usr/include/c++/6/bits/stl_tree.h **** 
 13922              		.loc 27 709 0
 13923 000c 488B45F8 		movq	-8(%rbp), %rax
 13924 0010 4889C7   		movq	%rax, %rdi
 13925 0013 E8000000 		call	_ZNKSt13_Rb_tree_nodeISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS1_8functionIFvS5_EEE
 13925      00
 13926 0018 C9       		leave
 13927              		.cfi_def_cfa 7, 8
 13928 0019 C3       		ret
 13929              		.cfi_endproc
 13930              	.LFE14357:
 13932              		.section	.text._ZNKSt10_Select1stISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS1_8functionIF
 13933              		.align 2
 13934              		.weak	_ZNKSt10_Select1stISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS1_8functionIFvS5_EEEEE
 13936              	_ZNKSt10_Select1stISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS1_8functionIFvS5_EEEEEclERKSA
 13937              	.LFB14358:
 13938              		.file 45 "/usr/include/c++/6/bits/stl_function.h"
   1:/usr/include/c++/6/bits/stl_function.h **** // Functor implementations -*- C++ -*-
   2:/usr/include/c++/6/bits/stl_function.h **** 
   3:/usr/include/c++/6/bits/stl_function.h **** // Copyright (C) 2001-2016 Free Software Foundation, Inc.
   4:/usr/include/c++/6/bits/stl_function.h **** //
   5:/usr/include/c++/6/bits/stl_function.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/6/bits/stl_function.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/6/bits/stl_function.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/6/bits/stl_function.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/6/bits/stl_function.h **** // any later version.
  10:/usr/include/c++/6/bits/stl_function.h **** 
  11:/usr/include/c++/6/bits/stl_function.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/6/bits/stl_function.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/6/bits/stl_function.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/6/bits/stl_function.h **** // GNU General Public License for more details.
  15:/usr/include/c++/6/bits/stl_function.h **** 
  16:/usr/include/c++/6/bits/stl_function.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/6/bits/stl_function.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/6/bits/stl_function.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/6/bits/stl_function.h **** 
  20:/usr/include/c++/6/bits/stl_function.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/6/bits/stl_function.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/6/bits/stl_function.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
GAS LISTING /tmp/ccsIN87E.s 			page 577


  23:/usr/include/c++/6/bits/stl_function.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/6/bits/stl_function.h **** 
  25:/usr/include/c++/6/bits/stl_function.h **** /*
  26:/usr/include/c++/6/bits/stl_function.h ****  *
  27:/usr/include/c++/6/bits/stl_function.h ****  * Copyright (c) 1994
  28:/usr/include/c++/6/bits/stl_function.h ****  * Hewlett-Packard Company
  29:/usr/include/c++/6/bits/stl_function.h ****  *
  30:/usr/include/c++/6/bits/stl_function.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:/usr/include/c++/6/bits/stl_function.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:/usr/include/c++/6/bits/stl_function.h ****  * provided that the above copyright notice appear in all copies and
  33:/usr/include/c++/6/bits/stl_function.h ****  * that both that copyright notice and this permission notice appear
  34:/usr/include/c++/6/bits/stl_function.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:/usr/include/c++/6/bits/stl_function.h ****  * representations about the suitability of this software for any
  36:/usr/include/c++/6/bits/stl_function.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:/usr/include/c++/6/bits/stl_function.h ****  *
  38:/usr/include/c++/6/bits/stl_function.h ****  *
  39:/usr/include/c++/6/bits/stl_function.h ****  * Copyright (c) 1996-1998
  40:/usr/include/c++/6/bits/stl_function.h ****  * Silicon Graphics Computer Systems, Inc.
  41:/usr/include/c++/6/bits/stl_function.h ****  *
  42:/usr/include/c++/6/bits/stl_function.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:/usr/include/c++/6/bits/stl_function.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:/usr/include/c++/6/bits/stl_function.h ****  * provided that the above copyright notice appear in all copies and
  45:/usr/include/c++/6/bits/stl_function.h ****  * that both that copyright notice and this permission notice appear
  46:/usr/include/c++/6/bits/stl_function.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:/usr/include/c++/6/bits/stl_function.h ****  * representations about the suitability of this software for any
  48:/usr/include/c++/6/bits/stl_function.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:/usr/include/c++/6/bits/stl_function.h ****  */
  50:/usr/include/c++/6/bits/stl_function.h **** 
  51:/usr/include/c++/6/bits/stl_function.h **** /** @file bits/stl_function.h
  52:/usr/include/c++/6/bits/stl_function.h ****  *  This is an internal header file, included by other library headers.
  53:/usr/include/c++/6/bits/stl_function.h ****  *  Do not attempt to use it directly. @headername{functional}
  54:/usr/include/c++/6/bits/stl_function.h ****  */
  55:/usr/include/c++/6/bits/stl_function.h **** 
  56:/usr/include/c++/6/bits/stl_function.h **** #ifndef _STL_FUNCTION_H
  57:/usr/include/c++/6/bits/stl_function.h **** #define _STL_FUNCTION_H 1
  58:/usr/include/c++/6/bits/stl_function.h **** 
  59:/usr/include/c++/6/bits/stl_function.h **** #if __cplusplus > 201103L
  60:/usr/include/c++/6/bits/stl_function.h **** #include <bits/move.h>
  61:/usr/include/c++/6/bits/stl_function.h **** #endif
  62:/usr/include/c++/6/bits/stl_function.h **** 
  63:/usr/include/c++/6/bits/stl_function.h **** namespace std _GLIBCXX_VISIBILITY(default)
  64:/usr/include/c++/6/bits/stl_function.h **** {
  65:/usr/include/c++/6/bits/stl_function.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  66:/usr/include/c++/6/bits/stl_function.h **** 
  67:/usr/include/c++/6/bits/stl_function.h ****   // 20.3.1 base classes
  68:/usr/include/c++/6/bits/stl_function.h ****   /** @defgroup functors Function Objects
  69:/usr/include/c++/6/bits/stl_function.h ****    * @ingroup utilities
  70:/usr/include/c++/6/bits/stl_function.h ****    *
  71:/usr/include/c++/6/bits/stl_function.h ****    *  Function objects, or @e functors, are objects with an @c operator()
  72:/usr/include/c++/6/bits/stl_function.h ****    *  defined and accessible.  They can be passed as arguments to algorithm
  73:/usr/include/c++/6/bits/stl_function.h ****    *  templates and used in place of a function pointer.  Not only is the
  74:/usr/include/c++/6/bits/stl_function.h ****    *  resulting expressiveness of the library increased, but the generated
  75:/usr/include/c++/6/bits/stl_function.h ****    *  code can be more efficient than what you might write by hand.  When we
  76:/usr/include/c++/6/bits/stl_function.h ****    *  refer to @a functors, then, generally we include function pointers in
  77:/usr/include/c++/6/bits/stl_function.h ****    *  the description as well.
  78:/usr/include/c++/6/bits/stl_function.h ****    *
  79:/usr/include/c++/6/bits/stl_function.h ****    *  Often, functors are only created as temporaries passed to algorithm
GAS LISTING /tmp/ccsIN87E.s 			page 578


  80:/usr/include/c++/6/bits/stl_function.h ****    *  calls, rather than being created as named variables.
  81:/usr/include/c++/6/bits/stl_function.h ****    *
  82:/usr/include/c++/6/bits/stl_function.h ****    *  Two examples taken from the standard itself follow.  To perform a
  83:/usr/include/c++/6/bits/stl_function.h ****    *  by-element addition of two vectors @c a and @c b containing @c double,
  84:/usr/include/c++/6/bits/stl_function.h ****    *  and put the result in @c a, use
  85:/usr/include/c++/6/bits/stl_function.h ****    *  \code
  86:/usr/include/c++/6/bits/stl_function.h ****    *  transform (a.begin(), a.end(), b.begin(), a.begin(), plus<double>());
  87:/usr/include/c++/6/bits/stl_function.h ****    *  \endcode
  88:/usr/include/c++/6/bits/stl_function.h ****    *  To negate every element in @c a, use
  89:/usr/include/c++/6/bits/stl_function.h ****    *  \code
  90:/usr/include/c++/6/bits/stl_function.h ****    *  transform(a.begin(), a.end(), a.begin(), negate<double>());
  91:/usr/include/c++/6/bits/stl_function.h ****    *  \endcode
  92:/usr/include/c++/6/bits/stl_function.h ****    *  The addition and negation functions will be inlined directly.
  93:/usr/include/c++/6/bits/stl_function.h ****    *
  94:/usr/include/c++/6/bits/stl_function.h ****    *  The standard functors are derived from structs named @c unary_function
  95:/usr/include/c++/6/bits/stl_function.h ****    *  and @c binary_function.  These two classes contain nothing but typedefs,
  96:/usr/include/c++/6/bits/stl_function.h ****    *  to aid in generic (template) programming.  If you write your own
  97:/usr/include/c++/6/bits/stl_function.h ****    *  functors, you might consider doing the same.
  98:/usr/include/c++/6/bits/stl_function.h ****    *
  99:/usr/include/c++/6/bits/stl_function.h ****    *  @{
 100:/usr/include/c++/6/bits/stl_function.h ****    */
 101:/usr/include/c++/6/bits/stl_function.h ****   /**
 102:/usr/include/c++/6/bits/stl_function.h ****    *  This is one of the @link functors functor base classes@endlink.
 103:/usr/include/c++/6/bits/stl_function.h ****    */
 104:/usr/include/c++/6/bits/stl_function.h ****   template<typename _Arg, typename _Result>
 105:/usr/include/c++/6/bits/stl_function.h ****     struct unary_function
 106:/usr/include/c++/6/bits/stl_function.h ****     {
 107:/usr/include/c++/6/bits/stl_function.h ****       /// @c argument_type is the type of the argument
 108:/usr/include/c++/6/bits/stl_function.h ****       typedef _Arg 	argument_type;   
 109:/usr/include/c++/6/bits/stl_function.h **** 
 110:/usr/include/c++/6/bits/stl_function.h ****       /// @c result_type is the return type
 111:/usr/include/c++/6/bits/stl_function.h ****       typedef _Result 	result_type;  
 112:/usr/include/c++/6/bits/stl_function.h ****     };
 113:/usr/include/c++/6/bits/stl_function.h **** 
 114:/usr/include/c++/6/bits/stl_function.h ****   /**
 115:/usr/include/c++/6/bits/stl_function.h ****    *  This is one of the @link functors functor base classes@endlink.
 116:/usr/include/c++/6/bits/stl_function.h ****    */
 117:/usr/include/c++/6/bits/stl_function.h ****   template<typename _Arg1, typename _Arg2, typename _Result>
 118:/usr/include/c++/6/bits/stl_function.h ****     struct binary_function
 119:/usr/include/c++/6/bits/stl_function.h ****     {
 120:/usr/include/c++/6/bits/stl_function.h ****       /// @c first_argument_type is the type of the first argument
 121:/usr/include/c++/6/bits/stl_function.h ****       typedef _Arg1 	first_argument_type; 
 122:/usr/include/c++/6/bits/stl_function.h **** 
 123:/usr/include/c++/6/bits/stl_function.h ****       /// @c second_argument_type is the type of the second argument
 124:/usr/include/c++/6/bits/stl_function.h ****       typedef _Arg2 	second_argument_type;
 125:/usr/include/c++/6/bits/stl_function.h **** 
 126:/usr/include/c++/6/bits/stl_function.h ****       /// @c result_type is the return type
 127:/usr/include/c++/6/bits/stl_function.h ****       typedef _Result 	result_type;
 128:/usr/include/c++/6/bits/stl_function.h ****     };
 129:/usr/include/c++/6/bits/stl_function.h ****   /** @}  */
 130:/usr/include/c++/6/bits/stl_function.h **** 
 131:/usr/include/c++/6/bits/stl_function.h ****   // 20.3.2 arithmetic
 132:/usr/include/c++/6/bits/stl_function.h ****   /** @defgroup arithmetic_functors Arithmetic Classes
 133:/usr/include/c++/6/bits/stl_function.h ****    * @ingroup functors
 134:/usr/include/c++/6/bits/stl_function.h ****    *
 135:/usr/include/c++/6/bits/stl_function.h ****    *  Because basic math often needs to be done during an algorithm,
 136:/usr/include/c++/6/bits/stl_function.h ****    *  the library provides functors for those operations.  See the
GAS LISTING /tmp/ccsIN87E.s 			page 579


 137:/usr/include/c++/6/bits/stl_function.h ****    *  documentation for @link functors the base classes@endlink
 138:/usr/include/c++/6/bits/stl_function.h ****    *  for examples of their use.
 139:/usr/include/c++/6/bits/stl_function.h ****    *
 140:/usr/include/c++/6/bits/stl_function.h ****    *  @{
 141:/usr/include/c++/6/bits/stl_function.h ****    */
 142:/usr/include/c++/6/bits/stl_function.h **** 
 143:/usr/include/c++/6/bits/stl_function.h **** #if __cplusplus > 201103L
 144:/usr/include/c++/6/bits/stl_function.h ****   struct __is_transparent;  // undefined
 145:/usr/include/c++/6/bits/stl_function.h **** 
 146:/usr/include/c++/6/bits/stl_function.h ****   template<typename _Tp = void>
 147:/usr/include/c++/6/bits/stl_function.h ****     struct plus;
 148:/usr/include/c++/6/bits/stl_function.h **** 
 149:/usr/include/c++/6/bits/stl_function.h ****   template<typename _Tp = void>
 150:/usr/include/c++/6/bits/stl_function.h ****     struct minus;
 151:/usr/include/c++/6/bits/stl_function.h **** 
 152:/usr/include/c++/6/bits/stl_function.h ****   template<typename _Tp = void>
 153:/usr/include/c++/6/bits/stl_function.h ****     struct multiplies;
 154:/usr/include/c++/6/bits/stl_function.h **** 
 155:/usr/include/c++/6/bits/stl_function.h ****   template<typename _Tp = void>
 156:/usr/include/c++/6/bits/stl_function.h ****     struct divides;
 157:/usr/include/c++/6/bits/stl_function.h **** 
 158:/usr/include/c++/6/bits/stl_function.h ****   template<typename _Tp = void>
 159:/usr/include/c++/6/bits/stl_function.h ****     struct modulus;
 160:/usr/include/c++/6/bits/stl_function.h **** 
 161:/usr/include/c++/6/bits/stl_function.h ****   template<typename _Tp = void>
 162:/usr/include/c++/6/bits/stl_function.h ****     struct negate;
 163:/usr/include/c++/6/bits/stl_function.h **** #endif
 164:/usr/include/c++/6/bits/stl_function.h **** 
 165:/usr/include/c++/6/bits/stl_function.h ****   /// One of the @link arithmetic_functors math functors@endlink.
 166:/usr/include/c++/6/bits/stl_function.h ****   template<typename _Tp>
 167:/usr/include/c++/6/bits/stl_function.h ****     struct plus : public binary_function<_Tp, _Tp, _Tp>
 168:/usr/include/c++/6/bits/stl_function.h ****     {
 169:/usr/include/c++/6/bits/stl_function.h ****       _GLIBCXX14_CONSTEXPR
 170:/usr/include/c++/6/bits/stl_function.h ****       _Tp
 171:/usr/include/c++/6/bits/stl_function.h ****       operator()(const _Tp& __x, const _Tp& __y) const
 172:/usr/include/c++/6/bits/stl_function.h ****       { return __x + __y; }
 173:/usr/include/c++/6/bits/stl_function.h ****     };
 174:/usr/include/c++/6/bits/stl_function.h **** 
 175:/usr/include/c++/6/bits/stl_function.h ****   /// One of the @link arithmetic_functors math functors@endlink.
 176:/usr/include/c++/6/bits/stl_function.h ****   template<typename _Tp>
 177:/usr/include/c++/6/bits/stl_function.h ****     struct minus : public binary_function<_Tp, _Tp, _Tp>
 178:/usr/include/c++/6/bits/stl_function.h ****     {
 179:/usr/include/c++/6/bits/stl_function.h ****       _GLIBCXX14_CONSTEXPR
 180:/usr/include/c++/6/bits/stl_function.h ****       _Tp
 181:/usr/include/c++/6/bits/stl_function.h ****       operator()(const _Tp& __x, const _Tp& __y) const
 182:/usr/include/c++/6/bits/stl_function.h ****       { return __x - __y; }
 183:/usr/include/c++/6/bits/stl_function.h ****     };
 184:/usr/include/c++/6/bits/stl_function.h **** 
 185:/usr/include/c++/6/bits/stl_function.h ****   /// One of the @link arithmetic_functors math functors@endlink.
 186:/usr/include/c++/6/bits/stl_function.h ****   template<typename _Tp>
 187:/usr/include/c++/6/bits/stl_function.h ****     struct multiplies : public binary_function<_Tp, _Tp, _Tp>
 188:/usr/include/c++/6/bits/stl_function.h ****     {
 189:/usr/include/c++/6/bits/stl_function.h ****       _GLIBCXX14_CONSTEXPR
 190:/usr/include/c++/6/bits/stl_function.h ****       _Tp
 191:/usr/include/c++/6/bits/stl_function.h ****       operator()(const _Tp& __x, const _Tp& __y) const
 192:/usr/include/c++/6/bits/stl_function.h ****       { return __x * __y; }
 193:/usr/include/c++/6/bits/stl_function.h ****     };
GAS LISTING /tmp/ccsIN87E.s 			page 580


 194:/usr/include/c++/6/bits/stl_function.h **** 
 195:/usr/include/c++/6/bits/stl_function.h ****   /// One of the @link arithmetic_functors math functors@endlink.
 196:/usr/include/c++/6/bits/stl_function.h ****   template<typename _Tp>
 197:/usr/include/c++/6/bits/stl_function.h ****     struct divides : public binary_function<_Tp, _Tp, _Tp>
 198:/usr/include/c++/6/bits/stl_function.h ****     {
 199:/usr/include/c++/6/bits/stl_function.h ****       _GLIBCXX14_CONSTEXPR
 200:/usr/include/c++/6/bits/stl_function.h ****       _Tp
 201:/usr/include/c++/6/bits/stl_function.h ****       operator()(const _Tp& __x, const _Tp& __y) const
 202:/usr/include/c++/6/bits/stl_function.h ****       { return __x / __y; }
 203:/usr/include/c++/6/bits/stl_function.h ****     };
 204:/usr/include/c++/6/bits/stl_function.h **** 
 205:/usr/include/c++/6/bits/stl_function.h ****   /// One of the @link arithmetic_functors math functors@endlink.
 206:/usr/include/c++/6/bits/stl_function.h ****   template<typename _Tp>
 207:/usr/include/c++/6/bits/stl_function.h ****     struct modulus : public binary_function<_Tp, _Tp, _Tp>
 208:/usr/include/c++/6/bits/stl_function.h ****     {
 209:/usr/include/c++/6/bits/stl_function.h ****       _GLIBCXX14_CONSTEXPR
 210:/usr/include/c++/6/bits/stl_function.h ****       _Tp
 211:/usr/include/c++/6/bits/stl_function.h ****       operator()(const _Tp& __x, const _Tp& __y) const
 212:/usr/include/c++/6/bits/stl_function.h ****       { return __x % __y; }
 213:/usr/include/c++/6/bits/stl_function.h ****     };
 214:/usr/include/c++/6/bits/stl_function.h **** 
 215:/usr/include/c++/6/bits/stl_function.h ****   /// One of the @link arithmetic_functors math functors@endlink.
 216:/usr/include/c++/6/bits/stl_function.h ****   template<typename _Tp>
 217:/usr/include/c++/6/bits/stl_function.h ****     struct negate : public unary_function<_Tp, _Tp>
 218:/usr/include/c++/6/bits/stl_function.h ****     {
 219:/usr/include/c++/6/bits/stl_function.h ****       _GLIBCXX14_CONSTEXPR
 220:/usr/include/c++/6/bits/stl_function.h ****       _Tp
 221:/usr/include/c++/6/bits/stl_function.h ****       operator()(const _Tp& __x) const
 222:/usr/include/c++/6/bits/stl_function.h ****       { return -__x; }
 223:/usr/include/c++/6/bits/stl_function.h ****     };
 224:/usr/include/c++/6/bits/stl_function.h **** 
 225:/usr/include/c++/6/bits/stl_function.h **** #if __cplusplus > 201103L
 226:/usr/include/c++/6/bits/stl_function.h **** 
 227:/usr/include/c++/6/bits/stl_function.h **** #define __cpp_lib_transparent_operators 201210
 228:/usr/include/c++/6/bits/stl_function.h **** 
 229:/usr/include/c++/6/bits/stl_function.h ****   template<>
 230:/usr/include/c++/6/bits/stl_function.h ****     struct plus<void>
 231:/usr/include/c++/6/bits/stl_function.h ****     {
 232:/usr/include/c++/6/bits/stl_function.h ****       template <typename _Tp, typename _Up>
 233:/usr/include/c++/6/bits/stl_function.h **** 	_GLIBCXX14_CONSTEXPR
 234:/usr/include/c++/6/bits/stl_function.h **** 	auto
 235:/usr/include/c++/6/bits/stl_function.h **** 	operator()(_Tp&& __t, _Up&& __u) const
 236:/usr/include/c++/6/bits/stl_function.h **** 	noexcept(noexcept(std::forward<_Tp>(__t) + std::forward<_Up>(__u)))
 237:/usr/include/c++/6/bits/stl_function.h **** 	-> decltype(std::forward<_Tp>(__t) + std::forward<_Up>(__u))
 238:/usr/include/c++/6/bits/stl_function.h **** 	{ return std::forward<_Tp>(__t) + std::forward<_Up>(__u); }
 239:/usr/include/c++/6/bits/stl_function.h **** 
 240:/usr/include/c++/6/bits/stl_function.h ****       typedef __is_transparent is_transparent;
 241:/usr/include/c++/6/bits/stl_function.h ****     };
 242:/usr/include/c++/6/bits/stl_function.h **** 
 243:/usr/include/c++/6/bits/stl_function.h ****   /// One of the @link arithmetic_functors math functors@endlink.
 244:/usr/include/c++/6/bits/stl_function.h ****   template<>
 245:/usr/include/c++/6/bits/stl_function.h ****     struct minus<void>
 246:/usr/include/c++/6/bits/stl_function.h ****     {
 247:/usr/include/c++/6/bits/stl_function.h ****       template <typename _Tp, typename _Up>
 248:/usr/include/c++/6/bits/stl_function.h **** 	_GLIBCXX14_CONSTEXPR
 249:/usr/include/c++/6/bits/stl_function.h **** 	auto
 250:/usr/include/c++/6/bits/stl_function.h **** 	operator()(_Tp&& __t, _Up&& __u) const
GAS LISTING /tmp/ccsIN87E.s 			page 581


 251:/usr/include/c++/6/bits/stl_function.h **** 	noexcept(noexcept(std::forward<_Tp>(__t) - std::forward<_Up>(__u)))
 252:/usr/include/c++/6/bits/stl_function.h **** 	-> decltype(std::forward<_Tp>(__t) - std::forward<_Up>(__u))
 253:/usr/include/c++/6/bits/stl_function.h **** 	{ return std::forward<_Tp>(__t) - std::forward<_Up>(__u); }
 254:/usr/include/c++/6/bits/stl_function.h **** 
 255:/usr/include/c++/6/bits/stl_function.h ****       typedef __is_transparent is_transparent;
 256:/usr/include/c++/6/bits/stl_function.h ****     };
 257:/usr/include/c++/6/bits/stl_function.h **** 
 258:/usr/include/c++/6/bits/stl_function.h ****   /// One of the @link arithmetic_functors math functors@endlink.
 259:/usr/include/c++/6/bits/stl_function.h ****   template<>
 260:/usr/include/c++/6/bits/stl_function.h ****     struct multiplies<void>
 261:/usr/include/c++/6/bits/stl_function.h ****     {
 262:/usr/include/c++/6/bits/stl_function.h ****       template <typename _Tp, typename _Up>
 263:/usr/include/c++/6/bits/stl_function.h **** 	_GLIBCXX14_CONSTEXPR
 264:/usr/include/c++/6/bits/stl_function.h **** 	auto
 265:/usr/include/c++/6/bits/stl_function.h **** 	operator()(_Tp&& __t, _Up&& __u) const
 266:/usr/include/c++/6/bits/stl_function.h **** 	noexcept(noexcept(std::forward<_Tp>(__t) * std::forward<_Up>(__u)))
 267:/usr/include/c++/6/bits/stl_function.h **** 	-> decltype(std::forward<_Tp>(__t) * std::forward<_Up>(__u))
 268:/usr/include/c++/6/bits/stl_function.h **** 	{ return std::forward<_Tp>(__t) * std::forward<_Up>(__u); }
 269:/usr/include/c++/6/bits/stl_function.h **** 
 270:/usr/include/c++/6/bits/stl_function.h ****       typedef __is_transparent is_transparent;
 271:/usr/include/c++/6/bits/stl_function.h ****     };
 272:/usr/include/c++/6/bits/stl_function.h **** 
 273:/usr/include/c++/6/bits/stl_function.h ****   /// One of the @link arithmetic_functors math functors@endlink.
 274:/usr/include/c++/6/bits/stl_function.h ****   template<>
 275:/usr/include/c++/6/bits/stl_function.h ****     struct divides<void>
 276:/usr/include/c++/6/bits/stl_function.h ****     {
 277:/usr/include/c++/6/bits/stl_function.h ****       template <typename _Tp, typename _Up>
 278:/usr/include/c++/6/bits/stl_function.h **** 	_GLIBCXX14_CONSTEXPR
 279:/usr/include/c++/6/bits/stl_function.h **** 	auto
 280:/usr/include/c++/6/bits/stl_function.h **** 	operator()(_Tp&& __t, _Up&& __u) const
 281:/usr/include/c++/6/bits/stl_function.h **** 	noexcept(noexcept(std::forward<_Tp>(__t) / std::forward<_Up>(__u)))
 282:/usr/include/c++/6/bits/stl_function.h **** 	-> decltype(std::forward<_Tp>(__t) / std::forward<_Up>(__u))
 283:/usr/include/c++/6/bits/stl_function.h **** 	{ return std::forward<_Tp>(__t) / std::forward<_Up>(__u); }
 284:/usr/include/c++/6/bits/stl_function.h **** 
 285:/usr/include/c++/6/bits/stl_function.h ****       typedef __is_transparent is_transparent;
 286:/usr/include/c++/6/bits/stl_function.h ****     };
 287:/usr/include/c++/6/bits/stl_function.h **** 
 288:/usr/include/c++/6/bits/stl_function.h ****   /// One of the @link arithmetic_functors math functors@endlink.
 289:/usr/include/c++/6/bits/stl_function.h ****   template<>
 290:/usr/include/c++/6/bits/stl_function.h ****     struct modulus<void>
 291:/usr/include/c++/6/bits/stl_function.h ****     {
 292:/usr/include/c++/6/bits/stl_function.h ****       template <typename _Tp, typename _Up>
 293:/usr/include/c++/6/bits/stl_function.h **** 	_GLIBCXX14_CONSTEXPR
 294:/usr/include/c++/6/bits/stl_function.h **** 	auto
 295:/usr/include/c++/6/bits/stl_function.h **** 	operator()(_Tp&& __t, _Up&& __u) const
 296:/usr/include/c++/6/bits/stl_function.h **** 	noexcept(noexcept(std::forward<_Tp>(__t) % std::forward<_Up>(__u)))
 297:/usr/include/c++/6/bits/stl_function.h **** 	-> decltype(std::forward<_Tp>(__t) % std::forward<_Up>(__u))
 298:/usr/include/c++/6/bits/stl_function.h **** 	{ return std::forward<_Tp>(__t) % std::forward<_Up>(__u); }
 299:/usr/include/c++/6/bits/stl_function.h **** 
 300:/usr/include/c++/6/bits/stl_function.h ****       typedef __is_transparent is_transparent;
 301:/usr/include/c++/6/bits/stl_function.h ****     };
 302:/usr/include/c++/6/bits/stl_function.h **** 
 303:/usr/include/c++/6/bits/stl_function.h ****   /// One of the @link arithmetic_functors math functors@endlink.
 304:/usr/include/c++/6/bits/stl_function.h ****   template<>
 305:/usr/include/c++/6/bits/stl_function.h ****     struct negate<void>
 306:/usr/include/c++/6/bits/stl_function.h ****     {
 307:/usr/include/c++/6/bits/stl_function.h ****       template <typename _Tp>
GAS LISTING /tmp/ccsIN87E.s 			page 582


 308:/usr/include/c++/6/bits/stl_function.h **** 	_GLIBCXX14_CONSTEXPR
 309:/usr/include/c++/6/bits/stl_function.h **** 	auto
 310:/usr/include/c++/6/bits/stl_function.h **** 	operator()(_Tp&& __t) const
 311:/usr/include/c++/6/bits/stl_function.h **** 	noexcept(noexcept(-std::forward<_Tp>(__t)))
 312:/usr/include/c++/6/bits/stl_function.h **** 	-> decltype(-std::forward<_Tp>(__t))
 313:/usr/include/c++/6/bits/stl_function.h **** 	{ return -std::forward<_Tp>(__t); }
 314:/usr/include/c++/6/bits/stl_function.h **** 
 315:/usr/include/c++/6/bits/stl_function.h ****       typedef __is_transparent is_transparent;
 316:/usr/include/c++/6/bits/stl_function.h ****     };
 317:/usr/include/c++/6/bits/stl_function.h **** #endif
 318:/usr/include/c++/6/bits/stl_function.h ****   /** @}  */
 319:/usr/include/c++/6/bits/stl_function.h **** 
 320:/usr/include/c++/6/bits/stl_function.h ****   // 20.3.3 comparisons
 321:/usr/include/c++/6/bits/stl_function.h ****   /** @defgroup comparison_functors Comparison Classes
 322:/usr/include/c++/6/bits/stl_function.h ****    * @ingroup functors
 323:/usr/include/c++/6/bits/stl_function.h ****    *
 324:/usr/include/c++/6/bits/stl_function.h ****    *  The library provides six wrapper functors for all the basic comparisons
 325:/usr/include/c++/6/bits/stl_function.h ****    *  in C++, like @c <.
 326:/usr/include/c++/6/bits/stl_function.h ****    *
 327:/usr/include/c++/6/bits/stl_function.h ****    *  @{
 328:/usr/include/c++/6/bits/stl_function.h ****    */
 329:/usr/include/c++/6/bits/stl_function.h **** #if __cplusplus > 201103L
 330:/usr/include/c++/6/bits/stl_function.h ****   template<typename _Tp = void>
 331:/usr/include/c++/6/bits/stl_function.h ****     struct equal_to;
 332:/usr/include/c++/6/bits/stl_function.h **** 
 333:/usr/include/c++/6/bits/stl_function.h ****   template<typename _Tp = void>
 334:/usr/include/c++/6/bits/stl_function.h ****     struct not_equal_to;
 335:/usr/include/c++/6/bits/stl_function.h **** 
 336:/usr/include/c++/6/bits/stl_function.h ****   template<typename _Tp = void>
 337:/usr/include/c++/6/bits/stl_function.h ****     struct greater;
 338:/usr/include/c++/6/bits/stl_function.h **** 
 339:/usr/include/c++/6/bits/stl_function.h ****   template<typename _Tp = void>
 340:/usr/include/c++/6/bits/stl_function.h ****     struct less;
 341:/usr/include/c++/6/bits/stl_function.h **** 
 342:/usr/include/c++/6/bits/stl_function.h ****   template<typename _Tp = void>
 343:/usr/include/c++/6/bits/stl_function.h ****     struct greater_equal;
 344:/usr/include/c++/6/bits/stl_function.h **** 
 345:/usr/include/c++/6/bits/stl_function.h ****   template<typename _Tp = void>
 346:/usr/include/c++/6/bits/stl_function.h ****     struct less_equal;
 347:/usr/include/c++/6/bits/stl_function.h **** #endif
 348:/usr/include/c++/6/bits/stl_function.h **** 
 349:/usr/include/c++/6/bits/stl_function.h ****   /// One of the @link comparison_functors comparison functors@endlink.
 350:/usr/include/c++/6/bits/stl_function.h ****   template<typename _Tp>
 351:/usr/include/c++/6/bits/stl_function.h ****     struct equal_to : public binary_function<_Tp, _Tp, bool>
 352:/usr/include/c++/6/bits/stl_function.h ****     {
 353:/usr/include/c++/6/bits/stl_function.h ****       _GLIBCXX14_CONSTEXPR
 354:/usr/include/c++/6/bits/stl_function.h ****       bool
 355:/usr/include/c++/6/bits/stl_function.h ****       operator()(const _Tp& __x, const _Tp& __y) const
 356:/usr/include/c++/6/bits/stl_function.h ****       { return __x == __y; }
 357:/usr/include/c++/6/bits/stl_function.h ****     };
 358:/usr/include/c++/6/bits/stl_function.h **** 
 359:/usr/include/c++/6/bits/stl_function.h ****   /// One of the @link comparison_functors comparison functors@endlink.
 360:/usr/include/c++/6/bits/stl_function.h ****   template<typename _Tp>
 361:/usr/include/c++/6/bits/stl_function.h ****     struct not_equal_to : public binary_function<_Tp, _Tp, bool>
 362:/usr/include/c++/6/bits/stl_function.h ****     {
 363:/usr/include/c++/6/bits/stl_function.h ****       _GLIBCXX14_CONSTEXPR
 364:/usr/include/c++/6/bits/stl_function.h ****       bool
GAS LISTING /tmp/ccsIN87E.s 			page 583


 365:/usr/include/c++/6/bits/stl_function.h ****       operator()(const _Tp& __x, const _Tp& __y) const
 366:/usr/include/c++/6/bits/stl_function.h ****       { return __x != __y; }
 367:/usr/include/c++/6/bits/stl_function.h ****     };
 368:/usr/include/c++/6/bits/stl_function.h **** 
 369:/usr/include/c++/6/bits/stl_function.h ****   /// One of the @link comparison_functors comparison functors@endlink.
 370:/usr/include/c++/6/bits/stl_function.h ****   template<typename _Tp>
 371:/usr/include/c++/6/bits/stl_function.h ****     struct greater : public binary_function<_Tp, _Tp, bool>
 372:/usr/include/c++/6/bits/stl_function.h ****     {
 373:/usr/include/c++/6/bits/stl_function.h ****       _GLIBCXX14_CONSTEXPR
 374:/usr/include/c++/6/bits/stl_function.h ****       bool
 375:/usr/include/c++/6/bits/stl_function.h ****       operator()(const _Tp& __x, const _Tp& __y) const
 376:/usr/include/c++/6/bits/stl_function.h ****       { return __x > __y; }
 377:/usr/include/c++/6/bits/stl_function.h ****     };
 378:/usr/include/c++/6/bits/stl_function.h **** 
 379:/usr/include/c++/6/bits/stl_function.h ****   /// One of the @link comparison_functors comparison functors@endlink.
 380:/usr/include/c++/6/bits/stl_function.h ****   template<typename _Tp>
 381:/usr/include/c++/6/bits/stl_function.h ****     struct less : public binary_function<_Tp, _Tp, bool>
 382:/usr/include/c++/6/bits/stl_function.h ****     {
 383:/usr/include/c++/6/bits/stl_function.h ****       _GLIBCXX14_CONSTEXPR
 384:/usr/include/c++/6/bits/stl_function.h ****       bool
 385:/usr/include/c++/6/bits/stl_function.h ****       operator()(const _Tp& __x, const _Tp& __y) const
 386:/usr/include/c++/6/bits/stl_function.h ****       { return __x < __y; }
 387:/usr/include/c++/6/bits/stl_function.h ****     };
 388:/usr/include/c++/6/bits/stl_function.h **** 
 389:/usr/include/c++/6/bits/stl_function.h ****   /// One of the @link comparison_functors comparison functors@endlink.
 390:/usr/include/c++/6/bits/stl_function.h ****   template<typename _Tp>
 391:/usr/include/c++/6/bits/stl_function.h ****     struct greater_equal : public binary_function<_Tp, _Tp, bool>
 392:/usr/include/c++/6/bits/stl_function.h ****     {
 393:/usr/include/c++/6/bits/stl_function.h ****       _GLIBCXX14_CONSTEXPR
 394:/usr/include/c++/6/bits/stl_function.h ****       bool
 395:/usr/include/c++/6/bits/stl_function.h ****       operator()(const _Tp& __x, const _Tp& __y) const
 396:/usr/include/c++/6/bits/stl_function.h ****       { return __x >= __y; }
 397:/usr/include/c++/6/bits/stl_function.h ****     };
 398:/usr/include/c++/6/bits/stl_function.h **** 
 399:/usr/include/c++/6/bits/stl_function.h ****   /// One of the @link comparison_functors comparison functors@endlink.
 400:/usr/include/c++/6/bits/stl_function.h ****   template<typename _Tp>
 401:/usr/include/c++/6/bits/stl_function.h ****     struct less_equal : public binary_function<_Tp, _Tp, bool>
 402:/usr/include/c++/6/bits/stl_function.h ****     {
 403:/usr/include/c++/6/bits/stl_function.h ****       _GLIBCXX14_CONSTEXPR
 404:/usr/include/c++/6/bits/stl_function.h ****       bool
 405:/usr/include/c++/6/bits/stl_function.h ****       operator()(const _Tp& __x, const _Tp& __y) const
 406:/usr/include/c++/6/bits/stl_function.h ****       { return __x <= __y; }
 407:/usr/include/c++/6/bits/stl_function.h ****     };
 408:/usr/include/c++/6/bits/stl_function.h **** 
 409:/usr/include/c++/6/bits/stl_function.h **** #if __cplusplus > 201103L
 410:/usr/include/c++/6/bits/stl_function.h ****   /// One of the @link comparison_functors comparison functors@endlink.
 411:/usr/include/c++/6/bits/stl_function.h ****   template<>
 412:/usr/include/c++/6/bits/stl_function.h ****     struct equal_to<void>
 413:/usr/include/c++/6/bits/stl_function.h ****     {
 414:/usr/include/c++/6/bits/stl_function.h ****       template <typename _Tp, typename _Up>
 415:/usr/include/c++/6/bits/stl_function.h **** 	_GLIBCXX14_CONSTEXPR
 416:/usr/include/c++/6/bits/stl_function.h **** 	auto
 417:/usr/include/c++/6/bits/stl_function.h **** 	operator()(_Tp&& __t, _Up&& __u) const
 418:/usr/include/c++/6/bits/stl_function.h **** 	noexcept(noexcept(std::forward<_Tp>(__t) == std::forward<_Up>(__u)))
 419:/usr/include/c++/6/bits/stl_function.h **** 	-> decltype(std::forward<_Tp>(__t) == std::forward<_Up>(__u))
 420:/usr/include/c++/6/bits/stl_function.h **** 	{ return std::forward<_Tp>(__t) == std::forward<_Up>(__u); }
 421:/usr/include/c++/6/bits/stl_function.h **** 
GAS LISTING /tmp/ccsIN87E.s 			page 584


 422:/usr/include/c++/6/bits/stl_function.h ****       typedef __is_transparent is_transparent;
 423:/usr/include/c++/6/bits/stl_function.h ****     };
 424:/usr/include/c++/6/bits/stl_function.h **** 
 425:/usr/include/c++/6/bits/stl_function.h ****   /// One of the @link comparison_functors comparison functors@endlink.
 426:/usr/include/c++/6/bits/stl_function.h ****   template<>
 427:/usr/include/c++/6/bits/stl_function.h ****     struct not_equal_to<void>
 428:/usr/include/c++/6/bits/stl_function.h ****     {
 429:/usr/include/c++/6/bits/stl_function.h ****       template <typename _Tp, typename _Up>
 430:/usr/include/c++/6/bits/stl_function.h **** 	_GLIBCXX14_CONSTEXPR
 431:/usr/include/c++/6/bits/stl_function.h **** 	auto
 432:/usr/include/c++/6/bits/stl_function.h **** 	operator()(_Tp&& __t, _Up&& __u) const
 433:/usr/include/c++/6/bits/stl_function.h **** 	noexcept(noexcept(std::forward<_Tp>(__t) != std::forward<_Up>(__u)))
 434:/usr/include/c++/6/bits/stl_function.h **** 	-> decltype(std::forward<_Tp>(__t) != std::forward<_Up>(__u))
 435:/usr/include/c++/6/bits/stl_function.h **** 	{ return std::forward<_Tp>(__t) != std::forward<_Up>(__u); }
 436:/usr/include/c++/6/bits/stl_function.h **** 
 437:/usr/include/c++/6/bits/stl_function.h ****       typedef __is_transparent is_transparent;
 438:/usr/include/c++/6/bits/stl_function.h ****     };
 439:/usr/include/c++/6/bits/stl_function.h **** 
 440:/usr/include/c++/6/bits/stl_function.h ****   /// One of the @link comparison_functors comparison functors@endlink.
 441:/usr/include/c++/6/bits/stl_function.h ****   template<>
 442:/usr/include/c++/6/bits/stl_function.h ****     struct greater<void>
 443:/usr/include/c++/6/bits/stl_function.h ****     {
 444:/usr/include/c++/6/bits/stl_function.h ****       template <typename _Tp, typename _Up>
 445:/usr/include/c++/6/bits/stl_function.h **** 	_GLIBCXX14_CONSTEXPR
 446:/usr/include/c++/6/bits/stl_function.h **** 	auto
 447:/usr/include/c++/6/bits/stl_function.h **** 	operator()(_Tp&& __t, _Up&& __u) const
 448:/usr/include/c++/6/bits/stl_function.h **** 	noexcept(noexcept(std::forward<_Tp>(__t) > std::forward<_Up>(__u)))
 449:/usr/include/c++/6/bits/stl_function.h **** 	-> decltype(std::forward<_Tp>(__t) > std::forward<_Up>(__u))
 450:/usr/include/c++/6/bits/stl_function.h **** 	{ return std::forward<_Tp>(__t) > std::forward<_Up>(__u); }
 451:/usr/include/c++/6/bits/stl_function.h **** 
 452:/usr/include/c++/6/bits/stl_function.h ****       typedef __is_transparent is_transparent;
 453:/usr/include/c++/6/bits/stl_function.h ****     };
 454:/usr/include/c++/6/bits/stl_function.h **** 
 455:/usr/include/c++/6/bits/stl_function.h ****   /// One of the @link comparison_functors comparison functors@endlink.
 456:/usr/include/c++/6/bits/stl_function.h ****   template<>
 457:/usr/include/c++/6/bits/stl_function.h ****     struct less<void>
 458:/usr/include/c++/6/bits/stl_function.h ****     {
 459:/usr/include/c++/6/bits/stl_function.h ****       template <typename _Tp, typename _Up>
 460:/usr/include/c++/6/bits/stl_function.h **** 	_GLIBCXX14_CONSTEXPR
 461:/usr/include/c++/6/bits/stl_function.h **** 	auto
 462:/usr/include/c++/6/bits/stl_function.h **** 	operator()(_Tp&& __t, _Up&& __u) const
 463:/usr/include/c++/6/bits/stl_function.h **** 	noexcept(noexcept(std::forward<_Tp>(__t) < std::forward<_Up>(__u)))
 464:/usr/include/c++/6/bits/stl_function.h **** 	-> decltype(std::forward<_Tp>(__t) < std::forward<_Up>(__u))
 465:/usr/include/c++/6/bits/stl_function.h **** 	{ return std::forward<_Tp>(__t) < std::forward<_Up>(__u); }
 466:/usr/include/c++/6/bits/stl_function.h **** 
 467:/usr/include/c++/6/bits/stl_function.h ****       typedef __is_transparent is_transparent;
 468:/usr/include/c++/6/bits/stl_function.h ****     };
 469:/usr/include/c++/6/bits/stl_function.h **** 
 470:/usr/include/c++/6/bits/stl_function.h ****   /// One of the @link comparison_functors comparison functors@endlink.
 471:/usr/include/c++/6/bits/stl_function.h ****   template<>
 472:/usr/include/c++/6/bits/stl_function.h ****     struct greater_equal<void>
 473:/usr/include/c++/6/bits/stl_function.h ****     {
 474:/usr/include/c++/6/bits/stl_function.h ****       template <typename _Tp, typename _Up>
 475:/usr/include/c++/6/bits/stl_function.h **** 	_GLIBCXX14_CONSTEXPR
 476:/usr/include/c++/6/bits/stl_function.h **** 	auto
 477:/usr/include/c++/6/bits/stl_function.h **** 	operator()(_Tp&& __t, _Up&& __u) const
 478:/usr/include/c++/6/bits/stl_function.h **** 	noexcept(noexcept(std::forward<_Tp>(__t) >= std::forward<_Up>(__u)))
GAS LISTING /tmp/ccsIN87E.s 			page 585


 479:/usr/include/c++/6/bits/stl_function.h **** 	-> decltype(std::forward<_Tp>(__t) >= std::forward<_Up>(__u))
 480:/usr/include/c++/6/bits/stl_function.h **** 	{ return std::forward<_Tp>(__t) >= std::forward<_Up>(__u); }
 481:/usr/include/c++/6/bits/stl_function.h **** 
 482:/usr/include/c++/6/bits/stl_function.h ****       typedef __is_transparent is_transparent;
 483:/usr/include/c++/6/bits/stl_function.h ****     };
 484:/usr/include/c++/6/bits/stl_function.h **** 
 485:/usr/include/c++/6/bits/stl_function.h ****   /// One of the @link comparison_functors comparison functors@endlink.
 486:/usr/include/c++/6/bits/stl_function.h ****   template<>
 487:/usr/include/c++/6/bits/stl_function.h ****     struct less_equal<void>
 488:/usr/include/c++/6/bits/stl_function.h ****     {
 489:/usr/include/c++/6/bits/stl_function.h ****       template <typename _Tp, typename _Up>
 490:/usr/include/c++/6/bits/stl_function.h **** 	_GLIBCXX14_CONSTEXPR
 491:/usr/include/c++/6/bits/stl_function.h **** 	auto
 492:/usr/include/c++/6/bits/stl_function.h **** 	operator()(_Tp&& __t, _Up&& __u) const
 493:/usr/include/c++/6/bits/stl_function.h **** 	noexcept(noexcept(std::forward<_Tp>(__t) <= std::forward<_Up>(__u)))
 494:/usr/include/c++/6/bits/stl_function.h **** 	-> decltype(std::forward<_Tp>(__t) <= std::forward<_Up>(__u))
 495:/usr/include/c++/6/bits/stl_function.h **** 	{ return std::forward<_Tp>(__t) <= std::forward<_Up>(__u); }
 496:/usr/include/c++/6/bits/stl_function.h **** 
 497:/usr/include/c++/6/bits/stl_function.h ****       typedef __is_transparent is_transparent;
 498:/usr/include/c++/6/bits/stl_function.h ****     };
 499:/usr/include/c++/6/bits/stl_function.h **** #endif
 500:/usr/include/c++/6/bits/stl_function.h ****   /** @}  */
 501:/usr/include/c++/6/bits/stl_function.h **** 
 502:/usr/include/c++/6/bits/stl_function.h ****   // 20.3.4 logical operations
 503:/usr/include/c++/6/bits/stl_function.h ****   /** @defgroup logical_functors Boolean Operations Classes
 504:/usr/include/c++/6/bits/stl_function.h ****    * @ingroup functors
 505:/usr/include/c++/6/bits/stl_function.h ****    *
 506:/usr/include/c++/6/bits/stl_function.h ****    *  Here are wrapper functors for Boolean operations: @c &&, @c ||,
 507:/usr/include/c++/6/bits/stl_function.h ****    *  and @c !.
 508:/usr/include/c++/6/bits/stl_function.h ****    *
 509:/usr/include/c++/6/bits/stl_function.h ****    *  @{
 510:/usr/include/c++/6/bits/stl_function.h ****    */
 511:/usr/include/c++/6/bits/stl_function.h **** #if __cplusplus > 201103L
 512:/usr/include/c++/6/bits/stl_function.h ****   template<typename _Tp = void>
 513:/usr/include/c++/6/bits/stl_function.h ****     struct logical_and;
 514:/usr/include/c++/6/bits/stl_function.h **** 
 515:/usr/include/c++/6/bits/stl_function.h ****   template<typename _Tp = void>
 516:/usr/include/c++/6/bits/stl_function.h ****     struct logical_or;
 517:/usr/include/c++/6/bits/stl_function.h **** 
 518:/usr/include/c++/6/bits/stl_function.h ****   template<typename _Tp = void>
 519:/usr/include/c++/6/bits/stl_function.h ****     struct logical_not;
 520:/usr/include/c++/6/bits/stl_function.h **** #endif
 521:/usr/include/c++/6/bits/stl_function.h **** 
 522:/usr/include/c++/6/bits/stl_function.h ****   /// One of the @link logical_functors Boolean operations functors@endlink.
 523:/usr/include/c++/6/bits/stl_function.h ****   template<typename _Tp>
 524:/usr/include/c++/6/bits/stl_function.h ****     struct logical_and : public binary_function<_Tp, _Tp, bool>
 525:/usr/include/c++/6/bits/stl_function.h ****     {
 526:/usr/include/c++/6/bits/stl_function.h ****       _GLIBCXX14_CONSTEXPR
 527:/usr/include/c++/6/bits/stl_function.h ****       bool
 528:/usr/include/c++/6/bits/stl_function.h ****       operator()(const _Tp& __x, const _Tp& __y) const
 529:/usr/include/c++/6/bits/stl_function.h ****       { return __x && __y; }
 530:/usr/include/c++/6/bits/stl_function.h ****     };
 531:/usr/include/c++/6/bits/stl_function.h **** 
 532:/usr/include/c++/6/bits/stl_function.h ****   /// One of the @link logical_functors Boolean operations functors@endlink.
 533:/usr/include/c++/6/bits/stl_function.h ****   template<typename _Tp>
 534:/usr/include/c++/6/bits/stl_function.h ****     struct logical_or : public binary_function<_Tp, _Tp, bool>
 535:/usr/include/c++/6/bits/stl_function.h ****     {
GAS LISTING /tmp/ccsIN87E.s 			page 586


 536:/usr/include/c++/6/bits/stl_function.h ****       _GLIBCXX14_CONSTEXPR
 537:/usr/include/c++/6/bits/stl_function.h ****       bool
 538:/usr/include/c++/6/bits/stl_function.h ****       operator()(const _Tp& __x, const _Tp& __y) const
 539:/usr/include/c++/6/bits/stl_function.h ****       { return __x || __y; }
 540:/usr/include/c++/6/bits/stl_function.h ****     };
 541:/usr/include/c++/6/bits/stl_function.h **** 
 542:/usr/include/c++/6/bits/stl_function.h ****   /// One of the @link logical_functors Boolean operations functors@endlink.
 543:/usr/include/c++/6/bits/stl_function.h ****   template<typename _Tp>
 544:/usr/include/c++/6/bits/stl_function.h ****     struct logical_not : public unary_function<_Tp, bool>
 545:/usr/include/c++/6/bits/stl_function.h ****     {
 546:/usr/include/c++/6/bits/stl_function.h ****       _GLIBCXX14_CONSTEXPR
 547:/usr/include/c++/6/bits/stl_function.h ****       bool
 548:/usr/include/c++/6/bits/stl_function.h ****       operator()(const _Tp& __x) const
 549:/usr/include/c++/6/bits/stl_function.h ****       { return !__x; }
 550:/usr/include/c++/6/bits/stl_function.h ****     };
 551:/usr/include/c++/6/bits/stl_function.h **** 
 552:/usr/include/c++/6/bits/stl_function.h **** #if __cplusplus > 201103L
 553:/usr/include/c++/6/bits/stl_function.h ****   /// One of the @link logical_functors Boolean operations functors@endlink.
 554:/usr/include/c++/6/bits/stl_function.h ****   template<>
 555:/usr/include/c++/6/bits/stl_function.h ****     struct logical_and<void>
 556:/usr/include/c++/6/bits/stl_function.h ****     {
 557:/usr/include/c++/6/bits/stl_function.h ****       template <typename _Tp, typename _Up>
 558:/usr/include/c++/6/bits/stl_function.h **** 	_GLIBCXX14_CONSTEXPR
 559:/usr/include/c++/6/bits/stl_function.h **** 	auto
 560:/usr/include/c++/6/bits/stl_function.h **** 	operator()(_Tp&& __t, _Up&& __u) const
 561:/usr/include/c++/6/bits/stl_function.h **** 	noexcept(noexcept(std::forward<_Tp>(__t) && std::forward<_Up>(__u)))
 562:/usr/include/c++/6/bits/stl_function.h **** 	-> decltype(std::forward<_Tp>(__t) && std::forward<_Up>(__u))
 563:/usr/include/c++/6/bits/stl_function.h **** 	{ return std::forward<_Tp>(__t) && std::forward<_Up>(__u); }
 564:/usr/include/c++/6/bits/stl_function.h **** 
 565:/usr/include/c++/6/bits/stl_function.h ****       typedef __is_transparent is_transparent;
 566:/usr/include/c++/6/bits/stl_function.h ****     };
 567:/usr/include/c++/6/bits/stl_function.h **** 
 568:/usr/include/c++/6/bits/stl_function.h ****   /// One of the @link logical_functors Boolean operations functors@endlink.
 569:/usr/include/c++/6/bits/stl_function.h ****   template<>
 570:/usr/include/c++/6/bits/stl_function.h ****     struct logical_or<void>
 571:/usr/include/c++/6/bits/stl_function.h ****     {
 572:/usr/include/c++/6/bits/stl_function.h ****       template <typename _Tp, typename _Up>
 573:/usr/include/c++/6/bits/stl_function.h **** 	_GLIBCXX14_CONSTEXPR
 574:/usr/include/c++/6/bits/stl_function.h **** 	auto
 575:/usr/include/c++/6/bits/stl_function.h **** 	operator()(_Tp&& __t, _Up&& __u) const
 576:/usr/include/c++/6/bits/stl_function.h **** 	noexcept(noexcept(std::forward<_Tp>(__t) || std::forward<_Up>(__u)))
 577:/usr/include/c++/6/bits/stl_function.h **** 	-> decltype(std::forward<_Tp>(__t) || std::forward<_Up>(__u))
 578:/usr/include/c++/6/bits/stl_function.h **** 	{ return std::forward<_Tp>(__t) || std::forward<_Up>(__u); }
 579:/usr/include/c++/6/bits/stl_function.h **** 
 580:/usr/include/c++/6/bits/stl_function.h ****       typedef __is_transparent is_transparent;
 581:/usr/include/c++/6/bits/stl_function.h ****     };
 582:/usr/include/c++/6/bits/stl_function.h **** 
 583:/usr/include/c++/6/bits/stl_function.h ****   /// One of the @link logical_functors Boolean operations functors@endlink.
 584:/usr/include/c++/6/bits/stl_function.h ****   template<>
 585:/usr/include/c++/6/bits/stl_function.h ****     struct logical_not<void>
 586:/usr/include/c++/6/bits/stl_function.h ****     {
 587:/usr/include/c++/6/bits/stl_function.h ****       template <typename _Tp>
 588:/usr/include/c++/6/bits/stl_function.h **** 	_GLIBCXX14_CONSTEXPR
 589:/usr/include/c++/6/bits/stl_function.h **** 	auto
 590:/usr/include/c++/6/bits/stl_function.h **** 	operator()(_Tp&& __t) const
 591:/usr/include/c++/6/bits/stl_function.h **** 	noexcept(noexcept(!std::forward<_Tp>(__t)))
 592:/usr/include/c++/6/bits/stl_function.h **** 	-> decltype(!std::forward<_Tp>(__t))
GAS LISTING /tmp/ccsIN87E.s 			page 587


 593:/usr/include/c++/6/bits/stl_function.h **** 	{ return !std::forward<_Tp>(__t); }
 594:/usr/include/c++/6/bits/stl_function.h **** 
 595:/usr/include/c++/6/bits/stl_function.h ****       typedef __is_transparent is_transparent;
 596:/usr/include/c++/6/bits/stl_function.h ****     };
 597:/usr/include/c++/6/bits/stl_function.h **** #endif
 598:/usr/include/c++/6/bits/stl_function.h ****   /** @}  */
 599:/usr/include/c++/6/bits/stl_function.h **** 
 600:/usr/include/c++/6/bits/stl_function.h **** #if __cplusplus > 201103L
 601:/usr/include/c++/6/bits/stl_function.h ****   template<typename _Tp = void>
 602:/usr/include/c++/6/bits/stl_function.h ****     struct bit_and;
 603:/usr/include/c++/6/bits/stl_function.h **** 
 604:/usr/include/c++/6/bits/stl_function.h ****   template<typename _Tp = void>
 605:/usr/include/c++/6/bits/stl_function.h ****     struct bit_or;
 606:/usr/include/c++/6/bits/stl_function.h **** 
 607:/usr/include/c++/6/bits/stl_function.h ****   template<typename _Tp = void>
 608:/usr/include/c++/6/bits/stl_function.h ****     struct bit_xor;
 609:/usr/include/c++/6/bits/stl_function.h **** 
 610:/usr/include/c++/6/bits/stl_function.h ****   template<typename _Tp = void>
 611:/usr/include/c++/6/bits/stl_function.h ****     struct bit_not;
 612:/usr/include/c++/6/bits/stl_function.h **** #endif
 613:/usr/include/c++/6/bits/stl_function.h **** 
 614:/usr/include/c++/6/bits/stl_function.h ****   // _GLIBCXX_RESOLVE_LIB_DEFECTS
 615:/usr/include/c++/6/bits/stl_function.h ****   // DR 660. Missing Bitwise Operations.
 616:/usr/include/c++/6/bits/stl_function.h ****   template<typename _Tp>
 617:/usr/include/c++/6/bits/stl_function.h ****     struct bit_and : public binary_function<_Tp, _Tp, _Tp>
 618:/usr/include/c++/6/bits/stl_function.h ****     {
 619:/usr/include/c++/6/bits/stl_function.h ****       _GLIBCXX14_CONSTEXPR
 620:/usr/include/c++/6/bits/stl_function.h ****       _Tp
 621:/usr/include/c++/6/bits/stl_function.h ****       operator()(const _Tp& __x, const _Tp& __y) const
 622:/usr/include/c++/6/bits/stl_function.h ****       { return __x & __y; }
 623:/usr/include/c++/6/bits/stl_function.h ****     };
 624:/usr/include/c++/6/bits/stl_function.h **** 
 625:/usr/include/c++/6/bits/stl_function.h ****   template<typename _Tp>
 626:/usr/include/c++/6/bits/stl_function.h ****     struct bit_or : public binary_function<_Tp, _Tp, _Tp>
 627:/usr/include/c++/6/bits/stl_function.h ****     {
 628:/usr/include/c++/6/bits/stl_function.h ****       _GLIBCXX14_CONSTEXPR
 629:/usr/include/c++/6/bits/stl_function.h ****       _Tp
 630:/usr/include/c++/6/bits/stl_function.h ****       operator()(const _Tp& __x, const _Tp& __y) const
 631:/usr/include/c++/6/bits/stl_function.h ****       { return __x | __y; }
 632:/usr/include/c++/6/bits/stl_function.h ****     };
 633:/usr/include/c++/6/bits/stl_function.h **** 
 634:/usr/include/c++/6/bits/stl_function.h ****   template<typename _Tp>
 635:/usr/include/c++/6/bits/stl_function.h ****     struct bit_xor : public binary_function<_Tp, _Tp, _Tp>
 636:/usr/include/c++/6/bits/stl_function.h ****     {
 637:/usr/include/c++/6/bits/stl_function.h ****       _GLIBCXX14_CONSTEXPR
 638:/usr/include/c++/6/bits/stl_function.h ****       _Tp
 639:/usr/include/c++/6/bits/stl_function.h ****       operator()(const _Tp& __x, const _Tp& __y) const
 640:/usr/include/c++/6/bits/stl_function.h ****       { return __x ^ __y; }
 641:/usr/include/c++/6/bits/stl_function.h ****     };
 642:/usr/include/c++/6/bits/stl_function.h **** 
 643:/usr/include/c++/6/bits/stl_function.h ****   template<typename _Tp>
 644:/usr/include/c++/6/bits/stl_function.h ****     struct bit_not : public unary_function<_Tp, _Tp>
 645:/usr/include/c++/6/bits/stl_function.h ****     {
 646:/usr/include/c++/6/bits/stl_function.h ****     _GLIBCXX14_CONSTEXPR
 647:/usr/include/c++/6/bits/stl_function.h ****       _Tp
 648:/usr/include/c++/6/bits/stl_function.h ****       operator()(const _Tp& __x) const
 649:/usr/include/c++/6/bits/stl_function.h ****       { return ~__x; }
GAS LISTING /tmp/ccsIN87E.s 			page 588


 650:/usr/include/c++/6/bits/stl_function.h ****     };
 651:/usr/include/c++/6/bits/stl_function.h **** 
 652:/usr/include/c++/6/bits/stl_function.h **** #if __cplusplus > 201103L
 653:/usr/include/c++/6/bits/stl_function.h ****   template <>
 654:/usr/include/c++/6/bits/stl_function.h ****     struct bit_and<void>
 655:/usr/include/c++/6/bits/stl_function.h ****     {
 656:/usr/include/c++/6/bits/stl_function.h ****       template <typename _Tp, typename _Up>
 657:/usr/include/c++/6/bits/stl_function.h **** 	_GLIBCXX14_CONSTEXPR
 658:/usr/include/c++/6/bits/stl_function.h **** 	auto
 659:/usr/include/c++/6/bits/stl_function.h **** 	operator()(_Tp&& __t, _Up&& __u) const
 660:/usr/include/c++/6/bits/stl_function.h **** 	noexcept(noexcept(std::forward<_Tp>(__t) & std::forward<_Up>(__u)))
 661:/usr/include/c++/6/bits/stl_function.h **** 	-> decltype(std::forward<_Tp>(__t) & std::forward<_Up>(__u))
 662:/usr/include/c++/6/bits/stl_function.h **** 	{ return std::forward<_Tp>(__t) & std::forward<_Up>(__u); }
 663:/usr/include/c++/6/bits/stl_function.h **** 
 664:/usr/include/c++/6/bits/stl_function.h ****       typedef __is_transparent is_transparent;
 665:/usr/include/c++/6/bits/stl_function.h ****     };
 666:/usr/include/c++/6/bits/stl_function.h **** 
 667:/usr/include/c++/6/bits/stl_function.h ****   template <>
 668:/usr/include/c++/6/bits/stl_function.h ****     struct bit_or<void>
 669:/usr/include/c++/6/bits/stl_function.h ****     {
 670:/usr/include/c++/6/bits/stl_function.h ****       template <typename _Tp, typename _Up>
 671:/usr/include/c++/6/bits/stl_function.h **** 	_GLIBCXX14_CONSTEXPR
 672:/usr/include/c++/6/bits/stl_function.h **** 	auto
 673:/usr/include/c++/6/bits/stl_function.h **** 	operator()(_Tp&& __t, _Up&& __u) const
 674:/usr/include/c++/6/bits/stl_function.h **** 	noexcept(noexcept(std::forward<_Tp>(__t) | std::forward<_Up>(__u)))
 675:/usr/include/c++/6/bits/stl_function.h **** 	-> decltype(std::forward<_Tp>(__t) | std::forward<_Up>(__u))
 676:/usr/include/c++/6/bits/stl_function.h **** 	{ return std::forward<_Tp>(__t) | std::forward<_Up>(__u); }
 677:/usr/include/c++/6/bits/stl_function.h **** 
 678:/usr/include/c++/6/bits/stl_function.h ****       typedef __is_transparent is_transparent;
 679:/usr/include/c++/6/bits/stl_function.h ****     };
 680:/usr/include/c++/6/bits/stl_function.h **** 
 681:/usr/include/c++/6/bits/stl_function.h ****   template <>
 682:/usr/include/c++/6/bits/stl_function.h ****     struct bit_xor<void>
 683:/usr/include/c++/6/bits/stl_function.h ****     {
 684:/usr/include/c++/6/bits/stl_function.h ****       template <typename _Tp, typename _Up>
 685:/usr/include/c++/6/bits/stl_function.h **** 	_GLIBCXX14_CONSTEXPR
 686:/usr/include/c++/6/bits/stl_function.h **** 	auto
 687:/usr/include/c++/6/bits/stl_function.h **** 	operator()(_Tp&& __t, _Up&& __u) const
 688:/usr/include/c++/6/bits/stl_function.h **** 	noexcept(noexcept(std::forward<_Tp>(__t) ^ std::forward<_Up>(__u)))
 689:/usr/include/c++/6/bits/stl_function.h **** 	-> decltype(std::forward<_Tp>(__t) ^ std::forward<_Up>(__u))
 690:/usr/include/c++/6/bits/stl_function.h **** 	{ return std::forward<_Tp>(__t) ^ std::forward<_Up>(__u); }
 691:/usr/include/c++/6/bits/stl_function.h **** 
 692:/usr/include/c++/6/bits/stl_function.h ****       typedef __is_transparent is_transparent;
 693:/usr/include/c++/6/bits/stl_function.h ****     };
 694:/usr/include/c++/6/bits/stl_function.h **** 
 695:/usr/include/c++/6/bits/stl_function.h ****   template <>
 696:/usr/include/c++/6/bits/stl_function.h ****     struct bit_not<void>
 697:/usr/include/c++/6/bits/stl_function.h ****     {
 698:/usr/include/c++/6/bits/stl_function.h ****       template <typename _Tp>
 699:/usr/include/c++/6/bits/stl_function.h **** 	_GLIBCXX14_CONSTEXPR
 700:/usr/include/c++/6/bits/stl_function.h **** 	auto
 701:/usr/include/c++/6/bits/stl_function.h **** 	operator()(_Tp&& __t) const
 702:/usr/include/c++/6/bits/stl_function.h **** 	noexcept(noexcept(~std::forward<_Tp>(__t)))
 703:/usr/include/c++/6/bits/stl_function.h **** 	-> decltype(~std::forward<_Tp>(__t))
 704:/usr/include/c++/6/bits/stl_function.h **** 	{ return ~std::forward<_Tp>(__t); }
 705:/usr/include/c++/6/bits/stl_function.h **** 
 706:/usr/include/c++/6/bits/stl_function.h ****       typedef __is_transparent is_transparent;
GAS LISTING /tmp/ccsIN87E.s 			page 589


 707:/usr/include/c++/6/bits/stl_function.h ****     };
 708:/usr/include/c++/6/bits/stl_function.h **** #endif
 709:/usr/include/c++/6/bits/stl_function.h **** 
 710:/usr/include/c++/6/bits/stl_function.h ****   // 20.3.5 negators
 711:/usr/include/c++/6/bits/stl_function.h ****   /** @defgroup negators Negators
 712:/usr/include/c++/6/bits/stl_function.h ****    * @ingroup functors
 713:/usr/include/c++/6/bits/stl_function.h ****    *
 714:/usr/include/c++/6/bits/stl_function.h ****    *  The functions @c not1 and @c not2 each take a predicate functor
 715:/usr/include/c++/6/bits/stl_function.h ****    *  and return an instance of @c unary_negate or
 716:/usr/include/c++/6/bits/stl_function.h ****    *  @c binary_negate, respectively.  These classes are functors whose
 717:/usr/include/c++/6/bits/stl_function.h ****    *  @c operator() performs the stored predicate function and then returns
 718:/usr/include/c++/6/bits/stl_function.h ****    *  the negation of the result.
 719:/usr/include/c++/6/bits/stl_function.h ****    *
 720:/usr/include/c++/6/bits/stl_function.h ****    *  For example, given a vector of integers and a trivial predicate,
 721:/usr/include/c++/6/bits/stl_function.h ****    *  \code
 722:/usr/include/c++/6/bits/stl_function.h ****    *  struct IntGreaterThanThree
 723:/usr/include/c++/6/bits/stl_function.h ****    *    : public std::unary_function<int, bool>
 724:/usr/include/c++/6/bits/stl_function.h ****    *  {
 725:/usr/include/c++/6/bits/stl_function.h ****    *      bool operator() (int x) { return x > 3; }
 726:/usr/include/c++/6/bits/stl_function.h ****    *  };
 727:/usr/include/c++/6/bits/stl_function.h ****    *
 728:/usr/include/c++/6/bits/stl_function.h ****    *  std::find_if (v.begin(), v.end(), not1(IntGreaterThanThree()));
 729:/usr/include/c++/6/bits/stl_function.h ****    *  \endcode
 730:/usr/include/c++/6/bits/stl_function.h ****    *  The call to @c find_if will locate the first index (i) of @c v for which
 731:/usr/include/c++/6/bits/stl_function.h ****    *  <code>!(v[i] > 3)</code> is true.
 732:/usr/include/c++/6/bits/stl_function.h ****    *
 733:/usr/include/c++/6/bits/stl_function.h ****    *  The not1/unary_negate combination works on predicates taking a single
 734:/usr/include/c++/6/bits/stl_function.h ****    *  argument.  The not2/binary_negate combination works on predicates which
 735:/usr/include/c++/6/bits/stl_function.h ****    *  take two arguments.
 736:/usr/include/c++/6/bits/stl_function.h ****    *
 737:/usr/include/c++/6/bits/stl_function.h ****    *  @{
 738:/usr/include/c++/6/bits/stl_function.h ****    */
 739:/usr/include/c++/6/bits/stl_function.h ****   /// One of the @link negators negation functors@endlink.
 740:/usr/include/c++/6/bits/stl_function.h ****   template<typename _Predicate>
 741:/usr/include/c++/6/bits/stl_function.h ****     class unary_negate
 742:/usr/include/c++/6/bits/stl_function.h ****     : public unary_function<typename _Predicate::argument_type, bool>
 743:/usr/include/c++/6/bits/stl_function.h ****     {
 744:/usr/include/c++/6/bits/stl_function.h ****     protected:
 745:/usr/include/c++/6/bits/stl_function.h ****       _Predicate _M_pred;
 746:/usr/include/c++/6/bits/stl_function.h **** 
 747:/usr/include/c++/6/bits/stl_function.h ****     public:
 748:/usr/include/c++/6/bits/stl_function.h ****       _GLIBCXX14_CONSTEXPR
 749:/usr/include/c++/6/bits/stl_function.h ****       explicit
 750:/usr/include/c++/6/bits/stl_function.h ****       unary_negate(const _Predicate& __x) : _M_pred(__x) { }
 751:/usr/include/c++/6/bits/stl_function.h **** 
 752:/usr/include/c++/6/bits/stl_function.h ****       _GLIBCXX14_CONSTEXPR
 753:/usr/include/c++/6/bits/stl_function.h ****       bool
 754:/usr/include/c++/6/bits/stl_function.h ****       operator()(const typename _Predicate::argument_type& __x) const
 755:/usr/include/c++/6/bits/stl_function.h ****       { return !_M_pred(__x); }
 756:/usr/include/c++/6/bits/stl_function.h ****     };
 757:/usr/include/c++/6/bits/stl_function.h **** 
 758:/usr/include/c++/6/bits/stl_function.h ****   /// One of the @link negators negation functors@endlink.
 759:/usr/include/c++/6/bits/stl_function.h ****   template<typename _Predicate>
 760:/usr/include/c++/6/bits/stl_function.h ****     _GLIBCXX14_CONSTEXPR
 761:/usr/include/c++/6/bits/stl_function.h ****     inline unary_negate<_Predicate>
 762:/usr/include/c++/6/bits/stl_function.h ****     not1(const _Predicate& __pred)
 763:/usr/include/c++/6/bits/stl_function.h ****     { return unary_negate<_Predicate>(__pred); }
GAS LISTING /tmp/ccsIN87E.s 			page 590


 764:/usr/include/c++/6/bits/stl_function.h **** 
 765:/usr/include/c++/6/bits/stl_function.h ****   /// One of the @link negators negation functors@endlink.
 766:/usr/include/c++/6/bits/stl_function.h ****   template<typename _Predicate>
 767:/usr/include/c++/6/bits/stl_function.h ****     class binary_negate
 768:/usr/include/c++/6/bits/stl_function.h ****     : public binary_function<typename _Predicate::first_argument_type,
 769:/usr/include/c++/6/bits/stl_function.h **** 			     typename _Predicate::second_argument_type, bool>
 770:/usr/include/c++/6/bits/stl_function.h ****     {
 771:/usr/include/c++/6/bits/stl_function.h ****     protected:
 772:/usr/include/c++/6/bits/stl_function.h ****       _Predicate _M_pred;
 773:/usr/include/c++/6/bits/stl_function.h **** 
 774:/usr/include/c++/6/bits/stl_function.h ****     public:
 775:/usr/include/c++/6/bits/stl_function.h ****       _GLIBCXX14_CONSTEXPR
 776:/usr/include/c++/6/bits/stl_function.h ****       explicit
 777:/usr/include/c++/6/bits/stl_function.h ****       binary_negate(const _Predicate& __x) : _M_pred(__x) { }
 778:/usr/include/c++/6/bits/stl_function.h **** 
 779:/usr/include/c++/6/bits/stl_function.h ****       _GLIBCXX14_CONSTEXPR
 780:/usr/include/c++/6/bits/stl_function.h ****       bool
 781:/usr/include/c++/6/bits/stl_function.h ****       operator()(const typename _Predicate::first_argument_type& __x,
 782:/usr/include/c++/6/bits/stl_function.h **** 		 const typename _Predicate::second_argument_type& __y) const
 783:/usr/include/c++/6/bits/stl_function.h ****       { return !_M_pred(__x, __y); }
 784:/usr/include/c++/6/bits/stl_function.h ****     };
 785:/usr/include/c++/6/bits/stl_function.h **** 
 786:/usr/include/c++/6/bits/stl_function.h ****   /// One of the @link negators negation functors@endlink.
 787:/usr/include/c++/6/bits/stl_function.h ****   template<typename _Predicate>
 788:/usr/include/c++/6/bits/stl_function.h ****     _GLIBCXX14_CONSTEXPR
 789:/usr/include/c++/6/bits/stl_function.h ****     inline binary_negate<_Predicate>
 790:/usr/include/c++/6/bits/stl_function.h ****     not2(const _Predicate& __pred)
 791:/usr/include/c++/6/bits/stl_function.h ****     { return binary_negate<_Predicate>(__pred); }
 792:/usr/include/c++/6/bits/stl_function.h ****   /** @}  */
 793:/usr/include/c++/6/bits/stl_function.h **** 
 794:/usr/include/c++/6/bits/stl_function.h ****   // 20.3.7 adaptors pointers functions
 795:/usr/include/c++/6/bits/stl_function.h ****   /** @defgroup pointer_adaptors Adaptors for pointers to functions
 796:/usr/include/c++/6/bits/stl_function.h ****    * @ingroup functors
 797:/usr/include/c++/6/bits/stl_function.h ****    *
 798:/usr/include/c++/6/bits/stl_function.h ****    *  The advantage of function objects over pointers to functions is that
 799:/usr/include/c++/6/bits/stl_function.h ****    *  the objects in the standard library declare nested typedefs describing
 800:/usr/include/c++/6/bits/stl_function.h ****    *  their argument and result types with uniform names (e.g., @c result_type
 801:/usr/include/c++/6/bits/stl_function.h ****    *  from the base classes @c unary_function and @c binary_function).
 802:/usr/include/c++/6/bits/stl_function.h ****    *  Sometimes those typedefs are required, not just optional.
 803:/usr/include/c++/6/bits/stl_function.h ****    *
 804:/usr/include/c++/6/bits/stl_function.h ****    *  Adaptors are provided to turn pointers to unary (single-argument) and
 805:/usr/include/c++/6/bits/stl_function.h ****    *  binary (double-argument) functions into function objects.  The
 806:/usr/include/c++/6/bits/stl_function.h ****    *  long-winded functor @c pointer_to_unary_function is constructed with a
 807:/usr/include/c++/6/bits/stl_function.h ****    *  function pointer @c f, and its @c operator() called with argument @c x
 808:/usr/include/c++/6/bits/stl_function.h ****    *  returns @c f(x).  The functor @c pointer_to_binary_function does the same
 809:/usr/include/c++/6/bits/stl_function.h ****    *  thing, but with a double-argument @c f and @c operator().
 810:/usr/include/c++/6/bits/stl_function.h ****    *
 811:/usr/include/c++/6/bits/stl_function.h ****    *  The function @c ptr_fun takes a pointer-to-function @c f and constructs
 812:/usr/include/c++/6/bits/stl_function.h ****    *  an instance of the appropriate functor.
 813:/usr/include/c++/6/bits/stl_function.h ****    *
 814:/usr/include/c++/6/bits/stl_function.h ****    *  @{
 815:/usr/include/c++/6/bits/stl_function.h ****    */
 816:/usr/include/c++/6/bits/stl_function.h ****   /// One of the @link pointer_adaptors adaptors for function pointers@endlink.
 817:/usr/include/c++/6/bits/stl_function.h ****   template<typename _Arg, typename _Result>
 818:/usr/include/c++/6/bits/stl_function.h ****     class pointer_to_unary_function : public unary_function<_Arg, _Result>
 819:/usr/include/c++/6/bits/stl_function.h ****     {
 820:/usr/include/c++/6/bits/stl_function.h ****     protected:
GAS LISTING /tmp/ccsIN87E.s 			page 591


 821:/usr/include/c++/6/bits/stl_function.h ****       _Result (*_M_ptr)(_Arg);
 822:/usr/include/c++/6/bits/stl_function.h **** 
 823:/usr/include/c++/6/bits/stl_function.h ****     public:
 824:/usr/include/c++/6/bits/stl_function.h ****       pointer_to_unary_function() { }
 825:/usr/include/c++/6/bits/stl_function.h **** 
 826:/usr/include/c++/6/bits/stl_function.h ****       explicit
 827:/usr/include/c++/6/bits/stl_function.h ****       pointer_to_unary_function(_Result (*__x)(_Arg))
 828:/usr/include/c++/6/bits/stl_function.h ****       : _M_ptr(__x) { }
 829:/usr/include/c++/6/bits/stl_function.h **** 
 830:/usr/include/c++/6/bits/stl_function.h ****       _Result
 831:/usr/include/c++/6/bits/stl_function.h ****       operator()(_Arg __x) const
 832:/usr/include/c++/6/bits/stl_function.h ****       { return _M_ptr(__x); }
 833:/usr/include/c++/6/bits/stl_function.h ****     };
 834:/usr/include/c++/6/bits/stl_function.h **** 
 835:/usr/include/c++/6/bits/stl_function.h ****   /// One of the @link pointer_adaptors adaptors for function pointers@endlink.
 836:/usr/include/c++/6/bits/stl_function.h ****   template<typename _Arg, typename _Result>
 837:/usr/include/c++/6/bits/stl_function.h ****     inline pointer_to_unary_function<_Arg, _Result>
 838:/usr/include/c++/6/bits/stl_function.h ****     ptr_fun(_Result (*__x)(_Arg))
 839:/usr/include/c++/6/bits/stl_function.h ****     { return pointer_to_unary_function<_Arg, _Result>(__x); }
 840:/usr/include/c++/6/bits/stl_function.h **** 
 841:/usr/include/c++/6/bits/stl_function.h ****   /// One of the @link pointer_adaptors adaptors for function pointers@endlink.
 842:/usr/include/c++/6/bits/stl_function.h ****   template<typename _Arg1, typename _Arg2, typename _Result>
 843:/usr/include/c++/6/bits/stl_function.h ****     class pointer_to_binary_function
 844:/usr/include/c++/6/bits/stl_function.h ****     : public binary_function<_Arg1, _Arg2, _Result>
 845:/usr/include/c++/6/bits/stl_function.h ****     {
 846:/usr/include/c++/6/bits/stl_function.h ****     protected:
 847:/usr/include/c++/6/bits/stl_function.h ****       _Result (*_M_ptr)(_Arg1, _Arg2);
 848:/usr/include/c++/6/bits/stl_function.h **** 
 849:/usr/include/c++/6/bits/stl_function.h ****     public:
 850:/usr/include/c++/6/bits/stl_function.h ****       pointer_to_binary_function() { }
 851:/usr/include/c++/6/bits/stl_function.h **** 
 852:/usr/include/c++/6/bits/stl_function.h ****       explicit
 853:/usr/include/c++/6/bits/stl_function.h ****       pointer_to_binary_function(_Result (*__x)(_Arg1, _Arg2))
 854:/usr/include/c++/6/bits/stl_function.h ****       : _M_ptr(__x) { }
 855:/usr/include/c++/6/bits/stl_function.h **** 
 856:/usr/include/c++/6/bits/stl_function.h ****       _Result
 857:/usr/include/c++/6/bits/stl_function.h ****       operator()(_Arg1 __x, _Arg2 __y) const
 858:/usr/include/c++/6/bits/stl_function.h ****       { return _M_ptr(__x, __y); }
 859:/usr/include/c++/6/bits/stl_function.h ****     };
 860:/usr/include/c++/6/bits/stl_function.h **** 
 861:/usr/include/c++/6/bits/stl_function.h ****   /// One of the @link pointer_adaptors adaptors for function pointers@endlink.
 862:/usr/include/c++/6/bits/stl_function.h ****   template<typename _Arg1, typename _Arg2, typename _Result>
 863:/usr/include/c++/6/bits/stl_function.h ****     inline pointer_to_binary_function<_Arg1, _Arg2, _Result>
 864:/usr/include/c++/6/bits/stl_function.h ****     ptr_fun(_Result (*__x)(_Arg1, _Arg2))
 865:/usr/include/c++/6/bits/stl_function.h ****     { return pointer_to_binary_function<_Arg1, _Arg2, _Result>(__x); }
 866:/usr/include/c++/6/bits/stl_function.h ****   /** @}  */
 867:/usr/include/c++/6/bits/stl_function.h **** 
 868:/usr/include/c++/6/bits/stl_function.h ****   template<typename _Tp>
 869:/usr/include/c++/6/bits/stl_function.h ****     struct _Identity
 870:/usr/include/c++/6/bits/stl_function.h ****     : public unary_function<_Tp,_Tp>
 871:/usr/include/c++/6/bits/stl_function.h ****     {
 872:/usr/include/c++/6/bits/stl_function.h ****       _Tp&
 873:/usr/include/c++/6/bits/stl_function.h ****       operator()(_Tp& __x) const
 874:/usr/include/c++/6/bits/stl_function.h ****       { return __x; }
 875:/usr/include/c++/6/bits/stl_function.h **** 
 876:/usr/include/c++/6/bits/stl_function.h ****       const _Tp&
 877:/usr/include/c++/6/bits/stl_function.h ****       operator()(const _Tp& __x) const
GAS LISTING /tmp/ccsIN87E.s 			page 592


 878:/usr/include/c++/6/bits/stl_function.h ****       { return __x; }
 879:/usr/include/c++/6/bits/stl_function.h ****     };
 880:/usr/include/c++/6/bits/stl_function.h **** 
 881:/usr/include/c++/6/bits/stl_function.h ****   template<typename _Pair>
 882:/usr/include/c++/6/bits/stl_function.h ****     struct _Select1st
 883:/usr/include/c++/6/bits/stl_function.h ****     : public unary_function<_Pair, typename _Pair::first_type>
 884:/usr/include/c++/6/bits/stl_function.h ****     {
 885:/usr/include/c++/6/bits/stl_function.h ****       typename _Pair::first_type&
 886:/usr/include/c++/6/bits/stl_function.h ****       operator()(_Pair& __x) const
 887:/usr/include/c++/6/bits/stl_function.h ****       { return __x.first; }
 888:/usr/include/c++/6/bits/stl_function.h **** 
 889:/usr/include/c++/6/bits/stl_function.h ****       const typename _Pair::first_type&
 890:/usr/include/c++/6/bits/stl_function.h ****       operator()(const _Pair& __x) const
 13939              		.loc 45 890 0
 13940              		.cfi_startproc
 13941 0000 55       		pushq	%rbp
 13942              		.cfi_def_cfa_offset 16
 13943              		.cfi_offset 6, -16
 13944 0001 4889E5   		movq	%rsp, %rbp
 13945              		.cfi_def_cfa_register 6
 13946 0004 48897DF8 		movq	%rdi, -8(%rbp)
 13947 0008 488975F0 		movq	%rsi, -16(%rbp)
 891:/usr/include/c++/6/bits/stl_function.h ****       { return __x.first; }
 13948              		.loc 45 891 0
 13949 000c 488B45F0 		movq	-16(%rbp), %rax
 13950 0010 5D       		popq	%rbp
 13951              		.cfi_def_cfa 7, 8
 13952 0011 C3       		ret
 13953              		.cfi_endproc
 13954              	.LFE14358:
 13956              		.section	.text._ZN9__gnu_cxx16__aligned_membufISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS
 13957              		.align 2
 13958              		.weak	_ZN9__gnu_cxx16__aligned_membufISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS2_8functi
 13960              	_ZN9__gnu_cxx16__aligned_membufISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS2_8functionIFvS6
 13961              	.LFB14359:
 13962              		.file 46 "/usr/include/c++/6/ext/aligned_buffer.h"
   1:/usr/include/c++/6/ext/aligned_buffer.h **** // Aligned memory buffer -*- C++ -*-
   2:/usr/include/c++/6/ext/aligned_buffer.h **** 
   3:/usr/include/c++/6/ext/aligned_buffer.h **** // Copyright (C) 2013-2016 Free Software Foundation, Inc.
   4:/usr/include/c++/6/ext/aligned_buffer.h **** //
   5:/usr/include/c++/6/ext/aligned_buffer.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/6/ext/aligned_buffer.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/6/ext/aligned_buffer.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/6/ext/aligned_buffer.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/6/ext/aligned_buffer.h **** // any later version.
  10:/usr/include/c++/6/ext/aligned_buffer.h **** 
  11:/usr/include/c++/6/ext/aligned_buffer.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/6/ext/aligned_buffer.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/6/ext/aligned_buffer.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/6/ext/aligned_buffer.h **** // GNU General Public License for more details.
  15:/usr/include/c++/6/ext/aligned_buffer.h **** 
  16:/usr/include/c++/6/ext/aligned_buffer.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/6/ext/aligned_buffer.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/6/ext/aligned_buffer.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/6/ext/aligned_buffer.h **** 
  20:/usr/include/c++/6/ext/aligned_buffer.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/6/ext/aligned_buffer.h **** // a copy of the GCC Runtime Library Exception along with this program;
GAS LISTING /tmp/ccsIN87E.s 			page 593


  22:/usr/include/c++/6/ext/aligned_buffer.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/6/ext/aligned_buffer.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/6/ext/aligned_buffer.h **** 
  25:/usr/include/c++/6/ext/aligned_buffer.h **** /** @file ext/aligned_buffer.h
  26:/usr/include/c++/6/ext/aligned_buffer.h ****  *  This file is a GNU extension to the Standard C++ Library.
  27:/usr/include/c++/6/ext/aligned_buffer.h ****  */
  28:/usr/include/c++/6/ext/aligned_buffer.h **** 
  29:/usr/include/c++/6/ext/aligned_buffer.h **** #ifndef _ALIGNED_BUFFER_H
  30:/usr/include/c++/6/ext/aligned_buffer.h **** #define _ALIGNED_BUFFER_H 1
  31:/usr/include/c++/6/ext/aligned_buffer.h **** 
  32:/usr/include/c++/6/ext/aligned_buffer.h **** #pragma GCC system_header
  33:/usr/include/c++/6/ext/aligned_buffer.h **** 
  34:/usr/include/c++/6/ext/aligned_buffer.h **** #if __cplusplus >= 201103L
  35:/usr/include/c++/6/ext/aligned_buffer.h **** # include <type_traits>
  36:/usr/include/c++/6/ext/aligned_buffer.h **** #else
  37:/usr/include/c++/6/ext/aligned_buffer.h **** # include <bits/c++0x_warning.h>
  38:/usr/include/c++/6/ext/aligned_buffer.h **** #endif
  39:/usr/include/c++/6/ext/aligned_buffer.h **** 
  40:/usr/include/c++/6/ext/aligned_buffer.h **** namespace __gnu_cxx
  41:/usr/include/c++/6/ext/aligned_buffer.h **** {
  42:/usr/include/c++/6/ext/aligned_buffer.h ****   // A utility type containing a POD object that can hold an object of type
  43:/usr/include/c++/6/ext/aligned_buffer.h ****   // _Tp initialized via placement new or allocator_traits::construct.
  44:/usr/include/c++/6/ext/aligned_buffer.h ****   // Intended for use as a data member subobject, use __aligned_buffer for
  45:/usr/include/c++/6/ext/aligned_buffer.h ****   // complete objects.
  46:/usr/include/c++/6/ext/aligned_buffer.h ****   template<typename _Tp>
  47:/usr/include/c++/6/ext/aligned_buffer.h ****     struct __aligned_membuf
  48:/usr/include/c++/6/ext/aligned_buffer.h ****     {
  49:/usr/include/c++/6/ext/aligned_buffer.h ****       // Target macro ADJUST_FIELD_ALIGN can produce different alignment for
  50:/usr/include/c++/6/ext/aligned_buffer.h ****       // types when used as class members. __aligned_membuf is intended
  51:/usr/include/c++/6/ext/aligned_buffer.h ****       // for use as a class member, so align the buffer as for a class member.
  52:/usr/include/c++/6/ext/aligned_buffer.h ****       struct _Tp2 { _Tp _M_t; };
  53:/usr/include/c++/6/ext/aligned_buffer.h **** 
  54:/usr/include/c++/6/ext/aligned_buffer.h ****       alignas(__alignof__(_Tp2::_M_t)) unsigned char _M_storage[sizeof(_Tp)];
  55:/usr/include/c++/6/ext/aligned_buffer.h **** 
  56:/usr/include/c++/6/ext/aligned_buffer.h ****       __aligned_membuf() = default;
  57:/usr/include/c++/6/ext/aligned_buffer.h **** 
  58:/usr/include/c++/6/ext/aligned_buffer.h ****       // Can be used to avoid value-initialization zeroing _M_storage.
  59:/usr/include/c++/6/ext/aligned_buffer.h ****       __aligned_membuf(std::nullptr_t) { }
  60:/usr/include/c++/6/ext/aligned_buffer.h **** 
  61:/usr/include/c++/6/ext/aligned_buffer.h ****       void*
  62:/usr/include/c++/6/ext/aligned_buffer.h ****       _M_addr() noexcept
  63:/usr/include/c++/6/ext/aligned_buffer.h ****       { return static_cast<void*>(&_M_storage); }
  64:/usr/include/c++/6/ext/aligned_buffer.h **** 
  65:/usr/include/c++/6/ext/aligned_buffer.h ****       const void*
  66:/usr/include/c++/6/ext/aligned_buffer.h ****       _M_addr() const noexcept
  67:/usr/include/c++/6/ext/aligned_buffer.h ****       { return static_cast<const void*>(&_M_storage); }
  68:/usr/include/c++/6/ext/aligned_buffer.h **** 
  69:/usr/include/c++/6/ext/aligned_buffer.h ****       _Tp*
  70:/usr/include/c++/6/ext/aligned_buffer.h ****       _M_ptr() noexcept
 13963              		.loc 46 70 0
 13964              		.cfi_startproc
 13965 0000 55       		pushq	%rbp
 13966              		.cfi_def_cfa_offset 16
 13967              		.cfi_offset 6, -16
 13968 0001 4889E5   		movq	%rsp, %rbp
 13969              		.cfi_def_cfa_register 6
 13970 0004 4883EC10 		subq	$16, %rsp
GAS LISTING /tmp/ccsIN87E.s 			page 594


 13971 0008 48897DF8 		movq	%rdi, -8(%rbp)
  71:/usr/include/c++/6/ext/aligned_buffer.h ****       { return static_cast<_Tp*>(_M_addr()); }
 13972              		.loc 46 71 0
 13973 000c 488B45F8 		movq	-8(%rbp), %rax
 13974 0010 4889C7   		movq	%rax, %rdi
 13975 0013 E8000000 		call	_ZN9__gnu_cxx16__aligned_membufISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS2_8functio
 13975      00
 13976 0018 C9       		leave
 13977              		.cfi_def_cfa 7, 8
 13978 0019 C3       		ret
 13979              		.cfi_endproc
 13980              	.LFE14359:
 13982              		.section	.text._ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFv
 13983              		.align 2
 13984              		.weak	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt
 13986              	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt10_Sele
 13987              	.LFB14360:
 504:/usr/include/c++/6/bits/stl_tree.h ****       { return _Alloc_traits::allocate(_M_get_Node_allocator(), 1); }
 13988              		.loc 27 504 0
 13989              		.cfi_startproc
 13990 0000 55       		pushq	%rbp
 13991              		.cfi_def_cfa_offset 16
 13992              		.cfi_offset 6, -16
 13993 0001 4889E5   		movq	%rsp, %rbp
 13994              		.cfi_def_cfa_register 6
 13995 0004 4883EC10 		subq	$16, %rsp
 13996 0008 48897DF8 		movq	%rdi, -8(%rbp)
 505:/usr/include/c++/6/bits/stl_tree.h **** 
 13997              		.loc 27 505 0
 13998 000c 488B45F8 		movq	-8(%rbp), %rax
 13999 0010 4889C7   		movq	%rax, %rdi
 14000 0013 E8000000 		call	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt1
 14000      00
 14001 0018 BE010000 		movl	$1, %esi
 14001      00
 14002 001d 4889C7   		movq	%rax, %rdi
 14003 0020 E8000000 		call	_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEE
 14003      00
 14004 0025 C9       		leave
 14005              		.cfi_def_cfa 7, 8
 14006 0026 C3       		ret
 14007              		.cfi_endproc
 14008              	.LFE14360:
 14010              		.section	.text._ZNSt18_Rb_tree_node_baseC2Ev,"axG",@progbits,_ZNSt18_Rb_tree_node_baseC5Ev,comdat
 14011              		.align 2
 14012              		.weak	_ZNSt18_Rb_tree_node_baseC2Ev
 14014              	_ZNSt18_Rb_tree_node_baseC2Ev:
 14015              	.LFB14364:
  98:/usr/include/c++/6/bits/stl_tree.h ****   {
 14016              		.loc 27 98 0
 14017              		.cfi_startproc
 14018 0000 55       		pushq	%rbp
 14019              		.cfi_def_cfa_offset 16
 14020              		.cfi_offset 6, -16
 14021 0001 4889E5   		movq	%rsp, %rbp
 14022              		.cfi_def_cfa_register 6
 14023 0004 48897DF8 		movq	%rdi, -8(%rbp)
GAS LISTING /tmp/ccsIN87E.s 			page 595


  98:/usr/include/c++/6/bits/stl_tree.h ****   {
 14024              		.loc 27 98 0
 14025 0008 90       		nop
 14026 0009 5D       		popq	%rbp
 14027              		.cfi_def_cfa 7, 8
 14028 000a C3       		ret
 14029              		.cfi_endproc
 14030              	.LFE14364:
 14032              		.weak	_ZNSt18_Rb_tree_node_baseC1Ev
 14033              		.set	_ZNSt18_Rb_tree_node_baseC1Ev,_ZNSt18_Rb_tree_node_baseC2Ev
 14034              		.section	.text._ZN9__gnu_cxx16__aligned_membufISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS
 14035              		.align 2
 14036              		.weak	_ZN9__gnu_cxx16__aligned_membufISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS2_8functi
 14038              	_ZN9__gnu_cxx16__aligned_membufISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS2_8functionIFvS6
 14039              	.LFB14367:
  56:/usr/include/c++/6/ext/aligned_buffer.h **** 
 14040              		.loc 46 56 0
 14041              		.cfi_startproc
 14042 0000 55       		pushq	%rbp
 14043              		.cfi_def_cfa_offset 16
 14044              		.cfi_offset 6, -16
 14045 0001 4889E5   		movq	%rsp, %rbp
 14046              		.cfi_def_cfa_register 6
 14047 0004 48897DF8 		movq	%rdi, -8(%rbp)
  56:/usr/include/c++/6/ext/aligned_buffer.h **** 
 14048              		.loc 46 56 0
 14049 0008 90       		nop
 14050 0009 5D       		popq	%rbp
 14051              		.cfi_def_cfa 7, 8
 14052 000a C3       		ret
 14053              		.cfi_endproc
 14054              	.LFE14367:
 14056              		.weak	_ZN9__gnu_cxx16__aligned_membufISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS2_8functi
 14057              		.set	_ZN9__gnu_cxx16__aligned_membufISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS2_8functio
 14058              		.section	.text._ZNSt13_Rb_tree_nodeISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS1_8function
 14059              		.align 2
 14060              		.weak	_ZNSt13_Rb_tree_nodeISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS1_8functionIFvS5_EEE
 14062              	_ZNSt13_Rb_tree_nodeISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS1_8functionIFvS5_EEEEEC2Ev:
 14063              	.LFB14369:
 138:/usr/include/c++/6/bits/stl_tree.h ****     {
 14064              		.loc 27 138 0
 14065              		.cfi_startproc
 14066 0000 55       		pushq	%rbp
 14067              		.cfi_def_cfa_offset 16
 14068              		.cfi_offset 6, -16
 14069 0001 4889E5   		movq	%rsp, %rbp
 14070              		.cfi_def_cfa_register 6
 14071 0004 4883EC10 		subq	$16, %rsp
 14072 0008 48897DF8 		movq	%rdi, -8(%rbp)
 14073              	.LBB133:
 138:/usr/include/c++/6/bits/stl_tree.h ****     {
 14074              		.loc 27 138 0
 14075 000c 488B45F8 		movq	-8(%rbp), %rax
 14076 0010 4889C7   		movq	%rax, %rdi
 14077 0013 E8000000 		call	_ZNSt18_Rb_tree_node_baseC2Ev
 14077      00
 14078 0018 488B45F8 		movq	-8(%rbp), %rax
GAS LISTING /tmp/ccsIN87E.s 			page 596


 14079 001c 4883C020 		addq	$32, %rax
 14080 0020 4889C7   		movq	%rax, %rdi
 14081 0023 E8000000 		call	_ZN9__gnu_cxx16__aligned_membufISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS2_8functio
 14081      00
 14082              	.LBE133:
 14083 0028 90       		nop
 14084 0029 C9       		leave
 14085              		.cfi_def_cfa 7, 8
 14086 002a C3       		ret
 14087              		.cfi_endproc
 14088              	.LFE14369:
 14090              		.weak	_ZNSt13_Rb_tree_nodeISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS1_8functionIFvS5_EEE
 14091              		.set	_ZNSt13_Rb_tree_nodeISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS1_8functionIFvS5_EEEE
 14092              		.section	.text._ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFv
 14093              		.align 2
 14094              		.weak	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt
 14096              	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt10_Sele
 14097              	.LFB14361:
 538:/usr/include/c++/6/bits/stl_tree.h **** 	{
 14098              		.loc 27 538 0
 14099              		.cfi_startproc
 14100              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 14101              		.cfi_lsda 0x1b,.LLSDA14361
 14102 0000 55       		pushq	%rbp
 14103              		.cfi_def_cfa_offset 16
 14104              		.cfi_offset 6, -16
 14105 0001 4889E5   		movq	%rsp, %rbp
 14106              		.cfi_def_cfa_register 6
 14107 0004 4156     		pushq	%r14
 14108 0006 4155     		pushq	%r13
 14109 0008 4154     		pushq	%r12
 14110 000a 53       		pushq	%rbx
 14111 000b 4883EC30 		subq	$48, %rsp
 14112              		.cfi_offset 14, -24
 14113              		.cfi_offset 13, -32
 14114              		.cfi_offset 12, -40
 14115              		.cfi_offset 3, -48
 14116 000f 48897DD8 		movq	%rdi, -40(%rbp)
 14117 0013 488975D0 		movq	%rsi, -48(%rbp)
 14118 0017 488955C8 		movq	%rdx, -56(%rbp)
 14119 001b 48894DC0 		movq	%rcx, -64(%rbp)
 14120 001f 4C8945B8 		movq	%r8, -72(%rbp)
 542:/usr/include/c++/6/bits/stl_tree.h **** 	      _Alloc_traits::construct(_M_get_Node_allocator(),
 14121              		.loc 27 542 0
 14122 0023 488B45D0 		movq	-48(%rbp), %rax
 14123 0027 4889C6   		movq	%rax, %rsi
 14124 002a BF480000 		movl	$72, %edi
 14124      00
 14125 002f E8000000 		call	_ZnwmPv
 14125      00
 14126 0034 4885C0   		testq	%rax, %rax
 14127 0037 7408     		je	.L687
 542:/usr/include/c++/6/bits/stl_tree.h **** 	      _Alloc_traits::construct(_M_get_Node_allocator(),
 14128              		.loc 27 542 0 is_stmt 0 discriminator 1
 14129 0039 4889C7   		movq	%rax, %rdi
 14130 003c E8000000 		call	_ZNSt13_Rb_tree_nodeISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS1_8functionIFvS5_EEEE
 14130      00
GAS LISTING /tmp/ccsIN87E.s 			page 597


 14131              	.L687:
 543:/usr/include/c++/6/bits/stl_tree.h **** 				       __node->_M_valptr(),
 14132              		.loc 27 543 0 is_stmt 1
 14133 0041 488B45B8 		movq	-72(%rbp), %rax
 14134 0045 4889C7   		movq	%rax, %rdi
 14135 0048 E8000000 		call	_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE
 14135      00
 14136 004d 4989C6   		movq	%rax, %r14
 14137 0050 488B45C0 		movq	-64(%rbp), %rax
 14138 0054 4889C7   		movq	%rax, %rdi
 14139 0057 E8000000 		call	_ZSt7forwardISt5tupleIJRKN5boost13intrusive_ptrIN3pmt8pmt_baseEEEEEEOT_RNSt16remove_reference
 14139      00
 14140 005c 4989C5   		movq	%rax, %r13
 14141 005f 488B45C8 		movq	-56(%rbp), %rax
 14142 0063 4889C7   		movq	%rax, %rdi
 14143 0066 E8000000 		call	_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE
 14143      00
 14144 006b 4989C4   		movq	%rax, %r12
 14145 006e 488B45D0 		movq	-48(%rbp), %rax
 14146 0072 4889C7   		movq	%rax, %rdi
 14147 0075 E8000000 		call	_ZNSt13_Rb_tree_nodeISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS1_8functionIFvS5_EEEE
 14147      00
 14148 007a 4889C3   		movq	%rax, %rbx
 14149 007d 488B45D8 		movq	-40(%rbp), %rax
 14150 0081 4889C7   		movq	%rax, %rdi
 14151 0084 E8000000 		call	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt1
 14151      00
 14152 0089 4D89F0   		movq	%r14, %r8
 14153 008c 4C89E9   		movq	%r13, %rcx
 14154 008f 4C89E2   		movq	%r12, %rdx
 14155 0092 4889DE   		movq	%rbx, %rsi
 14156 0095 4889C7   		movq	%rax, %rdi
 14157              	.LEHB89:
 14158 0098 E8000000 		call	_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEE
 14158      00
 14159              	.LEHE89:
 553:/usr/include/c++/6/bits/stl_tree.h **** 
 14160              		.loc 27 553 0
 14161 009d EB33     		jmp	.L692
 14162              	.L690:
 547:/usr/include/c++/6/bits/stl_tree.h **** 	    {
 14163              		.loc 27 547 0
 14164 009f 4889C7   		movq	%rax, %rdi
 14165 00a2 E8000000 		call	__cxa_begin_catch@PLT
 14165      00
 550:/usr/include/c++/6/bits/stl_tree.h **** 	      __throw_exception_again;
 14166              		.loc 27 550 0
 14167 00a7 488B55D0 		movq	-48(%rbp), %rdx
 14168 00ab 488B45D8 		movq	-40(%rbp), %rax
 14169 00af 4889D6   		movq	%rdx, %rsi
 14170 00b2 4889C7   		movq	%rax, %rdi
 14171 00b5 E8000000 		call	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt1
 14171      00
 14172              	.LEHB90:
 551:/usr/include/c++/6/bits/stl_tree.h **** 	    }
 14173              		.loc 27 551 0
 14174 00ba E8000000 		call	__cxa_rethrow@PLT
GAS LISTING /tmp/ccsIN87E.s 			page 598


 14174      00
 14175              	.LEHE90:
 14176              	.L691:
 14177 00bf 4889C3   		movq	%rax, %rbx
 547:/usr/include/c++/6/bits/stl_tree.h **** 	    {
 14178              		.loc 27 547 0
 14179 00c2 E8000000 		call	__cxa_end_catch@PLT
 14179      00
 14180 00c7 4889D8   		movq	%rbx, %rax
 14181 00ca 4889C7   		movq	%rax, %rdi
 14182              	.LEHB91:
 14183 00cd E8000000 		call	_Unwind_Resume@PLT
 14183      00
 14184              	.LEHE91:
 14185              	.L692:
 553:/usr/include/c++/6/bits/stl_tree.h **** 
 14186              		.loc 27 553 0
 14187 00d2 4883C430 		addq	$48, %rsp
 14188 00d6 5B       		popq	%rbx
 14189 00d7 415C     		popq	%r12
 14190 00d9 415D     		popq	%r13
 14191 00db 415E     		popq	%r14
 14192 00dd 5D       		popq	%rbp
 14193              		.cfi_def_cfa 7, 8
 14194 00de C3       		ret
 14195              		.cfi_endproc
 14196              	.LFE14361:
 14197              		.section	.gcc_except_table
 14198 0202 0000     		.align 4
 14199              	.LLSDA14361:
 14200 0204 FF       		.byte	0xff
 14201 0205 9B       		.byte	0x9b
 14202 0206 19       		.uleb128 .LLSDATT14361-.LLSDATTD14361
 14203              	.LLSDATTD14361:
 14204 0207 01       		.byte	0x1
 14205 0208 11       		.uleb128 .LLSDACSE14361-.LLSDACSB14361
 14206              	.LLSDACSB14361:
 14207 0209 9801     		.uleb128 .LEHB89-.LFB14361
 14208 020b 05       		.uleb128 .LEHE89-.LEHB89
 14209 020c 9F01     		.uleb128 .L690-.LFB14361
 14210 020e 01       		.uleb128 0x1
 14211 020f BA01     		.uleb128 .LEHB90-.LFB14361
 14212 0211 05       		.uleb128 .LEHE90-.LEHB90
 14213 0212 BF01     		.uleb128 .L691-.LFB14361
 14214 0214 00       		.uleb128 0
 14215 0215 CD01     		.uleb128 .LEHB91-.LFB14361
 14216 0217 05       		.uleb128 .LEHE91-.LEHB91
 14217 0218 00       		.uleb128 0
 14218 0219 00       		.uleb128 0
 14219              	.LLSDACSE14361:
 14220 021a 01       		.byte	0x1
 14221 021b 00       		.byte	0
 14222              		.align 4
 14223 021c 00000000 		.long	0
 14224              	
 14225              	.LLSDATT14361:
 14226              		.section	.text._ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFv
GAS LISTING /tmp/ccsIN87E.s 			page 599


 14228              		.section	.text._ZNKSt23_Rb_tree_const_iteratorISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS
 14229              		.align 2
 14230              		.weak	_ZNKSt23_Rb_tree_const_iteratorISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS1_8functi
 14232              	_ZNKSt23_Rb_tree_const_iteratorISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS1_8functionIFvS5
 14233              	.LFB14371:
 274:/usr/include/c++/6/bits/stl_tree.h ****       { return iterator(const_cast<typename iterator::_Base_ptr>(_M_node)); }
 14234              		.loc 27 274 0
 14235              		.cfi_startproc
 14236 0000 55       		pushq	%rbp
 14237              		.cfi_def_cfa_offset 16
 14238              		.cfi_offset 6, -16
 14239 0001 4889E5   		movq	%rsp, %rbp
 14240              		.cfi_def_cfa_register 6
 14241 0004 4883EC20 		subq	$32, %rsp
 14242 0008 48897DE8 		movq	%rdi, -24(%rbp)
 275:/usr/include/c++/6/bits/stl_tree.h **** 
 14243              		.loc 27 275 0
 14244 000c 488B45E8 		movq	-24(%rbp), %rax
 14245 0010 488B10   		movq	(%rax), %rdx
 14246 0013 488D45F8 		leaq	-8(%rbp), %rax
 14247 0017 4889D6   		movq	%rdx, %rsi
 14248 001a 4889C7   		movq	%rax, %rdi
 14249 001d E8000000 		call	_ZNSt17_Rb_tree_iteratorISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS1_8functionIFvS5_
 14249      00
 14250 0022 488B45F8 		movq	-8(%rbp), %rax
 14251 0026 C9       		leave
 14252              		.cfi_def_cfa 7, 8
 14253 0027 C3       		ret
 14254              		.cfi_endproc
 14255              	.LFE14371:
 14257              		.section	.text._ZNKSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIF
 14258              		.align 2
 14259              		.weak	_ZNKSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEES
 14261              	_ZNKSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt10_Sel
 14262              	.LFB14372:
 920:/usr/include/c++/6/bits/stl_tree.h ****       { return _M_impl._M_node_count; }
 14263              		.loc 27 920 0
 14264              		.cfi_startproc
 14265 0000 55       		pushq	%rbp
 14266              		.cfi_def_cfa_offset 16
 14267              		.cfi_offset 6, -16
 14268 0001 4889E5   		movq	%rsp, %rbp
 14269              		.cfi_def_cfa_register 6
 14270 0004 48897DF8 		movq	%rdi, -8(%rbp)
 921:/usr/include/c++/6/bits/stl_tree.h **** 
 14271              		.loc 27 921 0
 14272 0008 488B45F8 		movq	-8(%rbp), %rax
 14273 000c 488B4028 		movq	40(%rax), %rax
 14274 0010 5D       		popq	%rbp
 14275              		.cfi_def_cfa 7, 8
 14276 0011 C3       		ret
 14277              		.cfi_endproc
 14278              	.LFE14372:
 14280              		.section	.text._ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFv
 14281              		.align 2
 14282              		.weak	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt
 14284              	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt10_Sele
GAS LISTING /tmp/ccsIN87E.s 			page 600


 14285              	.LFB14373:
 657:/usr/include/c++/6/bits/stl_tree.h ****       { return this->_M_impl._M_header._M_right; }
 14286              		.loc 27 657 0
 14287              		.cfi_startproc
 14288 0000 55       		pushq	%rbp
 14289              		.cfi_def_cfa_offset 16
 14290              		.cfi_offset 6, -16
 14291 0001 4889E5   		movq	%rsp, %rbp
 14292              		.cfi_def_cfa_register 6
 14293 0004 48897DF8 		movq	%rdi, -8(%rbp)
 658:/usr/include/c++/6/bits/stl_tree.h **** 
 14294              		.loc 27 658 0
 14295 0008 488B45F8 		movq	-8(%rbp), %rax
 14296 000c 4883C020 		addq	$32, %rax
 14297 0010 5D       		popq	%rbp
 14298              		.cfi_def_cfa 7, 8
 14299 0011 C3       		ret
 14300              		.cfi_endproc
 14301              	.LFE14373:
 14303              		.section	.text._ZSt7forwardIRPSt13_Rb_tree_nodeISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEEN
 14304              		.weak	_ZSt7forwardIRPSt13_Rb_tree_nodeISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS2_8funct
 14306              	_ZSt7forwardIRPSt13_Rb_tree_nodeISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS2_8functionIFvS
 14307              	.LFB14380:
  76:/usr/include/c++/6/bits/move.h ****     { return static_cast<_Tp&&>(__t); }
 14308              		.loc 33 76 0
 14309              		.cfi_startproc
 14310 0000 55       		pushq	%rbp
 14311              		.cfi_def_cfa_offset 16
 14312              		.cfi_offset 6, -16
 14313 0001 4889E5   		movq	%rsp, %rbp
 14314              		.cfi_def_cfa_register 6
 14315 0004 48897DF8 		movq	%rdi, -8(%rbp)
  77:/usr/include/c++/6/bits/move.h **** 
 14316              		.loc 33 77 0
 14317 0008 488B45F8 		movq	-8(%rbp), %rax
 14318 000c 5D       		popq	%rbp
 14319              		.cfi_def_cfa 7, 8
 14320 000d C3       		ret
 14321              		.cfi_endproc
 14322              	.LFE14380:
 14324              		.section	.text._ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRPSt13_Rb_tree_nodeIS_IKN5boost13intrusive
 14325              		.align 2
 14326              		.weak	_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRPSt13_Rb_tree_nodeIS_IKN5boost13intrusive_ptrIN3pm
 14328              	_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRPSt13_Rb_tree_nodeIS_IKN5boost13intrusive_ptrIN3pmt8pmt_b
 14329              	.LFB14381:
 326:/usr/include/c++/6/bits/stl_pair.h **** 	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
 14330              		.loc 41 326 0
 14331              		.cfi_startproc
 14332 0000 55       		pushq	%rbp
 14333              		.cfi_def_cfa_offset 16
 14334              		.cfi_offset 6, -16
 14335 0001 4889E5   		movq	%rsp, %rbp
 14336              		.cfi_def_cfa_register 6
 14337 0004 4883EC20 		subq	$32, %rsp
 14338 0008 48897DF8 		movq	%rdi, -8(%rbp)
 14339 000c 488975F0 		movq	%rsi, -16(%rbp)
 14340 0010 488955E8 		movq	%rdx, -24(%rbp)
GAS LISTING /tmp/ccsIN87E.s 			page 601


 14341              	.LBB134:
 14342              		.loc 41 327 0
 14343 0014 488B45F0 		movq	-16(%rbp), %rax
 14344 0018 4889C7   		movq	%rax, %rdi
 14345 001b E8000000 		call	_ZSt7forwardIRPSt13_Rb_tree_nodeISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS2_8functi
 14345      00
 14346 0020 488B10   		movq	(%rax), %rdx
 14347 0023 488B45F8 		movq	-8(%rbp), %rax
 14348 0027 488910   		movq	%rdx, (%rax)
 14349 002a 488B45E8 		movq	-24(%rbp), %rax
 14350 002e 4889C7   		movq	%rax, %rdi
 14351 0031 E8000000 		call	_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE
 14351      00
 14352 0036 488B10   		movq	(%rax), %rdx
 14353 0039 488B45F8 		movq	-8(%rbp), %rax
 14354 003d 48895008 		movq	%rdx, 8(%rax)
 14355              	.LBE134:
 14356 0041 90       		nop
 14357 0042 C9       		leave
 14358              		.cfi_def_cfa 7, 8
 14359 0043 C3       		ret
 14360              		.cfi_endproc
 14361              	.LFE14381:
 14363              		.weak	_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeIS_IKN5boost13intrusive_ptrIN3pm
 14364              		.set	_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeIS_IKN5boost13intrusive_ptrIN3pmt
 14365              		.section	.text._ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFv
 14366              		.align 2
 14367              		.weak	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt
 14369              	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt10_Sele
 14370              	.LFB14374:
1826:/usr/include/c++/6/bits/stl_tree.h ****     _M_get_insert_unique_pos(const key_type& __k)
 14371              		.loc 27 1826 0
 14372              		.cfi_startproc
 14373 0000 55       		pushq	%rbp
 14374              		.cfi_def_cfa_offset 16
 14375              		.cfi_offset 6, -16
 14376 0001 4889E5   		movq	%rsp, %rbp
 14377              		.cfi_def_cfa_register 6
 14378 0004 4883EC70 		subq	$112, %rsp
 14379 0008 48897D98 		movq	%rdi, -104(%rbp)
 14380 000c 48897590 		movq	%rsi, -112(%rbp)
1830:/usr/include/c++/6/bits/stl_tree.h ****       _Base_ptr __y = _M_end();
 14381              		.loc 27 1830 0
 14382 0010 488B4598 		movq	-104(%rbp), %rax
 14383 0014 4889C7   		movq	%rax, %rdi
 14384 0017 E8000000 		call	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt1
 14384      00
 14385 001c 488945B0 		movq	%rax, -80(%rbp)
1831:/usr/include/c++/6/bits/stl_tree.h ****       bool __comp = true;
 14386              		.loc 27 1831 0
 14387 0020 488B4598 		movq	-104(%rbp), %rax
 14388 0024 4889C7   		movq	%rax, %rdi
 14389 0027 E8000000 		call	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt1
 14389      00
 14390 002c 488945A8 		movq	%rax, -88(%rbp)
1832:/usr/include/c++/6/bits/stl_tree.h ****       while (__x != 0)
 14391              		.loc 27 1832 0
GAS LISTING /tmp/ccsIN87E.s 			page 602


 14392 0030 C645FF01 		movb	$1, -1(%rbp)
 14393              	.L706:
1833:/usr/include/c++/6/bits/stl_tree.h **** 	{
 14394              		.loc 27 1833 0
 14395 0034 488B45B0 		movq	-80(%rbp), %rax
 14396 0038 4885C0   		testq	%rax, %rax
 14397 003b 7453     		je	.L703
1835:/usr/include/c++/6/bits/stl_tree.h **** 	  __comp = _M_impl._M_key_compare(__k, _S_key(__x));
 14398              		.loc 27 1835 0
 14399 003d 488B45B0 		movq	-80(%rbp), %rax
 14400 0041 488945A8 		movq	%rax, -88(%rbp)
1836:/usr/include/c++/6/bits/stl_tree.h **** 	  __x = __comp ? _S_left(__x) : _S_right(__x);
 14401              		.loc 27 1836 0
 14402 0045 488B45B0 		movq	-80(%rbp), %rax
 14403 0049 4889C7   		movq	%rax, %rdi
 14404 004c E8000000 		call	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt1
 14404      00
 14405 0051 4889C2   		movq	%rax, %rdx
 14406 0054 488B4598 		movq	-104(%rbp), %rax
 14407 0058 488B4D90 		movq	-112(%rbp), %rcx
 14408 005c 4889CE   		movq	%rcx, %rsi
 14409 005f 4889C7   		movq	%rax, %rdi
 14410 0062 E8000000 		call	_ZNK3pmt10comparatorclERKN5boost13intrusive_ptrINS_8pmt_baseEEES6_
 14410      00
 14411 0067 8845FF   		movb	%al, -1(%rbp)
1837:/usr/include/c++/6/bits/stl_tree.h **** 	}
 14412              		.loc 27 1837 0
 14413 006a 807DFF00 		cmpb	$0, -1(%rbp)
 14414 006e 740E     		je	.L704
1837:/usr/include/c++/6/bits/stl_tree.h **** 	}
 14415              		.loc 27 1837 0 is_stmt 0 discriminator 1
 14416 0070 488B45B0 		movq	-80(%rbp), %rax
 14417 0074 4889C7   		movq	%rax, %rdi
 14418 0077 E8000000 		call	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt1
 14418      00
 14419 007c EB0C     		jmp	.L705
 14420              	.L704:
1837:/usr/include/c++/6/bits/stl_tree.h **** 	}
 14421              		.loc 27 1837 0 discriminator 2
 14422 007e 488B45B0 		movq	-80(%rbp), %rax
 14423 0082 4889C7   		movq	%rax, %rdi
 14424 0085 E8000000 		call	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt1
 14424      00
 14425              	.L705:
1837:/usr/include/c++/6/bits/stl_tree.h **** 	}
 14426              		.loc 27 1837 0 discriminator 4
 14427 008a 488945B0 		movq	%rax, -80(%rbp)
1833:/usr/include/c++/6/bits/stl_tree.h **** 	{
 14428              		.loc 27 1833 0 is_stmt 1 discriminator 4
 14429 008e EBA4     		jmp	.L706
 14430              	.L703:
1839:/usr/include/c++/6/bits/stl_tree.h ****       if (__comp)
 14431              		.loc 27 1839 0
 14432 0090 488B55A8 		movq	-88(%rbp), %rdx
 14433 0094 488D45A0 		leaq	-96(%rbp), %rax
 14434 0098 4889D6   		movq	%rdx, %rsi
 14435 009b 4889C7   		movq	%rax, %rdi
GAS LISTING /tmp/ccsIN87E.s 			page 603


 14436 009e E8000000 		call	_ZNSt17_Rb_tree_iteratorISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS1_8functionIFvS5_
 14436      00
1840:/usr/include/c++/6/bits/stl_tree.h **** 	{
 14437              		.loc 27 1840 0
 14438 00a3 807DFF00 		cmpb	$0, -1(%rbp)
 14439 00a7 7454     		je	.L707
1842:/usr/include/c++/6/bits/stl_tree.h **** 	    return _Res(__x, __y);
 14440              		.loc 27 1842 0
 14441 00a9 488B4598 		movq	-104(%rbp), %rax
 14442 00ad 4889C7   		movq	%rax, %rdi
 14443 00b0 E8000000 		call	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt1
 14443      00
 14444 00b5 488945B8 		movq	%rax, -72(%rbp)
 14445 00b9 488D55B8 		leaq	-72(%rbp), %rdx
 14446 00bd 488D45A0 		leaq	-96(%rbp), %rax
 14447 00c1 4889D6   		movq	%rdx, %rsi
 14448 00c4 4889C7   		movq	%rax, %rdi
 14449 00c7 E8000000 		call	_ZNKSt17_Rb_tree_iteratorISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS1_8functionIFvS5
 14449      00
 14450 00cc 84C0     		testb	%al, %al
 14451 00ce 7421     		je	.L708
1843:/usr/include/c++/6/bits/stl_tree.h **** 	  else
 14452              		.loc 27 1843 0
 14453 00d0 488D55A8 		leaq	-88(%rbp), %rdx
 14454 00d4 488D4DB0 		leaq	-80(%rbp), %rcx
 14455 00d8 488D45C0 		leaq	-64(%rbp), %rax
 14456 00dc 4889CE   		movq	%rcx, %rsi
 14457 00df 4889C7   		movq	%rax, %rdi
 14458 00e2 E8000000 		call	_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeIS_IKN5boost13intrusive_ptrIN3pmt
 14458      00
 14459 00e7 488B45C0 		movq	-64(%rbp), %rax
 14460 00eb 488B55C8 		movq	-56(%rbp), %rdx
 14461 00ef EB7A     		jmp	.L711
 14462              	.L708:
1845:/usr/include/c++/6/bits/stl_tree.h **** 	}
 14463              		.loc 27 1845 0
 14464 00f1 488D45A0 		leaq	-96(%rbp), %rax
 14465 00f5 4889C7   		movq	%rax, %rdi
 14466 00f8 E8000000 		call	_ZNSt17_Rb_tree_iteratorISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS1_8functionIFvS5_
 14466      00
 14467              	.L707:
1847:/usr/include/c++/6/bits/stl_tree.h **** 	return _Res(__x, __y);
 14468              		.loc 27 1847 0
 14469 00fd 488B45A0 		movq	-96(%rbp), %rax
 14470 0101 4889C7   		movq	%rax, %rdi
 14471 0104 E8000000 		call	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt1
 14471      00
 14472 0109 4889C1   		movq	%rax, %rcx
 14473 010c 488B4598 		movq	-104(%rbp), %rax
 14474 0110 488B5590 		movq	-112(%rbp), %rdx
 14475 0114 4889CE   		movq	%rcx, %rsi
 14476 0117 4889C7   		movq	%rax, %rdi
 14477 011a E8000000 		call	_ZNK3pmt10comparatorclERKN5boost13intrusive_ptrINS_8pmt_baseEEES6_
 14477      00
 14478 011f 84C0     		testb	%al, %al
 14479 0121 7421     		je	.L710
1848:/usr/include/c++/6/bits/stl_tree.h ****       return _Res(__j._M_node, 0);
GAS LISTING /tmp/ccsIN87E.s 			page 604


 14480              		.loc 27 1848 0
 14481 0123 488D55A8 		leaq	-88(%rbp), %rdx
 14482 0127 488D4DB0 		leaq	-80(%rbp), %rcx
 14483 012b 488D45D0 		leaq	-48(%rbp), %rax
 14484 012f 4889CE   		movq	%rcx, %rsi
 14485 0132 4889C7   		movq	%rax, %rdi
 14486 0135 E8000000 		call	_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeIS_IKN5boost13intrusive_ptrIN3pmt
 14486      00
 14487 013a 488B45D0 		movq	-48(%rbp), %rax
 14488 013e 488B55D8 		movq	-40(%rbp), %rdx
 14489 0142 EB27     		jmp	.L711
 14490              	.L710:
1849:/usr/include/c++/6/bits/stl_tree.h ****     }
 14491              		.loc 27 1849 0
 14492 0144 48C745F0 		movq	$0, -16(%rbp)
 14492      00000000 
 14493 014c 488D55F0 		leaq	-16(%rbp), %rdx
 14494 0150 488D4DA0 		leaq	-96(%rbp), %rcx
 14495 0154 488D45E0 		leaq	-32(%rbp), %rax
 14496 0158 4889CE   		movq	%rcx, %rsi
 14497 015b 4889C7   		movq	%rax, %rdi
 14498 015e E8000000 		call	_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_Lb1EEEOT_RKS1_
 14498      00
 14499 0163 488B45E0 		movq	-32(%rbp), %rax
 14500 0167 488B55E8 		movq	-24(%rbp), %rdx
 14501              	.L711:
1850:/usr/include/c++/6/bits/stl_tree.h **** 
 14502              		.loc 27 1850 0 discriminator 1
 14503 016b C9       		leave
 14504              		.cfi_def_cfa 7, 8
 14505 016c C3       		ret
 14506              		.cfi_endproc
 14507              	.LFE14374:
 14509              		.section	.text._ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFv
 14510              		.align 2
 14511              		.weak	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt
 14513              	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt10_Sele
 14514              	.LFB14383:
 649:/usr/include/c++/6/bits/stl_tree.h ****       { return this->_M_impl._M_header._M_left; }
 14515              		.loc 27 649 0
 14516              		.cfi_startproc
 14517 0000 55       		pushq	%rbp
 14518              		.cfi_def_cfa_offset 16
 14519              		.cfi_offset 6, -16
 14520 0001 4889E5   		movq	%rsp, %rbp
 14521              		.cfi_def_cfa_register 6
 14522 0004 48897DF8 		movq	%rdi, -8(%rbp)
 650:/usr/include/c++/6/bits/stl_tree.h **** 
 14523              		.loc 27 650 0
 14524 0008 488B45F8 		movq	-8(%rbp), %rax
 14525 000c 4883C018 		addq	$24, %rax
 14526 0010 5D       		popq	%rbp
 14527              		.cfi_def_cfa 7, 8
 14528 0011 C3       		ret
 14529              		.cfi_endproc
 14530              	.LFE14383:
 14532              		.section	.text._ZNSt17_Rb_tree_iteratorISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS1_8func
GAS LISTING /tmp/ccsIN87E.s 			page 605


 14533              		.align 2
 14534              		.weak	_ZNSt17_Rb_tree_iteratorISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS1_8functionIFvS5
 14536              	_ZNSt17_Rb_tree_iteratorISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS1_8functionIFvS5_EEEEEm
 14537              	.LFB14384:
 222:/usr/include/c++/6/bits/stl_tree.h ****       {
 14538              		.loc 27 222 0
 14539              		.cfi_startproc
 14540 0000 55       		pushq	%rbp
 14541              		.cfi_def_cfa_offset 16
 14542              		.cfi_offset 6, -16
 14543 0001 4889E5   		movq	%rsp, %rbp
 14544              		.cfi_def_cfa_register 6
 14545 0004 4883EC10 		subq	$16, %rsp
 14546 0008 48897DF8 		movq	%rdi, -8(%rbp)
 224:/usr/include/c++/6/bits/stl_tree.h **** 	return *this;
 14547              		.loc 27 224 0
 14548 000c 488B45F8 		movq	-8(%rbp), %rax
 14549 0010 488B00   		movq	(%rax), %rax
 14550 0013 4889C7   		movq	%rax, %rdi
 14551 0016 E8000000 		call	_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base@PLT
 14551      00
 14552 001b 4889C2   		movq	%rax, %rdx
 14553 001e 488B45F8 		movq	-8(%rbp), %rax
 14554 0022 488910   		movq	%rdx, (%rax)
 225:/usr/include/c++/6/bits/stl_tree.h ****       }
 14555              		.loc 27 225 0
 14556 0025 488B45F8 		movq	-8(%rbp), %rax
 226:/usr/include/c++/6/bits/stl_tree.h **** 
 14557              		.loc 27 226 0
 14558 0029 C9       		leave
 14559              		.cfi_def_cfa 7, 8
 14560 002a C3       		ret
 14561              		.cfi_endproc
 14562              	.LFE14384:
 14564              		.section	.text._ZNSt17_Rb_tree_iteratorISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS1_8func
 14565              		.align 2
 14566              		.weak	_ZNSt17_Rb_tree_iteratorISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS1_8functionIFvS5
 14568              	_ZNSt17_Rb_tree_iteratorISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS1_8functionIFvS5_EEEEEp
 14569              	.LFB14385:
 207:/usr/include/c++/6/bits/stl_tree.h ****       {
 14570              		.loc 27 207 0
 14571              		.cfi_startproc
 14572 0000 55       		pushq	%rbp
 14573              		.cfi_def_cfa_offset 16
 14574              		.cfi_offset 6, -16
 14575 0001 4889E5   		movq	%rsp, %rbp
 14576              		.cfi_def_cfa_register 6
 14577 0004 4883EC10 		subq	$16, %rsp
 14578 0008 48897DF8 		movq	%rdi, -8(%rbp)
 209:/usr/include/c++/6/bits/stl_tree.h **** 	return *this;
 14579              		.loc 27 209 0
 14580 000c 488B45F8 		movq	-8(%rbp), %rax
 14581 0010 488B00   		movq	(%rax), %rax
 14582 0013 4889C7   		movq	%rax, %rdi
 14583 0016 E8000000 		call	_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base@PLT
 14583      00
 14584 001b 4889C2   		movq	%rax, %rdx
GAS LISTING /tmp/ccsIN87E.s 			page 606


 14585 001e 488B45F8 		movq	-8(%rbp), %rax
 14586 0022 488910   		movq	%rdx, (%rax)
 210:/usr/include/c++/6/bits/stl_tree.h ****       }
 14587              		.loc 27 210 0
 14588 0025 488B45F8 		movq	-8(%rbp), %rax
 211:/usr/include/c++/6/bits/stl_tree.h **** 
 14589              		.loc 27 211 0
 14590 0029 C9       		leave
 14591              		.cfi_def_cfa 7, 8
 14592 002a C3       		ret
 14593              		.cfi_endproc
 14594              	.LFE14385:
 14596              		.section	.text._ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFv
 14597              		.weak	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt
 14599              	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt10_Sele
 14600              	.LFB14386:
 684:/usr/include/c++/6/bits/stl_tree.h ****       { return *__x->_M_valptr(); }
 14601              		.loc 27 684 0
 14602              		.cfi_startproc
 14603 0000 55       		pushq	%rbp
 14604              		.cfi_def_cfa_offset 16
 14605              		.cfi_offset 6, -16
 14606 0001 4889E5   		movq	%rsp, %rbp
 14607              		.cfi_def_cfa_register 6
 14608 0004 4883EC10 		subq	$16, %rsp
 14609 0008 48897DF8 		movq	%rdi, -8(%rbp)
 685:/usr/include/c++/6/bits/stl_tree.h **** 
 14610              		.loc 27 685 0
 14611 000c 488B45F8 		movq	-8(%rbp), %rax
 14612 0010 4889C7   		movq	%rax, %rdi
 14613 0013 E8000000 		call	_ZNKSt13_Rb_tree_nodeISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS1_8functionIFvS5_EEE
 14613      00
 14614 0018 C9       		leave
 14615              		.cfi_def_cfa 7, 8
 14616 0019 C3       		ret
 14617              		.cfi_endproc
 14618              	.LFE14386:
 14620              		.section	.text._ZN5boost16exception_detail19error_info_injectorINS_17bad_function_callEEC2ERKS2_,"
 14621              		.align 2
 14622              		.weak	_ZN5boost16exception_detail19error_info_injectorINS_17bad_function_callEEC2ERKS2_
 14624              	_ZN5boost16exception_detail19error_info_injectorINS_17bad_function_callEEC2ERKS2_:
 14625              	.LFB14388:
 348:/usr/include/boost/exception/exception.hpp ****                 T(x)
 14626              		.loc 3 348 0
 14627              		.cfi_startproc
 14628 0000 55       		pushq	%rbp
 14629              		.cfi_def_cfa_offset 16
 14630              		.cfi_offset 6, -16
 14631 0001 4889E5   		movq	%rsp, %rbp
 14632              		.cfi_def_cfa_register 6
 14633 0004 4883EC10 		subq	$16, %rsp
 14634 0008 48897DF8 		movq	%rdi, -8(%rbp)
 14635 000c 488975F0 		movq	%rsi, -16(%rbp)
 14636              	.LBB135:
 349:/usr/include/boost/exception/exception.hpp ****                 {
 14637              		.loc 3 349 0
 14638 0010 488B45F8 		movq	-8(%rbp), %rax
GAS LISTING /tmp/ccsIN87E.s 			page 607


 14639 0014 488B55F0 		movq	-16(%rbp), %rdx
 14640 0018 4889D6   		movq	%rdx, %rsi
 14641 001b 4889C7   		movq	%rax, %rdi
 14642 001e E8000000 		call	_ZN5boost17bad_function_callC2ERKS0_
 14642      00
 14643 0023 488B45F8 		movq	-8(%rbp), %rax
 14644 0027 4883C010 		addq	$16, %rax
 14645 002b 4889C7   		movq	%rax, %rdi
 14646 002e E8000000 		call	_ZN5boost9exceptionC2Ev
 14646      00
 14647 0033 488D1500 		leaq	16+_ZTVN5boost16exception_detail19error_info_injectorINS_17bad_function_callEEE(%rip), %rdx
 14647      000000
 14648 003a 488B45F8 		movq	-8(%rbp), %rax
 14649 003e 488910   		movq	%rdx, (%rax)
 14650 0041 488D1500 		leaq	56+_ZTVN5boost16exception_detail19error_info_injectorINS_17bad_function_callEEE(%rip), %rdx
 14650      000000
 14651 0048 488B45F8 		movq	-8(%rbp), %rax
 14652 004c 48895010 		movq	%rdx, 16(%rax)
 14653              	.LBE135:
 351:/usr/include/boost/exception/exception.hpp **** 
 14654              		.loc 3 351 0
 14655 0050 90       		nop
 14656 0051 C9       		leave
 14657              		.cfi_def_cfa 7, 8
 14658 0052 C3       		ret
 14659              		.cfi_endproc
 14660              	.LFE14388:
 14662              		.weak	_ZN5boost16exception_detail19error_info_injectorINS_17bad_function_callEEC1ERKS2_
 14663              		.set	_ZN5boost16exception_detail19error_info_injectorINS_17bad_function_callEEC1ERKS2_,_ZN5boost16
 14664              		.section	.text._ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function
 14665              		.align 2
 14666              		.weak	_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEE
 14668              	_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEEC1ERKS4
 14669              	.LFB14392:
 473:/usr/include/boost/exception/exception.hpp ****                 T(x)
 14670              		.loc 3 473 0
 14671              		.cfi_startproc
 14672              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 14673              		.cfi_lsda 0x1b,.LLSDA14392
 14674 0000 55       		pushq	%rbp
 14675              		.cfi_def_cfa_offset 16
 14676              		.cfi_offset 6, -16
 14677 0001 4889E5   		movq	%rsp, %rbp
 14678              		.cfi_def_cfa_register 6
 14679 0004 53       		pushq	%rbx
 14680 0005 4883EC18 		subq	$24, %rsp
 14681              		.cfi_offset 3, -24
 14682 0009 48897DE8 		movq	%rdi, -24(%rbp)
 14683 000d 488975E0 		movq	%rsi, -32(%rbp)
 14684              	.LBB136:
 474:/usr/include/boost/exception/exception.hpp ****                 {
 14685              		.loc 3 474 0
 14686 0011 488B45E8 		movq	-24(%rbp), %rax
 14687 0015 4883C038 		addq	$56, %rax
 14688 0019 4889C7   		movq	%rax, %rdi
 14689 001c E8000000 		call	_ZN5boost16exception_detail10clone_baseC2Ev
 14689      00
GAS LISTING /tmp/ccsIN87E.s 			page 608


 14690 0021 488B45E8 		movq	-24(%rbp), %rax
 14691 0025 488B55E0 		movq	-32(%rbp), %rdx
 14692 0029 4889D6   		movq	%rdx, %rsi
 14693 002c 4889C7   		movq	%rax, %rdi
 14694              	.LEHB92:
 14695 002f E8000000 		call	_ZN5boost16exception_detail19error_info_injectorINS_17bad_function_callEEC2ERKS3_
 14695      00
 14696              	.LEHE92:
 474:/usr/include/boost/exception/exception.hpp ****                 {
 14697              		.loc 3 474 0 is_stmt 0 discriminator 5
 14698 0034 488D1500 		leaq	24+_ZTVN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_call
 14698      000000
 14699 003b 488B45E8 		movq	-24(%rbp), %rax
 14700 003f 488910   		movq	%rdx, (%rax)
 14701 0042 488D1500 		leaq	80+_ZTVN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_call
 14701      000000
 14702 0049 488B45E8 		movq	-24(%rbp), %rax
 14703 004d 48895010 		movq	%rdx, 16(%rax)
 14704 0051 488B45E8 		movq	-24(%rbp), %rax
 14705 0055 488D5038 		leaq	56(%rax), %rdx
 14706 0059 488D0500 		leaq	136+_ZTVN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_cal
 14706      000000
 14707 0060 488902   		movq	%rax, (%rdx)
 476:/usr/include/boost/exception/exception.hpp ****                 }
 14708              		.loc 3 476 0 is_stmt 1 discriminator 5
 14709 0063 488B45E0 		movq	-32(%rbp), %rax
 14710 0067 488D5010 		leaq	16(%rax), %rdx
 14711 006b 488B45E8 		movq	-24(%rbp), %rax
 14712 006f 4883C010 		addq	$16, %rax
 14713 0073 4889D6   		movq	%rdx, %rsi
 14714 0076 4889C7   		movq	%rax, %rdi
 14715              	.LEHB93:
 14716 0079 E8000000 		call	_ZN5boost16exception_detail20copy_boost_exceptionEPNS_9exceptionEPKS1_
 14716      00
 14717              	.LEHE93:
 14718              	.LBE136:
 477:/usr/include/boost/exception/exception.hpp **** 
 14719              		.loc 3 477 0
 14720 007e EB2F     		jmp	.L727
 14721              	.L725:
 14722 0080 4889C3   		movq	%rax, %rbx
 14723              	.LBB137:
 474:/usr/include/boost/exception/exception.hpp ****                 {
 14724              		.loc 3 474 0
 14725 0083 488B45E8 		movq	-24(%rbp), %rax
 14726 0087 4889C7   		movq	%rax, %rdi
 14727 008a E8000000 		call	_ZN5boost16exception_detail19error_info_injectorINS_17bad_function_callEED2Ev
 14727      00
 14728 008f EB03     		jmp	.L726
 14729              	.L724:
 14730 0091 4889C3   		movq	%rax, %rbx
 14731              	.L726:
 474:/usr/include/boost/exception/exception.hpp ****                 {
 14732              		.loc 3 474 0 is_stmt 0 discriminator 6
 14733 0094 488B45E8 		movq	-24(%rbp), %rax
 14734 0098 4883C038 		addq	$56, %rax
 14735 009c 4889C7   		movq	%rax, %rdi
GAS LISTING /tmp/ccsIN87E.s 			page 609


 14736 009f E8000000 		call	_ZN5boost16exception_detail10clone_baseD2Ev
 14736      00
 14737 00a4 4889D8   		movq	%rbx, %rax
 14738 00a7 4889C7   		movq	%rax, %rdi
 14739              	.LEHB94:
 14740 00aa E8000000 		call	_Unwind_Resume@PLT
 14740      00
 14741              	.LEHE94:
 14742              	.L727:
 14743              	.LBE137:
 477:/usr/include/boost/exception/exception.hpp **** 
 14744              		.loc 3 477 0 is_stmt 1
 14745 00af 4883C418 		addq	$24, %rsp
 14746 00b3 5B       		popq	%rbx
 14747 00b4 5D       		popq	%rbp
 14748              		.cfi_def_cfa 7, 8
 14749 00b5 C3       		ret
 14750              		.cfi_endproc
 14751              	.LFE14392:
 14752              		.section	.gcc_except_table
 14753              	.LLSDA14392:
 14754 0220 FF       		.byte	0xff
 14755 0221 FF       		.byte	0xff
 14756 0222 01       		.byte	0x1
 14757 0223 0F       		.uleb128 .LLSDACSE14392-.LLSDACSB14392
 14758              	.LLSDACSB14392:
 14759 0224 2F       		.uleb128 .LEHB92-.LFB14392
 14760 0225 05       		.uleb128 .LEHE92-.LEHB92
 14761 0226 9101     		.uleb128 .L724-.LFB14392
 14762 0228 00       		.uleb128 0
 14763 0229 79       		.uleb128 .LEHB93-.LFB14392
 14764 022a 05       		.uleb128 .LEHE93-.LEHB93
 14765 022b 8001     		.uleb128 .L725-.LFB14392
 14766 022d 00       		.uleb128 0
 14767 022e AA01     		.uleb128 .LEHB94-.LFB14392
 14768 0230 05       		.uleb128 .LEHE94-.LEHB94
 14769 0231 00       		.uleb128 0
 14770 0232 00       		.uleb128 0
 14771              	.LLSDACSE14392:
 14772              		.section	.text._ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function
 14774              		.section	.text._ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_St5dequeIS4_SaIS
 14775              		.weak	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_St5dequeIS4_SaIS4_EEESt10
 14777              	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_St5dequeIS4_SaIS4_EEESt10_Select
 14778              	.LFB14394:
 708:/usr/include/c++/6/bits/stl_tree.h ****       { return *static_cast<_Const_Link_type>(__x)->_M_valptr(); }
 14779              		.loc 27 708 0
 14780              		.cfi_startproc
 14781 0000 55       		pushq	%rbp
 14782              		.cfi_def_cfa_offset 16
 14783              		.cfi_offset 6, -16
 14784 0001 4889E5   		movq	%rsp, %rbp
 14785              		.cfi_def_cfa_register 6
 14786 0004 4883EC10 		subq	$16, %rsp
 14787 0008 48897DF8 		movq	%rdi, -8(%rbp)
 709:/usr/include/c++/6/bits/stl_tree.h **** 
 14788              		.loc 27 709 0
 14789 000c 488B45F8 		movq	-8(%rbp), %rax
GAS LISTING /tmp/ccsIN87E.s 			page 610


 14790 0010 4889C7   		movq	%rax, %rdi
 14791 0013 E8000000 		call	_ZNKSt13_Rb_tree_nodeISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt5dequeIS5_SaIS5_EEEE
 14791      00
 14792 0018 C9       		leave
 14793              		.cfi_def_cfa 7, 8
 14794 0019 C3       		ret
 14795              		.cfi_endproc
 14796              	.LFE14394:
 14798              		.section	.text._ZNKSt10_Select1stISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt5dequeIS5_SaI
 14799              		.align 2
 14800              		.weak	_ZNKSt10_Select1stISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt5dequeIS5_SaIS5_EEEEcl
 14802              	_ZNKSt10_Select1stISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt5dequeIS5_SaIS5_EEEEclERKSA_:
 14803              	.LFB14395:
 890:/usr/include/c++/6/bits/stl_function.h ****       { return __x.first; }
 14804              		.loc 45 890 0
 14805              		.cfi_startproc
 14806 0000 55       		pushq	%rbp
 14807              		.cfi_def_cfa_offset 16
 14808              		.cfi_offset 6, -16
 14809 0001 4889E5   		movq	%rsp, %rbp
 14810              		.cfi_def_cfa_register 6
 14811 0004 48897DF8 		movq	%rdi, -8(%rbp)
 14812 0008 488975F0 		movq	%rsi, -16(%rbp)
 14813              		.loc 45 891 0
 14814 000c 488B45F0 		movq	-16(%rbp), %rax
 14815 0010 5D       		popq	%rbp
 14816              		.cfi_def_cfa 7, 8
 14817 0011 C3       		ret
 14818              		.cfi_endproc
 14819              	.LFE14395:
 14821              		.section	.text._ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_St5dequeIS4_SaIS
 14822              		.weak	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_St5dequeIS4_SaIS4_EEESt10
 14824              	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_St5dequeIS4_SaIS4_EEESt10_Select
 14825              	.LFB14419:
 684:/usr/include/c++/6/bits/stl_tree.h ****       { return *__x->_M_valptr(); }
 14826              		.loc 27 684 0
 14827              		.cfi_startproc
 14828 0000 55       		pushq	%rbp
 14829              		.cfi_def_cfa_offset 16
 14830              		.cfi_offset 6, -16
 14831 0001 4889E5   		movq	%rsp, %rbp
 14832              		.cfi_def_cfa_register 6
 14833 0004 4883EC10 		subq	$16, %rsp
 14834 0008 48897DF8 		movq	%rdi, -8(%rbp)
 685:/usr/include/c++/6/bits/stl_tree.h **** 
 14835              		.loc 27 685 0
 14836 000c 488B45F8 		movq	-8(%rbp), %rax
 14837 0010 4889C7   		movq	%rax, %rdi
 14838 0013 E8000000 		call	_ZNKSt13_Rb_tree_nodeISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt5dequeIS5_SaIS5_EEEE
 14838      00
 14839 0018 C9       		leave
 14840              		.cfi_def_cfa 7, 8
 14841 0019 C3       		ret
 14842              		.cfi_endproc
 14843              	.LFE14419:
 14845              		.section	.text._ZN9__gnu_cxx13new_allocatorIlED2Ev,"axG",@progbits,_ZN9__gnu_cxx13new_allocatorIlE
 14846              		.align 2
GAS LISTING /tmp/ccsIN87E.s 			page 611


 14847              		.weak	_ZN9__gnu_cxx13new_allocatorIlED2Ev
 14849              	_ZN9__gnu_cxx13new_allocatorIlED2Ev:
 14850              	.LFB14432:
 14851              		.loc 43 86 0
 14852              		.cfi_startproc
 14853 0000 55       		pushq	%rbp
 14854              		.cfi_def_cfa_offset 16
 14855              		.cfi_offset 6, -16
 14856 0001 4889E5   		movq	%rsp, %rbp
 14857              		.cfi_def_cfa_register 6
 14858 0004 48897DF8 		movq	%rdi, -8(%rbp)
 14859              		.loc 43 86 0
 14860 0008 90       		nop
 14861 0009 5D       		popq	%rbp
 14862              		.cfi_def_cfa 7, 8
 14863 000a C3       		ret
 14864              		.cfi_endproc
 14865              	.LFE14432:
 14867              		.weak	_ZN9__gnu_cxx13new_allocatorIlED1Ev
 14868              		.set	_ZN9__gnu_cxx13new_allocatorIlED1Ev,_ZN9__gnu_cxx13new_allocatorIlED2Ev
 14869              		.section	.text._ZNSt16allocator_traitsISaIlEE10deallocateERS0_Plm,"axG",@progbits,_ZNSt16allocator
 14870              		.weak	_ZNSt16allocator_traitsISaIlEE10deallocateERS0_Plm
 14872              	_ZNSt16allocator_traitsISaIlEE10deallocateERS0_Plm:
 14873              	.LFB14434:
 461:/usr/include/c++/6/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 14874              		.loc 42 461 0
 14875              		.cfi_startproc
 14876 0000 55       		pushq	%rbp
 14877              		.cfi_def_cfa_offset 16
 14878              		.cfi_offset 6, -16
 14879 0001 4889E5   		movq	%rsp, %rbp
 14880              		.cfi_def_cfa_register 6
 14881 0004 4883EC20 		subq	$32, %rsp
 14882 0008 48897DF8 		movq	%rdi, -8(%rbp)
 14883 000c 488975F0 		movq	%rsi, -16(%rbp)
 14884 0010 488955E8 		movq	%rdx, -24(%rbp)
 462:/usr/include/c++/6/bits/alloc_traits.h **** 
 14885              		.loc 42 462 0
 14886 0014 488B55E8 		movq	-24(%rbp), %rdx
 14887 0018 488B4DF0 		movq	-16(%rbp), %rcx
 14888 001c 488B45F8 		movq	-8(%rbp), %rax
 14889 0020 4889CE   		movq	%rcx, %rsi
 14890 0023 4889C7   		movq	%rax, %rdi
 14891 0026 E8000000 		call	_ZN9__gnu_cxx13new_allocatorIlE10deallocateEPlm
 14891      00
 14892 002b 90       		nop
 14893 002c C9       		leave
 14894              		.cfi_def_cfa 7, 8
 14895 002d C3       		ret
 14896              		.cfi_endproc
 14897              	.LFE14434:
 14899              		.section	.text._ZNSt12_Destroy_auxILb1EE9__destroyIPlEEvT_S3_,"axG",@progbits,_ZNSt12_Destroy_auxI
 14900              		.weak	_ZNSt12_Destroy_auxILb1EE9__destroyIPlEEvT_S3_
 14902              	_ZNSt12_Destroy_auxILb1EE9__destroyIPlEEvT_S3_:
 14903              	.LFB14435:
 112:/usr/include/c++/6/bits/stl_construct.h ****     };
 14904              		.loc 35 112 0
GAS LISTING /tmp/ccsIN87E.s 			page 612


 14905              		.cfi_startproc
 14906 0000 55       		pushq	%rbp
 14907              		.cfi_def_cfa_offset 16
 14908              		.cfi_offset 6, -16
 14909 0001 4889E5   		movq	%rsp, %rbp
 14910              		.cfi_def_cfa_register 6
 14911 0004 48897DF8 		movq	%rdi, -8(%rbp)
 14912 0008 488975F0 		movq	%rsi, -16(%rbp)
 112:/usr/include/c++/6/bits/stl_construct.h ****     };
 14913              		.loc 35 112 0
 14914 000c 90       		nop
 14915 000d 5D       		popq	%rbp
 14916              		.cfi_def_cfa 7, 8
 14917 000e C3       		ret
 14918              		.cfi_endproc
 14919              	.LFE14435:
 14921              		.section	.text._ZN5boost16exception_detail11set_info_rvINS_10error_infoINS_15throw_function_EPKcEE
 14922              		.weak	_ZN5boost16exception_detail11set_info_rvINS_10error_infoINS_15throw_function_EPKcEEE3setINS0
 14924              	_ZN5boost16exception_detail11set_info_rvINS_10error_infoINS_15throw_function_EPKcEEE3setINS0_10clon
 14925              	.LFB14570:
 236:/usr/include/boost/exception/info.hpp **** 				{
 14926              		.loc 36 236 0
 14927              		.cfi_startproc
 14928 0000 55       		pushq	%rbp
 14929              		.cfi_def_cfa_offset 16
 14930              		.cfi_offset 6, -16
 14931 0001 4889E5   		movq	%rsp, %rbp
 14932              		.cfi_def_cfa_register 6
 14933 0004 48897DF8 		movq	%rdi, -8(%rbp)
 14934 0008 488975F0 		movq	%rsi, -16(%rbp)
 238:/usr/include/boost/exception/info.hpp **** 				return x;
 14935              		.loc 36 238 0
 14936 000c 488B45F0 		movq	-16(%rbp), %rax
 14937 0010 488B10   		movq	(%rax), %rdx
 14938 0013 488B45F8 		movq	-8(%rbp), %rax
 14939 0017 48895010 		movq	%rdx, 16(%rax)
 239:/usr/include/boost/exception/info.hpp **** 				}
 14940              		.loc 36 239 0
 14941 001b 488B45F8 		movq	-8(%rbp), %rax
 240:/usr/include/boost/exception/info.hpp **** 			};
 14942              		.loc 36 240 0
 14943 001f 5D       		popq	%rbp
 14944              		.cfi_def_cfa 7, 8
 14945 0020 C3       		ret
 14946              		.cfi_endproc
 14947              	.LFE14570:
 14949              		.section	.text._ZN5boost16exception_detail11set_info_rvINS_10error_infoINS_11throw_file_EPKcEEE3se
 14950              		.weak	_ZN5boost16exception_detail11set_info_rvINS_10error_infoINS_11throw_file_EPKcEEE3setINS0_10c
 14952              	_ZN5boost16exception_detail11set_info_rvINS_10error_infoINS_11throw_file_EPKcEEE3setINS0_10clone_im
 14953              	.LFB14571:
 251:/usr/include/boost/exception/info.hpp **** 				{
 14954              		.loc 36 251 0
 14955              		.cfi_startproc
 14956 0000 55       		pushq	%rbp
 14957              		.cfi_def_cfa_offset 16
 14958              		.cfi_offset 6, -16
 14959 0001 4889E5   		movq	%rsp, %rbp
GAS LISTING /tmp/ccsIN87E.s 			page 613


 14960              		.cfi_def_cfa_register 6
 14961 0004 48897DF8 		movq	%rdi, -8(%rbp)
 14962 0008 488975F0 		movq	%rsi, -16(%rbp)
 253:/usr/include/boost/exception/info.hpp **** 				return x;
 14963              		.loc 36 253 0
 14964 000c 488B45F0 		movq	-16(%rbp), %rax
 14965 0010 488B10   		movq	(%rax), %rdx
 14966 0013 488B45F8 		movq	-8(%rbp), %rax
 14967 0017 48895018 		movq	%rdx, 24(%rax)
 254:/usr/include/boost/exception/info.hpp **** 				}
 14968              		.loc 36 254 0
 14969 001b 488B45F8 		movq	-8(%rbp), %rax
 255:/usr/include/boost/exception/info.hpp **** 			};
 14970              		.loc 36 255 0
 14971 001f 5D       		popq	%rbp
 14972              		.cfi_def_cfa 7, 8
 14973 0020 C3       		ret
 14974              		.cfi_endproc
 14975              	.LFE14571:
 14977              		.section	.text._ZN5boost16exception_detail11set_info_rvINS_10error_infoINS_11throw_line_EiEEE3setI
 14978              		.weak	_ZN5boost16exception_detail11set_info_rvINS_10error_infoINS_11throw_line_EiEEE3setINS0_10clo
 14980              	_ZN5boost16exception_detail11set_info_rvINS_10error_infoINS_11throw_line_EiEEE3setINS0_10clone_impl
 14981              	.LFB14572:
 266:/usr/include/boost/exception/info.hpp **** 				{
 14982              		.loc 36 266 0
 14983              		.cfi_startproc
 14984 0000 55       		pushq	%rbp
 14985              		.cfi_def_cfa_offset 16
 14986              		.cfi_offset 6, -16
 14987 0001 4889E5   		movq	%rsp, %rbp
 14988              		.cfi_def_cfa_register 6
 14989 0004 48897DF8 		movq	%rdi, -8(%rbp)
 14990 0008 488975F0 		movq	%rsi, -16(%rbp)
 268:/usr/include/boost/exception/info.hpp **** 				return x;
 14991              		.loc 36 268 0
 14992 000c 488B45F0 		movq	-16(%rbp), %rax
 14993 0010 8B10     		movl	(%rax), %edx
 14994 0012 488B45F8 		movq	-8(%rbp), %rax
 14995 0016 895020   		movl	%edx, 32(%rax)
 269:/usr/include/boost/exception/info.hpp **** 				}
 14996              		.loc 36 269 0
 14997 0019 488B45F8 		movq	-8(%rbp), %rax
 270:/usr/include/boost/exception/info.hpp **** 			};
 14998              		.loc 36 270 0
 14999 001d 5D       		popq	%rbp
 15000              		.cfi_def_cfa 7, 8
 15001 001e C3       		ret
 15002              		.cfi_endproc
 15003              	.LFE14572:
 15005              		.section	.text._ZN5boost6detail12shared_countC2INS_16exception_detail10clone_implINS3_10bad_alloc_
 15006              		.align 2
 15007              		.weak	_ZN5boost6detail12shared_countC2INS_16exception_detail10clone_implINS3_10bad_alloc_EEEEEPT_
 15009              	_ZN5boost6detail12shared_countC2INS_16exception_detail10clone_implINS3_10bad_alloc_EEEEEPT_:
 15010              	.LFB14574:
 128:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #if defined(BOOST_SP_ENABLE_DEBUG_HOOKS)
 15011              		.loc 6 128 0
 15012              		.cfi_startproc
GAS LISTING /tmp/ccsIN87E.s 			page 614


 15013              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 15014              		.cfi_lsda 0x1b,.LLSDA14574
 15015 0000 55       		pushq	%rbp
 15016              		.cfi_def_cfa_offset 16
 15017              		.cfi_offset 6, -16
 15018 0001 4889E5   		movq	%rsp, %rbp
 15019              		.cfi_def_cfa_register 6
 15020 0004 53       		pushq	%rbx
 15021 0005 4883EC18 		subq	$24, %rsp
 15022              		.cfi_offset 3, -24
 15023 0009 48897DE8 		movq	%rdi, -24(%rbp)
 15024 000d 488975E0 		movq	%rsi, -32(%rbp)
 15025              	.LBB138:
 128:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #if defined(BOOST_SP_ENABLE_DEBUG_HOOKS)
 15026              		.loc 6 128 0
 15027 0011 488B45E8 		movq	-24(%rbp), %rax
 15028 0015 48C70000 		movq	$0, (%rax)
 15028      000000
 137:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         }
 15029              		.loc 6 137 0
 15030 001c BF180000 		movl	$24, %edi
 15030      00
 15031              	.LEHB95:
 15032 0021 E8000000 		call	_Znwm@PLT
 15032      00
 15033              	.LEHE95:
 15034 0026 4889C3   		movq	%rax, %rbx
 15035 0029 488B45E0 		movq	-32(%rbp), %rax
 15036 002d 4889C6   		movq	%rax, %rsi
 15037 0030 4889DF   		movq	%rbx, %rdi
 15038 0033 E8000000 		call	_ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEEC1E
 15038      00
 15039 0038 488B45E8 		movq	-24(%rbp), %rax
 15040 003c 488918   		movq	%rbx, (%rax)
 15041              	.LBE138:
 156:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 15042              		.loc 6 156 0
 15043 003f EB2C     		jmp	.L748
 15044              	.L746:
 15045              	.LBB139:
 139:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         {
 15046              		.loc 6 139 0
 15047 0041 4889C7   		movq	%rax, %rdi
 15048 0044 E8000000 		call	__cxa_begin_catch@PLT
 15048      00
 141:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****             throw;
 15049              		.loc 6 141 0
 15050 0049 488B45E0 		movq	-32(%rbp), %rax
 15051 004d 4889C7   		movq	%rax, %rdi
 15052 0050 E8000000 		call	_ZN5boost14checked_deleteINS_16exception_detail10clone_implINS1_10bad_alloc_EEEEEvPT_
 15052      00
 15053              	.LEHB96:
 142:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         }
 15054              		.loc 6 142 0
 15055 0055 E8000000 		call	__cxa_rethrow@PLT
 15055      00
 15056              	.LEHE96:
GAS LISTING /tmp/ccsIN87E.s 			page 615


 15057              	.L747:
 15058 005a 4889C3   		movq	%rax, %rbx
 139:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         {
 15059              		.loc 6 139 0
 15060 005d E8000000 		call	__cxa_end_catch@PLT
 15060      00
 15061 0062 4889D8   		movq	%rbx, %rax
 15062 0065 4889C7   		movq	%rax, %rdi
 15063              	.LEHB97:
 15064 0068 E8000000 		call	_Unwind_Resume@PLT
 15064      00
 15065              	.LEHE97:
 15066              	.L748:
 15067              	.LBE139:
 156:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 15068              		.loc 6 156 0
 15069 006d 4883C418 		addq	$24, %rsp
 15070 0071 5B       		popq	%rbx
 15071 0072 5D       		popq	%rbp
 15072              		.cfi_def_cfa 7, 8
 15073 0073 C3       		ret
 15074              		.cfi_endproc
 15075              	.LFE14574:
 15076              		.section	.gcc_except_table
 15077 0233 00       		.align 4
 15078              	.LLSDA14574:
 15079 0234 FF       		.byte	0xff
 15080 0235 9B       		.byte	0x9b
 15081 0236 15       		.uleb128 .LLSDATT14574-.LLSDATTD14574
 15082              	.LLSDATTD14574:
 15083 0237 01       		.byte	0x1
 15084 0238 0C       		.uleb128 .LLSDACSE14574-.LLSDACSB14574
 15085              	.LLSDACSB14574:
 15086 0239 21       		.uleb128 .LEHB95-.LFB14574
 15087 023a 05       		.uleb128 .LEHE95-.LEHB95
 15088 023b 41       		.uleb128 .L746-.LFB14574
 15089 023c 01       		.uleb128 0x1
 15090 023d 55       		.uleb128 .LEHB96-.LFB14574
 15091 023e 05       		.uleb128 .LEHE96-.LEHB96
 15092 023f 5A       		.uleb128 .L747-.LFB14574
 15093 0240 00       		.uleb128 0
 15094 0241 68       		.uleb128 .LEHB97-.LFB14574
 15095 0242 05       		.uleb128 .LEHE97-.LEHB97
 15096 0243 00       		.uleb128 0
 15097 0244 00       		.uleb128 0
 15098              	.LLSDACSE14574:
 15099 0245 01       		.byte	0x1
 15100 0246 00       		.byte	0
 15101 0247 00       		.align 4
 15102 0248 00000000 		.long	0
 15103              	
 15104              	.LLSDATT14574:
 15105              		.section	.text._ZN5boost6detail12shared_countC2INS_16exception_detail10clone_implINS3_10bad_alloc_
 15107              		.weak	_ZN5boost6detail12shared_countC1INS_16exception_detail10clone_implINS3_10bad_alloc_EEEEEPT_
 15108              		.set	_ZN5boost6detail12shared_countC1INS_16exception_detail10clone_implINS3_10bad_alloc_EEEEEPT_,_
 15109              		.section	.text._ZN5boost16exception_detail11set_info_rvINS_10error_infoINS_15throw_function_EPKcEE
 15110              		.weak	_ZN5boost16exception_detail11set_info_rvINS_10error_infoINS_15throw_function_EPKcEEE3setINS0
GAS LISTING /tmp/ccsIN87E.s 			page 616


 15112              	_ZN5boost16exception_detail11set_info_rvINS_10error_infoINS_15throw_function_EPKcEEE3setINS0_10clon
 15113              	.LFB14576:
 236:/usr/include/boost/exception/info.hpp **** 				{
 15114              		.loc 36 236 0
 15115              		.cfi_startproc
 15116 0000 55       		pushq	%rbp
 15117              		.cfi_def_cfa_offset 16
 15118              		.cfi_offset 6, -16
 15119 0001 4889E5   		movq	%rsp, %rbp
 15120              		.cfi_def_cfa_register 6
 15121 0004 48897DF8 		movq	%rdi, -8(%rbp)
 15122 0008 488975F0 		movq	%rsi, -16(%rbp)
 238:/usr/include/boost/exception/info.hpp **** 				return x;
 15123              		.loc 36 238 0
 15124 000c 488B45F0 		movq	-16(%rbp), %rax
 15125 0010 488B10   		movq	(%rax), %rdx
 15126 0013 488B45F8 		movq	-8(%rbp), %rax
 15127 0017 48895010 		movq	%rdx, 16(%rax)
 239:/usr/include/boost/exception/info.hpp **** 				}
 15128              		.loc 36 239 0
 15129 001b 488B45F8 		movq	-8(%rbp), %rax
 240:/usr/include/boost/exception/info.hpp **** 			};
 15130              		.loc 36 240 0
 15131 001f 5D       		popq	%rbp
 15132              		.cfi_def_cfa 7, 8
 15133 0020 C3       		ret
 15134              		.cfi_endproc
 15135              	.LFE14576:
 15137              		.section	.text._ZN5boost16exception_detail11set_info_rvINS_10error_infoINS_11throw_file_EPKcEEE3se
 15138              		.weak	_ZN5boost16exception_detail11set_info_rvINS_10error_infoINS_11throw_file_EPKcEEE3setINS0_10c
 15140              	_ZN5boost16exception_detail11set_info_rvINS_10error_infoINS_11throw_file_EPKcEEE3setINS0_10clone_im
 15141              	.LFB14577:
 251:/usr/include/boost/exception/info.hpp **** 				{
 15142              		.loc 36 251 0
 15143              		.cfi_startproc
 15144 0000 55       		pushq	%rbp
 15145              		.cfi_def_cfa_offset 16
 15146              		.cfi_offset 6, -16
 15147 0001 4889E5   		movq	%rsp, %rbp
 15148              		.cfi_def_cfa_register 6
 15149 0004 48897DF8 		movq	%rdi, -8(%rbp)
 15150 0008 488975F0 		movq	%rsi, -16(%rbp)
 253:/usr/include/boost/exception/info.hpp **** 				return x;
 15151              		.loc 36 253 0
 15152 000c 488B45F0 		movq	-16(%rbp), %rax
 15153 0010 488B10   		movq	(%rax), %rdx
 15154 0013 488B45F8 		movq	-8(%rbp), %rax
 15155 0017 48895018 		movq	%rdx, 24(%rax)
 254:/usr/include/boost/exception/info.hpp **** 				}
 15156              		.loc 36 254 0
 15157 001b 488B45F8 		movq	-8(%rbp), %rax
 255:/usr/include/boost/exception/info.hpp **** 			};
 15158              		.loc 36 255 0
 15159 001f 5D       		popq	%rbp
 15160              		.cfi_def_cfa 7, 8
 15161 0020 C3       		ret
 15162              		.cfi_endproc
GAS LISTING /tmp/ccsIN87E.s 			page 617


 15163              	.LFE14577:
 15165              		.section	.text._ZN5boost16exception_detail11set_info_rvINS_10error_infoINS_11throw_line_EiEEE3setI
 15166              		.weak	_ZN5boost16exception_detail11set_info_rvINS_10error_infoINS_11throw_line_EiEEE3setINS0_10clo
 15168              	_ZN5boost16exception_detail11set_info_rvINS_10error_infoINS_11throw_line_EiEEE3setINS0_10clone_impl
 15169              	.LFB14578:
 266:/usr/include/boost/exception/info.hpp **** 				{
 15170              		.loc 36 266 0
 15171              		.cfi_startproc
 15172 0000 55       		pushq	%rbp
 15173              		.cfi_def_cfa_offset 16
 15174              		.cfi_offset 6, -16
 15175 0001 4889E5   		movq	%rsp, %rbp
 15176              		.cfi_def_cfa_register 6
 15177 0004 48897DF8 		movq	%rdi, -8(%rbp)
 15178 0008 488975F0 		movq	%rsi, -16(%rbp)
 268:/usr/include/boost/exception/info.hpp **** 				return x;
 15179              		.loc 36 268 0
 15180 000c 488B45F0 		movq	-16(%rbp), %rax
 15181 0010 8B10     		movl	(%rax), %edx
 15182 0012 488B45F8 		movq	-8(%rbp), %rax
 15183 0016 895020   		movl	%edx, 32(%rax)
 269:/usr/include/boost/exception/info.hpp **** 				}
 15184              		.loc 36 269 0
 15185 0019 488B45F8 		movq	-8(%rbp), %rax
 270:/usr/include/boost/exception/info.hpp **** 			};
 15186              		.loc 36 270 0
 15187 001d 5D       		popq	%rbp
 15188              		.cfi_def_cfa 7, 8
 15189 001e C3       		ret
 15190              		.cfi_endproc
 15191              	.LFE14578:
 15193              		.section	.text._ZN5boost6detail12shared_countC2INS_16exception_detail10clone_implINS3_14bad_except
 15194              		.align 2
 15195              		.weak	_ZN5boost6detail12shared_countC2INS_16exception_detail10clone_implINS3_14bad_exception_EEEEE
 15197              	_ZN5boost6detail12shared_countC2INS_16exception_detail10clone_implINS3_14bad_exception_EEEEEPT_:
 15198              	.LFB14580:
 128:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #if defined(BOOST_SP_ENABLE_DEBUG_HOOKS)
 15199              		.loc 6 128 0
 15200              		.cfi_startproc
 15201              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 15202              		.cfi_lsda 0x1b,.LLSDA14580
 15203 0000 55       		pushq	%rbp
 15204              		.cfi_def_cfa_offset 16
 15205              		.cfi_offset 6, -16
 15206 0001 4889E5   		movq	%rsp, %rbp
 15207              		.cfi_def_cfa_register 6
 15208 0004 53       		pushq	%rbx
 15209 0005 4883EC18 		subq	$24, %rsp
 15210              		.cfi_offset 3, -24
 15211 0009 48897DE8 		movq	%rdi, -24(%rbp)
 15212 000d 488975E0 		movq	%rsi, -32(%rbp)
 15213              	.LBB140:
 128:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** #if defined(BOOST_SP_ENABLE_DEBUG_HOOKS)
 15214              		.loc 6 128 0
 15215 0011 488B45E8 		movq	-24(%rbp), %rax
 15216 0015 48C70000 		movq	$0, (%rax)
 15216      000000
GAS LISTING /tmp/ccsIN87E.s 			page 618


 137:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         }
 15217              		.loc 6 137 0
 15218 001c BF180000 		movl	$24, %edi
 15218      00
 15219              	.LEHB98:
 15220 0021 E8000000 		call	_Znwm@PLT
 15220      00
 15221              	.LEHE98:
 15222 0026 4889C3   		movq	%rax, %rbx
 15223 0029 488B45E0 		movq	-32(%rbp), %rax
 15224 002d 4889C6   		movq	%rax, %rsi
 15225 0030 4889DF   		movq	%rbx, %rdi
 15226 0033 E8000000 		call	_ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_14bad_exception_EEE
 15226      00
 15227 0038 488B45E8 		movq	-24(%rbp), %rax
 15228 003c 488918   		movq	%rbx, (%rax)
 15229              	.LBE140:
 156:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 15230              		.loc 6 156 0
 15231 003f EB2C     		jmp	.L760
 15232              	.L758:
 15233              	.LBB141:
 139:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         {
 15234              		.loc 6 139 0
 15235 0041 4889C7   		movq	%rax, %rdi
 15236 0044 E8000000 		call	__cxa_begin_catch@PLT
 15236      00
 141:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****             throw;
 15237              		.loc 6 141 0
 15238 0049 488B45E0 		movq	-32(%rbp), %rax
 15239 004d 4889C7   		movq	%rax, %rdi
 15240 0050 E8000000 		call	_ZN5boost14checked_deleteINS_16exception_detail10clone_implINS1_14bad_exception_EEEEEvPT_
 15240      00
 15241              	.LEHB99:
 142:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         }
 15242              		.loc 6 142 0
 15243 0055 E8000000 		call	__cxa_rethrow@PLT
 15243      00
 15244              	.LEHE99:
 15245              	.L759:
 15246 005a 4889C3   		movq	%rax, %rbx
 139:/usr/include/boost/smart_ptr/detail/shared_count.hpp ****         {
 15247              		.loc 6 139 0
 15248 005d E8000000 		call	__cxa_end_catch@PLT
 15248      00
 15249 0062 4889D8   		movq	%rbx, %rax
 15250 0065 4889C7   		movq	%rax, %rdi
 15251              	.LEHB100:
 15252 0068 E8000000 		call	_Unwind_Resume@PLT
 15252      00
 15253              	.LEHE100:
 15254              	.L760:
 15255              	.LBE141:
 156:/usr/include/boost/smart_ptr/detail/shared_count.hpp **** 
 15256              		.loc 6 156 0
 15257 006d 4883C418 		addq	$24, %rsp
 15258 0071 5B       		popq	%rbx
GAS LISTING /tmp/ccsIN87E.s 			page 619


 15259 0072 5D       		popq	%rbp
 15260              		.cfi_def_cfa 7, 8
 15261 0073 C3       		ret
 15262              		.cfi_endproc
 15263              	.LFE14580:
 15264              		.section	.gcc_except_table
 15265              		.align 4
 15266              	.LLSDA14580:
 15267 024c FF       		.byte	0xff
 15268 024d 9B       		.byte	0x9b
 15269 024e 15       		.uleb128 .LLSDATT14580-.LLSDATTD14580
 15270              	.LLSDATTD14580:
 15271 024f 01       		.byte	0x1
 15272 0250 0C       		.uleb128 .LLSDACSE14580-.LLSDACSB14580
 15273              	.LLSDACSB14580:
 15274 0251 21       		.uleb128 .LEHB98-.LFB14580
 15275 0252 05       		.uleb128 .LEHE98-.LEHB98
 15276 0253 41       		.uleb128 .L758-.LFB14580
 15277 0254 01       		.uleb128 0x1
 15278 0255 55       		.uleb128 .LEHB99-.LFB14580
 15279 0256 05       		.uleb128 .LEHE99-.LEHB99
 15280 0257 5A       		.uleb128 .L759-.LFB14580
 15281 0258 00       		.uleb128 0
 15282 0259 68       		.uleb128 .LEHB100-.LFB14580
 15283 025a 05       		.uleb128 .LEHE100-.LEHB100
 15284 025b 00       		.uleb128 0
 15285 025c 00       		.uleb128 0
 15286              	.LLSDACSE14580:
 15287 025d 01       		.byte	0x1
 15288 025e 00       		.byte	0
 15289 025f 00       		.align 4
 15290 0260 00000000 		.long	0
 15291              	
 15292              	.LLSDATT14580:
 15293              		.section	.text._ZN5boost6detail12shared_countC2INS_16exception_detail10clone_implINS3_14bad_except
 15295              		.weak	_ZN5boost6detail12shared_countC1INS_16exception_detail10clone_implINS3_14bad_exception_EEEEE
 15296              		.set	_ZN5boost6detail12shared_countC1INS_16exception_detail10clone_implINS3_14bad_exception_EEEEEP
 15297              		.section	.text._ZN9__gnu_cxx13new_allocatorIiEC2ERKS1_,"axG",@progbits,_ZN9__gnu_cxx13new_allocato
 15298              		.align 2
 15299              		.weak	_ZN9__gnu_cxx13new_allocatorIiEC2ERKS1_
 15301              	_ZN9__gnu_cxx13new_allocatorIiEC2ERKS1_:
 15302              	.LFB14673:
  81:/usr/include/c++/6/ext/new_allocator.h **** 
 15303              		.loc 43 81 0
 15304              		.cfi_startproc
 15305 0000 55       		pushq	%rbp
 15306              		.cfi_def_cfa_offset 16
 15307              		.cfi_offset 6, -16
 15308 0001 4889E5   		movq	%rsp, %rbp
 15309              		.cfi_def_cfa_register 6
 15310 0004 48897DF8 		movq	%rdi, -8(%rbp)
 15311 0008 488975F0 		movq	%rsi, -16(%rbp)
  81:/usr/include/c++/6/ext/new_allocator.h **** 
 15312              		.loc 43 81 0
 15313 000c 90       		nop
 15314 000d 5D       		popq	%rbp
 15315              		.cfi_def_cfa 7, 8
GAS LISTING /tmp/ccsIN87E.s 			page 620


 15316 000e C3       		ret
 15317              		.cfi_endproc
 15318              	.LFE14673:
 15320              		.weak	_ZN9__gnu_cxx13new_allocatorIiEC1ERKS1_
 15321              		.set	_ZN9__gnu_cxx13new_allocatorIiEC1ERKS1_,_ZN9__gnu_cxx13new_allocatorIiEC2ERKS1_
 15322              		.section	.text._ZNSt12_Vector_baseIiSaIiEE11_M_allocateEm,"axG",@progbits,_ZNSt12_Vector_baseIiSaI
 15323              		.align 2
 15324              		.weak	_ZNSt12_Vector_baseIiSaIiEE11_M_allocateEm
 15326              	_ZNSt12_Vector_baseIiSaIiEE11_M_allocateEm:
 15327              	.LFB14675:
 167:/usr/include/c++/6/bits/stl_vector.h ****       {
 15328              		.loc 30 167 0
 15329              		.cfi_startproc
 15330 0000 55       		pushq	%rbp
 15331              		.cfi_def_cfa_offset 16
 15332              		.cfi_offset 6, -16
 15333 0001 4889E5   		movq	%rsp, %rbp
 15334              		.cfi_def_cfa_register 6
 15335 0004 4883EC10 		subq	$16, %rsp
 15336 0008 48897DF8 		movq	%rdi, -8(%rbp)
 15337 000c 488975F0 		movq	%rsi, -16(%rbp)
 170:/usr/include/c++/6/bits/stl_vector.h ****       }
 15338              		.loc 30 170 0
 15339 0010 48837DF0 		cmpq	$0, -16(%rbp)
 15339      00
 15340 0015 7415     		je	.L763
 170:/usr/include/c++/6/bits/stl_vector.h ****       }
 15341              		.loc 30 170 0 is_stmt 0 discriminator 1
 15342 0017 488B45F8 		movq	-8(%rbp), %rax
 15343 001b 488B55F0 		movq	-16(%rbp), %rdx
 15344 001f 4889D6   		movq	%rdx, %rsi
 15345 0022 4889C7   		movq	%rax, %rdi
 15346 0025 E8000000 		call	_ZNSt16allocator_traitsISaIiEE8allocateERS0_m
 15346      00
 15347 002a EB05     		jmp	.L765
 15348              	.L763:
 170:/usr/include/c++/6/bits/stl_vector.h ****       }
 15349              		.loc 30 170 0 discriminator 2
 15350 002c B8000000 		movl	$0, %eax
 15350      00
 15351              	.L765:
 171:/usr/include/c++/6/bits/stl_vector.h **** 
 15352              		.loc 30 171 0 is_stmt 1 discriminator 5
 15353 0031 C9       		leave
 15354              		.cfi_def_cfa 7, 8
 15355 0032 C3       		ret
 15356              		.cfi_endproc
 15357              	.LFE14675:
 15359              		.section	.text._ZNSt16allocator_traitsISaIiEE10deallocateERS0_Pim,"axG",@progbits,_ZNSt16allocator
 15360              		.weak	_ZNSt16allocator_traitsISaIiEE10deallocateERS0_Pim
 15362              	_ZNSt16allocator_traitsISaIiEE10deallocateERS0_Pim:
 15363              	.LFB14676:
 461:/usr/include/c++/6/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 15364              		.loc 42 461 0
 15365              		.cfi_startproc
 15366 0000 55       		pushq	%rbp
 15367              		.cfi_def_cfa_offset 16
GAS LISTING /tmp/ccsIN87E.s 			page 621


 15368              		.cfi_offset 6, -16
 15369 0001 4889E5   		movq	%rsp, %rbp
 15370              		.cfi_def_cfa_register 6
 15371 0004 4883EC20 		subq	$32, %rsp
 15372 0008 48897DF8 		movq	%rdi, -8(%rbp)
 15373 000c 488975F0 		movq	%rsi, -16(%rbp)
 15374 0010 488955E8 		movq	%rdx, -24(%rbp)
 462:/usr/include/c++/6/bits/alloc_traits.h **** 
 15375              		.loc 42 462 0
 15376 0014 488B55E8 		movq	-24(%rbp), %rdx
 15377 0018 488B4DF0 		movq	-16(%rbp), %rcx
 15378 001c 488B45F8 		movq	-8(%rbp), %rax
 15379 0020 4889CE   		movq	%rcx, %rsi
 15380 0023 4889C7   		movq	%rax, %rdi
 15381 0026 E8000000 		call	_ZN9__gnu_cxx13new_allocatorIiE10deallocateEPim
 15381      00
 15382 002b 90       		nop
 15383 002c C9       		leave
 15384              		.cfi_def_cfa 7, 8
 15385 002d C3       		ret
 15386              		.cfi_endproc
 15387              	.LFE14676:
 15389              		.section	.text._ZNSt20__uninitialized_copyILb1EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKi
 15390              		.weak	_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKiSt6vector
 15392              	_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiE
 15393              	.LFB14677:
  91:/usr/include/c++/6/bits/stl_uninitialized.h **** 		      _ForwardIterator __result)
 15394              		.loc 39 91 0
 15395              		.cfi_startproc
 15396 0000 55       		pushq	%rbp
 15397              		.cfi_def_cfa_offset 16
 15398              		.cfi_offset 6, -16
 15399 0001 4889E5   		movq	%rsp, %rbp
 15400              		.cfi_def_cfa_register 6
 15401 0004 4883EC20 		subq	$32, %rsp
 15402 0008 48897DF8 		movq	%rdi, -8(%rbp)
 15403 000c 488975F0 		movq	%rsi, -16(%rbp)
 15404 0010 488955E8 		movq	%rdx, -24(%rbp)
  93:/usr/include/c++/6/bits/stl_uninitialized.h ****     };
 15405              		.loc 39 93 0
 15406 0014 488B55E8 		movq	-24(%rbp), %rdx
 15407 0018 488B4DF0 		movq	-16(%rbp), %rcx
 15408 001c 488B45F8 		movq	-8(%rbp), %rax
 15409 0020 4889CE   		movq	%rcx, %rsi
 15410 0023 4889C7   		movq	%rax, %rdi
 15411 0026 E8000000 		call	_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEPiET0_T_SA_S9_
 15411      00
 15412 002b C9       		leave
 15413              		.cfi_def_cfa 7, 8
 15414 002c C3       		ret
 15415              		.cfi_endproc
 15416              	.LFE14677:
 15418              		.section	.text._ZNSaIN2gr5tag_tEEC2Ev,"axG",@progbits,_ZNSaIN2gr5tag_tEEC5Ev,comdat
 15419              		.align 2
 15420              		.weak	_ZNSaIN2gr5tag_tEEC2Ev
 15422              	_ZNSaIN2gr5tag_tEEC2Ev:
 15423              	.LFB14683:
GAS LISTING /tmp/ccsIN87E.s 			page 622


 131:/usr/include/c++/6/bits/allocator.h **** 
 15424              		.loc 38 131 0
 15425              		.cfi_startproc
 15426 0000 55       		pushq	%rbp
 15427              		.cfi_def_cfa_offset 16
 15428              		.cfi_offset 6, -16
 15429 0001 4889E5   		movq	%rsp, %rbp
 15430              		.cfi_def_cfa_register 6
 15431 0004 4883EC10 		subq	$16, %rsp
 15432 0008 48897DF8 		movq	%rdi, -8(%rbp)
 15433              	.LBB142:
 131:/usr/include/c++/6/bits/allocator.h **** 
 15434              		.loc 38 131 0
 15435 000c 488B45F8 		movq	-8(%rbp), %rax
 15436 0010 4889C7   		movq	%rax, %rdi
 15437 0013 E8000000 		call	_ZN9__gnu_cxx13new_allocatorIN2gr5tag_tEEC2Ev
 15437      00
 15438              	.LBE142:
 15439 0018 90       		nop
 15440 0019 C9       		leave
 15441              		.cfi_def_cfa 7, 8
 15442 001a C3       		ret
 15443              		.cfi_endproc
 15444              	.LFE14683:
 15446              		.weak	_ZNSaIN2gr5tag_tEEC1Ev
 15447              		.set	_ZNSaIN2gr5tag_tEEC1Ev,_ZNSaIN2gr5tag_tEEC2Ev
 15448              		.section	.text._ZN9__gnu_cxx13new_allocatorIN2gr5tag_tEED2Ev,"axG",@progbits,_ZN9__gnu_cxx13new_al
 15449              		.align 2
 15450              		.weak	_ZN9__gnu_cxx13new_allocatorIN2gr5tag_tEED2Ev
 15452              	_ZN9__gnu_cxx13new_allocatorIN2gr5tag_tEED2Ev:
 15453              	.LFB14686:
 15454              		.loc 43 86 0
 15455              		.cfi_startproc
 15456 0000 55       		pushq	%rbp
 15457              		.cfi_def_cfa_offset 16
 15458              		.cfi_offset 6, -16
 15459 0001 4889E5   		movq	%rsp, %rbp
 15460              		.cfi_def_cfa_register 6
 15461 0004 48897DF8 		movq	%rdi, -8(%rbp)
 15462              		.loc 43 86 0
 15463 0008 90       		nop
 15464 0009 5D       		popq	%rbp
 15465              		.cfi_def_cfa 7, 8
 15466 000a C3       		ret
 15467              		.cfi_endproc
 15468              	.LFE14686:
 15470              		.weak	_ZN9__gnu_cxx13new_allocatorIN2gr5tag_tEED1Ev
 15471              		.set	_ZN9__gnu_cxx13new_allocatorIN2gr5tag_tEED1Ev,_ZN9__gnu_cxx13new_allocatorIN2gr5tag_tEED2Ev
 15472              		.section	.text._ZNSt16allocator_traitsISaIN2gr5tag_tEEE10deallocateERS2_PS1_m,"axG",@progbits,_ZNS
 15473              		.weak	_ZNSt16allocator_traitsISaIN2gr5tag_tEEE10deallocateERS2_PS1_m
 15475              	_ZNSt16allocator_traitsISaIN2gr5tag_tEEE10deallocateERS2_PS1_m:
 15476              	.LFB14688:
 461:/usr/include/c++/6/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 15477              		.loc 42 461 0
 15478              		.cfi_startproc
 15479 0000 55       		pushq	%rbp
 15480              		.cfi_def_cfa_offset 16
GAS LISTING /tmp/ccsIN87E.s 			page 623


 15481              		.cfi_offset 6, -16
 15482 0001 4889E5   		movq	%rsp, %rbp
 15483              		.cfi_def_cfa_register 6
 15484 0004 4883EC20 		subq	$32, %rsp
 15485 0008 48897DF8 		movq	%rdi, -8(%rbp)
 15486 000c 488975F0 		movq	%rsi, -16(%rbp)
 15487 0010 488955E8 		movq	%rdx, -24(%rbp)
 462:/usr/include/c++/6/bits/alloc_traits.h **** 
 15488              		.loc 42 462 0
 15489 0014 488B55E8 		movq	-24(%rbp), %rdx
 15490 0018 488B4DF0 		movq	-16(%rbp), %rcx
 15491 001c 488B45F8 		movq	-8(%rbp), %rax
 15492 0020 4889CE   		movq	%rcx, %rsi
 15493 0023 4889C7   		movq	%rax, %rdi
 15494 0026 E8000000 		call	_ZN9__gnu_cxx13new_allocatorIN2gr5tag_tEE10deallocateEPS2_m
 15494      00
 15495 002b 90       		nop
 15496 002c C9       		leave
 15497              		.cfi_def_cfa 7, 8
 15498 002d C3       		ret
 15499              		.cfi_endproc
 15500              	.LFE14688:
 15502              		.section	.text._ZNSt12_Destroy_auxILb0EE9__destroyIPN2gr5tag_tEEEvT_S5_,"axG",@progbits,_ZNSt12_De
 15503              		.weak	_ZNSt12_Destroy_auxILb0EE9__destroyIPN2gr5tag_tEEEvT_S5_
 15505              	_ZNSt12_Destroy_auxILb0EE9__destroyIPN2gr5tag_tEEEvT_S5_:
 15506              	.LFB14689:
 100:/usr/include/c++/6/bits/stl_construct.h **** 	{
 15507              		.loc 35 100 0
 15508              		.cfi_startproc
 15509 0000 55       		pushq	%rbp
 15510              		.cfi_def_cfa_offset 16
 15511              		.cfi_offset 6, -16
 15512 0001 4889E5   		movq	%rsp, %rbp
 15513              		.cfi_def_cfa_register 6
 15514 0004 4883EC10 		subq	$16, %rsp
 15515 0008 48897DF8 		movq	%rdi, -8(%rbp)
 15516 000c 488975F0 		movq	%rsi, -16(%rbp)
 15517              	.L774:
 102:/usr/include/c++/6/bits/stl_construct.h **** 	    std::_Destroy(std::__addressof(*__first));
 15518              		.loc 35 102 0 discriminator 2
 15519 0010 488B45F8 		movq	-8(%rbp), %rax
 15520 0014 483B45F0 		cmpq	-16(%rbp), %rax
 15521 0018 741B     		je	.L775
 103:/usr/include/c++/6/bits/stl_construct.h **** 	}
 15522              		.loc 35 103 0 discriminator 1
 15523 001a 488B45F8 		movq	-8(%rbp), %rax
 15524 001e 4889C7   		movq	%rax, %rdi
 15525 0021 E8000000 		call	_ZSt11__addressofIN2gr5tag_tEEPT_RS2_
 15525      00
 15526 0026 4889C7   		movq	%rax, %rdi
 15527 0029 E8000000 		call	_ZSt8_DestroyIN2gr5tag_tEEvPT_
 15527      00
 102:/usr/include/c++/6/bits/stl_construct.h **** 	    std::_Destroy(std::__addressof(*__first));
 15528              		.loc 35 102 0 discriminator 1
 15529 002e 488345F8 		addq	$56, -8(%rbp)
 15529      38
 15530 0033 EBDB     		jmp	.L774
GAS LISTING /tmp/ccsIN87E.s 			page 624


 15531              	.L775:
 104:/usr/include/c++/6/bits/stl_construct.h ****     };
 15532              		.loc 35 104 0
 15533 0035 90       		nop
 15534 0036 C9       		leave
 15535              		.cfi_def_cfa 7, 8
 15536 0037 C3       		ret
 15537              		.cfi_endproc
 15538              	.LFE14689:
 15540              		.section	.text._ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPN2gr5tag_tESt6vectorIS3_SaIS3_EE
 15541              		.weak	_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPN2gr5tag_tESt6vectorIS3_SaIS3_EEEEET_S9_
 15543              	_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPN2gr5tag_tESt6vectorIS3_SaIS3_EEEEET_S9_:
 15544              	.LFB14690:
 15545              		.file 47 "/usr/include/c++/6/bits/cpp_type_traits.h"
   1:/usr/include/c++/6/bits/cpp_type_traits.h **** // The  -*- C++ -*- type traits classes for internal use in libstdc++
   2:/usr/include/c++/6/bits/cpp_type_traits.h **** 
   3:/usr/include/c++/6/bits/cpp_type_traits.h **** // Copyright (C) 2000-2016 Free Software Foundation, Inc.
   4:/usr/include/c++/6/bits/cpp_type_traits.h **** //
   5:/usr/include/c++/6/bits/cpp_type_traits.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/6/bits/cpp_type_traits.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/6/bits/cpp_type_traits.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/6/bits/cpp_type_traits.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/6/bits/cpp_type_traits.h **** // any later version.
  10:/usr/include/c++/6/bits/cpp_type_traits.h **** 
  11:/usr/include/c++/6/bits/cpp_type_traits.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/6/bits/cpp_type_traits.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/6/bits/cpp_type_traits.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/6/bits/cpp_type_traits.h **** // GNU General Public License for more details.
  15:/usr/include/c++/6/bits/cpp_type_traits.h **** 
  16:/usr/include/c++/6/bits/cpp_type_traits.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/6/bits/cpp_type_traits.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/6/bits/cpp_type_traits.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/6/bits/cpp_type_traits.h **** 
  20:/usr/include/c++/6/bits/cpp_type_traits.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/6/bits/cpp_type_traits.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/6/bits/cpp_type_traits.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/6/bits/cpp_type_traits.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/6/bits/cpp_type_traits.h **** 
  25:/usr/include/c++/6/bits/cpp_type_traits.h **** /** @file bits/cpp_type_traits.h
  26:/usr/include/c++/6/bits/cpp_type_traits.h ****  *  This is an internal header file, included by other library headers.
  27:/usr/include/c++/6/bits/cpp_type_traits.h ****  *  Do not attempt to use it directly. @headername{ext/type_traits}
  28:/usr/include/c++/6/bits/cpp_type_traits.h ****  */
  29:/usr/include/c++/6/bits/cpp_type_traits.h **** 
  30:/usr/include/c++/6/bits/cpp_type_traits.h **** // Written by Gabriel Dos Reis <dosreis@cmla.ens-cachan.fr>
  31:/usr/include/c++/6/bits/cpp_type_traits.h **** 
  32:/usr/include/c++/6/bits/cpp_type_traits.h **** #ifndef _CPP_TYPE_TRAITS_H
  33:/usr/include/c++/6/bits/cpp_type_traits.h **** #define _CPP_TYPE_TRAITS_H 1
  34:/usr/include/c++/6/bits/cpp_type_traits.h **** 
  35:/usr/include/c++/6/bits/cpp_type_traits.h **** #pragma GCC system_header
  36:/usr/include/c++/6/bits/cpp_type_traits.h **** 
  37:/usr/include/c++/6/bits/cpp_type_traits.h **** #include <bits/c++config.h>
  38:/usr/include/c++/6/bits/cpp_type_traits.h **** 
  39:/usr/include/c++/6/bits/cpp_type_traits.h **** //
  40:/usr/include/c++/6/bits/cpp_type_traits.h **** // This file provides some compile-time information about various types.
  41:/usr/include/c++/6/bits/cpp_type_traits.h **** // These representations were designed, on purpose, to be constant-expressions
  42:/usr/include/c++/6/bits/cpp_type_traits.h **** // and not types as found in <bits/type_traits.h>.  In particular, they
  43:/usr/include/c++/6/bits/cpp_type_traits.h **** // can be used in control structures and the optimizer hopefully will do
GAS LISTING /tmp/ccsIN87E.s 			page 625


  44:/usr/include/c++/6/bits/cpp_type_traits.h **** // the obvious thing.
  45:/usr/include/c++/6/bits/cpp_type_traits.h **** //
  46:/usr/include/c++/6/bits/cpp_type_traits.h **** // Why integral expressions, and not functions nor types?
  47:/usr/include/c++/6/bits/cpp_type_traits.h **** // Firstly, these compile-time entities are used as template-arguments
  48:/usr/include/c++/6/bits/cpp_type_traits.h **** // so function return values won't work:  We need compile-time entities.
  49:/usr/include/c++/6/bits/cpp_type_traits.h **** // We're left with types and constant  integral expressions.
  50:/usr/include/c++/6/bits/cpp_type_traits.h **** // Secondly, from the point of view of ease of use, type-based compile-time
  51:/usr/include/c++/6/bits/cpp_type_traits.h **** // information is -not- *that* convenient.  On has to write lots of
  52:/usr/include/c++/6/bits/cpp_type_traits.h **** // overloaded functions and to hope that the compiler will select the right
  53:/usr/include/c++/6/bits/cpp_type_traits.h **** // one. As a net effect, the overall structure isn't very clear at first
  54:/usr/include/c++/6/bits/cpp_type_traits.h **** // glance.
  55:/usr/include/c++/6/bits/cpp_type_traits.h **** // Thirdly, partial ordering and overload resolution (of function templates)
  56:/usr/include/c++/6/bits/cpp_type_traits.h **** // is highly costly in terms of compiler-resource.  It is a Good Thing to
  57:/usr/include/c++/6/bits/cpp_type_traits.h **** // keep these resource consumption as least as possible.
  58:/usr/include/c++/6/bits/cpp_type_traits.h **** //
  59:/usr/include/c++/6/bits/cpp_type_traits.h **** // See valarray_array.h for a case use.
  60:/usr/include/c++/6/bits/cpp_type_traits.h **** //
  61:/usr/include/c++/6/bits/cpp_type_traits.h **** // -- Gaby (dosreis@cmla.ens-cachan.fr) 2000-03-06.
  62:/usr/include/c++/6/bits/cpp_type_traits.h **** //
  63:/usr/include/c++/6/bits/cpp_type_traits.h **** // Update 2005: types are also provided and <bits/type_traits.h> has been
  64:/usr/include/c++/6/bits/cpp_type_traits.h **** // removed.
  65:/usr/include/c++/6/bits/cpp_type_traits.h **** //
  66:/usr/include/c++/6/bits/cpp_type_traits.h **** 
  67:/usr/include/c++/6/bits/cpp_type_traits.h **** extern "C++" {
  68:/usr/include/c++/6/bits/cpp_type_traits.h **** 
  69:/usr/include/c++/6/bits/cpp_type_traits.h **** namespace std _GLIBCXX_VISIBILITY(default)
  70:/usr/include/c++/6/bits/cpp_type_traits.h **** {
  71:/usr/include/c++/6/bits/cpp_type_traits.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  72:/usr/include/c++/6/bits/cpp_type_traits.h **** 
  73:/usr/include/c++/6/bits/cpp_type_traits.h ****   struct __true_type { };
  74:/usr/include/c++/6/bits/cpp_type_traits.h ****   struct __false_type { };
  75:/usr/include/c++/6/bits/cpp_type_traits.h **** 
  76:/usr/include/c++/6/bits/cpp_type_traits.h ****   template<bool>
  77:/usr/include/c++/6/bits/cpp_type_traits.h ****     struct __truth_type
  78:/usr/include/c++/6/bits/cpp_type_traits.h ****     { typedef __false_type __type; };
  79:/usr/include/c++/6/bits/cpp_type_traits.h **** 
  80:/usr/include/c++/6/bits/cpp_type_traits.h ****   template<>
  81:/usr/include/c++/6/bits/cpp_type_traits.h ****     struct __truth_type<true>
  82:/usr/include/c++/6/bits/cpp_type_traits.h ****     { typedef __true_type __type; };
  83:/usr/include/c++/6/bits/cpp_type_traits.h **** 
  84:/usr/include/c++/6/bits/cpp_type_traits.h ****   // N.B. The conversions to bool are needed due to the issue
  85:/usr/include/c++/6/bits/cpp_type_traits.h ****   // explained in c++/19404.
  86:/usr/include/c++/6/bits/cpp_type_traits.h ****   template<class _Sp, class _Tp>
  87:/usr/include/c++/6/bits/cpp_type_traits.h ****     struct __traitor
  88:/usr/include/c++/6/bits/cpp_type_traits.h ****     {
  89:/usr/include/c++/6/bits/cpp_type_traits.h ****       enum { __value = bool(_Sp::__value) || bool(_Tp::__value) };
  90:/usr/include/c++/6/bits/cpp_type_traits.h ****       typedef typename __truth_type<__value>::__type __type;
  91:/usr/include/c++/6/bits/cpp_type_traits.h ****     };
  92:/usr/include/c++/6/bits/cpp_type_traits.h **** 
  93:/usr/include/c++/6/bits/cpp_type_traits.h ****   // Compare for equality of types.
  94:/usr/include/c++/6/bits/cpp_type_traits.h ****   template<typename, typename>
  95:/usr/include/c++/6/bits/cpp_type_traits.h ****     struct __are_same
  96:/usr/include/c++/6/bits/cpp_type_traits.h ****     {
  97:/usr/include/c++/6/bits/cpp_type_traits.h ****       enum { __value = 0 };
  98:/usr/include/c++/6/bits/cpp_type_traits.h ****       typedef __false_type __type;
  99:/usr/include/c++/6/bits/cpp_type_traits.h ****     };
 100:/usr/include/c++/6/bits/cpp_type_traits.h **** 
GAS LISTING /tmp/ccsIN87E.s 			page 626


 101:/usr/include/c++/6/bits/cpp_type_traits.h ****   template<typename _Tp>
 102:/usr/include/c++/6/bits/cpp_type_traits.h ****     struct __are_same<_Tp, _Tp>
 103:/usr/include/c++/6/bits/cpp_type_traits.h ****     {
 104:/usr/include/c++/6/bits/cpp_type_traits.h ****       enum { __value = 1 };
 105:/usr/include/c++/6/bits/cpp_type_traits.h ****       typedef __true_type __type;
 106:/usr/include/c++/6/bits/cpp_type_traits.h ****     };
 107:/usr/include/c++/6/bits/cpp_type_traits.h **** 
 108:/usr/include/c++/6/bits/cpp_type_traits.h ****   // Holds if the template-argument is a void type.
 109:/usr/include/c++/6/bits/cpp_type_traits.h ****   template<typename _Tp>
 110:/usr/include/c++/6/bits/cpp_type_traits.h ****     struct __is_void
 111:/usr/include/c++/6/bits/cpp_type_traits.h ****     {
 112:/usr/include/c++/6/bits/cpp_type_traits.h ****       enum { __value = 0 };
 113:/usr/include/c++/6/bits/cpp_type_traits.h ****       typedef __false_type __type;
 114:/usr/include/c++/6/bits/cpp_type_traits.h ****     };
 115:/usr/include/c++/6/bits/cpp_type_traits.h **** 
 116:/usr/include/c++/6/bits/cpp_type_traits.h ****   template<>
 117:/usr/include/c++/6/bits/cpp_type_traits.h ****     struct __is_void<void>
 118:/usr/include/c++/6/bits/cpp_type_traits.h ****     {
 119:/usr/include/c++/6/bits/cpp_type_traits.h ****       enum { __value = 1 };
 120:/usr/include/c++/6/bits/cpp_type_traits.h ****       typedef __true_type __type;
 121:/usr/include/c++/6/bits/cpp_type_traits.h ****     };
 122:/usr/include/c++/6/bits/cpp_type_traits.h **** 
 123:/usr/include/c++/6/bits/cpp_type_traits.h ****   //
 124:/usr/include/c++/6/bits/cpp_type_traits.h ****   // Integer types
 125:/usr/include/c++/6/bits/cpp_type_traits.h ****   //
 126:/usr/include/c++/6/bits/cpp_type_traits.h ****   template<typename _Tp>
 127:/usr/include/c++/6/bits/cpp_type_traits.h ****     struct __is_integer
 128:/usr/include/c++/6/bits/cpp_type_traits.h ****     {
 129:/usr/include/c++/6/bits/cpp_type_traits.h ****       enum { __value = 0 };
 130:/usr/include/c++/6/bits/cpp_type_traits.h ****       typedef __false_type __type;
 131:/usr/include/c++/6/bits/cpp_type_traits.h ****     };
 132:/usr/include/c++/6/bits/cpp_type_traits.h **** 
 133:/usr/include/c++/6/bits/cpp_type_traits.h ****   // Thirteen specializations (yes there are eleven standard integer
 134:/usr/include/c++/6/bits/cpp_type_traits.h ****   // types; <em>long long</em> and <em>unsigned long long</em> are
 135:/usr/include/c++/6/bits/cpp_type_traits.h ****   // supported as extensions).  Up to four target-specific __int<N>
 136:/usr/include/c++/6/bits/cpp_type_traits.h ****   // types are supported as well.
 137:/usr/include/c++/6/bits/cpp_type_traits.h ****   template<>
 138:/usr/include/c++/6/bits/cpp_type_traits.h ****     struct __is_integer<bool>
 139:/usr/include/c++/6/bits/cpp_type_traits.h ****     {
 140:/usr/include/c++/6/bits/cpp_type_traits.h ****       enum { __value = 1 };
 141:/usr/include/c++/6/bits/cpp_type_traits.h ****       typedef __true_type __type;
 142:/usr/include/c++/6/bits/cpp_type_traits.h ****     };
 143:/usr/include/c++/6/bits/cpp_type_traits.h **** 
 144:/usr/include/c++/6/bits/cpp_type_traits.h ****   template<>
 145:/usr/include/c++/6/bits/cpp_type_traits.h ****     struct __is_integer<char>
 146:/usr/include/c++/6/bits/cpp_type_traits.h ****     {
 147:/usr/include/c++/6/bits/cpp_type_traits.h ****       enum { __value = 1 };
 148:/usr/include/c++/6/bits/cpp_type_traits.h ****       typedef __true_type __type;
 149:/usr/include/c++/6/bits/cpp_type_traits.h ****     };
 150:/usr/include/c++/6/bits/cpp_type_traits.h **** 
 151:/usr/include/c++/6/bits/cpp_type_traits.h ****   template<>
 152:/usr/include/c++/6/bits/cpp_type_traits.h ****     struct __is_integer<signed char>
 153:/usr/include/c++/6/bits/cpp_type_traits.h ****     {
 154:/usr/include/c++/6/bits/cpp_type_traits.h ****       enum { __value = 1 };
 155:/usr/include/c++/6/bits/cpp_type_traits.h ****       typedef __true_type __type;
 156:/usr/include/c++/6/bits/cpp_type_traits.h ****     };
 157:/usr/include/c++/6/bits/cpp_type_traits.h **** 
GAS LISTING /tmp/ccsIN87E.s 			page 627


 158:/usr/include/c++/6/bits/cpp_type_traits.h ****   template<>
 159:/usr/include/c++/6/bits/cpp_type_traits.h ****     struct __is_integer<unsigned char>
 160:/usr/include/c++/6/bits/cpp_type_traits.h ****     {
 161:/usr/include/c++/6/bits/cpp_type_traits.h ****       enum { __value = 1 };
 162:/usr/include/c++/6/bits/cpp_type_traits.h ****       typedef __true_type __type;
 163:/usr/include/c++/6/bits/cpp_type_traits.h ****     };
 164:/usr/include/c++/6/bits/cpp_type_traits.h **** 
 165:/usr/include/c++/6/bits/cpp_type_traits.h **** # ifdef _GLIBCXX_USE_WCHAR_T
 166:/usr/include/c++/6/bits/cpp_type_traits.h ****   template<>
 167:/usr/include/c++/6/bits/cpp_type_traits.h ****     struct __is_integer<wchar_t>
 168:/usr/include/c++/6/bits/cpp_type_traits.h ****     {
 169:/usr/include/c++/6/bits/cpp_type_traits.h ****       enum { __value = 1 };
 170:/usr/include/c++/6/bits/cpp_type_traits.h ****       typedef __true_type __type;
 171:/usr/include/c++/6/bits/cpp_type_traits.h ****     };
 172:/usr/include/c++/6/bits/cpp_type_traits.h **** # endif
 173:/usr/include/c++/6/bits/cpp_type_traits.h **** 
 174:/usr/include/c++/6/bits/cpp_type_traits.h **** #if __cplusplus >= 201103L
 175:/usr/include/c++/6/bits/cpp_type_traits.h ****   template<>
 176:/usr/include/c++/6/bits/cpp_type_traits.h ****     struct __is_integer<char16_t>
 177:/usr/include/c++/6/bits/cpp_type_traits.h ****     {
 178:/usr/include/c++/6/bits/cpp_type_traits.h ****       enum { __value = 1 };
 179:/usr/include/c++/6/bits/cpp_type_traits.h ****       typedef __true_type __type;
 180:/usr/include/c++/6/bits/cpp_type_traits.h ****     };
 181:/usr/include/c++/6/bits/cpp_type_traits.h **** 
 182:/usr/include/c++/6/bits/cpp_type_traits.h ****   template<>
 183:/usr/include/c++/6/bits/cpp_type_traits.h ****     struct __is_integer<char32_t>
 184:/usr/include/c++/6/bits/cpp_type_traits.h ****     {
 185:/usr/include/c++/6/bits/cpp_type_traits.h ****       enum { __value = 1 };
 186:/usr/include/c++/6/bits/cpp_type_traits.h ****       typedef __true_type __type;
 187:/usr/include/c++/6/bits/cpp_type_traits.h ****     };
 188:/usr/include/c++/6/bits/cpp_type_traits.h **** #endif
 189:/usr/include/c++/6/bits/cpp_type_traits.h **** 
 190:/usr/include/c++/6/bits/cpp_type_traits.h ****   template<>
 191:/usr/include/c++/6/bits/cpp_type_traits.h ****     struct __is_integer<short>
 192:/usr/include/c++/6/bits/cpp_type_traits.h ****     {
 193:/usr/include/c++/6/bits/cpp_type_traits.h ****       enum { __value = 1 };
 194:/usr/include/c++/6/bits/cpp_type_traits.h ****       typedef __true_type __type;
 195:/usr/include/c++/6/bits/cpp_type_traits.h ****     };
 196:/usr/include/c++/6/bits/cpp_type_traits.h **** 
 197:/usr/include/c++/6/bits/cpp_type_traits.h ****   template<>
 198:/usr/include/c++/6/bits/cpp_type_traits.h ****     struct __is_integer<unsigned short>
 199:/usr/include/c++/6/bits/cpp_type_traits.h ****     {
 200:/usr/include/c++/6/bits/cpp_type_traits.h ****       enum { __value = 1 };
 201:/usr/include/c++/6/bits/cpp_type_traits.h ****       typedef __true_type __type;
 202:/usr/include/c++/6/bits/cpp_type_traits.h ****     };
 203:/usr/include/c++/6/bits/cpp_type_traits.h **** 
 204:/usr/include/c++/6/bits/cpp_type_traits.h ****   template<>
 205:/usr/include/c++/6/bits/cpp_type_traits.h ****     struct __is_integer<int>
 206:/usr/include/c++/6/bits/cpp_type_traits.h ****     {
 207:/usr/include/c++/6/bits/cpp_type_traits.h ****       enum { __value = 1 };
 208:/usr/include/c++/6/bits/cpp_type_traits.h ****       typedef __true_type __type;
 209:/usr/include/c++/6/bits/cpp_type_traits.h ****     };
 210:/usr/include/c++/6/bits/cpp_type_traits.h **** 
 211:/usr/include/c++/6/bits/cpp_type_traits.h ****   template<>
 212:/usr/include/c++/6/bits/cpp_type_traits.h ****     struct __is_integer<unsigned int>
 213:/usr/include/c++/6/bits/cpp_type_traits.h ****     {
 214:/usr/include/c++/6/bits/cpp_type_traits.h ****       enum { __value = 1 };
GAS LISTING /tmp/ccsIN87E.s 			page 628


 215:/usr/include/c++/6/bits/cpp_type_traits.h ****       typedef __true_type __type;
 216:/usr/include/c++/6/bits/cpp_type_traits.h ****     };
 217:/usr/include/c++/6/bits/cpp_type_traits.h **** 
 218:/usr/include/c++/6/bits/cpp_type_traits.h ****   template<>
 219:/usr/include/c++/6/bits/cpp_type_traits.h ****     struct __is_integer<long>
 220:/usr/include/c++/6/bits/cpp_type_traits.h ****     {
 221:/usr/include/c++/6/bits/cpp_type_traits.h ****       enum { __value = 1 };
 222:/usr/include/c++/6/bits/cpp_type_traits.h ****       typedef __true_type __type;
 223:/usr/include/c++/6/bits/cpp_type_traits.h ****     };
 224:/usr/include/c++/6/bits/cpp_type_traits.h **** 
 225:/usr/include/c++/6/bits/cpp_type_traits.h ****   template<>
 226:/usr/include/c++/6/bits/cpp_type_traits.h ****     struct __is_integer<unsigned long>
 227:/usr/include/c++/6/bits/cpp_type_traits.h ****     {
 228:/usr/include/c++/6/bits/cpp_type_traits.h ****       enum { __value = 1 };
 229:/usr/include/c++/6/bits/cpp_type_traits.h ****       typedef __true_type __type;
 230:/usr/include/c++/6/bits/cpp_type_traits.h ****     };
 231:/usr/include/c++/6/bits/cpp_type_traits.h **** 
 232:/usr/include/c++/6/bits/cpp_type_traits.h ****   template<>
 233:/usr/include/c++/6/bits/cpp_type_traits.h ****     struct __is_integer<long long>
 234:/usr/include/c++/6/bits/cpp_type_traits.h ****     {
 235:/usr/include/c++/6/bits/cpp_type_traits.h ****       enum { __value = 1 };
 236:/usr/include/c++/6/bits/cpp_type_traits.h ****       typedef __true_type __type;
 237:/usr/include/c++/6/bits/cpp_type_traits.h ****     };
 238:/usr/include/c++/6/bits/cpp_type_traits.h **** 
 239:/usr/include/c++/6/bits/cpp_type_traits.h ****   template<>
 240:/usr/include/c++/6/bits/cpp_type_traits.h ****     struct __is_integer<unsigned long long>
 241:/usr/include/c++/6/bits/cpp_type_traits.h ****     {
 242:/usr/include/c++/6/bits/cpp_type_traits.h ****       enum { __value = 1 };
 243:/usr/include/c++/6/bits/cpp_type_traits.h ****       typedef __true_type __type;
 244:/usr/include/c++/6/bits/cpp_type_traits.h ****     };
 245:/usr/include/c++/6/bits/cpp_type_traits.h **** 
 246:/usr/include/c++/6/bits/cpp_type_traits.h **** #define __INT_N(TYPE) 			\
 247:/usr/include/c++/6/bits/cpp_type_traits.h ****   template<>				\
 248:/usr/include/c++/6/bits/cpp_type_traits.h ****     struct __is_integer<TYPE>		\
 249:/usr/include/c++/6/bits/cpp_type_traits.h ****     {					\
 250:/usr/include/c++/6/bits/cpp_type_traits.h ****       enum { __value = 1 };		\
 251:/usr/include/c++/6/bits/cpp_type_traits.h ****       typedef __true_type __type;	\
 252:/usr/include/c++/6/bits/cpp_type_traits.h ****     };					\
 253:/usr/include/c++/6/bits/cpp_type_traits.h ****   template<>				\
 254:/usr/include/c++/6/bits/cpp_type_traits.h ****     struct __is_integer<unsigned TYPE>	\
 255:/usr/include/c++/6/bits/cpp_type_traits.h ****     {					\
 256:/usr/include/c++/6/bits/cpp_type_traits.h ****       enum { __value = 1 };		\
 257:/usr/include/c++/6/bits/cpp_type_traits.h ****       typedef __true_type __type;	\
 258:/usr/include/c++/6/bits/cpp_type_traits.h ****     };
 259:/usr/include/c++/6/bits/cpp_type_traits.h **** 
 260:/usr/include/c++/6/bits/cpp_type_traits.h **** #ifdef __GLIBCXX_TYPE_INT_N_0
 261:/usr/include/c++/6/bits/cpp_type_traits.h **** __INT_N(__GLIBCXX_TYPE_INT_N_0)
 262:/usr/include/c++/6/bits/cpp_type_traits.h **** #endif
 263:/usr/include/c++/6/bits/cpp_type_traits.h **** #ifdef __GLIBCXX_TYPE_INT_N_1
 264:/usr/include/c++/6/bits/cpp_type_traits.h **** __INT_N(__GLIBCXX_TYPE_INT_N_1)
 265:/usr/include/c++/6/bits/cpp_type_traits.h **** #endif
 266:/usr/include/c++/6/bits/cpp_type_traits.h **** #ifdef __GLIBCXX_TYPE_INT_N_2
 267:/usr/include/c++/6/bits/cpp_type_traits.h **** __INT_N(__GLIBCXX_TYPE_INT_N_2)
 268:/usr/include/c++/6/bits/cpp_type_traits.h **** #endif
 269:/usr/include/c++/6/bits/cpp_type_traits.h **** #ifdef __GLIBCXX_TYPE_INT_N_3
 270:/usr/include/c++/6/bits/cpp_type_traits.h **** __INT_N(__GLIBCXX_TYPE_INT_N_3)
 271:/usr/include/c++/6/bits/cpp_type_traits.h **** #endif
GAS LISTING /tmp/ccsIN87E.s 			page 629


 272:/usr/include/c++/6/bits/cpp_type_traits.h **** 
 273:/usr/include/c++/6/bits/cpp_type_traits.h **** #undef __INT_N
 274:/usr/include/c++/6/bits/cpp_type_traits.h **** 
 275:/usr/include/c++/6/bits/cpp_type_traits.h ****   //
 276:/usr/include/c++/6/bits/cpp_type_traits.h ****   // Floating point types
 277:/usr/include/c++/6/bits/cpp_type_traits.h ****   //
 278:/usr/include/c++/6/bits/cpp_type_traits.h ****   template<typename _Tp>
 279:/usr/include/c++/6/bits/cpp_type_traits.h ****     struct __is_floating
 280:/usr/include/c++/6/bits/cpp_type_traits.h ****     {
 281:/usr/include/c++/6/bits/cpp_type_traits.h ****       enum { __value = 0 };
 282:/usr/include/c++/6/bits/cpp_type_traits.h ****       typedef __false_type __type;
 283:/usr/include/c++/6/bits/cpp_type_traits.h ****     };
 284:/usr/include/c++/6/bits/cpp_type_traits.h **** 
 285:/usr/include/c++/6/bits/cpp_type_traits.h ****   // three specializations (float, double and 'long double')
 286:/usr/include/c++/6/bits/cpp_type_traits.h ****   template<>
 287:/usr/include/c++/6/bits/cpp_type_traits.h ****     struct __is_floating<float>
 288:/usr/include/c++/6/bits/cpp_type_traits.h ****     {
 289:/usr/include/c++/6/bits/cpp_type_traits.h ****       enum { __value = 1 };
 290:/usr/include/c++/6/bits/cpp_type_traits.h ****       typedef __true_type __type;
 291:/usr/include/c++/6/bits/cpp_type_traits.h ****     };
 292:/usr/include/c++/6/bits/cpp_type_traits.h **** 
 293:/usr/include/c++/6/bits/cpp_type_traits.h ****   template<>
 294:/usr/include/c++/6/bits/cpp_type_traits.h ****     struct __is_floating<double>
 295:/usr/include/c++/6/bits/cpp_type_traits.h ****     {
 296:/usr/include/c++/6/bits/cpp_type_traits.h ****       enum { __value = 1 };
 297:/usr/include/c++/6/bits/cpp_type_traits.h ****       typedef __true_type __type;
 298:/usr/include/c++/6/bits/cpp_type_traits.h ****     };
 299:/usr/include/c++/6/bits/cpp_type_traits.h **** 
 300:/usr/include/c++/6/bits/cpp_type_traits.h ****   template<>
 301:/usr/include/c++/6/bits/cpp_type_traits.h ****     struct __is_floating<long double>
 302:/usr/include/c++/6/bits/cpp_type_traits.h ****     {
 303:/usr/include/c++/6/bits/cpp_type_traits.h ****       enum { __value = 1 };
 304:/usr/include/c++/6/bits/cpp_type_traits.h ****       typedef __true_type __type;
 305:/usr/include/c++/6/bits/cpp_type_traits.h ****     };
 306:/usr/include/c++/6/bits/cpp_type_traits.h **** 
 307:/usr/include/c++/6/bits/cpp_type_traits.h ****   //
 308:/usr/include/c++/6/bits/cpp_type_traits.h ****   // Pointer types
 309:/usr/include/c++/6/bits/cpp_type_traits.h ****   //
 310:/usr/include/c++/6/bits/cpp_type_traits.h ****   template<typename _Tp>
 311:/usr/include/c++/6/bits/cpp_type_traits.h ****     struct __is_pointer
 312:/usr/include/c++/6/bits/cpp_type_traits.h ****     {
 313:/usr/include/c++/6/bits/cpp_type_traits.h ****       enum { __value = 0 };
 314:/usr/include/c++/6/bits/cpp_type_traits.h ****       typedef __false_type __type;
 315:/usr/include/c++/6/bits/cpp_type_traits.h ****     };
 316:/usr/include/c++/6/bits/cpp_type_traits.h **** 
 317:/usr/include/c++/6/bits/cpp_type_traits.h ****   template<typename _Tp>
 318:/usr/include/c++/6/bits/cpp_type_traits.h ****     struct __is_pointer<_Tp*>
 319:/usr/include/c++/6/bits/cpp_type_traits.h ****     {
 320:/usr/include/c++/6/bits/cpp_type_traits.h ****       enum { __value = 1 };
 321:/usr/include/c++/6/bits/cpp_type_traits.h ****       typedef __true_type __type;
 322:/usr/include/c++/6/bits/cpp_type_traits.h ****     };
 323:/usr/include/c++/6/bits/cpp_type_traits.h **** 
 324:/usr/include/c++/6/bits/cpp_type_traits.h ****   //
 325:/usr/include/c++/6/bits/cpp_type_traits.h ****   // An arithmetic type is an integer type or a floating point type
 326:/usr/include/c++/6/bits/cpp_type_traits.h ****   //
 327:/usr/include/c++/6/bits/cpp_type_traits.h ****   template<typename _Tp>
 328:/usr/include/c++/6/bits/cpp_type_traits.h ****     struct __is_arithmetic
GAS LISTING /tmp/ccsIN87E.s 			page 630


 329:/usr/include/c++/6/bits/cpp_type_traits.h ****     : public __traitor<__is_integer<_Tp>, __is_floating<_Tp> >
 330:/usr/include/c++/6/bits/cpp_type_traits.h ****     { };
 331:/usr/include/c++/6/bits/cpp_type_traits.h **** 
 332:/usr/include/c++/6/bits/cpp_type_traits.h ****   //
 333:/usr/include/c++/6/bits/cpp_type_traits.h ****   // A scalar type is an arithmetic type or a pointer type
 334:/usr/include/c++/6/bits/cpp_type_traits.h ****   // 
 335:/usr/include/c++/6/bits/cpp_type_traits.h ****   template<typename _Tp>
 336:/usr/include/c++/6/bits/cpp_type_traits.h ****     struct __is_scalar
 337:/usr/include/c++/6/bits/cpp_type_traits.h ****     : public __traitor<__is_arithmetic<_Tp>, __is_pointer<_Tp> >
 338:/usr/include/c++/6/bits/cpp_type_traits.h ****     { };
 339:/usr/include/c++/6/bits/cpp_type_traits.h **** 
 340:/usr/include/c++/6/bits/cpp_type_traits.h ****   //
 341:/usr/include/c++/6/bits/cpp_type_traits.h ****   // For use in std::copy and std::find overloads for streambuf iterators.
 342:/usr/include/c++/6/bits/cpp_type_traits.h ****   //
 343:/usr/include/c++/6/bits/cpp_type_traits.h ****   template<typename _Tp>
 344:/usr/include/c++/6/bits/cpp_type_traits.h ****     struct __is_char
 345:/usr/include/c++/6/bits/cpp_type_traits.h ****     {
 346:/usr/include/c++/6/bits/cpp_type_traits.h ****       enum { __value = 0 };
 347:/usr/include/c++/6/bits/cpp_type_traits.h ****       typedef __false_type __type;
 348:/usr/include/c++/6/bits/cpp_type_traits.h ****     };
 349:/usr/include/c++/6/bits/cpp_type_traits.h **** 
 350:/usr/include/c++/6/bits/cpp_type_traits.h ****   template<>
 351:/usr/include/c++/6/bits/cpp_type_traits.h ****     struct __is_char<char>
 352:/usr/include/c++/6/bits/cpp_type_traits.h ****     {
 353:/usr/include/c++/6/bits/cpp_type_traits.h ****       enum { __value = 1 };
 354:/usr/include/c++/6/bits/cpp_type_traits.h ****       typedef __true_type __type;
 355:/usr/include/c++/6/bits/cpp_type_traits.h ****     };
 356:/usr/include/c++/6/bits/cpp_type_traits.h **** 
 357:/usr/include/c++/6/bits/cpp_type_traits.h **** #ifdef _GLIBCXX_USE_WCHAR_T
 358:/usr/include/c++/6/bits/cpp_type_traits.h ****   template<>
 359:/usr/include/c++/6/bits/cpp_type_traits.h ****     struct __is_char<wchar_t>
 360:/usr/include/c++/6/bits/cpp_type_traits.h ****     {
 361:/usr/include/c++/6/bits/cpp_type_traits.h ****       enum { __value = 1 };
 362:/usr/include/c++/6/bits/cpp_type_traits.h ****       typedef __true_type __type;
 363:/usr/include/c++/6/bits/cpp_type_traits.h ****     };
 364:/usr/include/c++/6/bits/cpp_type_traits.h **** #endif
 365:/usr/include/c++/6/bits/cpp_type_traits.h **** 
 366:/usr/include/c++/6/bits/cpp_type_traits.h ****   template<typename _Tp>
 367:/usr/include/c++/6/bits/cpp_type_traits.h ****     struct __is_byte
 368:/usr/include/c++/6/bits/cpp_type_traits.h ****     {
 369:/usr/include/c++/6/bits/cpp_type_traits.h ****       enum { __value = 0 };
 370:/usr/include/c++/6/bits/cpp_type_traits.h ****       typedef __false_type __type;
 371:/usr/include/c++/6/bits/cpp_type_traits.h ****     };
 372:/usr/include/c++/6/bits/cpp_type_traits.h **** 
 373:/usr/include/c++/6/bits/cpp_type_traits.h ****   template<>
 374:/usr/include/c++/6/bits/cpp_type_traits.h ****     struct __is_byte<char>
 375:/usr/include/c++/6/bits/cpp_type_traits.h ****     {
 376:/usr/include/c++/6/bits/cpp_type_traits.h ****       enum { __value = 1 };
 377:/usr/include/c++/6/bits/cpp_type_traits.h ****       typedef __true_type __type;
 378:/usr/include/c++/6/bits/cpp_type_traits.h ****     };
 379:/usr/include/c++/6/bits/cpp_type_traits.h **** 
 380:/usr/include/c++/6/bits/cpp_type_traits.h ****   template<>
 381:/usr/include/c++/6/bits/cpp_type_traits.h ****     struct __is_byte<signed char>
 382:/usr/include/c++/6/bits/cpp_type_traits.h ****     {
 383:/usr/include/c++/6/bits/cpp_type_traits.h ****       enum { __value = 1 };
 384:/usr/include/c++/6/bits/cpp_type_traits.h ****       typedef __true_type __type;
 385:/usr/include/c++/6/bits/cpp_type_traits.h ****     };
GAS LISTING /tmp/ccsIN87E.s 			page 631


 386:/usr/include/c++/6/bits/cpp_type_traits.h **** 
 387:/usr/include/c++/6/bits/cpp_type_traits.h ****   template<>
 388:/usr/include/c++/6/bits/cpp_type_traits.h ****     struct __is_byte<unsigned char>
 389:/usr/include/c++/6/bits/cpp_type_traits.h ****     {
 390:/usr/include/c++/6/bits/cpp_type_traits.h ****       enum { __value = 1 };
 391:/usr/include/c++/6/bits/cpp_type_traits.h ****       typedef __true_type __type;
 392:/usr/include/c++/6/bits/cpp_type_traits.h ****     };
 393:/usr/include/c++/6/bits/cpp_type_traits.h **** 
 394:/usr/include/c++/6/bits/cpp_type_traits.h ****   //
 395:/usr/include/c++/6/bits/cpp_type_traits.h ****   // Move iterator type
 396:/usr/include/c++/6/bits/cpp_type_traits.h ****   //
 397:/usr/include/c++/6/bits/cpp_type_traits.h ****   template<typename _Tp>
 398:/usr/include/c++/6/bits/cpp_type_traits.h ****     struct __is_move_iterator
 399:/usr/include/c++/6/bits/cpp_type_traits.h ****     {
 400:/usr/include/c++/6/bits/cpp_type_traits.h ****       enum { __value = 0 };
 401:/usr/include/c++/6/bits/cpp_type_traits.h ****       typedef __false_type __type;
 402:/usr/include/c++/6/bits/cpp_type_traits.h ****     };
 403:/usr/include/c++/6/bits/cpp_type_traits.h **** 
 404:/usr/include/c++/6/bits/cpp_type_traits.h ****   // Fallback implementation of the function in bits/stl_iterator.h used to
 405:/usr/include/c++/6/bits/cpp_type_traits.h ****   // remove the move_iterator wrapper.
 406:/usr/include/c++/6/bits/cpp_type_traits.h ****   template<typename _Iterator>
 407:/usr/include/c++/6/bits/cpp_type_traits.h ****     inline _Iterator
 408:/usr/include/c++/6/bits/cpp_type_traits.h ****     __miter_base(_Iterator __it)
 15546              		.loc 47 408 0
 15547              		.cfi_startproc
 15548 0000 55       		pushq	%rbp
 15549              		.cfi_def_cfa_offset 16
 15550              		.cfi_offset 6, -16
 15551 0001 4889E5   		movq	%rsp, %rbp
 15552              		.cfi_def_cfa_register 6
 15553 0004 48897DF8 		movq	%rdi, -8(%rbp)
 409:/usr/include/c++/6/bits/cpp_type_traits.h ****     { return __it; }
 15554              		.loc 47 409 0
 15555 0008 488B45F8 		movq	-8(%rbp), %rax
 15556 000c 5D       		popq	%rbp
 15557              		.cfi_def_cfa 7, 8
 15558 000d C3       		ret
 15559              		.cfi_endproc
 15560              	.LFE14690:
 15562              		.section	.text._ZSt14__copy_move_a2ILb1EN9__gnu_cxx17__normal_iteratorIPN2gr5tag_tESt6vectorIS3_Sa
 15563              		.weak	_ZSt14__copy_move_a2ILb1EN9__gnu_cxx17__normal_iteratorIPN2gr5tag_tESt6vectorIS3_SaIS3_EEEES
 15565              	_ZSt14__copy_move_a2ILb1EN9__gnu_cxx17__normal_iteratorIPN2gr5tag_tESt6vectorIS3_SaIS3_EEEES8_ET1_T
 15566              	.LFB14691:
 420:/usr/include/c++/6/bits/stl_algobase.h ****     {
 15567              		.loc 44 420 0
 15568              		.cfi_startproc
 15569 0000 55       		pushq	%rbp
 15570              		.cfi_def_cfa_offset 16
 15571              		.cfi_offset 6, -16
 15572 0001 4889E5   		movq	%rsp, %rbp
 15573              		.cfi_def_cfa_register 6
 15574 0004 4154     		pushq	%r12
 15575 0006 53       		pushq	%rbx
 15576 0007 4883EC30 		subq	$48, %rsp
 15577              		.cfi_offset 12, -24
 15578              		.cfi_offset 3, -32
 15579 000b 48897DD8 		movq	%rdi, -40(%rbp)
GAS LISTING /tmp/ccsIN87E.s 			page 632


 15580 000f 488975D0 		movq	%rsi, -48(%rbp)
 15581 0013 488955C8 		movq	%rdx, -56(%rbp)
 422:/usr/include/c++/6/bits/stl_algobase.h **** 					     std::__niter_base(__last),
 15582              		.loc 44 422 0
 15583 0017 488B45C8 		movq	-56(%rbp), %rax
 15584 001b 4889C7   		movq	%rax, %rdi
 15585 001e E8000000 		call	_ZSt12__niter_baseIPN2gr5tag_tESt6vectorIS1_SaIS1_EEET_N9__gnu_cxx17__normal_iteratorIS6_T0_E
 15585      00
 15586 0023 4989C4   		movq	%rax, %r12
 15587 0026 488B45D0 		movq	-48(%rbp), %rax
 15588 002a 4889C7   		movq	%rax, %rdi
 15589 002d E8000000 		call	_ZSt12__niter_baseIPN2gr5tag_tESt6vectorIS1_SaIS1_EEET_N9__gnu_cxx17__normal_iteratorIS6_T0_E
 15589      00
 15590 0032 4889C3   		movq	%rax, %rbx
 15591 0035 488B45D8 		movq	-40(%rbp), %rax
 15592 0039 4889C7   		movq	%rax, %rdi
 15593 003c E8000000 		call	_ZSt12__niter_baseIPN2gr5tag_tESt6vectorIS1_SaIS1_EEET_N9__gnu_cxx17__normal_iteratorIS6_T0_E
 15593      00
 15594 0041 4C89E2   		movq	%r12, %rdx
 15595 0044 4889DE   		movq	%rbx, %rsi
 15596 0047 4889C7   		movq	%rax, %rdi
 15597 004a E8000000 		call	_ZSt13__copy_move_aILb1EPN2gr5tag_tES2_ET1_T0_S4_S3_
 15597      00
 15598 004f 488945E8 		movq	%rax, -24(%rbp)
 424:/usr/include/c++/6/bits/stl_algobase.h ****     }
 15599              		.loc 44 424 0
 15600 0053 488D55E8 		leaq	-24(%rbp), %rdx
 15601 0057 488D45E0 		leaq	-32(%rbp), %rax
 15602 005b 4889D6   		movq	%rdx, %rsi
 15603 005e 4889C7   		movq	%rax, %rdi
 15604 0061 E8000000 		call	_ZN9__gnu_cxx17__normal_iteratorIPN2gr5tag_tESt6vectorIS2_SaIS2_EEEC1ERKS3_
 15604      00
 15605 0066 488B45E0 		movq	-32(%rbp), %rax
 425:/usr/include/c++/6/bits/stl_algobase.h **** 
 15606              		.loc 44 425 0
 15607 006a 4883C430 		addq	$48, %rsp
 15608 006e 5B       		popq	%rbx
 15609 006f 415C     		popq	%r12
 15610 0071 5D       		popq	%rbp
 15611              		.cfi_def_cfa 7, 8
 15612 0072 C3       		ret
 15613              		.cfi_endproc
 15614              	.LFE14691:
 15616              		.section	.text._ZN9__gnu_cxx13new_allocatorIN2gr5tag_tEE7destroyIS2_EEvPT_,"axG",@progbits,_ZN9__g
 15617              		.align 2
 15618              		.weak	_ZN9__gnu_cxx13new_allocatorIN2gr5tag_tEE7destroyIS2_EEvPT_
 15620              	_ZN9__gnu_cxx13new_allocatorIN2gr5tag_tEE7destroyIS2_EEvPT_:
 15621              	.LFB14692:
  87:/usr/include/c++/6/ext/new_allocator.h **** 
  88:/usr/include/c++/6/ext/new_allocator.h ****       pointer
  89:/usr/include/c++/6/ext/new_allocator.h ****       address(reference __x) const _GLIBCXX_NOEXCEPT
  90:/usr/include/c++/6/ext/new_allocator.h ****       { return std::__addressof(__x); }
  91:/usr/include/c++/6/ext/new_allocator.h **** 
  92:/usr/include/c++/6/ext/new_allocator.h ****       const_pointer
  93:/usr/include/c++/6/ext/new_allocator.h ****       address(const_reference __x) const _GLIBCXX_NOEXCEPT
  94:/usr/include/c++/6/ext/new_allocator.h ****       { return std::__addressof(__x); }
  95:/usr/include/c++/6/ext/new_allocator.h **** 
GAS LISTING /tmp/ccsIN87E.s 			page 633


  96:/usr/include/c++/6/ext/new_allocator.h ****       // NB: __n is permitted to be 0.  The C++ standard says nothing
  97:/usr/include/c++/6/ext/new_allocator.h ****       // about what the return value is when __n == 0.
  98:/usr/include/c++/6/ext/new_allocator.h ****       pointer
  99:/usr/include/c++/6/ext/new_allocator.h ****       allocate(size_type __n, const void* = 0)
 100:/usr/include/c++/6/ext/new_allocator.h ****       { 
 101:/usr/include/c++/6/ext/new_allocator.h **** 	if (__n > this->max_size())
 102:/usr/include/c++/6/ext/new_allocator.h **** 	  std::__throw_bad_alloc();
 103:/usr/include/c++/6/ext/new_allocator.h **** 
 104:/usr/include/c++/6/ext/new_allocator.h **** 	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
 105:/usr/include/c++/6/ext/new_allocator.h ****       }
 106:/usr/include/c++/6/ext/new_allocator.h **** 
 107:/usr/include/c++/6/ext/new_allocator.h ****       // __p is not permitted to be a null pointer.
 108:/usr/include/c++/6/ext/new_allocator.h ****       void
 109:/usr/include/c++/6/ext/new_allocator.h ****       deallocate(pointer __p, size_type)
 110:/usr/include/c++/6/ext/new_allocator.h ****       { ::operator delete(__p); }
 111:/usr/include/c++/6/ext/new_allocator.h **** 
 112:/usr/include/c++/6/ext/new_allocator.h ****       size_type
 113:/usr/include/c++/6/ext/new_allocator.h ****       max_size() const _GLIBCXX_USE_NOEXCEPT
 114:/usr/include/c++/6/ext/new_allocator.h ****       { return size_t(-1) / sizeof(_Tp); }
 115:/usr/include/c++/6/ext/new_allocator.h **** 
 116:/usr/include/c++/6/ext/new_allocator.h **** #if __cplusplus >= 201103L
 117:/usr/include/c++/6/ext/new_allocator.h ****       template<typename _Up, typename... _Args>
 118:/usr/include/c++/6/ext/new_allocator.h ****         void
 119:/usr/include/c++/6/ext/new_allocator.h ****         construct(_Up* __p, _Args&&... __args)
 120:/usr/include/c++/6/ext/new_allocator.h **** 	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
 121:/usr/include/c++/6/ext/new_allocator.h **** 
 122:/usr/include/c++/6/ext/new_allocator.h ****       template<typename _Up>
 123:/usr/include/c++/6/ext/new_allocator.h ****         void 
 124:/usr/include/c++/6/ext/new_allocator.h ****         destroy(_Up* __p) { __p->~_Up(); }
 15622              		.loc 43 124 0
 15623              		.cfi_startproc
 15624 0000 55       		pushq	%rbp
 15625              		.cfi_def_cfa_offset 16
 15626              		.cfi_offset 6, -16
 15627 0001 4889E5   		movq	%rsp, %rbp
 15628              		.cfi_def_cfa_register 6
 15629 0004 4883EC10 		subq	$16, %rsp
 15630 0008 48897DF8 		movq	%rdi, -8(%rbp)
 15631 000c 488975F0 		movq	%rsi, -16(%rbp)
 15632              		.loc 43 124 0
 15633 0010 488B45F0 		movq	-16(%rbp), %rax
 15634 0014 4889C7   		movq	%rax, %rdi
 15635 0017 E8000000 		call	_ZN2gr5tag_tD1Ev
 15635      00
 15636 001c 90       		nop
 15637 001d C9       		leave
 15638              		.cfi_def_cfa 7, 8
 15639 001e C3       		ret
 15640              		.cfi_endproc
 15641              	.LFE14692:
 15643              		.section	.text._ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFv
 15644              		.align 2
 15645              		.weak	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt
 15647              	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt10_Sele
 15648              	.LFB14805:
 491:/usr/include/c++/6/bits/stl_tree.h ****       { return *static_cast<_Node_allocator*>(&this->_M_impl); }
 15649              		.loc 27 491 0
GAS LISTING /tmp/ccsIN87E.s 			page 634


 15650              		.cfi_startproc
 15651 0000 55       		pushq	%rbp
 15652              		.cfi_def_cfa_offset 16
 15653              		.cfi_offset 6, -16
 15654 0001 4889E5   		movq	%rsp, %rbp
 15655              		.cfi_def_cfa_register 6
 15656 0004 48897DF8 		movq	%rdi, -8(%rbp)
 492:/usr/include/c++/6/bits/stl_tree.h ****       
 15657              		.loc 27 492 0
 15658 0008 488B45F8 		movq	-8(%rbp), %rax
 15659 000c 5D       		popq	%rbp
 15660              		.cfi_def_cfa 7, 8
 15661 000d C3       		ret
 15662              		.cfi_endproc
 15663              	.LFE14805:
 15665              		.section	.text._ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKN5boost13intrusive_ptrIN3pmt8
 15666              		.weak	_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseE
 15668              	_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS2_8
 15669              	.LFB14806:
 486:/usr/include/c++/6/bits/alloc_traits.h **** 	{ __a.destroy(__p); }
 15670              		.loc 42 486 0
 15671              		.cfi_startproc
 15672 0000 55       		pushq	%rbp
 15673              		.cfi_def_cfa_offset 16
 15674              		.cfi_offset 6, -16
 15675 0001 4889E5   		movq	%rsp, %rbp
 15676              		.cfi_def_cfa_register 6
 15677 0004 4883EC10 		subq	$16, %rsp
 15678 0008 48897DF8 		movq	%rdi, -8(%rbp)
 15679 000c 488975F0 		movq	%rsi, -16(%rbp)
 487:/usr/include/c++/6/bits/alloc_traits.h **** 
 15680              		.loc 42 487 0
 15681 0010 488B55F0 		movq	-16(%rbp), %rdx
 15682 0014 488B45F8 		movq	-8(%rbp), %rax
 15683 0018 4889D6   		movq	%rdx, %rsi
 15684 001b 4889C7   		movq	%rax, %rdi
 15685 001e E8000000 		call	_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_base
 15685      00
 15686 0023 90       		nop
 15687 0024 C9       		leave
 15688              		.cfi_def_cfa 7, 8
 15689 0025 C3       		ret
 15690              		.cfi_endproc
 15691              	.LFE14806:
 15693              		.section	.text._ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKN5boost13intrusive_ptrIN3pmt8
 15694              		.weak	_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseE
 15696              	_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS2_8
 15697              	.LFB14807:
 461:/usr/include/c++/6/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 15698              		.loc 42 461 0
 15699              		.cfi_startproc
 15700 0000 55       		pushq	%rbp
 15701              		.cfi_def_cfa_offset 16
 15702              		.cfi_offset 6, -16
 15703 0001 4889E5   		movq	%rsp, %rbp
 15704              		.cfi_def_cfa_register 6
 15705 0004 4883EC20 		subq	$32, %rsp
GAS LISTING /tmp/ccsIN87E.s 			page 635


 15706 0008 48897DF8 		movq	%rdi, -8(%rbp)
 15707 000c 488975F0 		movq	%rsi, -16(%rbp)
 15708 0010 488955E8 		movq	%rdx, -24(%rbp)
 462:/usr/include/c++/6/bits/alloc_traits.h **** 
 15709              		.loc 42 462 0
 15710 0014 488B55E8 		movq	-24(%rbp), %rdx
 15711 0018 488B4DF0 		movq	-16(%rbp), %rcx
 15712 001c 488B45F8 		movq	-8(%rbp), %rax
 15713 0020 4889CE   		movq	%rcx, %rsi
 15714 0023 4889C7   		movq	%rax, %rdi
 15715 0026 E8000000 		call	_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_base
 15715      00
 15716 002b 90       		nop
 15717 002c C9       		leave
 15718              		.cfi_def_cfa 7, 8
 15719 002d C3       		ret
 15720              		.cfi_endproc
 15721              	.LFE14807:
 15723              		.section	.text._ZNKSt13_Rb_tree_nodeISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS1_8functio
 15724              		.align 2
 15725              		.weak	_ZNKSt13_Rb_tree_nodeISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS1_8functionIFvS5_EE
 15727              	_ZNKSt13_Rb_tree_nodeISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS1_8functionIFvS5_EEEEE9_M_
 15728              	.LFB14827:
 160:/usr/include/c++/6/bits/stl_tree.h ****       { return _M_storage._M_ptr(); }
 15729              		.loc 27 160 0
 15730              		.cfi_startproc
 15731 0000 55       		pushq	%rbp
 15732              		.cfi_def_cfa_offset 16
 15733              		.cfi_offset 6, -16
 15734 0001 4889E5   		movq	%rsp, %rbp
 15735              		.cfi_def_cfa_register 6
 15736 0004 4883EC10 		subq	$16, %rsp
 15737 0008 48897DF8 		movq	%rdi, -8(%rbp)
 161:/usr/include/c++/6/bits/stl_tree.h **** #endif
 15738              		.loc 27 161 0
 15739 000c 488B45F8 		movq	-8(%rbp), %rax
 15740 0010 4883C020 		addq	$32, %rax
 15741 0014 4889C7   		movq	%rax, %rdi
 15742 0017 E8000000 		call	_ZNK9__gnu_cxx16__aligned_membufISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS2_8functi
 15742      00
 15743 001c C9       		leave
 15744              		.cfi_def_cfa 7, 8
 15745 001d C3       		ret
 15746              		.cfi_endproc
 15747              	.LFE14827:
 15749              		.section	.text._ZN9__gnu_cxx16__aligned_membufISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS
 15750              		.align 2
 15751              		.weak	_ZN9__gnu_cxx16__aligned_membufISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS2_8functi
 15753              	_ZN9__gnu_cxx16__aligned_membufISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS2_8functionIFvS6
 15754              	.LFB14828:
  62:/usr/include/c++/6/ext/aligned_buffer.h ****       { return static_cast<void*>(&_M_storage); }
 15755              		.loc 46 62 0
 15756              		.cfi_startproc
 15757 0000 55       		pushq	%rbp
 15758              		.cfi_def_cfa_offset 16
 15759              		.cfi_offset 6, -16
 15760 0001 4889E5   		movq	%rsp, %rbp
GAS LISTING /tmp/ccsIN87E.s 			page 636


 15761              		.cfi_def_cfa_register 6
 15762 0004 48897DF8 		movq	%rdi, -8(%rbp)
  63:/usr/include/c++/6/ext/aligned_buffer.h **** 
 15763              		.loc 46 63 0
 15764 0008 488B45F8 		movq	-8(%rbp), %rax
 15765 000c 5D       		popq	%rbp
 15766              		.cfi_def_cfa 7, 8
 15767 000d C3       		ret
 15768              		.cfi_endproc
 15769              	.LFE14828:
 15771              		.section	.text._ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKN5boost13intrusive_ptrIN3pmt8
 15772              		.weak	_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseE
 15774              	_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS2_8
 15775              	.LFB14829:
 435:/usr/include/c++/6/bits/alloc_traits.h ****       { return __a.allocate(__n); }
 15776              		.loc 42 435 0
 15777              		.cfi_startproc
 15778 0000 55       		pushq	%rbp
 15779              		.cfi_def_cfa_offset 16
 15780              		.cfi_offset 6, -16
 15781 0001 4889E5   		movq	%rsp, %rbp
 15782              		.cfi_def_cfa_register 6
 15783 0004 4883EC10 		subq	$16, %rsp
 15784 0008 48897DF8 		movq	%rdi, -8(%rbp)
 15785 000c 488975F0 		movq	%rsi, -16(%rbp)
 436:/usr/include/c++/6/bits/alloc_traits.h **** 
 15786              		.loc 42 436 0
 15787 0010 488B4DF0 		movq	-16(%rbp), %rcx
 15788 0014 488B45F8 		movq	-8(%rbp), %rax
 15789 0018 BA000000 		movl	$0, %edx
 15789      00
 15790 001d 4889CE   		movq	%rcx, %rsi
 15791 0020 4889C7   		movq	%rax, %rdi
 15792 0023 E8000000 		call	_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_base
 15792      00
 15793 0028 C9       		leave
 15794              		.cfi_def_cfa 7, 8
 15795 0029 C3       		ret
 15796              		.cfi_endproc
 15797              	.LFE14829:
 15799              		.section	.text._ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKN5boost13intrusive_ptrIN3pmt8
 15800              		.weak	_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseE
 15802              	_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS2_8
 15803              	.LFB14830:
 474:/usr/include/c++/6/bits/alloc_traits.h **** 	{ __a.construct(__p, std::forward<_Args>(__args)...); }
 15804              		.loc 42 474 0
 15805              		.cfi_startproc
 15806 0000 55       		pushq	%rbp
 15807              		.cfi_def_cfa_offset 16
 15808              		.cfi_offset 6, -16
 15809 0001 4889E5   		movq	%rsp, %rbp
 15810              		.cfi_def_cfa_register 6
 15811 0004 4154     		pushq	%r12
 15812 0006 53       		pushq	%rbx
 15813 0007 4883EC30 		subq	$48, %rsp
 15814              		.cfi_offset 12, -24
 15815              		.cfi_offset 3, -32
GAS LISTING /tmp/ccsIN87E.s 			page 637


 15816 000b 48897DE8 		movq	%rdi, -24(%rbp)
 15817 000f 488975E0 		movq	%rsi, -32(%rbp)
 15818 0013 488955D8 		movq	%rdx, -40(%rbp)
 15819 0017 48894DD0 		movq	%rcx, -48(%rbp)
 15820 001b 4C8945C8 		movq	%r8, -56(%rbp)
 475:/usr/include/c++/6/bits/alloc_traits.h **** 
 15821              		.loc 42 475 0
 15822 001f 488B45C8 		movq	-56(%rbp), %rax
 15823 0023 4889C7   		movq	%rax, %rdi
 15824 0026 E8000000 		call	_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE
 15824      00
 15825 002b 4989C4   		movq	%rax, %r12
 15826 002e 488B45D0 		movq	-48(%rbp), %rax
 15827 0032 4889C7   		movq	%rax, %rdi
 15828 0035 E8000000 		call	_ZSt7forwardISt5tupleIJRKN5boost13intrusive_ptrIN3pmt8pmt_baseEEEEEEOT_RNSt16remove_reference
 15828      00
 15829 003a 4889C3   		movq	%rax, %rbx
 15830 003d 488B45D8 		movq	-40(%rbp), %rax
 15831 0041 4889C7   		movq	%rax, %rdi
 15832 0044 E8000000 		call	_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE
 15832      00
 15833 0049 4889C2   		movq	%rax, %rdx
 15834 004c 488B75E0 		movq	-32(%rbp), %rsi
 15835 0050 488B45E8 		movq	-24(%rbp), %rax
 15836 0054 4D89E0   		movq	%r12, %r8
 15837 0057 4889D9   		movq	%rbx, %rcx
 15838 005a 4889C7   		movq	%rax, %rdi
 15839 005d E8000000 		call	_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_base
 15839      00
 15840 0062 90       		nop
 15841 0063 4883C430 		addq	$48, %rsp
 15842 0067 5B       		popq	%rbx
 15843 0068 415C     		popq	%r12
 15844 006a 5D       		popq	%rbp
 15845              		.cfi_def_cfa 7, 8
 15846 006b C3       		ret
 15847              		.cfi_endproc
 15848              	.LFE14830:
 15850              		.section	.text._ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFv
 15851              		.align 2
 15852              		.weak	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt
 15854              	_ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt10_Sele
 15855              	.LFB14831:
 884:/usr/include/c++/6/bits/stl_tree.h ****       { return iterator(this->_M_impl._M_header._M_left); }
 15856              		.loc 27 884 0
 15857              		.cfi_startproc
 15858 0000 55       		pushq	%rbp
 15859              		.cfi_def_cfa_offset 16
 15860              		.cfi_offset 6, -16
 15861 0001 4889E5   		movq	%rsp, %rbp
 15862              		.cfi_def_cfa_register 6
 15863 0004 4883EC20 		subq	$32, %rsp
 15864 0008 48897DE8 		movq	%rdi, -24(%rbp)
 885:/usr/include/c++/6/bits/stl_tree.h **** 
 15865              		.loc 27 885 0
 15866 000c 488B45E8 		movq	-24(%rbp), %rax
 15867 0010 488B5018 		movq	24(%rax), %rdx
GAS LISTING /tmp/ccsIN87E.s 			page 638


 15868 0014 488D45F8 		leaq	-8(%rbp), %rax
 15869 0018 4889D6   		movq	%rdx, %rsi
 15870 001b 4889C7   		movq	%rax, %rdi
 15871 001e E8000000 		call	_ZNSt17_Rb_tree_iteratorISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS1_8functionIFvS5_
 15871      00
 15872 0023 488B45F8 		movq	-8(%rbp), %rax
 15873 0027 C9       		leave
 15874              		.cfi_def_cfa 7, 8
 15875 0028 C3       		ret
 15876              		.cfi_endproc
 15877              	.LFE14831:
 15879              		.section	.text._ZNKSt13_Rb_tree_nodeISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt5dequeIS5_
 15880              		.align 2
 15881              		.weak	_ZNKSt13_Rb_tree_nodeISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt5dequeIS5_SaIS5_EEE
 15883              	_ZNKSt13_Rb_tree_nodeISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt5dequeIS5_SaIS5_EEEE9_M_va
 15884              	.LFB14835:
 160:/usr/include/c++/6/bits/stl_tree.h ****       { return _M_storage._M_ptr(); }
 15885              		.loc 27 160 0
 15886              		.cfi_startproc
 15887 0000 55       		pushq	%rbp
 15888              		.cfi_def_cfa_offset 16
 15889              		.cfi_offset 6, -16
 15890 0001 4889E5   		movq	%rsp, %rbp
 15891              		.cfi_def_cfa_register 6
 15892 0004 4883EC10 		subq	$16, %rsp
 15893 0008 48897DF8 		movq	%rdi, -8(%rbp)
 161:/usr/include/c++/6/bits/stl_tree.h **** #endif
 15894              		.loc 27 161 0
 15895 000c 488B45F8 		movq	-8(%rbp), %rax
 15896 0010 4883C020 		addq	$32, %rax
 15897 0014 4889C7   		movq	%rax, %rdi
 15898 0017 E8000000 		call	_ZNK9__gnu_cxx16__aligned_membufISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt5dequeIS6
 15898      00
 15899 001c C9       		leave
 15900              		.cfi_def_cfa 7, 8
 15901 001d C3       		ret
 15902              		.cfi_endproc
 15903              	.LFE14835:
 15905              		.section	.text._ZN9__gnu_cxx13new_allocatorIlE10deallocateEPlm,"axG",@progbits,_ZN9__gnu_cxx13new_
 15906              		.align 2
 15907              		.weak	_ZN9__gnu_cxx13new_allocatorIlE10deallocateEPlm
 15909              	_ZN9__gnu_cxx13new_allocatorIlE10deallocateEPlm:
 15910              	.LFB14852:
 109:/usr/include/c++/6/ext/new_allocator.h ****       { ::operator delete(__p); }
 15911              		.loc 43 109 0
 15912              		.cfi_startproc
 15913 0000 55       		pushq	%rbp
 15914              		.cfi_def_cfa_offset 16
 15915              		.cfi_offset 6, -16
 15916 0001 4889E5   		movq	%rsp, %rbp
 15917              		.cfi_def_cfa_register 6
 15918 0004 4883EC20 		subq	$32, %rsp
 15919 0008 48897DF8 		movq	%rdi, -8(%rbp)
 15920 000c 488975F0 		movq	%rsi, -16(%rbp)
 15921 0010 488955E8 		movq	%rdx, -24(%rbp)
 110:/usr/include/c++/6/ext/new_allocator.h **** 
 15922              		.loc 43 110 0
GAS LISTING /tmp/ccsIN87E.s 			page 639


 15923 0014 488B45F0 		movq	-16(%rbp), %rax
 15924 0018 4889C7   		movq	%rax, %rdi
 15925 001b E8000000 		call	_ZdlPv@PLT
 15925      00
 15926 0020 90       		nop
 15927 0021 C9       		leave
 15928              		.cfi_def_cfa 7, 8
 15929 0022 C3       		ret
 15930              		.cfi_endproc
 15931              	.LFE14852:
 15933              		.section	.text._ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_all
 15934              		.align 2
 15935              		.weak	_ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEEC2
 15937              	_ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEEC2EPS5_:
 15938              	.LFB14919:
 15939              		.file 48 "/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp"
   1:/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp **** #ifndef BOOST_SMART_PTR_DETAIL_SP_COUNTED_IMPL_HPP_INCLUDED
   2:/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp **** #define BOOST_SMART_PTR_DETAIL_SP_COUNTED_IMPL_HPP_INCLUDED
   3:/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp **** 
   4:/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp **** // MS compatible compilers support #pragma once
   5:/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp **** 
   6:/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp **** #if defined(_MSC_VER) && (_MSC_VER >= 1020)
   7:/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp **** # pragma once
   8:/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp **** #endif
   9:/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp **** 
  10:/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp **** //
  11:/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp **** //  detail/sp_counted_impl.hpp
  12:/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp **** //
  13:/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp **** //  Copyright (c) 2001, 2002, 2003 Peter Dimov and Multi Media Ltd.
  14:/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp **** //  Copyright 2004-2005 Peter Dimov
  15:/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp **** //
  16:/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp **** // Distributed under the Boost Software License, Version 1.0. (See
  17:/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp **** // accompanying file LICENSE_1_0.txt or copy at
  18:/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp **** // http://www.boost.org/LICENSE_1_0.txt)
  19:/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp **** //
  20:/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp **** 
  21:/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp **** #include <boost/config.hpp>
  22:/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp **** 
  23:/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp **** #if defined(BOOST_SP_USE_STD_ALLOCATOR) && defined(BOOST_SP_USE_QUICK_ALLOCATOR)
  24:/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp **** # error BOOST_SP_USE_STD_ALLOCATOR and BOOST_SP_USE_QUICK_ALLOCATOR are incompatible.
  25:/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp **** #endif
  26:/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp **** 
  27:/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp **** #include <boost/checked_delete.hpp>
  28:/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp **** #include <boost/smart_ptr/detail/sp_counted_base.hpp>
  29:/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp **** 
  30:/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp **** #if defined(BOOST_SP_USE_QUICK_ALLOCATOR)
  31:/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp **** #include <boost/smart_ptr/detail/quick_allocator.hpp>
  32:/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp **** #endif
  33:/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp **** 
  34:/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp **** #if defined(BOOST_SP_USE_STD_ALLOCATOR)
  35:/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp **** #include <memory>           // std::allocator
  36:/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp **** #endif
  37:/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp **** 
  38:/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp **** #include <cstddef>          // std::size_t
  39:/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp **** 
  40:/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp **** namespace boost
  41:/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp **** {
GAS LISTING /tmp/ccsIN87E.s 			page 640


  42:/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp **** 
  43:/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp **** #if defined(BOOST_SP_ENABLE_DEBUG_HOOKS)
  44:/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp **** 
  45:/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp **** void sp_scalar_constructor_hook( void * px, std::size_t size, void * pn );
  46:/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp **** void sp_scalar_destructor_hook( void * px, std::size_t size, void * pn );
  47:/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp **** 
  48:/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp **** #endif
  49:/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp **** 
  50:/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp **** namespace detail
  51:/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp **** {
  52:/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp **** 
  53:/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp **** template<class X> class sp_counted_impl_p: public sp_counted_base
  54:/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp **** {
  55:/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp **** private:
  56:/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp **** 
  57:/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp ****     X * px_;
  58:/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp **** 
  59:/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp ****     sp_counted_impl_p( sp_counted_impl_p const & );
  60:/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp ****     sp_counted_impl_p & operator= ( sp_counted_impl_p const & );
  61:/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp **** 
  62:/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp ****     typedef sp_counted_impl_p<X> this_type;
  63:/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp **** 
  64:/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp **** public:
  65:/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp **** 
  66:/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp ****     explicit sp_counted_impl_p( X * px ): px_( px )
 15940              		.loc 48 66 0
 15941              		.cfi_startproc
 15942 0000 55       		pushq	%rbp
 15943              		.cfi_def_cfa_offset 16
 15944              		.cfi_offset 6, -16
 15945 0001 4889E5   		movq	%rsp, %rbp
 15946              		.cfi_def_cfa_register 6
 15947 0004 4883EC10 		subq	$16, %rsp
 15948 0008 48897DF8 		movq	%rdi, -8(%rbp)
 15949 000c 488975F0 		movq	%rsi, -16(%rbp)
 15950              	.LBB143:
 15951              		.loc 48 66 0
 15952 0010 488B45F8 		movq	-8(%rbp), %rax
 15953 0014 4889C7   		movq	%rax, %rdi
 15954 0017 E8000000 		call	_ZN5boost6detail15sp_counted_baseC2Ev
 15954      00
 15955 001c 488D1500 		leaq	16+_ZTVN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EE
 15955      000000
 15956 0023 488B45F8 		movq	-8(%rbp), %rax
 15957 0027 488910   		movq	%rdx, (%rax)
 15958 002a 488B45F8 		movq	-8(%rbp), %rax
 15959 002e 488B55F0 		movq	-16(%rbp), %rdx
 15960 0032 48895010 		movq	%rdx, 16(%rax)
 15961              	.LBE143:
  67:/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp ****     {
  68:/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp **** #if defined(BOOST_SP_ENABLE_DEBUG_HOOKS)
  69:/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp ****         boost::sp_scalar_constructor_hook( px, sizeof(X), this );
  70:/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp **** #endif
  71:/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp ****     }
 15962              		.loc 48 71 0
 15963 0036 90       		nop
 15964 0037 C9       		leave
GAS LISTING /tmp/ccsIN87E.s 			page 641


 15965              		.cfi_def_cfa 7, 8
 15966 0038 C3       		ret
 15967              		.cfi_endproc
 15968              	.LFE14919:
 15970              		.weak	_ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEEC1
 15971              		.set	_ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEEC1E
 15972              		.section	.text._ZN5boost14checked_deleteINS_16exception_detail10clone_implINS1_10bad_alloc_EEEEEvP
 15973              		.weak	_ZN5boost14checked_deleteINS_16exception_detail10clone_implINS1_10bad_alloc_EEEEEvPT_
 15975              	_ZN5boost14checked_deleteINS_16exception_detail10clone_implINS1_10bad_alloc_EEEEEvPT_:
 15976              	.LFB14921:
 15977              		.file 49 "/usr/include/boost/core/checked_delete.hpp"
   1:/usr/include/boost/core/checked_delete.hpp **** #ifndef BOOST_CORE_CHECKED_DELETE_HPP
   2:/usr/include/boost/core/checked_delete.hpp **** #define BOOST_CORE_CHECKED_DELETE_HPP
   3:/usr/include/boost/core/checked_delete.hpp **** 
   4:/usr/include/boost/core/checked_delete.hpp **** // MS compatible compilers support #pragma once
   5:/usr/include/boost/core/checked_delete.hpp **** 
   6:/usr/include/boost/core/checked_delete.hpp **** #if defined(_MSC_VER) && (_MSC_VER >= 1020)
   7:/usr/include/boost/core/checked_delete.hpp **** # pragma once
   8:/usr/include/boost/core/checked_delete.hpp **** #endif
   9:/usr/include/boost/core/checked_delete.hpp **** 
  10:/usr/include/boost/core/checked_delete.hpp **** //
  11:/usr/include/boost/core/checked_delete.hpp **** //  boost/checked_delete.hpp
  12:/usr/include/boost/core/checked_delete.hpp **** //
  13:/usr/include/boost/core/checked_delete.hpp **** //  Copyright (c) 2002, 2003 Peter Dimov
  14:/usr/include/boost/core/checked_delete.hpp **** //  Copyright (c) 2003 Daniel Frey
  15:/usr/include/boost/core/checked_delete.hpp **** //  Copyright (c) 2003 Howard Hinnant
  16:/usr/include/boost/core/checked_delete.hpp **** //
  17:/usr/include/boost/core/checked_delete.hpp **** //  Distributed under the Boost Software License, Version 1.0. (See
  18:/usr/include/boost/core/checked_delete.hpp **** //  accompanying file LICENSE_1_0.txt or copy at
  19:/usr/include/boost/core/checked_delete.hpp **** //  http://www.boost.org/LICENSE_1_0.txt)
  20:/usr/include/boost/core/checked_delete.hpp **** //
  21:/usr/include/boost/core/checked_delete.hpp **** //  See http://www.boost.org/libs/core/doc/html/core/checked_delete.html for documentation.
  22:/usr/include/boost/core/checked_delete.hpp **** //
  23:/usr/include/boost/core/checked_delete.hpp **** 
  24:/usr/include/boost/core/checked_delete.hpp **** namespace boost
  25:/usr/include/boost/core/checked_delete.hpp **** {
  26:/usr/include/boost/core/checked_delete.hpp **** 
  27:/usr/include/boost/core/checked_delete.hpp **** // verify that types are complete for increased safety
  28:/usr/include/boost/core/checked_delete.hpp **** 
  29:/usr/include/boost/core/checked_delete.hpp **** template<class T> inline void checked_delete(T * x)
 15978              		.loc 49 29 0
 15979              		.cfi_startproc
 15980 0000 55       		pushq	%rbp
 15981              		.cfi_def_cfa_offset 16
 15982              		.cfi_offset 6, -16
 15983 0001 4889E5   		movq	%rsp, %rbp
 15984              		.cfi_def_cfa_register 6
 15985 0004 4883EC10 		subq	$16, %rsp
 15986 0008 48897DF8 		movq	%rdi, -8(%rbp)
  30:/usr/include/boost/core/checked_delete.hpp **** {
  31:/usr/include/boost/core/checked_delete.hpp ****     // intentionally complex - simplification causes regressions
  32:/usr/include/boost/core/checked_delete.hpp ****     typedef char type_must_be_complete[ sizeof(T)? 1: -1 ];
  33:/usr/include/boost/core/checked_delete.hpp ****     (void) sizeof(type_must_be_complete);
  34:/usr/include/boost/core/checked_delete.hpp ****     delete x;
 15987              		.loc 49 34 0
 15988 000c 48837DF8 		cmpq	$0, -8(%rbp)
 15988      00
GAS LISTING /tmp/ccsIN87E.s 			page 642


 15989 0011 7417     		je	.L800
 15990              		.loc 49 34 0 is_stmt 0 discriminator 1
 15991 0013 488B45F8 		movq	-8(%rbp), %rax
 15992 0017 488B00   		movq	(%rax), %rax
 15993 001a 4883C008 		addq	$8, %rax
 15994 001e 488B00   		movq	(%rax), %rax
 15995 0021 488B55F8 		movq	-8(%rbp), %rdx
 15996 0025 4889D7   		movq	%rdx, %rdi
 15997 0028 FFD0     		call	*%rax
 15998              	.LVL10:
 15999              	.L800:
  35:/usr/include/boost/core/checked_delete.hpp **** }
 16000              		.loc 49 35 0 is_stmt 1
 16001 002a 90       		nop
 16002 002b C9       		leave
 16003              		.cfi_def_cfa 7, 8
 16004 002c C3       		ret
 16005              		.cfi_endproc
 16006              	.LFE14921:
 16008              		.section	.text._ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_14bad_exc
 16009              		.align 2
 16010              		.weak	_ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_14bad_exception_EE
 16012              	_ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_14bad_exception_EEEEC2EPS
 16013              	.LFB14923:
  66:/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp ****     {
 16014              		.loc 48 66 0
 16015              		.cfi_startproc
 16016 0000 55       		pushq	%rbp
 16017              		.cfi_def_cfa_offset 16
 16018              		.cfi_offset 6, -16
 16019 0001 4889E5   		movq	%rsp, %rbp
 16020              		.cfi_def_cfa_register 6
 16021 0004 4883EC10 		subq	$16, %rsp
 16022 0008 48897DF8 		movq	%rdi, -8(%rbp)
 16023 000c 488975F0 		movq	%rsi, -16(%rbp)
 16024              	.LBB144:
  66:/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp ****     {
 16025              		.loc 48 66 0
 16026 0010 488B45F8 		movq	-8(%rbp), %rax
 16027 0014 4889C7   		movq	%rax, %rdi
 16028 0017 E8000000 		call	_ZN5boost6detail15sp_counted_baseC2Ev
 16028      00
 16029 001c 488D1500 		leaq	16+_ZTVN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_14bad_exceptio
 16029      000000
 16030 0023 488B45F8 		movq	-8(%rbp), %rax
 16031 0027 488910   		movq	%rdx, (%rax)
 16032 002a 488B45F8 		movq	-8(%rbp), %rax
 16033 002e 488B55F0 		movq	-16(%rbp), %rdx
 16034 0032 48895010 		movq	%rdx, 16(%rax)
 16035              	.LBE144:
 16036              		.loc 48 71 0
 16037 0036 90       		nop
 16038 0037 C9       		leave
 16039              		.cfi_def_cfa 7, 8
 16040 0038 C3       		ret
 16041              		.cfi_endproc
 16042              	.LFE14923:
GAS LISTING /tmp/ccsIN87E.s 			page 643


 16044              		.weak	_ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_14bad_exception_EE
 16045              		.set	_ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_14bad_exception_EEE
 16046              		.section	.text._ZN5boost14checked_deleteINS_16exception_detail10clone_implINS1_14bad_exception_EEE
 16047              		.weak	_ZN5boost14checked_deleteINS_16exception_detail10clone_implINS1_14bad_exception_EEEEEvPT_
 16049              	_ZN5boost14checked_deleteINS_16exception_detail10clone_implINS1_14bad_exception_EEEEEvPT_:
 16050              	.LFB14925:
  29:/usr/include/boost/core/checked_delete.hpp **** {
 16051              		.loc 49 29 0
 16052              		.cfi_startproc
 16053 0000 55       		pushq	%rbp
 16054              		.cfi_def_cfa_offset 16
 16055              		.cfi_offset 6, -16
 16056 0001 4889E5   		movq	%rsp, %rbp
 16057              		.cfi_def_cfa_register 6
 16058 0004 4883EC10 		subq	$16, %rsp
 16059 0008 48897DF8 		movq	%rdi, -8(%rbp)
  34:/usr/include/boost/core/checked_delete.hpp **** }
 16060              		.loc 49 34 0
 16061 000c 48837DF8 		cmpq	$0, -8(%rbp)
 16061      00
 16062 0011 7417     		je	.L804
  34:/usr/include/boost/core/checked_delete.hpp **** }
 16063              		.loc 49 34 0 is_stmt 0 discriminator 1
 16064 0013 488B45F8 		movq	-8(%rbp), %rax
 16065 0017 488B00   		movq	(%rax), %rax
 16066 001a 4883C008 		addq	$8, %rax
 16067 001e 488B00   		movq	(%rax), %rax
 16068 0021 488B55F8 		movq	-8(%rbp), %rdx
 16069 0025 4889D7   		movq	%rdx, %rdi
 16070 0028 FFD0     		call	*%rax
 16071              	.LVL11:
 16072              	.L804:
 16073              		.loc 49 35 0 is_stmt 1
 16074 002a 90       		nop
 16075 002b C9       		leave
 16076              		.cfi_def_cfa 7, 8
 16077 002c C3       		ret
 16078              		.cfi_endproc
 16079              	.LFE14925:
 16081              		.section	.text._ZNSt16allocator_traitsISaIiEE8allocateERS0_m,"axG",@progbits,_ZNSt16allocator_trai
 16082              		.weak	_ZNSt16allocator_traitsISaIiEE8allocateERS0_m
 16084              	_ZNSt16allocator_traitsISaIiEE8allocateERS0_m:
 16085              	.LFB14965:
 435:/usr/include/c++/6/bits/alloc_traits.h ****       { return __a.allocate(__n); }
 16086              		.loc 42 435 0
 16087              		.cfi_startproc
 16088 0000 55       		pushq	%rbp
 16089              		.cfi_def_cfa_offset 16
 16090              		.cfi_offset 6, -16
 16091 0001 4889E5   		movq	%rsp, %rbp
 16092              		.cfi_def_cfa_register 6
 16093 0004 4883EC10 		subq	$16, %rsp
 16094 0008 48897DF8 		movq	%rdi, -8(%rbp)
 16095 000c 488975F0 		movq	%rsi, -16(%rbp)
 436:/usr/include/c++/6/bits/alloc_traits.h **** 
 16096              		.loc 42 436 0
 16097 0010 488B4DF0 		movq	-16(%rbp), %rcx
GAS LISTING /tmp/ccsIN87E.s 			page 644


 16098 0014 488B45F8 		movq	-8(%rbp), %rax
 16099 0018 BA000000 		movl	$0, %edx
 16099      00
 16100 001d 4889CE   		movq	%rcx, %rsi
 16101 0020 4889C7   		movq	%rax, %rdi
 16102 0023 E8000000 		call	_ZN9__gnu_cxx13new_allocatorIiE8allocateEmPKv
 16102      00
 16103 0028 C9       		leave
 16104              		.cfi_def_cfa 7, 8
 16105 0029 C3       		ret
 16106              		.cfi_endproc
 16107              	.LFE14965:
 16109              		.section	.text._ZN9__gnu_cxx13new_allocatorIiE10deallocateEPim,"axG",@progbits,_ZN9__gnu_cxx13new_
 16110              		.align 2
 16111              		.weak	_ZN9__gnu_cxx13new_allocatorIiE10deallocateEPim
 16113              	_ZN9__gnu_cxx13new_allocatorIiE10deallocateEPim:
 16114              	.LFB14966:
 109:/usr/include/c++/6/ext/new_allocator.h ****       { ::operator delete(__p); }
 16115              		.loc 43 109 0
 16116              		.cfi_startproc
 16117 0000 55       		pushq	%rbp
 16118              		.cfi_def_cfa_offset 16
 16119              		.cfi_offset 6, -16
 16120 0001 4889E5   		movq	%rsp, %rbp
 16121              		.cfi_def_cfa_register 6
 16122 0004 4883EC20 		subq	$32, %rsp
 16123 0008 48897DF8 		movq	%rdi, -8(%rbp)
 16124 000c 488975F0 		movq	%rsi, -16(%rbp)
 16125 0010 488955E8 		movq	%rdx, -24(%rbp)
 110:/usr/include/c++/6/ext/new_allocator.h **** 
 16126              		.loc 43 110 0
 16127 0014 488B45F0 		movq	-16(%rbp), %rax
 16128 0018 4889C7   		movq	%rax, %rdi
 16129 001b E8000000 		call	_ZdlPv@PLT
 16129      00
 16130 0020 90       		nop
 16131 0021 C9       		leave
 16132              		.cfi_def_cfa 7, 8
 16133 0022 C3       		ret
 16134              		.cfi_endproc
 16135              	.LFE14966:
 16137              		.section	.text._ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEPiET0_T_SA_S9_,"axG"
 16138              		.weak	_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEPiET0_T_SA_S9_
 16140              	_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEPiET0_T_SA_S9_:
 16141              	.LFB14967:
 446:/usr/include/c++/6/bits/stl_algobase.h ****     {
 16142              		.loc 44 446 0
 16143              		.cfi_startproc
 16144 0000 55       		pushq	%rbp
 16145              		.cfi_def_cfa_offset 16
 16146              		.cfi_offset 6, -16
 16147 0001 4889E5   		movq	%rsp, %rbp
 16148              		.cfi_def_cfa_register 6
 16149 0004 53       		pushq	%rbx
 16150 0005 4883EC28 		subq	$40, %rsp
 16151              		.cfi_offset 3, -24
 16152 0009 48897DE8 		movq	%rdi, -24(%rbp)
GAS LISTING /tmp/ccsIN87E.s 			page 645


 16153 000d 488975E0 		movq	%rsi, -32(%rbp)
 16154 0011 488955D8 		movq	%rdx, -40(%rbp)
 455:/usr/include/c++/6/bits/stl_algobase.h **** 	       __result));
 16155              		.loc 44 455 0
 16156 0015 488B45E0 		movq	-32(%rbp), %rax
 16157 0019 4889C7   		movq	%rax, %rdi
 16158 001c E8000000 		call	_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEET_S8_
 16158      00
 16159 0021 4889C3   		movq	%rax, %rbx
 16160 0024 488B45E8 		movq	-24(%rbp), %rax
 16161 0028 4889C7   		movq	%rax, %rdi
 16162 002b E8000000 		call	_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEET_S8_
 16162      00
 16163 0030 4889C1   		movq	%rax, %rcx
 456:/usr/include/c++/6/bits/stl_algobase.h ****     }
 16164              		.loc 44 456 0
 16165 0033 488B45D8 		movq	-40(%rbp), %rax
 16166 0037 4889C2   		movq	%rax, %rdx
 16167 003a 4889DE   		movq	%rbx, %rsi
 16168 003d 4889CF   		movq	%rcx, %rdi
 16169 0040 E8000000 		call	_ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEPiET1_T0_SA_S9_
 16169      00
 457:/usr/include/c++/6/bits/stl_algobase.h **** 
 16170              		.loc 44 457 0
 16171 0045 4883C428 		addq	$40, %rsp
 16172 0049 5B       		popq	%rbx
 16173 004a 5D       		popq	%rbp
 16174              		.cfi_def_cfa 7, 8
 16175 004b C3       		ret
 16176              		.cfi_endproc
 16177              	.LFE14967:
 16179              		.section	.text._ZN9__gnu_cxx13new_allocatorIN2gr5tag_tEEC2Ev,"axG",@progbits,_ZN9__gnu_cxx13new_al
 16180              		.align 2
 16181              		.weak	_ZN9__gnu_cxx13new_allocatorIN2gr5tag_tEEC2Ev
 16183              	_ZN9__gnu_cxx13new_allocatorIN2gr5tag_tEEC2Ev:
 16184              	.LFB14972:
  79:/usr/include/c++/6/ext/new_allocator.h **** 
 16185              		.loc 43 79 0
 16186              		.cfi_startproc
 16187 0000 55       		pushq	%rbp
 16188              		.cfi_def_cfa_offset 16
 16189              		.cfi_offset 6, -16
 16190 0001 4889E5   		movq	%rsp, %rbp
 16191              		.cfi_def_cfa_register 6
 16192 0004 48897DF8 		movq	%rdi, -8(%rbp)
  79:/usr/include/c++/6/ext/new_allocator.h **** 
 16193              		.loc 43 79 0
 16194 0008 90       		nop
 16195 0009 5D       		popq	%rbp
 16196              		.cfi_def_cfa 7, 8
 16197 000a C3       		ret
 16198              		.cfi_endproc
 16199              	.LFE14972:
 16201              		.weak	_ZN9__gnu_cxx13new_allocatorIN2gr5tag_tEEC1Ev
 16202              		.set	_ZN9__gnu_cxx13new_allocatorIN2gr5tag_tEEC1Ev,_ZN9__gnu_cxx13new_allocatorIN2gr5tag_tEEC2Ev
 16203              		.section	.text._ZN9__gnu_cxx13new_allocatorIN2gr5tag_tEE10deallocateEPS2_m,"axG",@progbits,_ZN9__g
 16204              		.align 2
GAS LISTING /tmp/ccsIN87E.s 			page 646


 16205              		.weak	_ZN9__gnu_cxx13new_allocatorIN2gr5tag_tEE10deallocateEPS2_m
 16207              	_ZN9__gnu_cxx13new_allocatorIN2gr5tag_tEE10deallocateEPS2_m:
 16208              	.LFB14974:
 109:/usr/include/c++/6/ext/new_allocator.h ****       { ::operator delete(__p); }
 16209              		.loc 43 109 0
 16210              		.cfi_startproc
 16211 0000 55       		pushq	%rbp
 16212              		.cfi_def_cfa_offset 16
 16213              		.cfi_offset 6, -16
 16214 0001 4889E5   		movq	%rsp, %rbp
 16215              		.cfi_def_cfa_register 6
 16216 0004 4883EC20 		subq	$32, %rsp
 16217 0008 48897DF8 		movq	%rdi, -8(%rbp)
 16218 000c 488975F0 		movq	%rsi, -16(%rbp)
 16219 0010 488955E8 		movq	%rdx, -24(%rbp)
 110:/usr/include/c++/6/ext/new_allocator.h **** 
 16220              		.loc 43 110 0
 16221 0014 488B45F0 		movq	-16(%rbp), %rax
 16222 0018 4889C7   		movq	%rax, %rdi
 16223 001b E8000000 		call	_ZdlPv@PLT
 16223      00
 16224 0020 90       		nop
 16225 0021 C9       		leave
 16226              		.cfi_def_cfa 7, 8
 16227 0022 C3       		ret
 16228              		.cfi_endproc
 16229              	.LFE14974:
 16231              		.section	.text._ZSt11__addressofIN2gr5tag_tEEPT_RS2_,"axG",@progbits,_ZSt11__addressofIN2gr5tag_tE
 16232              		.weak	_ZSt11__addressofIN2gr5tag_tEEPT_RS2_
 16234              	_ZSt11__addressofIN2gr5tag_tEEPT_RS2_:
 16235              	.LFB14975:
  47:/usr/include/c++/6/bits/move.h ****     {
 16236              		.loc 33 47 0
 16237              		.cfi_startproc
 16238 0000 55       		pushq	%rbp
 16239              		.cfi_def_cfa_offset 16
 16240              		.cfi_offset 6, -16
 16241 0001 4889E5   		movq	%rsp, %rbp
 16242              		.cfi_def_cfa_register 6
 16243 0004 48897DF8 		movq	%rdi, -8(%rbp)
  50:/usr/include/c++/6/bits/move.h ****     }
 16244              		.loc 33 50 0
 16245 0008 488B45F8 		movq	-8(%rbp), %rax
  51:/usr/include/c++/6/bits/move.h **** 
 16246              		.loc 33 51 0
 16247 000c 5D       		popq	%rbp
 16248              		.cfi_def_cfa 7, 8
 16249 000d C3       		ret
 16250              		.cfi_endproc
 16251              	.LFE14975:
 16253              		.section	.text._ZSt8_DestroyIN2gr5tag_tEEvPT_,"axG",@progbits,_ZSt8_DestroyIN2gr5tag_tEEvPT_,comda
 16254              		.weak	_ZSt8_DestroyIN2gr5tag_tEEvPT_
 16256              	_ZSt8_DestroyIN2gr5tag_tEEvPT_:
 16257              	.LFB14976:
  92:/usr/include/c++/6/bits/stl_construct.h ****     { __pointer->~_Tp(); }
 16258              		.loc 35 92 0
 16259              		.cfi_startproc
GAS LISTING /tmp/ccsIN87E.s 			page 647


 16260 0000 55       		pushq	%rbp
 16261              		.cfi_def_cfa_offset 16
 16262              		.cfi_offset 6, -16
 16263 0001 4889E5   		movq	%rsp, %rbp
 16264              		.cfi_def_cfa_register 6
 16265 0004 4883EC10 		subq	$16, %rsp
 16266 0008 48897DF8 		movq	%rdi, -8(%rbp)
  93:/usr/include/c++/6/bits/stl_construct.h **** 
 16267              		.loc 35 93 0
 16268 000c 488B45F8 		movq	-8(%rbp), %rax
 16269 0010 4889C7   		movq	%rax, %rdi
 16270 0013 E8000000 		call	_ZN2gr5tag_tD1Ev
 16270      00
 16271 0018 90       		nop
 16272 0019 C9       		leave
 16273              		.cfi_def_cfa 7, 8
 16274 001a C3       		ret
 16275              		.cfi_endproc
 16276              	.LFE14976:
 16278              		.section	.text._ZSt12__niter_baseIPN2gr5tag_tESt6vectorIS1_SaIS1_EEET_N9__gnu_cxx17__normal_iterat
 16279              		.weak	_ZSt12__niter_baseIPN2gr5tag_tESt6vectorIS1_SaIS1_EEET_N9__gnu_cxx17__normal_iteratorIS6_T0_
 16281              	_ZSt12__niter_baseIPN2gr5tag_tESt6vectorIS1_SaIS1_EEET_N9__gnu_cxx17__normal_iteratorIS6_T0_EE:
 16282              	.LFB14977:
 963:/usr/include/c++/6/bits/stl_iterator.h **** 
 964:/usr/include/c++/6/bits/stl_iterator.h ****   template<typename _Iterator, typename _Container>
 965:/usr/include/c++/6/bits/stl_iterator.h ****     inline __normal_iterator<_Iterator, _Container>
 966:/usr/include/c++/6/bits/stl_iterator.h ****     operator+(typename __normal_iterator<_Iterator, _Container>::difference_type
 967:/usr/include/c++/6/bits/stl_iterator.h **** 	      __n, const __normal_iterator<_Iterator, _Container>& __i)
 968:/usr/include/c++/6/bits/stl_iterator.h ****     _GLIBCXX_NOEXCEPT
 969:/usr/include/c++/6/bits/stl_iterator.h ****     { return __normal_iterator<_Iterator, _Container>(__i.base() + __n); }
 970:/usr/include/c++/6/bits/stl_iterator.h **** 
 971:/usr/include/c++/6/bits/stl_iterator.h **** _GLIBCXX_END_NAMESPACE_VERSION
 972:/usr/include/c++/6/bits/stl_iterator.h **** } // namespace
 973:/usr/include/c++/6/bits/stl_iterator.h **** 
 974:/usr/include/c++/6/bits/stl_iterator.h **** namespace std _GLIBCXX_VISIBILITY(default)
 975:/usr/include/c++/6/bits/stl_iterator.h **** {
 976:/usr/include/c++/6/bits/stl_iterator.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
 977:/usr/include/c++/6/bits/stl_iterator.h **** 
 978:/usr/include/c++/6/bits/stl_iterator.h ****   template<typename _Iterator, typename _Container>
 979:/usr/include/c++/6/bits/stl_iterator.h ****     _Iterator
 980:/usr/include/c++/6/bits/stl_iterator.h ****     __niter_base(__gnu_cxx::__normal_iterator<_Iterator, _Container> __it)
 16283              		.loc 32 980 0
 16284              		.cfi_startproc
 16285 0000 55       		pushq	%rbp
 16286              		.cfi_def_cfa_offset 16
 16287              		.cfi_offset 6, -16
 16288 0001 4889E5   		movq	%rsp, %rbp
 16289              		.cfi_def_cfa_register 6
 16290 0004 4883EC10 		subq	$16, %rsp
 16291 0008 48897DF8 		movq	%rdi, -8(%rbp)
 981:/usr/include/c++/6/bits/stl_iterator.h ****     { return __it.base(); }
 16292              		.loc 32 981 0
 16293 000c 488D45F8 		leaq	-8(%rbp), %rax
 16294 0010 4889C7   		movq	%rax, %rdi
 16295 0013 E8000000 		call	_ZNK9__gnu_cxx17__normal_iteratorIPN2gr5tag_tESt6vectorIS2_SaIS2_EEE4baseEv
 16295      00
 16296 0018 488B00   		movq	(%rax), %rax
GAS LISTING /tmp/ccsIN87E.s 			page 648


 16297 001b C9       		leave
 16298              		.cfi_def_cfa 7, 8
 16299 001c C3       		ret
 16300              		.cfi_endproc
 16301              	.LFE14977:
 16303              		.section	.text._ZSt13__copy_move_aILb1EPN2gr5tag_tES2_ET1_T0_S4_S3_,"axG",@progbits,_ZSt13__copy_m
 16304              		.weak	_ZSt13__copy_move_aILb1EPN2gr5tag_tES2_ET1_T0_S4_S3_
 16306              	_ZSt13__copy_move_aILb1EPN2gr5tag_tES2_ET1_T0_S4_S3_:
 16307              	.LFB14978:
 375:/usr/include/c++/6/bits/stl_algobase.h ****     {
 16308              		.loc 44 375 0
 16309              		.cfi_startproc
 16310 0000 55       		pushq	%rbp
 16311              		.cfi_def_cfa_offset 16
 16312              		.cfi_offset 6, -16
 16313 0001 4889E5   		movq	%rsp, %rbp
 16314              		.cfi_def_cfa_register 6
 16315 0004 4883EC30 		subq	$48, %rsp
 16316 0008 48897DE8 		movq	%rdi, -24(%rbp)
 16317 000c 488975E0 		movq	%rsi, -32(%rbp)
 16318 0010 488955D8 		movq	%rdx, -40(%rbp)
 383:/usr/include/c++/6/bits/stl_algobase.h **** 
 16319              		.loc 44 383 0
 16320 0014 C645FF00 		movb	$0, -1(%rbp)
 386:/usr/include/c++/6/bits/stl_algobase.h ****     }
 16321              		.loc 44 386 0
 16322 0018 488B55D8 		movq	-40(%rbp), %rdx
 16323 001c 488B4DE0 		movq	-32(%rbp), %rcx
 16324 0020 488B45E8 		movq	-24(%rbp), %rax
 16325 0024 4889CE   		movq	%rcx, %rsi
 16326 0027 4889C7   		movq	%rax, %rdi
 16327 002a E8000000 		call	_ZNSt11__copy_moveILb1ELb0ESt26random_access_iterator_tagE8__copy_mIPN2gr5tag_tES5_EET0_T_S7_
 16327      00
 387:/usr/include/c++/6/bits/stl_algobase.h **** 
 16328              		.loc 44 387 0
 16329 002f C9       		leave
 16330              		.cfi_def_cfa 7, 8
 16331 0030 C3       		ret
 16332              		.cfi_endproc
 16333              	.LFE14978:
 16335              		.section	.text._ZN5boost8functionIFvNS_13intrusive_ptrIN3pmt8pmt_baseEEEEED2Ev,"axG",@progbits,_ZN
 16336              		.align 2
 16337              		.weak	_ZN5boost8functionIFvNS_13intrusive_ptrIN3pmt8pmt_baseEEEEED2Ev
 16339              	_ZN5boost8functionIFvNS_13intrusive_ptrIN3pmt8pmt_baseEEEEED2Ev:
 16340              	.LFB15047:
 773:/usr/include/boost/function/function_template.hpp **** 
 774:/usr/include/boost/function/function_template.hpp ****     // The distinction between when to use BOOST_FUNCTION_FUNCTION and
 775:/usr/include/boost/function/function_template.hpp ****     // when to use self_type is obnoxious. MSVC cannot handle self_type as
 776:/usr/include/boost/function/function_template.hpp ****     // the return type of these assignment operators, but Borland C++ cannot
 777:/usr/include/boost/function/function_template.hpp ****     // handle BOOST_FUNCTION_FUNCTION as the type of the temporary to
 778:/usr/include/boost/function/function_template.hpp ****     // construct.
 779:/usr/include/boost/function/function_template.hpp ****     template<typename Functor>
 780:/usr/include/boost/function/function_template.hpp **** #ifndef BOOST_NO_SFINAE
 781:/usr/include/boost/function/function_template.hpp ****     typename boost::enable_if_c<
 782:/usr/include/boost/function/function_template.hpp ****                   !(is_integral<Functor>::value),
 783:/usr/include/boost/function/function_template.hpp ****                BOOST_FUNCTION_FUNCTION&>::type
 784:/usr/include/boost/function/function_template.hpp **** #else
GAS LISTING /tmp/ccsIN87E.s 			page 649


 785:/usr/include/boost/function/function_template.hpp ****     BOOST_FUNCTION_FUNCTION&
 786:/usr/include/boost/function/function_template.hpp **** #endif
 787:/usr/include/boost/function/function_template.hpp ****     operator=(Functor BOOST_FUNCTION_TARGET_FIX(const &) f)
 788:/usr/include/boost/function/function_template.hpp ****     {
 789:/usr/include/boost/function/function_template.hpp ****       this->clear();
 790:/usr/include/boost/function/function_template.hpp ****       BOOST_TRY  {
 791:/usr/include/boost/function/function_template.hpp ****         this->assign_to(f);
 792:/usr/include/boost/function/function_template.hpp ****       } BOOST_CATCH (...) {
 793:/usr/include/boost/function/function_template.hpp ****         vtable = 0;
 794:/usr/include/boost/function/function_template.hpp ****         BOOST_RETHROW;
 795:/usr/include/boost/function/function_template.hpp ****       }
 796:/usr/include/boost/function/function_template.hpp ****       BOOST_CATCH_END
 797:/usr/include/boost/function/function_template.hpp ****       return *this;
 798:/usr/include/boost/function/function_template.hpp ****     }
 799:/usr/include/boost/function/function_template.hpp ****     template<typename Functor,typename Allocator>
 800:/usr/include/boost/function/function_template.hpp ****     void assign(Functor BOOST_FUNCTION_TARGET_FIX(const &) f, Allocator a)
 801:/usr/include/boost/function/function_template.hpp ****     {
 802:/usr/include/boost/function/function_template.hpp ****       this->clear();
 803:/usr/include/boost/function/function_template.hpp ****       BOOST_TRY{
 804:/usr/include/boost/function/function_template.hpp ****         this->assign_to_a(f,a);
 805:/usr/include/boost/function/function_template.hpp ****       } BOOST_CATCH (...) {
 806:/usr/include/boost/function/function_template.hpp ****         vtable = 0;
 807:/usr/include/boost/function/function_template.hpp ****         BOOST_RETHROW;
 808:/usr/include/boost/function/function_template.hpp ****       }
 809:/usr/include/boost/function/function_template.hpp ****       BOOST_CATCH_END
 810:/usr/include/boost/function/function_template.hpp ****     }
 811:/usr/include/boost/function/function_template.hpp **** 
 812:/usr/include/boost/function/function_template.hpp **** #ifndef BOOST_NO_SFINAE
 813:/usr/include/boost/function/function_template.hpp ****     BOOST_FUNCTION_FUNCTION& operator=(clear_type*)
 814:/usr/include/boost/function/function_template.hpp ****     {
 815:/usr/include/boost/function/function_template.hpp ****       this->clear();
 816:/usr/include/boost/function/function_template.hpp ****       return *this;
 817:/usr/include/boost/function/function_template.hpp ****     }
 818:/usr/include/boost/function/function_template.hpp **** #else
 819:/usr/include/boost/function/function_template.hpp ****     BOOST_FUNCTION_FUNCTION& operator=(int zero)
 820:/usr/include/boost/function/function_template.hpp ****     {
 821:/usr/include/boost/function/function_template.hpp ****       BOOST_ASSERT(zero == 0);
 822:/usr/include/boost/function/function_template.hpp ****       this->clear();
 823:/usr/include/boost/function/function_template.hpp ****       return *this;
 824:/usr/include/boost/function/function_template.hpp ****     }
 825:/usr/include/boost/function/function_template.hpp **** #endif
 826:/usr/include/boost/function/function_template.hpp **** 
 827:/usr/include/boost/function/function_template.hpp ****     // Assignment from another BOOST_FUNCTION_FUNCTION
 828:/usr/include/boost/function/function_template.hpp ****     BOOST_FUNCTION_FUNCTION& operator=(const BOOST_FUNCTION_FUNCTION& f)
 829:/usr/include/boost/function/function_template.hpp ****     {
 830:/usr/include/boost/function/function_template.hpp ****       if (&f == this)
 831:/usr/include/boost/function/function_template.hpp ****         return *this;
 832:/usr/include/boost/function/function_template.hpp **** 
 833:/usr/include/boost/function/function_template.hpp ****       this->clear();
 834:/usr/include/boost/function/function_template.hpp ****       BOOST_TRY {
 835:/usr/include/boost/function/function_template.hpp ****         this->assign_to_own(f);
 836:/usr/include/boost/function/function_template.hpp ****       } BOOST_CATCH (...) {
 837:/usr/include/boost/function/function_template.hpp ****         vtable = 0;
 838:/usr/include/boost/function/function_template.hpp ****         BOOST_RETHROW;
 839:/usr/include/boost/function/function_template.hpp ****       }
 840:/usr/include/boost/function/function_template.hpp ****       BOOST_CATCH_END
 841:/usr/include/boost/function/function_template.hpp ****       return *this;
GAS LISTING /tmp/ccsIN87E.s 			page 650


 842:/usr/include/boost/function/function_template.hpp ****     }
 843:/usr/include/boost/function/function_template.hpp **** 
 844:/usr/include/boost/function/function_template.hpp **** #ifndef BOOST_NO_CXX11_RVALUE_REFERENCES
 845:/usr/include/boost/function/function_template.hpp ****     // Move assignment from another BOOST_FUNCTION_FUNCTION
 846:/usr/include/boost/function/function_template.hpp ****     BOOST_FUNCTION_FUNCTION& operator=(BOOST_FUNCTION_FUNCTION&& f)
 847:/usr/include/boost/function/function_template.hpp ****     {
 848:/usr/include/boost/function/function_template.hpp ****       if (&f == this)
 849:/usr/include/boost/function/function_template.hpp ****         return *this;
 850:/usr/include/boost/function/function_template.hpp **** 
 851:/usr/include/boost/function/function_template.hpp ****       this->clear();
 852:/usr/include/boost/function/function_template.hpp ****       BOOST_TRY {
 853:/usr/include/boost/function/function_template.hpp ****         this->move_assign(f);
 854:/usr/include/boost/function/function_template.hpp ****       } BOOST_CATCH (...) {
 855:/usr/include/boost/function/function_template.hpp ****         vtable = 0;
 856:/usr/include/boost/function/function_template.hpp ****         BOOST_RETHROW;
 857:/usr/include/boost/function/function_template.hpp ****       }
 858:/usr/include/boost/function/function_template.hpp ****       BOOST_CATCH_END
 859:/usr/include/boost/function/function_template.hpp ****       return *this;
 860:/usr/include/boost/function/function_template.hpp ****     }
 861:/usr/include/boost/function/function_template.hpp **** #endif
 862:/usr/include/boost/function/function_template.hpp **** 
 863:/usr/include/boost/function/function_template.hpp ****     void swap(BOOST_FUNCTION_FUNCTION& other)
 864:/usr/include/boost/function/function_template.hpp ****     {
 865:/usr/include/boost/function/function_template.hpp ****       if (&other == this)
 866:/usr/include/boost/function/function_template.hpp ****         return;
 867:/usr/include/boost/function/function_template.hpp **** 
 868:/usr/include/boost/function/function_template.hpp ****       BOOST_FUNCTION_FUNCTION tmp;
 869:/usr/include/boost/function/function_template.hpp ****       tmp.move_assign(*this);
 870:/usr/include/boost/function/function_template.hpp ****       this->move_assign(other);
 871:/usr/include/boost/function/function_template.hpp ****       other.move_assign(tmp);
 872:/usr/include/boost/function/function_template.hpp ****     }
 873:/usr/include/boost/function/function_template.hpp **** 
 874:/usr/include/boost/function/function_template.hpp ****     // Clear out a target, if there is one
 875:/usr/include/boost/function/function_template.hpp ****     void clear()
 876:/usr/include/boost/function/function_template.hpp ****     {
 877:/usr/include/boost/function/function_template.hpp ****       if (vtable) {
 878:/usr/include/boost/function/function_template.hpp ****         if (!this->has_trivial_copy_and_destroy())
 879:/usr/include/boost/function/function_template.hpp ****           get_vtable()->clear(this->functor);
 880:/usr/include/boost/function/function_template.hpp ****         vtable = 0;
 881:/usr/include/boost/function/function_template.hpp ****       }
 882:/usr/include/boost/function/function_template.hpp ****     }
 883:/usr/include/boost/function/function_template.hpp **** 
 884:/usr/include/boost/function/function_template.hpp **** #if (defined __SUNPRO_CC) && (__SUNPRO_CC <= 0x530) && !(defined BOOST_NO_COMPILER_CONFIG)
 885:/usr/include/boost/function/function_template.hpp ****     // Sun C++ 5.3 can't handle the safe_bool idiom, so don't use it
 886:/usr/include/boost/function/function_template.hpp ****     operator bool () const { return !this->empty(); }
 887:/usr/include/boost/function/function_template.hpp **** #else
 888:/usr/include/boost/function/function_template.hpp ****   private:
 889:/usr/include/boost/function/function_template.hpp ****     struct dummy {
 890:/usr/include/boost/function/function_template.hpp ****       void nonnull() {}
 891:/usr/include/boost/function/function_template.hpp ****     };
 892:/usr/include/boost/function/function_template.hpp **** 
 893:/usr/include/boost/function/function_template.hpp ****     typedef void (dummy::*safe_bool)();
 894:/usr/include/boost/function/function_template.hpp **** 
 895:/usr/include/boost/function/function_template.hpp ****   public:
 896:/usr/include/boost/function/function_template.hpp ****     operator safe_bool () const
 897:/usr/include/boost/function/function_template.hpp ****       { return (this->empty())? 0 : &dummy::nonnull; }
 898:/usr/include/boost/function/function_template.hpp **** 
GAS LISTING /tmp/ccsIN87E.s 			page 651


 899:/usr/include/boost/function/function_template.hpp ****     bool operator!() const
 900:/usr/include/boost/function/function_template.hpp ****       { return this->empty(); }
 901:/usr/include/boost/function/function_template.hpp **** #endif
 902:/usr/include/boost/function/function_template.hpp **** 
 903:/usr/include/boost/function/function_template.hpp ****   private:
 904:/usr/include/boost/function/function_template.hpp ****     void assign_to_own(const BOOST_FUNCTION_FUNCTION& f)
 905:/usr/include/boost/function/function_template.hpp ****     {
 906:/usr/include/boost/function/function_template.hpp ****       if (!f.empty()) {
 907:/usr/include/boost/function/function_template.hpp ****         this->vtable = f.vtable;
 908:/usr/include/boost/function/function_template.hpp ****         if (this->has_trivial_copy_and_destroy())
 909:/usr/include/boost/function/function_template.hpp ****           this->functor = f.functor;
 910:/usr/include/boost/function/function_template.hpp ****         else
 911:/usr/include/boost/function/function_template.hpp ****           get_vtable()->base.manager(f.functor, this->functor,
 912:/usr/include/boost/function/function_template.hpp ****                                      boost::detail::function::clone_functor_tag);
 913:/usr/include/boost/function/function_template.hpp ****       }
 914:/usr/include/boost/function/function_template.hpp ****     }
 915:/usr/include/boost/function/function_template.hpp **** 
 916:/usr/include/boost/function/function_template.hpp ****     template<typename Functor>
 917:/usr/include/boost/function/function_template.hpp ****     void assign_to(Functor f)
 918:/usr/include/boost/function/function_template.hpp ****     {
 919:/usr/include/boost/function/function_template.hpp ****       using boost::detail::function::vtable_base;
 920:/usr/include/boost/function/function_template.hpp **** 
 921:/usr/include/boost/function/function_template.hpp ****       typedef typename boost::detail::function::get_function_tag<Functor>::type tag;
 922:/usr/include/boost/function/function_template.hpp ****       typedef boost::detail::function::BOOST_FUNCTION_GET_INVOKER<tag> get_invoker;
 923:/usr/include/boost/function/function_template.hpp ****       typedef typename get_invoker::
 924:/usr/include/boost/function/function_template.hpp ****                          template apply<Functor, R BOOST_FUNCTION_COMMA
 925:/usr/include/boost/function/function_template.hpp ****                         BOOST_FUNCTION_TEMPLATE_ARGS>
 926:/usr/include/boost/function/function_template.hpp ****         handler_type;
 927:/usr/include/boost/function/function_template.hpp **** 
 928:/usr/include/boost/function/function_template.hpp ****       typedef typename handler_type::invoker_type invoker_type;
 929:/usr/include/boost/function/function_template.hpp ****       typedef typename handler_type::manager_type manager_type;
 930:/usr/include/boost/function/function_template.hpp **** 
 931:/usr/include/boost/function/function_template.hpp ****       // Note: it is extremely important that this initialization use
 932:/usr/include/boost/function/function_template.hpp ****       // static initialization. Otherwise, we will have a race
 933:/usr/include/boost/function/function_template.hpp ****       // condition here in multi-threaded code. See
 934:/usr/include/boost/function/function_template.hpp ****       // http://thread.gmane.org/gmane.comp.lib.boost.devel/164902/.
 935:/usr/include/boost/function/function_template.hpp ****       static const vtable_type stored_vtable =
 936:/usr/include/boost/function/function_template.hpp ****         { { &manager_type::manage }, &invoker_type::invoke };
 937:/usr/include/boost/function/function_template.hpp **** 
 938:/usr/include/boost/function/function_template.hpp ****       if (stored_vtable.assign_to(f, functor)) {
 939:/usr/include/boost/function/function_template.hpp ****         std::size_t value = reinterpret_cast<std::size_t>(&stored_vtable.base);
 940:/usr/include/boost/function/function_template.hpp ****         // coverity[pointless_expression]: suppress coverity warnings on apparant if(const).
 941:/usr/include/boost/function/function_template.hpp ****         if (boost::has_trivial_copy_constructor<Functor>::value &&
 942:/usr/include/boost/function/function_template.hpp ****             boost::has_trivial_destructor<Functor>::value &&
 943:/usr/include/boost/function/function_template.hpp ****             boost::detail::function::function_allows_small_object_optimization<Functor>::value)
 944:/usr/include/boost/function/function_template.hpp ****           value |= static_cast<std::size_t>(0x01);
 945:/usr/include/boost/function/function_template.hpp ****         vtable = reinterpret_cast<boost::detail::function::vtable_base *>(value);
 946:/usr/include/boost/function/function_template.hpp ****       } else
 947:/usr/include/boost/function/function_template.hpp ****         vtable = 0;
 948:/usr/include/boost/function/function_template.hpp ****     }
 949:/usr/include/boost/function/function_template.hpp **** 
 950:/usr/include/boost/function/function_template.hpp ****     template<typename Functor,typename Allocator>
 951:/usr/include/boost/function/function_template.hpp ****     void assign_to_a(Functor f,Allocator a)
 952:/usr/include/boost/function/function_template.hpp ****     {
 953:/usr/include/boost/function/function_template.hpp ****       using boost::detail::function::vtable_base;
 954:/usr/include/boost/function/function_template.hpp **** 
 955:/usr/include/boost/function/function_template.hpp ****       typedef typename boost::detail::function::get_function_tag<Functor>::type tag;
GAS LISTING /tmp/ccsIN87E.s 			page 652


 956:/usr/include/boost/function/function_template.hpp ****       typedef boost::detail::function::BOOST_FUNCTION_GET_INVOKER<tag> get_invoker;
 957:/usr/include/boost/function/function_template.hpp ****       typedef typename get_invoker::
 958:/usr/include/boost/function/function_template.hpp ****                          template apply_a<Functor, R BOOST_FUNCTION_COMMA
 959:/usr/include/boost/function/function_template.hpp ****                          BOOST_FUNCTION_TEMPLATE_ARGS,
 960:/usr/include/boost/function/function_template.hpp ****                          Allocator>
 961:/usr/include/boost/function/function_template.hpp ****         handler_type;
 962:/usr/include/boost/function/function_template.hpp **** 
 963:/usr/include/boost/function/function_template.hpp ****       typedef typename handler_type::invoker_type invoker_type;
 964:/usr/include/boost/function/function_template.hpp ****       typedef typename handler_type::manager_type manager_type;
 965:/usr/include/boost/function/function_template.hpp **** 
 966:/usr/include/boost/function/function_template.hpp ****       // Note: it is extremely important that this initialization use
 967:/usr/include/boost/function/function_template.hpp ****       // static initialization. Otherwise, we will have a race
 968:/usr/include/boost/function/function_template.hpp ****       // condition here in multi-threaded code. See
 969:/usr/include/boost/function/function_template.hpp ****       // http://thread.gmane.org/gmane.comp.lib.boost.devel/164902/.
 970:/usr/include/boost/function/function_template.hpp ****       static const vtable_type stored_vtable =
 971:/usr/include/boost/function/function_template.hpp ****         { { &manager_type::manage }, &invoker_type::invoke };
 972:/usr/include/boost/function/function_template.hpp **** 
 973:/usr/include/boost/function/function_template.hpp ****       if (stored_vtable.assign_to_a(f, functor, a)) {
 974:/usr/include/boost/function/function_template.hpp ****         std::size_t value = reinterpret_cast<std::size_t>(&stored_vtable.base);
 975:/usr/include/boost/function/function_template.hpp ****         // coverity[pointless_expression]: suppress coverity warnings on apparant if(const).
 976:/usr/include/boost/function/function_template.hpp ****         if (boost::has_trivial_copy_constructor<Functor>::value &&
 977:/usr/include/boost/function/function_template.hpp ****             boost::has_trivial_destructor<Functor>::value &&
 978:/usr/include/boost/function/function_template.hpp ****             boost::detail::function::function_allows_small_object_optimization<Functor>::value)
 979:/usr/include/boost/function/function_template.hpp ****           value |= static_cast<std::size_t>(0x01);
 980:/usr/include/boost/function/function_template.hpp ****         vtable = reinterpret_cast<boost::detail::function::vtable_base *>(value);
 981:/usr/include/boost/function/function_template.hpp ****       } else
 982:/usr/include/boost/function/function_template.hpp ****         vtable = 0;
 983:/usr/include/boost/function/function_template.hpp ****     }
 984:/usr/include/boost/function/function_template.hpp **** 
 985:/usr/include/boost/function/function_template.hpp ****     // Moves the value from the specified argument to *this. If the argument
 986:/usr/include/boost/function/function_template.hpp ****     // has its function object allocated on the heap, move_assign will pass
 987:/usr/include/boost/function/function_template.hpp ****     // its buffer to *this, and set the argument's buffer pointer to NULL.
 988:/usr/include/boost/function/function_template.hpp ****     void move_assign(BOOST_FUNCTION_FUNCTION& f)
 989:/usr/include/boost/function/function_template.hpp ****     {
 990:/usr/include/boost/function/function_template.hpp ****       if (&f == this)
 991:/usr/include/boost/function/function_template.hpp ****         return;
 992:/usr/include/boost/function/function_template.hpp **** 
 993:/usr/include/boost/function/function_template.hpp ****       BOOST_TRY {
 994:/usr/include/boost/function/function_template.hpp ****         if (!f.empty()) {
 995:/usr/include/boost/function/function_template.hpp ****           this->vtable = f.vtable;
 996:/usr/include/boost/function/function_template.hpp ****           if (this->has_trivial_copy_and_destroy())
 997:/usr/include/boost/function/function_template.hpp ****             this->functor = f.functor;
 998:/usr/include/boost/function/function_template.hpp ****           else
 999:/usr/include/boost/function/function_template.hpp ****             get_vtable()->base.manager(f.functor, this->functor,
1000:/usr/include/boost/function/function_template.hpp ****                                      boost::detail::function::move_functor_tag);
1001:/usr/include/boost/function/function_template.hpp ****           f.vtable = 0;
1002:/usr/include/boost/function/function_template.hpp ****         } else {
1003:/usr/include/boost/function/function_template.hpp ****           clear();
1004:/usr/include/boost/function/function_template.hpp ****         }
1005:/usr/include/boost/function/function_template.hpp ****       } BOOST_CATCH (...) {
1006:/usr/include/boost/function/function_template.hpp ****         vtable = 0;
1007:/usr/include/boost/function/function_template.hpp ****         BOOST_RETHROW;
1008:/usr/include/boost/function/function_template.hpp ****       }
1009:/usr/include/boost/function/function_template.hpp ****       BOOST_CATCH_END
1010:/usr/include/boost/function/function_template.hpp ****     }
1011:/usr/include/boost/function/function_template.hpp ****   };
1012:/usr/include/boost/function/function_template.hpp **** 
GAS LISTING /tmp/ccsIN87E.s 			page 653


1013:/usr/include/boost/function/function_template.hpp ****   template<typename R BOOST_FUNCTION_COMMA BOOST_FUNCTION_TEMPLATE_PARMS>
1014:/usr/include/boost/function/function_template.hpp ****   inline void swap(BOOST_FUNCTION_FUNCTION<
1015:/usr/include/boost/function/function_template.hpp ****                      R BOOST_FUNCTION_COMMA
1016:/usr/include/boost/function/function_template.hpp ****                      BOOST_FUNCTION_TEMPLATE_ARGS
1017:/usr/include/boost/function/function_template.hpp ****                    >& f1,
1018:/usr/include/boost/function/function_template.hpp ****                    BOOST_FUNCTION_FUNCTION<
1019:/usr/include/boost/function/function_template.hpp ****                      R BOOST_FUNCTION_COMMA
1020:/usr/include/boost/function/function_template.hpp ****                      BOOST_FUNCTION_TEMPLATE_ARGS
1021:/usr/include/boost/function/function_template.hpp ****                    >& f2)
1022:/usr/include/boost/function/function_template.hpp ****   {
1023:/usr/include/boost/function/function_template.hpp ****     f1.swap(f2);
1024:/usr/include/boost/function/function_template.hpp ****   }
1025:/usr/include/boost/function/function_template.hpp **** 
1026:/usr/include/boost/function/function_template.hpp **** // Poison comparisons between boost::function objects of the same type.
1027:/usr/include/boost/function/function_template.hpp **** template<typename R BOOST_FUNCTION_COMMA BOOST_FUNCTION_TEMPLATE_PARMS>
1028:/usr/include/boost/function/function_template.hpp ****   void operator==(const BOOST_FUNCTION_FUNCTION<
1029:/usr/include/boost/function/function_template.hpp ****                           R BOOST_FUNCTION_COMMA
1030:/usr/include/boost/function/function_template.hpp ****                           BOOST_FUNCTION_TEMPLATE_ARGS>&,
1031:/usr/include/boost/function/function_template.hpp ****                   const BOOST_FUNCTION_FUNCTION<
1032:/usr/include/boost/function/function_template.hpp ****                           R BOOST_FUNCTION_COMMA
1033:/usr/include/boost/function/function_template.hpp ****                           BOOST_FUNCTION_TEMPLATE_ARGS>&);
1034:/usr/include/boost/function/function_template.hpp **** template<typename R BOOST_FUNCTION_COMMA BOOST_FUNCTION_TEMPLATE_PARMS>
1035:/usr/include/boost/function/function_template.hpp ****   void operator!=(const BOOST_FUNCTION_FUNCTION<
1036:/usr/include/boost/function/function_template.hpp ****                           R BOOST_FUNCTION_COMMA
1037:/usr/include/boost/function/function_template.hpp ****                           BOOST_FUNCTION_TEMPLATE_ARGS>&,
1038:/usr/include/boost/function/function_template.hpp ****                   const BOOST_FUNCTION_FUNCTION<
1039:/usr/include/boost/function/function_template.hpp ****                           R BOOST_FUNCTION_COMMA
1040:/usr/include/boost/function/function_template.hpp ****                           BOOST_FUNCTION_TEMPLATE_ARGS>& );
1041:/usr/include/boost/function/function_template.hpp **** 
1042:/usr/include/boost/function/function_template.hpp **** #if !defined(BOOST_FUNCTION_NO_FUNCTION_TYPE_SYNTAX)
1043:/usr/include/boost/function/function_template.hpp **** 
1044:/usr/include/boost/function/function_template.hpp **** #if BOOST_FUNCTION_NUM_ARGS == 0
1045:/usr/include/boost/function/function_template.hpp **** #define BOOST_FUNCTION_PARTIAL_SPEC R (void)
1046:/usr/include/boost/function/function_template.hpp **** #else
1047:/usr/include/boost/function/function_template.hpp **** #define BOOST_FUNCTION_PARTIAL_SPEC R (BOOST_PP_ENUM_PARAMS(BOOST_FUNCTION_NUM_ARGS,T))
1048:/usr/include/boost/function/function_template.hpp **** #endif
1049:/usr/include/boost/function/function_template.hpp **** 
1050:/usr/include/boost/function/function_template.hpp **** template<typename R BOOST_FUNCTION_COMMA
1051:/usr/include/boost/function/function_template.hpp ****          BOOST_FUNCTION_TEMPLATE_PARMS>
1052:/usr/include/boost/function/function_template.hpp **** class function<BOOST_FUNCTION_PARTIAL_SPEC>
 16341              		.loc 29 1052 0
 16342              		.cfi_startproc
 16343 0000 55       		pushq	%rbp
 16344              		.cfi_def_cfa_offset 16
 16345              		.cfi_offset 6, -16
 16346 0001 4889E5   		movq	%rsp, %rbp
 16347              		.cfi_def_cfa_register 6
 16348 0004 4883EC10 		subq	$16, %rsp
 16349 0008 48897DF8 		movq	%rdi, -8(%rbp)
 16350              	.LBB145:
 16351              		.loc 29 1052 0
 16352 000c 488B45F8 		movq	-8(%rbp), %rax
 16353 0010 4889C7   		movq	%rax, %rdi
 16354 0013 E8000000 		call	_ZN5boost9function1IvNS_13intrusive_ptrIN3pmt8pmt_baseEEEED2Ev
 16354      00
 16355              	.LBE145:
 16356 0018 90       		nop
GAS LISTING /tmp/ccsIN87E.s 			page 654


 16357 0019 C9       		leave
 16358              		.cfi_def_cfa 7, 8
 16359 001a C3       		ret
 16360              		.cfi_endproc
 16361              	.LFE15047:
 16363              		.weak	_ZN5boost8functionIFvNS_13intrusive_ptrIN3pmt8pmt_baseEEEEED1Ev
 16364              		.set	_ZN5boost8functionIFvNS_13intrusive_ptrIN3pmt8pmt_baseEEEEED1Ev,_ZN5boost8functionIFvNS_13int
 16365              		.section	.text._ZNSt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS0_8functionIFvS4_EEEED2Ev,"ax
 16366              		.align 2
 16367              		.weak	_ZNSt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS0_8functionIFvS4_EEEED2Ev
 16369              	_ZNSt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS0_8functionIFvS4_EEEED2Ev:
 16370              	.LFB15049:
 194:/usr/include/c++/6/bits/stl_pair.h ****     {
 16371              		.loc 41 194 0
 16372              		.cfi_startproc
 16373 0000 55       		pushq	%rbp
 16374              		.cfi_def_cfa_offset 16
 16375              		.cfi_offset 6, -16
 16376 0001 4889E5   		movq	%rsp, %rbp
 16377              		.cfi_def_cfa_register 6
 16378 0004 4883EC10 		subq	$16, %rsp
 16379 0008 48897DF8 		movq	%rdi, -8(%rbp)
 16380              	.LBB146:
 194:/usr/include/c++/6/bits/stl_pair.h ****     {
 16381              		.loc 41 194 0
 16382 000c 488B45F8 		movq	-8(%rbp), %rax
 16383 0010 4883C008 		addq	$8, %rax
 16384 0014 4889C7   		movq	%rax, %rdi
 16385 0017 E8000000 		call	_ZN5boost8functionIFvNS_13intrusive_ptrIN3pmt8pmt_baseEEEEED1Ev
 16385      00
 16386 001c 488B45F8 		movq	-8(%rbp), %rax
 16387 0020 4889C7   		movq	%rax, %rdi
 16388 0023 E8000000 		call	_ZN5boost13intrusive_ptrIN3pmt8pmt_baseEED1Ev
 16388      00
 16389              	.LBE146:
 16390 0028 90       		nop
 16391 0029 C9       		leave
 16392              		.cfi_def_cfa 7, 8
 16393 002a C3       		ret
 16394              		.cfi_endproc
 16395              	.LFE15049:
 16397              		.weak	_ZNSt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS0_8functionIFvS4_EEEED1Ev
 16398              		.set	_ZNSt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS0_8functionIFvS4_EEEED1Ev,_ZNSt4pairIKN
 16399              		.section	.text._ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKN5boost13intrusive_ptrIN3pm
 16400              		.align 2
 16401              		.weak	_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_bas
 16403              	_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS3
 16404              	.LFB15044:
 16405              		.loc 43 124 0
 16406              		.cfi_startproc
 16407 0000 55       		pushq	%rbp
 16408              		.cfi_def_cfa_offset 16
 16409              		.cfi_offset 6, -16
 16410 0001 4889E5   		movq	%rsp, %rbp
 16411              		.cfi_def_cfa_register 6
 16412 0004 4883EC10 		subq	$16, %rsp
 16413 0008 48897DF8 		movq	%rdi, -8(%rbp)
GAS LISTING /tmp/ccsIN87E.s 			page 655


 16414 000c 488975F0 		movq	%rsi, -16(%rbp)
 16415              		.loc 43 124 0
 16416 0010 488B45F0 		movq	-16(%rbp), %rax
 16417 0014 4889C7   		movq	%rax, %rdi
 16418 0017 E8000000 		call	_ZNSt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS0_8functionIFvS4_EEEED1Ev
 16418      00
 16419 001c 90       		nop
 16420 001d C9       		leave
 16421              		.cfi_def_cfa 7, 8
 16422 001e C3       		ret
 16423              		.cfi_endproc
 16424              	.LFE15044:
 16426              		.section	.text._ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKN5boost13intrusive_ptrIN3pm
 16427              		.align 2
 16428              		.weak	_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_bas
 16430              	_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS3
 16431              	.LFB15051:
 109:/usr/include/c++/6/ext/new_allocator.h ****       { ::operator delete(__p); }
 16432              		.loc 43 109 0
 16433              		.cfi_startproc
 16434 0000 55       		pushq	%rbp
 16435              		.cfi_def_cfa_offset 16
 16436              		.cfi_offset 6, -16
 16437 0001 4889E5   		movq	%rsp, %rbp
 16438              		.cfi_def_cfa_register 6
 16439 0004 4883EC20 		subq	$32, %rsp
 16440 0008 48897DF8 		movq	%rdi, -8(%rbp)
 16441 000c 488975F0 		movq	%rsi, -16(%rbp)
 16442 0010 488955E8 		movq	%rdx, -24(%rbp)
 110:/usr/include/c++/6/ext/new_allocator.h **** 
 16443              		.loc 43 110 0
 16444 0014 488B45F0 		movq	-16(%rbp), %rax
 16445 0018 4889C7   		movq	%rax, %rdi
 16446 001b E8000000 		call	_ZdlPv@PLT
 16446      00
 16447 0020 90       		nop
 16448 0021 C9       		leave
 16449              		.cfi_def_cfa 7, 8
 16450 0022 C3       		ret
 16451              		.cfi_endproc
 16452              	.LFE15051:
 16454              		.section	.text._ZNK9__gnu_cxx16__aligned_membufISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEEN
 16455              		.align 2
 16456              		.weak	_ZNK9__gnu_cxx16__aligned_membufISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS2_8funct
 16458              	_ZNK9__gnu_cxx16__aligned_membufISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS2_8functionIFvS
 16459              	.LFB15066:
  72:/usr/include/c++/6/ext/aligned_buffer.h **** 
  73:/usr/include/c++/6/ext/aligned_buffer.h ****       const _Tp*
  74:/usr/include/c++/6/ext/aligned_buffer.h ****       _M_ptr() const noexcept
 16460              		.loc 46 74 0
 16461              		.cfi_startproc
 16462 0000 55       		pushq	%rbp
 16463              		.cfi_def_cfa_offset 16
 16464              		.cfi_offset 6, -16
 16465 0001 4889E5   		movq	%rsp, %rbp
 16466              		.cfi_def_cfa_register 6
 16467 0004 4883EC10 		subq	$16, %rsp
GAS LISTING /tmp/ccsIN87E.s 			page 656


 16468 0008 48897DF8 		movq	%rdi, -8(%rbp)
  75:/usr/include/c++/6/ext/aligned_buffer.h ****       { return static_cast<const _Tp*>(_M_addr()); }
 16469              		.loc 46 75 0
 16470 000c 488B45F8 		movq	-8(%rbp), %rax
 16471 0010 4889C7   		movq	%rax, %rdi
 16472 0013 E8000000 		call	_ZNK9__gnu_cxx16__aligned_membufISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS2_8functi
 16472      00
 16473 0018 C9       		leave
 16474              		.cfi_def_cfa 7, 8
 16475 0019 C3       		ret
 16476              		.cfi_endproc
 16477              	.LFE15066:
 16479              		.section	.text._ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKN5boost13intrusive_ptrIN3pm
 16480              		.align 2
 16481              		.weak	_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_bas
 16483              	_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS3
 16484              	.LFB15067:
  99:/usr/include/c++/6/ext/new_allocator.h ****       { 
 16485              		.loc 43 99 0
 16486              		.cfi_startproc
 16487 0000 55       		pushq	%rbp
 16488              		.cfi_def_cfa_offset 16
 16489              		.cfi_offset 6, -16
 16490 0001 4889E5   		movq	%rsp, %rbp
 16491              		.cfi_def_cfa_register 6
 16492 0004 4883EC20 		subq	$32, %rsp
 16493 0008 48897DF8 		movq	%rdi, -8(%rbp)
 16494 000c 488975F0 		movq	%rsi, -16(%rbp)
 16495 0010 488955E8 		movq	%rdx, -24(%rbp)
 101:/usr/include/c++/6/ext/new_allocator.h **** 	  std::__throw_bad_alloc();
 16496              		.loc 43 101 0
 16497 0014 488B45F8 		movq	-8(%rbp), %rax
 16498 0018 4889C7   		movq	%rax, %rdi
 16499 001b E8000000 		call	_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_bas
 16499      00
 16500 0020 483B45F0 		cmpq	-16(%rbp), %rax
 16501 0024 0F92C0   		setb	%al
 16502 0027 84C0     		testb	%al, %al
 16503 0029 7405     		je	.L826
 102:/usr/include/c++/6/ext/new_allocator.h **** 
 16504              		.loc 43 102 0
 16505 002b E8000000 		call	_ZSt17__throw_bad_allocv@PLT
 16505      00
 16506              	.L826:
 104:/usr/include/c++/6/ext/new_allocator.h ****       }
 16507              		.loc 43 104 0
 16508 0030 488B55F0 		movq	-16(%rbp), %rdx
 16509 0034 4889D0   		movq	%rdx, %rax
 16510 0037 48C1E003 		salq	$3, %rax
 16511 003b 4801D0   		addq	%rdx, %rax
 16512 003e 48C1E003 		salq	$3, %rax
 16513 0042 4889C7   		movq	%rax, %rdi
 16514 0045 E8000000 		call	_Znwm@PLT
 16514      00
 105:/usr/include/c++/6/ext/new_allocator.h **** 
 16515              		.loc 43 105 0
 16516 004a C9       		leave
GAS LISTING /tmp/ccsIN87E.s 			page 657


 16517              		.cfi_def_cfa 7, 8
 16518 004b C3       		ret
 16519              		.cfi_endproc
 16520              	.LFE15067:
 16522              		.section	.text._ZNSt10_Head_baseILm0ERKN5boost13intrusive_ptrIN3pmt8pmt_baseEEELb0EE7_M_headERS7_,
 16523              		.weak	_ZNSt10_Head_baseILm0ERKN5boost13intrusive_ptrIN3pmt8pmt_baseEEELb0EE7_M_headERS7_
 16525              	_ZNSt10_Head_baseILm0ERKN5boost13intrusive_ptrIN3pmt8pmt_baseEEELb0EE7_M_headERS7_:
 16526              	.LFB15077:
 142:/usr/include/c++/6/tuple **** 
 16527              		.loc 28 142 0
 16528              		.cfi_startproc
 16529 0000 55       		pushq	%rbp
 16530              		.cfi_def_cfa_offset 16
 16531              		.cfi_offset 6, -16
 16532 0001 4889E5   		movq	%rsp, %rbp
 16533              		.cfi_def_cfa_register 6
 16534 0004 48897DF8 		movq	%rdi, -8(%rbp)
 142:/usr/include/c++/6/tuple **** 
 16535              		.loc 28 142 0
 16536 0008 488B45F8 		movq	-8(%rbp), %rax
 16537 000c 488B00   		movq	(%rax), %rax
 16538 000f 5D       		popq	%rbp
 16539              		.cfi_def_cfa 7, 8
 16540 0010 C3       		ret
 16541              		.cfi_endproc
 16542              	.LFE15077:
 16544              		.section	.text._ZNSt11_Tuple_implILm0EJRKN5boost13intrusive_ptrIN3pmt8pmt_baseEEEEE7_M_headERS7_,"
 16545              		.weak	_ZNSt11_Tuple_implILm0EJRKN5boost13intrusive_ptrIN3pmt8pmt_baseEEEEE7_M_headERS7_
 16547              	_ZNSt11_Tuple_implILm0EJRKN5boost13intrusive_ptrIN3pmt8pmt_baseEEEEE7_M_headERS7_:
 16548              	.LFB15076:
 346:/usr/include/c++/6/tuple **** 
 16549              		.loc 28 346 0
 16550              		.cfi_startproc
 16551 0000 55       		pushq	%rbp
 16552              		.cfi_def_cfa_offset 16
 16553              		.cfi_offset 6, -16
 16554 0001 4889E5   		movq	%rsp, %rbp
 16555              		.cfi_def_cfa_register 6
 16556 0004 4883EC10 		subq	$16, %rsp
 16557 0008 48897DF8 		movq	%rdi, -8(%rbp)
 346:/usr/include/c++/6/tuple **** 
 16558              		.loc 28 346 0
 16559 000c 488B45F8 		movq	-8(%rbp), %rax
 16560 0010 4889C7   		movq	%rax, %rdi
 16561 0013 E8000000 		call	_ZNSt10_Head_baseILm0ERKN5boost13intrusive_ptrIN3pmt8pmt_baseEEELb0EE7_M_headERS7_
 16561      00
 16562 0018 C9       		leave
 16563              		.cfi_def_cfa 7, 8
 16564 0019 C3       		ret
 16565              		.cfi_endproc
 16566              	.LFE15076:
 16568              		.section	.text._ZSt7forwardIRKN5boost13intrusive_ptrIN3pmt8pmt_baseEEEEOT_RNSt16remove_referenceIS
 16569              		.weak	_ZSt7forwardIRKN5boost13intrusive_ptrIN3pmt8pmt_baseEEEEOT_RNSt16remove_referenceIS7_E4typeE
 16571              	_ZSt7forwardIRKN5boost13intrusive_ptrIN3pmt8pmt_baseEEEEOT_RNSt16remove_referenceIS7_E4typeE:
 16572              	.LFB15078:
  76:/usr/include/c++/6/bits/move.h ****     { return static_cast<_Tp&&>(__t); }
 16573              		.loc 33 76 0
GAS LISTING /tmp/ccsIN87E.s 			page 658


 16574              		.cfi_startproc
 16575 0000 55       		pushq	%rbp
 16576              		.cfi_def_cfa_offset 16
 16577              		.cfi_offset 6, -16
 16578 0001 4889E5   		movq	%rsp, %rbp
 16579              		.cfi_def_cfa_register 6
 16580 0004 48897DF8 		movq	%rdi, -8(%rbp)
  77:/usr/include/c++/6/bits/move.h **** 
 16581              		.loc 33 77 0
 16582 0008 488B45F8 		movq	-8(%rbp), %rax
 16583 000c 5D       		popq	%rbp
 16584              		.cfi_def_cfa 7, 8
 16585 000d C3       		ret
 16586              		.cfi_endproc
 16587              	.LFE15078:
 16589              		.section	.text._ZNSt11_Tuple_implILm0EJRKN5boost13intrusive_ptrIN3pmt8pmt_baseEEEEEC2EOS7_,"axG",@
 16590              		.align 2
 16591              		.weak	_ZNSt11_Tuple_implILm0EJRKN5boost13intrusive_ptrIN3pmt8pmt_baseEEEEEC2EOS7_
 16593              	_ZNSt11_Tuple_implILm0EJRKN5boost13intrusive_ptrIN3pmt8pmt_baseEEEEEC2EOS7_:
 16594              	.LFB15079:
 366:/usr/include/c++/6/tuple ****       noexcept(is_nothrow_move_constructible<_Head>::value)
 16595              		.loc 28 366 0
 16596              		.cfi_startproc
 16597 0000 55       		pushq	%rbp
 16598              		.cfi_def_cfa_offset 16
 16599              		.cfi_offset 6, -16
 16600 0001 4889E5   		movq	%rsp, %rbp
 16601              		.cfi_def_cfa_register 6
 16602 0004 4883EC10 		subq	$16, %rsp
 16603 0008 48897DF8 		movq	%rdi, -8(%rbp)
 16604 000c 488975F0 		movq	%rsi, -16(%rbp)
 16605              	.LBB147:
 368:/usr/include/c++/6/tuple **** 
 16606              		.loc 28 368 0
 16607 0010 488B45F0 		movq	-16(%rbp), %rax
 16608 0014 4889C7   		movq	%rax, %rdi
 16609 0017 E8000000 		call	_ZNSt11_Tuple_implILm0EJRKN5boost13intrusive_ptrIN3pmt8pmt_baseEEEEE7_M_headERS7_
 16609      00
 16610 001c 4889C7   		movq	%rax, %rdi
 16611 001f E8000000 		call	_ZSt7forwardIRKN5boost13intrusive_ptrIN3pmt8pmt_baseEEEEOT_RNSt16remove_referenceIS7_E4typeE
 16611      00
 16612 0024 4889C2   		movq	%rax, %rdx
 16613 0027 488B45F8 		movq	-8(%rbp), %rax
 16614 002b 4889D6   		movq	%rdx, %rsi
 16615 002e 4889C7   		movq	%rax, %rdi
 16616 0031 E8000000 		call	_ZNSt10_Head_baseILm0ERKN5boost13intrusive_ptrIN3pmt8pmt_baseEEELb0EEC2ES6_
 16616      00
 16617              	.LBE147:
 16618 0036 90       		nop
 16619 0037 C9       		leave
 16620              		.cfi_def_cfa 7, 8
 16621 0038 C3       		ret
 16622              		.cfi_endproc
 16623              	.LFE15079:
 16625              		.weak	_ZNSt11_Tuple_implILm0EJRKN5boost13intrusive_ptrIN3pmt8pmt_baseEEEEEC1EOS7_
 16626              		.set	_ZNSt11_Tuple_implILm0EJRKN5boost13intrusive_ptrIN3pmt8pmt_baseEEEEEC1EOS7_,_ZNSt11_Tuple_imp
 16627              		.section	.text._ZNSt5tupleIJRKN5boost13intrusive_ptrIN3pmt8pmt_baseEEEEEC2EOS7_,"axG",@progbits,_Z
GAS LISTING /tmp/ccsIN87E.s 			page 659


 16628              		.align 2
 16629              		.weak	_ZNSt5tupleIJRKN5boost13intrusive_ptrIN3pmt8pmt_baseEEEEEC2EOS7_
 16631              	_ZNSt5tupleIJRKN5boost13intrusive_ptrIN3pmt8pmt_baseEEEEEC2EOS7_:
 16632              	.LFB15081:
 608:/usr/include/c++/6/tuple **** 
 609:/usr/include/c++/6/tuple ****       template<typename _Dummy = void,
 610:/usr/include/c++/6/tuple ****                typename enable_if<
 611:/usr/include/c++/6/tuple ****                  _TCC<_Dummy>::template
 612:/usr/include/c++/6/tuple ****                    _ConstructibleTuple<_Elements...>()
 613:/usr/include/c++/6/tuple ****                  && !_TCC<_Dummy>::template
 614:/usr/include/c++/6/tuple ****                    _ImplicitlyConvertibleTuple<_Elements...>()
 615:/usr/include/c++/6/tuple ****                  && (sizeof...(_Elements) >= 1),
 616:/usr/include/c++/6/tuple ****                bool>::type=false>
 617:/usr/include/c++/6/tuple ****       explicit constexpr tuple(const _Elements&... __elements)
 618:/usr/include/c++/6/tuple ****       : _Inherited(__elements...) { }
 619:/usr/include/c++/6/tuple **** 
 620:/usr/include/c++/6/tuple ****       // Shortcut for the cases where constructors taking _UElements...
 621:/usr/include/c++/6/tuple ****       // need to be constrained.
 622:/usr/include/c++/6/tuple ****       template<typename... _UElements> using _TMC =
 623:/usr/include/c++/6/tuple ****                   _TC<(sizeof...(_Elements) == sizeof...(_UElements)),
 624:/usr/include/c++/6/tuple ****                       _Elements...>;
 625:/usr/include/c++/6/tuple **** 
 626:/usr/include/c++/6/tuple ****       template<typename... _UElements, typename
 627:/usr/include/c++/6/tuple **** 	       enable_if<
 628:/usr/include/c++/6/tuple **** 		  _TC<sizeof...(_UElements) == 1, _Elements...>::template
 629:/usr/include/c++/6/tuple **** 		    _NotSameTuple<_UElements...>()
 630:/usr/include/c++/6/tuple **** 		  && _TMC<_UElements...>::template
 631:/usr/include/c++/6/tuple ****                     _MoveConstructibleTuple<_UElements...>()
 632:/usr/include/c++/6/tuple ****                   && _TMC<_UElements...>::template
 633:/usr/include/c++/6/tuple ****                     _ImplicitlyMoveConvertibleTuple<_UElements...>()
 634:/usr/include/c++/6/tuple ****                   && (sizeof...(_Elements) >= 1),
 635:/usr/include/c++/6/tuple ****         bool>::type=true>
 636:/usr/include/c++/6/tuple ****         constexpr tuple(_UElements&&... __elements)
 637:/usr/include/c++/6/tuple ****         : _Inherited(std::forward<_UElements>(__elements)...) { }
 638:/usr/include/c++/6/tuple **** 
 639:/usr/include/c++/6/tuple ****       template<typename... _UElements, typename
 640:/usr/include/c++/6/tuple ****         enable_if<
 641:/usr/include/c++/6/tuple **** 		  _TC<sizeof...(_UElements) == 1, _Elements...>::template
 642:/usr/include/c++/6/tuple **** 		    _NotSameTuple<_UElements...>()
 643:/usr/include/c++/6/tuple **** 		  && _TMC<_UElements...>::template
 644:/usr/include/c++/6/tuple ****                     _MoveConstructibleTuple<_UElements...>()
 645:/usr/include/c++/6/tuple ****                   && !_TMC<_UElements...>::template
 646:/usr/include/c++/6/tuple ****                     _ImplicitlyMoveConvertibleTuple<_UElements...>()
 647:/usr/include/c++/6/tuple ****                   && (sizeof...(_Elements) >= 1),
 648:/usr/include/c++/6/tuple ****         bool>::type=false>
 649:/usr/include/c++/6/tuple ****         explicit constexpr tuple(_UElements&&... __elements)
 650:/usr/include/c++/6/tuple **** 	: _Inherited(std::forward<_UElements>(__elements)...) {	}
 651:/usr/include/c++/6/tuple **** 
 652:/usr/include/c++/6/tuple ****       constexpr tuple(const tuple&) = default;
 653:/usr/include/c++/6/tuple **** 
 654:/usr/include/c++/6/tuple ****       constexpr tuple(tuple&&) = default; 
 16633              		.loc 28 654 0
 16634              		.cfi_startproc
 16635 0000 55       		pushq	%rbp
 16636              		.cfi_def_cfa_offset 16
 16637              		.cfi_offset 6, -16
 16638 0001 4889E5   		movq	%rsp, %rbp
GAS LISTING /tmp/ccsIN87E.s 			page 660


 16639              		.cfi_def_cfa_register 6
 16640 0004 4883EC10 		subq	$16, %rsp
 16641 0008 48897DF8 		movq	%rdi, -8(%rbp)
 16642 000c 488975F0 		movq	%rsi, -16(%rbp)
 16643              	.LBB148:
 16644              		.loc 28 654 0
 16645 0010 488B55F0 		movq	-16(%rbp), %rdx
 16646 0014 488B45F8 		movq	-8(%rbp), %rax
 16647 0018 4889D6   		movq	%rdx, %rsi
 16648 001b 4889C7   		movq	%rax, %rdi
 16649 001e E8000000 		call	_ZNSt11_Tuple_implILm0EJRKN5boost13intrusive_ptrIN3pmt8pmt_baseEEEEEC2EOS7_
 16649      00
 16650              	.LBE148:
 16651 0023 90       		nop
 16652 0024 C9       		leave
 16653              		.cfi_def_cfa 7, 8
 16654 0025 C3       		ret
 16655              		.cfi_endproc
 16656              	.LFE15081:
 16658              		.weak	_ZNSt5tupleIJRKN5boost13intrusive_ptrIN3pmt8pmt_baseEEEEEC1EOS7_
 16659              		.set	_ZNSt5tupleIJRKN5boost13intrusive_ptrIN3pmt8pmt_baseEEEEEC1EOS7_,_ZNSt5tupleIJRKN5boost13intr
 16660              		.section	.text._ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKN5boost13intrusive_ptrIN3pm
 16661              		.align 2
 16662              		.weak	_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_bas
 16664              	_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS3
 16665              	.LFB15068:
 119:/usr/include/c++/6/ext/new_allocator.h **** 	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
 16666              		.loc 43 119 0
 16667              		.cfi_startproc
 16668              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 16669              		.cfi_lsda 0x1b,.LLSDA15068
 16670 0000 55       		pushq	%rbp
 16671              		.cfi_def_cfa_offset 16
 16672              		.cfi_offset 6, -16
 16673 0001 4889E5   		movq	%rsp, %rbp
 16674              		.cfi_def_cfa_register 6
 16675 0004 4155     		pushq	%r13
 16676 0006 4154     		pushq	%r12
 16677 0008 53       		pushq	%rbx
 16678 0009 4883EC58 		subq	$88, %rsp
 16679              		.cfi_offset 13, -24
 16680              		.cfi_offset 12, -32
 16681              		.cfi_offset 3, -40
 16682 000d 48897DB8 		movq	%rdi, -72(%rbp)
 16683 0011 488975B0 		movq	%rsi, -80(%rbp)
 16684 0015 488955A8 		movq	%rdx, -88(%rbp)
 16685 0019 48894DA0 		movq	%rcx, -96(%rbp)
 16686 001d 4C894598 		movq	%r8, -104(%rbp)
 120:/usr/include/c++/6/ext/new_allocator.h **** 
 16687              		.loc 43 120 0
 16688 0021 488B45A8 		movq	-88(%rbp), %rax
 16689 0025 4889C7   		movq	%rax, %rdi
 16690 0028 E8000000 		call	_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE
 16690      00
 16691 002d 448865CF 		movb	%r12b, -49(%rbp)
 16692 0031 488B45A0 		movq	-96(%rbp), %rax
 16693 0035 4889C7   		movq	%rax, %rdi
GAS LISTING /tmp/ccsIN87E.s 			page 661


 16694 0038 E8000000 		call	_ZSt7forwardISt5tupleIJRKN5boost13intrusive_ptrIN3pmt8pmt_baseEEEEEEOT_RNSt16remove_reference
 16694      00
 16695 003d 4889C2   		movq	%rax, %rdx
 16696 0040 488D45D0 		leaq	-48(%rbp), %rax
 16697 0044 4889D6   		movq	%rdx, %rsi
 16698 0047 4889C7   		movq	%rax, %rdi
 16699 004a E8000000 		call	_ZNSt5tupleIJRKN5boost13intrusive_ptrIN3pmt8pmt_baseEEEEEC1EOS7_
 16699      00
 16700 004f 4C8D6DD0 		leaq	-48(%rbp), %r13
 16701 0053 488B4598 		movq	-104(%rbp), %rax
 16702 0057 4889C7   		movq	%rax, %rdi
 16703 005a E8000000 		call	_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE
 16703      00
 16704 005f 885DDF   		movb	%bl, -33(%rbp)
 16705 0062 4C8B65B0 		movq	-80(%rbp), %r12
 16706 0066 4C89E6   		movq	%r12, %rsi
 16707 0069 BF280000 		movl	$40, %edi
 16707      00
 16708 006e E8000000 		call	_ZnwmPv
 16708      00
 16709 0073 4889C3   		movq	%rax, %rbx
 16710 0076 4885DB   		testq	%rbx, %rbx
 16711 0079 7434     		je	.L841
 120:/usr/include/c++/6/ext/new_allocator.h **** 
 16712              		.loc 43 120 0 is_stmt 0 discriminator 1
 16713 007b 0FB645DF 		movzbl	-33(%rbp), %eax
 16714 007f 50       		pushq	%rax
 16715 0080 0FB645CF 		movzbl	-49(%rbp), %eax
 16716 0084 50       		pushq	%rax
 16717 0085 4C89EE   		movq	%r13, %rsi
 16718 0088 4889DF   		movq	%rbx, %rdi
 16719              	.LEHB101:
 16720              		.cfi_escape 0x2e,0x10
 16721 008b E8000000 		call	_ZNSt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS0_8functionIFvS4_EEEEC1IJRS5_EJEEESt21p
 16721      00
 16722              	.LEHE101:
 16723 0090 4883C410 		addq	$16, %rsp
 16724 0094 EB19     		jmp	.L841
 16725              	.L840:
 16726 0096 4989C5   		movq	%rax, %r13
 120:/usr/include/c++/6/ext/new_allocator.h **** 
 16727              		.loc 43 120 0
 16728 0099 4C89E6   		movq	%r12, %rsi
 16729 009c 4889DF   		movq	%rbx, %rdi
 16730 009f E8000000 		call	_ZdlPvS_
 16730      00
 16731 00a4 4C89E8   		movq	%r13, %rax
 16732 00a7 4889C7   		movq	%rax, %rdi
 16733              	.LEHB102:
 16734 00aa E8000000 		call	_Unwind_Resume@PLT
 16734      00
 16735              	.LEHE102:
 16736              	.L841:
 16737 00af 90       		nop
 16738 00b0 488D65E8 		leaq	-24(%rbp), %rsp
 16739 00b4 5B       		popq	%rbx
 16740 00b5 415C     		popq	%r12
GAS LISTING /tmp/ccsIN87E.s 			page 662


 16741 00b7 415D     		popq	%r13
 16742 00b9 5D       		popq	%rbp
 16743              		.cfi_def_cfa 7, 8
 16744 00ba C3       		ret
 16745              		.cfi_endproc
 16746              	.LFE15068:
 16747              		.section	.gcc_except_table
 16748              	.LLSDA15068:
 16749 0264 FF       		.byte	0xff
 16750 0265 FF       		.byte	0xff
 16751 0266 01       		.byte	0x1
 16752 0267 0B       		.uleb128 .LLSDACSE15068-.LLSDACSB15068
 16753              	.LLSDACSB15068:
 16754 0268 8B01     		.uleb128 .LEHB101-.LFB15068
 16755 026a 05       		.uleb128 .LEHE101-.LEHB101
 16756 026b 9601     		.uleb128 .L840-.LFB15068
 16757 026d 00       		.uleb128 0
 16758 026e AA01     		.uleb128 .LEHB102-.LFB15068
 16759 0270 05       		.uleb128 .LEHE102-.LEHB102
 16760 0271 00       		.uleb128 0
 16761 0272 00       		.uleb128 0
 16762              	.LLSDACSE15068:
 16763              		.section	.text._ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKN5boost13intrusive_ptrIN3pm
 16765              		.section	.text._ZNK9__gnu_cxx16__aligned_membufISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEES
 16766              		.align 2
 16767              		.weak	_ZNK9__gnu_cxx16__aligned_membufISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt5dequeIS
 16769              	_ZNK9__gnu_cxx16__aligned_membufISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt5dequeIS6_SaIS6
 16770              	.LFB15085:
  74:/usr/include/c++/6/ext/aligned_buffer.h ****       { return static_cast<const _Tp*>(_M_addr()); }
 16771              		.loc 46 74 0 is_stmt 1
 16772              		.cfi_startproc
 16773 0000 55       		pushq	%rbp
 16774              		.cfi_def_cfa_offset 16
 16775              		.cfi_offset 6, -16
 16776 0001 4889E5   		movq	%rsp, %rbp
 16777              		.cfi_def_cfa_register 6
 16778 0004 4883EC10 		subq	$16, %rsp
 16779 0008 48897DF8 		movq	%rdi, -8(%rbp)
 16780              		.loc 46 75 0
 16781 000c 488B45F8 		movq	-8(%rbp), %rax
 16782 0010 4889C7   		movq	%rax, %rdi
 16783 0013 E8000000 		call	_ZNK9__gnu_cxx16__aligned_membufISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt5dequeIS6
 16783      00
 16784 0018 C9       		leave
 16785              		.cfi_def_cfa 7, 8
 16786 0019 C3       		ret
 16787              		.cfi_endproc
 16788              	.LFE15085:
 16790              		.section	.text._ZN9__gnu_cxx13new_allocatorIiE8allocateEmPKv,"axG",@progbits,_ZN9__gnu_cxx13new_al
 16791              		.align 2
 16792              		.weak	_ZN9__gnu_cxx13new_allocatorIiE8allocateEmPKv
 16794              	_ZN9__gnu_cxx13new_allocatorIiE8allocateEmPKv:
 16795              	.LFB15148:
  99:/usr/include/c++/6/ext/new_allocator.h ****       { 
 16796              		.loc 43 99 0
 16797              		.cfi_startproc
 16798 0000 55       		pushq	%rbp
GAS LISTING /tmp/ccsIN87E.s 			page 663


 16799              		.cfi_def_cfa_offset 16
 16800              		.cfi_offset 6, -16
 16801 0001 4889E5   		movq	%rsp, %rbp
 16802              		.cfi_def_cfa_register 6
 16803 0004 4883EC20 		subq	$32, %rsp
 16804 0008 48897DF8 		movq	%rdi, -8(%rbp)
 16805 000c 488975F0 		movq	%rsi, -16(%rbp)
 16806 0010 488955E8 		movq	%rdx, -24(%rbp)
 101:/usr/include/c++/6/ext/new_allocator.h **** 	  std::__throw_bad_alloc();
 16807              		.loc 43 101 0
 16808 0014 488B45F8 		movq	-8(%rbp), %rax
 16809 0018 4889C7   		movq	%rax, %rdi
 16810 001b E8000000 		call	_ZNK9__gnu_cxx13new_allocatorIiE8max_sizeEv
 16810      00
 16811 0020 483B45F0 		cmpq	-16(%rbp), %rax
 16812 0024 0F92C0   		setb	%al
 16813 0027 84C0     		testb	%al, %al
 16814 0029 7405     		je	.L845
 102:/usr/include/c++/6/ext/new_allocator.h **** 
 16815              		.loc 43 102 0
 16816 002b E8000000 		call	_ZSt17__throw_bad_allocv@PLT
 16816      00
 16817              	.L845:
 104:/usr/include/c++/6/ext/new_allocator.h ****       }
 16818              		.loc 43 104 0
 16819 0030 488B45F0 		movq	-16(%rbp), %rax
 16820 0034 48C1E002 		salq	$2, %rax
 16821 0038 4889C7   		movq	%rax, %rdi
 16822 003b E8000000 		call	_Znwm@PLT
 16822      00
 105:/usr/include/c++/6/ext/new_allocator.h **** 
 16823              		.loc 43 105 0
 16824 0040 C9       		leave
 16825              		.cfi_def_cfa 7, 8
 16826 0041 C3       		ret
 16827              		.cfi_endproc
 16828              	.LFE15148:
 16830              		.section	.text._ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEET_S8_,"axG
 16831              		.weak	_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEET_S8_
 16833              	_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEET_S8_:
 16834              	.LFB15149:
 408:/usr/include/c++/6/bits/cpp_type_traits.h ****     { return __it; }
 16835              		.loc 47 408 0
 16836              		.cfi_startproc
 16837 0000 55       		pushq	%rbp
 16838              		.cfi_def_cfa_offset 16
 16839              		.cfi_offset 6, -16
 16840 0001 4889E5   		movq	%rsp, %rbp
 16841              		.cfi_def_cfa_register 6
 16842 0004 48897DF8 		movq	%rdi, -8(%rbp)
 16843              		.loc 47 409 0
 16844 0008 488B45F8 		movq	-8(%rbp), %rax
 16845 000c 5D       		popq	%rbp
 16846              		.cfi_def_cfa 7, 8
 16847 000d C3       		ret
 16848              		.cfi_endproc
 16849              	.LFE15149:
GAS LISTING /tmp/ccsIN87E.s 			page 664


 16851              		.section	.text._ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEPiET1
 16852              		.weak	_ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEPiET1_T0_SA_S9
 16854              	_ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEPiET1_T0_SA_S9_:
 16855              	.LFB15150:
 420:/usr/include/c++/6/bits/stl_algobase.h ****     {
 16856              		.loc 44 420 0
 16857              		.cfi_startproc
 16858 0000 55       		pushq	%rbp
 16859              		.cfi_def_cfa_offset 16
 16860              		.cfi_offset 6, -16
 16861 0001 4889E5   		movq	%rsp, %rbp
 16862              		.cfi_def_cfa_register 6
 16863 0004 4154     		pushq	%r12
 16864 0006 53       		pushq	%rbx
 16865 0007 4883EC20 		subq	$32, %rsp
 16866              		.cfi_offset 12, -24
 16867              		.cfi_offset 3, -32
 16868 000b 48897DE8 		movq	%rdi, -24(%rbp)
 16869 000f 488975E0 		movq	%rsi, -32(%rbp)
 16870 0013 488955D8 		movq	%rdx, -40(%rbp)
 422:/usr/include/c++/6/bits/stl_algobase.h **** 					     std::__niter_base(__last),
 16871              		.loc 44 422 0
 16872 0017 488B45D8 		movq	-40(%rbp), %rax
 16873 001b 4889C7   		movq	%rax, %rdi
 16874 001e E8000000 		call	_ZSt12__niter_baseIPiET_S1_
 16874      00
 16875 0023 4989C4   		movq	%rax, %r12
 16876 0026 488B45E0 		movq	-32(%rbp), %rax
 16877 002a 4889C7   		movq	%rax, %rdi
 16878 002d E8000000 		call	_ZSt12__niter_baseIPKiSt6vectorIiSaIiEEET_N9__gnu_cxx17__normal_iteratorIS5_T0_EE
 16878      00
 16879 0032 4889C3   		movq	%rax, %rbx
 16880 0035 488B45E8 		movq	-24(%rbp), %rax
 16881 0039 4889C7   		movq	%rax, %rdi
 16882 003c E8000000 		call	_ZSt12__niter_baseIPKiSt6vectorIiSaIiEEET_N9__gnu_cxx17__normal_iteratorIS5_T0_EE
 16882      00
 424:/usr/include/c++/6/bits/stl_algobase.h ****     }
 16883              		.loc 44 424 0
 16884 0041 4C89E2   		movq	%r12, %rdx
 16885 0044 4889DE   		movq	%rbx, %rsi
 16886 0047 4889C7   		movq	%rax, %rdi
 16887 004a E8000000 		call	_ZSt13__copy_move_aILb0EPKiPiET1_T0_S4_S3_
 16887      00
 425:/usr/include/c++/6/bits/stl_algobase.h **** 
 16888              		.loc 44 425 0
 16889 004f 4883C420 		addq	$32, %rsp
 16890 0053 5B       		popq	%rbx
 16891 0054 415C     		popq	%r12
 16892 0056 5D       		popq	%rbp
 16893              		.cfi_def_cfa 7, 8
 16894 0057 C3       		ret
 16895              		.cfi_endproc
 16896              	.LFE15150:
 16898              		.section	.text._ZSt4moveIRN2gr5tag_tEEONSt16remove_referenceIT_E4typeEOS4_,"axG",@progbits,_ZSt4mo
 16899              		.weak	_ZSt4moveIRN2gr5tag_tEEONSt16remove_referenceIT_E4typeEOS4_
 16901              	_ZSt4moveIRN2gr5tag_tEEONSt16remove_referenceIT_E4typeEOS4_:
 16902              	.LFB15152:
GAS LISTING /tmp/ccsIN87E.s 			page 665


 101:/usr/include/c++/6/bits/move.h ****     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 16903              		.loc 33 101 0
 16904              		.cfi_startproc
 16905 0000 55       		pushq	%rbp
 16906              		.cfi_def_cfa_offset 16
 16907              		.cfi_offset 6, -16
 16908 0001 4889E5   		movq	%rsp, %rbp
 16909              		.cfi_def_cfa_register 6
 16910 0004 48897DF8 		movq	%rdi, -8(%rbp)
 16911              		.loc 33 102 0
 16912 0008 488B45F8 		movq	-8(%rbp), %rax
 16913 000c 5D       		popq	%rbp
 16914              		.cfi_def_cfa 7, 8
 16915 000d C3       		ret
 16916              		.cfi_endproc
 16917              	.LFE15152:
 16919              		.section	.text._ZNSt11__copy_moveILb1ELb0ESt26random_access_iterator_tagE8__copy_mIPN2gr5tag_tES5_
 16920              		.weak	_ZNSt11__copy_moveILb1ELb0ESt26random_access_iterator_tagE8__copy_mIPN2gr5tag_tES5_EET0_T_S7
 16922              	_ZNSt11__copy_moveILb1ELb0ESt26random_access_iterator_tagE8__copy_mIPN2gr5tag_tES5_EET0_T_S7_S6_:
 16923              	.LFB15151:
 338:/usr/include/c++/6/bits/stl_algobase.h ****         { 
 16924              		.loc 44 338 0
 16925              		.cfi_startproc
 16926 0000 55       		pushq	%rbp
 16927              		.cfi_def_cfa_offset 16
 16928              		.cfi_offset 6, -16
 16929 0001 4889E5   		movq	%rsp, %rbp
 16930              		.cfi_def_cfa_register 6
 16931 0004 4883EC30 		subq	$48, %rsp
 16932 0008 48897DE8 		movq	%rdi, -24(%rbp)
 16933 000c 488975E0 		movq	%rsi, -32(%rbp)
 16934 0010 488955D8 		movq	%rdx, -40(%rbp)
 16935              	.LBB149:
 341:/usr/include/c++/6/bits/stl_algobase.h **** 	    {
 16936              		.loc 44 341 0
 16937 0014 488B55E0 		movq	-32(%rbp), %rdx
 16938 0018 488B45E8 		movq	-24(%rbp), %rax
 16939 001c 4829C2   		subq	%rax, %rdx
 16940 001f 4889D0   		movq	%rdx, %rax
 16941 0022 48C1F803 		sarq	$3, %rax
 16942 0026 4889C2   		movq	%rax, %rdx
 16943 0029 48B8B76D 		movabsq	$7905747460161236407, %rax
 16943      DBB66DDB 
 16943      B66D
 16944 0033 480FAFC2 		imulq	%rdx, %rax
 16945 0037 488945F8 		movq	%rax, -8(%rbp)
 16946              	.L855:
 341:/usr/include/c++/6/bits/stl_algobase.h **** 	    {
 16947              		.loc 44 341 0 is_stmt 0 discriminator 3
 16948 003b 48837DF8 		cmpq	$0, -8(%rbp)
 16948      00
 16949 0040 7E2F     		jle	.L854
 343:/usr/include/c++/6/bits/stl_algobase.h **** 	      ++__first;
 16950              		.loc 44 343 0 is_stmt 1 discriminator 2
 16951 0042 488B45E8 		movq	-24(%rbp), %rax
 16952 0046 4889C7   		movq	%rax, %rdi
 16953 0049 E8000000 		call	_ZSt4moveIRN2gr5tag_tEEONSt16remove_referenceIT_E4typeEOS4_
GAS LISTING /tmp/ccsIN87E.s 			page 666


 16953      00
 16954 004e 4889C2   		movq	%rax, %rdx
 16955 0051 488B45D8 		movq	-40(%rbp), %rax
 16956 0055 4889D6   		movq	%rdx, %rsi
 16957 0058 4889C7   		movq	%rax, %rdi
 16958 005b E8000000 		call	_ZN2gr5tag_taSERKS0_
 16958      00
 344:/usr/include/c++/6/bits/stl_algobase.h **** 	      ++__result;
 16959              		.loc 44 344 0 discriminator 2
 16960 0060 488345E8 		addq	$56, -24(%rbp)
 16960      38
 345:/usr/include/c++/6/bits/stl_algobase.h **** 	    }
 16961              		.loc 44 345 0 discriminator 2
 16962 0065 488345D8 		addq	$56, -40(%rbp)
 16962      38
 341:/usr/include/c++/6/bits/stl_algobase.h **** 	    {
 16963              		.loc 44 341 0 discriminator 2
 16964 006a 48836DF8 		subq	$1, -8(%rbp)
 16964      01
 16965 006f EBCA     		jmp	.L855
 16966              	.L854:
 16967              	.LBE149:
 347:/usr/include/c++/6/bits/stl_algobase.h **** 	}
 16968              		.loc 44 347 0
 16969 0071 488B45D8 		movq	-40(%rbp), %rax
 348:/usr/include/c++/6/bits/stl_algobase.h ****     };
 16970              		.loc 44 348 0
 16971 0075 C9       		leave
 16972              		.cfi_def_cfa 7, 8
 16973 0076 C3       		ret
 16974              		.cfi_endproc
 16975              	.LFE15151:
 16977              		.section	.text._ZN5boost9function1IvNS_13intrusive_ptrIN3pmt8pmt_baseEEEED2Ev,"axG",@progbits,_ZN5
 16978              		.align 2
 16979              		.weak	_ZN5boost9function1IvNS_13intrusive_ptrIN3pmt8pmt_baseEEEED2Ev
 16981              	_ZN5boost9function1IvNS_13intrusive_ptrIN3pmt8pmt_baseEEEED2Ev:
 16982              	.LFB15169:
 763:/usr/include/boost/function/function_template.hpp **** 
 16983              		.loc 29 763 0
 16984              		.cfi_startproc
 16985              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 16986              		.cfi_lsda 0x1b,.LLSDA15169
 16987 0000 55       		pushq	%rbp
 16988              		.cfi_def_cfa_offset 16
 16989              		.cfi_offset 6, -16
 16990 0001 4889E5   		movq	%rsp, %rbp
 16991              		.cfi_def_cfa_register 6
 16992 0004 4883EC10 		subq	$16, %rsp
 16993 0008 48897DF8 		movq	%rdi, -8(%rbp)
 16994              	.LBB150:
 763:/usr/include/boost/function/function_template.hpp **** 
 16995              		.loc 29 763 0
 16996 000c 488B45F8 		movq	-8(%rbp), %rax
 16997 0010 4889C7   		movq	%rax, %rdi
 16998 0013 E8000000 		call	_ZN5boost9function1IvNS_13intrusive_ptrIN3pmt8pmt_baseEEEE5clearEv
 16998      00
 16999              	.LBE150:
GAS LISTING /tmp/ccsIN87E.s 			page 667


 17000 0018 90       		nop
 17001 0019 C9       		leave
 17002              		.cfi_def_cfa 7, 8
 17003 001a C3       		ret
 17004              		.cfi_endproc
 17005              	.LFE15169:
 17006              		.section	.gcc_except_table
 17007              	.LLSDA15169:
 17008 0273 FF       		.byte	0xff
 17009 0274 FF       		.byte	0xff
 17010 0275 01       		.byte	0x1
 17011 0276 00       		.uleb128 .LLSDACSE15169-.LLSDACSB15169
 17012              	.LLSDACSB15169:
 17013              	.LLSDACSE15169:
 17014              		.section	.text._ZN5boost9function1IvNS_13intrusive_ptrIN3pmt8pmt_baseEEEED2Ev,"axG",@progbits,_ZN5
 17016              		.weak	_ZN5boost9function1IvNS_13intrusive_ptrIN3pmt8pmt_baseEEEED1Ev
 17017              		.set	_ZN5boost9function1IvNS_13intrusive_ptrIN3pmt8pmt_baseEEEED1Ev,_ZN5boost9function1IvNS_13intr
 17018              		.section	.text._ZNK9__gnu_cxx16__aligned_membufISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEEN
 17019              		.align 2
 17020              		.weak	_ZNK9__gnu_cxx16__aligned_membufISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS2_8funct
 17022              	_ZNK9__gnu_cxx16__aligned_membufISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS2_8functionIFvS
 17023              	.LFB15175:
  66:/usr/include/c++/6/ext/aligned_buffer.h ****       { return static_cast<const void*>(&_M_storage); }
 17024              		.loc 46 66 0
 17025              		.cfi_startproc
 17026 0000 55       		pushq	%rbp
 17027              		.cfi_def_cfa_offset 16
 17028              		.cfi_offset 6, -16
 17029 0001 4889E5   		movq	%rsp, %rbp
 17030              		.cfi_def_cfa_register 6
 17031 0004 48897DF8 		movq	%rdi, -8(%rbp)
  67:/usr/include/c++/6/ext/aligned_buffer.h **** 
 17032              		.loc 46 67 0
 17033 0008 488B45F8 		movq	-8(%rbp), %rax
 17034 000c 5D       		popq	%rbp
 17035              		.cfi_def_cfa 7, 8
 17036 000d C3       		ret
 17037              		.cfi_endproc
 17038              	.LFE15175:
 17040              		.section	.text._ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKN5boost13intrusive_ptrIN3p
 17041              		.align 2
 17042              		.weak	_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_ba
 17044              	_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS
 17045              	.LFB15176:
 113:/usr/include/c++/6/ext/new_allocator.h ****       { return size_t(-1) / sizeof(_Tp); }
 17046              		.loc 43 113 0
 17047              		.cfi_startproc
 17048 0000 55       		pushq	%rbp
 17049              		.cfi_def_cfa_offset 16
 17050              		.cfi_offset 6, -16
 17051 0001 4889E5   		movq	%rsp, %rbp
 17052              		.cfi_def_cfa_register 6
 17053 0004 48897DF8 		movq	%rdi, -8(%rbp)
 114:/usr/include/c++/6/ext/new_allocator.h **** 
 17054              		.loc 43 114 0
 17055 0008 48B88EE3 		movabsq	$256204778801521550, %rax
 17055      388EE338 
GAS LISTING /tmp/ccsIN87E.s 			page 668


 17055      8E03
 17056 0012 5D       		popq	%rbp
 17057              		.cfi_def_cfa 7, 8
 17058 0013 C3       		ret
 17059              		.cfi_endproc
 17060              	.LFE15176:
 17062              		.section	.text._ZNSt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS0_8functionIFvS4_EEEEC2IJRS5_
 17063              		.align 2
 17064              		.weak	_ZNSt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS0_8functionIFvS4_EEEEC2IJRS5_EJEEESt21
 17066              	_ZNSt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS0_8functionIFvS4_EEEEC2IJRS5_EJEEESt21piecewi
 17067              	.LFB15178:
 655:/usr/include/c++/6/tuple **** 
 656:/usr/include/c++/6/tuple ****       // Shortcut for the cases where constructors taking tuples
 657:/usr/include/c++/6/tuple ****       // must avoid creating temporaries.
 658:/usr/include/c++/6/tuple ****       template<typename _Dummy> using _TNTC =
 659:/usr/include/c++/6/tuple ****         _TC<is_same<_Dummy, void>::value && sizeof...(_Elements) == 1,
 660:/usr/include/c++/6/tuple ****             _Elements...>;
 661:/usr/include/c++/6/tuple **** 
 662:/usr/include/c++/6/tuple ****       template<typename... _UElements, typename _Dummy = void, typename
 663:/usr/include/c++/6/tuple ****         enable_if<_TMC<_UElements...>::template
 664:/usr/include/c++/6/tuple ****                     _ConstructibleTuple<_UElements...>()
 665:/usr/include/c++/6/tuple ****                   && _TMC<_UElements...>::template
 666:/usr/include/c++/6/tuple ****                     _ImplicitlyConvertibleTuple<_UElements...>()
 667:/usr/include/c++/6/tuple ****                   && _TNTC<_Dummy>::template
 668:/usr/include/c++/6/tuple ****                     _NonNestedTuple<const tuple<_UElements...>&>(),
 669:/usr/include/c++/6/tuple ****         bool>::type=true>
 670:/usr/include/c++/6/tuple ****         constexpr tuple(const tuple<_UElements...>& __in)
 671:/usr/include/c++/6/tuple ****         : _Inherited(static_cast<const _Tuple_impl<0, _UElements...>&>(__in))
 672:/usr/include/c++/6/tuple ****         { }
 673:/usr/include/c++/6/tuple **** 
 674:/usr/include/c++/6/tuple ****       template<typename... _UElements, typename _Dummy = void, typename
 675:/usr/include/c++/6/tuple ****         enable_if<_TMC<_UElements...>::template
 676:/usr/include/c++/6/tuple ****                     _ConstructibleTuple<_UElements...>()
 677:/usr/include/c++/6/tuple ****                   && !_TMC<_UElements...>::template
 678:/usr/include/c++/6/tuple ****                     _ImplicitlyConvertibleTuple<_UElements...>()
 679:/usr/include/c++/6/tuple ****                   && _TNTC<_Dummy>::template
 680:/usr/include/c++/6/tuple ****                     _NonNestedTuple<const tuple<_UElements...>&>(),
 681:/usr/include/c++/6/tuple ****         bool>::type=false>
 682:/usr/include/c++/6/tuple ****         explicit constexpr tuple(const tuple<_UElements...>& __in)
 683:/usr/include/c++/6/tuple ****         : _Inherited(static_cast<const _Tuple_impl<0, _UElements...>&>(__in))
 684:/usr/include/c++/6/tuple ****         { }
 685:/usr/include/c++/6/tuple **** 
 686:/usr/include/c++/6/tuple ****       template<typename... _UElements, typename _Dummy = void, typename
 687:/usr/include/c++/6/tuple ****         enable_if<_TMC<_UElements...>::template
 688:/usr/include/c++/6/tuple ****                     _MoveConstructibleTuple<_UElements...>()
 689:/usr/include/c++/6/tuple ****                   && _TMC<_UElements...>::template
 690:/usr/include/c++/6/tuple ****                     _ImplicitlyMoveConvertibleTuple<_UElements...>()
 691:/usr/include/c++/6/tuple ****                   && _TNTC<_Dummy>::template
 692:/usr/include/c++/6/tuple ****                     _NonNestedTuple<tuple<_UElements...>&&>(),
 693:/usr/include/c++/6/tuple ****         bool>::type=true>
 694:/usr/include/c++/6/tuple ****         constexpr tuple(tuple<_UElements...>&& __in)
 695:/usr/include/c++/6/tuple ****         : _Inherited(static_cast<_Tuple_impl<0, _UElements...>&&>(__in)) { }
 696:/usr/include/c++/6/tuple **** 
 697:/usr/include/c++/6/tuple ****       template<typename... _UElements, typename _Dummy = void, typename
 698:/usr/include/c++/6/tuple ****         enable_if<_TMC<_UElements...>::template
 699:/usr/include/c++/6/tuple ****                     _MoveConstructibleTuple<_UElements...>()
 700:/usr/include/c++/6/tuple ****                   && !_TMC<_UElements...>::template
GAS LISTING /tmp/ccsIN87E.s 			page 669


 701:/usr/include/c++/6/tuple ****                     _ImplicitlyMoveConvertibleTuple<_UElements...>()
 702:/usr/include/c++/6/tuple ****                   && _TNTC<_Dummy>::template
 703:/usr/include/c++/6/tuple ****                     _NonNestedTuple<tuple<_UElements...>&&>(),
 704:/usr/include/c++/6/tuple ****         bool>::type=false>
 705:/usr/include/c++/6/tuple ****         explicit constexpr tuple(tuple<_UElements...>&& __in)
 706:/usr/include/c++/6/tuple ****         : _Inherited(static_cast<_Tuple_impl<0, _UElements...>&&>(__in)) { }
 707:/usr/include/c++/6/tuple **** 
 708:/usr/include/c++/6/tuple ****       // Allocator-extended constructors.
 709:/usr/include/c++/6/tuple **** 
 710:/usr/include/c++/6/tuple ****       template<typename _Alloc>
 711:/usr/include/c++/6/tuple **** 	tuple(allocator_arg_t __tag, const _Alloc& __a)
 712:/usr/include/c++/6/tuple **** 	: _Inherited(__tag, __a) { }
 713:/usr/include/c++/6/tuple **** 
 714:/usr/include/c++/6/tuple ****       template<typename _Alloc, typename _Dummy = void,
 715:/usr/include/c++/6/tuple ****                typename enable_if<
 716:/usr/include/c++/6/tuple ****                  _TCC<_Dummy>::template
 717:/usr/include/c++/6/tuple ****                    _ConstructibleTuple<_Elements...>()
 718:/usr/include/c++/6/tuple ****                  && _TCC<_Dummy>::template
 719:/usr/include/c++/6/tuple ****                    _ImplicitlyConvertibleTuple<_Elements...>(),
 720:/usr/include/c++/6/tuple ****                bool>::type=true>
 721:/usr/include/c++/6/tuple **** 	tuple(allocator_arg_t __tag, const _Alloc& __a,
 722:/usr/include/c++/6/tuple **** 	      const _Elements&... __elements)
 723:/usr/include/c++/6/tuple **** 	: _Inherited(__tag, __a, __elements...) { }
 724:/usr/include/c++/6/tuple **** 
 725:/usr/include/c++/6/tuple ****       template<typename _Alloc, typename _Dummy = void,
 726:/usr/include/c++/6/tuple ****                typename enable_if<
 727:/usr/include/c++/6/tuple ****                  _TCC<_Dummy>::template
 728:/usr/include/c++/6/tuple ****                    _ConstructibleTuple<_Elements...>()
 729:/usr/include/c++/6/tuple ****                  && !_TCC<_Dummy>::template
 730:/usr/include/c++/6/tuple ****                    _ImplicitlyConvertibleTuple<_Elements...>(),
 731:/usr/include/c++/6/tuple ****                bool>::type=false>
 732:/usr/include/c++/6/tuple **** 	explicit tuple(allocator_arg_t __tag, const _Alloc& __a,
 733:/usr/include/c++/6/tuple ****                        const _Elements&... __elements)
 734:/usr/include/c++/6/tuple **** 	: _Inherited(__tag, __a, __elements...) { }
 735:/usr/include/c++/6/tuple **** 
 736:/usr/include/c++/6/tuple ****       template<typename _Alloc, typename... _UElements, typename
 737:/usr/include/c++/6/tuple ****         enable_if<_TMC<_UElements...>::template
 738:/usr/include/c++/6/tuple ****                     _MoveConstructibleTuple<_UElements...>()
 739:/usr/include/c++/6/tuple ****                   && _TMC<_UElements...>::template
 740:/usr/include/c++/6/tuple ****                     _ImplicitlyMoveConvertibleTuple<_UElements...>(),
 741:/usr/include/c++/6/tuple ****         bool>::type=true>
 742:/usr/include/c++/6/tuple **** 	tuple(allocator_arg_t __tag, const _Alloc& __a,
 743:/usr/include/c++/6/tuple **** 	      _UElements&&... __elements)
 744:/usr/include/c++/6/tuple **** 	: _Inherited(__tag, __a, std::forward<_UElements>(__elements)...)
 745:/usr/include/c++/6/tuple ****        	{ }
 746:/usr/include/c++/6/tuple **** 
 747:/usr/include/c++/6/tuple ****       template<typename _Alloc, typename... _UElements, typename
 748:/usr/include/c++/6/tuple ****         enable_if<_TMC<_UElements...>::template
 749:/usr/include/c++/6/tuple ****                     _MoveConstructibleTuple<_UElements...>()
 750:/usr/include/c++/6/tuple ****                   && !_TMC<_UElements...>::template
 751:/usr/include/c++/6/tuple ****                     _ImplicitlyMoveConvertibleTuple<_UElements...>(),
 752:/usr/include/c++/6/tuple ****         bool>::type=false>
 753:/usr/include/c++/6/tuple **** 	explicit tuple(allocator_arg_t __tag, const _Alloc& __a,
 754:/usr/include/c++/6/tuple **** 	      _UElements&&... __elements)
 755:/usr/include/c++/6/tuple **** 	: _Inherited(__tag, __a, std::forward<_UElements>(__elements)...)
 756:/usr/include/c++/6/tuple ****         { }
 757:/usr/include/c++/6/tuple **** 
GAS LISTING /tmp/ccsIN87E.s 			page 670


 758:/usr/include/c++/6/tuple ****       template<typename _Alloc>
 759:/usr/include/c++/6/tuple **** 	tuple(allocator_arg_t __tag, const _Alloc& __a, const tuple& __in)
 760:/usr/include/c++/6/tuple **** 	: _Inherited(__tag, __a, static_cast<const _Inherited&>(__in)) { }
 761:/usr/include/c++/6/tuple **** 
 762:/usr/include/c++/6/tuple ****       template<typename _Alloc>
 763:/usr/include/c++/6/tuple **** 	tuple(allocator_arg_t __tag, const _Alloc& __a, tuple&& __in)
 764:/usr/include/c++/6/tuple **** 	: _Inherited(__tag, __a, static_cast<_Inherited&&>(__in)) { }
 765:/usr/include/c++/6/tuple **** 
 766:/usr/include/c++/6/tuple ****       template<typename _Alloc, typename... _UElements, typename
 767:/usr/include/c++/6/tuple ****         enable_if<_TMC<_UElements...>::template
 768:/usr/include/c++/6/tuple ****                     _ConstructibleTuple<_UElements...>()
 769:/usr/include/c++/6/tuple ****                   && _TMC<_UElements...>::template
 770:/usr/include/c++/6/tuple ****                     _ImplicitlyConvertibleTuple<_UElements...>(),
 771:/usr/include/c++/6/tuple ****         bool>::type=true>
 772:/usr/include/c++/6/tuple **** 	tuple(allocator_arg_t __tag, const _Alloc& __a,
 773:/usr/include/c++/6/tuple **** 	      const tuple<_UElements...>& __in)
 774:/usr/include/c++/6/tuple **** 	: _Inherited(__tag, __a,
 775:/usr/include/c++/6/tuple **** 	             static_cast<const _Tuple_impl<0, _UElements...>&>(__in))
 776:/usr/include/c++/6/tuple **** 	{ }
 777:/usr/include/c++/6/tuple **** 
 778:/usr/include/c++/6/tuple ****       template<typename _Alloc, typename... _UElements, typename
 779:/usr/include/c++/6/tuple ****         enable_if<_TMC<_UElements...>::template
 780:/usr/include/c++/6/tuple ****                     _ConstructibleTuple<_UElements...>()
 781:/usr/include/c++/6/tuple ****                   && !_TMC<_UElements...>::template
 782:/usr/include/c++/6/tuple ****                     _ImplicitlyConvertibleTuple<_UElements...>(),
 783:/usr/include/c++/6/tuple ****         bool>::type=false>
 784:/usr/include/c++/6/tuple **** 	explicit tuple(allocator_arg_t __tag, const _Alloc& __a,
 785:/usr/include/c++/6/tuple **** 	      const tuple<_UElements...>& __in)
 786:/usr/include/c++/6/tuple **** 	: _Inherited(__tag, __a,
 787:/usr/include/c++/6/tuple **** 	             static_cast<const _Tuple_impl<0, _UElements...>&>(__in))
 788:/usr/include/c++/6/tuple **** 	{ }
 789:/usr/include/c++/6/tuple **** 
 790:/usr/include/c++/6/tuple ****       template<typename _Alloc, typename... _UElements, typename
 791:/usr/include/c++/6/tuple ****         enable_if<_TMC<_UElements...>::template
 792:/usr/include/c++/6/tuple ****                     _MoveConstructibleTuple<_UElements...>()
 793:/usr/include/c++/6/tuple ****                   && _TMC<_UElements...>::template
 794:/usr/include/c++/6/tuple ****                     _ImplicitlyMoveConvertibleTuple<_UElements...>(),
 795:/usr/include/c++/6/tuple ****         bool>::type=true>
 796:/usr/include/c++/6/tuple **** 	tuple(allocator_arg_t __tag, const _Alloc& __a,
 797:/usr/include/c++/6/tuple **** 	      tuple<_UElements...>&& __in)
 798:/usr/include/c++/6/tuple **** 	: _Inherited(__tag, __a,
 799:/usr/include/c++/6/tuple **** 	             static_cast<_Tuple_impl<0, _UElements...>&&>(__in))
 800:/usr/include/c++/6/tuple **** 	{ }
 801:/usr/include/c++/6/tuple **** 
 802:/usr/include/c++/6/tuple ****       template<typename _Alloc, typename... _UElements, typename
 803:/usr/include/c++/6/tuple ****         enable_if<_TMC<_UElements...>::template
 804:/usr/include/c++/6/tuple ****                     _MoveConstructibleTuple<_UElements...>()
 805:/usr/include/c++/6/tuple ****                   && !_TMC<_UElements...>::template
 806:/usr/include/c++/6/tuple ****                     _ImplicitlyMoveConvertibleTuple<_UElements...>(),
 807:/usr/include/c++/6/tuple ****         bool>::type=false>
 808:/usr/include/c++/6/tuple **** 	explicit tuple(allocator_arg_t __tag, const _Alloc& __a,
 809:/usr/include/c++/6/tuple **** 	      tuple<_UElements...>&& __in)
 810:/usr/include/c++/6/tuple **** 	: _Inherited(__tag, __a,
 811:/usr/include/c++/6/tuple **** 	             static_cast<_Tuple_impl<0, _UElements...>&&>(__in))
 812:/usr/include/c++/6/tuple **** 	{ }
 813:/usr/include/c++/6/tuple **** 
 814:/usr/include/c++/6/tuple ****       tuple&
GAS LISTING /tmp/ccsIN87E.s 			page 671


 815:/usr/include/c++/6/tuple ****       operator=(const tuple& __in)
 816:/usr/include/c++/6/tuple ****       {
 817:/usr/include/c++/6/tuple **** 	static_cast<_Inherited&>(*this) = __in;
 818:/usr/include/c++/6/tuple **** 	return *this;
 819:/usr/include/c++/6/tuple ****       }
 820:/usr/include/c++/6/tuple **** 
 821:/usr/include/c++/6/tuple ****       tuple&
 822:/usr/include/c++/6/tuple ****       operator=(tuple&& __in)
 823:/usr/include/c++/6/tuple ****       noexcept(is_nothrow_move_assignable<_Inherited>::value)
 824:/usr/include/c++/6/tuple ****       {
 825:/usr/include/c++/6/tuple **** 	static_cast<_Inherited&>(*this) = std::move(__in);
 826:/usr/include/c++/6/tuple **** 	return *this;
 827:/usr/include/c++/6/tuple ****       }
 828:/usr/include/c++/6/tuple **** 
 829:/usr/include/c++/6/tuple ****       template<typename... _UElements, typename = typename
 830:/usr/include/c++/6/tuple **** 	       enable_if<sizeof...(_UElements)
 831:/usr/include/c++/6/tuple **** 			 == sizeof...(_Elements)>::type>
 832:/usr/include/c++/6/tuple ****         tuple&
 833:/usr/include/c++/6/tuple ****         operator=(const tuple<_UElements...>& __in)
 834:/usr/include/c++/6/tuple ****         {
 835:/usr/include/c++/6/tuple **** 	  static_cast<_Inherited&>(*this) = __in;
 836:/usr/include/c++/6/tuple **** 	  return *this;
 837:/usr/include/c++/6/tuple **** 	}
 838:/usr/include/c++/6/tuple **** 
 839:/usr/include/c++/6/tuple ****       template<typename... _UElements, typename = typename
 840:/usr/include/c++/6/tuple **** 	       enable_if<sizeof...(_UElements)
 841:/usr/include/c++/6/tuple **** 			 == sizeof...(_Elements)>::type>
 842:/usr/include/c++/6/tuple ****         tuple&
 843:/usr/include/c++/6/tuple ****         operator=(tuple<_UElements...>&& __in)
 844:/usr/include/c++/6/tuple ****         {
 845:/usr/include/c++/6/tuple **** 	  static_cast<_Inherited&>(*this) = std::move(__in);
 846:/usr/include/c++/6/tuple **** 	  return *this;
 847:/usr/include/c++/6/tuple **** 	}
 848:/usr/include/c++/6/tuple **** 
 849:/usr/include/c++/6/tuple ****       void
 850:/usr/include/c++/6/tuple ****       swap(tuple& __in)
 851:/usr/include/c++/6/tuple ****       noexcept(noexcept(__in._M_swap(__in)))
 852:/usr/include/c++/6/tuple ****       { _Inherited::_M_swap(__in); }
 853:/usr/include/c++/6/tuple ****     };
 854:/usr/include/c++/6/tuple **** 
 855:/usr/include/c++/6/tuple ****   // Explicit specialization, zero-element tuple.
 856:/usr/include/c++/6/tuple ****   template<>
 857:/usr/include/c++/6/tuple ****     class tuple<>
 858:/usr/include/c++/6/tuple ****     {
 859:/usr/include/c++/6/tuple ****     public:
 860:/usr/include/c++/6/tuple ****       void swap(tuple&) noexcept { /* no-op */ }
 861:/usr/include/c++/6/tuple ****     };
 862:/usr/include/c++/6/tuple **** 
 863:/usr/include/c++/6/tuple ****   /// Partial specialization, 2-element tuple.
 864:/usr/include/c++/6/tuple ****   /// Includes construction and assignment from a pair.
 865:/usr/include/c++/6/tuple ****   template<typename _T1, typename _T2>
 866:/usr/include/c++/6/tuple ****     class tuple<_T1, _T2> : public _Tuple_impl<0, _T1, _T2>
 867:/usr/include/c++/6/tuple ****     {
 868:/usr/include/c++/6/tuple ****       typedef _Tuple_impl<0, _T1, _T2> _Inherited;
 869:/usr/include/c++/6/tuple **** 
 870:/usr/include/c++/6/tuple ****     public:
 871:/usr/include/c++/6/tuple ****       template <typename _U1 = _T1,
GAS LISTING /tmp/ccsIN87E.s 			page 672


 872:/usr/include/c++/6/tuple ****                 typename _U2 = _T2,
 873:/usr/include/c++/6/tuple ****                 typename enable_if<__and_<
 874:/usr/include/c++/6/tuple ****                                      __is_implicitly_default_constructible<_U1>,
 875:/usr/include/c++/6/tuple ****                                      __is_implicitly_default_constructible<_U2>>
 876:/usr/include/c++/6/tuple ****                                    ::value, bool>::type = true>
 877:/usr/include/c++/6/tuple **** 
 878:/usr/include/c++/6/tuple ****       constexpr tuple()
 879:/usr/include/c++/6/tuple ****       : _Inherited() { }
 880:/usr/include/c++/6/tuple **** 
 881:/usr/include/c++/6/tuple ****       template <typename _U1 = _T1,
 882:/usr/include/c++/6/tuple ****                 typename _U2 = _T2,
 883:/usr/include/c++/6/tuple ****                 typename enable_if<
 884:/usr/include/c++/6/tuple ****                   __and_<
 885:/usr/include/c++/6/tuple ****                     is_default_constructible<_U1>,
 886:/usr/include/c++/6/tuple ****                     is_default_constructible<_U2>,
 887:/usr/include/c++/6/tuple ****                     __not_<
 888:/usr/include/c++/6/tuple ****                       __and_<__is_implicitly_default_constructible<_U1>,
 889:/usr/include/c++/6/tuple ****                              __is_implicitly_default_constructible<_U2>>>>
 890:/usr/include/c++/6/tuple ****                   ::value, bool>::type = false>
 891:/usr/include/c++/6/tuple **** 
 892:/usr/include/c++/6/tuple ****       explicit constexpr tuple()
 893:/usr/include/c++/6/tuple ****       : _Inherited() { }
 894:/usr/include/c++/6/tuple **** 
 895:/usr/include/c++/6/tuple ****       // Shortcut for the cases where constructors taking _T1, _T2
 896:/usr/include/c++/6/tuple ****       // need to be constrained.
 897:/usr/include/c++/6/tuple ****       template<typename _Dummy> using _TCC =
 898:/usr/include/c++/6/tuple ****         _TC<is_same<_Dummy, void>::value, _T1, _T2>;
 899:/usr/include/c++/6/tuple **** 
 900:/usr/include/c++/6/tuple ****       template<typename _Dummy = void, typename
 901:/usr/include/c++/6/tuple ****                enable_if<_TCC<_Dummy>::template
 902:/usr/include/c++/6/tuple ****                            _ConstructibleTuple<_T1, _T2>()
 903:/usr/include/c++/6/tuple ****                          && _TCC<_Dummy>::template
 904:/usr/include/c++/6/tuple ****                            _ImplicitlyConvertibleTuple<_T1, _T2>(),
 905:/usr/include/c++/6/tuple **** 	bool>::type = true>
 906:/usr/include/c++/6/tuple ****         constexpr tuple(const _T1& __a1, const _T2& __a2)
 907:/usr/include/c++/6/tuple ****         : _Inherited(__a1, __a2) { }
 908:/usr/include/c++/6/tuple **** 
 909:/usr/include/c++/6/tuple ****       template<typename _Dummy = void, typename
 910:/usr/include/c++/6/tuple ****                enable_if<_TCC<_Dummy>::template
 911:/usr/include/c++/6/tuple ****                            _ConstructibleTuple<_T1, _T2>()
 912:/usr/include/c++/6/tuple ****                          && !_TCC<_Dummy>::template
 913:/usr/include/c++/6/tuple ****                            _ImplicitlyConvertibleTuple<_T1, _T2>(),
 914:/usr/include/c++/6/tuple **** 	bool>::type = false>
 915:/usr/include/c++/6/tuple ****         explicit constexpr tuple(const _T1& __a1, const _T2& __a2)
 916:/usr/include/c++/6/tuple ****         : _Inherited(__a1, __a2) { }
 917:/usr/include/c++/6/tuple **** 
 918:/usr/include/c++/6/tuple ****       // Shortcut for the cases where constructors taking _U1, _U2
 919:/usr/include/c++/6/tuple ****       // need to be constrained.
 920:/usr/include/c++/6/tuple ****       using _TMC = _TC<true, _T1, _T2>;
 921:/usr/include/c++/6/tuple **** 
 922:/usr/include/c++/6/tuple ****       template<typename _U1, typename _U2, typename
 923:/usr/include/c++/6/tuple ****         enable_if<_TMC::template
 924:/usr/include/c++/6/tuple ****                     _MoveConstructibleTuple<_U1, _U2>()
 925:/usr/include/c++/6/tuple ****                   && _TMC::template
 926:/usr/include/c++/6/tuple ****                     _ImplicitlyMoveConvertibleTuple<_U1, _U2>()
 927:/usr/include/c++/6/tuple **** 	          && !is_same<typename decay<_U1>::type,
 928:/usr/include/c++/6/tuple **** 			      allocator_arg_t>::value,
GAS LISTING /tmp/ccsIN87E.s 			page 673


 929:/usr/include/c++/6/tuple **** 	bool>::type = true>
 930:/usr/include/c++/6/tuple ****         constexpr tuple(_U1&& __a1, _U2&& __a2)
 931:/usr/include/c++/6/tuple **** 	: _Inherited(std::forward<_U1>(__a1), std::forward<_U2>(__a2)) { }
 932:/usr/include/c++/6/tuple **** 
 933:/usr/include/c++/6/tuple ****       template<typename _U1, typename _U2, typename
 934:/usr/include/c++/6/tuple ****         enable_if<_TMC::template
 935:/usr/include/c++/6/tuple ****                     _MoveConstructibleTuple<_U1, _U2>()
 936:/usr/include/c++/6/tuple ****                   && !_TMC::template
 937:/usr/include/c++/6/tuple ****                     _ImplicitlyMoveConvertibleTuple<_U1, _U2>()
 938:/usr/include/c++/6/tuple **** 	          && !is_same<typename decay<_U1>::type,
 939:/usr/include/c++/6/tuple **** 			      allocator_arg_t>::value,
 940:/usr/include/c++/6/tuple **** 	bool>::type = false>
 941:/usr/include/c++/6/tuple ****         explicit constexpr tuple(_U1&& __a1, _U2&& __a2)
 942:/usr/include/c++/6/tuple **** 	: _Inherited(std::forward<_U1>(__a1), std::forward<_U2>(__a2)) { }
 943:/usr/include/c++/6/tuple **** 
 944:/usr/include/c++/6/tuple ****       constexpr tuple(const tuple&) = default;
 945:/usr/include/c++/6/tuple **** 
 946:/usr/include/c++/6/tuple ****       constexpr tuple(tuple&&) = default;
 947:/usr/include/c++/6/tuple **** 
 948:/usr/include/c++/6/tuple ****       template<typename _U1, typename _U2, typename
 949:/usr/include/c++/6/tuple ****         enable_if<_TMC::template
 950:/usr/include/c++/6/tuple ****                     _ConstructibleTuple<_U1, _U2>()
 951:/usr/include/c++/6/tuple ****                   && _TMC::template
 952:/usr/include/c++/6/tuple ****                     _ImplicitlyConvertibleTuple<_U1, _U2>(),
 953:/usr/include/c++/6/tuple **** 	bool>::type = true>
 954:/usr/include/c++/6/tuple ****         constexpr tuple(const tuple<_U1, _U2>& __in)
 955:/usr/include/c++/6/tuple **** 	: _Inherited(static_cast<const _Tuple_impl<0, _U1, _U2>&>(__in)) { }
 956:/usr/include/c++/6/tuple **** 
 957:/usr/include/c++/6/tuple ****       template<typename _U1, typename _U2, typename
 958:/usr/include/c++/6/tuple ****         enable_if<_TMC::template
 959:/usr/include/c++/6/tuple ****                     _ConstructibleTuple<_U1, _U2>()
 960:/usr/include/c++/6/tuple ****                   && !_TMC::template
 961:/usr/include/c++/6/tuple ****                     _ImplicitlyConvertibleTuple<_U1, _U2>(),
 962:/usr/include/c++/6/tuple **** 	bool>::type = false>
 963:/usr/include/c++/6/tuple ****         explicit constexpr tuple(const tuple<_U1, _U2>& __in)
 964:/usr/include/c++/6/tuple **** 	: _Inherited(static_cast<const _Tuple_impl<0, _U1, _U2>&>(__in)) { }
 965:/usr/include/c++/6/tuple **** 
 966:/usr/include/c++/6/tuple ****       template<typename _U1, typename _U2, typename
 967:/usr/include/c++/6/tuple ****         enable_if<_TMC::template
 968:/usr/include/c++/6/tuple ****                     _MoveConstructibleTuple<_U1, _U2>()
 969:/usr/include/c++/6/tuple ****                   && _TMC::template
 970:/usr/include/c++/6/tuple ****                     _ImplicitlyMoveConvertibleTuple<_U1, _U2>(),
 971:/usr/include/c++/6/tuple **** 	bool>::type = true>
 972:/usr/include/c++/6/tuple ****         constexpr tuple(tuple<_U1, _U2>&& __in)
 973:/usr/include/c++/6/tuple **** 	: _Inherited(static_cast<_Tuple_impl<0, _U1, _U2>&&>(__in)) { }
 974:/usr/include/c++/6/tuple **** 
 975:/usr/include/c++/6/tuple ****       template<typename _U1, typename _U2, typename
 976:/usr/include/c++/6/tuple ****         enable_if<_TMC::template
 977:/usr/include/c++/6/tuple ****                     _MoveConstructibleTuple<_U1, _U2>()
 978:/usr/include/c++/6/tuple ****                   && !_TMC::template
 979:/usr/include/c++/6/tuple ****                     _ImplicitlyMoveConvertibleTuple<_U1, _U2>(),
 980:/usr/include/c++/6/tuple **** 	bool>::type = false>
 981:/usr/include/c++/6/tuple ****         explicit constexpr tuple(tuple<_U1, _U2>&& __in)
 982:/usr/include/c++/6/tuple **** 	: _Inherited(static_cast<_Tuple_impl<0, _U1, _U2>&&>(__in)) { }
 983:/usr/include/c++/6/tuple **** 
 984:/usr/include/c++/6/tuple ****       template<typename _U1, typename _U2, typename
 985:/usr/include/c++/6/tuple ****         enable_if<_TMC::template
GAS LISTING /tmp/ccsIN87E.s 			page 674


 986:/usr/include/c++/6/tuple ****                     _ConstructibleTuple<_U1, _U2>()
 987:/usr/include/c++/6/tuple ****                   && _TMC::template
 988:/usr/include/c++/6/tuple ****                     _ImplicitlyConvertibleTuple<_U1, _U2>(),
 989:/usr/include/c++/6/tuple **** 	bool>::type = true>
 990:/usr/include/c++/6/tuple ****         constexpr tuple(const pair<_U1, _U2>& __in)
 991:/usr/include/c++/6/tuple **** 	: _Inherited(__in.first, __in.second) { }
 992:/usr/include/c++/6/tuple **** 
 993:/usr/include/c++/6/tuple ****       template<typename _U1, typename _U2, typename
 994:/usr/include/c++/6/tuple ****         enable_if<_TMC::template
 995:/usr/include/c++/6/tuple ****                     _ConstructibleTuple<_U1, _U2>()
 996:/usr/include/c++/6/tuple ****                   && !_TMC::template
 997:/usr/include/c++/6/tuple ****                     _ImplicitlyConvertibleTuple<_U1, _U2>(),
 998:/usr/include/c++/6/tuple **** 	bool>::type = false>
 999:/usr/include/c++/6/tuple ****         explicit constexpr tuple(const pair<_U1, _U2>& __in)
1000:/usr/include/c++/6/tuple **** 	: _Inherited(__in.first, __in.second) { }
1001:/usr/include/c++/6/tuple **** 
1002:/usr/include/c++/6/tuple ****       template<typename _U1, typename _U2, typename
1003:/usr/include/c++/6/tuple ****         enable_if<_TMC::template
1004:/usr/include/c++/6/tuple ****                     _MoveConstructibleTuple<_U1, _U2>()
1005:/usr/include/c++/6/tuple ****                   && _TMC::template
1006:/usr/include/c++/6/tuple ****                     _ImplicitlyMoveConvertibleTuple<_U1, _U2>(),
1007:/usr/include/c++/6/tuple **** 	bool>::type = true>
1008:/usr/include/c++/6/tuple ****         constexpr tuple(pair<_U1, _U2>&& __in)
1009:/usr/include/c++/6/tuple **** 	: _Inherited(std::forward<_U1>(__in.first),
1010:/usr/include/c++/6/tuple **** 		     std::forward<_U2>(__in.second)) { }
1011:/usr/include/c++/6/tuple **** 
1012:/usr/include/c++/6/tuple ****       template<typename _U1, typename _U2, typename
1013:/usr/include/c++/6/tuple ****         enable_if<_TMC::template
1014:/usr/include/c++/6/tuple ****                     _MoveConstructibleTuple<_U1, _U2>()
1015:/usr/include/c++/6/tuple ****                   && !_TMC::template
1016:/usr/include/c++/6/tuple ****                     _ImplicitlyMoveConvertibleTuple<_U1, _U2>(),
1017:/usr/include/c++/6/tuple **** 	bool>::type = false>
1018:/usr/include/c++/6/tuple ****         explicit constexpr tuple(pair<_U1, _U2>&& __in)
1019:/usr/include/c++/6/tuple **** 	: _Inherited(std::forward<_U1>(__in.first),
1020:/usr/include/c++/6/tuple **** 		     std::forward<_U2>(__in.second)) { }
1021:/usr/include/c++/6/tuple **** 
1022:/usr/include/c++/6/tuple ****       // Allocator-extended constructors.
1023:/usr/include/c++/6/tuple **** 
1024:/usr/include/c++/6/tuple ****       template<typename _Alloc>
1025:/usr/include/c++/6/tuple **** 	tuple(allocator_arg_t __tag, const _Alloc& __a)
1026:/usr/include/c++/6/tuple **** 	: _Inherited(__tag, __a) { }
1027:/usr/include/c++/6/tuple **** 
1028:/usr/include/c++/6/tuple ****       template<typename _Alloc, typename _Dummy = void,
1029:/usr/include/c++/6/tuple ****                typename enable_if<
1030:/usr/include/c++/6/tuple ****                  _TCC<_Dummy>::template
1031:/usr/include/c++/6/tuple ****                    _ConstructibleTuple<_T1, _T2>()
1032:/usr/include/c++/6/tuple ****                  && _TCC<_Dummy>::template
1033:/usr/include/c++/6/tuple ****                    _ImplicitlyConvertibleTuple<_T1, _T2>(),
1034:/usr/include/c++/6/tuple ****                bool>::type=true>
1035:/usr/include/c++/6/tuple **** 
1036:/usr/include/c++/6/tuple **** 	tuple(allocator_arg_t __tag, const _Alloc& __a,
1037:/usr/include/c++/6/tuple **** 	      const _T1& __a1, const _T2& __a2)
1038:/usr/include/c++/6/tuple **** 	: _Inherited(__tag, __a, __a1, __a2) { }
1039:/usr/include/c++/6/tuple **** 
1040:/usr/include/c++/6/tuple ****       template<typename _Alloc, typename _Dummy = void,
1041:/usr/include/c++/6/tuple ****                typename enable_if<
1042:/usr/include/c++/6/tuple ****                  _TCC<_Dummy>::template
GAS LISTING /tmp/ccsIN87E.s 			page 675


1043:/usr/include/c++/6/tuple ****                    _ConstructibleTuple<_T1, _T2>()
1044:/usr/include/c++/6/tuple ****                  && !_TCC<_Dummy>::template
1045:/usr/include/c++/6/tuple ****                    _ImplicitlyConvertibleTuple<_T1, _T2>(),
1046:/usr/include/c++/6/tuple ****                bool>::type=false>
1047:/usr/include/c++/6/tuple **** 
1048:/usr/include/c++/6/tuple **** 	explicit tuple(allocator_arg_t __tag, const _Alloc& __a,
1049:/usr/include/c++/6/tuple **** 	      const _T1& __a1, const _T2& __a2)
1050:/usr/include/c++/6/tuple **** 	: _Inherited(__tag, __a, __a1, __a2) { }
1051:/usr/include/c++/6/tuple **** 
1052:/usr/include/c++/6/tuple ****       template<typename _Alloc, typename _U1, typename _U2, typename
1053:/usr/include/c++/6/tuple ****         enable_if<_TMC::template
1054:/usr/include/c++/6/tuple ****                     _MoveConstructibleTuple<_U1, _U2>()
1055:/usr/include/c++/6/tuple ****                   && _TMC::template
1056:/usr/include/c++/6/tuple ****                     _ImplicitlyMoveConvertibleTuple<_U1, _U2>(),
1057:/usr/include/c++/6/tuple **** 	bool>::type = true>
1058:/usr/include/c++/6/tuple **** 	tuple(allocator_arg_t __tag, const _Alloc& __a, _U1&& __a1, _U2&& __a2)
1059:/usr/include/c++/6/tuple **** 	: _Inherited(__tag, __a, std::forward<_U1>(__a1),
1060:/usr/include/c++/6/tuple **** 	             std::forward<_U2>(__a2)) { }
1061:/usr/include/c++/6/tuple **** 
1062:/usr/include/c++/6/tuple ****       template<typename _Alloc, typename _U1, typename _U2, typename
1063:/usr/include/c++/6/tuple ****         enable_if<_TMC::template
1064:/usr/include/c++/6/tuple ****                     _MoveConstructibleTuple<_U1, _U2>()
1065:/usr/include/c++/6/tuple ****                   && !_TMC::template
1066:/usr/include/c++/6/tuple ****                     _ImplicitlyMoveConvertibleTuple<_U1, _U2>(),
1067:/usr/include/c++/6/tuple **** 	bool>::type = false>
1068:/usr/include/c++/6/tuple **** 	explicit tuple(allocator_arg_t __tag, const _Alloc& __a,
1069:/usr/include/c++/6/tuple ****                        _U1&& __a1, _U2&& __a2)
1070:/usr/include/c++/6/tuple **** 	: _Inherited(__tag, __a, std::forward<_U1>(__a1),
1071:/usr/include/c++/6/tuple **** 	             std::forward<_U2>(__a2)) { }
1072:/usr/include/c++/6/tuple **** 
1073:/usr/include/c++/6/tuple ****       template<typename _Alloc>
1074:/usr/include/c++/6/tuple **** 	tuple(allocator_arg_t __tag, const _Alloc& __a, const tuple& __in)
1075:/usr/include/c++/6/tuple **** 	: _Inherited(__tag, __a, static_cast<const _Inherited&>(__in)) { }
1076:/usr/include/c++/6/tuple **** 
1077:/usr/include/c++/6/tuple ****       template<typename _Alloc>
1078:/usr/include/c++/6/tuple **** 	tuple(allocator_arg_t __tag, const _Alloc& __a, tuple&& __in)
1079:/usr/include/c++/6/tuple **** 	: _Inherited(__tag, __a, static_cast<_Inherited&&>(__in)) { }
1080:/usr/include/c++/6/tuple **** 
1081:/usr/include/c++/6/tuple ****       template<typename _Alloc, typename _U1, typename _U2, typename
1082:/usr/include/c++/6/tuple ****         enable_if<_TMC::template
1083:/usr/include/c++/6/tuple ****                     _ConstructibleTuple<_U1, _U2>()
1084:/usr/include/c++/6/tuple ****                   && _TMC::template
1085:/usr/include/c++/6/tuple ****                     _ImplicitlyConvertibleTuple<_U1, _U2>(),
1086:/usr/include/c++/6/tuple **** 	bool>::type = true>
1087:/usr/include/c++/6/tuple **** 	tuple(allocator_arg_t __tag, const _Alloc& __a,
1088:/usr/include/c++/6/tuple **** 	      const tuple<_U1, _U2>& __in)
1089:/usr/include/c++/6/tuple **** 	: _Inherited(__tag, __a,
1090:/usr/include/c++/6/tuple **** 	             static_cast<const _Tuple_impl<0, _U1, _U2>&>(__in))
1091:/usr/include/c++/6/tuple **** 	{ }
1092:/usr/include/c++/6/tuple **** 
1093:/usr/include/c++/6/tuple ****       template<typename _Alloc, typename _U1, typename _U2, typename
1094:/usr/include/c++/6/tuple ****         enable_if<_TMC::template
1095:/usr/include/c++/6/tuple ****                     _ConstructibleTuple<_U1, _U2>()
1096:/usr/include/c++/6/tuple ****                   && !_TMC::template
1097:/usr/include/c++/6/tuple ****                     _ImplicitlyConvertibleTuple<_U1, _U2>(),
1098:/usr/include/c++/6/tuple **** 	bool>::type = false>
1099:/usr/include/c++/6/tuple **** 	explicit tuple(allocator_arg_t __tag, const _Alloc& __a,
GAS LISTING /tmp/ccsIN87E.s 			page 676


1100:/usr/include/c++/6/tuple **** 	      const tuple<_U1, _U2>& __in)
1101:/usr/include/c++/6/tuple **** 	: _Inherited(__tag, __a,
1102:/usr/include/c++/6/tuple **** 	             static_cast<const _Tuple_impl<0, _U1, _U2>&>(__in))
1103:/usr/include/c++/6/tuple **** 	{ }
1104:/usr/include/c++/6/tuple **** 
1105:/usr/include/c++/6/tuple ****       template<typename _Alloc, typename _U1, typename _U2, typename
1106:/usr/include/c++/6/tuple ****         enable_if<_TMC::template
1107:/usr/include/c++/6/tuple ****                     _MoveConstructibleTuple<_U1, _U2>()
1108:/usr/include/c++/6/tuple ****                   && _TMC::template
1109:/usr/include/c++/6/tuple ****                     _ImplicitlyMoveConvertibleTuple<_U1, _U2>(),
1110:/usr/include/c++/6/tuple **** 	bool>::type = true>
1111:/usr/include/c++/6/tuple **** 	tuple(allocator_arg_t __tag, const _Alloc& __a, tuple<_U1, _U2>&& __in)
1112:/usr/include/c++/6/tuple **** 	: _Inherited(__tag, __a, static_cast<_Tuple_impl<0, _U1, _U2>&&>(__in))
1113:/usr/include/c++/6/tuple **** 	{ }
1114:/usr/include/c++/6/tuple **** 
1115:/usr/include/c++/6/tuple ****       template<typename _Alloc, typename _U1, typename _U2, typename
1116:/usr/include/c++/6/tuple ****         enable_if<_TMC::template
1117:/usr/include/c++/6/tuple ****                     _MoveConstructibleTuple<_U1, _U2>()
1118:/usr/include/c++/6/tuple ****                   && !_TMC::template
1119:/usr/include/c++/6/tuple ****                     _ImplicitlyMoveConvertibleTuple<_U1, _U2>(),
1120:/usr/include/c++/6/tuple **** 	bool>::type = false>
1121:/usr/include/c++/6/tuple **** 	explicit tuple(allocator_arg_t __tag, const _Alloc& __a,
1122:/usr/include/c++/6/tuple ****                        tuple<_U1, _U2>&& __in)
1123:/usr/include/c++/6/tuple **** 	: _Inherited(__tag, __a, static_cast<_Tuple_impl<0, _U1, _U2>&&>(__in))
1124:/usr/include/c++/6/tuple **** 	{ }
1125:/usr/include/c++/6/tuple **** 
1126:/usr/include/c++/6/tuple ****       template<typename _Alloc, typename _U1, typename _U2, typename
1127:/usr/include/c++/6/tuple ****         enable_if<_TMC::template
1128:/usr/include/c++/6/tuple ****                     _ConstructibleTuple<_U1, _U2>()
1129:/usr/include/c++/6/tuple ****                   && _TMC::template
1130:/usr/include/c++/6/tuple ****                     _ImplicitlyConvertibleTuple<_U1, _U2>(),
1131:/usr/include/c++/6/tuple **** 	bool>::type = true>
1132:/usr/include/c++/6/tuple ****         tuple(allocator_arg_t __tag, const _Alloc& __a,
1133:/usr/include/c++/6/tuple **** 	      const pair<_U1, _U2>& __in)
1134:/usr/include/c++/6/tuple **** 	: _Inherited(__tag, __a, __in.first, __in.second) { }
1135:/usr/include/c++/6/tuple **** 
1136:/usr/include/c++/6/tuple ****       template<typename _Alloc, typename _U1, typename _U2, typename
1137:/usr/include/c++/6/tuple ****         enable_if<_TMC::template
1138:/usr/include/c++/6/tuple ****                     _ConstructibleTuple<_U1, _U2>()
1139:/usr/include/c++/6/tuple ****                   && !_TMC::template
1140:/usr/include/c++/6/tuple ****                     _ImplicitlyConvertibleTuple<_U1, _U2>(),
1141:/usr/include/c++/6/tuple **** 	bool>::type = false>
1142:/usr/include/c++/6/tuple ****         explicit tuple(allocator_arg_t __tag, const _Alloc& __a,
1143:/usr/include/c++/6/tuple **** 	      const pair<_U1, _U2>& __in)
1144:/usr/include/c++/6/tuple **** 	: _Inherited(__tag, __a, __in.first, __in.second) { }
1145:/usr/include/c++/6/tuple **** 
1146:/usr/include/c++/6/tuple ****       template<typename _Alloc, typename _U1, typename _U2, typename
1147:/usr/include/c++/6/tuple ****         enable_if<_TMC::template
1148:/usr/include/c++/6/tuple ****                     _MoveConstructibleTuple<_U1, _U2>()
1149:/usr/include/c++/6/tuple ****                   && _TMC::template
1150:/usr/include/c++/6/tuple ****                     _ImplicitlyMoveConvertibleTuple<_U1, _U2>(),
1151:/usr/include/c++/6/tuple **** 	bool>::type = true>
1152:/usr/include/c++/6/tuple ****         tuple(allocator_arg_t __tag, const _Alloc& __a, pair<_U1, _U2>&& __in)
1153:/usr/include/c++/6/tuple **** 	: _Inherited(__tag, __a, std::forward<_U1>(__in.first),
1154:/usr/include/c++/6/tuple **** 		     std::forward<_U2>(__in.second)) { }
1155:/usr/include/c++/6/tuple **** 
1156:/usr/include/c++/6/tuple ****       template<typename _Alloc, typename _U1, typename _U2, typename
GAS LISTING /tmp/ccsIN87E.s 			page 677


1157:/usr/include/c++/6/tuple ****         enable_if<_TMC::template
1158:/usr/include/c++/6/tuple ****                     _MoveConstructibleTuple<_U1, _U2>()
1159:/usr/include/c++/6/tuple ****                   && !_TMC::template
1160:/usr/include/c++/6/tuple ****                     _ImplicitlyMoveConvertibleTuple<_U1, _U2>(),
1161:/usr/include/c++/6/tuple **** 	bool>::type = false>
1162:/usr/include/c++/6/tuple ****         explicit tuple(allocator_arg_t __tag, const _Alloc& __a,
1163:/usr/include/c++/6/tuple ****                        pair<_U1, _U2>&& __in)
1164:/usr/include/c++/6/tuple **** 	: _Inherited(__tag, __a, std::forward<_U1>(__in.first),
1165:/usr/include/c++/6/tuple **** 		     std::forward<_U2>(__in.second)) { }
1166:/usr/include/c++/6/tuple **** 
1167:/usr/include/c++/6/tuple ****       tuple&
1168:/usr/include/c++/6/tuple ****       operator=(const tuple& __in)
1169:/usr/include/c++/6/tuple ****       {
1170:/usr/include/c++/6/tuple **** 	static_cast<_Inherited&>(*this) = __in;
1171:/usr/include/c++/6/tuple **** 	return *this;
1172:/usr/include/c++/6/tuple ****       }
1173:/usr/include/c++/6/tuple **** 
1174:/usr/include/c++/6/tuple ****       tuple&
1175:/usr/include/c++/6/tuple ****       operator=(tuple&& __in)
1176:/usr/include/c++/6/tuple ****       noexcept(is_nothrow_move_assignable<_Inherited>::value)
1177:/usr/include/c++/6/tuple ****       {
1178:/usr/include/c++/6/tuple **** 	static_cast<_Inherited&>(*this) = std::move(__in);
1179:/usr/include/c++/6/tuple **** 	return *this;
1180:/usr/include/c++/6/tuple ****       }
1181:/usr/include/c++/6/tuple **** 
1182:/usr/include/c++/6/tuple ****       template<typename _U1, typename _U2>
1183:/usr/include/c++/6/tuple ****         tuple&
1184:/usr/include/c++/6/tuple ****         operator=(const tuple<_U1, _U2>& __in)
1185:/usr/include/c++/6/tuple ****         {
1186:/usr/include/c++/6/tuple **** 	  static_cast<_Inherited&>(*this) = __in;
1187:/usr/include/c++/6/tuple **** 	  return *this;
1188:/usr/include/c++/6/tuple **** 	}
1189:/usr/include/c++/6/tuple **** 
1190:/usr/include/c++/6/tuple ****       template<typename _U1, typename _U2>
1191:/usr/include/c++/6/tuple ****         tuple&
1192:/usr/include/c++/6/tuple ****         operator=(tuple<_U1, _U2>&& __in)
1193:/usr/include/c++/6/tuple ****         {
1194:/usr/include/c++/6/tuple **** 	  static_cast<_Inherited&>(*this) = std::move(__in);
1195:/usr/include/c++/6/tuple **** 	  return *this;
1196:/usr/include/c++/6/tuple **** 	}
1197:/usr/include/c++/6/tuple **** 
1198:/usr/include/c++/6/tuple ****       template<typename _U1, typename _U2>
1199:/usr/include/c++/6/tuple ****         tuple&
1200:/usr/include/c++/6/tuple ****         operator=(const pair<_U1, _U2>& __in)
1201:/usr/include/c++/6/tuple ****         {
1202:/usr/include/c++/6/tuple **** 	  this->_M_head(*this) = __in.first;
1203:/usr/include/c++/6/tuple **** 	  this->_M_tail(*this)._M_head(*this) = __in.second;
1204:/usr/include/c++/6/tuple **** 	  return *this;
1205:/usr/include/c++/6/tuple **** 	}
1206:/usr/include/c++/6/tuple **** 
1207:/usr/include/c++/6/tuple ****       template<typename _U1, typename _U2>
1208:/usr/include/c++/6/tuple ****         tuple&
1209:/usr/include/c++/6/tuple ****         operator=(pair<_U1, _U2>&& __in)
1210:/usr/include/c++/6/tuple ****         {
1211:/usr/include/c++/6/tuple **** 	  this->_M_head(*this) = std::forward<_U1>(__in.first);
1212:/usr/include/c++/6/tuple **** 	  this->_M_tail(*this)._M_head(*this) = std::forward<_U2>(__in.second);
1213:/usr/include/c++/6/tuple **** 	  return *this;
GAS LISTING /tmp/ccsIN87E.s 			page 678


1214:/usr/include/c++/6/tuple **** 	}
1215:/usr/include/c++/6/tuple **** 
1216:/usr/include/c++/6/tuple ****       void
1217:/usr/include/c++/6/tuple ****       swap(tuple& __in)
1218:/usr/include/c++/6/tuple ****       noexcept(noexcept(__in._M_swap(__in)))
1219:/usr/include/c++/6/tuple ****       { _Inherited::_M_swap(__in); }
1220:/usr/include/c++/6/tuple ****     };
1221:/usr/include/c++/6/tuple **** 
1222:/usr/include/c++/6/tuple **** 
1223:/usr/include/c++/6/tuple ****   /**
1224:/usr/include/c++/6/tuple ****    * Recursive case for tuple_element: strip off the first element in
1225:/usr/include/c++/6/tuple ****    * the tuple and retrieve the (i-1)th element of the remaining tuple.
1226:/usr/include/c++/6/tuple ****    */
1227:/usr/include/c++/6/tuple ****   template<std::size_t __i, typename _Head, typename... _Tail>
1228:/usr/include/c++/6/tuple ****     struct tuple_element<__i, tuple<_Head, _Tail...> >
1229:/usr/include/c++/6/tuple ****     : tuple_element<__i - 1, tuple<_Tail...> > { };
1230:/usr/include/c++/6/tuple **** 
1231:/usr/include/c++/6/tuple ****   /**
1232:/usr/include/c++/6/tuple ****    * Basis case for tuple_element: The first element is the one we're seeking.
1233:/usr/include/c++/6/tuple ****    */
1234:/usr/include/c++/6/tuple ****   template<typename _Head, typename... _Tail>
1235:/usr/include/c++/6/tuple ****     struct tuple_element<0, tuple<_Head, _Tail...> >
1236:/usr/include/c++/6/tuple ****     {
1237:/usr/include/c++/6/tuple ****       typedef _Head type;
1238:/usr/include/c++/6/tuple ****     };
1239:/usr/include/c++/6/tuple **** 
1240:/usr/include/c++/6/tuple ****   /// class tuple_size
1241:/usr/include/c++/6/tuple ****   template<typename... _Elements>
1242:/usr/include/c++/6/tuple ****     struct tuple_size<tuple<_Elements...>>
1243:/usr/include/c++/6/tuple ****     : public integral_constant<std::size_t, sizeof...(_Elements)> { };
1244:/usr/include/c++/6/tuple **** 
1245:/usr/include/c++/6/tuple ****   template<std::size_t __i, typename _Head, typename... _Tail>
1246:/usr/include/c++/6/tuple ****     constexpr _Head&
1247:/usr/include/c++/6/tuple ****     __get_helper(_Tuple_impl<__i, _Head, _Tail...>& __t) noexcept
1248:/usr/include/c++/6/tuple ****     { return _Tuple_impl<__i, _Head, _Tail...>::_M_head(__t); }
1249:/usr/include/c++/6/tuple **** 
1250:/usr/include/c++/6/tuple ****   template<std::size_t __i, typename _Head, typename... _Tail>
1251:/usr/include/c++/6/tuple ****     constexpr const _Head&
1252:/usr/include/c++/6/tuple ****     __get_helper(const _Tuple_impl<__i, _Head, _Tail...>& __t) noexcept
1253:/usr/include/c++/6/tuple ****     { return _Tuple_impl<__i, _Head, _Tail...>::_M_head(__t); }
1254:/usr/include/c++/6/tuple **** 
1255:/usr/include/c++/6/tuple ****   /// Return a reference to the ith element of a tuple.
1256:/usr/include/c++/6/tuple ****   template<std::size_t __i, typename... _Elements>
1257:/usr/include/c++/6/tuple ****     constexpr __tuple_element_t<__i, tuple<_Elements...>>&
1258:/usr/include/c++/6/tuple ****     get(tuple<_Elements...>& __t) noexcept
1259:/usr/include/c++/6/tuple ****     { return std::__get_helper<__i>(__t); }
1260:/usr/include/c++/6/tuple **** 
1261:/usr/include/c++/6/tuple ****   /// Return a const reference to the ith element of a const tuple.
1262:/usr/include/c++/6/tuple ****   template<std::size_t __i, typename... _Elements>
1263:/usr/include/c++/6/tuple ****     constexpr const __tuple_element_t<__i, tuple<_Elements...>>&
1264:/usr/include/c++/6/tuple ****     get(const tuple<_Elements...>& __t) noexcept
1265:/usr/include/c++/6/tuple ****     { return std::__get_helper<__i>(__t); }
1266:/usr/include/c++/6/tuple **** 
1267:/usr/include/c++/6/tuple ****   /// Return an rvalue reference to the ith element of a tuple rvalue.
1268:/usr/include/c++/6/tuple ****   template<std::size_t __i, typename... _Elements>
1269:/usr/include/c++/6/tuple ****     constexpr __tuple_element_t<__i, tuple<_Elements...>>&&
1270:/usr/include/c++/6/tuple ****     get(tuple<_Elements...>&& __t) noexcept
GAS LISTING /tmp/ccsIN87E.s 			page 679


1271:/usr/include/c++/6/tuple ****     {
1272:/usr/include/c++/6/tuple ****       typedef __tuple_element_t<__i, tuple<_Elements...>> __element_type;
1273:/usr/include/c++/6/tuple ****       return std::forward<__element_type&&>(std::get<__i>(__t));
1274:/usr/include/c++/6/tuple ****     }
1275:/usr/include/c++/6/tuple **** 
1276:/usr/include/c++/6/tuple **** #if __cplusplus > 201103L
1277:/usr/include/c++/6/tuple **** 
1278:/usr/include/c++/6/tuple **** #define __cpp_lib_tuples_by_type 201304
1279:/usr/include/c++/6/tuple **** 
1280:/usr/include/c++/6/tuple ****   template<typename _Head, size_t __i, typename... _Tail>
1281:/usr/include/c++/6/tuple ****     constexpr _Head&
1282:/usr/include/c++/6/tuple ****     __get_helper2(_Tuple_impl<__i, _Head, _Tail...>& __t) noexcept
1283:/usr/include/c++/6/tuple ****     { return _Tuple_impl<__i, _Head, _Tail...>::_M_head(__t); }
1284:/usr/include/c++/6/tuple **** 
1285:/usr/include/c++/6/tuple ****   template<typename _Head, size_t __i, typename... _Tail>
1286:/usr/include/c++/6/tuple ****     constexpr const _Head&
1287:/usr/include/c++/6/tuple ****     __get_helper2(const _Tuple_impl<__i, _Head, _Tail...>& __t) noexcept
1288:/usr/include/c++/6/tuple ****     { return _Tuple_impl<__i, _Head, _Tail...>::_M_head(__t); }
1289:/usr/include/c++/6/tuple **** 
1290:/usr/include/c++/6/tuple ****   /// Return a reference to the unique element of type _Tp of a tuple.
1291:/usr/include/c++/6/tuple ****   template <typename _Tp, typename... _Types>
1292:/usr/include/c++/6/tuple ****     constexpr _Tp&
1293:/usr/include/c++/6/tuple ****     get(tuple<_Types...>& __t) noexcept
1294:/usr/include/c++/6/tuple ****     { return std::__get_helper2<_Tp>(__t); }
1295:/usr/include/c++/6/tuple **** 
1296:/usr/include/c++/6/tuple ****   /// Return a reference to the unique element of type _Tp of a tuple rvalue.
1297:/usr/include/c++/6/tuple ****   template <typename _Tp, typename... _Types>
1298:/usr/include/c++/6/tuple ****     constexpr _Tp&&
1299:/usr/include/c++/6/tuple ****     get(tuple<_Types...>&& __t) noexcept
1300:/usr/include/c++/6/tuple ****     { return std::forward<_Tp&&>(std::__get_helper2<_Tp>(__t)); }
1301:/usr/include/c++/6/tuple **** 
1302:/usr/include/c++/6/tuple ****   /// Return a const reference to the unique element of type _Tp of a tuple.
1303:/usr/include/c++/6/tuple ****   template <typename _Tp, typename... _Types>
1304:/usr/include/c++/6/tuple ****     constexpr const _Tp&
1305:/usr/include/c++/6/tuple ****     get(const tuple<_Types...>& __t) noexcept
1306:/usr/include/c++/6/tuple ****     { return std::__get_helper2<_Tp>(__t); }
1307:/usr/include/c++/6/tuple **** #endif
1308:/usr/include/c++/6/tuple **** 
1309:/usr/include/c++/6/tuple ****   // This class performs the comparison operations on tuples
1310:/usr/include/c++/6/tuple ****   template<typename _Tp, typename _Up, size_t __i, size_t __size>
1311:/usr/include/c++/6/tuple ****     struct __tuple_compare
1312:/usr/include/c++/6/tuple ****     {
1313:/usr/include/c++/6/tuple ****       static constexpr bool
1314:/usr/include/c++/6/tuple ****       __eq(const _Tp& __t, const _Up& __u)
1315:/usr/include/c++/6/tuple ****       {
1316:/usr/include/c++/6/tuple **** 	return bool(std::get<__i>(__t) == std::get<__i>(__u))
1317:/usr/include/c++/6/tuple **** 	  && __tuple_compare<_Tp, _Up, __i + 1, __size>::__eq(__t, __u);
1318:/usr/include/c++/6/tuple ****       }
1319:/usr/include/c++/6/tuple ****    
1320:/usr/include/c++/6/tuple ****       static constexpr bool
1321:/usr/include/c++/6/tuple ****       __less(const _Tp& __t, const _Up& __u)
1322:/usr/include/c++/6/tuple ****       {
1323:/usr/include/c++/6/tuple **** 	return bool(std::get<__i>(__t) < std::get<__i>(__u))
1324:/usr/include/c++/6/tuple **** 	  || (!bool(std::get<__i>(__u) < std::get<__i>(__t))
1325:/usr/include/c++/6/tuple **** 	      && __tuple_compare<_Tp, _Up, __i + 1, __size>::__less(__t, __u));
1326:/usr/include/c++/6/tuple ****       }
1327:/usr/include/c++/6/tuple ****     };
GAS LISTING /tmp/ccsIN87E.s 			page 680


1328:/usr/include/c++/6/tuple **** 
1329:/usr/include/c++/6/tuple ****   template<typename _Tp, typename _Up, size_t __size>
1330:/usr/include/c++/6/tuple ****     struct __tuple_compare<_Tp, _Up, __size, __size>
1331:/usr/include/c++/6/tuple ****     {
1332:/usr/include/c++/6/tuple ****       static constexpr bool
1333:/usr/include/c++/6/tuple ****       __eq(const _Tp&, const _Up&) { return true; }
1334:/usr/include/c++/6/tuple ****    
1335:/usr/include/c++/6/tuple ****       static constexpr bool
1336:/usr/include/c++/6/tuple ****       __less(const _Tp&, const _Up&) { return false; }
1337:/usr/include/c++/6/tuple ****     };
1338:/usr/include/c++/6/tuple **** 
1339:/usr/include/c++/6/tuple ****   template<typename... _TElements, typename... _UElements>
1340:/usr/include/c++/6/tuple ****     constexpr bool
1341:/usr/include/c++/6/tuple ****     operator==(const tuple<_TElements...>& __t,
1342:/usr/include/c++/6/tuple **** 	       const tuple<_UElements...>& __u)
1343:/usr/include/c++/6/tuple ****     {
1344:/usr/include/c++/6/tuple ****       static_assert(sizeof...(_TElements) == sizeof...(_UElements),
1345:/usr/include/c++/6/tuple **** 	  "tuple objects can only be compared if they have equal sizes.");
1346:/usr/include/c++/6/tuple ****       using __compare = __tuple_compare<tuple<_TElements...>,
1347:/usr/include/c++/6/tuple **** 					tuple<_UElements...>,
1348:/usr/include/c++/6/tuple **** 					0, sizeof...(_TElements)>;
1349:/usr/include/c++/6/tuple ****       return __compare::__eq(__t, __u);
1350:/usr/include/c++/6/tuple ****     }
1351:/usr/include/c++/6/tuple **** 
1352:/usr/include/c++/6/tuple ****   template<typename... _TElements, typename... _UElements>
1353:/usr/include/c++/6/tuple ****     constexpr bool
1354:/usr/include/c++/6/tuple ****     operator<(const tuple<_TElements...>& __t,
1355:/usr/include/c++/6/tuple **** 	      const tuple<_UElements...>& __u)
1356:/usr/include/c++/6/tuple ****     {
1357:/usr/include/c++/6/tuple ****       static_assert(sizeof...(_TElements) == sizeof...(_UElements),
1358:/usr/include/c++/6/tuple **** 	  "tuple objects can only be compared if they have equal sizes.");
1359:/usr/include/c++/6/tuple ****       using __compare = __tuple_compare<tuple<_TElements...>,
1360:/usr/include/c++/6/tuple **** 					tuple<_UElements...>,
1361:/usr/include/c++/6/tuple **** 					0, sizeof...(_TElements)>;
1362:/usr/include/c++/6/tuple ****       return __compare::__less(__t, __u);
1363:/usr/include/c++/6/tuple ****     }
1364:/usr/include/c++/6/tuple **** 
1365:/usr/include/c++/6/tuple ****   template<typename... _TElements, typename... _UElements>
1366:/usr/include/c++/6/tuple ****     constexpr bool
1367:/usr/include/c++/6/tuple ****     operator!=(const tuple<_TElements...>& __t,
1368:/usr/include/c++/6/tuple **** 	       const tuple<_UElements...>& __u)
1369:/usr/include/c++/6/tuple ****     { return !(__t == __u); }
1370:/usr/include/c++/6/tuple **** 
1371:/usr/include/c++/6/tuple ****   template<typename... _TElements, typename... _UElements>
1372:/usr/include/c++/6/tuple ****     constexpr bool
1373:/usr/include/c++/6/tuple ****     operator>(const tuple<_TElements...>& __t,
1374:/usr/include/c++/6/tuple **** 	      const tuple<_UElements...>& __u)
1375:/usr/include/c++/6/tuple ****     { return __u < __t; }
1376:/usr/include/c++/6/tuple **** 
1377:/usr/include/c++/6/tuple ****   template<typename... _TElements, typename... _UElements>
1378:/usr/include/c++/6/tuple ****     constexpr bool
1379:/usr/include/c++/6/tuple ****     operator<=(const tuple<_TElements...>& __t,
1380:/usr/include/c++/6/tuple **** 	       const tuple<_UElements...>& __u)
1381:/usr/include/c++/6/tuple ****     { return !(__u < __t); }
1382:/usr/include/c++/6/tuple **** 
1383:/usr/include/c++/6/tuple ****   template<typename... _TElements, typename... _UElements>
1384:/usr/include/c++/6/tuple ****     constexpr bool
GAS LISTING /tmp/ccsIN87E.s 			page 681


1385:/usr/include/c++/6/tuple ****     operator>=(const tuple<_TElements...>& __t,
1386:/usr/include/c++/6/tuple **** 	       const tuple<_UElements...>& __u)
1387:/usr/include/c++/6/tuple ****     { return !(__t < __u); }
1388:/usr/include/c++/6/tuple **** 
1389:/usr/include/c++/6/tuple ****   // NB: DR 705.
1390:/usr/include/c++/6/tuple ****   template<typename... _Elements>
1391:/usr/include/c++/6/tuple ****     constexpr tuple<typename __decay_and_strip<_Elements>::__type...>
1392:/usr/include/c++/6/tuple ****     make_tuple(_Elements&&... __args)
1393:/usr/include/c++/6/tuple ****     {
1394:/usr/include/c++/6/tuple ****       typedef tuple<typename __decay_and_strip<_Elements>::__type...>
1395:/usr/include/c++/6/tuple **** 	__result_type;
1396:/usr/include/c++/6/tuple ****       return __result_type(std::forward<_Elements>(__args)...);
1397:/usr/include/c++/6/tuple ****     }
1398:/usr/include/c++/6/tuple **** 
1399:/usr/include/c++/6/tuple ****   // _GLIBCXX_RESOLVE_LIB_DEFECTS
1400:/usr/include/c++/6/tuple ****   // 2275. Why is forward_as_tuple not constexpr?
1401:/usr/include/c++/6/tuple ****   template<typename... _Elements>
1402:/usr/include/c++/6/tuple ****     constexpr tuple<_Elements&&...>
1403:/usr/include/c++/6/tuple ****     forward_as_tuple(_Elements&&... __args) noexcept
1404:/usr/include/c++/6/tuple ****     { return tuple<_Elements&&...>(std::forward<_Elements>(__args)...); }
1405:/usr/include/c++/6/tuple **** 
1406:/usr/include/c++/6/tuple ****   template<typename... _Tps>
1407:/usr/include/c++/6/tuple ****     struct __is_tuple_like_impl<tuple<_Tps...>> : true_type
1408:/usr/include/c++/6/tuple ****     { };
1409:/usr/include/c++/6/tuple **** 
1410:/usr/include/c++/6/tuple ****   // Internal type trait that allows us to sfinae-protect tuple_cat.
1411:/usr/include/c++/6/tuple ****   template<typename _Tp>
1412:/usr/include/c++/6/tuple ****     struct __is_tuple_like
1413:/usr/include/c++/6/tuple ****     : public __is_tuple_like_impl<typename std::remove_cv
1414:/usr/include/c++/6/tuple ****             <typename std::remove_reference<_Tp>::type>::type>::type
1415:/usr/include/c++/6/tuple ****     { };
1416:/usr/include/c++/6/tuple **** 
1417:/usr/include/c++/6/tuple ****   template<size_t, typename, typename, size_t>
1418:/usr/include/c++/6/tuple ****     struct __make_tuple_impl;
1419:/usr/include/c++/6/tuple **** 
1420:/usr/include/c++/6/tuple ****   template<size_t _Idx, typename _Tuple, typename... _Tp, size_t _Nm>
1421:/usr/include/c++/6/tuple ****     struct __make_tuple_impl<_Idx, tuple<_Tp...>, _Tuple, _Nm>
1422:/usr/include/c++/6/tuple ****     : __make_tuple_impl<_Idx + 1,
1423:/usr/include/c++/6/tuple **** 			tuple<_Tp..., __tuple_element_t<_Idx, _Tuple>>,
1424:/usr/include/c++/6/tuple **** 			_Tuple, _Nm>
1425:/usr/include/c++/6/tuple ****     { };
1426:/usr/include/c++/6/tuple **** 
1427:/usr/include/c++/6/tuple ****   template<std::size_t _Nm, typename _Tuple, typename... _Tp>
1428:/usr/include/c++/6/tuple ****     struct __make_tuple_impl<_Nm, tuple<_Tp...>, _Tuple, _Nm>
1429:/usr/include/c++/6/tuple ****     {
1430:/usr/include/c++/6/tuple ****       typedef tuple<_Tp...> __type;
1431:/usr/include/c++/6/tuple ****     };
1432:/usr/include/c++/6/tuple **** 
1433:/usr/include/c++/6/tuple ****   template<typename _Tuple>
1434:/usr/include/c++/6/tuple ****     struct __do_make_tuple
1435:/usr/include/c++/6/tuple ****     : __make_tuple_impl<0, tuple<>, _Tuple, std::tuple_size<_Tuple>::value>
1436:/usr/include/c++/6/tuple ****     { };
1437:/usr/include/c++/6/tuple **** 
1438:/usr/include/c++/6/tuple ****   // Returns the std::tuple equivalent of a tuple-like type.
1439:/usr/include/c++/6/tuple ****   template<typename _Tuple>
1440:/usr/include/c++/6/tuple ****     struct __make_tuple
1441:/usr/include/c++/6/tuple ****     : public __do_make_tuple<typename std::remove_cv
GAS LISTING /tmp/ccsIN87E.s 			page 682


1442:/usr/include/c++/6/tuple ****             <typename std::remove_reference<_Tuple>::type>::type>
1443:/usr/include/c++/6/tuple ****     { };
1444:/usr/include/c++/6/tuple **** 
1445:/usr/include/c++/6/tuple ****   // Combines several std::tuple's into a single one.
1446:/usr/include/c++/6/tuple ****   template<typename...>
1447:/usr/include/c++/6/tuple ****     struct __combine_tuples;
1448:/usr/include/c++/6/tuple **** 
1449:/usr/include/c++/6/tuple ****   template<>
1450:/usr/include/c++/6/tuple ****     struct __combine_tuples<>
1451:/usr/include/c++/6/tuple ****     {
1452:/usr/include/c++/6/tuple ****       typedef tuple<> __type;
1453:/usr/include/c++/6/tuple ****     };
1454:/usr/include/c++/6/tuple **** 
1455:/usr/include/c++/6/tuple ****   template<typename... _Ts>
1456:/usr/include/c++/6/tuple ****     struct __combine_tuples<tuple<_Ts...>>
1457:/usr/include/c++/6/tuple ****     {
1458:/usr/include/c++/6/tuple ****       typedef tuple<_Ts...> __type;
1459:/usr/include/c++/6/tuple ****     };
1460:/usr/include/c++/6/tuple **** 
1461:/usr/include/c++/6/tuple ****   template<typename... _T1s, typename... _T2s, typename... _Rem>
1462:/usr/include/c++/6/tuple ****     struct __combine_tuples<tuple<_T1s...>, tuple<_T2s...>, _Rem...>
1463:/usr/include/c++/6/tuple ****     {
1464:/usr/include/c++/6/tuple ****       typedef typename __combine_tuples<tuple<_T1s..., _T2s...>,
1465:/usr/include/c++/6/tuple **** 					_Rem...>::__type __type;
1466:/usr/include/c++/6/tuple ****     };
1467:/usr/include/c++/6/tuple **** 
1468:/usr/include/c++/6/tuple ****   // Computes the result type of tuple_cat given a set of tuple-like types.
1469:/usr/include/c++/6/tuple ****   template<typename... _Tpls>
1470:/usr/include/c++/6/tuple ****     struct __tuple_cat_result
1471:/usr/include/c++/6/tuple ****     {
1472:/usr/include/c++/6/tuple ****       typedef typename __combine_tuples
1473:/usr/include/c++/6/tuple ****         <typename __make_tuple<_Tpls>::__type...>::__type __type;
1474:/usr/include/c++/6/tuple ****     };
1475:/usr/include/c++/6/tuple **** 
1476:/usr/include/c++/6/tuple ****   // Helper to determine the index set for the first tuple-like
1477:/usr/include/c++/6/tuple ****   // type of a given set.
1478:/usr/include/c++/6/tuple ****   template<typename...>
1479:/usr/include/c++/6/tuple ****     struct __make_1st_indices;
1480:/usr/include/c++/6/tuple **** 
1481:/usr/include/c++/6/tuple ****   template<>
1482:/usr/include/c++/6/tuple ****     struct __make_1st_indices<>
1483:/usr/include/c++/6/tuple ****     {
1484:/usr/include/c++/6/tuple ****       typedef std::_Index_tuple<> __type;
1485:/usr/include/c++/6/tuple ****     };
1486:/usr/include/c++/6/tuple **** 
1487:/usr/include/c++/6/tuple ****   template<typename _Tp, typename... _Tpls>
1488:/usr/include/c++/6/tuple ****     struct __make_1st_indices<_Tp, _Tpls...>
1489:/usr/include/c++/6/tuple ****     {
1490:/usr/include/c++/6/tuple ****       typedef typename std::_Build_index_tuple<std::tuple_size<
1491:/usr/include/c++/6/tuple **** 	typename std::remove_reference<_Tp>::type>::value>::__type __type;
1492:/usr/include/c++/6/tuple ****     };
1493:/usr/include/c++/6/tuple **** 
1494:/usr/include/c++/6/tuple ****   // Performs the actual concatenation by step-wise expanding tuple-like
1495:/usr/include/c++/6/tuple ****   // objects into the elements,  which are finally forwarded into the
1496:/usr/include/c++/6/tuple ****   // result tuple.
1497:/usr/include/c++/6/tuple ****   template<typename _Ret, typename _Indices, typename... _Tpls>
1498:/usr/include/c++/6/tuple ****     struct __tuple_concater;
GAS LISTING /tmp/ccsIN87E.s 			page 683


1499:/usr/include/c++/6/tuple **** 
1500:/usr/include/c++/6/tuple ****   template<typename _Ret, std::size_t... _Is, typename _Tp, typename... _Tpls>
1501:/usr/include/c++/6/tuple ****     struct __tuple_concater<_Ret, std::_Index_tuple<_Is...>, _Tp, _Tpls...>
1502:/usr/include/c++/6/tuple ****     {
1503:/usr/include/c++/6/tuple ****       template<typename... _Us>
1504:/usr/include/c++/6/tuple ****         static constexpr _Ret
1505:/usr/include/c++/6/tuple ****         _S_do(_Tp&& __tp, _Tpls&&... __tps, _Us&&... __us)
1506:/usr/include/c++/6/tuple ****         {
1507:/usr/include/c++/6/tuple **** 	  typedef typename __make_1st_indices<_Tpls...>::__type __idx;
1508:/usr/include/c++/6/tuple **** 	  typedef __tuple_concater<_Ret, __idx, _Tpls...>      __next;
1509:/usr/include/c++/6/tuple **** 	  return __next::_S_do(std::forward<_Tpls>(__tps)...,
1510:/usr/include/c++/6/tuple **** 			       std::forward<_Us>(__us)...,
1511:/usr/include/c++/6/tuple **** 			       std::get<_Is>(std::forward<_Tp>(__tp))...);
1512:/usr/include/c++/6/tuple **** 	}
1513:/usr/include/c++/6/tuple ****     };
1514:/usr/include/c++/6/tuple **** 
1515:/usr/include/c++/6/tuple ****   template<typename _Ret>
1516:/usr/include/c++/6/tuple ****     struct __tuple_concater<_Ret, std::_Index_tuple<>>
1517:/usr/include/c++/6/tuple ****     {
1518:/usr/include/c++/6/tuple ****       template<typename... _Us>
1519:/usr/include/c++/6/tuple **** 	static constexpr _Ret
1520:/usr/include/c++/6/tuple **** 	_S_do(_Us&&... __us)
1521:/usr/include/c++/6/tuple ****         {
1522:/usr/include/c++/6/tuple **** 	  return _Ret(std::forward<_Us>(__us)...);
1523:/usr/include/c++/6/tuple **** 	}
1524:/usr/include/c++/6/tuple ****     };
1525:/usr/include/c++/6/tuple **** 
1526:/usr/include/c++/6/tuple ****   /// tuple_cat
1527:/usr/include/c++/6/tuple ****   template<typename... _Tpls, typename = typename
1528:/usr/include/c++/6/tuple ****            enable_if<__and_<__is_tuple_like<_Tpls>...>::value>::type>
1529:/usr/include/c++/6/tuple ****     constexpr auto
1530:/usr/include/c++/6/tuple ****     tuple_cat(_Tpls&&... __tpls)
1531:/usr/include/c++/6/tuple ****     -> typename __tuple_cat_result<_Tpls...>::__type
1532:/usr/include/c++/6/tuple ****     {
1533:/usr/include/c++/6/tuple ****       typedef typename __tuple_cat_result<_Tpls...>::__type __ret;
1534:/usr/include/c++/6/tuple ****       typedef typename __make_1st_indices<_Tpls...>::__type __idx;
1535:/usr/include/c++/6/tuple ****       typedef __tuple_concater<__ret, __idx, _Tpls...> __concater;
1536:/usr/include/c++/6/tuple ****       return __concater::_S_do(std::forward<_Tpls>(__tpls)...);
1537:/usr/include/c++/6/tuple ****     }
1538:/usr/include/c++/6/tuple **** 
1539:/usr/include/c++/6/tuple ****   // _GLIBCXX_RESOLVE_LIB_DEFECTS
1540:/usr/include/c++/6/tuple ****   // 2301. Why is tie not constexpr?
1541:/usr/include/c++/6/tuple ****   /// tie
1542:/usr/include/c++/6/tuple ****   template<typename... _Elements>
1543:/usr/include/c++/6/tuple ****     constexpr tuple<_Elements&...>
1544:/usr/include/c++/6/tuple ****     tie(_Elements&... __args) noexcept
1545:/usr/include/c++/6/tuple ****     { return tuple<_Elements&...>(__args...); }
1546:/usr/include/c++/6/tuple **** 
1547:/usr/include/c++/6/tuple ****   /// swap
1548:/usr/include/c++/6/tuple ****   template<typename... _Elements>
1549:/usr/include/c++/6/tuple ****     inline void 
1550:/usr/include/c++/6/tuple ****     swap(tuple<_Elements...>& __x, tuple<_Elements...>& __y)
1551:/usr/include/c++/6/tuple ****     noexcept(noexcept(__x.swap(__y)))
1552:/usr/include/c++/6/tuple ****     { __x.swap(__y); }
1553:/usr/include/c++/6/tuple **** 
1554:/usr/include/c++/6/tuple ****   // A class (and instance) which can be used in 'tie' when an element
1555:/usr/include/c++/6/tuple ****   // of a tuple is not required
GAS LISTING /tmp/ccsIN87E.s 			page 684


1556:/usr/include/c++/6/tuple ****   struct _Swallow_assign
1557:/usr/include/c++/6/tuple ****   {
1558:/usr/include/c++/6/tuple ****     template<class _Tp>
1559:/usr/include/c++/6/tuple ****       const _Swallow_assign&
1560:/usr/include/c++/6/tuple ****       operator=(const _Tp&) const
1561:/usr/include/c++/6/tuple ****       { return *this; }
1562:/usr/include/c++/6/tuple ****   };
1563:/usr/include/c++/6/tuple **** 
1564:/usr/include/c++/6/tuple ****   const _Swallow_assign ignore{};
1565:/usr/include/c++/6/tuple **** 
1566:/usr/include/c++/6/tuple ****   /// Partial specialization for tuples
1567:/usr/include/c++/6/tuple ****   template<typename... _Types, typename _Alloc>
1568:/usr/include/c++/6/tuple ****     struct uses_allocator<tuple<_Types...>, _Alloc> : true_type { };
1569:/usr/include/c++/6/tuple **** 
1570:/usr/include/c++/6/tuple ****   // See stl_pair.h...
1571:/usr/include/c++/6/tuple ****   template<class _T1, class _T2>
1572:/usr/include/c++/6/tuple ****     template<typename... _Args1, typename... _Args2>
1573:/usr/include/c++/6/tuple ****       inline
1574:/usr/include/c++/6/tuple ****       pair<_T1, _T2>::
 17068              		.loc 28 1574 0
 17069              		.cfi_startproc
 17070 0000 55       		pushq	%rbp
 17071              		.cfi_def_cfa_offset 16
 17072              		.cfi_offset 6, -16
 17073 0001 4889E5   		movq	%rsp, %rbp
 17074              		.cfi_def_cfa_register 6
 17075 0004 4883EC20 		subq	$32, %rsp
 17076 0008 48897DE8 		movq	%rdi, -24(%rbp)
 17077 000c 488975E0 		movq	%rsi, -32(%rbp)
 17078              	.LBB151:
1575:/usr/include/c++/6/tuple ****       pair(piecewise_construct_t,
1576:/usr/include/c++/6/tuple **** 	   tuple<_Args1...> __first, tuple<_Args2...> __second)
1577:/usr/include/c++/6/tuple ****       : pair(__first, __second,
1578:/usr/include/c++/6/tuple **** 	     typename _Build_index_tuple<sizeof...(_Args1)>::__type(),
1579:/usr/include/c++/6/tuple **** 	     typename _Build_index_tuple<sizeof...(_Args2)>::__type())
 17079              		.loc 28 1579 0
 17080 0010 488D5518 		leaq	24(%rbp), %rdx
 17081 0014 488B4DE0 		movq	-32(%rbp), %rcx
 17082 0018 488B45E8 		movq	-24(%rbp), %rax
 17083 001c 4151     		pushq	%r9
 17084 001e 4150     		pushq	%r8
 17085 0020 4889CE   		movq	%rcx, %rsi
 17086 0023 4889C7   		movq	%rax, %rdi
 17087 0026 E8000000 		call	_ZNSt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS0_8functionIFvS4_EEEEC1IJRS5_EJLm0EEJEJ
 17087      00
 17088 002b 4883C410 		addq	$16, %rsp
 17089              	.LBE151:
1580:/usr/include/c++/6/tuple ****       { }
 17090              		.loc 28 1580 0
 17091 002f 90       		nop
 17092 0030 C9       		leave
 17093              		.cfi_def_cfa 7, 8
 17094 0031 C3       		ret
 17095              		.cfi_endproc
 17096              	.LFE15178:
 17098              		.weak	_ZNSt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS0_8functionIFvS4_EEEEC1IJRS5_EJEEESt21
 17099              		.set	_ZNSt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS0_8functionIFvS4_EEEEC1IJRS5_EJEEESt21p
GAS LISTING /tmp/ccsIN87E.s 			page 685


 17100              		.section	.text._ZNK9__gnu_cxx16__aligned_membufISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEES
 17101              		.align 2
 17102              		.weak	_ZNK9__gnu_cxx16__aligned_membufISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt5dequeIS
 17104              	_ZNK9__gnu_cxx16__aligned_membufISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt5dequeIS6_SaIS6
 17105              	.LFB15180:
  66:/usr/include/c++/6/ext/aligned_buffer.h ****       { return static_cast<const void*>(&_M_storage); }
 17106              		.loc 46 66 0
 17107              		.cfi_startproc
 17108 0000 55       		pushq	%rbp
 17109              		.cfi_def_cfa_offset 16
 17110              		.cfi_offset 6, -16
 17111 0001 4889E5   		movq	%rsp, %rbp
 17112              		.cfi_def_cfa_register 6
 17113 0004 48897DF8 		movq	%rdi, -8(%rbp)
  67:/usr/include/c++/6/ext/aligned_buffer.h **** 
 17114              		.loc 46 67 0
 17115 0008 488B45F8 		movq	-8(%rbp), %rax
 17116 000c 5D       		popq	%rbp
 17117              		.cfi_def_cfa 7, 8
 17118 000d C3       		ret
 17119              		.cfi_endproc
 17120              	.LFE15180:
 17122              		.section	.text._ZNK9__gnu_cxx13new_allocatorIiE8max_sizeEv,"axG",@progbits,_ZNK9__gnu_cxx13new_all
 17123              		.align 2
 17124              		.weak	_ZNK9__gnu_cxx13new_allocatorIiE8max_sizeEv
 17126              	_ZNK9__gnu_cxx13new_allocatorIiE8max_sizeEv:
 17127              	.LFB15200:
 113:/usr/include/c++/6/ext/new_allocator.h ****       { return size_t(-1) / sizeof(_Tp); }
 17128              		.loc 43 113 0
 17129              		.cfi_startproc
 17130 0000 55       		pushq	%rbp
 17131              		.cfi_def_cfa_offset 16
 17132              		.cfi_offset 6, -16
 17133 0001 4889E5   		movq	%rsp, %rbp
 17134              		.cfi_def_cfa_register 6
 17135 0004 48897DF8 		movq	%rdi, -8(%rbp)
 114:/usr/include/c++/6/ext/new_allocator.h **** 
 17136              		.loc 43 114 0
 17137 0008 48B8FFFF 		movabsq	$4611686018427387903, %rax
 17137      FFFFFFFF 
 17137      FF3F
 17138 0012 5D       		popq	%rbp
 17139              		.cfi_def_cfa 7, 8
 17140 0013 C3       		ret
 17141              		.cfi_endproc
 17142              	.LFE15200:
 17144              		.section	.text._ZSt12__niter_baseIPKiSt6vectorIiSaIiEEET_N9__gnu_cxx17__normal_iteratorIS5_T0_EE,"
 17145              		.weak	_ZSt12__niter_baseIPKiSt6vectorIiSaIiEEET_N9__gnu_cxx17__normal_iteratorIS5_T0_EE
 17147              	_ZSt12__niter_baseIPKiSt6vectorIiSaIiEEET_N9__gnu_cxx17__normal_iteratorIS5_T0_EE:
 17148              	.LFB15201:
 980:/usr/include/c++/6/bits/stl_iterator.h ****     { return __it.base(); }
 17149              		.loc 32 980 0
 17150              		.cfi_startproc
 17151 0000 55       		pushq	%rbp
 17152              		.cfi_def_cfa_offset 16
 17153              		.cfi_offset 6, -16
 17154 0001 4889E5   		movq	%rsp, %rbp
GAS LISTING /tmp/ccsIN87E.s 			page 686


 17155              		.cfi_def_cfa_register 6
 17156 0004 4883EC10 		subq	$16, %rsp
 17157 0008 48897DF8 		movq	%rdi, -8(%rbp)
 17158              		.loc 32 981 0
 17159 000c 488D45F8 		leaq	-8(%rbp), %rax
 17160 0010 4889C7   		movq	%rax, %rdi
 17161 0013 E8000000 		call	_ZNK9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEE4baseEv
 17161      00
 17162 0018 488B00   		movq	(%rax), %rax
 17163 001b C9       		leave
 17164              		.cfi_def_cfa 7, 8
 17165 001c C3       		ret
 17166              		.cfi_endproc
 17167              	.LFE15201:
 17169              		.section	.text._ZSt12__niter_baseIPiET_S1_,"axG",@progbits,_ZSt12__niter_baseIPiET_S1_,comdat
 17170              		.weak	_ZSt12__niter_baseIPiET_S1_
 17172              	_ZSt12__niter_baseIPiET_S1_:
 17173              	.LFB15202:
 277:/usr/include/c++/6/bits/stl_algobase.h ****     { return __it; }
 17174              		.loc 44 277 0
 17175              		.cfi_startproc
 17176 0000 55       		pushq	%rbp
 17177              		.cfi_def_cfa_offset 16
 17178              		.cfi_offset 6, -16
 17179 0001 4889E5   		movq	%rsp, %rbp
 17180              		.cfi_def_cfa_register 6
 17181 0004 48897DF8 		movq	%rdi, -8(%rbp)
 278:/usr/include/c++/6/bits/stl_algobase.h **** 
 17182              		.loc 44 278 0
 17183 0008 488B45F8 		movq	-8(%rbp), %rax
 17184 000c 5D       		popq	%rbp
 17185              		.cfi_def_cfa 7, 8
 17186 000d C3       		ret
 17187              		.cfi_endproc
 17188              	.LFE15202:
 17190              		.section	.text._ZSt13__copy_move_aILb0EPKiPiET1_T0_S4_S3_,"axG",@progbits,_ZSt13__copy_move_aILb0E
 17191              		.weak	_ZSt13__copy_move_aILb0EPKiPiET1_T0_S4_S3_
 17193              	_ZSt13__copy_move_aILb0EPKiPiET1_T0_S4_S3_:
 17194              	.LFB15203:
 375:/usr/include/c++/6/bits/stl_algobase.h ****     {
 17195              		.loc 44 375 0
 17196              		.cfi_startproc
 17197 0000 55       		pushq	%rbp
 17198              		.cfi_def_cfa_offset 16
 17199              		.cfi_offset 6, -16
 17200 0001 4889E5   		movq	%rsp, %rbp
 17201              		.cfi_def_cfa_register 6
 17202 0004 4883EC30 		subq	$48, %rsp
 17203 0008 48897DE8 		movq	%rdi, -24(%rbp)
 17204 000c 488975E0 		movq	%rsi, -32(%rbp)
 17205 0010 488955D8 		movq	%rdx, -40(%rbp)
 383:/usr/include/c++/6/bits/stl_algobase.h **** 
 17206              		.loc 44 383 0
 17207 0014 C645FF01 		movb	$1, -1(%rbp)
 386:/usr/include/c++/6/bits/stl_algobase.h ****     }
 17208              		.loc 44 386 0
 17209 0018 488B55D8 		movq	-40(%rbp), %rdx
GAS LISTING /tmp/ccsIN87E.s 			page 687


 17210 001c 488B4DE0 		movq	-32(%rbp), %rcx
 17211 0020 488B45E8 		movq	-24(%rbp), %rax
 17212 0024 4889CE   		movq	%rcx, %rsi
 17213 0027 4889C7   		movq	%rax, %rdi
 17214 002a E8000000 		call	_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIiEEPT_PKS3_S6_S4_
 17214      00
 387:/usr/include/c++/6/bits/stl_algobase.h **** 
 17215              		.loc 44 387 0
 17216 002f C9       		leave
 17217              		.cfi_def_cfa 7, 8
 17218 0030 C3       		ret
 17219              		.cfi_endproc
 17220              	.LFE15203:
 17222              		.section	.text._ZN5boost9function1IvNS_13intrusive_ptrIN3pmt8pmt_baseEEEE5clearEv,"axG",@progbits,
 17223              		.align 2
 17224              		.weak	_ZN5boost9function1IvNS_13intrusive_ptrIN3pmt8pmt_baseEEEE5clearEv
 17226              	_ZN5boost9function1IvNS_13intrusive_ptrIN3pmt8pmt_baseEEEE5clearEv:
 17227              	.LFB15212:
 875:/usr/include/boost/function/function_template.hpp ****     {
 17228              		.loc 29 875 0
 17229              		.cfi_startproc
 17230 0000 55       		pushq	%rbp
 17231              		.cfi_def_cfa_offset 16
 17232              		.cfi_offset 6, -16
 17233 0001 4889E5   		movq	%rsp, %rbp
 17234              		.cfi_def_cfa_register 6
 17235 0004 53       		pushq	%rbx
 17236 0005 4883EC18 		subq	$24, %rsp
 17237              		.cfi_offset 3, -24
 17238 0009 48897DE8 		movq	%rdi, -24(%rbp)
 877:/usr/include/boost/function/function_template.hpp ****         if (!this->has_trivial_copy_and_destroy())
 17239              		.loc 29 877 0
 17240 000d 488B45E8 		movq	-24(%rbp), %rax
 17241 0011 488B00   		movq	(%rax), %rax
 17242 0014 4885C0   		testq	%rax, %rax
 17243 0017 743D     		je	.L876
 878:/usr/include/boost/function/function_template.hpp ****           get_vtable()->clear(this->functor);
 17244              		.loc 29 878 0
 17245 0019 488B45E8 		movq	-24(%rbp), %rax
 17246 001d 4889C7   		movq	%rax, %rdi
 17247 0020 E8000000 		call	_ZNK5boost13function_base28has_trivial_copy_and_destroyEv
 17247      00
 17248 0025 83F001   		xorl	$1, %eax
 17249 0028 84C0     		testb	%al, %al
 17250 002a 741F     		je	.L875
 879:/usr/include/boost/function/function_template.hpp ****         vtable = 0;
 17251              		.loc 29 879 0
 17252 002c 488B45E8 		movq	-24(%rbp), %rax
 17253 0030 488D5808 		leaq	8(%rax), %rbx
 17254 0034 488B45E8 		movq	-24(%rbp), %rax
 17255 0038 4889C7   		movq	%rax, %rdi
 17256 003b E8000000 		call	_ZNK5boost9function1IvNS_13intrusive_ptrIN3pmt8pmt_baseEEEE10get_vtableEv
 17256      00
 17257 0040 4889DE   		movq	%rbx, %rsi
 17258 0043 4889C7   		movq	%rax, %rdi
 17259 0046 E8000000 		call	_ZNK5boost6detail8function13basic_vtable1IvNS_13intrusive_ptrIN3pmt8pmt_baseEEEE5clearERNS1_1
 17259      00
GAS LISTING /tmp/ccsIN87E.s 			page 688


 17260              	.L875:
 880:/usr/include/boost/function/function_template.hpp ****       }
 17261              		.loc 29 880 0
 17262 004b 488B45E8 		movq	-24(%rbp), %rax
 17263 004f 48C70000 		movq	$0, (%rax)
 17263      000000
 17264              	.L876:
 882:/usr/include/boost/function/function_template.hpp **** 
 17265              		.loc 29 882 0
 17266 0056 90       		nop
 17267 0057 4883C418 		addq	$24, %rsp
 17268 005b 5B       		popq	%rbx
 17269 005c 5D       		popq	%rbp
 17270              		.cfi_def_cfa 7, 8
 17271 005d C3       		ret
 17272              		.cfi_endproc
 17273              	.LFE15212:
 17275              		.section	.text._ZSt12__get_helperILm0ERKN5boost13intrusive_ptrIN3pmt8pmt_baseEEEJEERT0_RSt11_Tuple
 17276              		.weak	_ZSt12__get_helperILm0ERKN5boost13intrusive_ptrIN3pmt8pmt_baseEEEJEERT0_RSt11_Tuple_implIXT_
 17278              	_ZSt12__get_helperILm0ERKN5boost13intrusive_ptrIN3pmt8pmt_baseEEEJEERT0_RSt11_Tuple_implIXT_EJS7_Dp
 17279              	.LFB15222:
1247:/usr/include/c++/6/tuple ****     { return _Tuple_impl<__i, _Head, _Tail...>::_M_head(__t); }
 17280              		.loc 28 1247 0
 17281              		.cfi_startproc
 17282 0000 55       		pushq	%rbp
 17283              		.cfi_def_cfa_offset 16
 17284              		.cfi_offset 6, -16
 17285 0001 4889E5   		movq	%rsp, %rbp
 17286              		.cfi_def_cfa_register 6
 17287 0004 4883EC10 		subq	$16, %rsp
 17288 0008 48897DF8 		movq	%rdi, -8(%rbp)
1248:/usr/include/c++/6/tuple **** 
 17289              		.loc 28 1248 0
 17290 000c 488B45F8 		movq	-8(%rbp), %rax
 17291 0010 4889C7   		movq	%rax, %rdi
 17292 0013 E8000000 		call	_ZNSt11_Tuple_implILm0EJRKN5boost13intrusive_ptrIN3pmt8pmt_baseEEEEE7_M_headERS7_
 17292      00
 17293 0018 C9       		leave
 17294              		.cfi_def_cfa 7, 8
 17295 0019 C3       		ret
 17296              		.cfi_endproc
 17297              	.LFE15222:
 17299              		.section	.text._ZSt3getILm0EJRKN5boost13intrusive_ptrIN3pmt8pmt_baseEEEEERNSt13tuple_elementIXT_ES
 17300              		.weak	_ZSt3getILm0EJRKN5boost13intrusive_ptrIN3pmt8pmt_baseEEEEERNSt13tuple_elementIXT_ESt5tupleIJ
 17302              	_ZSt3getILm0EJRKN5boost13intrusive_ptrIN3pmt8pmt_baseEEEEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EE
 17303              	.LFB15221:
1258:/usr/include/c++/6/tuple ****     { return std::__get_helper<__i>(__t); }
 17304              		.loc 28 1258 0
 17305              		.cfi_startproc
 17306 0000 55       		pushq	%rbp
 17307              		.cfi_def_cfa_offset 16
 17308              		.cfi_offset 6, -16
 17309 0001 4889E5   		movq	%rsp, %rbp
 17310              		.cfi_def_cfa_register 6
 17311 0004 4883EC10 		subq	$16, %rsp
 17312 0008 48897DF8 		movq	%rdi, -8(%rbp)
1259:/usr/include/c++/6/tuple **** 
GAS LISTING /tmp/ccsIN87E.s 			page 689


 17313              		.loc 28 1259 0
 17314 000c 488B45F8 		movq	-8(%rbp), %rax
 17315 0010 4889C7   		movq	%rax, %rdi
 17316 0013 E8000000 		call	_ZSt12__get_helperILm0ERKN5boost13intrusive_ptrIN3pmt8pmt_baseEEEJEERT0_RSt11_Tuple_implIXT_E
 17316      00
 17317 0018 C9       		leave
 17318              		.cfi_def_cfa 7, 8
 17319 0019 C3       		ret
 17320              		.cfi_endproc
 17321              	.LFE15221:
 17323              		.section	.text._ZNSt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS0_8functionIFvS4_EEEEC2IJRS5_
 17324              		.align 2
 17325              		.weak	_ZNSt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS0_8functionIFvS4_EEEEC2IJRS5_EJLm0EEJE
 17327              	_ZNSt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS0_8functionIFvS4_EEEEC2IJRS5_EJLm0EEJEJEEERSt
 17328              	.LFB15223:
1581:/usr/include/c++/6/tuple **** 
1582:/usr/include/c++/6/tuple ****   template<class _T1, class _T2>
1583:/usr/include/c++/6/tuple ****     template<typename... _Args1, std::size_t... _Indexes1,
1584:/usr/include/c++/6/tuple ****              typename... _Args2, std::size_t... _Indexes2>
1585:/usr/include/c++/6/tuple ****       inline
1586:/usr/include/c++/6/tuple ****       pair<_T1, _T2>::
 17329              		.loc 28 1586 0
 17330              		.cfi_startproc
 17331              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 17332              		.cfi_lsda 0x1b,.LLSDA15223
 17333 0000 55       		pushq	%rbp
 17334              		.cfi_def_cfa_offset 16
 17335              		.cfi_offset 6, -16
 17336 0001 4889E5   		movq	%rsp, %rbp
 17337              		.cfi_def_cfa_register 6
 17338 0004 53       		pushq	%rbx
 17339 0005 4883EC28 		subq	$40, %rsp
 17340              		.cfi_offset 3, -24
 17341 0009 48897DE8 		movq	%rdi, -24(%rbp)
 17342 000d 488975E0 		movq	%rsi, -32(%rbp)
 17343 0011 488955D8 		movq	%rdx, -40(%rbp)
 17344              	.LBB152:
1587:/usr/include/c++/6/tuple ****       pair(tuple<_Args1...>& __tuple1, tuple<_Args2...>& __tuple2,
1588:/usr/include/c++/6/tuple **** 	   _Index_tuple<_Indexes1...>, _Index_tuple<_Indexes2...>)
1589:/usr/include/c++/6/tuple ****       : first(std::forward<_Args1>(std::get<_Indexes1>(__tuple1))...),
 17345              		.loc 28 1589 0
 17346 0015 488B45E0 		movq	-32(%rbp), %rax
 17347 0019 4889C7   		movq	%rax, %rdi
 17348 001c E8000000 		call	_ZSt3getILm0EJRKN5boost13intrusive_ptrIN3pmt8pmt_baseEEEEERNSt13tuple_elementIXT_ESt5tupleIJD
 17348      00
1590:/usr/include/c++/6/tuple ****         second(std::forward<_Args2>(std::get<_Indexes2>(__tuple2))...)
 17349              		.loc 28 1590 0
 17350 0021 4889C7   		movq	%rax, %rdi
 17351 0024 E8000000 		call	_ZSt7forwardIRKN5boost13intrusive_ptrIN3pmt8pmt_baseEEEEOT_RNSt16remove_referenceIS7_E4typeE
 17351      00
 17352 0029 4889C2   		movq	%rax, %rdx
 17353 002c 488B45E8 		movq	-24(%rbp), %rax
 17354 0030 4889D6   		movq	%rdx, %rsi
 17355 0033 4889C7   		movq	%rax, %rdi
 17356              	.LEHB103:
 17357 0036 E8000000 		call	_ZN5boost13intrusive_ptrIN3pmt8pmt_baseEEC1ERKS3_
 17357      00
GAS LISTING /tmp/ccsIN87E.s 			page 690


 17358              	.LEHE103:
 17359 003b 488B45E8 		movq	-24(%rbp), %rax
 17360 003f 4883C008 		addq	$8, %rax
 17361 0043 4889C7   		movq	%rax, %rdi
 17362              	.LEHB104:
 17363 0046 E8000000 		call	_ZN5boost8functionIFvNS_13intrusive_ptrIN3pmt8pmt_baseEEEEEC1Ev
 17363      00
 17364              	.LEHE104:
 17365              	.LBE152:
1591:/usr/include/c++/6/tuple ****       { }
 17366              		.loc 28 1591 0
 17367 004b EB1A     		jmp	.L884
 17368              	.L883:
 17369 004d 4889C3   		movq	%rax, %rbx
 17370              	.LBB153:
1590:/usr/include/c++/6/tuple ****         second(std::forward<_Args2>(std::get<_Indexes2>(__tuple2))...)
 17371              		.loc 28 1590 0
 17372 0050 488B45E8 		movq	-24(%rbp), %rax
 17373 0054 4889C7   		movq	%rax, %rdi
 17374 0057 E8000000 		call	_ZN5boost13intrusive_ptrIN3pmt8pmt_baseEED1Ev
 17374      00
 17375 005c 4889D8   		movq	%rbx, %rax
 17376 005f 4889C7   		movq	%rax, %rdi
 17377              	.LEHB105:
 17378 0062 E8000000 		call	_Unwind_Resume@PLT
 17378      00
 17379              	.LEHE105:
 17380              	.L884:
 17381              	.LBE153:
 17382              		.loc 28 1591 0
 17383 0067 4883C428 		addq	$40, %rsp
 17384 006b 5B       		popq	%rbx
 17385 006c 5D       		popq	%rbp
 17386              		.cfi_def_cfa 7, 8
 17387 006d C3       		ret
 17388              		.cfi_endproc
 17389              	.LFE15223:
 17390              		.section	.gcc_except_table
 17391              	.LLSDA15223:
 17392 0277 FF       		.byte	0xff
 17393 0278 FF       		.byte	0xff
 17394 0279 01       		.byte	0x1
 17395 027a 0C       		.uleb128 .LLSDACSE15223-.LLSDACSB15223
 17396              	.LLSDACSB15223:
 17397 027b 36       		.uleb128 .LEHB103-.LFB15223
 17398 027c 05       		.uleb128 .LEHE103-.LEHB103
 17399 027d 00       		.uleb128 0
 17400 027e 00       		.uleb128 0
 17401 027f 46       		.uleb128 .LEHB104-.LFB15223
 17402 0280 05       		.uleb128 .LEHE104-.LEHB104
 17403 0281 4D       		.uleb128 .L883-.LFB15223
 17404 0282 00       		.uleb128 0
 17405 0283 62       		.uleb128 .LEHB105-.LFB15223
 17406 0284 05       		.uleb128 .LEHE105-.LEHB105
 17407 0285 00       		.uleb128 0
 17408 0286 00       		.uleb128 0
 17409              	.LLSDACSE15223:
GAS LISTING /tmp/ccsIN87E.s 			page 691


 17410              		.section	.text._ZNSt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS0_8functionIFvS4_EEEEC2IJRS5_
 17412              		.weak	_ZNSt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS0_8functionIFvS4_EEEEC1IJRS5_EJLm0EEJE
 17413              		.set	_ZNSt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS0_8functionIFvS4_EEEEC1IJRS5_EJLm0EEJEJ
 17414              		.section	.text._ZNK9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEE4baseEv,"axG",@progbits,_ZNK
 17415              		.align 2
 17416              		.weak	_ZNK9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEE4baseEv
 17418              	_ZNK9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEE4baseEv:
 17419              	.LFB15250:
 841:/usr/include/c++/6/bits/stl_iterator.h ****       { return _M_current; }
 17420              		.loc 32 841 0
 17421              		.cfi_startproc
 17422 0000 55       		pushq	%rbp
 17423              		.cfi_def_cfa_offset 16
 17424              		.cfi_offset 6, -16
 17425 0001 4889E5   		movq	%rsp, %rbp
 17426              		.cfi_def_cfa_register 6
 17427 0004 48897DF8 		movq	%rdi, -8(%rbp)
 842:/usr/include/c++/6/bits/stl_iterator.h ****     };
 17428              		.loc 32 842 0
 17429 0008 488B45F8 		movq	-8(%rbp), %rax
 17430 000c 5D       		popq	%rbp
 17431              		.cfi_def_cfa 7, 8
 17432 000d C3       		ret
 17433              		.cfi_endproc
 17434              	.LFE15250:
 17436              		.section	.text._ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIiEEPT_PKS3_S6_S
 17437              		.weak	_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIiEEPT_PKS3_S6_S4_
 17439              	_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIiEEPT_PKS3_S6_S4_:
 17440              	.LFB15251:
 357:/usr/include/c++/6/bits/stl_algobase.h ****         {
 17441              		.loc 44 357 0
 17442              		.cfi_startproc
 17443 0000 55       		pushq	%rbp
 17444              		.cfi_def_cfa_offset 16
 17445              		.cfi_offset 6, -16
 17446 0001 4889E5   		movq	%rsp, %rbp
 17447              		.cfi_def_cfa_register 6
 17448 0004 4883EC30 		subq	$48, %rsp
 17449 0008 48897DE8 		movq	%rdi, -24(%rbp)
 17450 000c 488975E0 		movq	%rsi, -32(%rbp)
 17451 0010 488955D8 		movq	%rdx, -40(%rbp)
 366:/usr/include/c++/6/bits/stl_algobase.h **** 	  if (_Num)
 17452              		.loc 44 366 0
 17453 0014 488B55E0 		movq	-32(%rbp), %rdx
 17454 0018 488B45E8 		movq	-24(%rbp), %rax
 17455 001c 4829C2   		subq	%rax, %rdx
 17456 001f 4889D0   		movq	%rdx, %rax
 17457 0022 48C1F802 		sarq	$2, %rax
 17458 0026 488945F8 		movq	%rax, -8(%rbp)
 367:/usr/include/c++/6/bits/stl_algobase.h **** 	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
 17459              		.loc 44 367 0
 17460 002a 48837DF8 		cmpq	$0, -8(%rbp)
 17460      00
 17461 002f 741F     		je	.L888
 368:/usr/include/c++/6/bits/stl_algobase.h **** 	  return __result + _Num;
 17462              		.loc 44 368 0
 17463 0031 488B45F8 		movq	-8(%rbp), %rax
GAS LISTING /tmp/ccsIN87E.s 			page 692


 17464 0035 488D1485 		leaq	0(,%rax,4), %rdx
 17464      00000000 
 17465 003d 488B4DE8 		movq	-24(%rbp), %rcx
 17466 0041 488B45D8 		movq	-40(%rbp), %rax
 17467 0045 4889CE   		movq	%rcx, %rsi
 17468 0048 4889C7   		movq	%rax, %rdi
 17469 004b E8000000 		call	memmove@PLT
 17469      00
 17470              	.L888:
 369:/usr/include/c++/6/bits/stl_algobase.h **** 	}
 17471              		.loc 44 369 0
 17472 0050 488B45F8 		movq	-8(%rbp), %rax
 17473 0054 488D1485 		leaq	0(,%rax,4), %rdx
 17473      00000000 
 17474 005c 488B45D8 		movq	-40(%rbp), %rax
 17475 0060 4801D0   		addq	%rdx, %rax
 370:/usr/include/c++/6/bits/stl_algobase.h ****     };
 17476              		.loc 44 370 0
 17477 0063 C9       		leave
 17478              		.cfi_def_cfa 7, 8
 17479 0064 C3       		ret
 17480              		.cfi_endproc
 17481              	.LFE15251:
 17483              		.section	.text._ZNK5boost6detail8function13basic_vtable1IvNS_13intrusive_ptrIN3pmt8pmt_baseEEEE5cl
 17484              		.align 2
 17485              		.weak	_ZNK5boost6detail8function13basic_vtable1IvNS_13intrusive_ptrIN3pmt8pmt_baseEEEE5clearERNS1_
 17487              	_ZNK5boost6detail8function13basic_vtable1IvNS_13intrusive_ptrIN3pmt8pmt_baseEEEE5clearERNS1_15funct
 17488              	.LFB15254:
 507:/usr/include/boost/function/function_template.hpp ****         {
 17489              		.loc 29 507 0
 17490              		.cfi_startproc
 17491 0000 55       		pushq	%rbp
 17492              		.cfi_def_cfa_offset 16
 17493              		.cfi_offset 6, -16
 17494 0001 4889E5   		movq	%rsp, %rbp
 17495              		.cfi_def_cfa_register 6
 17496 0004 4883EC10 		subq	$16, %rsp
 17497 0008 48897DF8 		movq	%rdi, -8(%rbp)
 17498 000c 488975F0 		movq	%rsi, -16(%rbp)
 509:/usr/include/boost/function/function_template.hpp ****             base.manager(functor, functor, destroy_functor_tag);
 17499              		.loc 29 509 0
 17500 0010 488B45F8 		movq	-8(%rbp), %rax
 17501 0014 488B00   		movq	(%rax), %rax
 17502 0017 4885C0   		testq	%rax, %rax
 17503 001a 7419     		je	.L892
 510:/usr/include/boost/function/function_template.hpp ****         }
 17504              		.loc 29 510 0
 17505 001c 488B45F8 		movq	-8(%rbp), %rax
 17506 0020 488B00   		movq	(%rax), %rax
 17507 0023 488B75F0 		movq	-16(%rbp), %rsi
 17508 0027 488B4DF0 		movq	-16(%rbp), %rcx
 17509 002b BA020000 		movl	$2, %edx
 17509      00
 17510 0030 4889CF   		movq	%rcx, %rdi
 17511 0033 FFD0     		call	*%rax
 17512              	.LVL12:
 17513              	.L892:
GAS LISTING /tmp/ccsIN87E.s 			page 693


 511:/usr/include/boost/function/function_template.hpp **** 
 17514              		.loc 29 511 0
 17515 0035 90       		nop
 17516 0036 C9       		leave
 17517              		.cfi_def_cfa 7, 8
 17518 0037 C3       		ret
 17519              		.cfi_endproc
 17520              	.LFE15254:
 17522              		.section	.text._ZN5boost8functionIFvNS_13intrusive_ptrIN3pmt8pmt_baseEEEEEC2Ev,"axG",@progbits,_ZN
 17523              		.align 2
 17524              		.weak	_ZN5boost8functionIFvNS_13intrusive_ptrIN3pmt8pmt_baseEEEEEC2Ev
 17526              	_ZN5boost8functionIFvNS_13intrusive_ptrIN3pmt8pmt_baseEEEEEC2Ev:
 17527              	.LFB15262:
1053:/usr/include/boost/function/function_template.hpp ****   : public BOOST_FUNCTION_FUNCTION<R BOOST_FUNCTION_COMMA BOOST_FUNCTION_TEMPLATE_ARGS>
1054:/usr/include/boost/function/function_template.hpp **** {
1055:/usr/include/boost/function/function_template.hpp ****   typedef BOOST_FUNCTION_FUNCTION<R BOOST_FUNCTION_COMMA BOOST_FUNCTION_TEMPLATE_ARGS> base_type;
1056:/usr/include/boost/function/function_template.hpp ****   typedef function self_type;
1057:/usr/include/boost/function/function_template.hpp **** 
1058:/usr/include/boost/function/function_template.hpp ****   struct clear_type {};
1059:/usr/include/boost/function/function_template.hpp **** 
1060:/usr/include/boost/function/function_template.hpp **** public:
1061:/usr/include/boost/function/function_template.hpp **** 
1062:/usr/include/boost/function/function_template.hpp ****   function() : base_type() {}
 17528              		.loc 29 1062 0
 17529              		.cfi_startproc
 17530 0000 55       		pushq	%rbp
 17531              		.cfi_def_cfa_offset 16
 17532              		.cfi_offset 6, -16
 17533 0001 4889E5   		movq	%rsp, %rbp
 17534              		.cfi_def_cfa_register 6
 17535 0004 4883EC10 		subq	$16, %rsp
 17536 0008 48897DF8 		movq	%rdi, -8(%rbp)
 17537              	.LBB154:
 17538              		.loc 29 1062 0
 17539 000c 488B45F8 		movq	-8(%rbp), %rax
 17540 0010 4889C7   		movq	%rax, %rdi
 17541 0013 E8000000 		call	_ZN5boost9function1IvNS_13intrusive_ptrIN3pmt8pmt_baseEEEEC2Ev
 17541      00
 17542              	.LBE154:
 17543 0018 90       		nop
 17544 0019 C9       		leave
 17545              		.cfi_def_cfa 7, 8
 17546 001a C3       		ret
 17547              		.cfi_endproc
 17548              	.LFE15262:
 17550              		.weak	_ZN5boost8functionIFvNS_13intrusive_ptrIN3pmt8pmt_baseEEEEEC1Ev
 17551              		.set	_ZN5boost8functionIFvNS_13intrusive_ptrIN3pmt8pmt_baseEEEEEC1Ev,_ZN5boost8functionIFvNS_13int
 17552              		.section	.text._ZNSt14unary_functionIN5boost13intrusive_ptrIN3pmt8pmt_baseEEEvEC2Ev,"axG",@progbit
 17553              		.align 2
 17554              		.weak	_ZNSt14unary_functionIN5boost13intrusive_ptrIN3pmt8pmt_baseEEEvEC2Ev
 17556              	_ZNSt14unary_functionIN5boost13intrusive_ptrIN3pmt8pmt_baseEEEvEC2Ev:
 17557              	.LFB15285:
 105:/usr/include/c++/6/bits/stl_function.h ****     {
 17558              		.loc 45 105 0
 17559              		.cfi_startproc
 17560 0000 55       		pushq	%rbp
 17561              		.cfi_def_cfa_offset 16
GAS LISTING /tmp/ccsIN87E.s 			page 694


 17562              		.cfi_offset 6, -16
 17563 0001 4889E5   		movq	%rsp, %rbp
 17564              		.cfi_def_cfa_register 6
 17565 0004 48897DF8 		movq	%rdi, -8(%rbp)
 105:/usr/include/c++/6/bits/stl_function.h ****     {
 17566              		.loc 45 105 0
 17567 0008 90       		nop
 17568 0009 5D       		popq	%rbp
 17569              		.cfi_def_cfa 7, 8
 17570 000a C3       		ret
 17571              		.cfi_endproc
 17572              	.LFE15285:
 17574              		.weak	_ZNSt14unary_functionIN5boost13intrusive_ptrIN3pmt8pmt_baseEEEvEC1Ev
 17575              		.set	_ZNSt14unary_functionIN5boost13intrusive_ptrIN3pmt8pmt_baseEEEvEC1Ev,_ZNSt14unary_functionIN5
 17576              		.section	.text._ZN5boost9function1IvNS_13intrusive_ptrIN3pmt8pmt_baseEEEEC2Ev,"axG",@progbits,_ZN5
 17577              		.align 2
 17578              		.weak	_ZN5boost9function1IvNS_13intrusive_ptrIN3pmt8pmt_baseEEEEC2Ev
 17580              	_ZN5boost9function1IvNS_13intrusive_ptrIN3pmt8pmt_baseEEEEC2Ev:
 17581              	.LFB15287:
 713:/usr/include/boost/function/function_template.hpp **** 
 17582              		.loc 29 713 0
 17583              		.cfi_startproc
 17584 0000 55       		pushq	%rbp
 17585              		.cfi_def_cfa_offset 16
 17586              		.cfi_offset 6, -16
 17587 0001 4889E5   		movq	%rsp, %rbp
 17588              		.cfi_def_cfa_register 6
 17589 0004 4883EC10 		subq	$16, %rsp
 17590 0008 48897DF8 		movq	%rdi, -8(%rbp)
 17591              	.LBB155:
 713:/usr/include/boost/function/function_template.hpp **** 
 17592              		.loc 29 713 0
 17593 000c 488B45F8 		movq	-8(%rbp), %rax
 17594 0010 4889C7   		movq	%rax, %rdi
 17595 0013 E8000000 		call	_ZN5boost13function_baseC2Ev
 17595      00
 17596 0018 488B45F8 		movq	-8(%rbp), %rax
 17597 001c 4889C7   		movq	%rax, %rdi
 17598 001f E8000000 		call	_ZNSt14unary_functionIN5boost13intrusive_ptrIN3pmt8pmt_baseEEEvEC2Ev
 17598      00
 17599              	.LBE155:
 17600 0024 90       		nop
 17601 0025 C9       		leave
 17602              		.cfi_def_cfa 7, 8
 17603 0026 C3       		ret
 17604              		.cfi_endproc
 17605              	.LFE15287:
 17607              		.weak	_ZN5boost9function1IvNS_13intrusive_ptrIN3pmt8pmt_baseEEEEC1Ev
 17608              		.set	_ZN5boost9function1IvNS_13intrusive_ptrIN3pmt8pmt_baseEEEEC1Ev,_ZN5boost9function1IvNS_13intr
 17609              		.weak	_ZTVN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_14bad_exception_
 17610              		.section	.data.rel.ro.local._ZTVN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_imp
 17611              		.align 8
 17614              	_ZTVN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_14bad_exception_EEEEE:
 17615 0000 00000000 		.quad	0
 17615      00000000 
 17616 0008 00000000 		.quad	_ZTIN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_14bad_exception_
 17616      00000000 
GAS LISTING /tmp/ccsIN87E.s 			page 695


 17617 0010 00000000 		.quad	_ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_14bad_exception_EE
 17617      00000000 
 17618 0018 00000000 		.quad	_ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_14bad_exception_EE
 17618      00000000 
 17619 0020 00000000 		.quad	_ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_14bad_exception_EE
 17619      00000000 
 17620 0028 00000000 		.quad	_ZN5boost6detail15sp_counted_base7destroyEv
 17620      00000000 
 17621 0030 00000000 		.quad	_ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_14bad_exception_EE
 17621      00000000 
 17622 0038 00000000 		.quad	_ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_14bad_exception_EE
 17622      00000000 
 17623              		.section	.text._ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_14bad_exc
 17624              		.align 2
 17625              		.weak	_ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_14bad_exception_EE
 17627              	_ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_14bad_exception_EEEED2Ev:
 17628              	.LFB15338:
  53:/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp **** {
 17629              		.loc 48 53 0
 17630              		.cfi_startproc
 17631 0000 55       		pushq	%rbp
 17632              		.cfi_def_cfa_offset 16
 17633              		.cfi_offset 6, -16
 17634 0001 4889E5   		movq	%rsp, %rbp
 17635              		.cfi_def_cfa_register 6
 17636 0004 4883EC10 		subq	$16, %rsp
 17637 0008 48897DF8 		movq	%rdi, -8(%rbp)
 17638              	.LBB156:
  53:/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp **** {
 17639              		.loc 48 53 0
 17640 000c 488D1500 		leaq	16+_ZTVN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_14bad_exceptio
 17640      000000
 17641 0013 488B45F8 		movq	-8(%rbp), %rax
 17642 0017 488910   		movq	%rdx, (%rax)
 17643 001a 488B45F8 		movq	-8(%rbp), %rax
 17644 001e 4889C7   		movq	%rax, %rdi
 17645 0021 E8000000 		call	_ZN5boost6detail15sp_counted_baseD2Ev
 17645      00
 17646              	.LBE156:
 17647 0026 90       		nop
 17648 0027 C9       		leave
 17649              		.cfi_def_cfa 7, 8
 17650 0028 C3       		ret
 17651              		.cfi_endproc
 17652              	.LFE15338:
 17654              		.weak	_ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_14bad_exception_EE
 17655              		.set	_ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_14bad_exception_EEE
 17656              		.section	.text._ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_14bad_exc
 17657              		.align 2
 17658              		.weak	_ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_14bad_exception_EE
 17660              	_ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_14bad_exception_EEEED0Ev:
 17661              	.LFB15340:
  53:/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp **** {
 17662              		.loc 48 53 0
 17663              		.cfi_startproc
 17664 0000 55       		pushq	%rbp
 17665              		.cfi_def_cfa_offset 16
GAS LISTING /tmp/ccsIN87E.s 			page 696


 17666              		.cfi_offset 6, -16
 17667 0001 4889E5   		movq	%rsp, %rbp
 17668              		.cfi_def_cfa_register 6
 17669 0004 4883EC10 		subq	$16, %rsp
 17670 0008 48897DF8 		movq	%rdi, -8(%rbp)
  53:/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp **** {
 17671              		.loc 48 53 0
 17672 000c 488B45F8 		movq	-8(%rbp), %rax
 17673 0010 4889C7   		movq	%rax, %rdi
 17674 0013 E8000000 		call	_ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_14bad_exception_EEE
 17674      00
 17675 0018 488B45F8 		movq	-8(%rbp), %rax
 17676 001c BE180000 		movl	$24, %esi
 17676      00
 17677 0021 4889C7   		movq	%rax, %rdi
 17678 0024 E8000000 		call	_ZdlPvm@PLT
 17678      00
 17679 0029 C9       		leave
 17680              		.cfi_def_cfa 7, 8
 17681 002a C3       		ret
 17682              		.cfi_endproc
 17683              	.LFE15340:
 17685              		.weak	_ZTVN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEE
 17686              		.section	.data.rel.ro.local._ZTVN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_imp
 17687              		.align 8
 17690              	_ZTVN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEEE:
 17691 0000 00000000 		.quad	0
 17691      00000000 
 17692 0008 00000000 		.quad	_ZTIN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEE
 17692      00000000 
 17693 0010 00000000 		.quad	_ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEED1
 17693      00000000 
 17694 0018 00000000 		.quad	_ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEED0
 17694      00000000 
 17695 0020 00000000 		.quad	_ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEE7d
 17695      00000000 
 17696 0028 00000000 		.quad	_ZN5boost6detail15sp_counted_base7destroyEv
 17696      00000000 
 17697 0030 00000000 		.quad	_ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEE11
 17697      00000000 
 17698 0038 00000000 		.quad	_ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEE19
 17698      00000000 
 17699              		.section	.text._ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_all
 17700              		.align 2
 17701              		.weak	_ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEED2
 17703              	_ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEED2Ev:
 17704              	.LFB15342:
  53:/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp **** {
 17705              		.loc 48 53 0
 17706              		.cfi_startproc
 17707 0000 55       		pushq	%rbp
 17708              		.cfi_def_cfa_offset 16
 17709              		.cfi_offset 6, -16
 17710 0001 4889E5   		movq	%rsp, %rbp
 17711              		.cfi_def_cfa_register 6
 17712 0004 4883EC10 		subq	$16, %rsp
 17713 0008 48897DF8 		movq	%rdi, -8(%rbp)
GAS LISTING /tmp/ccsIN87E.s 			page 697


 17714              	.LBB157:
  53:/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp **** {
 17715              		.loc 48 53 0
 17716 000c 488D1500 		leaq	16+_ZTVN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EE
 17716      000000
 17717 0013 488B45F8 		movq	-8(%rbp), %rax
 17718 0017 488910   		movq	%rdx, (%rax)
 17719 001a 488B45F8 		movq	-8(%rbp), %rax
 17720 001e 4889C7   		movq	%rax, %rdi
 17721 0021 E8000000 		call	_ZN5boost6detail15sp_counted_baseD2Ev
 17721      00
 17722              	.LBE157:
 17723 0026 90       		nop
 17724 0027 C9       		leave
 17725              		.cfi_def_cfa 7, 8
 17726 0028 C3       		ret
 17727              		.cfi_endproc
 17728              	.LFE15342:
 17730              		.weak	_ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEED1
 17731              		.set	_ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEED1E
 17732              		.section	.text._ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_all
 17733              		.align 2
 17734              		.weak	_ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEED0
 17736              	_ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEED0Ev:
 17737              	.LFB15344:
  53:/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp **** {
 17738              		.loc 48 53 0
 17739              		.cfi_startproc
 17740 0000 55       		pushq	%rbp
 17741              		.cfi_def_cfa_offset 16
 17742              		.cfi_offset 6, -16
 17743 0001 4889E5   		movq	%rsp, %rbp
 17744              		.cfi_def_cfa_register 6
 17745 0004 4883EC10 		subq	$16, %rsp
 17746 0008 48897DF8 		movq	%rdi, -8(%rbp)
  53:/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp **** {
 17747              		.loc 48 53 0
 17748 000c 488B45F8 		movq	-8(%rbp), %rax
 17749 0010 4889C7   		movq	%rax, %rdi
 17750 0013 E8000000 		call	_ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEED1E
 17750      00
 17751 0018 488B45F8 		movq	-8(%rbp), %rax
 17752 001c BE180000 		movl	$24, %esi
 17752      00
 17753 0021 4889C7   		movq	%rax, %rdi
 17754 0024 E8000000 		call	_ZdlPvm@PLT
 17754      00
 17755 0029 C9       		leave
 17756              		.cfi_def_cfa 7, 8
 17757 002a C3       		ret
 17758              		.cfi_endproc
 17759              	.LFE15344:
 17761              		.weak	_ZTVN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEE
 17762              		.section	.data.rel.ro._ZTVN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad
 17763              		.align 8
 17766              	_ZTVN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEEE:
 17767 0000 38000000 		.quad	56
GAS LISTING /tmp/ccsIN87E.s 			page 698


 17767      00000000 
 17768 0008 00000000 		.quad	0
 17768      00000000 
 17769 0010 00000000 		.quad	_ZTIN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEE
 17769      00000000 
 17770 0018 00000000 		.quad	_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEE
 17770      00000000 
 17771 0020 00000000 		.quad	_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEE
 17771      00000000 
 17772 0028 00000000 		.quad	_ZNKSt13runtime_error4whatEv
 17772      00000000 
 17773 0030 00000000 		.quad	_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEE
 17773      00000000 
 17774 0038 00000000 		.quad	_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEE
 17774      00000000 
 17775 0040 F0FFFFFF 		.quad	-16
 17775      FFFFFFFF 
 17776 0048 00000000 		.quad	_ZTIN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEE
 17776      00000000 
 17777 0050 00000000 		.quad	_ZThn16_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_ca
 17777      00000000 
 17778 0058 00000000 		.quad	_ZThn16_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_ca
 17778      00000000 
 17779 0060 C8FFFFFF 		.quad	-56
 17779      FFFFFFFF 
 17780 0068 C8FFFFFF 		.quad	-56
 17780      FFFFFFFF 
 17781 0070 C8FFFFFF 		.quad	-56
 17781      FFFFFFFF 
 17782 0078 C8FFFFFF 		.quad	-56
 17782      FFFFFFFF 
 17783 0080 00000000 		.quad	_ZTIN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEE
 17783      00000000 
 17784 0088 00000000 		.quad	_ZTv0_n24_NK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function
 17784      00000000 
 17785 0090 00000000 		.quad	_ZTv0_n32_NK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function
 17785      00000000 
 17786 0098 00000000 		.quad	_ZTv0_n40_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_
 17786      00000000 
 17787 00a0 00000000 		.quad	_ZTv0_n40_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_
 17787      00000000 
 17788              		.weak	_ZTTN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEE
 17789              		.section	.data.rel.ro.local._ZTTN5boost16exception_detail10clone_implINS0_19error_info_injectorINS
 17790              		.align 8
 17793              	_ZTTN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEEE:
 17794 0000 00000000 		.quad	_ZTVN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEE
 17794      00000000 
 17795 0008 00000000 		.quad	_ZTVN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEE
 17795      00000000 
 17796              		.weak	_ZTVN5boost16exception_detail19error_info_injectorINS_17bad_function_callEEE
 17797              		.section	.data.rel.ro._ZTVN5boost16exception_detail19error_info_injectorINS_17bad_function_callEEE
 17798              		.align 8
 17801              	_ZTVN5boost16exception_detail19error_info_injectorINS_17bad_function_callEEE:
 17802 0000 00000000 		.quad	0
 17802      00000000 
 17803 0008 00000000 		.quad	_ZTIN5boost16exception_detail19error_info_injectorINS_17bad_function_callEEE
 17803      00000000 
GAS LISTING /tmp/ccsIN87E.s 			page 699


 17804 0010 00000000 		.quad	_ZN5boost16exception_detail19error_info_injectorINS_17bad_function_callEED1Ev
 17804      00000000 
 17805 0018 00000000 		.quad	_ZN5boost16exception_detail19error_info_injectorINS_17bad_function_callEED0Ev
 17805      00000000 
 17806 0020 00000000 		.quad	_ZNKSt13runtime_error4whatEv
 17806      00000000 
 17807 0028 F0FFFFFF 		.quad	-16
 17807      FFFFFFFF 
 17808 0030 00000000 		.quad	_ZTIN5boost16exception_detail19error_info_injectorINS_17bad_function_callEEE
 17808      00000000 
 17809 0038 00000000 		.quad	_ZThn16_N5boost16exception_detail19error_info_injectorINS_17bad_function_callEED1Ev
 17809      00000000 
 17810 0040 00000000 		.quad	_ZThn16_N5boost16exception_detail19error_info_injectorINS_17bad_function_callEED0Ev
 17810      00000000 
 17811              		.weak	_ZTVN5boost16exception_detail10clone_implINS0_14bad_exception_EEE
 17812              		.section	.data.rel.ro._ZTVN5boost16exception_detail10clone_implINS0_14bad_exception_EEE,"awG",@pro
 17813              		.align 8
 17816              	_ZTVN5boost16exception_detail10clone_implINS0_14bad_exception_EEE:
 17817 0000 30000000 		.quad	48
 17817      00000000 
 17818 0008 00000000 		.quad	0
 17818      00000000 
 17819 0010 00000000 		.quad	_ZTIN5boost16exception_detail10clone_implINS0_14bad_exception_EEE
 17819      00000000 
 17820 0018 00000000 		.quad	_ZN5boost16exception_detail10clone_implINS0_14bad_exception_EED1Ev
 17820      00000000 
 17821 0020 00000000 		.quad	_ZN5boost16exception_detail10clone_implINS0_14bad_exception_EED0Ev
 17821      00000000 
 17822 0028 00000000 		.quad	_ZNK5boost16exception_detail10clone_implINS0_14bad_exception_EE5cloneEv
 17822      00000000 
 17823 0030 00000000 		.quad	_ZNK5boost16exception_detail10clone_implINS0_14bad_exception_EE7rethrowEv
 17823      00000000 
 17824 0038 D8FFFFFF 		.quad	-40
 17824      FFFFFFFF 
 17825 0040 00000000 		.quad	_ZTIN5boost16exception_detail10clone_implINS0_14bad_exception_EEE
 17825      00000000 
 17826 0048 00000000 		.quad	_ZThn40_N5boost16exception_detail10clone_implINS0_14bad_exception_EED1Ev
 17826      00000000 
 17827 0050 00000000 		.quad	_ZThn40_N5boost16exception_detail10clone_implINS0_14bad_exception_EED0Ev
 17827      00000000 
 17828 0058 00000000 		.quad	_ZNKSt13bad_exception4whatEv
 17828      00000000 
 17829 0060 D0FFFFFF 		.quad	-48
 17829      FFFFFFFF 
 17830 0068 D0FFFFFF 		.quad	-48
 17830      FFFFFFFF 
 17831 0070 D0FFFFFF 		.quad	-48
 17831      FFFFFFFF 
 17832 0078 D0FFFFFF 		.quad	-48
 17832      FFFFFFFF 
 17833 0080 00000000 		.quad	_ZTIN5boost16exception_detail10clone_implINS0_14bad_exception_EEE
 17833      00000000 
 17834 0088 00000000 		.quad	_ZTv0_n24_NK5boost16exception_detail10clone_implINS0_14bad_exception_EE5cloneEv
 17834      00000000 
 17835 0090 00000000 		.quad	_ZTv0_n32_NK5boost16exception_detail10clone_implINS0_14bad_exception_EE7rethrowEv
 17835      00000000 
 17836 0098 00000000 		.quad	_ZTv0_n40_N5boost16exception_detail10clone_implINS0_14bad_exception_EED1Ev
GAS LISTING /tmp/ccsIN87E.s 			page 700


 17836      00000000 
 17837 00a0 00000000 		.quad	_ZTv0_n40_N5boost16exception_detail10clone_implINS0_14bad_exception_EED0Ev
 17837      00000000 
 17838              		.weak	_ZTTN5boost16exception_detail10clone_implINS0_14bad_exception_EEE
 17839              		.section	.data.rel.ro.local._ZTTN5boost16exception_detail10clone_implINS0_14bad_exception_EEE,"awG
 17840              		.align 8
 17843              	_ZTTN5boost16exception_detail10clone_implINS0_14bad_exception_EEE:
 17844 0000 00000000 		.quad	_ZTVN5boost16exception_detail10clone_implINS0_14bad_exception_EEE+24
 17844      00000000 
 17845 0008 00000000 		.quad	_ZTVN5boost16exception_detail10clone_implINS0_14bad_exception_EEE+136
 17845      00000000 
 17846              		.weak	_ZTVN5boost16exception_detail10clone_implINS0_10bad_alloc_EEE
 17847              		.section	.data.rel.ro._ZTVN5boost16exception_detail10clone_implINS0_10bad_alloc_EEE,"awG",@progbit
 17848              		.align 8
 17851              	_ZTVN5boost16exception_detail10clone_implINS0_10bad_alloc_EEE:
 17852 0000 30000000 		.quad	48
 17852      00000000 
 17853 0008 00000000 		.quad	0
 17853      00000000 
 17854 0010 00000000 		.quad	_ZTIN5boost16exception_detail10clone_implINS0_10bad_alloc_EEE
 17854      00000000 
 17855 0018 00000000 		.quad	_ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EED1Ev
 17855      00000000 
 17856 0020 00000000 		.quad	_ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EED0Ev
 17856      00000000 
 17857 0028 00000000 		.quad	_ZNK5boost16exception_detail10clone_implINS0_10bad_alloc_EE5cloneEv
 17857      00000000 
 17858 0030 00000000 		.quad	_ZNK5boost16exception_detail10clone_implINS0_10bad_alloc_EE7rethrowEv
 17858      00000000 
 17859 0038 D8FFFFFF 		.quad	-40
 17859      FFFFFFFF 
 17860 0040 00000000 		.quad	_ZTIN5boost16exception_detail10clone_implINS0_10bad_alloc_EEE
 17860      00000000 
 17861 0048 00000000 		.quad	_ZThn40_N5boost16exception_detail10clone_implINS0_10bad_alloc_EED1Ev
 17861      00000000 
 17862 0050 00000000 		.quad	_ZThn40_N5boost16exception_detail10clone_implINS0_10bad_alloc_EED0Ev
 17862      00000000 
 17863 0058 00000000 		.quad	_ZNKSt9bad_alloc4whatEv
 17863      00000000 
 17864 0060 D0FFFFFF 		.quad	-48
 17864      FFFFFFFF 
 17865 0068 D0FFFFFF 		.quad	-48
 17865      FFFFFFFF 
 17866 0070 D0FFFFFF 		.quad	-48
 17866      FFFFFFFF 
 17867 0078 D0FFFFFF 		.quad	-48
 17867      FFFFFFFF 
 17868 0080 00000000 		.quad	_ZTIN5boost16exception_detail10clone_implINS0_10bad_alloc_EEE
 17868      00000000 
 17869 0088 00000000 		.quad	_ZTv0_n24_NK5boost16exception_detail10clone_implINS0_10bad_alloc_EE5cloneEv
 17869      00000000 
 17870 0090 00000000 		.quad	_ZTv0_n32_NK5boost16exception_detail10clone_implINS0_10bad_alloc_EE7rethrowEv
 17870      00000000 
 17871 0098 00000000 		.quad	_ZTv0_n40_N5boost16exception_detail10clone_implINS0_10bad_alloc_EED1Ev
 17871      00000000 
 17872 00a0 00000000 		.quad	_ZTv0_n40_N5boost16exception_detail10clone_implINS0_10bad_alloc_EED0Ev
 17872      00000000 
GAS LISTING /tmp/ccsIN87E.s 			page 701


 17873              		.weak	_ZTTN5boost16exception_detail10clone_implINS0_10bad_alloc_EEE
 17874              		.section	.data.rel.ro.local._ZTTN5boost16exception_detail10clone_implINS0_10bad_alloc_EEE,"awG",@p
 17875              		.align 8
 17878              	_ZTTN5boost16exception_detail10clone_implINS0_10bad_alloc_EEE:
 17879 0000 00000000 		.quad	_ZTVN5boost16exception_detail10clone_implINS0_10bad_alloc_EEE+24
 17879      00000000 
 17880 0008 00000000 		.quad	_ZTVN5boost16exception_detail10clone_implINS0_10bad_alloc_EEE+136
 17880      00000000 
 17881              		.weak	_ZTVN2gr5lfast12costas2_implE
 17882              		.section	.data.rel.ro._ZTVN2gr5lfast12costas2_implE,"awG",@progbits,_ZTVN2gr5lfast12costas2_implE,
 17883              		.align 8
 17886              	_ZTVN2gr5lfast12costas2_implE:
 17887 0000 78020000 		.quad	632
 17887      00000000 
 17888 0008 28000000 		.quad	40
 17888      00000000 
 17889 0010 00000000 		.quad	0
 17889      00000000 
 17890 0018 00000000 		.quad	_ZTIN2gr5lfast12costas2_implE
 17890      00000000 
 17891 0020 00000000 		.quad	_ZNK2gr5lfast12costas2_impl5errorEv
 17891      00000000 
 17892 0028 00000000 		.quad	_ZN2gr5lfast12costas2_implD1Ev
 17892      00000000 
 17893 0030 00000000 		.quad	_ZN2gr5lfast12costas2_implD0Ev
 17893      00000000 
 17894 0038 00000000 		.quad	_ZN2gr5lfast12costas2_impl9setup_rpcEv
 17894      00000000 
 17895 0040 00000000 		.quad	_ZN2gr5lfast12costas2_impl4workEiRSt6vectorIPKvSaIS4_EERS2_IPvSaIS8_EE
 17895      00000000 
 17896 0048 D8FFFFFF 		.quad	-40
 17896      FFFFFFFF 
 17897 0050 00000000 		.quad	0
 17897      00000000 
 17898 0058 00000000 		.quad	0
 17898      00000000 
 17899 0060 00000000 		.quad	0
 17899      00000000 
 17900 0068 00000000 		.quad	0
 17900      00000000 
 17901 0070 00000000 		.quad	0
 17901      00000000 
 17902 0078 00000000 		.quad	0
 17902      00000000 
 17903 0080 00000000 		.quad	0
 17903      00000000 
 17904 0088 00000000 		.quad	0
 17904      00000000 
 17905 0090 00000000 		.quad	0
 17905      00000000 
 17906 0098 00000000 		.quad	0
 17906      00000000 
 17907 00a0 D8FFFFFF 		.quad	-40
 17907      FFFFFFFF 
 17908 00a8 00000000 		.quad	0
 17908      00000000 
 17909 00b0 00000000 		.quad	0
GAS LISTING /tmp/ccsIN87E.s 			page 702


 17909      00000000 
 17910 00b8 00000000 		.quad	0
 17910      00000000 
 17911 00c0 00000000 		.quad	0
 17911      00000000 
 17912 00c8 00000000 		.quad	0
 17912      00000000 
 17913 00d0 00000000 		.quad	0
 17913      00000000 
 17914 00d8 00000000 		.quad	0
 17914      00000000 
 17915 00e0 D8FFFFFF 		.quad	-40
 17915      FFFFFFFF 
 17916 00e8 D8FFFFFF 		.quad	-40
 17916      FFFFFFFF 
 17917 00f0 00000000 		.quad	_ZTIN2gr5lfast12costas2_implE
 17917      00000000 
 17918 00f8 00000000 		.quad	_ZTv0_n24_N2gr5lfast12costas2_implD1Ev
 17918      00000000 
 17919 0100 00000000 		.quad	_ZTv0_n24_N2gr5lfast12costas2_implD0Ev
 17919      00000000 
 17920 0108 00000000 		.quad	_ZN2gr12msg_accepter4postEN5boost13intrusive_ptrIN3pmt8pmt_baseEEES5_
 17920      00000000 
 17921 0110 00000000 		.quad	_ZN2gr11basic_block15has_msg_handlerEN5boost13intrusive_ptrIN3pmt8pmt_baseEEE
 17921      00000000 
 17922 0118 00000000 		.quad	_ZN2gr11basic_block12dispatch_msgEN5boost13intrusive_ptrIN3pmt8pmt_baseEEES5_
 17922      00000000 
 17923 0120 00000000 		.quad	_ZN2gr11basic_block20message_port_is_hierEN5boost13intrusive_ptrIN3pmt8pmt_baseEEE
 17923      00000000 
 17924 0128 00000000 		.quad	_ZN2gr11basic_block23message_port_is_hier_inEN5boost13intrusive_ptrIN3pmt8pmt_baseEEE
 17924      00000000 
 17925 0130 00000000 		.quad	_ZN2gr11basic_block24message_port_is_hier_outEN5boost13intrusive_ptrIN3pmt8pmt_baseEEE
 17925      00000000 
 17926 0138 00000000 		.quad	_ZN2gr11basic_block12has_msg_portEN5boost13intrusive_ptrIN3pmt8pmt_baseEEE
 17926      00000000 
 17927 0140 00000000 		.quad	_ZTv0_n88_N2gr5lfast12costas2_impl9setup_rpcEv
 17927      00000000 
 17928 0148 00000000 		.quad	_ZN2gr11basic_block14check_topologyEii
 17928      00000000 
 17929 0150 00000000 		.quad	_ZN2gr5block22set_processor_affinityERKSt6vectorIiSaIiEE
 17929      00000000 
 17930 0158 00000000 		.quad	_ZN2gr5block24unset_processor_affinityEv
 17930      00000000 
 17931 0160 00000000 		.quad	_ZN2gr5block18processor_affinityEv
 17931      00000000 
 17932 0168 00000000 		.quad	_ZN2gr10sync_block8forecastEiRSt6vectorIiSaIiEE
 17932      00000000 
 17933 0170 00000000 		.quad	_ZN2gr10sync_block12general_workEiRSt6vectorIiSaIiEERS1_IPKvSaIS6_EERS1_IPvSaISA_EE
 17933      00000000 
 17934 0178 00000000 		.quad	_ZN2gr5block5startEv
 17934      00000000 
 17935 0180 00000000 		.quad	_ZN2gr5block4stopEv
 17935      00000000 
 17936 0188 00000000 		.quad	_ZN2gr10sync_block28fixed_rate_ninput_to_noutputEi
 17936      00000000 
 17937 0190 00000000 		.quad	_ZN2gr10sync_block28fixed_rate_noutput_to_ninputEi
 17937      00000000 
GAS LISTING /tmp/ccsIN87E.s 			page 703


 17938 0198 00000000 		.quad	_ZTv0_n176_N2gr5lfast12costas2_impl4workEiRSt6vectorIPKvSaIS4_EERS2_IPvSaIS8_EE
 17938      00000000 
 17939 01a0 00000000 		.quad	0
 17939      00000000 
 17940 01a8 88FDFFFF 		.quad	-632
 17940      FFFFFFFF 
 17941 01b0 88FDFFFF 		.quad	-632
 17941      FFFFFFFF 
 17942 01b8 00000000 		.quad	_ZTIN2gr5lfast12costas2_implE
 17942      00000000 
 17943 01c0 00000000 		.quad	_ZTv0_n24_N2gr5lfast12costas2_implD1Ev
 17943      00000000 
 17944 01c8 00000000 		.quad	_ZTv0_n24_N2gr5lfast12costas2_implD0Ev
 17944      00000000 
 17945 01d0 00000000 		.quad	_ZN2gr6blocks12control_loop18set_loop_bandwidthEf
 17945      00000000 
 17946              		.weak	_ZTTN2gr5lfast12costas2_implE
 17947              		.section	.data.rel.ro.local._ZTTN2gr5lfast12costas2_implE,"awG",@progbits,_ZTVN2gr5lfast12costas2_
 17948              		.align 8
 17951              	_ZTTN2gr5lfast12costas2_implE:
 17952 0000 00000000 		.quad	_ZTVN2gr5lfast12costas2_implE+32
 17952      00000000 
 17953 0008 00000000 		.quad	_ZTCN2gr5lfast12costas2_implE0_NS0_7costas2E+32
 17953      00000000 
 17954 0010 00000000 		.quad	_ZTCN2gr5lfast12costas2_implE0_NS0_7costas2E+232
 17954      00000000 
 17955 0018 00000000 		.quad	_ZTCN2gr5lfast12costas2_implE0_NS0_7costas2E+432
 17955      00000000 
 17956 0020 00000000 		.quad	_ZTVN2gr5lfast12costas2_implE+248
 17956      00000000 
 17957 0028 00000000 		.quad	_ZTVN2gr5lfast12costas2_implE+448
 17957      00000000 
 17958              		.hidden	_ZTCN2gr5lfast12costas2_implE0_NS0_7costas2E
 17959              		.weak	_ZTCN2gr5lfast12costas2_implE0_NS0_7costas2E
 17960              		.section	.data.rel.ro._ZTCN2gr5lfast12costas2_implE0_NS0_7costas2E,"awG",@progbits,_ZTVN2gr5lfast1
 17961              		.align 8
 17964              	_ZTCN2gr5lfast12costas2_implE0_NS0_7costas2E:
 17965 0000 78020000 		.quad	632
 17965      00000000 
 17966 0008 28000000 		.quad	40
 17966      00000000 
 17967 0010 00000000 		.quad	0
 17967      00000000 
 17968 0018 00000000 		.quad	_ZTIN2gr5lfast7costas2E
 17968      00000000 
 17969 0020 00000000 		.quad	__cxa_pure_virtual
 17969      00000000 
 17970 0028 00000000 		.quad	0
 17970      00000000 
 17971 0030 00000000 		.quad	0
 17971      00000000 
 17972 0038 00000000 		.quad	0
 17972      00000000 
 17973 0040 00000000 		.quad	0
 17973      00000000 
 17974 0048 00000000 		.quad	0
 17974      00000000 
GAS LISTING /tmp/ccsIN87E.s 			page 704


 17975 0050 00000000 		.quad	0
 17975      00000000 
 17976 0058 00000000 		.quad	0
 17976      00000000 
 17977 0060 00000000 		.quad	0
 17977      00000000 
 17978 0068 00000000 		.quad	0
 17978      00000000 
 17979 0070 00000000 		.quad	0
 17979      00000000 
 17980 0078 00000000 		.quad	0
 17980      00000000 
 17981 0080 00000000 		.quad	0
 17981      00000000 
 17982 0088 00000000 		.quad	0
 17982      00000000 
 17983 0090 00000000 		.quad	0
 17983      00000000 
 17984 0098 00000000 		.quad	0
 17984      00000000 
 17985 00a0 00000000 		.quad	0
 17985      00000000 
 17986 00a8 00000000 		.quad	0
 17986      00000000 
 17987 00b0 00000000 		.quad	0
 17987      00000000 
 17988 00b8 00000000 		.quad	0
 17988      00000000 
 17989 00c0 00000000 		.quad	0
 17989      00000000 
 17990 00c8 00000000 		.quad	0
 17990      00000000 
 17991 00d0 D8FFFFFF 		.quad	-40
 17991      FFFFFFFF 
 17992 00d8 D8FFFFFF 		.quad	-40
 17992      FFFFFFFF 
 17993 00e0 00000000 		.quad	_ZTIN2gr5lfast7costas2E
 17993      00000000 
 17994 00e8 00000000 		.quad	0
 17994      00000000 
 17995 00f0 00000000 		.quad	0
 17995      00000000 
 17996 00f8 00000000 		.quad	_ZN2gr12msg_accepter4postEN5boost13intrusive_ptrIN3pmt8pmt_baseEEES5_
 17996      00000000 
 17997 0100 00000000 		.quad	_ZN2gr11basic_block15has_msg_handlerEN5boost13intrusive_ptrIN3pmt8pmt_baseEEE
 17997      00000000 
 17998 0108 00000000 		.quad	_ZN2gr11basic_block12dispatch_msgEN5boost13intrusive_ptrIN3pmt8pmt_baseEEES5_
 17998      00000000 
 17999 0110 00000000 		.quad	_ZN2gr11basic_block20message_port_is_hierEN5boost13intrusive_ptrIN3pmt8pmt_baseEEE
 17999      00000000 
 18000 0118 00000000 		.quad	_ZN2gr11basic_block23message_port_is_hier_inEN5boost13intrusive_ptrIN3pmt8pmt_baseEEE
 18000      00000000 
 18001 0120 00000000 		.quad	_ZN2gr11basic_block24message_port_is_hier_outEN5boost13intrusive_ptrIN3pmt8pmt_baseEEE
 18001      00000000 
 18002 0128 00000000 		.quad	_ZN2gr11basic_block12has_msg_portEN5boost13intrusive_ptrIN3pmt8pmt_baseEEE
 18002      00000000 
 18003 0130 00000000 		.quad	_ZN2gr11basic_block9setup_rpcEv
GAS LISTING /tmp/ccsIN87E.s 			page 705


 18003      00000000 
 18004 0138 00000000 		.quad	_ZN2gr11basic_block14check_topologyEii
 18004      00000000 
 18005 0140 00000000 		.quad	_ZN2gr5block22set_processor_affinityERKSt6vectorIiSaIiEE
 18005      00000000 
 18006 0148 00000000 		.quad	_ZN2gr5block24unset_processor_affinityEv
 18006      00000000 
 18007 0150 00000000 		.quad	_ZN2gr5block18processor_affinityEv
 18007      00000000 
 18008 0158 00000000 		.quad	_ZN2gr10sync_block8forecastEiRSt6vectorIiSaIiEE
 18008      00000000 
 18009 0160 00000000 		.quad	_ZN2gr10sync_block12general_workEiRSt6vectorIiSaIiEERS1_IPKvSaIS6_EERS1_IPvSaISA_EE
 18009      00000000 
 18010 0168 00000000 		.quad	_ZN2gr5block5startEv
 18010      00000000 
 18011 0170 00000000 		.quad	_ZN2gr5block4stopEv
 18011      00000000 
 18012 0178 00000000 		.quad	_ZN2gr10sync_block28fixed_rate_ninput_to_noutputEi
 18012      00000000 
 18013 0180 00000000 		.quad	_ZN2gr10sync_block28fixed_rate_noutput_to_ninputEi
 18013      00000000 
 18014 0188 00000000 		.quad	__cxa_pure_virtual
 18014      00000000 
 18015 0190 00000000 		.quad	0
 18015      00000000 
 18016 0198 88FDFFFF 		.quad	-632
 18016      FFFFFFFF 
 18017 01a0 88FDFFFF 		.quad	-632
 18017      FFFFFFFF 
 18018 01a8 00000000 		.quad	_ZTIN2gr5lfast7costas2E
 18018      00000000 
 18019 01b0 00000000 		.quad	0
 18019      00000000 
 18020 01b8 00000000 		.quad	0
 18020      00000000 
 18021 01c0 00000000 		.quad	_ZN2gr6blocks12control_loop18set_loop_bandwidthEf
 18021      00000000 
 18022              		.weak	_ZTVN5boost16exception_detail14bad_exception_E
 18023              		.section	.data.rel.ro._ZTVN5boost16exception_detail14bad_exception_E,"awG",@progbits,_ZTVN5boost16
 18024              		.align 8
 18027              	_ZTVN5boost16exception_detail14bad_exception_E:
 18028 0000 00000000 		.quad	0
 18028      00000000 
 18029 0008 00000000 		.quad	_ZTIN5boost16exception_detail14bad_exception_E
 18029      00000000 
 18030 0010 00000000 		.quad	_ZN5boost16exception_detail14bad_exception_D1Ev
 18030      00000000 
 18031 0018 00000000 		.quad	_ZN5boost16exception_detail14bad_exception_D0Ev
 18031      00000000 
 18032 0020 D8FFFFFF 		.quad	-40
 18032      FFFFFFFF 
 18033 0028 00000000 		.quad	_ZTIN5boost16exception_detail14bad_exception_E
 18033      00000000 
 18034 0030 00000000 		.quad	_ZThn40_N5boost16exception_detail14bad_exception_D1Ev
 18034      00000000 
 18035 0038 00000000 		.quad	_ZThn40_N5boost16exception_detail14bad_exception_D0Ev
 18035      00000000 
GAS LISTING /tmp/ccsIN87E.s 			page 706


 18036 0040 00000000 		.quad	_ZNKSt13bad_exception4whatEv
 18036      00000000 
 18037              		.weak	_ZTVN5boost16exception_detail10bad_alloc_E
 18038              		.section	.data.rel.ro._ZTVN5boost16exception_detail10bad_alloc_E,"awG",@progbits,_ZTVN5boost16exce
 18039              		.align 8
 18042              	_ZTVN5boost16exception_detail10bad_alloc_E:
 18043 0000 00000000 		.quad	0
 18043      00000000 
 18044 0008 00000000 		.quad	_ZTIN5boost16exception_detail10bad_alloc_E
 18044      00000000 
 18045 0010 00000000 		.quad	_ZN5boost16exception_detail10bad_alloc_D1Ev
 18045      00000000 
 18046 0018 00000000 		.quad	_ZN5boost16exception_detail10bad_alloc_D0Ev
 18046      00000000 
 18047 0020 D8FFFFFF 		.quad	-40
 18047      FFFFFFFF 
 18048 0028 00000000 		.quad	_ZTIN5boost16exception_detail10bad_alloc_E
 18048      00000000 
 18049 0030 00000000 		.quad	_ZThn40_N5boost16exception_detail10bad_alloc_D1Ev
 18049      00000000 
 18050 0038 00000000 		.quad	_ZThn40_N5boost16exception_detail10bad_alloc_D0Ev
 18050      00000000 
 18051 0040 00000000 		.quad	_ZNKSt9bad_alloc4whatEv
 18051      00000000 
 18052              		.weak	_ZTVN5boost17bad_function_callE
 18053              		.section	.data.rel.ro._ZTVN5boost17bad_function_callE,"awG",@progbits,_ZTVN5boost17bad_function_ca
 18054              		.align 8
 18057              	_ZTVN5boost17bad_function_callE:
 18058 0000 00000000 		.quad	0
 18058      00000000 
 18059 0008 00000000 		.quad	_ZTIN5boost17bad_function_callE
 18059      00000000 
 18060 0010 00000000 		.quad	_ZN5boost17bad_function_callD1Ev
 18060      00000000 
 18061 0018 00000000 		.quad	_ZN5boost17bad_function_callD0Ev
 18061      00000000 
 18062 0020 00000000 		.quad	_ZNKSt13runtime_error4whatEv
 18062      00000000 
 18063              		.weak	_ZTVN5boost6system12system_errorE
 18064              		.section	.data.rel.ro.local._ZTVN5boost6system12system_errorE,"awG",@progbits,_ZTVN5boost6system12
 18065              		.align 8
 18068              	_ZTVN5boost6system12system_errorE:
 18069 0000 00000000 		.quad	0
 18069      00000000 
 18070 0008 00000000 		.quad	_ZTIN5boost6system12system_errorE
 18070      00000000 
 18071 0010 00000000 		.quad	_ZN5boost6system12system_errorD1Ev
 18071      00000000 
 18072 0018 00000000 		.quad	_ZN5boost6system12system_errorD0Ev
 18072      00000000 
 18073 0020 00000000 		.quad	_ZNK5boost6system12system_error4whatEv
 18073      00000000 
 18074              		.weak	_ZTVN5boost6detail15sp_counted_baseE
 18075              		.section	.data.rel.ro._ZTVN5boost6detail15sp_counted_baseE,"awG",@progbits,_ZTVN5boost6detail15sp_
 18076              		.align 8
 18079              	_ZTVN5boost6detail15sp_counted_baseE:
 18080 0000 00000000 		.quad	0
GAS LISTING /tmp/ccsIN87E.s 			page 707


 18080      00000000 
 18081 0008 00000000 		.quad	_ZTIN5boost6detail15sp_counted_baseE
 18081      00000000 
 18082 0010 00000000 		.quad	0
 18082      00000000 
 18083 0018 00000000 		.quad	0
 18083      00000000 
 18084 0020 00000000 		.quad	__cxa_pure_virtual
 18084      00000000 
 18085 0028 00000000 		.quad	_ZN5boost6detail15sp_counted_base7destroyEv
 18085      00000000 
 18086 0030 00000000 		.quad	__cxa_pure_virtual
 18086      00000000 
 18087 0038 00000000 		.quad	__cxa_pure_virtual
 18087      00000000 
 18088              		.weak	_ZTVN5boost16exception_detail10clone_baseE
 18089              		.section	.data.rel.ro._ZTVN5boost16exception_detail10clone_baseE,"awG",@progbits,_ZTVN5boost16exce
 18090              		.align 8
 18093              	_ZTVN5boost16exception_detail10clone_baseE:
 18094 0000 00000000 		.quad	0
 18094      00000000 
 18095 0008 00000000 		.quad	_ZTIN5boost16exception_detail10clone_baseE
 18095      00000000 
 18096 0010 00000000 		.quad	__cxa_pure_virtual
 18096      00000000 
 18097 0018 00000000 		.quad	__cxa_pure_virtual
 18097      00000000 
 18098 0020 00000000 		.quad	0
 18098      00000000 
 18099 0028 00000000 		.quad	0
 18099      00000000 
 18100              		.weak	_ZTVN5boost9exceptionE
 18101              		.section	.data.rel.ro._ZTVN5boost9exceptionE,"awG",@progbits,_ZTVN5boost9exceptionE,comdat
 18102              		.align 8
 18105              	_ZTVN5boost9exceptionE:
 18106 0000 00000000 		.quad	0
 18106      00000000 
 18107 0008 00000000 		.quad	_ZTIN5boost9exceptionE
 18107      00000000 
 18108 0010 00000000 		.quad	__cxa_pure_virtual
 18108      00000000 
 18109 0018 00000000 		.quad	__cxa_pure_virtual
 18109      00000000 
 18110              		.weak	_ZTIN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_14bad_exception_
 18111              		.section	.data.rel.ro._ZTIN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_
 18112              		.align 8
 18115              	_ZTIN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_14bad_exception_EEEEE:
 18116 0000 00000000 		.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
 18116      00000000 
 18117 0008 00000000 		.quad	_ZTSN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_14bad_exception_
 18117      00000000 
 18118 0010 00000000 		.quad	_ZTIN5boost6detail15sp_counted_baseE
 18118      00000000 
 18119              		.weak	_ZTSN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_14bad_exception_
 18120              		.section	.rodata._ZTSN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_14bad
 18121              		.align 32
 18124              	_ZTSN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_14bad_exception_EEEEE:
GAS LISTING /tmp/ccsIN87E.s 			page 708


 18125 0000 4E35626F 		.string	"N5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_14bad_exception_E
 18125      6F737436 
 18125      64657461 
 18125      696C3137 
 18125      73705F63 
 18126              		.weak	_ZTIN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEE
 18127              		.section	.data.rel.ro._ZTIN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_
 18128              		.align 8
 18131              	_ZTIN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEEE:
 18132 0000 00000000 		.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
 18132      00000000 
 18133 0008 00000000 		.quad	_ZTSN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEE
 18133      00000000 
 18134 0010 00000000 		.quad	_ZTIN5boost6detail15sp_counted_baseE
 18134      00000000 
 18135              		.weak	_ZTSN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEE
 18136              		.section	.rodata._ZTSN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad
 18137              		.align 32
 18140              	_ZTSN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEEE:
 18141 0000 4E35626F 		.string	"N5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEEE
 18141      6F737436 
 18141      64657461 
 18141      696C3137 
 18141      73705F63 
 18142              		.weak	_ZTIN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEE
 18143              		.section	.data.rel.ro._ZTIN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad
 18144              		.align 8
 18147              	_ZTIN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEEE:
 18148 0000 00000000 		.quad	_ZTVN10__cxxabiv121__vmi_class_type_infoE+16
 18148      00000000 
 18149 0008 00000000 		.quad	_ZTSN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEE
 18149      00000000 
 18150 0010 00000000 		.long	0
 18151 0014 02000000 		.long	2
 18152 0018 00000000 		.quad	_ZTIN5boost16exception_detail19error_info_injectorINS_17bad_function_callEEE
 18152      00000000 
 18153 0020 02000000 		.quad	2
 18153      00000000 
 18154 0028 00000000 		.quad	_ZTIN5boost16exception_detail10clone_baseE
 18154      00000000 
 18155 0030 03E8FFFF 		.quad	-6141
 18155      FFFFFFFF 
 18156              		.weak	_ZTSN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEE
 18157              		.section	.rodata._ZTSN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_func
 18158              		.align 32
 18161              	_ZTSN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEEE:
 18162 0000 4E35626F 		.string	"N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEE
 18162      6F737431 
 18162      36657863 
 18162      65707469 
 18162      6F6E5F64 
 18163              		.weak	_ZTIN5boost16exception_detail19error_info_injectorINS_17bad_function_callEEE
 18164              		.section	.data.rel.ro._ZTIN5boost16exception_detail19error_info_injectorINS_17bad_function_callEEE
 18165              		.align 8
 18168              	_ZTIN5boost16exception_detail19error_info_injectorINS_17bad_function_callEEE:
 18169 0000 00000000 		.quad	_ZTVN10__cxxabiv121__vmi_class_type_infoE+16
 18169      00000000 
GAS LISTING /tmp/ccsIN87E.s 			page 709


 18170 0008 00000000 		.quad	_ZTSN5boost16exception_detail19error_info_injectorINS_17bad_function_callEEE
 18170      00000000 
 18171 0010 00000000 		.long	0
 18172 0014 02000000 		.long	2
 18173 0018 00000000 		.quad	_ZTIN5boost17bad_function_callE
 18173      00000000 
 18174 0020 02000000 		.quad	2
 18174      00000000 
 18175 0028 00000000 		.quad	_ZTIN5boost9exceptionE
 18175      00000000 
 18176 0030 02100000 		.quad	4098
 18176      00000000 
 18177              		.weak	_ZTSN5boost16exception_detail19error_info_injectorINS_17bad_function_callEEE
 18178              		.section	.rodata._ZTSN5boost16exception_detail19error_info_injectorINS_17bad_function_callEEE,"aG"
 18179              		.align 32
 18182              	_ZTSN5boost16exception_detail19error_info_injectorINS_17bad_function_callEEE:
 18183 0000 4E35626F 		.string	"N5boost16exception_detail19error_info_injectorINS_17bad_function_callEEE"
 18183      6F737431 
 18183      36657863 
 18183      65707469 
 18183      6F6E5F64 
 18184              		.weak	_ZTIN5boost16exception_detail10clone_implINS0_14bad_exception_EEE
 18185              		.section	.data.rel.ro._ZTIN5boost16exception_detail10clone_implINS0_14bad_exception_EEE,"awG",@pro
 18186              		.align 8
 18189              	_ZTIN5boost16exception_detail10clone_implINS0_14bad_exception_EEE:
 18190 0000 00000000 		.quad	_ZTVN10__cxxabiv121__vmi_class_type_infoE+16
 18190      00000000 
 18191 0008 00000000 		.quad	_ZTSN5boost16exception_detail10clone_implINS0_14bad_exception_EEE
 18191      00000000 
 18192 0010 00000000 		.long	0
 18193 0014 02000000 		.long	2
 18194 0018 00000000 		.quad	_ZTIN5boost16exception_detail14bad_exception_E
 18194      00000000 
 18195 0020 02000000 		.quad	2
 18195      00000000 
 18196 0028 00000000 		.quad	_ZTIN5boost16exception_detail10clone_baseE
 18196      00000000 
 18197 0030 03E8FFFF 		.quad	-6141
 18197      FFFFFFFF 
 18198              		.weak	_ZTSN5boost16exception_detail10clone_implINS0_14bad_exception_EEE
 18199              		.section	.rodata._ZTSN5boost16exception_detail10clone_implINS0_14bad_exception_EEE,"aG",@progbits,
 18200              		.align 32
 18203              	_ZTSN5boost16exception_detail10clone_implINS0_14bad_exception_EEE:
 18204 0000 4E35626F 		.string	"N5boost16exception_detail10clone_implINS0_14bad_exception_EEE"
 18204      6F737431 
 18204      36657863 
 18204      65707469 
 18204      6F6E5F64 
 18205              		.weak	_ZTIN5boost16exception_detail10clone_implINS0_10bad_alloc_EEE
 18206              		.section	.data.rel.ro._ZTIN5boost16exception_detail10clone_implINS0_10bad_alloc_EEE,"awG",@progbit
 18207              		.align 8
 18210              	_ZTIN5boost16exception_detail10clone_implINS0_10bad_alloc_EEE:
 18211 0000 00000000 		.quad	_ZTVN10__cxxabiv121__vmi_class_type_infoE+16
 18211      00000000 
 18212 0008 00000000 		.quad	_ZTSN5boost16exception_detail10clone_implINS0_10bad_alloc_EEE
 18212      00000000 
 18213 0010 00000000 		.long	0
GAS LISTING /tmp/ccsIN87E.s 			page 710


 18214 0014 02000000 		.long	2
 18215 0018 00000000 		.quad	_ZTIN5boost16exception_detail10bad_alloc_E
 18215      00000000 
 18216 0020 02000000 		.quad	2
 18216      00000000 
 18217 0028 00000000 		.quad	_ZTIN5boost16exception_detail10clone_baseE
 18217      00000000 
 18218 0030 03E8FFFF 		.quad	-6141
 18218      FFFFFFFF 
 18219              		.weak	_ZTSN5boost16exception_detail10clone_implINS0_10bad_alloc_EEE
 18220              		.section	.rodata._ZTSN5boost16exception_detail10clone_implINS0_10bad_alloc_EEE,"aG",@progbits,_ZTS
 18221              		.align 32
 18224              	_ZTSN5boost16exception_detail10clone_implINS0_10bad_alloc_EEE:
 18225 0000 4E35626F 		.string	"N5boost16exception_detail10clone_implINS0_10bad_alloc_EEE"
 18225      6F737431 
 18225      36657863 
 18225      65707469 
 18225      6F6E5F64 
 18226              		.weak	_ZTIN2gr5lfast12costas2_implE
 18227              		.section	.data.rel.ro._ZTIN2gr5lfast12costas2_implE,"awG",@progbits,_ZTIN2gr5lfast12costas2_implE,
 18228              		.align 8
 18231              	_ZTIN2gr5lfast12costas2_implE:
 18232 0000 00000000 		.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
 18232      00000000 
 18233 0008 00000000 		.quad	_ZTSN2gr5lfast12costas2_implE
 18233      00000000 
 18234 0010 00000000 		.quad	_ZTIN2gr5lfast7costas2E
 18234      00000000 
 18235              		.weak	_ZTSN2gr5lfast12costas2_implE
 18236              		.section	.rodata._ZTSN2gr5lfast12costas2_implE,"aG",@progbits,_ZTSN2gr5lfast12costas2_implE,comdat
 18237              		.align 16
 18240              	_ZTSN2gr5lfast12costas2_implE:
 18241 0000 4E326772 		.string	"N2gr5lfast12costas2_implE"
 18241      356C6661 
 18241      73743132 
 18241      636F7374 
 18241      6173325F 
 18242              		.weak	_ZTIN2gr5lfast7costas2E
 18243              		.section	.data.rel.ro._ZTIN2gr5lfast7costas2E,"awG",@progbits,_ZTIN2gr5lfast7costas2E,comdat
 18244              		.align 8
 18247              	_ZTIN2gr5lfast7costas2E:
 18248 0000 00000000 		.quad	_ZTVN10__cxxabiv121__vmi_class_type_infoE+16
 18248      00000000 
 18249 0008 00000000 		.quad	_ZTSN2gr5lfast7costas2E
 18249      00000000 
 18250 0010 00000000 		.long	0
 18251 0014 02000000 		.long	2
 18252 0018 00000000 		.quad	_ZTIN2gr10sync_blockE
 18252      00000000 
 18253 0020 03E8FFFF 		.quad	-6141
 18253      FFFFFFFF 
 18254 0028 00000000 		.quad	_ZTIN2gr6blocks12control_loopE
 18254      00000000 
 18255 0030 03E0FFFF 		.quad	-8189
 18255      FFFFFFFF 
 18256              		.weak	_ZTSN2gr5lfast7costas2E
 18257              		.section	.rodata._ZTSN2gr5lfast7costas2E,"aG",@progbits,_ZTSN2gr5lfast7costas2E,comdat
GAS LISTING /tmp/ccsIN87E.s 			page 711


 18258              		.align 16
 18261              	_ZTSN2gr5lfast7costas2E:
 18262 0000 4E326772 		.string	"N2gr5lfast7costas2E"
 18262      356C6661 
 18262      73743763 
 18262      6F737461 
 18262      73324500 
 18263              		.weak	_ZTIN5boost16exception_detail14bad_exception_E
 18264              		.section	.data.rel.ro._ZTIN5boost16exception_detail14bad_exception_E,"awG",@progbits,_ZTIN5boost16
 18265              		.align 8
 18268              	_ZTIN5boost16exception_detail14bad_exception_E:
 18269 0000 00000000 		.quad	_ZTVN10__cxxabiv121__vmi_class_type_infoE+16
 18269      00000000 
 18270 0008 00000000 		.quad	_ZTSN5boost16exception_detail14bad_exception_E
 18270      00000000 
 18271 0010 00000000 		.long	0
 18272 0014 02000000 		.long	2
 18273 0018 00000000 		.quad	_ZTIN5boost9exceptionE
 18273      00000000 
 18274 0020 02000000 		.quad	2
 18274      00000000 
 18275 0028 00000000 		.quad	_ZTISt13bad_exception
 18275      00000000 
 18276 0030 02280000 		.quad	10242
 18276      00000000 
 18277              		.weak	_ZTSN5boost16exception_detail14bad_exception_E
 18278              		.section	.rodata._ZTSN5boost16exception_detail14bad_exception_E,"aG",@progbits,_ZTSN5boost16except
 18279              		.align 32
 18282              	_ZTSN5boost16exception_detail14bad_exception_E:
 18283 0000 4E35626F 		.string	"N5boost16exception_detail14bad_exception_E"
 18283      6F737431 
 18283      36657863 
 18283      65707469 
 18283      6F6E5F64 
 18284              		.weak	_ZTIN5boost16exception_detail10bad_alloc_E
 18285              		.section	.data.rel.ro._ZTIN5boost16exception_detail10bad_alloc_E,"awG",@progbits,_ZTIN5boost16exce
 18286              		.align 8
 18289              	_ZTIN5boost16exception_detail10bad_alloc_E:
 18290 0000 00000000 		.quad	_ZTVN10__cxxabiv121__vmi_class_type_infoE+16
 18290      00000000 
 18291 0008 00000000 		.quad	_ZTSN5boost16exception_detail10bad_alloc_E
 18291      00000000 
 18292 0010 00000000 		.long	0
 18293 0014 02000000 		.long	2
 18294 0018 00000000 		.quad	_ZTIN5boost9exceptionE
 18294      00000000 
 18295 0020 02000000 		.quad	2
 18295      00000000 
 18296 0028 00000000 		.quad	_ZTISt9bad_alloc
 18296      00000000 
 18297 0030 02280000 		.quad	10242
 18297      00000000 
 18298              		.weak	_ZTSN5boost16exception_detail10bad_alloc_E
 18299              		.section	.rodata._ZTSN5boost16exception_detail10bad_alloc_E,"aG",@progbits,_ZTSN5boost16exception_
 18300              		.align 32
 18303              	_ZTSN5boost16exception_detail10bad_alloc_E:
 18304 0000 4E35626F 		.string	"N5boost16exception_detail10bad_alloc_E"
GAS LISTING /tmp/ccsIN87E.s 			page 712


 18304      6F737431 
 18304      36657863 
 18304      65707469 
 18304      6F6E5F64 
 18305              		.weak	_ZTIN5boost17bad_function_callE
 18306              		.section	.data.rel.ro._ZTIN5boost17bad_function_callE,"awG",@progbits,_ZTIN5boost17bad_function_ca
 18307              		.align 8
 18310              	_ZTIN5boost17bad_function_callE:
 18311 0000 00000000 		.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
 18311      00000000 
 18312 0008 00000000 		.quad	_ZTSN5boost17bad_function_callE
 18312      00000000 
 18313 0010 00000000 		.quad	_ZTISt13runtime_error
 18313      00000000 
 18314              		.weak	_ZTSN5boost17bad_function_callE
 18315              		.section	.rodata._ZTSN5boost17bad_function_callE,"aG",@progbits,_ZTSN5boost17bad_function_callE,co
 18316              		.align 16
 18319              	_ZTSN5boost17bad_function_callE:
 18320 0000 4E35626F 		.string	"N5boost17bad_function_callE"
 18320      6F737431 
 18320      37626164 
 18320      5F66756E 
 18320      6374696F 
 18321              		.weak	_ZTIN5boost6system12system_errorE
 18322              		.section	.data.rel.ro._ZTIN5boost6system12system_errorE,"awG",@progbits,_ZTIN5boost6system12system
 18323              		.align 8
 18326              	_ZTIN5boost6system12system_errorE:
 18327 0000 00000000 		.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
 18327      00000000 
 18328 0008 00000000 		.quad	_ZTSN5boost6system12system_errorE
 18328      00000000 
 18329 0010 00000000 		.quad	_ZTISt13runtime_error
 18329      00000000 
 18330              		.weak	_ZTSN5boost6system12system_errorE
 18331              		.section	.rodata._ZTSN5boost6system12system_errorE,"aG",@progbits,_ZTSN5boost6system12system_error
 18332              		.align 16
 18335              	_ZTSN5boost6system12system_errorE:
 18336 0000 4E35626F 		.string	"N5boost6system12system_errorE"
 18336      6F737436 
 18336      73797374 
 18336      656D3132 
 18336      73797374 
 18337              		.weak	_ZTIN5boost6detail15sp_counted_baseE
 18338              		.section	.data.rel.ro._ZTIN5boost6detail15sp_counted_baseE,"awG",@progbits,_ZTIN5boost6detail15sp_
 18339              		.align 8
 18342              	_ZTIN5boost6detail15sp_counted_baseE:
 18343 0000 00000000 		.quad	_ZTVN10__cxxabiv117__class_type_infoE+16
 18343      00000000 
 18344 0008 00000000 		.quad	_ZTSN5boost6detail15sp_counted_baseE
 18344      00000000 
 18345              		.weak	_ZTSN5boost6detail15sp_counted_baseE
 18346              		.section	.rodata._ZTSN5boost6detail15sp_counted_baseE,"aG",@progbits,_ZTSN5boost6detail15sp_counte
 18347              		.align 32
 18350              	_ZTSN5boost6detail15sp_counted_baseE:
 18351 0000 4E35626F 		.string	"N5boost6detail15sp_counted_baseE"
 18351      6F737436 
 18351      64657461 
GAS LISTING /tmp/ccsIN87E.s 			page 713


 18351      696C3135 
 18351      73705F63 
 18352              		.weak	_ZTIN5boost16exception_detail10clone_baseE
 18353              		.section	.data.rel.ro._ZTIN5boost16exception_detail10clone_baseE,"awG",@progbits,_ZTIN5boost16exce
 18354              		.align 8
 18357              	_ZTIN5boost16exception_detail10clone_baseE:
 18358 0000 00000000 		.quad	_ZTVN10__cxxabiv117__class_type_infoE+16
 18358      00000000 
 18359 0008 00000000 		.quad	_ZTSN5boost16exception_detail10clone_baseE
 18359      00000000 
 18360              		.weak	_ZTSN5boost16exception_detail10clone_baseE
 18361              		.section	.rodata._ZTSN5boost16exception_detail10clone_baseE,"aG",@progbits,_ZTSN5boost16exception_
 18362              		.align 32
 18365              	_ZTSN5boost16exception_detail10clone_baseE:
 18366 0000 4E35626F 		.string	"N5boost16exception_detail10clone_baseE"
 18366      6F737431 
 18366      36657863 
 18366      65707469 
 18366      6F6E5F64 
 18367              		.weak	_ZTIN5boost9exceptionE
 18368              		.section	.data.rel.ro._ZTIN5boost9exceptionE,"awG",@progbits,_ZTIN5boost9exceptionE,comdat
 18369              		.align 8
 18372              	_ZTIN5boost9exceptionE:
 18373 0000 00000000 		.quad	_ZTVN10__cxxabiv117__class_type_infoE+16
 18373      00000000 
 18374 0008 00000000 		.quad	_ZTSN5boost9exceptionE
 18374      00000000 
 18375              		.weak	_ZTSN5boost9exceptionE
 18376              		.section	.rodata._ZTSN5boost9exceptionE,"aG",@progbits,_ZTSN5boost9exceptionE,comdat
 18377              		.align 16
 18380              	_ZTSN5boost9exceptionE:
 18381 0000 4E35626F 		.string	"N5boost9exceptionE"
 18381      6F737439 
 18381      65786365 
 18381      7074696F 
 18381      6E4500
 18382              		.weak	_ZN5boost16exception_detail37exception_ptr_static_exception_objectINS0_10bad_alloc_EE1eE
 18383              		.section	.bss._ZN5boost16exception_detail37exception_ptr_static_exception_objectINS0_10bad_alloc_E
 18384              		.align 16
 18387              	_ZN5boost16exception_detail37exception_ptr_static_exception_objectINS0_10bad_alloc_EE1eE:
 18388 0000 00000000 		.zero	16
 18388      00000000 
 18388      00000000 
 18388      00000000 
 18389              		.weak	_ZN5boost16exception_detail37exception_ptr_static_exception_objectINS0_14bad_exception_EE1eE
 18390              		.section	.bss._ZN5boost16exception_detail37exception_ptr_static_exception_objectINS0_14bad_excepti
 18391              		.align 16
 18394              	_ZN5boost16exception_detail37exception_ptr_static_exception_objectINS0_14bad_exception_EE1eE:
 18395 0000 00000000 		.zero	16
 18395      00000000 
 18395      00000000 
 18395      00000000 
 18396              		.weak	_ZGVN5boost16exception_detail37exception_ptr_static_exception_objectINS0_10bad_alloc_EE1eE
 18397              		.section	.bss._ZGVN5boost16exception_detail37exception_ptr_static_exception_objectINS0_10bad_alloc
 18398              		.align 8
 18401              	_ZGVN5boost16exception_detail37exception_ptr_static_exception_objectINS0_10bad_alloc_EE1eE:
 18402 0000 00000000 		.zero	8
GAS LISTING /tmp/ccsIN87E.s 			page 714


 18402      00000000 
 18403              		.weak	_ZGVN5boost16exception_detail37exception_ptr_static_exception_objectINS0_14bad_exception_EE1
 18404              		.section	.bss._ZGVN5boost16exception_detail37exception_ptr_static_exception_objectINS0_14bad_excep
 18405              		.align 8
 18408              	_ZGVN5boost16exception_detail37exception_ptr_static_exception_objectINS0_14bad_exception_EE1eE:
 18409 0000 00000000 		.zero	8
 18409      00000000 
 18410              		.text
 18412              	_Z41__static_initialization_and_destruction_0ii:
 18413              	.LFB15449:
 430:costas2_impl.cc **** 
 431:costas2_impl.cc ****   } /* namespace lfast */
 432:costas2_impl.cc **** } /* namespace gr */
 18414              		.loc 22 432 0
 18415              		.cfi_startproc
 18416 1832 55       		pushq	%rbp
 18417              		.cfi_def_cfa_offset 16
 18418              		.cfi_offset 6, -16
 18419 1833 4889E5   		movq	%rsp, %rbp
 18420              		.cfi_def_cfa_register 6
 18421 1836 53       		pushq	%rbx
 18422 1837 4883EC28 		subq	$40, %rsp
 18423              		.cfi_offset 3, -24
 18424 183b 897DDC   		movl	%edi, -36(%rbp)
 18425 183e 8975D8   		movl	%esi, -40(%rbp)
 18426              		.loc 22 432 0
 18427 1841 837DDC01 		cmpl	$1, -36(%rbp)
 18428 1845 0F85F100 		jne	.L904
 18428      0000
 18429              		.loc 22 432 0 is_stmt 0 discriminator 1
 18430 184b 817DD8FF 		cmpl	$65535, -40(%rbp)
 18430      FF0000
 18431 1852 0F85E400 		jne	.L904
 18431      0000
 221:/usr/include/boost/system/error_code.hpp ****     static const error_category &  errno_ecat     = generic_category();
 18432              		.loc 11 221 0 is_stmt 1
 18433 1858 E8000000 		call	_ZN5boost6system16generic_categoryEv@PLT
 18433      00
 18434 185d 48890500 		movq	%rax, _ZN5boost6systemL14posix_categoryE(%rip)
 18434      000000
 222:/usr/include/boost/system/error_code.hpp ****     static const error_category &  native_ecat    = system_category();
 18435              		.loc 11 222 0
 18436 1864 E8000000 		call	_ZN5boost6system16generic_categoryEv@PLT
 18436      00
 18437 1869 48890500 		movq	%rax, _ZN5boost6systemL10errno_ecatE(%rip)
 18437      000000
 223:/usr/include/boost/system/error_code.hpp **** # endif
 18438              		.loc 11 223 0
 18439 1870 E8000000 		call	_ZN5boost6system15system_categoryEv@PLT
 18439      00
 18440 1875 48890500 		movq	%rax, _ZN5boost6systemL11native_ecatE(%rip)
 18440      000000
 18441              		.file 50 "/usr/include/c++/6/iostream"
   1:/usr/include/c++/6/iostream **** // Standard iostream objects -*- C++ -*-
   2:/usr/include/c++/6/iostream **** 
   3:/usr/include/c++/6/iostream **** // Copyright (C) 1997-2016 Free Software Foundation, Inc.
   4:/usr/include/c++/6/iostream **** //
GAS LISTING /tmp/ccsIN87E.s 			page 715


   5:/usr/include/c++/6/iostream **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/6/iostream **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/6/iostream **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/6/iostream **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/6/iostream **** // any later version.
  10:/usr/include/c++/6/iostream **** 
  11:/usr/include/c++/6/iostream **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/6/iostream **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/6/iostream **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/6/iostream **** // GNU General Public License for more details.
  15:/usr/include/c++/6/iostream **** 
  16:/usr/include/c++/6/iostream **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/6/iostream **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/6/iostream **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/6/iostream **** 
  20:/usr/include/c++/6/iostream **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/6/iostream **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/6/iostream **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/6/iostream **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/6/iostream **** 
  25:/usr/include/c++/6/iostream **** /** @file include/iostream
  26:/usr/include/c++/6/iostream ****  *  This is a Standard C++ Library header.
  27:/usr/include/c++/6/iostream ****  */
  28:/usr/include/c++/6/iostream **** 
  29:/usr/include/c++/6/iostream **** //
  30:/usr/include/c++/6/iostream **** // ISO C++ 14882: 27.3  Standard iostream objects
  31:/usr/include/c++/6/iostream **** //
  32:/usr/include/c++/6/iostream **** 
  33:/usr/include/c++/6/iostream **** #ifndef _GLIBCXX_IOSTREAM
  34:/usr/include/c++/6/iostream **** #define _GLIBCXX_IOSTREAM 1
  35:/usr/include/c++/6/iostream **** 
  36:/usr/include/c++/6/iostream **** #pragma GCC system_header
  37:/usr/include/c++/6/iostream **** 
  38:/usr/include/c++/6/iostream **** #include <bits/c++config.h>
  39:/usr/include/c++/6/iostream **** #include <ostream>
  40:/usr/include/c++/6/iostream **** #include <istream>
  41:/usr/include/c++/6/iostream **** 
  42:/usr/include/c++/6/iostream **** namespace std _GLIBCXX_VISIBILITY(default)
  43:/usr/include/c++/6/iostream **** {
  44:/usr/include/c++/6/iostream **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  45:/usr/include/c++/6/iostream **** 
  46:/usr/include/c++/6/iostream ****   /**
  47:/usr/include/c++/6/iostream ****    *  @name Standard Stream Objects
  48:/usr/include/c++/6/iostream ****    *
  49:/usr/include/c++/6/iostream ****    *  The &lt;iostream&gt; header declares the eight <em>standard stream
  50:/usr/include/c++/6/iostream ****    *  objects</em>.  For other declarations, see
  51:/usr/include/c++/6/iostream ****    *  http://gcc.gnu.org/onlinedocs/libstdc++/manual/io.html
  52:/usr/include/c++/6/iostream ****    *  and the @link iosfwd I/O forward declarations @endlink
  53:/usr/include/c++/6/iostream ****    *
  54:/usr/include/c++/6/iostream ****    *  They are required by default to cooperate with the global C
  55:/usr/include/c++/6/iostream ****    *  library's @c FILE streams, and to be available during program
  56:/usr/include/c++/6/iostream ****    *  startup and termination. For more information, see the section of the
  57:/usr/include/c++/6/iostream ****    *  manual linked to above.
  58:/usr/include/c++/6/iostream ****   */
  59:/usr/include/c++/6/iostream ****   //@{
  60:/usr/include/c++/6/iostream ****   extern istream cin;		/// Linked to standard input
  61:/usr/include/c++/6/iostream ****   extern ostream cout;		/// Linked to standard output
GAS LISTING /tmp/ccsIN87E.s 			page 716


  62:/usr/include/c++/6/iostream ****   extern ostream cerr;		/// Linked to standard error (unbuffered)
  63:/usr/include/c++/6/iostream ****   extern ostream clog;		/// Linked to standard error (buffered)
  64:/usr/include/c++/6/iostream **** 
  65:/usr/include/c++/6/iostream **** #ifdef _GLIBCXX_USE_WCHAR_T
  66:/usr/include/c++/6/iostream ****   extern wistream wcin;		/// Linked to standard input
  67:/usr/include/c++/6/iostream ****   extern wostream wcout;	/// Linked to standard output
  68:/usr/include/c++/6/iostream ****   extern wostream wcerr;	/// Linked to standard error (unbuffered)
  69:/usr/include/c++/6/iostream ****   extern wostream wclog;	/// Linked to standard error (buffered)
  70:/usr/include/c++/6/iostream **** #endif
  71:/usr/include/c++/6/iostream ****   //@}
  72:/usr/include/c++/6/iostream **** 
  73:/usr/include/c++/6/iostream ****   // For construction of filebuffers for cout, cin, cerr, clog et. al.
  74:/usr/include/c++/6/iostream ****   static ios_base::Init __ioinit;
 18442              		.loc 50 74 0
 18443 187c 488D3D00 		leaq	_ZStL8__ioinit(%rip), %rdi
 18443      000000
 18444 1883 E8000000 		call	_ZNSt8ios_base4InitC1Ev@PLT
 18444      00
 18445 1888 488D1500 		leaq	__dso_handle(%rip), %rdx
 18445      000000
 18446 188f 488D3500 		leaq	_ZStL8__ioinit(%rip), %rsi
 18446      000000
 18447 1896 488B0500 		movq	_ZNSt8ios_base4InitD1Ev@GOTPCREL(%rip), %rax
 18447      000000
 18448 189d 4889C7   		movq	%rax, %rdi
 18449 18a0 E8000000 		call	__cxa_atexit@PLT
 18449      00
 133:/usr/include/boost/exception/detail/exception_ptr.hpp **** 
 134:/usr/include/boost/exception/detail/exception_ptr.hpp ****         template <class Exception>
 135:/usr/include/boost/exception/detail/exception_ptr.hpp ****         struct
 136:/usr/include/boost/exception/detail/exception_ptr.hpp ****         exception_ptr_static_exception_object
 137:/usr/include/boost/exception/detail/exception_ptr.hpp ****             {
 138:/usr/include/boost/exception/detail/exception_ptr.hpp ****             static exception_ptr const e;
 139:/usr/include/boost/exception/detail/exception_ptr.hpp ****             };
 140:/usr/include/boost/exception/detail/exception_ptr.hpp **** 
 141:/usr/include/boost/exception/detail/exception_ptr.hpp ****         template <class Exception>
 142:/usr/include/boost/exception/detail/exception_ptr.hpp ****         exception_ptr const
 143:/usr/include/boost/exception/detail/exception_ptr.hpp ****         exception_ptr_static_exception_object<Exception>::
 18450              		.loc 16 143 0
 18451 18a5 488D0500 		leaq	_ZGVN5boost16exception_detail37exception_ptr_static_exception_objectINS0_10bad_alloc_EE1eE(%r
 18451      000000
 18452 18ac 0FB600   		movzbl	(%rax), %eax
 18453 18af 84C0     		testb	%al, %al
 18454 18b1 7533     		jne	.L902
 18455              		.loc 16 143 0 is_stmt 0 discriminator 1
 18456 18b3 488D0500 		leaq	_ZGVN5boost16exception_detail37exception_ptr_static_exception_objectINS0_10bad_alloc_EE1eE(%r
 18456      000000
 18457 18ba C60001   		movb	$1, (%rax)
 18458 18bd 488D0500 		leaq	_ZN5boost16exception_detail37exception_ptr_static_exception_objectINS0_10bad_alloc_EE1eE(%rip
 18458      000000
 18459 18c4 4889C7   		movq	%rax, %rdi
 18460 18c7 E8000000 		call	_ZN5boost16exception_detail27get_static_exception_objectINS0_10bad_alloc_EEENS_13exception_pt
 18460      00
 18461 18cc 488D1500 		leaq	__dso_handle(%rip), %rdx
 18461      000000
 18462 18d3 488D3500 		leaq	_ZN5boost16exception_detail37exception_ptr_static_exception_objectINS0_10bad_alloc_EE1eE(%rip
 18462      000000
GAS LISTING /tmp/ccsIN87E.s 			page 717


 18463 18da 488D3D00 		leaq	_ZN5boost13exception_ptrD1Ev(%rip), %rdi
 18463      000000
 18464 18e1 E8000000 		call	__cxa_atexit@PLT
 18464      00
 18465              	.L902:
 18466              		.loc 16 143 0 discriminator 3
 18467 18e6 488D0500 		leaq	_ZGVN5boost16exception_detail37exception_ptr_static_exception_objectINS0_14bad_exception_EE1e
 18467      000000
 18468 18ed 0FB600   		movzbl	(%rax), %eax
 18469 18f0 84C0     		testb	%al, %al
 18470 18f2 7533     		jne	.L903
 18471              		.loc 16 143 0 discriminator 4
 18472 18f4 488D0500 		leaq	_ZGVN5boost16exception_detail37exception_ptr_static_exception_objectINS0_14bad_exception_EE1e
 18472      000000
 18473 18fb C60001   		movb	$1, (%rax)
 18474 18fe 488D0500 		leaq	_ZN5boost16exception_detail37exception_ptr_static_exception_objectINS0_14bad_exception_EE1eE(
 18474      000000
 18475 1905 4889C7   		movq	%rax, %rdi
 18476 1908 E8000000 		call	_ZN5boost16exception_detail27get_static_exception_objectINS0_14bad_exception_EEENS_13exceptio
 18476      00
 18477 190d 488D1500 		leaq	__dso_handle(%rip), %rdx
 18477      000000
 18478 1914 488D3500 		leaq	_ZN5boost16exception_detail37exception_ptr_static_exception_objectINS0_14bad_exception_EE1eE(
 18478      000000
 18479 191b 488D3D00 		leaq	_ZN5boost13exception_ptrD1Ev(%rip), %rdi
 18479      000000
 18480 1922 E8000000 		call	__cxa_atexit@PLT
 18480      00
 18481              	.L903:
 18482              		.file 51 "/usr/include/boost/none.hpp"
   1:/usr/include/boost/none.hpp **** // Copyright (C) 2003, Fernando Luis Cacciola Carballal.
   2:/usr/include/boost/none.hpp **** // Copyright (C) 2014, 2015 Andrzej Krzemienski.
   3:/usr/include/boost/none.hpp **** //
   4:/usr/include/boost/none.hpp **** // Distributed under the Boost Software License, Version 1.0.
   5:/usr/include/boost/none.hpp **** // (See accompanying file LICENSE_1_0.txt or copy at
   6:/usr/include/boost/none.hpp **** // http://www.boost.org/LICENSE_1_0.txt)
   7:/usr/include/boost/none.hpp **** //
   8:/usr/include/boost/none.hpp **** // See http://www.boost.org/libs/optional for documentation.
   9:/usr/include/boost/none.hpp **** //
  10:/usr/include/boost/none.hpp **** // You are welcome to contact the author at:
  11:/usr/include/boost/none.hpp **** //  fernando_cacciola@hotmail.com
  12:/usr/include/boost/none.hpp **** //
  13:/usr/include/boost/none.hpp **** #ifndef BOOST_NONE_17SEP2003_HPP
  14:/usr/include/boost/none.hpp **** #define BOOST_NONE_17SEP2003_HPP
  15:/usr/include/boost/none.hpp **** 
  16:/usr/include/boost/none.hpp **** #include "boost/none_t.hpp"
  17:/usr/include/boost/none.hpp **** 
  18:/usr/include/boost/none.hpp **** // NOTE: Borland users have to include this header outside any precompiled headers
  19:/usr/include/boost/none.hpp **** // (bcc<=5.64 cannot include instance data in a precompiled header)
  20:/usr/include/boost/none.hpp **** //  -- * To be verified, now that there's no unnamed namespace
  21:/usr/include/boost/none.hpp **** 
  22:/usr/include/boost/none.hpp **** namespace boost {
  23:/usr/include/boost/none.hpp **** 
  24:/usr/include/boost/none.hpp **** #ifdef BOOST_OPTIONAL_USE_OLD_DEFINITION_OF_NONE
  25:/usr/include/boost/none.hpp **** 
  26:/usr/include/boost/none.hpp **** none_t const none = (static_cast<none_t>(0)) ;
  27:/usr/include/boost/none.hpp **** 
GAS LISTING /tmp/ccsIN87E.s 			page 718


  28:/usr/include/boost/none.hpp **** #elif defined BOOST_OPTIONAL_USE_SINGLETON_DEFINITION_OF_NONE
  29:/usr/include/boost/none.hpp **** 
  30:/usr/include/boost/none.hpp **** namespace detail { namespace optional_detail {
  31:/usr/include/boost/none.hpp **** 
  32:/usr/include/boost/none.hpp ****   // the trick here is to make boost::none defined once as a global but in a header file
  33:/usr/include/boost/none.hpp ****   template <typename T>
  34:/usr/include/boost/none.hpp ****   struct none_instance
  35:/usr/include/boost/none.hpp ****   {
  36:/usr/include/boost/none.hpp ****     static const T instance;
  37:/usr/include/boost/none.hpp ****   };
  38:/usr/include/boost/none.hpp ****   
  39:/usr/include/boost/none.hpp ****   template <typename T>
  40:/usr/include/boost/none.hpp ****   const T none_instance<T>::instance = T(); // global, but because 'tis a template, no cpp file req
  41:/usr/include/boost/none.hpp **** 
  42:/usr/include/boost/none.hpp **** } } // namespace detail::optional_detail
  43:/usr/include/boost/none.hpp **** 
  44:/usr/include/boost/none.hpp **** 
  45:/usr/include/boost/none.hpp **** namespace {
  46:/usr/include/boost/none.hpp ****   // TU-local
  47:/usr/include/boost/none.hpp ****   const none_t& none = detail::optional_detail::none_instance<none_t>::instance; 
  48:/usr/include/boost/none.hpp **** }
  49:/usr/include/boost/none.hpp **** 
  50:/usr/include/boost/none.hpp **** #else
  51:/usr/include/boost/none.hpp **** 
  52:/usr/include/boost/none.hpp **** const none_t none ((none_t::init_tag()));
 18483              		.loc 51 52 0 is_stmt 1
 18484 1927 4883EC08 		subq	$8, %rsp
 18485 192b 53       		pushq	%rbx
 18486 192c 488D3D00 		leaq	_ZN5boostL4noneE(%rip), %rdi
 18486      000000
 18487 1933 E8000000 		call	_ZN5boost6none_tC1ENS0_8init_tagE
 18487      00
 18488 1938 4883C410 		addq	$16, %rsp
 18489              	.L904:
 18490              		.loc 22 432 0
 18491 193c 90       		nop
 18492 193d 488B5DF8 		movq	-8(%rbp), %rbx
 18493 1941 C9       		leave
 18494              		.cfi_def_cfa 7, 8
 18495 1942 C3       		ret
 18496              		.cfi_endproc
 18497              	.LFE15449:
 18499              		.section	.text._ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_14bad_exc
 18500              		.align 2
 18501              		.weak	_ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_14bad_exception_EE
 18503              	_ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_14bad_exception_EEEE7disp
 18504              	.LFB15453:
  72:/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp **** 
  73:/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp ****     virtual void dispose() // nothrow
 18505              		.loc 48 73 0
 18506              		.cfi_startproc
 18507 0000 55       		pushq	%rbp
 18508              		.cfi_def_cfa_offset 16
 18509              		.cfi_offset 6, -16
 18510 0001 4889E5   		movq	%rsp, %rbp
 18511              		.cfi_def_cfa_register 6
 18512 0004 4883EC10 		subq	$16, %rsp
GAS LISTING /tmp/ccsIN87E.s 			page 719


 18513 0008 48897DF8 		movq	%rdi, -8(%rbp)
  74:/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp ****     {
  75:/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp **** #if defined(BOOST_SP_ENABLE_DEBUG_HOOKS)
  76:/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp ****         boost::sp_scalar_destructor_hook( px_, sizeof(X), this );
  77:/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp **** #endif
  78:/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp ****         boost::checked_delete( px_ );
 18514              		.loc 48 78 0
 18515 000c 488B45F8 		movq	-8(%rbp), %rax
 18516 0010 488B4010 		movq	16(%rax), %rax
 18517 0014 4889C7   		movq	%rax, %rdi
 18518 0017 E8000000 		call	_ZN5boost14checked_deleteINS_16exception_detail10clone_implINS1_14bad_exception_EEEEEvPT_
 18518      00
  79:/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp ****     }
 18519              		.loc 48 79 0
 18520 001c 90       		nop
 18521 001d C9       		leave
 18522              		.cfi_def_cfa 7, 8
 18523 001e C3       		ret
 18524              		.cfi_endproc
 18525              	.LFE15453:
 18527              		.section	.text._ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_14bad_exc
 18528              		.align 2
 18529              		.weak	_ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_14bad_exception_EE
 18531              	_ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_14bad_exception_EEEE11get
 18532              	.LFB15454:
  80:/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp **** 
  81:/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp ****     virtual void * get_deleter( sp_typeinfo const & )
 18533              		.loc 48 81 0
 18534              		.cfi_startproc
 18535 0000 55       		pushq	%rbp
 18536              		.cfi_def_cfa_offset 16
 18537              		.cfi_offset 6, -16
 18538 0001 4889E5   		movq	%rsp, %rbp
 18539              		.cfi_def_cfa_register 6
 18540 0004 48897DF8 		movq	%rdi, -8(%rbp)
 18541 0008 488975F0 		movq	%rsi, -16(%rbp)
  82:/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp ****     {
  83:/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp ****         return 0;
 18542              		.loc 48 83 0
 18543 000c B8000000 		movl	$0, %eax
 18543      00
  84:/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp ****     }
 18544              		.loc 48 84 0
 18545 0011 5D       		popq	%rbp
 18546              		.cfi_def_cfa 7, 8
 18547 0012 C3       		ret
 18548              		.cfi_endproc
 18549              	.LFE15454:
 18551              		.section	.text._ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_14bad_exc
 18552              		.align 2
 18553              		.weak	_ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_14bad_exception_EE
 18555              	_ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_14bad_exception_EEEE19get
 18556              	.LFB15455:
  85:/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp **** 
  86:/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp ****     virtual void * get_untyped_deleter()
 18557              		.loc 48 86 0
 18558              		.cfi_startproc
GAS LISTING /tmp/ccsIN87E.s 			page 720


 18559 0000 55       		pushq	%rbp
 18560              		.cfi_def_cfa_offset 16
 18561              		.cfi_offset 6, -16
 18562 0001 4889E5   		movq	%rsp, %rbp
 18563              		.cfi_def_cfa_register 6
 18564 0004 48897DF8 		movq	%rdi, -8(%rbp)
  87:/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp ****     {
  88:/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp ****         return 0;
 18565              		.loc 48 88 0
 18566 0008 B8000000 		movl	$0, %eax
 18566      00
  89:/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp ****     }
 18567              		.loc 48 89 0
 18568 000d 5D       		popq	%rbp
 18569              		.cfi_def_cfa 7, 8
 18570 000e C3       		ret
 18571              		.cfi_endproc
 18572              	.LFE15455:
 18574              		.section	.text._ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_all
 18575              		.align 2
 18576              		.weak	_ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEE7d
 18578              	_ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEE7disposeE
 18579              	.LFB15456:
  73:/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp ****     {
 18580              		.loc 48 73 0
 18581              		.cfi_startproc
 18582 0000 55       		pushq	%rbp
 18583              		.cfi_def_cfa_offset 16
 18584              		.cfi_offset 6, -16
 18585 0001 4889E5   		movq	%rsp, %rbp
 18586              		.cfi_def_cfa_register 6
 18587 0004 4883EC10 		subq	$16, %rsp
 18588 0008 48897DF8 		movq	%rdi, -8(%rbp)
  78:/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp ****     }
 18589              		.loc 48 78 0
 18590 000c 488B45F8 		movq	-8(%rbp), %rax
 18591 0010 488B4010 		movq	16(%rax), %rax
 18592 0014 4889C7   		movq	%rax, %rdi
 18593 0017 E8000000 		call	_ZN5boost14checked_deleteINS_16exception_detail10clone_implINS1_10bad_alloc_EEEEEvPT_
 18593      00
  79:/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp **** 
 18594              		.loc 48 79 0
 18595 001c 90       		nop
 18596 001d C9       		leave
 18597              		.cfi_def_cfa 7, 8
 18598 001e C3       		ret
 18599              		.cfi_endproc
 18600              	.LFE15456:
 18602              		.section	.text._ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_all
 18603              		.align 2
 18604              		.weak	_ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEE11
 18606              	_ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEE11get_del
 18607              	.LFB15457:
  81:/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp ****     {
 18608              		.loc 48 81 0
 18609              		.cfi_startproc
 18610 0000 55       		pushq	%rbp
GAS LISTING /tmp/ccsIN87E.s 			page 721


 18611              		.cfi_def_cfa_offset 16
 18612              		.cfi_offset 6, -16
 18613 0001 4889E5   		movq	%rsp, %rbp
 18614              		.cfi_def_cfa_register 6
 18615 0004 48897DF8 		movq	%rdi, -8(%rbp)
 18616 0008 488975F0 		movq	%rsi, -16(%rbp)
  83:/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp ****     }
 18617              		.loc 48 83 0
 18618 000c B8000000 		movl	$0, %eax
 18618      00
  84:/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp **** 
 18619              		.loc 48 84 0
 18620 0011 5D       		popq	%rbp
 18621              		.cfi_def_cfa 7, 8
 18622 0012 C3       		ret
 18623              		.cfi_endproc
 18624              	.LFE15457:
 18626              		.section	.text._ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_all
 18627              		.align 2
 18628              		.weak	_ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEE19
 18630              	_ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEE19get_unt
 18631              	.LFB15458:
  86:/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp ****     {
 18632              		.loc 48 86 0
 18633              		.cfi_startproc
 18634 0000 55       		pushq	%rbp
 18635              		.cfi_def_cfa_offset 16
 18636              		.cfi_offset 6, -16
 18637 0001 4889E5   		movq	%rsp, %rbp
 18638              		.cfi_def_cfa_register 6
 18639 0004 48897DF8 		movq	%rdi, -8(%rbp)
  88:/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp ****     }
 18640              		.loc 48 88 0
 18641 0008 B8000000 		movl	$0, %eax
 18641      00
 18642              		.loc 48 89 0
 18643 000d 5D       		popq	%rbp
 18644              		.cfi_def_cfa 7, 8
 18645 000e C3       		ret
 18646              		.cfi_endproc
 18647              	.LFE15458:
 18649              		.section	.text._ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_functio
 18650              		.align 2
 18651              		.weak	_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEE
 18653              	_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEE5clone
 18654              	.LFB15528:
 486:/usr/include/boost/exception/exception.hpp ****                 {
 18655              		.loc 3 486 0
 18656              		.cfi_startproc
 18657              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 18658              		.cfi_lsda 0x1b,.LLSDA15528
 18659 0000 55       		pushq	%rbp
 18660              		.cfi_def_cfa_offset 16
 18661              		.cfi_offset 6, -16
 18662 0001 4889E5   		movq	%rsp, %rbp
 18663              		.cfi_def_cfa_register 6
 18664 0004 4154     		pushq	%r12
GAS LISTING /tmp/ccsIN87E.s 			page 722


 18665 0006 53       		pushq	%rbx
 18666 0007 4883EC20 		subq	$32, %rsp
 18667              		.cfi_offset 12, -24
 18668              		.cfi_offset 3, -32
 18669 000b 48897DD8 		movq	%rdi, -40(%rbp)
 488:/usr/include/boost/exception/exception.hpp ****                 }
 18670              		.loc 3 488 0
 18671 000f 8845EE   		movb	%al, -18(%rbp)
 18672 0012 BF400000 		movl	$64, %edi
 18672      00
 18673              	.LEHB106:
 18674 0017 E8000000 		call	_Znwm@PLT
 18674      00
 18675              	.LEHE106:
 18676 001c 4889C3   		movq	%rax, %rbx
 18677 001f 488B45D8 		movq	-40(%rbp), %rax
 18678 0023 4883EC08 		subq	$8, %rsp
 18679 0027 0FB655EE 		movzbl	-18(%rbp), %edx
 18680 002b 52       		pushq	%rdx
 18681 002c 4889C6   		movq	%rax, %rsi
 18682 002f 4889DF   		movq	%rbx, %rdi
 18683              	.LEHB107:
 18684              		.cfi_escape 0x2e,0x10
 18685 0032 E8000000 		call	_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEEC
 18685      00
 18686              	.LEHE107:
 488:/usr/include/boost/exception/exception.hpp ****                 }
 18687              		.loc 3 488 0 is_stmt 0 discriminator 2
 18688 0037 4883C410 		addq	$16, %rsp
 18689 003b 4885DB   		testq	%rbx, %rbx
 18690 003e 740F     		je	.L916
 488:/usr/include/boost/exception/exception.hpp ****                 }
 18691              		.loc 3 488 0 discriminator 5
 18692 0040 488B03   		movq	(%rbx), %rax
 18693 0043 4883E818 		subq	$24, %rax
 18694 0047 488B00   		movq	(%rax), %rax
 18695 004a 4801D8   		addq	%rbx, %rax
 18696 004d EB24     		jmp	.L923
 18697              	.L916:
 488:/usr/include/boost/exception/exception.hpp ****                 }
 18698              		.loc 3 488 0 discriminator 6
 18699 004f B8000000 		movl	$0, %eax
 18699      00
 18700 0054 EB1D     		jmp	.L923
 18701              	.L922:
 18702 0056 4989C4   		movq	%rax, %r12
 488:/usr/include/boost/exception/exception.hpp ****                 }
 18703              		.loc 3 488 0
 18704 0059 BE400000 		movl	$64, %esi
 18704      00
 18705 005e 4889DF   		movq	%rbx, %rdi
 18706 0061 E8000000 		call	_ZdlPvm@PLT
 18706      00
 18707 0066 4C89E0   		movq	%r12, %rax
 18708 0069 EB00     		jmp	.L920
 18709              	.L921:
 18710              	.L920:
GAS LISTING /tmp/ccsIN87E.s 			page 723


 18711 006b 4889C7   		movq	%rax, %rdi
 18712              	.LEHB108:
 18713 006e E8000000 		call	_Unwind_Resume@PLT
 18713      00
 18714              	.LEHE108:
 18715              	.L923:
 489:/usr/include/boost/exception/exception.hpp **** 
 18716              		.loc 3 489 0 is_stmt 1
 18717 0073 488D65F0 		leaq	-16(%rbp), %rsp
 18718 0077 5B       		popq	%rbx
 18719 0078 415C     		popq	%r12
 18720 007a 5D       		popq	%rbp
 18721              		.cfi_def_cfa 7, 8
 18722 007b C3       		ret
 18723              		.cfi_endproc
 18724              	.LFE15528:
 18725              		.section	.gcc_except_table
 18726              	.LLSDA15528:
 18727 0287 FF       		.byte	0xff
 18728 0288 FF       		.byte	0xff
 18729 0289 01       		.byte	0x1
 18730 028a 0C       		.uleb128 .LLSDACSE15528-.LLSDACSB15528
 18731              	.LLSDACSB15528:
 18732 028b 17       		.uleb128 .LEHB106-.LFB15528
 18733 028c 05       		.uleb128 .LEHE106-.LEHB106
 18734 028d 6B       		.uleb128 .L921-.LFB15528
 18735 028e 00       		.uleb128 0
 18736 028f 32       		.uleb128 .LEHB107-.LFB15528
 18737 0290 05       		.uleb128 .LEHE107-.LEHB107
 18738 0291 56       		.uleb128 .L922-.LFB15528
 18739 0292 00       		.uleb128 0
 18740 0293 6E       		.uleb128 .LEHB108-.LFB15528
 18741 0294 05       		.uleb128 .LEHE108-.LEHB108
 18742 0295 00       		.uleb128 0
 18743 0296 00       		.uleb128 0
 18744              	.LLSDACSE15528:
 18745              		.section	.text._ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_functio
 18747              		.set	.LTHUNK252,_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_functi
 18748              		.weak	_ZTv0_n24_NK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function
 18750              	_ZTv0_n24_NK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEE
 18751              	.LFB15711:
 486:/usr/include/boost/exception/exception.hpp ****                 {
 18752              		.loc 3 486 0
 18753              		.cfi_startproc
 18754 007c 4C8B17   		movq	(%rdi), %r10
 18755 007f 49037AE8 		addq	-24(%r10), %rdi
 18756 0083 E978FFFF 		jmp	.LTHUNK252
 18756      FF
 18757              		.cfi_endproc
 18758              	.LFE15711:
 18760              		.section	.text._ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_functio
 18761              		.align 2
 18762              		.weak	_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEE
 18764              	_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEE7rethr
 18765              	.LFB15529:
 492:/usr/include/boost/exception/exception.hpp ****                 {
 18766              		.loc 3 492 0
GAS LISTING /tmp/ccsIN87E.s 			page 724


 18767              		.cfi_startproc
 18768              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 18769              		.cfi_lsda 0x1b,.LLSDA15529
 18770 0000 55       		pushq	%rbp
 18771              		.cfi_def_cfa_offset 16
 18772              		.cfi_offset 6, -16
 18773 0001 4889E5   		movq	%rsp, %rbp
 18774              		.cfi_def_cfa_register 6
 18775 0004 4154     		pushq	%r12
 18776 0006 53       		pushq	%rbx
 18777 0007 4883EC10 		subq	$16, %rsp
 18778              		.cfi_offset 12, -24
 18779              		.cfi_offset 3, -32
 18780 000b 48897DE8 		movq	%rdi, -24(%rbp)
 494:/usr/include/boost/exception/exception.hpp ****                 }
 18781              		.loc 3 494 0
 18782 000f BF400000 		movl	$64, %edi
 18782      00
 18783 0014 E8000000 		call	__cxa_allocate_exception@PLT
 18783      00
 18784 0019 4889C3   		movq	%rax, %rbx
 18785 001c 488B45E8 		movq	-24(%rbp), %rax
 18786 0020 4889C6   		movq	%rax, %rsi
 18787 0023 4889DF   		movq	%rbx, %rdi
 18788              	.LEHB109:
 18789 0026 E8000000 		call	_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEEC
 18789      00
 18790              	.LEHE109:
 494:/usr/include/boost/exception/exception.hpp ****                 }
 18791              		.loc 3 494 0 is_stmt 0 discriminator 2
 18792 002b 488D1500 		leaq	_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEED
 18792      000000
 18793 0032 488D3500 		leaq	_ZTIN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEE
 18793      000000
 18794 0039 4889DF   		movq	%rbx, %rdi
 18795              	.LEHB110:
 18796 003c E8000000 		call	__cxa_throw@PLT
 18796      00
 18797              	.L926:
 18798 0041 4989C4   		movq	%rax, %r12
 494:/usr/include/boost/exception/exception.hpp ****                 }
 18799              		.loc 3 494 0
 18800 0044 4889DF   		movq	%rbx, %rdi
 18801 0047 E8000000 		call	__cxa_free_exception@PLT
 18801      00
 18802 004c 4C89E0   		movq	%r12, %rax
 18803 004f 4889C7   		movq	%rax, %rdi
 18804 0052 E8000000 		call	_Unwind_Resume@PLT
 18804      00
 18805              	.LEHE110:
 18806              		.cfi_endproc
 18807              	.LFE15529:
 18808              		.section	.gcc_except_table
 18809              	.LLSDA15529:
 18810 0297 FF       		.byte	0xff
 18811 0298 FF       		.byte	0xff
 18812 0299 01       		.byte	0x1
GAS LISTING /tmp/ccsIN87E.s 			page 725


 18813 029a 08       		.uleb128 .LLSDACSE15529-.LLSDACSB15529
 18814              	.LLSDACSB15529:
 18815 029b 26       		.uleb128 .LEHB109-.LFB15529
 18816 029c 05       		.uleb128 .LEHE109-.LEHB109
 18817 029d 41       		.uleb128 .L926-.LFB15529
 18818 029e 00       		.uleb128 0
 18819 029f 3C       		.uleb128 .LEHB110-.LFB15529
 18820 02a0 1B       		.uleb128 .LEHE110-.LEHB110
 18821 02a1 00       		.uleb128 0
 18822 02a2 00       		.uleb128 0
 18823              	.LLSDACSE15529:
 18824              		.section	.text._ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_functio
 18826              		.set	.LTHUNK253,_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_functi
 18827              		.weak	_ZTv0_n32_NK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function
 18829              	_ZTv0_n32_NK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEE
 18830              	.LFB15712:
 492:/usr/include/boost/exception/exception.hpp ****                 {
 18831              		.loc 3 492 0 is_stmt 1
 18832              		.cfi_startproc
 18833 0057 4C8B17   		movq	(%rdi), %r10
 18834 005a 49037AE0 		addq	-32(%r10), %rdi
 18835 005e EBA0     		jmp	.LTHUNK253
 18836              		.cfi_endproc
 18837              	.LFE15712:
 18839              		.section	.text._ZNK5boost16exception_detail10clone_implINS0_14bad_exception_EE5cloneEv,"axG",@prog
 18840              		.align 2
 18841              		.weak	_ZNK5boost16exception_detail10clone_implINS0_14bad_exception_EE5cloneEv
 18843              	_ZNK5boost16exception_detail10clone_implINS0_14bad_exception_EE5cloneEv:
 18844              	.LFB15540:
 486:/usr/include/boost/exception/exception.hpp ****                 {
 18845              		.loc 3 486 0
 18846              		.cfi_startproc
 18847              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 18848              		.cfi_lsda 0x1b,.LLSDA15540
 18849 0000 55       		pushq	%rbp
 18850              		.cfi_def_cfa_offset 16
 18851              		.cfi_offset 6, -16
 18852 0001 4889E5   		movq	%rsp, %rbp
 18853              		.cfi_def_cfa_register 6
 18854 0004 4154     		pushq	%r12
 18855 0006 53       		pushq	%rbx
 18856 0007 4883EC20 		subq	$32, %rsp
 18857              		.cfi_offset 12, -24
 18858              		.cfi_offset 3, -32
 18859 000b 48897DD8 		movq	%rdi, -40(%rbp)
 488:/usr/include/boost/exception/exception.hpp ****                 }
 18860              		.loc 3 488 0
 18861 000f 8845EE   		movb	%al, -18(%rbp)
 18862 0012 BF380000 		movl	$56, %edi
 18862      00
 18863              	.LEHB111:
 18864 0017 E8000000 		call	_Znwm@PLT
 18864      00
 18865              	.LEHE111:
 18866 001c 4889C3   		movq	%rax, %rbx
 18867 001f 488B45D8 		movq	-40(%rbp), %rax
 18868 0023 4883EC08 		subq	$8, %rsp
GAS LISTING /tmp/ccsIN87E.s 			page 726


 18869 0027 0FB655EE 		movzbl	-18(%rbp), %edx
 18870 002b 52       		pushq	%rdx
 18871 002c 4889C6   		movq	%rax, %rsi
 18872 002f 4889DF   		movq	%rbx, %rdi
 18873              	.LEHB112:
 18874              		.cfi_escape 0x2e,0x10
 18875 0032 E8000000 		call	_ZN5boost16exception_detail10clone_implINS0_14bad_exception_EEC1ERKS3_NS3_9clone_tagE
 18875      00
 18876              	.LEHE112:
 488:/usr/include/boost/exception/exception.hpp ****                 }
 18877              		.loc 3 488 0 is_stmt 0 discriminator 2
 18878 0037 4883C410 		addq	$16, %rsp
 18879 003b 4885DB   		testq	%rbx, %rbx
 18880 003e 740F     		je	.L928
 488:/usr/include/boost/exception/exception.hpp ****                 }
 18881              		.loc 3 488 0 discriminator 5
 18882 0040 488B03   		movq	(%rbx), %rax
 18883 0043 4883E818 		subq	$24, %rax
 18884 0047 488B00   		movq	(%rax), %rax
 18885 004a 4801D8   		addq	%rbx, %rax
 18886 004d EB24     		jmp	.L935
 18887              	.L928:
 488:/usr/include/boost/exception/exception.hpp ****                 }
 18888              		.loc 3 488 0 discriminator 6
 18889 004f B8000000 		movl	$0, %eax
 18889      00
 18890 0054 EB1D     		jmp	.L935
 18891              	.L934:
 18892 0056 4989C4   		movq	%rax, %r12
 488:/usr/include/boost/exception/exception.hpp ****                 }
 18893              		.loc 3 488 0
 18894 0059 BE380000 		movl	$56, %esi
 18894      00
 18895 005e 4889DF   		movq	%rbx, %rdi
 18896 0061 E8000000 		call	_ZdlPvm@PLT
 18896      00
 18897 0066 4C89E0   		movq	%r12, %rax
 18898 0069 EB00     		jmp	.L932
 18899              	.L933:
 18900              	.L932:
 18901 006b 4889C7   		movq	%rax, %rdi
 18902              	.LEHB113:
 18903 006e E8000000 		call	_Unwind_Resume@PLT
 18903      00
 18904              	.LEHE113:
 18905              	.L935:
 489:/usr/include/boost/exception/exception.hpp **** 
 18906              		.loc 3 489 0 is_stmt 1
 18907 0073 488D65F0 		leaq	-16(%rbp), %rsp
 18908 0077 5B       		popq	%rbx
 18909 0078 415C     		popq	%r12
 18910 007a 5D       		popq	%rbp
 18911              		.cfi_def_cfa 7, 8
 18912 007b C3       		ret
 18913              		.cfi_endproc
 18914              	.LFE15540:
 18915              		.section	.gcc_except_table
GAS LISTING /tmp/ccsIN87E.s 			page 727


 18916              	.LLSDA15540:
 18917 02a3 FF       		.byte	0xff
 18918 02a4 FF       		.byte	0xff
 18919 02a5 01       		.byte	0x1
 18920 02a6 0C       		.uleb128 .LLSDACSE15540-.LLSDACSB15540
 18921              	.LLSDACSB15540:
 18922 02a7 17       		.uleb128 .LEHB111-.LFB15540
 18923 02a8 05       		.uleb128 .LEHE111-.LEHB111
 18924 02a9 6B       		.uleb128 .L933-.LFB15540
 18925 02aa 00       		.uleb128 0
 18926 02ab 32       		.uleb128 .LEHB112-.LFB15540
 18927 02ac 05       		.uleb128 .LEHE112-.LEHB112
 18928 02ad 56       		.uleb128 .L934-.LFB15540
 18929 02ae 00       		.uleb128 0
 18930 02af 6E       		.uleb128 .LEHB113-.LFB15540
 18931 02b0 05       		.uleb128 .LEHE113-.LEHB113
 18932 02b1 00       		.uleb128 0
 18933 02b2 00       		.uleb128 0
 18934              	.LLSDACSE15540:
 18935              		.section	.text._ZNK5boost16exception_detail10clone_implINS0_14bad_exception_EE5cloneEv,"axG",@prog
 18937              		.set	.LTHUNK264,_ZNK5boost16exception_detail10clone_implINS0_14bad_exception_EE5cloneEv
 18938              		.weak	_ZTv0_n24_NK5boost16exception_detail10clone_implINS0_14bad_exception_EE5cloneEv
 18940              	_ZTv0_n24_NK5boost16exception_detail10clone_implINS0_14bad_exception_EE5cloneEv:
 18941              	.LFB15713:
 486:/usr/include/boost/exception/exception.hpp ****                 {
 18942              		.loc 3 486 0
 18943              		.cfi_startproc
 18944 007c 4C8B17   		movq	(%rdi), %r10
 18945 007f 49037AE8 		addq	-24(%r10), %rdi
 18946 0083 E978FFFF 		jmp	.LTHUNK264
 18946      FF
 18947              		.cfi_endproc
 18948              	.LFE15713:
 18950              		.section	.text._ZNK5boost16exception_detail10clone_implINS0_14bad_exception_EE7rethrowEv,"axG",@pr
 18951              		.align 2
 18952              		.weak	_ZNK5boost16exception_detail10clone_implINS0_14bad_exception_EE7rethrowEv
 18954              	_ZNK5boost16exception_detail10clone_implINS0_14bad_exception_EE7rethrowEv:
 18955              	.LFB15541:
 492:/usr/include/boost/exception/exception.hpp ****                 {
 18956              		.loc 3 492 0
 18957              		.cfi_startproc
 18958              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 18959              		.cfi_lsda 0x1b,.LLSDA15541
 18960 0000 55       		pushq	%rbp
 18961              		.cfi_def_cfa_offset 16
 18962              		.cfi_offset 6, -16
 18963 0001 4889E5   		movq	%rsp, %rbp
 18964              		.cfi_def_cfa_register 6
 18965 0004 4154     		pushq	%r12
 18966 0006 53       		pushq	%rbx
 18967 0007 4883EC10 		subq	$16, %rsp
 18968              		.cfi_offset 12, -24
 18969              		.cfi_offset 3, -32
 18970 000b 48897DE8 		movq	%rdi, -24(%rbp)
 494:/usr/include/boost/exception/exception.hpp ****                 }
 18971              		.loc 3 494 0
 18972 000f BF380000 		movl	$56, %edi
GAS LISTING /tmp/ccsIN87E.s 			page 728


 18972      00
 18973 0014 E8000000 		call	__cxa_allocate_exception@PLT
 18973      00
 18974 0019 4889C3   		movq	%rax, %rbx
 18975 001c 488B45E8 		movq	-24(%rbp), %rax
 18976 0020 4889C6   		movq	%rax, %rsi
 18977 0023 4889DF   		movq	%rbx, %rdi
 18978              	.LEHB114:
 18979 0026 E8000000 		call	_ZN5boost16exception_detail10clone_implINS0_14bad_exception_EEC1ERKS3_
 18979      00
 18980              	.LEHE114:
 494:/usr/include/boost/exception/exception.hpp ****                 }
 18981              		.loc 3 494 0 is_stmt 0 discriminator 2
 18982 002b 488D1500 		leaq	_ZN5boost16exception_detail10clone_implINS0_14bad_exception_EED1Ev(%rip), %rdx
 18982      000000
 18983 0032 488D3500 		leaq	_ZTIN5boost16exception_detail10clone_implINS0_14bad_exception_EEE(%rip), %rsi
 18983      000000
 18984 0039 4889DF   		movq	%rbx, %rdi
 18985              	.LEHB115:
 18986 003c E8000000 		call	__cxa_throw@PLT
 18986      00
 18987              	.L938:
 18988 0041 4989C4   		movq	%rax, %r12
 494:/usr/include/boost/exception/exception.hpp ****                 }
 18989              		.loc 3 494 0
 18990 0044 4889DF   		movq	%rbx, %rdi
 18991 0047 E8000000 		call	__cxa_free_exception@PLT
 18991      00
 18992 004c 4C89E0   		movq	%r12, %rax
 18993 004f 4889C7   		movq	%rax, %rdi
 18994 0052 E8000000 		call	_Unwind_Resume@PLT
 18994      00
 18995              	.LEHE115:
 18996              		.cfi_endproc
 18997              	.LFE15541:
 18998              		.section	.gcc_except_table
 18999              	.LLSDA15541:
 19000 02b3 FF       		.byte	0xff
 19001 02b4 FF       		.byte	0xff
 19002 02b5 01       		.byte	0x1
 19003 02b6 08       		.uleb128 .LLSDACSE15541-.LLSDACSB15541
 19004              	.LLSDACSB15541:
 19005 02b7 26       		.uleb128 .LEHB114-.LFB15541
 19006 02b8 05       		.uleb128 .LEHE114-.LEHB114
 19007 02b9 41       		.uleb128 .L938-.LFB15541
 19008 02ba 00       		.uleb128 0
 19009 02bb 3C       		.uleb128 .LEHB115-.LFB15541
 19010 02bc 1B       		.uleb128 .LEHE115-.LEHB115
 19011 02bd 00       		.uleb128 0
 19012 02be 00       		.uleb128 0
 19013              	.LLSDACSE15541:
 19014              		.section	.text._ZNK5boost16exception_detail10clone_implINS0_14bad_exception_EE7rethrowEv,"axG",@pr
 19016              		.set	.LTHUNK265,_ZNK5boost16exception_detail10clone_implINS0_14bad_exception_EE7rethrowEv
 19017              		.weak	_ZTv0_n32_NK5boost16exception_detail10clone_implINS0_14bad_exception_EE7rethrowEv
 19019              	_ZTv0_n32_NK5boost16exception_detail10clone_implINS0_14bad_exception_EE7rethrowEv:
 19020              	.LFB15714:
 492:/usr/include/boost/exception/exception.hpp ****                 {
GAS LISTING /tmp/ccsIN87E.s 			page 729


 19021              		.loc 3 492 0 is_stmt 1
 19022              		.cfi_startproc
 19023 0057 4C8B17   		movq	(%rdi), %r10
 19024 005a 49037AE0 		addq	-32(%r10), %rdi
 19025 005e EBA0     		jmp	.LTHUNK265
 19026              		.cfi_endproc
 19027              	.LFE15714:
 19029              		.section	.text._ZNK5boost16exception_detail10clone_implINS0_10bad_alloc_EE5cloneEv,"axG",@progbits
 19030              		.align 2
 19031              		.weak	_ZNK5boost16exception_detail10clone_implINS0_10bad_alloc_EE5cloneEv
 19033              	_ZNK5boost16exception_detail10clone_implINS0_10bad_alloc_EE5cloneEv:
 19034              	.LFB15542:
 486:/usr/include/boost/exception/exception.hpp ****                 {
 19035              		.loc 3 486 0
 19036              		.cfi_startproc
 19037              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 19038              		.cfi_lsda 0x1b,.LLSDA15542
 19039 0000 55       		pushq	%rbp
 19040              		.cfi_def_cfa_offset 16
 19041              		.cfi_offset 6, -16
 19042 0001 4889E5   		movq	%rsp, %rbp
 19043              		.cfi_def_cfa_register 6
 19044 0004 4154     		pushq	%r12
 19045 0006 53       		pushq	%rbx
 19046 0007 4883EC20 		subq	$32, %rsp
 19047              		.cfi_offset 12, -24
 19048              		.cfi_offset 3, -32
 19049 000b 48897DD8 		movq	%rdi, -40(%rbp)
 488:/usr/include/boost/exception/exception.hpp ****                 }
 19050              		.loc 3 488 0
 19051 000f 8845EE   		movb	%al, -18(%rbp)
 19052 0012 BF380000 		movl	$56, %edi
 19052      00
 19053              	.LEHB116:
 19054 0017 E8000000 		call	_Znwm@PLT
 19054      00
 19055              	.LEHE116:
 19056 001c 4889C3   		movq	%rax, %rbx
 19057 001f 488B45D8 		movq	-40(%rbp), %rax
 19058 0023 4883EC08 		subq	$8, %rsp
 19059 0027 0FB655EE 		movzbl	-18(%rbp), %edx
 19060 002b 52       		pushq	%rdx
 19061 002c 4889C6   		movq	%rax, %rsi
 19062 002f 4889DF   		movq	%rbx, %rdi
 19063              	.LEHB117:
 19064              		.cfi_escape 0x2e,0x10
 19065 0032 E8000000 		call	_ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EEC1ERKS3_NS3_9clone_tagE
 19065      00
 19066              	.LEHE117:
 488:/usr/include/boost/exception/exception.hpp ****                 }
 19067              		.loc 3 488 0 is_stmt 0 discriminator 2
 19068 0037 4883C410 		addq	$16, %rsp
 19069 003b 4885DB   		testq	%rbx, %rbx
 19070 003e 740F     		je	.L940
 488:/usr/include/boost/exception/exception.hpp ****                 }
 19071              		.loc 3 488 0 discriminator 5
 19072 0040 488B03   		movq	(%rbx), %rax
GAS LISTING /tmp/ccsIN87E.s 			page 730


 19073 0043 4883E818 		subq	$24, %rax
 19074 0047 488B00   		movq	(%rax), %rax
 19075 004a 4801D8   		addq	%rbx, %rax
 19076 004d EB24     		jmp	.L947
 19077              	.L940:
 488:/usr/include/boost/exception/exception.hpp ****                 }
 19078              		.loc 3 488 0 discriminator 6
 19079 004f B8000000 		movl	$0, %eax
 19079      00
 19080 0054 EB1D     		jmp	.L947
 19081              	.L946:
 19082 0056 4989C4   		movq	%rax, %r12
 488:/usr/include/boost/exception/exception.hpp ****                 }
 19083              		.loc 3 488 0
 19084 0059 BE380000 		movl	$56, %esi
 19084      00
 19085 005e 4889DF   		movq	%rbx, %rdi
 19086 0061 E8000000 		call	_ZdlPvm@PLT
 19086      00
 19087 0066 4C89E0   		movq	%r12, %rax
 19088 0069 EB00     		jmp	.L944
 19089              	.L945:
 19090              	.L944:
 19091 006b 4889C7   		movq	%rax, %rdi
 19092              	.LEHB118:
 19093 006e E8000000 		call	_Unwind_Resume@PLT
 19093      00
 19094              	.LEHE118:
 19095              	.L947:
 489:/usr/include/boost/exception/exception.hpp **** 
 19096              		.loc 3 489 0 is_stmt 1
 19097 0073 488D65F0 		leaq	-16(%rbp), %rsp
 19098 0077 5B       		popq	%rbx
 19099 0078 415C     		popq	%r12
 19100 007a 5D       		popq	%rbp
 19101              		.cfi_def_cfa 7, 8
 19102 007b C3       		ret
 19103              		.cfi_endproc
 19104              	.LFE15542:
 19105              		.section	.gcc_except_table
 19106              	.LLSDA15542:
 19107 02bf FF       		.byte	0xff
 19108 02c0 FF       		.byte	0xff
 19109 02c1 01       		.byte	0x1
 19110 02c2 0C       		.uleb128 .LLSDACSE15542-.LLSDACSB15542
 19111              	.LLSDACSB15542:
 19112 02c3 17       		.uleb128 .LEHB116-.LFB15542
 19113 02c4 05       		.uleb128 .LEHE116-.LEHB116
 19114 02c5 6B       		.uleb128 .L945-.LFB15542
 19115 02c6 00       		.uleb128 0
 19116 02c7 32       		.uleb128 .LEHB117-.LFB15542
 19117 02c8 05       		.uleb128 .LEHE117-.LEHB117
 19118 02c9 56       		.uleb128 .L946-.LFB15542
 19119 02ca 00       		.uleb128 0
 19120 02cb 6E       		.uleb128 .LEHB118-.LFB15542
 19121 02cc 05       		.uleb128 .LEHE118-.LEHB118
 19122 02cd 00       		.uleb128 0
GAS LISTING /tmp/ccsIN87E.s 			page 731


 19123 02ce 00       		.uleb128 0
 19124              	.LLSDACSE15542:
 19125              		.section	.text._ZNK5boost16exception_detail10clone_implINS0_10bad_alloc_EE5cloneEv,"axG",@progbits
 19127              		.set	.LTHUNK266,_ZNK5boost16exception_detail10clone_implINS0_10bad_alloc_EE5cloneEv
 19128              		.weak	_ZTv0_n24_NK5boost16exception_detail10clone_implINS0_10bad_alloc_EE5cloneEv
 19130              	_ZTv0_n24_NK5boost16exception_detail10clone_implINS0_10bad_alloc_EE5cloneEv:
 19131              	.LFB15715:
 486:/usr/include/boost/exception/exception.hpp ****                 {
 19132              		.loc 3 486 0
 19133              		.cfi_startproc
 19134 007c 4C8B17   		movq	(%rdi), %r10
 19135 007f 49037AE8 		addq	-24(%r10), %rdi
 19136 0083 E978FFFF 		jmp	.LTHUNK266
 19136      FF
 19137              		.cfi_endproc
 19138              	.LFE15715:
 19140              		.section	.text._ZNK5boost16exception_detail10clone_implINS0_10bad_alloc_EE7rethrowEv,"axG",@progbi
 19141              		.align 2
 19142              		.weak	_ZNK5boost16exception_detail10clone_implINS0_10bad_alloc_EE7rethrowEv
 19144              	_ZNK5boost16exception_detail10clone_implINS0_10bad_alloc_EE7rethrowEv:
 19145              	.LFB15543:
 492:/usr/include/boost/exception/exception.hpp ****                 {
 19146              		.loc 3 492 0
 19147              		.cfi_startproc
 19148              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 19149              		.cfi_lsda 0x1b,.LLSDA15543
 19150 0000 55       		pushq	%rbp
 19151              		.cfi_def_cfa_offset 16
 19152              		.cfi_offset 6, -16
 19153 0001 4889E5   		movq	%rsp, %rbp
 19154              		.cfi_def_cfa_register 6
 19155 0004 4154     		pushq	%r12
 19156 0006 53       		pushq	%rbx
 19157 0007 4883EC10 		subq	$16, %rsp
 19158              		.cfi_offset 12, -24
 19159              		.cfi_offset 3, -32
 19160 000b 48897DE8 		movq	%rdi, -24(%rbp)
 494:/usr/include/boost/exception/exception.hpp ****                 }
 19161              		.loc 3 494 0
 19162 000f BF380000 		movl	$56, %edi
 19162      00
 19163 0014 E8000000 		call	__cxa_allocate_exception@PLT
 19163      00
 19164 0019 4889C3   		movq	%rax, %rbx
 19165 001c 488B45E8 		movq	-24(%rbp), %rax
 19166 0020 4889C6   		movq	%rax, %rsi
 19167 0023 4889DF   		movq	%rbx, %rdi
 19168              	.LEHB119:
 19169 0026 E8000000 		call	_ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EEC1ERKS3_
 19169      00
 19170              	.LEHE119:
 494:/usr/include/boost/exception/exception.hpp ****                 }
 19171              		.loc 3 494 0 is_stmt 0 discriminator 2
 19172 002b 488D1500 		leaq	_ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EED1Ev(%rip), %rdx
 19172      000000
 19173 0032 488D3500 		leaq	_ZTIN5boost16exception_detail10clone_implINS0_10bad_alloc_EEE(%rip), %rsi
 19173      000000
GAS LISTING /tmp/ccsIN87E.s 			page 732


 19174 0039 4889DF   		movq	%rbx, %rdi
 19175              	.LEHB120:
 19176 003c E8000000 		call	__cxa_throw@PLT
 19176      00
 19177              	.L950:
 19178 0041 4989C4   		movq	%rax, %r12
 494:/usr/include/boost/exception/exception.hpp ****                 }
 19179              		.loc 3 494 0
 19180 0044 4889DF   		movq	%rbx, %rdi
 19181 0047 E8000000 		call	__cxa_free_exception@PLT
 19181      00
 19182 004c 4C89E0   		movq	%r12, %rax
 19183 004f 4889C7   		movq	%rax, %rdi
 19184 0052 E8000000 		call	_Unwind_Resume@PLT
 19184      00
 19185              	.LEHE120:
 19186              		.cfi_endproc
 19187              	.LFE15543:
 19188              		.section	.gcc_except_table
 19189              	.LLSDA15543:
 19190 02cf FF       		.byte	0xff
 19191 02d0 FF       		.byte	0xff
 19192 02d1 01       		.byte	0x1
 19193 02d2 08       		.uleb128 .LLSDACSE15543-.LLSDACSB15543
 19194              	.LLSDACSB15543:
 19195 02d3 26       		.uleb128 .LEHB119-.LFB15543
 19196 02d4 05       		.uleb128 .LEHE119-.LEHB119
 19197 02d5 41       		.uleb128 .L950-.LFB15543
 19198 02d6 00       		.uleb128 0
 19199 02d7 3C       		.uleb128 .LEHB120-.LFB15543
 19200 02d8 1B       		.uleb128 .LEHE120-.LEHB120
 19201 02d9 00       		.uleb128 0
 19202 02da 00       		.uleb128 0
 19203              	.LLSDACSE15543:
 19204              		.section	.text._ZNK5boost16exception_detail10clone_implINS0_10bad_alloc_EE7rethrowEv,"axG",@progbi
 19206              		.set	.LTHUNK267,_ZNK5boost16exception_detail10clone_implINS0_10bad_alloc_EE7rethrowEv
 19207              		.weak	_ZTv0_n32_NK5boost16exception_detail10clone_implINS0_10bad_alloc_EE7rethrowEv
 19209              	_ZTv0_n32_NK5boost16exception_detail10clone_implINS0_10bad_alloc_EE7rethrowEv:
 19210              	.LFB15716:
 492:/usr/include/boost/exception/exception.hpp ****                 {
 19211              		.loc 3 492 0 is_stmt 1
 19212              		.cfi_startproc
 19213 0057 4C8B17   		movq	(%rdi), %r10
 19214 005a 49037AE0 		addq	-32(%r10), %rdi
 19215 005e EBA0     		jmp	.LTHUNK267
 19216              		.cfi_endproc
 19217              	.LFE15716:
 19219              		.section	.text._ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function
 19220              		.align 2
 19221              		.weak	_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEE
 19223              	_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEEC1ERKS5
 19224              	.LFB15624:
 464:/usr/include/boost/exception/exception.hpp ****                 T(x)
 19225              		.loc 3 464 0
 19226              		.cfi_startproc
 19227              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 19228              		.cfi_lsda 0x1b,.LLSDA15624
GAS LISTING /tmp/ccsIN87E.s 			page 733


 19229 0000 55       		pushq	%rbp
 19230              		.cfi_def_cfa_offset 16
 19231              		.cfi_offset 6, -16
 19232 0001 4889E5   		movq	%rsp, %rbp
 19233              		.cfi_def_cfa_register 6
 19234 0004 53       		pushq	%rbx
 19235 0005 4883EC18 		subq	$24, %rsp
 19236              		.cfi_offset 3, -24
 19237 0009 48897DE8 		movq	%rdi, -24(%rbp)
 19238 000d 488975E0 		movq	%rsi, -32(%rbp)
 19239              	.LBB158:
 465:/usr/include/boost/exception/exception.hpp ****                 {
 19240              		.loc 3 465 0
 19241 0011 488B45E8 		movq	-24(%rbp), %rax
 19242 0015 4883C038 		addq	$56, %rax
 19243 0019 4889C7   		movq	%rax, %rdi
 19244 001c E8000000 		call	_ZN5boost16exception_detail10clone_baseC2Ev
 19244      00
 19245 0021 488B55E0 		movq	-32(%rbp), %rdx
 19246 0025 488B45E8 		movq	-24(%rbp), %rax
 19247 0029 4889D6   		movq	%rdx, %rsi
 19248 002c 4889C7   		movq	%rax, %rdi
 19249              	.LEHB121:
 19250 002f E8000000 		call	_ZN5boost16exception_detail19error_info_injectorINS_17bad_function_callEEC2ERKS3_
 19250      00
 19251              	.LEHE121:
 465:/usr/include/boost/exception/exception.hpp ****                 {
 19252              		.loc 3 465 0 is_stmt 0 discriminator 5
 19253 0034 488D1500 		leaq	24+_ZTVN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_call
 19253      000000
 19254 003b 488B45E8 		movq	-24(%rbp), %rax
 19255 003f 488910   		movq	%rdx, (%rax)
 19256 0042 488D1500 		leaq	80+_ZTVN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_call
 19256      000000
 19257 0049 488B45E8 		movq	-24(%rbp), %rax
 19258 004d 48895010 		movq	%rdx, 16(%rax)
 19259 0051 488B45E8 		movq	-24(%rbp), %rax
 19260 0055 488D5038 		leaq	56(%rax), %rdx
 19261 0059 488D0500 		leaq	136+_ZTVN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_cal
 19261      000000
 19262 0060 488902   		movq	%rax, (%rdx)
 467:/usr/include/boost/exception/exception.hpp ****                 }
 19263              		.loc 3 467 0 is_stmt 1 discriminator 5
 19264 0063 488B45E0 		movq	-32(%rbp), %rax
 19265 0067 488D5010 		leaq	16(%rax), %rdx
 19266 006b 488B45E8 		movq	-24(%rbp), %rax
 19267 006f 4883C010 		addq	$16, %rax
 19268 0073 4889D6   		movq	%rdx, %rsi
 19269 0076 4889C7   		movq	%rax, %rdi
 19270              	.LEHB122:
 19271 0079 E8000000 		call	_ZN5boost16exception_detail20copy_boost_exceptionEPNS_9exceptionEPKS1_
 19271      00
 19272              	.LEHE122:
 19273              	.LBE158:
 468:/usr/include/boost/exception/exception.hpp **** 
 19274              		.loc 3 468 0
 19275 007e EB2F     		jmp	.L957
GAS LISTING /tmp/ccsIN87E.s 			page 734


 19276              	.L955:
 19277 0080 4889C3   		movq	%rax, %rbx
 19278              	.LBB159:
 465:/usr/include/boost/exception/exception.hpp ****                 {
 19279              		.loc 3 465 0
 19280 0083 488B45E8 		movq	-24(%rbp), %rax
 19281 0087 4889C7   		movq	%rax, %rdi
 19282 008a E8000000 		call	_ZN5boost16exception_detail19error_info_injectorINS_17bad_function_callEED2Ev
 19282      00
 19283 008f EB03     		jmp	.L956
 19284              	.L954:
 19285 0091 4889C3   		movq	%rax, %rbx
 19286              	.L956:
 465:/usr/include/boost/exception/exception.hpp ****                 {
 19287              		.loc 3 465 0 is_stmt 0 discriminator 6
 19288 0094 488B45E8 		movq	-24(%rbp), %rax
 19289 0098 4883C038 		addq	$56, %rax
 19290 009c 4889C7   		movq	%rax, %rdi
 19291 009f E8000000 		call	_ZN5boost16exception_detail10clone_baseD2Ev
 19291      00
 19292 00a4 4889D8   		movq	%rbx, %rax
 19293 00a7 4889C7   		movq	%rax, %rdi
 19294              	.LEHB123:
 19295 00aa E8000000 		call	_Unwind_Resume@PLT
 19295      00
 19296              	.LEHE123:
 19297              	.L957:
 19298              	.LBE159:
 468:/usr/include/boost/exception/exception.hpp **** 
 19299              		.loc 3 468 0 is_stmt 1
 19300 00af 4883C418 		addq	$24, %rsp
 19301 00b3 5B       		popq	%rbx
 19302 00b4 5D       		popq	%rbp
 19303              		.cfi_def_cfa 7, 8
 19304 00b5 C3       		ret
 19305              		.cfi_endproc
 19306              	.LFE15624:
 19307              		.section	.gcc_except_table
 19308              	.LLSDA15624:
 19309 02db FF       		.byte	0xff
 19310 02dc FF       		.byte	0xff
 19311 02dd 01       		.byte	0x1
 19312 02de 0F       		.uleb128 .LLSDACSE15624-.LLSDACSB15624
 19313              	.LLSDACSB15624:
 19314 02df 2F       		.uleb128 .LEHB121-.LFB15624
 19315 02e0 05       		.uleb128 .LEHE121-.LEHB121
 19316 02e1 9101     		.uleb128 .L954-.LFB15624
 19317 02e3 00       		.uleb128 0
 19318 02e4 79       		.uleb128 .LEHB122-.LFB15624
 19319 02e5 05       		.uleb128 .LEHE122-.LEHB122
 19320 02e6 8001     		.uleb128 .L955-.LFB15624
 19321 02e8 00       		.uleb128 0
 19322 02e9 AA01     		.uleb128 .LEHB123-.LFB15624
 19323 02eb 05       		.uleb128 .LEHE123-.LEHB123
 19324 02ec 00       		.uleb128 0
 19325 02ed 00       		.uleb128 0
 19326              	.LLSDACSE15624:
GAS LISTING /tmp/ccsIN87E.s 			page 735


 19327              		.section	.text._ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function
 19329              		.section	.text._ZN5boost16exception_detail10clone_implINS0_14bad_exception_EEC1ERKS3_NS3_9clone_ta
 19330              		.align 2
 19331              		.weak	_ZN5boost16exception_detail10clone_implINS0_14bad_exception_EEC1ERKS3_NS3_9clone_tagE
 19333              	_ZN5boost16exception_detail10clone_implINS0_14bad_exception_EEC1ERKS3_NS3_9clone_tagE:
 19334              	.LFB15642:
 464:/usr/include/boost/exception/exception.hpp ****                 T(x)
 19335              		.loc 3 464 0
 19336              		.cfi_startproc
 19337              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 19338              		.cfi_lsda 0x1b,.LLSDA15642
 19339 0000 55       		pushq	%rbp
 19340              		.cfi_def_cfa_offset 16
 19341              		.cfi_offset 6, -16
 19342 0001 4889E5   		movq	%rsp, %rbp
 19343              		.cfi_def_cfa_register 6
 19344 0004 53       		pushq	%rbx
 19345 0005 4883EC18 		subq	$24, %rsp
 19346              		.cfi_offset 3, -24
 19347 0009 48897DE8 		movq	%rdi, -24(%rbp)
 19348 000d 488975E0 		movq	%rsi, -32(%rbp)
 19349              	.LBB160:
 465:/usr/include/boost/exception/exception.hpp ****                 {
 19350              		.loc 3 465 0
 19351 0011 488B45E8 		movq	-24(%rbp), %rax
 19352 0015 4883C030 		addq	$48, %rax
 19353 0019 4889C7   		movq	%rax, %rdi
 19354 001c E8000000 		call	_ZN5boost16exception_detail10clone_baseC2Ev
 19354      00
 19355 0021 488B55E0 		movq	-32(%rbp), %rdx
 19356 0025 488B45E8 		movq	-24(%rbp), %rax
 19357 0029 4889D6   		movq	%rdx, %rsi
 19358 002c 4889C7   		movq	%rax, %rdi
 19359              	.LEHB124:
 19360 002f E8000000 		call	_ZN5boost16exception_detail14bad_exception_C2ERKS1_
 19360      00
 19361              	.LEHE124:
 465:/usr/include/boost/exception/exception.hpp ****                 {
 19362              		.loc 3 465 0 is_stmt 0 discriminator 5
 19363 0034 488D1500 		leaq	24+_ZTVN5boost16exception_detail10clone_implINS0_14bad_exception_EEE(%rip), %rdx
 19363      000000
 19364 003b 488B45E8 		movq	-24(%rbp), %rax
 19365 003f 488910   		movq	%rdx, (%rax)
 19366 0042 488D1500 		leaq	72+_ZTVN5boost16exception_detail10clone_implINS0_14bad_exception_EEE(%rip), %rdx
 19366      000000
 19367 0049 488B45E8 		movq	-24(%rbp), %rax
 19368 004d 48895028 		movq	%rdx, 40(%rax)
 19369 0051 488B45E8 		movq	-24(%rbp), %rax
 19370 0055 488D5030 		leaq	48(%rax), %rdx
 19371 0059 488D0500 		leaq	136+_ZTVN5boost16exception_detail10clone_implINS0_14bad_exception_EEE(%rip), %rax
 19371      000000
 19372 0060 488902   		movq	%rax, (%rdx)
 467:/usr/include/boost/exception/exception.hpp ****                 }
 19373              		.loc 3 467 0 is_stmt 1 discriminator 5
 19374 0063 488B55E0 		movq	-32(%rbp), %rdx
 19375 0067 488B45E8 		movq	-24(%rbp), %rax
 19376 006b 4889D6   		movq	%rdx, %rsi
GAS LISTING /tmp/ccsIN87E.s 			page 736


 19377 006e 4889C7   		movq	%rax, %rdi
 19378              	.LEHB125:
 19379 0071 E8000000 		call	_ZN5boost16exception_detail20copy_boost_exceptionEPNS_9exceptionEPKS1_
 19379      00
 19380              	.LEHE125:
 19381              	.LBE160:
 468:/usr/include/boost/exception/exception.hpp **** 
 19382              		.loc 3 468 0
 19383 0076 EB2F     		jmp	.L964
 19384              	.L962:
 19385 0078 4889C3   		movq	%rax, %rbx
 19386              	.LBB161:
 465:/usr/include/boost/exception/exception.hpp ****                 {
 19387              		.loc 3 465 0
 19388 007b 488B45E8 		movq	-24(%rbp), %rax
 19389 007f 4889C7   		movq	%rax, %rdi
 19390 0082 E8000000 		call	_ZN5boost16exception_detail14bad_exception_D2Ev
 19390      00
 19391 0087 EB03     		jmp	.L963
 19392              	.L961:
 19393 0089 4889C3   		movq	%rax, %rbx
 19394              	.L963:
 465:/usr/include/boost/exception/exception.hpp ****                 {
 19395              		.loc 3 465 0 is_stmt 0 discriminator 6
 19396 008c 488B45E8 		movq	-24(%rbp), %rax
 19397 0090 4883C030 		addq	$48, %rax
 19398 0094 4889C7   		movq	%rax, %rdi
 19399 0097 E8000000 		call	_ZN5boost16exception_detail10clone_baseD2Ev
 19399      00
 19400 009c 4889D8   		movq	%rbx, %rax
 19401 009f 4889C7   		movq	%rax, %rdi
 19402              	.LEHB126:
 19403 00a2 E8000000 		call	_Unwind_Resume@PLT
 19403      00
 19404              	.LEHE126:
 19405              	.L964:
 19406              	.LBE161:
 468:/usr/include/boost/exception/exception.hpp **** 
 19407              		.loc 3 468 0 is_stmt 1
 19408 00a7 4883C418 		addq	$24, %rsp
 19409 00ab 5B       		popq	%rbx
 19410 00ac 5D       		popq	%rbp
 19411              		.cfi_def_cfa 7, 8
 19412 00ad C3       		ret
 19413              		.cfi_endproc
 19414              	.LFE15642:
 19415              		.section	.gcc_except_table
 19416              	.LLSDA15642:
 19417 02ee FF       		.byte	0xff
 19418 02ef FF       		.byte	0xff
 19419 02f0 01       		.byte	0x1
 19420 02f1 0E       		.uleb128 .LLSDACSE15642-.LLSDACSB15642
 19421              	.LLSDACSB15642:
 19422 02f2 2F       		.uleb128 .LEHB124-.LFB15642
 19423 02f3 05       		.uleb128 .LEHE124-.LEHB124
 19424 02f4 8901     		.uleb128 .L961-.LFB15642
 19425 02f6 00       		.uleb128 0
GAS LISTING /tmp/ccsIN87E.s 			page 737


 19426 02f7 71       		.uleb128 .LEHB125-.LFB15642
 19427 02f8 05       		.uleb128 .LEHE125-.LEHB125
 19428 02f9 78       		.uleb128 .L962-.LFB15642
 19429 02fa 00       		.uleb128 0
 19430 02fb A201     		.uleb128 .LEHB126-.LFB15642
 19431 02fd 05       		.uleb128 .LEHE126-.LEHB126
 19432 02fe 00       		.uleb128 0
 19433 02ff 00       		.uleb128 0
 19434              	.LLSDACSE15642:
 19435              		.section	.text._ZN5boost16exception_detail10clone_implINS0_14bad_exception_EEC1ERKS3_NS3_9clone_ta
 19437              		.section	.text._ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EEC1ERKS3_NS3_9clone_tagE,"
 19438              		.align 2
 19439              		.weak	_ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EEC1ERKS3_NS3_9clone_tagE
 19441              	_ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EEC1ERKS3_NS3_9clone_tagE:
 19442              	.LFB15645:
 464:/usr/include/boost/exception/exception.hpp ****                 T(x)
 19443              		.loc 3 464 0
 19444              		.cfi_startproc
 19445              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 19446              		.cfi_lsda 0x1b,.LLSDA15645
 19447 0000 55       		pushq	%rbp
 19448              		.cfi_def_cfa_offset 16
 19449              		.cfi_offset 6, -16
 19450 0001 4889E5   		movq	%rsp, %rbp
 19451              		.cfi_def_cfa_register 6
 19452 0004 53       		pushq	%rbx
 19453 0005 4883EC18 		subq	$24, %rsp
 19454              		.cfi_offset 3, -24
 19455 0009 48897DE8 		movq	%rdi, -24(%rbp)
 19456 000d 488975E0 		movq	%rsi, -32(%rbp)
 19457              	.LBB162:
 465:/usr/include/boost/exception/exception.hpp ****                 {
 19458              		.loc 3 465 0
 19459 0011 488B45E8 		movq	-24(%rbp), %rax
 19460 0015 4883C030 		addq	$48, %rax
 19461 0019 4889C7   		movq	%rax, %rdi
 19462 001c E8000000 		call	_ZN5boost16exception_detail10clone_baseC2Ev
 19462      00
 19463 0021 488B55E0 		movq	-32(%rbp), %rdx
 19464 0025 488B45E8 		movq	-24(%rbp), %rax
 19465 0029 4889D6   		movq	%rdx, %rsi
 19466 002c 4889C7   		movq	%rax, %rdi
 19467              	.LEHB127:
 19468 002f E8000000 		call	_ZN5boost16exception_detail10bad_alloc_C2ERKS1_
 19468      00
 19469              	.LEHE127:
 465:/usr/include/boost/exception/exception.hpp ****                 {
 19470              		.loc 3 465 0 is_stmt 0 discriminator 5
 19471 0034 488D1500 		leaq	24+_ZTVN5boost16exception_detail10clone_implINS0_10bad_alloc_EEE(%rip), %rdx
 19471      000000
 19472 003b 488B45E8 		movq	-24(%rbp), %rax
 19473 003f 488910   		movq	%rdx, (%rax)
 19474 0042 488D1500 		leaq	72+_ZTVN5boost16exception_detail10clone_implINS0_10bad_alloc_EEE(%rip), %rdx
 19474      000000
 19475 0049 488B45E8 		movq	-24(%rbp), %rax
 19476 004d 48895028 		movq	%rdx, 40(%rax)
 19477 0051 488B45E8 		movq	-24(%rbp), %rax
GAS LISTING /tmp/ccsIN87E.s 			page 738


 19478 0055 488D5030 		leaq	48(%rax), %rdx
 19479 0059 488D0500 		leaq	136+_ZTVN5boost16exception_detail10clone_implINS0_10bad_alloc_EEE(%rip), %rax
 19479      000000
 19480 0060 488902   		movq	%rax, (%rdx)
 467:/usr/include/boost/exception/exception.hpp ****                 }
 19481              		.loc 3 467 0 is_stmt 1 discriminator 5
 19482 0063 488B55E0 		movq	-32(%rbp), %rdx
 19483 0067 488B45E8 		movq	-24(%rbp), %rax
 19484 006b 4889D6   		movq	%rdx, %rsi
 19485 006e 4889C7   		movq	%rax, %rdi
 19486              	.LEHB128:
 19487 0071 E8000000 		call	_ZN5boost16exception_detail20copy_boost_exceptionEPNS_9exceptionEPKS1_
 19487      00
 19488              	.LEHE128:
 19489              	.LBE162:
 468:/usr/include/boost/exception/exception.hpp **** 
 19490              		.loc 3 468 0
 19491 0076 EB2F     		jmp	.L971
 19492              	.L969:
 19493 0078 4889C3   		movq	%rax, %rbx
 19494              	.LBB163:
 465:/usr/include/boost/exception/exception.hpp ****                 {
 19495              		.loc 3 465 0
 19496 007b 488B45E8 		movq	-24(%rbp), %rax
 19497 007f 4889C7   		movq	%rax, %rdi
 19498 0082 E8000000 		call	_ZN5boost16exception_detail10bad_alloc_D2Ev
 19498      00
 19499 0087 EB03     		jmp	.L970
 19500              	.L968:
 19501 0089 4889C3   		movq	%rax, %rbx
 19502              	.L970:
 465:/usr/include/boost/exception/exception.hpp ****                 {
 19503              		.loc 3 465 0 is_stmt 0 discriminator 6
 19504 008c 488B45E8 		movq	-24(%rbp), %rax
 19505 0090 4883C030 		addq	$48, %rax
 19506 0094 4889C7   		movq	%rax, %rdi
 19507 0097 E8000000 		call	_ZN5boost16exception_detail10clone_baseD2Ev
 19507      00
 19508 009c 4889D8   		movq	%rbx, %rax
 19509 009f 4889C7   		movq	%rax, %rdi
 19510              	.LEHB129:
 19511 00a2 E8000000 		call	_Unwind_Resume@PLT
 19511      00
 19512              	.LEHE129:
 19513              	.L971:
 19514              	.LBE163:
 468:/usr/include/boost/exception/exception.hpp **** 
 19515              		.loc 3 468 0 is_stmt 1
 19516 00a7 4883C418 		addq	$24, %rsp
 19517 00ab 5B       		popq	%rbx
 19518 00ac 5D       		popq	%rbp
 19519              		.cfi_def_cfa 7, 8
 19520 00ad C3       		ret
 19521              		.cfi_endproc
 19522              	.LFE15645:
 19523              		.section	.gcc_except_table
 19524              	.LLSDA15645:
GAS LISTING /tmp/ccsIN87E.s 			page 739


 19525 0300 FF       		.byte	0xff
 19526 0301 FF       		.byte	0xff
 19527 0302 01       		.byte	0x1
 19528 0303 0E       		.uleb128 .LLSDACSE15645-.LLSDACSB15645
 19529              	.LLSDACSB15645:
 19530 0304 2F       		.uleb128 .LEHB127-.LFB15645
 19531 0305 05       		.uleb128 .LEHE127-.LEHB127
 19532 0306 8901     		.uleb128 .L968-.LFB15645
 19533 0308 00       		.uleb128 0
 19534 0309 71       		.uleb128 .LEHB128-.LFB15645
 19535 030a 05       		.uleb128 .LEHE128-.LEHB128
 19536 030b 78       		.uleb128 .L969-.LFB15645
 19537 030c 00       		.uleb128 0
 19538 030d A201     		.uleb128 .LEHB129-.LFB15645
 19539 030f 05       		.uleb128 .LEHE129-.LEHB129
 19540 0310 00       		.uleb128 0
 19541 0311 00       		.uleb128 0
 19542              	.LLSDACSE15645:
 19543              		.section	.text._ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EEC1ERKS3_NS3_9clone_tagE,"
 19545              		.text
 19547              	_GLOBAL__sub_I__ZN2gr5lfast7costas24makeEfi:
 19548              	.LFB15688:
 19549              		.loc 22 432 0
 19550              		.cfi_startproc
 19551 1943 55       		pushq	%rbp
 19552              		.cfi_def_cfa_offset 16
 19553              		.cfi_offset 6, -16
 19554 1944 4889E5   		movq	%rsp, %rbp
 19555              		.cfi_def_cfa_register 6
 19556              		.loc 22 432 0
 19557 1947 BEFFFF00 		movl	$65535, %esi
 19557      00
 19558 194c BF010000 		movl	$1, %edi
 19558      00
 19559 1951 E8DCFEFF 		call	_Z41__static_initialization_and_destruction_0ii
 19559      FF
 19560 1956 5D       		popq	%rbp
 19561              		.cfi_def_cfa 7, 8
 19562 1957 C3       		ret
 19563              		.cfi_endproc
 19564              	.LFE15688:
 19566              		.section	.init_array,"aw"
 19567              		.align 8
 19568 0000 00000000 		.quad	_GLOBAL__sub_I__ZN2gr5lfast7costas24makeEfi
 19568      00000000 
 19569              		.section	.rodata
 19570 009e 0000     		.align 32
 19573              	_ZZN5boost16exception_detail27get_static_exception_objectINS0_10bad_alloc_EEENS_13exception_ptrEvE1
 19574 00a0 626F6F73 		.string	"boost::exception_ptr boost::exception_detail::get_static_exception_object() [with Excepti
 19574      743A3A65 
 19574      78636570 
 19574      74696F6E 
 19574      5F707472 
 19575 0123 00000000 		.align 32
 19575      00000000 
 19575      00000000 
 19575      00000000 
GAS LISTING /tmp/ccsIN87E.s 			page 740


 19575      00000000 
 19578              	_ZZN5boost16exception_detail27get_static_exception_objectINS0_14bad_exception_EEENS_13exception_ptr
 19579 0140 626F6F73 		.string	"boost::exception_ptr boost::exception_detail::get_static_exception_object() [with Excepti
 19579      743A3A65 
 19579      78636570 
 19579      74696F6E 
 19579      5F707472 
 19580 01c7 00000000 		.align 16
 19580      00000000 
 19580      00
 19581              	.LC0:
 19582 01d0 FFFFFF7F 		.long	2147483647
 19583 01d4 00000000 		.long	0
 19584 01d8 00000000 		.long	0
 19585 01dc 00000000 		.long	0
 19586              		.align 4
 19587              	.LC3:
 19588 01e0 0000003F 		.long	1056964608
 19589              		.align 4
 19590              	.LC5:
 19591 01e4 0000803F 		.long	1065353216
 19592              		.align 4
 19593              	.LC7:
 19594 01e8 000080BF 		.long	3212836864
 19595              		.align 4
 19596              	.LC8:
 19597 01ec 00002041 		.long	1092616192
 19598              		.align 16
 19599              	.LC10:
 19600 01f0 00000080 		.long	2147483648
 19601 01f4 00000000 		.long	0
 19602 01f8 00000000 		.long	0
 19603 01fc 00000000 		.long	0
 19604              		.align 8
 19605              	.LC11:
 19606 0200 182D4454 		.long	1413754136
 19607 0204 FB211940 		.long	1075388923
 19608              		.align 8
 19609              	.LC12:
 19610 0208 182D4454 		.long	1413754136
 19611 020c FB2119C0 		.long	-1072094725
 19612              		.text
 19613              	.Letext0:
 19614              		.file 52 "/usr/include/c++/6/bits/basic_string.h"
 19615              		.file 53 "/usr/include/c++/6/bits/basic_string.tcc"
 19616              		.file 54 "/usr/include/c++/6/bits/stringfwd.h"
 19617              		.file 55 "/usr/include/c++/6/cstddef"
 19618              		.file 56 "/usr/include/c++/6/cstdlib"
 19619              		.file 57 "/usr/include/c++/6/type_traits"
 19620              		.file 58 "/usr/include/c++/6/bits/stl_iterator_base_types.h"
 19621              		.file 59 "/usr/include/c++/6/debug/debug.h"
 19622              		.file 60 "/usr/include/x86_64-linux-gnu/c++/6/bits/c++config.h"
 19623              		.file 61 "/usr/include/c++/6/bits/exception_ptr.h"
 19624              		.file 62 "/usr/include/c++/6/cwchar"
 19625              		.file 63 "/usr/include/c++/6/bits/uses_allocator.h"
 19626              		.file 64 "/usr/include/c++/6/utility"
 19627              		.file 65 "/usr/include/c++/6/bits/char_traits.h"
GAS LISTING /tmp/ccsIN87E.s 			page 741


 19628              		.file 66 "/usr/include/c++/6/cstdint"
 19629              		.file 67 "/usr/include/c++/6/clocale"
 19630              		.file 68 "/usr/include/c++/6/cstdio"
 19631              		.file 69 "/usr/include/c++/6/initializer_list"
 19632              		.file 70 "/usr/include/c++/6/functional"
 19633              		.file 71 "/usr/include/c++/6/bits/shared_ptr_base.h"
 19634              		.file 72 "/usr/include/c++/6/bits/algorithmfwd.h"
 19635              		.file 73 "/usr/include/c++/6/bits/stl_algo.h"
 19636              		.file 74 "/usr/include/c++/6/system_error"
 19637              		.file 75 "/usr/include/c++/6/bits/ios_base.h"
 19638              		.file 76 "/usr/include/c++/6/cwctype"
 19639              		.file 77 "/usr/include/c++/6/cstring"
 19640              		.file 78 "/usr/include/c++/6/ctime"
 19641              		.file 79 "/usr/include/c++/6/iosfwd"
 19642              		.file 80 "/usr/include/c++/6/bits/uniform_int_dist.h"
 19643              		.file 81 "/usr/include/c++/6/bits/stl_deque.h"
 19644              		.file 82 "/usr/include/c++/6/bits/deque.tcc"
 19645              		.file 83 "/usr/include/c++/6/bits/ptr_traits.h"
 19646              		.file 84 "/usr/include/c++/6/bits/shared_ptr.h"
 19647              		.file 85 "/usr/include/c++/6/memory"
 19648              		.file 86 "/usr/include/c++/6/cstdarg"
 19649              		.file 87 "/usr/include/c++/6/bits/stl_iterator_base_funcs.h"
 19650              		.file 88 "/usr/include/c++/6/bits/predefined_ops.h"
 19651              		.file 89 "/usr/include/c++/6/ext/numeric_traits.h"
 19652              		.file 90 "/usr/include/c++/6/ext/concurrence.h"
 19653              		.file 91 "/usr/include/c++/6/ext/type_traits.h"
 19654              		.file 92 "/usr/lib/gcc/x86_64-linux-gnu/6/include/stddef.h"
 19655              		.file 93 "/usr/include/x86_64-linux-gnu/bits/types.h"
 19656              		.file 94 "/usr/include/unistd.h"
 19657              		.file 95 "/usr/include/getopt.h"
 19658              		.file 96 "/usr/include/stdlib.h"
 19659              		.file 97 "/usr/include/time.h"
 19660              		.file 98 "/usr/include/x86_64-linux-gnu/sys/types.h"
 19661              		.file 99 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h"
 19662              		.file 100 "/usr/include/stdio.h"
 19663              		.file 101 "/usr/include/libio.h"
 19664              		.file 102 "/usr/lib/gcc/x86_64-linux-gnu/6/include/stdarg.h"
 19665              		.file 103 "<built-in>"
 19666              		.file 104 "/usr/include/wchar.h"
 19667              		.file 105 "/usr/include/pthread.h"
 19668              		.file 106 "/usr/include/x86_64-linux-gnu/c++/6/bits/atomic_word.h"
 19669              		.file 107 "/usr/include/stdint.h"
 19670              		.file 108 "/usr/include/locale.h"
 19671              		.file 109 "/usr/include/_G_config.h"
 19672              		.file 110 "/usr/include/x86_64-linux-gnu/bits/sys_errlist.h"
 19673              		.file 111 "/usr/include/errno.h"
 19674              		.file 112 "/usr/include/boost/config/suffix.hpp"
 19675              		.file 113 "/usr/include/boost/exception/detail/type_info.hpp"
 19676              		.file 114 "/usr/include/boost/exception/detail/error_info_impl.hpp"
 19677              		.file 115 "/usr/include/boost/exception/detail/clone_current_exception.hpp"
 19678              		.file 116 "/usr/include/boost/core/demangle.hpp"
 19679              		.file 117 "/usr/include/boost/core/typeinfo.hpp"
 19680              		.file 118 "/usr/include/boost/current_function.hpp"
 19681              		.file 119 "/usr/include/boost/detail/sp_typeinfo.hpp"
 19682              		.file 120 "/usr/include/boost/smart_ptr/detail/sp_convertible.hpp"
 19683              		.file 121 "/usr/include/boost/smart_ptr/detail/spinlock_sync.hpp"
 19684              		.file 122 "/usr/include/boost/smart_ptr/detail/sp_nullptr_t.hpp"
GAS LISTING /tmp/ccsIN87E.s 			page 742


 19685              		.file 123 "/usr/include/boost/smart_ptr/detail/spinlock_pool.hpp"
 19686              		.file 124 "/usr/include/boost/integer_traits.hpp"
 19687              		.file 125 "/usr/include/boost/integer/static_log2.hpp"
 19688              		.file 126 "/usr/include/boost/type_traits/detail/has_binary_operator.hpp"
 19689              		.file 127 "/usr/include/boost/detail/indirect_traits.hpp"
 19690              		.file 128 "/usr/include/boost/thread/detail/nullary_function.hpp"
 19691              		.file 129 "/usr/include/boost/smart_ptr/detail/operator_bool.hpp"
 19692              		.file 130 "/usr/include/boost/type_traits/integral_constant.hpp"
 19693              		.file 131 "/usr/include/boost/mpl/aux_/adl_barrier.hpp"
 19694              		.file 132 "/usr/include/boost/mpl/aux_/value_wknd.hpp"
 19695              		.file 133 "/usr/include/boost/mpl/void_fwd.hpp"
 19696              		.file 134 "/usr/include/boost/mpl/bool_fwd.hpp"
 19697              		.file 135 "/usr/include/boost/mpl/integral_c_tag.hpp"
 19698              		.file 136 "/usr/include/boost/mpl/aux_/na_fwd.hpp"
 19699              		.file 137 "/usr/include/boost/mpl/aux_/preprocessed/gcc/placeholders.hpp"
 19700              		.file 138 "/usr/include/boost/type_index/type_index_facade.hpp"
 19701              		.file 139 "/usr/include/boost/type_index/stl_type_index.hpp"
 19702              		.file 140 "/usr/include/boost/type_index.hpp"
 19703              		.file 141 "/usr/include/boost/cstdint.hpp"
 19704              		.file 142 "/usr/include/boost/core/noncopyable.hpp"
 19705              		.file 143 "/usr/include/boost/type_traits/detail/is_function_ptr_helper.hpp"
 19706              		.file 144 "/usr/include/boost/type_traits/detail/yes_no_type.hpp"
 19707              		.file 145 "/usr/include/boost/type_traits/integral_promotion.hpp"
 19708              		.file 146 "/usr/include/boost/move/core.hpp"
 19709              		.file 147 "/usr/include/boost/move/detail/meta_utils.hpp"
 19710              		.file 148 "/usr/include/boost/thread/lock_options.hpp"
 19711              		.file 149 "/usr/include/boost/date_time/c_time.hpp"
 19712              		.file 150 "/usr/include/boost/date_time/time_defs.hpp"
 19713              		.file 151 "/usr/include/boost/date_time/special_defs.hpp"
 19714              		.file 152 "/usr/include/boost/date_time/time_resolution_traits.hpp"
 19715              		.file 153 "/usr/include/boost/date_time/int_adapter.hpp"
 19716              		.file 154 "/usr/include/boost/date_time/date_defs.hpp"
 19717              		.file 155 "/usr/include/boost/date_time/year_month_day.hpp"
 19718              		.file 156 "/usr/include/boost/date_time/gregorian_calendar.hpp"
 19719              		.file 157 "/usr/include/boost/date_time/gregorian_calendar.ipp"
 19720              		.file 158 "/usr/include/boost/date_time/date_duration.hpp"
 19721              		.file 159 "/usr/include/boost/date_time/date.hpp"
 19722              		.file 160 "/usr/include/boost/date_time/time_duration.hpp"
 19723              		.file 161 "/usr/include/boost/date_time/time_system_counted.hpp"
 19724              		.file 162 "/usr/include/boost/date_time/time.hpp"
 19725              		.file 163 "/usr/include/boost/operators.hpp"
 19726              		.file 164 "/usr/include/boost/date_time/constrained_value.hpp"
 19727              		.file 165 "/usr/include/boost/date_time/gregorian/greg_weekday.hpp"
 19728              		.file 166 "/usr/include/boost/date_time/gregorian/greg_day.hpp"
 19729              		.file 167 "/usr/include/boost/date_time/gregorian/greg_year.hpp"
 19730              		.file 168 "/usr/include/boost/date_time/gregorian/greg_month.hpp"
 19731              		.file 169 "/usr/include/boost/date_time/gregorian/greg_calendar.hpp"
 19732              		.file 170 "/usr/include/boost/date_time/gregorian/greg_day_of_year.hpp"
 19733              		.file 171 "/usr/include/boost/date_time/gregorian/greg_duration.hpp"
 19734              		.file 172 "/usr/include/boost/date_time/gregorian/greg_date.hpp"
 19735              		.file 173 "/usr/include/boost/date_time/posix_time/posix_time_config.hpp"
 19736              		.file 174 "/usr/include/boost/date_time/posix_time/ptime.hpp"
 19737              		.file 175 "/usr/include/boost/ratio/detail/overflow_helpers.hpp"
 19738              		.file 176 "/usr/include/boost/type_traits/add_rvalue_reference.hpp"
 19739              		.file 177 "/usr/include/boost/chrono/detail/is_evenly_divisible_by.hpp"
 19740              		.file 178 "/usr/include/boost/chrono/duration.hpp"
 19741              		.file 179 "/usr/include/boost/chrono/system_clocks.hpp"
GAS LISTING /tmp/ccsIN87E.s 			page 743


 19742              		.file 180 "/usr/include/boost/chrono/time_point.hpp"
 19743              		.file 181 "/usr/include/boost/thread/xtime.hpp"
 19744              		.file 182 "/usr/include/boost/thread/thread_time.hpp"
 19745              		.file 183 "/usr/include/boost/ratio/ratio.hpp"
 19746              		.file 184 "/usr/include/boost/thread/pthread/pthread_mutex_scoped_lock.hpp"
 19747              		.file 185 "/usr/include/boost/thread/pthread/mutex.hpp"
 19748              		.file 186 "/usr/include/boost/thread/lock_types.hpp"
 19749              		.file 187 "/usr/include/boost/thread/pthread/condition_variable_fwd.hpp"
 19750              		.file 188 "/usr/include/boost/thread/detail/move.hpp"
 19751              		.file 189 "/usr/include/boost/bind/storage.hpp"
 19752              		.file 190 "/usr/include/boost/bind/arg.hpp"
 19753              		.file 191 "/usr/include/boost/bind/placeholders.hpp"
 19754              		.file 192 "/usr/include/boost/io_fwd.hpp"
 19755              		.file 193 "/usr/include/boost/io/detail/quoted_manip.hpp"
 19756              		.file 194 "/usr/include/boost/integer_fwd.hpp"
 19757              		.file 195 "/usr/include/boost/functional/hash/detail/float_functions.hpp"
 19758              		.file 196 "/usr/include/boost/thread/pthread/thread_data.hpp"
 19759              		.file 197 "/usr/include/boost/thread/pthread/condition_variable.hpp"
 19760              		.file 198 "/usr/include/boost/move/detail/unique_ptr_meta_utils.hpp"
 19761              		.file 199 "/usr/include/boost/move/default_delete.hpp"
 19762              		.file 200 "/usr/include/boost/range/detail/sfinae.hpp"
 19763              		.file 201 "/usr/include/boost/range/end.hpp"
 19764              		.file 202 "/usr/include/boost/range/begin.hpp"
 19765              		.file 203 "/usr/include/boost/iterator/iterator_traits.hpp"
 19766              		.file 204 "/usr/include/boost/iterator/iterator_categories.hpp"
 19767              		.file 205 "/usr/include/boost/iterator/iterator_facade.hpp"
 19768              		.file 206 "/usr/include/boost/iterator/iterator_adaptor.hpp"
 19769              		.file 207 "/usr/include/boost/foreach.hpp"
 19770              		.file 208 "/usr/include/boost/foreach_fwd.hpp"
 19771              		.file 209 "/usr/include/boost/filesystem/path_traits.hpp"
 19772              		.file 210 "/usr/include/boost/filesystem/path.hpp"
 19773              		.file 211 "/usr/include/boost/memory_order.hpp"
 19774              		.file 212 "/usr/include/boost/atomic/detail/storage_type.hpp"
 19775              		.file 213 "/usr/include/boost/atomic/detail/ops_gcc_atomic.hpp"
 19776              		.file 214 "/usr/include/boost/atomic/fences.hpp"
 19777              		.file 215 "/usr/include/boost/atomic/detail/atomic_flag.hpp"
 19778              		.file 216 "/usr/include/boost/atomic/detail/atomic_template.hpp"
 19779              		.file 217 "/usr/include/boost/atomic/atomic_flag.hpp"
 19780              		.file 218 "/usr/include/boost/atomic/atomic.hpp"
 19781              		.file 219 "/usr/include/boost/thread/lockable_traits.hpp"
 19782              		.file 220 "/usr/include/boost/thread/csbl/memory/unique_ptr.hpp"
 19783              		.file 221 "/usr/include/boost/thread/csbl/memory/allocator_arg.hpp"
 19784              		.file 222 "/usr/include/boost/tuple/detail/tuple_basic.hpp"
 19785              		.file 223 "/usr/include/boost/exception/detail/is_output_streamable.hpp"
 19786              		.file 224 "/usr/include/boost/exception/to_string.hpp"
 19787              		.file 225 "/usr/include/boost/thread/cv_status.hpp"
 19788              		.file 226 "/usr/include/boost/thread/futures/future_error_code.hpp"
 19789              		.file 227 "/usr/include/boost/thread/futures/future_status.hpp"
 19790              		.file 228 "/usr/include/boost/thread/futures/launch.hpp"
 19791              		.file 229 "/usr/include/boost/thread/executors/work.hpp"
 19792              		.file 230 "/usr/include/boost/thread/executors/executor.hpp"
 19793              		.file 231 "/usr/include/boost/thread/executors/generic_executor_ref.hpp"
 19794              		.file 232 "/usr/include/boost/type_traits/type_with_alignment.hpp"
 19795              		.file 233 "/usr/include/boost/optional/detail/optional_aligned_storage.hpp"
 19796              		.file 234 "/usr/include/boost/align/detail/align_cxx11.hpp"
 19797              		.file 235 "/usr/include/boost/core/enable_if.hpp"
 19798              		.file 236 "/usr/include/x86_64-linux-gnu/bits/mathdef.h"
GAS LISTING /tmp/ccsIN87E.s 			page 744


 19799              		.file 237 "/usr/include/math.h"
 19800              		.file 238 "/usr/include/wctype.h"
 19801              		.file 239 "/home/mpiscopo/gnuradio/include/gnuradio/gr_complex.h"
 19802              		.file 240 "/home/mpiscopo/gnuradio/include/gnuradio/types.h"
 19803              		.file 241 "/home/mpiscopo/gnuradio/include/gnuradio/runtime_types.h"
 19804              		.file 242 "/home/mpiscopo/gnuradio/include/gnuradio/io_signature.h"
 19805              		.file 243 "/home/mpiscopo/gnuradio/include/gnuradio/blocks/control_loop.h"
 19806              		.file 244 "/usr/include/string.h"
 19807              		.file 245 "/usr/include/boost/mpl/bool.hpp"
 19808              		.file 246 "/usr/include/boost/mpl/void.hpp"
 19809              		.file 247 "/usr/include/boost/mpl/aux_/integral_wrapper.hpp"
 19810              		.file 248 "/usr/include/boost/mpl/aux_/preprocessed/gcc/arg.hpp"
 19811              		.file 249 "/usr/include/x86_64-linux-gnu/sys/time.h"
 19812              		.file 250 "/usr/include/boost/bind.hpp"
 19813              		.file 251 "/usr/include/c++/6/stdlib.h"
 19814              		.file 252 "/usr/include/log4cpp/Priority.hh"
 19815              		.file 253 "/usr/include/log4cpp/threading/PThreads.hh"
 19816              		.file 254 "clSComplex.h"
 19817              		.file 255 "/usr/include/c++/6/cxxabi.h"
 105225              		.align 8
 105228              	DW.ref.__gxx_personality_v0:
 105229 0000 00000000 		.quad	__gxx_personality_v0
 105229      00000000 
 105230              		.hidden	__dso_handle
 105231              		.ident	"GCC: (Debian 6.3.0-12) 6.3.0 20170406"
 105232              		.section	.note.GNU-stack,"",@progbits
GAS LISTING /tmp/ccsIN87E.s 			page 745


DEFINED SYMBOLS
                            *ABS*:0000000000000000 costas2_impl.cc
     /tmp/ccsIN87E.s:7      .rodata:0000000000000000 _ZStL19piecewise_construct
     /tmp/ccsIN87E.s:13     .text._ZNSt9exceptionC2Ev:0000000000000000 _ZNSt9exceptionC2Ev
     /tmp/ccsIN87E.s:13     .text._ZNSt9exceptionC2Ev:0000000000000000 _ZNSt9exceptionC1Ev
     /tmp/ccsIN87E.s:43     .text._ZNSt13bad_exceptionC2Ev:0000000000000000 _ZNSt13bad_exceptionC2Ev
     /tmp/ccsIN87E.s:43     .text._ZNSt13bad_exceptionC2Ev:0000000000000000 _ZNSt13bad_exceptionC1Ev
     /tmp/ccsIN87E.s:76     .text._ZNSt9bad_allocC2Ev:0000000000000000 _ZNSt9bad_allocC2Ev
     /tmp/ccsIN87E.s:76     .text._ZNSt9bad_allocC2Ev:0000000000000000 _ZNSt9bad_allocC1Ev
     /tmp/ccsIN87E.s:109    .text._ZnwmPv:0000000000000000 _ZnwmPv
     /tmp/ccsIN87E.s:131    .text._ZdlPvS_:0000000000000000 _ZdlPvS_
     /tmp/ccsIN87E.s:154    .rodata:0000000000000004 _ZN9__gnu_cxxL21__default_lock_policyE
     /tmp/ccsIN87E.s:160    .text._ZNSt9exceptionC2ERKS_:0000000000000000 _ZNSt9exceptionC2ERKS_
     /tmp/ccsIN87E.s:160    .text._ZNSt9exceptionC2ERKS_:0000000000000000 _ZNSt9exceptionC1ERKS_
     /tmp/ccsIN87E.s:189    .rodata:0000000000000008 _ZStL13allocator_arg
     /tmp/ccsIN87E.s:193    .rodata:0000000000000009 _ZStL6ignore
     /tmp/ccsIN87E.s:199    .text._ZN5boost10error_infoINS_15throw_function_EPKcEC2ES3_:0000000000000000 _ZN5boost10error_infoINS_15throw_function_EPKcEC2ES3_
     /tmp/ccsIN87E.s:199    .text._ZN5boost10error_infoINS_15throw_function_EPKcEC2ES3_:0000000000000000 _ZN5boost10error_infoINS_15throw_function_EPKcEC1ES3_
     /tmp/ccsIN87E.s:231    .text._ZN5boost10error_infoINS_11throw_file_EPKcEC2ES3_:0000000000000000 _ZN5boost10error_infoINS_11throw_file_EPKcEC2ES3_
     /tmp/ccsIN87E.s:231    .text._ZN5boost10error_infoINS_11throw_file_EPKcEC2ES3_:0000000000000000 _ZN5boost10error_infoINS_11throw_file_EPKcEC1ES3_
     /tmp/ccsIN87E.s:262    .text._ZN5boost10error_infoINS_11throw_line_EiEC2Ei:0000000000000000 _ZN5boost10error_infoINS_11throw_line_EiEC2Ei
     /tmp/ccsIN87E.s:262    .text._ZN5boost10error_infoINS_11throw_line_EiEC2Ei:0000000000000000 _ZN5boost10error_infoINS_11throw_line_EiEC1Ei
     /tmp/ccsIN87E.s:293    .text._ZN5boost9exceptionC2Ev:0000000000000000 _ZN5boost9exceptionC2Ev
     /tmp/ccsIN87E.s:18105  .data.rel.ro._ZTVN5boost9exceptionE:0000000000000000 _ZTVN5boost9exceptionE
     /tmp/ccsIN87E.s:5377   .text._ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEEC2Ev:0000000000000000 _ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEEC1Ev
     /tmp/ccsIN87E.s:293    .text._ZN5boost9exceptionC2Ev:0000000000000000 _ZN5boost9exceptionC1Ev
     /tmp/ccsIN87E.s:334    .text._ZN5boost9exceptionD2Ev:0000000000000000 _ZN5boost9exceptionD2Ev
     /tmp/ccsIN87E.s:5406   .text._ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEED2Ev:0000000000000000 _ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEED1Ev
     /tmp/ccsIN87E.s:334    .text._ZN5boost9exceptionD2Ev:0000000000000000 _ZN5boost9exceptionD1Ev
     /tmp/ccsIN87E.s:369    .text._ZN5boost9exceptionD0Ev:0000000000000000 _ZN5boost9exceptionD0Ev
     /tmp/ccsIN87E.s:398    .text._ZN5boost16exception_detail10clone_baseD2Ev:0000000000000000 _ZN5boost16exception_detail10clone_baseD2Ev
     /tmp/ccsIN87E.s:18093  .data.rel.ro._ZTVN5boost16exception_detail10clone_baseE:0000000000000000 _ZTVN5boost16exception_detail10clone_baseE
     /tmp/ccsIN87E.s:398    .text._ZN5boost16exception_detail10clone_baseD2Ev:0000000000000000 _ZN5boost16exception_detail10clone_baseD1Ev
     /tmp/ccsIN87E.s:428    .text._ZN5boost16exception_detail10clone_baseD0Ev:0000000000000000 _ZN5boost16exception_detail10clone_baseD0Ev
     /tmp/ccsIN87E.s:456    .text._ZN5boost16exception_detail20copy_boost_exceptionEPNS_9exceptionEPKS1_:0000000000000000 _ZN5boost16exception_detail20copy_boost_exceptionEPNS_9exceptionEPKS1_
     /tmp/ccsIN87E.s:105228  .data.DW.ref.__gxx_personality_v0:0000000000000000 DW.ref.__gxx_personality_v0
     /tmp/ccsIN87E.s:5448   .text._ZNK5boost16exception_detail12refcount_ptrINS0_20error_info_containerEE3getEv:0000000000000000 _ZNK5boost16exception_detail12refcount_ptrINS0_20error_info_containerEE3getEv
     /tmp/ccsIN87E.s:5472   .text._ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEEaSERKS3_:0000000000000000 _ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEEaSERKS3_
     /tmp/ccsIN87E.s:602    .text._ZN5boost36throw_exception_assert_compatibilityERKSt9exception:0000000000000000 _ZN5boost36throw_exception_assert_compatibilityERKSt9exception
     /tmp/ccsIN87E.s:624    .text._ZN5boost6detail23atomic_exchange_and_addEPii:0000000000000000 _ZN5boost6detail23atomic_exchange_and_addEPii
     /tmp/ccsIN87E.s:659    .text._ZN5boost6detail16atomic_incrementEPi:0000000000000000 _ZN5boost6detail16atomic_incrementEPi
     /tmp/ccsIN87E.s:690    .text._ZN5boost6detail15sp_counted_baseC2Ev:0000000000000000 _ZN5boost6detail15sp_counted_baseC2Ev
     /tmp/ccsIN87E.s:18079  .data.rel.ro._ZTVN5boost6detail15sp_counted_baseE:0000000000000000 _ZTVN5boost6detail15sp_counted_baseE
     /tmp/ccsIN87E.s:690    .text._ZN5boost6detail15sp_counted_baseC2Ev:0000000000000000 _ZN5boost6detail15sp_counted_baseC1Ev
     /tmp/ccsIN87E.s:724    .text._ZN5boost6detail15sp_counted_baseD2Ev:0000000000000000 _ZN5boost6detail15sp_counted_baseD2Ev
     /tmp/ccsIN87E.s:724    .text._ZN5boost6detail15sp_counted_baseD2Ev:0000000000000000 _ZN5boost6detail15sp_counted_baseD1Ev
     /tmp/ccsIN87E.s:754    .text._ZN5boost6detail15sp_counted_baseD0Ev:0000000000000000 _ZN5boost6detail15sp_counted_baseD0Ev
     /tmp/ccsIN87E.s:783    .text._ZN5boost6detail15sp_counted_base7destroyEv:0000000000000000 _ZN5boost6detail15sp_counted_base7destroyEv
     /tmp/ccsIN87E.s:819    .text._ZN5boost6detail15sp_counted_base12add_ref_copyEv:0000000000000000 _ZN5boost6detail15sp_counted_base12add_ref_copyEv
     /tmp/ccsIN87E.s:847    .text._ZN5boost6detail15sp_counted_base7releaseEv:0000000000000000 _ZN5boost6detail15sp_counted_base7releaseEv
     /tmp/ccsIN87E.s:894    .text._ZN5boost6detail15sp_counted_base12weak_releaseEv:0000000000000000 _ZN5boost6detail15sp_counted_base12weak_releaseEv
     /tmp/ccsIN87E.s:937    .text._ZN5boost6detail12shared_countC2Ev:0000000000000000 _ZN5boost6detail12shared_countC2Ev
     /tmp/ccsIN87E.s:937    .text._ZN5boost6detail12shared_countC2Ev:0000000000000000 _ZN5boost6detail12shared_countC1Ev
     /tmp/ccsIN87E.s:967    .text._ZN5boost6detail12shared_countD2Ev:0000000000000000 _ZN5boost6detail12shared_countD2Ev
     /tmp/ccsIN87E.s:967    .text._ZN5boost6detail12shared_countD2Ev:0000000000000000 _ZN5boost6detail12shared_countD1Ev
     /tmp/ccsIN87E.s:1016   .text._ZN5boost6detail12shared_countC2ERKS1_:0000000000000000 _ZN5boost6detail12shared_countC2ERKS1_
     /tmp/ccsIN87E.s:1016   .text._ZN5boost6detail12shared_countC2ERKS1_:0000000000000000 _ZN5boost6detail12shared_countC1ERKS1_
GAS LISTING /tmp/ccsIN87E.s 			page 746


     /tmp/ccsIN87E.s:1060   .text._ZN5boost6detail12shared_count4swapERS1_:0000000000000000 _ZN5boost6detail12shared_count4swapERS1_
     /tmp/ccsIN87E.s:1095   .text._ZN5boost6detail26sp_enable_shared_from_thisEz:0000000000000000 _ZN5boost6detail26sp_enable_shared_from_thisEz
     /tmp/ccsIN87E.s:1116   .text._ZSt3absf:0000000000000000 _ZSt3absf
     /tmp/ccsIN87E.s:1141   .text._ZNSt7complexIfEC2Eff:0000000000000000 _ZNSt7complexIfEC2Eff
     /tmp/ccsIN87E.s:1141   .text._ZNSt7complexIfEC2Eff:0000000000000000 _ZNSt7complexIfEC1Eff
     /tmp/ccsIN87E.s:1175   .text._ZNKSt7complexIfE4realB5cxx11Ev:0000000000000000 _ZNKSt7complexIfE4realB5cxx11Ev
     /tmp/ccsIN87E.s:1198   .text._ZNKSt7complexIfE4imagB5cxx11Ev:0000000000000000 _ZNKSt7complexIfE4imagB5cxx11Ev
     /tmp/ccsIN87E.s:1221   .text._ZNK3pmt10comparatorclERKN5boost13intrusive_ptrINS_8pmt_baseEEES6_:0000000000000000 _ZNK3pmt10comparatorclERKN5boost13intrusive_ptrINS_8pmt_baseEEES6_
     /tmp/ccsIN87E.s:5619   .text._ZNK5boost13intrusive_ptrIN3pmt8pmt_baseEE3getEv:0000000000000000 _ZNK5boost13intrusive_ptrIN3pmt8pmt_baseEE3getEv
     /tmp/ccsIN87E.s:1270   .bss:0000000000000000 _ZN5boost6systemL14posix_categoryE
     /tmp/ccsIN87E.s:1272   .bss:0000000000000008 _ZN5boost6systemL10errno_ecatE
     /tmp/ccsIN87E.s:1274   .bss:0000000000000010 _ZN5boost6systemL11native_ecatE
     /tmp/ccsIN87E.s:1279   .text._ZNK5boost6system10error_code5valueEv:0000000000000000 _ZNK5boost6system10error_code5valueEv
     /tmp/ccsIN87E.s:1303   .text._ZNK5boost6system10error_code7messageB5cxx11Ev:0000000000000000 _ZNK5boost6system10error_code7messageB5cxx11Ev
     /tmp/ccsIN87E.s:1347   .text._ZN5boost6system12system_errorD2Ev:0000000000000000 _ZN5boost6system12system_errorD2Ev
     /tmp/ccsIN87E.s:18068  .data.rel.ro.local._ZTVN5boost6system12system_errorE:0000000000000000 _ZTVN5boost6system12system_errorE
     /tmp/ccsIN87E.s:1347   .text._ZN5boost6system12system_errorD2Ev:0000000000000000 _ZN5boost6system12system_errorD1Ev
     /tmp/ccsIN87E.s:1385   .text._ZN5boost6system12system_errorD0Ev:0000000000000000 _ZN5boost6system12system_errorD0Ev
     /tmp/ccsIN87E.s:1417   .text._ZNK5boost6system12system_error4whatEv:0000000000000000 _ZNK5boost6system12system_error4whatEv
     /tmp/ccsIN87E.s:1580   .rodata:000000000000000d _ZN5boostL10defer_lockE
     /tmp/ccsIN87E.s:1584   .rodata:000000000000000e _ZN5boostL11try_to_lockE
     /tmp/ccsIN87E.s:1588   .rodata:000000000000000f _ZN5boostL10adopt_lockE
     /tmp/ccsIN87E.s:1274   .bss:0000000000000018 _ZStL8__ioinit
     /tmp/ccsIN87E.s:1594   .rodata:0000000000000010 _ZN5boost12placeholdersL2_1E
     /tmp/ccsIN87E.s:1598   .rodata:0000000000000011 _ZN5boost12placeholdersL2_2E
     /tmp/ccsIN87E.s:1602   .rodata:0000000000000012 _ZN5boost12placeholdersL2_3E
     /tmp/ccsIN87E.s:1606   .rodata:0000000000000013 _ZN5boost12placeholdersL2_4E
     /tmp/ccsIN87E.s:1610   .rodata:0000000000000014 _ZN5boost12placeholdersL2_5E
     /tmp/ccsIN87E.s:1614   .rodata:0000000000000015 _ZN5boost12placeholdersL2_6E
     /tmp/ccsIN87E.s:1618   .rodata:0000000000000016 _ZN5boost12placeholdersL2_7E
     /tmp/ccsIN87E.s:1622   .rodata:0000000000000017 _ZN5boost12placeholdersL2_8E
     /tmp/ccsIN87E.s:1626   .rodata:0000000000000018 _ZN5boost12placeholdersL2_9E
     /tmp/ccsIN87E.s:1631   .rodata:000000000000001c _ZN5boost6detail16static_log2_implL6n_zeroE
     /tmp/ccsIN87E.s:1636   .rodata:0000000000000020 _ZN5boost6detail16static_log2_implL9initial_nE
     /tmp/ccsIN87E.s:1642   .text._ZN5boost13function_baseC2Ev:0000000000000000 _ZN5boost13function_baseC2Ev
     /tmp/ccsIN87E.s:1642   .text._ZN5boost13function_baseC2Ev:0000000000000000 _ZN5boost13function_baseC1Ev
     /tmp/ccsIN87E.s:1671   .text._ZNK5boost13function_base5emptyEv:0000000000000000 _ZNK5boost13function_base5emptyEv
     /tmp/ccsIN87E.s:1696   .text._ZNK5boost13function_base28has_trivial_copy_and_destroyEv:0000000000000000 _ZNK5boost13function_base28has_trivial_copy_and_destroyEv
     /tmp/ccsIN87E.s:1726   .text._ZN5boost17bad_function_callC2Ev:0000000000000000 _ZN5boost17bad_function_callC2Ev
     /tmp/ccsIN87E.s:18057  .data.rel.ro._ZTVN5boost17bad_function_callE:0000000000000000 _ZTVN5boost17bad_function_callE
     /tmp/ccsIN87E.s:1726   .text._ZN5boost17bad_function_callC2Ev:0000000000000000 _ZN5boost17bad_function_callC1Ev
     /tmp/ccsIN87E.s:1760   .text._ZN5boost10shared_ptrIN2gr12io_signatureEED2Ev:0000000000000000 _ZN5boost10shared_ptrIN2gr12io_signatureEED2Ev
     /tmp/ccsIN87E.s:1760   .text._ZN5boost10shared_ptrIN2gr12io_signatureEED2Ev:0000000000000000 _ZN5boost10shared_ptrIN2gr12io_signatureEED1Ev
     /tmp/ccsIN87E.s:1791   .text._ZN2gr11basic_block15has_msg_handlerEN5boost13intrusive_ptrIN3pmt8pmt_baseEEE:0000000000000000 _ZN2gr11basic_block15has_msg_handlerEN5boost13intrusive_ptrIN3pmt8pmt_baseEEE
     /tmp/ccsIN87E.s:5672   .text._ZNSt3mapIN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS0_8functionIFvS4_EEENS2_10comparatorESaISt4pairIKS4_S7_EEE3endEv:0000000000000000 _ZNSt3mapIN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS0_8functionIFvS4_EEENS2_10comparatorESaISt4pairIKS4_S7_EEE3endEv
     /tmp/ccsIN87E.s:5643   .text._ZNSt3mapIN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS0_8functionIFvS4_EEENS2_10comparatorESaISt4pairIKS4_S7_EEE4findERSA_:0000000000000000 _ZNSt3mapIN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS0_8functionIFvS4_EEENS2_10comparatorESaISt4pairIKS4_S7_EEE4findERSA_
     /tmp/ccsIN87E.s:5697   .text._ZNKSt17_Rb_tree_iteratorISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS1_8functionIFvS5_EEEEEneERKSB_:0000000000000000 _ZNKSt17_Rb_tree_iteratorISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS1_8functionIFvS5_EEEEEneERKSB_
     /tmp/ccsIN87E.s:1833   .text._ZN2gr11basic_block12dispatch_msgEN5boost13intrusive_ptrIN3pmt8pmt_baseEEES5_:0000000000000000 _ZN2gr11basic_block12dispatch_msgEN5boost13intrusive_ptrIN3pmt8pmt_baseEEES5_
     /tmp/ccsIN87E.s:5726   .text._ZN5boost13intrusive_ptrIN3pmt8pmt_baseEEC2ERKS3_:0000000000000000 _ZN5boost13intrusive_ptrIN3pmt8pmt_baseEEC1ERKS3_
     /tmp/ccsIN87E.s:5534   .text._ZN5boost13intrusive_ptrIN3pmt8pmt_baseEED2Ev:0000000000000000 _ZN5boost13intrusive_ptrIN3pmt8pmt_baseEED1Ev
     /tmp/ccsIN87E.s:5867   .text._ZNSt3mapIN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS0_8functionIFvS4_EEENS2_10comparatorESaISt4pairIKS4_S7_EEEixERSA_:0000000000000000 _ZNSt3mapIN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS0_8functionIFvS4_EEENS2_10comparatorESaISt4pairIKS4_S7_EEEixERSA_
     /tmp/ccsIN87E.s:6079   .text._ZNK5boost9function1IvNS_13intrusive_ptrIN3pmt8pmt_baseEEEEclES4_:0000000000000000 _ZNK5boost9function1IvNS_13intrusive_ptrIN3pmt8pmt_baseEEEEclES4_
     /tmp/ccsIN87E.s:1967   .text._ZN2gr11basic_block20message_port_is_hierEN5boost13intrusive_ptrIN3pmt8pmt_baseEEE:0000000000000000 _ZN2gr11basic_block20message_port_is_hierEN5boost13intrusive_ptrIN3pmt8pmt_baseEEE
     /tmp/ccsIN87E.s:1990   .text._ZN2gr11basic_block23message_port_is_hier_inEN5boost13intrusive_ptrIN3pmt8pmt_baseEEE:0000000000000000 _ZN2gr11basic_block23message_port_is_hier_inEN5boost13intrusive_ptrIN3pmt8pmt_baseEEE
     /tmp/ccsIN87E.s:2013   .text._ZN2gr11basic_block24message_port_is_hier_outEN5boost13intrusive_ptrIN3pmt8pmt_baseEEE:0000000000000000 _ZN2gr11basic_block24message_port_is_hier_outEN5boost13intrusive_ptrIN3pmt8pmt_baseEEE
     /tmp/ccsIN87E.s:2036   .text._ZN2gr11basic_block12has_msg_portEN5boost13intrusive_ptrIN3pmt8pmt_baseEEE:0000000000000000 _ZN2gr11basic_block12has_msg_portEN5boost13intrusive_ptrIN3pmt8pmt_baseEEE
     /tmp/ccsIN87E.s:6230   .text._ZNSt3mapIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt5dequeIS4_SaIS4_EENS2_10comparatorESaISt4pairIKS4_S7_EEE3endEv:0000000000000000 _ZNSt3mapIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt5dequeIS4_SaIS4_EENS2_10comparatorESaISt4pairIKS4_S7_EEE3endEv
GAS LISTING /tmp/ccsIN87E.s 			page 747


     /tmp/ccsIN87E.s:6202   .text._ZNSt3mapIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt5dequeIS4_SaIS4_EENS2_10comparatorESaISt4pairIKS4_S7_EEE4findERSA_:0000000000000000 _ZNSt3mapIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt5dequeIS4_SaIS4_EENS2_10comparatorESaISt4pairIKS4_S7_EEE4findERSA_
     /tmp/ccsIN87E.s:6283   .text._ZNKSt17_Rb_tree_iteratorISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt5dequeIS5_SaIS5_EEEEneERKSB_:0000000000000000 _ZNKSt17_Rb_tree_iteratorISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt5dequeIS5_SaIS5_EEEEneERKSB_
     /tmp/ccsIN87E.s:2099   .text._ZN2gr11basic_block9setup_rpcEv:0000000000000000 _ZN2gr11basic_block9setup_rpcEv
     /tmp/ccsIN87E.s:2121   .text._ZN2gr11basic_block14check_topologyEii:0000000000000000 _ZN2gr11basic_block14check_topologyEii
     /tmp/ccsIN87E.s:2146   .text._ZN2gr5tag_taSERKS0_:0000000000000000 _ZN2gr5tag_taSERKS0_
     /tmp/ccsIN87E.s:6366   .text._ZN5boost13intrusive_ptrIN3pmt8pmt_baseEEaSERKS3_:0000000000000000 _ZN5boost13intrusive_ptrIN3pmt8pmt_baseEEaSERKS3_
     /tmp/ccsIN87E.s:2206   .text._ZN2gr5tag_tD2Ev:0000000000000000 _ZN2gr5tag_tD2Ev
     /tmp/ccsIN87E.s:6311   .text._ZNSt6vectorIlSaIlEED2Ev:0000000000000000 _ZNSt6vectorIlSaIlEED1Ev
     /tmp/ccsIN87E.s:2206   .text._ZN2gr5tag_tD2Ev:0000000000000000 _ZN2gr5tag_tD1Ev
     /tmp/ccsIN87E.s:2250   .rodata:0000000000000044 _ZN5boost16exception_detail30clone_current_exception_resultL7successE
     /tmp/ccsIN87E.s:2255   .rodata:0000000000000048 _ZN5boost16exception_detail30clone_current_exception_resultL9bad_allocE
     /tmp/ccsIN87E.s:2260   .rodata:000000000000004c _ZN5boost16exception_detail30clone_current_exception_resultL13bad_exceptionE
     /tmp/ccsIN87E.s:2265   .rodata:0000000000000050 _ZN5boost16exception_detail30clone_current_exception_resultL13not_supportedE
     /tmp/ccsIN87E.s:2271   .text._ZN5boost10shared_ptrIKNS_16exception_detail10clone_baseEED2Ev:0000000000000000 _ZN5boost10shared_ptrIKNS_16exception_detail10clone_baseEED2Ev
     /tmp/ccsIN87E.s:2271   .text._ZN5boost10shared_ptrIKNS_16exception_detail10clone_baseEED2Ev:0000000000000000 _ZN5boost10shared_ptrIKNS_16exception_detail10clone_baseEED1Ev
     /tmp/ccsIN87E.s:2302   .text._ZN5boost13exception_ptrC2ERKNS_10shared_ptrIKNS_16exception_detail10clone_baseEEE:0000000000000000 _ZN5boost13exception_ptrC2ERKNS_10shared_ptrIKNS_16exception_detail10clone_baseEEE
     /tmp/ccsIN87E.s:6478   .text._ZN5boost10shared_ptrIKNS_16exception_detail10clone_baseEEC2ERKS4_:0000000000000000 _ZN5boost10shared_ptrIKNS_16exception_detail10clone_baseEEC1ERKS4_
     /tmp/ccsIN87E.s:2302   .text._ZN5boost13exception_ptrC2ERKNS_10shared_ptrIKNS_16exception_detail10clone_baseEEE:0000000000000000 _ZN5boost13exception_ptrC1ERKNS_10shared_ptrIKNS_16exception_detail10clone_baseEEE
     /tmp/ccsIN87E.s:2337   .text._ZN5boost16exception_detail10bad_alloc_D2Ev:0000000000000000 _ZN5boost16exception_detail10bad_alloc_D2Ev
     /tmp/ccsIN87E.s:18042  .data.rel.ro._ZTVN5boost16exception_detail10bad_alloc_E:0000000000000000 _ZTVN5boost16exception_detail10bad_alloc_E
     /tmp/ccsIN87E.s:2374   .text._ZN5boost16exception_detail10bad_alloc_D2Ev:0000000000000048 _ZThn40_N5boost16exception_detail10bad_alloc_D1Ev
     /tmp/ccsIN87E.s:2337   .text._ZN5boost16exception_detail10bad_alloc_D2Ev:0000000000000000 _ZN5boost16exception_detail10bad_alloc_D1Ev
     /tmp/ccsIN87E.s:2389   .text._ZN5boost16exception_detail10bad_alloc_D0Ev:0000000000000000 _ZN5boost16exception_detail10bad_alloc_D0Ev
     /tmp/ccsIN87E.s:2417   .text._ZN5boost16exception_detail10bad_alloc_D0Ev:000000000000002b _ZThn40_N5boost16exception_detail10bad_alloc_D0Ev
     /tmp/ccsIN87E.s:2430   .text._ZN5boost16exception_detail14bad_exception_D2Ev:0000000000000000 _ZN5boost16exception_detail14bad_exception_D2Ev
     /tmp/ccsIN87E.s:18027  .data.rel.ro._ZTVN5boost16exception_detail14bad_exception_E:0000000000000000 _ZTVN5boost16exception_detail14bad_exception_E
     /tmp/ccsIN87E.s:2467   .text._ZN5boost16exception_detail14bad_exception_D2Ev:0000000000000048 _ZThn40_N5boost16exception_detail14bad_exception_D1Ev
     /tmp/ccsIN87E.s:2430   .text._ZN5boost16exception_detail14bad_exception_D2Ev:0000000000000000 _ZN5boost16exception_detail14bad_exception_D1Ev
     /tmp/ccsIN87E.s:2482   .text._ZN5boost16exception_detail14bad_exception_D0Ev:0000000000000000 _ZN5boost16exception_detail14bad_exception_D0Ev
     /tmp/ccsIN87E.s:2510   .text._ZN5boost16exception_detail14bad_exception_D0Ev:000000000000002b _ZThn40_N5boost16exception_detail14bad_exception_D0Ev
     /tmp/ccsIN87E.s:2523   .text._ZN5boost9exceptionC2ERKS0_:0000000000000000 _ZN5boost9exceptionC2ERKS0_
     /tmp/ccsIN87E.s:6441   .text._ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEEC2ERKS3_:0000000000000000 _ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEEC1ERKS3_
     /tmp/ccsIN87E.s:2523   .text._ZN5boost9exceptionC2ERKS0_:0000000000000000 _ZN5boost9exceptionC1ERKS0_
     /tmp/ccsIN87E.s:2573   .text._ZN5boost13exception_ptrD2Ev:0000000000000000 _ZN5boost13exception_ptrD2Ev
     /tmp/ccsIN87E.s:2573   .text._ZN5boost13exception_ptrD2Ev:0000000000000000 _ZN5boost13exception_ptrD1Ev
     /tmp/ccsIN87E.s:2603   .text._ZN5boost13exception_ptrC2ERKS0_:0000000000000000 _ZN5boost13exception_ptrC2ERKS0_
     /tmp/ccsIN87E.s:2603   .text._ZN5boost13exception_ptrC2ERKS0_:0000000000000000 _ZN5boost13exception_ptrC1ERKS0_
     /tmp/ccsIN87E.s:2636   .text._ZN5boost6none_tC2ENS0_8init_tagE:0000000000000000 _ZN5boost6none_tC2ENS0_8init_tagE
     /tmp/ccsIN87E.s:2636   .text._ZN5boost6none_tC2ENS0_8init_tagE:0000000000000000 _ZN5boost6none_tC1ENS0_8init_tagE
     /tmp/ccsIN87E.s:1591   .bss:0000000000000019 _ZN5boostL4noneE
     /tmp/ccsIN87E.s:2663   .text._ZN2gr5block18processor_affinityEv:0000000000000000 _ZN2gr5block18processor_affinityEv
     /tmp/ccsIN87E.s:7414   .text._ZNSt6vectorIiSaIiEEC2ERKS1_:0000000000000000 _ZNSt6vectorIiSaIiEEC1ERKS1_
     /tmp/ccsIN87E.s:2694   .data:0000000000000000 _ZN2gr6blocksL14tanh_lut_tableE
     /tmp/ccsIN87E.s:2955   .text._ZNK2gr5lfast12costas2_impl16phase_detector_2ESt7complexIfE:0000000000000000 _ZNK2gr5lfast12costas2_impl16phase_detector_2ESt7complexIfE
     /tmp/ccsIN87E.s:2991   .text:0000000000000000 _ZL7gr_expjf
     /tmp/ccsIN87E.s:3036   .text:000000000000006d _ZN2grL15branchless_clipEff
     /tmp/ccsIN87E.s:3079   .text._ZN5boost10shared_ptrIN2gr5lfast12costas2_implEED2Ev:0000000000000000 _ZN5boost10shared_ptrIN2gr5lfast12costas2_implEED2Ev
     /tmp/ccsIN87E.s:3079   .text._ZN5boost10shared_ptrIN2gr5lfast12costas2_implEED2Ev:0000000000000000 _ZN5boost10shared_ptrIN2gr5lfast12costas2_implEED1Ev
     /tmp/ccsIN87E.s:3110   .text:00000000000000d2 _ZN2gr5lfast7costas24makeEfi
     /tmp/ccsIN87E.s:3453   .text:0000000000000252 _ZN2gr5lfast12costas2_implC1Efi
     /tmp/ccsIN87E.s:7584   .text._ZN8gnuradio16get_initial_sptrIN2gr5lfast12costas2_implEEEN5boost10shared_ptrIT_EEPS6_:0000000000000000 _ZN8gnuradio16get_initial_sptrIN2gr5lfast12costas2_implEEEN5boost10shared_ptrIT_EEPS6_
     /tmp/ccsIN87E.s:7638   .text._ZN5boost10shared_ptrIN2gr5lfast7costas2EEC2INS2_12costas2_implEEEONS0_IT_EENS_6detail24sp_enable_if_convertibleIS7_S3_E4typeE:0000000000000000 _ZN5boost10shared_ptrIN2gr5lfast7costas2EEC1INS2_12costas2_implEEEONS0_IT_EENS_6detail24sp_enable_if_convertibleIS7_S3_E4typeE
     /tmp/ccsIN87E.s:3210   .text._ZN2gr10sync_blockD2Ev:0000000000000000 _ZN2gr10sync_blockD2Ev
     /tmp/ccsIN87E.s:3210   .text._ZN2gr10sync_blockD2Ev:0000000000000000 _ZN2gr10sync_blockD1Ev
     /tmp/ccsIN87E.s:3244   .text._ZN2gr10sync_blockD0Ev:0000000000000000 _ZN2gr10sync_blockD0Ev
     /tmp/ccsIN87E.s:3273   .text._ZN2gr5lfast7costas2C2Ev:0000000000000000 _ZN2gr5lfast7costas2C2Ev
     /tmp/ccsIN87E.s:3323   .text._ZN2gr5lfast7costas2D2Ev:0000000000000000 _ZN2gr5lfast7costas2D2Ev
GAS LISTING /tmp/ccsIN87E.s 			page 748


     /tmp/ccsIN87E.s:3372   .text:0000000000000170 _ZN2gr5lfast12costas2_implC2Efi
     /tmp/ccsIN87E.s:17951  .data.rel.ro.local._ZTTN2gr5lfast12costas2_implE:0000000000000000 _ZTTN2gr5lfast12costas2_implE
     /tmp/ccsIN87E.s:17886  .data.rel.ro._ZTVN2gr5lfast12costas2_implE:0000000000000000 _ZTVN2gr5lfast12costas2_implE
     /tmp/ccsIN87E.s:3665   .text:0000000000000450 _ZN2gr5lfast12costas2_implD2Ev
     /tmp/ccsIN87E.s:3721   .text:00000000000004ce _ZN2gr5lfast12costas2_implD1Ev
     /tmp/ccsIN87E.s:3770   .text:000000000000054a _ZTv0_n24_N2gr5lfast12costas2_implD1Ev
     /tmp/ccsIN87E.s:3783   .text:0000000000000556 _ZN2gr5lfast12costas2_implD0Ev
     /tmp/ccsIN87E.s:3811   .text:0000000000000581 _ZTv0_n24_N2gr5lfast12costas2_implD0Ev
     /tmp/ccsIN87E.s:3824   .text:000000000000058a _ZNK2gr5lfast12costas2_impl5errorEv
     /tmp/ccsIN87E.s:3847   .text:000000000000059e _ZN2gr5lfast12costas2_impl16handle_set_noiseEN5boost13intrusive_ptrIN3pmt8pmt_baseEEE
     /tmp/ccsIN87E.s:3983   .text:000000000000068a _ZN2gr5lfast12costas2_impl13work_originalEiRSt6vectorIPKvSaIS4_EERS2_IPvSaIS8_EE
     /tmp/ccsIN87E.s:7688   .text._ZNSt6vectorIPKvSaIS1_EEixEm:0000000000000000 _ZNSt6vectorIPKvSaIS1_EEixEm
     /tmp/ccsIN87E.s:7715   .text._ZNSt6vectorIPvSaIS0_EEixEm:0000000000000000 _ZNSt6vectorIPvSaIS0_EEixEm
     /tmp/ccsIN87E.s:7742   .text._ZNKSt6vectorIPvSaIS0_EE4sizeEv:0000000000000000 _ZNKSt6vectorIPvSaIS0_EE4sizeEv
     /tmp/ccsIN87E.s:7771   .text._ZNSt6vectorIN2gr5tag_tESaIS1_EEC2Ev:0000000000000000 _ZNSt6vectorIN2gr5tag_tESaIS1_EEC1Ev
     /tmp/ccsIN87E.s:7866   .text._ZNKSt6vectorIN2gr5tag_tESaIS1_EE4sizeEv:0000000000000000 _ZNKSt6vectorIN2gr5tag_tESaIS1_EE4sizeEv
     /tmp/ccsIN87E.s:7898   .text._ZNSt6vectorIN2gr5tag_tESaIS1_EEixEm:0000000000000000 _ZNSt6vectorIN2gr5tag_tESaIS1_EEixEm
     /tmp/ccsIN87E.s:7928   .text._ZNSt6vectorIN2gr5tag_tESaIS1_EE5beginEv:0000000000000000 _ZNSt6vectorIN2gr5tag_tESaIS1_EE5beginEv
     /tmp/ccsIN87E.s:7956   .text._ZN9__gnu_cxx17__normal_iteratorIPKN2gr5tag_tESt6vectorIS2_SaIS2_EEEC2IPS2_EERKNS0_IT_NS_11__enable_ifIXsrSt10__are_sameISB_SA_E7__valueES7_E6__typeEEE:0000000000000000 _ZN9__gnu_cxx17__normal_iteratorIPKN2gr5tag_tESt6vectorIS2_SaIS2_EEEC1IPS2_EERKNS0_IT_NS_11__enable_ifIXsrSt10__are_sameISB_SA_E7__valueES7_E6__typeEEE
     /tmp/ccsIN87E.s:7991   .text._ZNSt6vectorIN2gr5tag_tESaIS1_EE5eraseEN9__gnu_cxx17__normal_iteratorIPKS1_S3_EE:0000000000000000 _ZNSt6vectorIN2gr5tag_tESaIS1_EE5eraseEN9__gnu_cxx17__normal_iteratorIPKS1_S3_EE
     /tmp/ccsIN87E.s:8040   .text._ZStmlIfESt7complexIT_ERKS2_S4_:0000000000000000 _ZStmlIfESt7complexIT_ERKS2_S4_
     /tmp/ccsIN87E.s:7812   .text._ZNSt6vectorIN2gr5tag_tESaIS1_EED2Ev:0000000000000000 _ZNSt6vectorIN2gr5tag_tESaIS1_EED1Ev
     /tmp/ccsIN87E.s:4546   .text:0000000000000db6 _ZN2gr5lfast12costas2_impl9work_testEiRSt6vectorIPKvSaIS4_EERS2_IPvSaIS8_EE
     /tmp/ccsIN87E.s:4937   .text:00000000000012e2 _ZN2gr5lfast12costas2_impl4workEiRSt6vectorIPKvSaIS4_EERS2_IPvSaIS8_EE
     /tmp/ccsIN87E.s:5329   .text:000000000000180f _ZTv0_n176_N2gr5lfast12costas2_impl4workEiRSt6vectorIPKvSaIS4_EERS2_IPvSaIS8_EE
     /tmp/ccsIN87E.s:5342   .text:000000000000181e _ZN2gr5lfast12costas2_impl9setup_rpcEv
     /tmp/ccsIN87E.s:5363   .text:0000000000001829 _ZTv0_n88_N2gr5lfast12costas2_impl9setup_rpcEv
     /tmp/ccsIN87E.s:5377   .text._ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEEC2Ev:0000000000000000 _ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEEC2Ev
     /tmp/ccsIN87E.s:5406   .text._ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEED2Ev:0000000000000000 _ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEED2Ev
     /tmp/ccsIN87E.s:8083   .text._ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEE7releaseEv:0000000000000000 _ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEE7releaseEv
     /tmp/ccsIN87E.s:6405   .text._ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEE5adoptEPS2_:0000000000000000 _ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEE5adoptEPS2_
     /tmp/ccsIN87E.s:5504   .text._ZN5boost16exception_detail10clone_baseC2ERKS1_:0000000000000000 _ZN5boost16exception_detail10clone_baseC2ERKS1_
     /tmp/ccsIN87E.s:5504   .text._ZN5boost16exception_detail10clone_baseC2ERKS1_:0000000000000000 _ZN5boost16exception_detail10clone_baseC1ERKS1_
     /tmp/ccsIN87E.s:5534   .text._ZN5boost13intrusive_ptrIN3pmt8pmt_baseEED2Ev:0000000000000000 _ZN5boost13intrusive_ptrIN3pmt8pmt_baseEED2Ev
     /tmp/ccsIN87E.s:5584   .text._ZN5boost13intrusive_ptrIN3pmt8pmt_baseEEC2EOS3_:0000000000000000 _ZN5boost13intrusive_ptrIN3pmt8pmt_baseEEC2EOS3_
     /tmp/ccsIN87E.s:5584   .text._ZN5boost13intrusive_ptrIN3pmt8pmt_baseEEC2EOS3_:0000000000000000 _ZN5boost13intrusive_ptrIN3pmt8pmt_baseEEC1EOS3_
     /tmp/ccsIN87E.s:8184   .text._ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt10_Select1stISA_ENS2_10comparatorESaISA_EE4findERS6_:0000000000000000 _ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt10_Select1stISA_ENS2_10comparatorESaISA_EE4findERS6_
     /tmp/ccsIN87E.s:8308   .text._ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt10_Select1stISA_ENS2_10comparatorESaISA_EE3endEv:0000000000000000 _ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt10_Select1stISA_ENS2_10comparatorESaISA_EE3endEv
     /tmp/ccsIN87E.s:5726   .text._ZN5boost13intrusive_ptrIN3pmt8pmt_baseEEC2ERKS3_:0000000000000000 _ZN5boost13intrusive_ptrIN3pmt8pmt_baseEEC2ERKS3_
     /tmp/ccsIN87E.s:5770   .text._ZNSt10_Head_baseILm0ERKN5boost13intrusive_ptrIN3pmt8pmt_baseEEELb0EEC2ES6_:0000000000000000 _ZNSt10_Head_baseILm0ERKN5boost13intrusive_ptrIN3pmt8pmt_baseEEELb0EEC2ES6_
     /tmp/ccsIN87E.s:5770   .text._ZNSt10_Head_baseILm0ERKN5boost13intrusive_ptrIN3pmt8pmt_baseEEELb0EEC2ES6_:0000000000000000 _ZNSt10_Head_baseILm0ERKN5boost13intrusive_ptrIN3pmt8pmt_baseEEELb0EEC1ES6_
     /tmp/ccsIN87E.s:5801   .text._ZNSt11_Tuple_implILm0EJRKN5boost13intrusive_ptrIN3pmt8pmt_baseEEEEEC2ES6_:0000000000000000 _ZNSt11_Tuple_implILm0EJRKN5boost13intrusive_ptrIN3pmt8pmt_baseEEEEEC2ES6_
     /tmp/ccsIN87E.s:5801   .text._ZNSt11_Tuple_implILm0EJRKN5boost13intrusive_ptrIN3pmt8pmt_baseEEEEEC2ES6_:0000000000000000 _ZNSt11_Tuple_implILm0EJRKN5boost13intrusive_ptrIN3pmt8pmt_baseEEEEEC1ES6_
     /tmp/ccsIN87E.s:5834   .text._ZNSt5tupleIJRKN5boost13intrusive_ptrIN3pmt8pmt_baseEEEEEC2IvLb1EEES6_:0000000000000000 _ZNSt5tupleIJRKN5boost13intrusive_ptrIN3pmt8pmt_baseEEEEEC2IvLb1EEES6_
     /tmp/ccsIN87E.s:5834   .text._ZNSt5tupleIJRKN5boost13intrusive_ptrIN3pmt8pmt_baseEEEEEC2IvLb1EEES6_:0000000000000000 _ZNSt5tupleIJRKN5boost13intrusive_ptrIN3pmt8pmt_baseEEEEEC1IvLb1EEES6_
     /tmp/ccsIN87E.s:8337   .text._ZNSt3mapIN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS0_8functionIFvS4_EEENS2_10comparatorESaISt4pairIKS4_S7_EEE11lower_boundERSA_:0000000000000000 _ZNSt3mapIN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS0_8functionIFvS4_EEENS2_10comparatorESaISt4pairIKS4_S7_EEE11lower_boundERSA_
     /tmp/ccsIN87E.s:8365   .text._ZNKSt17_Rb_tree_iteratorISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS1_8functionIFvS5_EEEEEeqERKSB_:0000000000000000 _ZNKSt17_Rb_tree_iteratorISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS1_8functionIFvS5_EEEEEeqERKSB_
     /tmp/ccsIN87E.s:8423   .text._ZNKSt17_Rb_tree_iteratorISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS1_8functionIFvS5_EEEEEdeEv:0000000000000000 _ZNKSt17_Rb_tree_iteratorISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS1_8functionIFvS5_EEEEEdeEv
     /tmp/ccsIN87E.s:8393   .text._ZNKSt3mapIN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS0_8functionIFvS4_EEENS2_10comparatorESaISt4pairIKS4_S7_EEE8key_compEv:0000000000000000 _ZNKSt3mapIN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS0_8functionIFvS4_EEENS2_10comparatorESaISt4pairIKS4_S7_EEE8key_compEv
     /tmp/ccsIN87E.s:8449   .text._ZNSt23_Rb_tree_const_iteratorISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS1_8functionIFvS5_EEEEEC2ERKSt17_Rb_tree_iteratorISA_E:0000000000000000 _ZNSt23_Rb_tree_const_iteratorISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS1_8functionIFvS5_EEEEEC1ERKSt17_Rb_tree_iteratorISA_E
     /tmp/ccsIN87E.s:8544   .text._ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt10_Select1stISA_ENS2_10comparatorESaISA_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS6_EESK_IJEEEEESt17_Rb_tree_iteratorISA_ESt23_Rb_tree_const_iteratorISA_EDpOT_:0000000000000000 _ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt10_Select1stISA_ENS2_10comparatorESaISA_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS6_EESK_IJEEEEESt17_Rb_tree_iteratorISA_ESt23_Rb_tree_const_iteratorISA_EDpOT_
     /tmp/ccsIN87E.s:6017   .text._ZN5boost17bad_function_callD2Ev:0000000000000000 _ZN5boost17bad_function_callD2Ev
     /tmp/ccsIN87E.s:6017   .text._ZN5boost17bad_function_callD2Ev:0000000000000000 _ZN5boost17bad_function_callD1Ev
     /tmp/ccsIN87E.s:6050   .text._ZN5boost17bad_function_callD0Ev:0000000000000000 _ZN5boost17bad_function_callD0Ev
     /tmp/ccsIN87E.s:8917   .text._ZN5boost15throw_exceptionINS_17bad_function_callEEEvRKT_:0000000000000000 _ZN5boost15throw_exceptionINS_17bad_function_callEEEvRKT_
     /tmp/ccsIN87E.s:9010   .text._ZNK5boost9function1IvNS_13intrusive_ptrIN3pmt8pmt_baseEEEE10get_vtableEv:0000000000000000 _ZNK5boost9function1IvNS_13intrusive_ptrIN3pmt8pmt_baseEEEE10get_vtableEv
     /tmp/ccsIN87E.s:9034   .text._ZN5boost7forwardINS_13intrusive_ptrIN3pmt8pmt_baseEEEEEOT_RNS_11move_detail16remove_referenceIS5_E4typeE:0000000000000000 _ZN5boost7forwardINS_13intrusive_ptrIN3pmt8pmt_baseEEEEEOT_RNS_11move_detail16remove_referenceIS5_E4typeE
GAS LISTING /tmp/ccsIN87E.s 			page 749


     /tmp/ccsIN87E.s:9057   .text._ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_St5dequeIS4_SaIS4_EEESt10_Select1stISA_ENS2_10comparatorESaISA_EE4findERS6_:0000000000000000 _ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_St5dequeIS4_SaIS4_EEESt10_Select1stISA_ENS2_10comparatorESaISA_EE4findERS6_
     /tmp/ccsIN87E.s:9181   .text._ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_St5dequeIS4_SaIS4_EEESt10_Select1stISA_ENS2_10comparatorESaISA_EE3endEv:0000000000000000 _ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_St5dequeIS4_SaIS4_EEESt10_Select1stISA_ENS2_10comparatorESaISA_EE3endEv
     /tmp/ccsIN87E.s:6255   .text._ZNKSt17_Rb_tree_iteratorISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt5dequeIS5_SaIS5_EEEEeqERKSB_:0000000000000000 _ZNKSt17_Rb_tree_iteratorISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt5dequeIS5_SaIS5_EEEEeqERKSB_
     /tmp/ccsIN87E.s:6311   .text._ZNSt6vectorIlSaIlEED2Ev:0000000000000000 _ZNSt6vectorIlSaIlEED2Ev
     /tmp/ccsIN87E.s:9299   .text._ZNSt12_Vector_baseIlSaIlEE19_M_get_Tp_allocatorEv:0000000000000000 _ZNSt12_Vector_baseIlSaIlEE19_M_get_Tp_allocatorEv
     /tmp/ccsIN87E.s:9320   .text._ZSt8_DestroyIPllEvT_S1_RSaIT0_E:0000000000000000 _ZSt8_DestroyIPllEvT_S1_RSaIT0_E
     /tmp/ccsIN87E.s:9240   .text._ZNSt12_Vector_baseIlSaIlEED2Ev:0000000000000000 _ZNSt12_Vector_baseIlSaIlEED2Ev
     /tmp/ccsIN87E.s:9352   .text._ZN5boost13intrusive_ptrIN3pmt8pmt_baseEE4swapERS3_:0000000000000000 _ZN5boost13intrusive_ptrIN3pmt8pmt_baseEE4swapERS3_
     /tmp/ccsIN87E.s:9388   .text._ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEE7add_refEv:0000000000000000 _ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEE7add_refEv
     /tmp/ccsIN87E.s:6441   .text._ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEEC2ERKS3_:0000000000000000 _ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEEC2ERKS3_
     /tmp/ccsIN87E.s:6478   .text._ZN5boost10shared_ptrIKNS_16exception_detail10clone_baseEEC2ERKS4_:0000000000000000 _ZN5boost10shared_ptrIKNS_16exception_detail10clone_baseEEC2ERKS4_
     /tmp/ccsIN87E.s:6518   .text._ZN5boost16exception_detail10bad_alloc_C2Ev:0000000000000000 _ZN5boost16exception_detail10bad_alloc_C2Ev
     /tmp/ccsIN87E.s:6518   .text._ZN5boost16exception_detail10bad_alloc_C2Ev:0000000000000000 _ZN5boost16exception_detail10bad_alloc_C1Ev
     /tmp/ccsIN87E.s:6558   .text._ZNSt9bad_allocC2ERKS_:0000000000000000 _ZNSt9bad_allocC2ERKS_
     /tmp/ccsIN87E.s:6558   .text._ZNSt9bad_allocC2ERKS_:0000000000000000 _ZNSt9bad_allocC1ERKS_
     /tmp/ccsIN87E.s:6594   .text._ZN5boost16exception_detail10bad_alloc_C2ERKS1_:0000000000000000 _ZN5boost16exception_detail10bad_alloc_C2ERKS1_
     /tmp/ccsIN87E.s:6594   .text._ZN5boost16exception_detail10bad_alloc_C2ERKS1_:0000000000000000 _ZN5boost16exception_detail10bad_alloc_C1ERKS1_
     /tmp/ccsIN87E.s:6640   .text._ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EEC1ERKS3_:0000000000000000 _ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EEC1ERKS3_
     /tmp/ccsIN87E.s:17851  .data.rel.ro._ZTVN5boost16exception_detail10clone_implINS0_10bad_alloc_EEE:0000000000000000 _ZTVN5boost16exception_detail10clone_implINS0_10bad_alloc_EEE
     /tmp/ccsIN87E.s:6735   .bss._ZZN5boost16exception_detail27get_static_exception_objectINS0_10bad_alloc_EEENS_13exception_ptrEvE2ep:0000000000000000 _ZZN5boost16exception_detail27get_static_exception_objectINS0_10bad_alloc_EEENS_13exception_ptrEvE2ep
     /tmp/ccsIN87E.s:6742   .bss._ZGVZN5boost16exception_detail27get_static_exception_objectINS0_10bad_alloc_EEENS_13exception_ptrEvE2ep:0000000000000000 _ZGVZN5boost16exception_detail27get_static_exception_objectINS0_10bad_alloc_EEENS_13exception_ptrEvE2ep
     /tmp/ccsIN87E.s:6751   .text._ZN5boost16exception_detail27get_static_exception_objectINS0_10bad_alloc_EEENS_13exception_ptrEv:0000000000000000 _ZN5boost16exception_detail27get_static_exception_objectINS0_10bad_alloc_EEENS_13exception_ptrEv
     /tmp/ccsIN87E.s:9457   .text._ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EEC1ERKS2_:0000000000000000 _ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EEC1ERKS2_
     /tmp/ccsIN87E.s:19573  .rodata:00000000000000a0 _ZZN5boost16exception_detail27get_static_exception_objectINS0_10bad_alloc_EEENS_13exception_ptrEvE19__PRETTY_FUNCTION__
     /tmp/ccsIN87E.s:9706   .text._ZN5boostlsINS_16exception_detail10clone_implINS1_10bad_alloc_EEENS_15throw_function_EPKcEENS_9enable_ifINS1_23derives_boost_exceptionIT_EERKSA_E4typeESD_ONS_10error_infoIT0_T1_EE:0000000000000000 _ZN5boostlsINS_16exception_detail10clone_implINS1_10bad_alloc_EEENS_15throw_function_EPKcEENS_9enable_ifINS1_23derives_boost_exceptionIT_EERKSA_E4typeESD_ONS_10error_infoIT0_T1_EE
     /tmp/ccsIN87E.s:9759   .text._ZN5boostlsINS_16exception_detail10clone_implINS1_10bad_alloc_EEENS_11throw_file_EPKcEENS_9enable_ifINS1_23derives_boost_exceptionIT_EERKSA_E4typeESD_ONS_10error_infoIT0_T1_EE:0000000000000000 _ZN5boostlsINS_16exception_detail10clone_implINS1_10bad_alloc_EEENS_11throw_file_EPKcEENS_9enable_ifINS1_23derives_boost_exceptionIT_EERKSA_E4typeESD_ONS_10error_infoIT0_T1_EE
     /tmp/ccsIN87E.s:9811   .text._ZN5boostlsINS_16exception_detail10clone_implINS1_10bad_alloc_EEENS_11throw_line_EiEENS_9enable_ifINS1_23derives_boost_exceptionIT_EERKS8_E4typeESB_ONS_10error_infoIT0_T1_EE:0000000000000000 _ZN5boostlsINS_16exception_detail10clone_implINS1_10bad_alloc_EEENS_11throw_line_EiEENS_9enable_ifINS1_23derives_boost_exceptionIT_EERKS8_E4typeESB_ONS_10error_infoIT0_T1_EE
     /tmp/ccsIN87E.s:9843   .text._ZN5boost10shared_ptrIKNS_16exception_detail10clone_baseEEC2INS1_10clone_implINS1_10bad_alloc_EEEEEPT_:0000000000000000 _ZN5boost10shared_ptrIKNS_16exception_detail10clone_baseEEC1INS1_10clone_implINS1_10bad_alloc_EEEEEPT_
     /tmp/ccsIN87E.s:9565   .text._ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EED1Ev:0000000000000000 _ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EED1Ev
     /tmp/ccsIN87E.s:6968   .text._ZN5boost16exception_detail14bad_exception_C2Ev:0000000000000000 _ZN5boost16exception_detail14bad_exception_C2Ev
     /tmp/ccsIN87E.s:6968   .text._ZN5boost16exception_detail14bad_exception_C2Ev:0000000000000000 _ZN5boost16exception_detail14bad_exception_C1Ev
     /tmp/ccsIN87E.s:7008   .text._ZNSt13bad_exceptionC2ERKS_:0000000000000000 _ZNSt13bad_exceptionC2ERKS_
     /tmp/ccsIN87E.s:7008   .text._ZNSt13bad_exceptionC2ERKS_:0000000000000000 _ZNSt13bad_exceptionC1ERKS_
     /tmp/ccsIN87E.s:7044   .text._ZN5boost16exception_detail14bad_exception_C2ERKS1_:0000000000000000 _ZN5boost16exception_detail14bad_exception_C2ERKS1_
     /tmp/ccsIN87E.s:7044   .text._ZN5boost16exception_detail14bad_exception_C2ERKS1_:0000000000000000 _ZN5boost16exception_detail14bad_exception_C1ERKS1_
     /tmp/ccsIN87E.s:7090   .text._ZN5boost16exception_detail10clone_implINS0_14bad_exception_EEC1ERKS3_:0000000000000000 _ZN5boost16exception_detail10clone_implINS0_14bad_exception_EEC1ERKS3_
     /tmp/ccsIN87E.s:17816  .data.rel.ro._ZTVN5boost16exception_detail10clone_implINS0_14bad_exception_EEE:0000000000000000 _ZTVN5boost16exception_detail10clone_implINS0_14bad_exception_EEE
     /tmp/ccsIN87E.s:7185   .bss._ZZN5boost16exception_detail27get_static_exception_objectINS0_14bad_exception_EEENS_13exception_ptrEvE2ep:0000000000000000 _ZZN5boost16exception_detail27get_static_exception_objectINS0_14bad_exception_EEENS_13exception_ptrEvE2ep
     /tmp/ccsIN87E.s:7192   .bss._ZGVZN5boost16exception_detail27get_static_exception_objectINS0_14bad_exception_EEENS_13exception_ptrEvE2ep:0000000000000000 _ZGVZN5boost16exception_detail27get_static_exception_objectINS0_14bad_exception_EEENS_13exception_ptrEvE2ep
     /tmp/ccsIN87E.s:7197   .text._ZN5boost16exception_detail27get_static_exception_objectINS0_14bad_exception_EEENS_13exception_ptrEv:0000000000000000 _ZN5boost16exception_detail27get_static_exception_objectINS0_14bad_exception_EEENS_13exception_ptrEv
     /tmp/ccsIN87E.s:9943   .text._ZN5boost16exception_detail10clone_implINS0_14bad_exception_EEC1ERKS2_:0000000000000000 _ZN5boost16exception_detail10clone_implINS0_14bad_exception_EEC1ERKS2_
     /tmp/ccsIN87E.s:19578  .rodata:0000000000000140 _ZZN5boost16exception_detail27get_static_exception_objectINS0_14bad_exception_EEENS_13exception_ptrEvE19__PRETTY_FUNCTION__
     /tmp/ccsIN87E.s:10171  .text._ZN5boostlsINS_16exception_detail10clone_implINS1_14bad_exception_EEENS_15throw_function_EPKcEENS_9enable_ifINS1_23derives_boost_exceptionIT_EERKSA_E4typeESD_ONS_10error_infoIT0_T1_EE:0000000000000000 _ZN5boostlsINS_16exception_detail10clone_implINS1_14bad_exception_EEENS_15throw_function_EPKcEENS_9enable_ifINS1_23derives_boost_exceptionIT_EERKSA_E4typeESD_ONS_10error_infoIT0_T1_EE
     /tmp/ccsIN87E.s:10202  .text._ZN5boostlsINS_16exception_detail10clone_implINS1_14bad_exception_EEENS_11throw_file_EPKcEENS_9enable_ifINS1_23derives_boost_exceptionIT_EERKSA_E4typeESD_ONS_10error_infoIT0_T1_EE:0000000000000000 _ZN5boostlsINS_16exception_detail10clone_implINS1_14bad_exception_EEENS_11throw_file_EPKcEENS_9enable_ifINS1_23derives_boost_exceptionIT_EERKSA_E4typeESD_ONS_10error_infoIT0_T1_EE
     /tmp/ccsIN87E.s:10233  .text._ZN5boostlsINS_16exception_detail10clone_implINS1_14bad_exception_EEENS_11throw_line_EiEENS_9enable_ifINS1_23derives_boost_exceptionIT_EERKS8_E4typeESB_ONS_10error_infoIT0_T1_EE:0000000000000000 _ZN5boostlsINS_16exception_detail10clone_implINS1_14bad_exception_EEENS_11throw_line_EiEENS_9enable_ifINS1_23derives_boost_exceptionIT_EERKS8_E4typeESB_ONS_10error_infoIT0_T1_EE
     /tmp/ccsIN87E.s:10265  .text._ZN5boost10shared_ptrIKNS_16exception_detail10clone_baseEEC2INS1_10clone_implINS1_14bad_exception_EEEEEPT_:0000000000000000 _ZN5boost10shared_ptrIKNS_16exception_detail10clone_baseEEC1INS1_10clone_implINS1_14bad_exception_EEEEEPT_
     /tmp/ccsIN87E.s:10051  .text._ZN5boost16exception_detail10clone_implINS0_14bad_exception_EED1Ev:0000000000000000 _ZN5boost16exception_detail10clone_implINS0_14bad_exception_EED1Ev
     /tmp/ccsIN87E.s:7414   .text._ZNSt6vectorIiSaIiEEC2ERKS1_:0000000000000000 _ZNSt6vectorIiSaIiEEC2ERKS1_
     /tmp/ccsIN87E.s:10423  .text._ZNKSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv:0000000000000000 _ZNKSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv
     /tmp/ccsIN87E.s:10393  .text._ZN9__gnu_cxx14__alloc_traitsISaIiEE17_S_select_on_copyERKS1_:0000000000000000 _ZN9__gnu_cxx14__alloc_traitsISaIiEE17_S_select_on_copyERKS1_
     /tmp/ccsIN87E.s:10365  .text._ZNKSt6vectorIiSaIiEE4sizeEv:0000000000000000 _ZNKSt6vectorIiSaIiEE4sizeEv
     /tmp/ccsIN87E.s:10506  .text._ZNSt12_Vector_baseIiSaIiEEC2EmRKS0_:0000000000000000 _ZNSt12_Vector_baseIiSaIiEEC2EmRKS0_
     /tmp/ccsIN87E.s:10445  .text._ZNSaIiED2Ev:0000000000000000 _ZNSaIiED1Ev
     /tmp/ccsIN87E.s:10707  .text._ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv:0000000000000000 _ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv
     /tmp/ccsIN87E.s:10676  .text._ZNKSt6vectorIiSaIiEE3endEv:0000000000000000 _ZNKSt6vectorIiSaIiEE3endEv
     /tmp/ccsIN87E.s:10645  .text._ZNKSt6vectorIiSaIiEE5beginEv:0000000000000000 _ZNKSt6vectorIiSaIiEE5beginEv
     /tmp/ccsIN87E.s:10728  .text._ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEPiiET0_T_SA_S9_RSaIT1_E:0000000000000000 _ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEPiiET0_T_SA_S9_RSaIT1_E
GAS LISTING /tmp/ccsIN87E.s 			page 750


     /tmp/ccsIN87E.s:10586  .text._ZNSt12_Vector_baseIiSaIiEED2Ev:0000000000000000 _ZNSt12_Vector_baseIiSaIiEED2Ev
     /tmp/ccsIN87E.s:7554   .text._ZN5boost10shared_ptrIN2gr11basic_blockEED2Ev:0000000000000000 _ZN5boost10shared_ptrIN2gr11basic_blockEED2Ev
     /tmp/ccsIN87E.s:7554   .text._ZN5boost10shared_ptrIN2gr11basic_blockEED2Ev:0000000000000000 _ZN5boost10shared_ptrIN2gr11basic_blockEED1Ev
     /tmp/ccsIN87E.s:10783  .text._ZN5boost20dynamic_pointer_castIN2gr5lfast12costas2_implENS1_11basic_blockEEENS_10shared_ptrIT_EERKNS5_IT0_EE:0000000000000000 _ZN5boost20dynamic_pointer_castIN2gr5lfast12costas2_implENS1_11basic_blockEEENS_10shared_ptrIT_EERKNS5_IT0_EE
     /tmp/ccsIN87E.s:7638   .text._ZN5boost10shared_ptrIN2gr5lfast7costas2EEC2INS2_12costas2_implEEEONS0_IT_EENS_6detail24sp_enable_if_convertibleIS7_S3_E4typeE:0000000000000000 _ZN5boost10shared_ptrIN2gr5lfast7costas2EEC2INS2_12costas2_implEEEONS0_IT_EENS_6detail24sp_enable_if_convertibleIS7_S3_E4typeE
     /tmp/ccsIN87E.s:10842  .text._ZN5boost6detail21sp_assert_convertibleIN2gr5lfast12costas2_implENS3_7costas2EEEvv:0000000000000000 _ZN5boost6detail21sp_assert_convertibleIN2gr5lfast12costas2_implENS3_7costas2EEEvv
     /tmp/ccsIN87E.s:7771   .text._ZNSt6vectorIN2gr5tag_tESaIS1_EEC2Ev:0000000000000000 _ZNSt6vectorIN2gr5tag_tESaIS1_EEC2Ev
     /tmp/ccsIN87E.s:10893  .text._ZNSt12_Vector_baseIN2gr5tag_tESaIS1_EEC2Ev:0000000000000000 _ZNSt12_Vector_baseIN2gr5tag_tESaIS1_EEC2Ev
     /tmp/ccsIN87E.s:7812   .text._ZNSt6vectorIN2gr5tag_tESaIS1_EED2Ev:0000000000000000 _ZNSt6vectorIN2gr5tag_tESaIS1_EED2Ev
     /tmp/ccsIN87E.s:10985  .text._ZNSt12_Vector_baseIN2gr5tag_tESaIS1_EE19_M_get_Tp_allocatorEv:0000000000000000 _ZNSt12_Vector_baseIN2gr5tag_tESaIS1_EE19_M_get_Tp_allocatorEv
     /tmp/ccsIN87E.s:11006  .text._ZSt8_DestroyIPN2gr5tag_tES1_EvT_S3_RSaIT0_E:0000000000000000 _ZSt8_DestroyIPN2gr5tag_tES1_EvT_S3_RSaIT0_E
     /tmp/ccsIN87E.s:10923  .text._ZNSt12_Vector_baseIN2gr5tag_tESaIS1_EED2Ev:0000000000000000 _ZNSt12_Vector_baseIN2gr5tag_tESaIS1_EED2Ev
     /tmp/ccsIN87E.s:11037  .text._ZN9__gnu_cxx17__normal_iteratorIPN2gr5tag_tESt6vectorIS2_SaIS2_EEEC2ERKS3_:0000000000000000 _ZN9__gnu_cxx17__normal_iteratorIPN2gr5tag_tESt6vectorIS2_SaIS2_EEEC1ERKS3_
     /tmp/ccsIN87E.s:7956   .text._ZN9__gnu_cxx17__normal_iteratorIPKN2gr5tag_tESt6vectorIS2_SaIS2_EEEC2IPS2_EERKNS0_IT_NS_11__enable_ifIXsrSt10__are_sameISB_SA_E7__valueES7_E6__typeEEE:0000000000000000 _ZN9__gnu_cxx17__normal_iteratorIPKN2gr5tag_tESt6vectorIS2_SaIS2_EEEC2IPS2_EERKNS0_IT_NS_11__enable_ifIXsrSt10__are_sameISB_SA_E7__valueES7_E6__typeEEE
     /tmp/ccsIN87E.s:11068  .text._ZNK9__gnu_cxx17__normal_iteratorIPN2gr5tag_tESt6vectorIS2_SaIS2_EEE4baseEv:0000000000000000 _ZNK9__gnu_cxx17__normal_iteratorIPN2gr5tag_tESt6vectorIS2_SaIS2_EEE4baseEv
     /tmp/ccsIN87E.s:11090  .text._ZNKSt6vectorIN2gr5tag_tESaIS1_EE6cbeginEv:0000000000000000 _ZNKSt6vectorIN2gr5tag_tESaIS1_EE6cbeginEv
     /tmp/ccsIN87E.s:11120  .text._ZN9__gnu_cxxmiIPKN2gr5tag_tESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSB_SE_:0000000000000000 _ZN9__gnu_cxxmiIPKN2gr5tag_tESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSB_SE_
     /tmp/ccsIN87E.s:11162  .text._ZNK9__gnu_cxx17__normal_iteratorIPN2gr5tag_tESt6vectorIS2_SaIS2_EEEplEl:0000000000000000 _ZNK9__gnu_cxx17__normal_iteratorIPN2gr5tag_tESt6vectorIS2_SaIS2_EEEplEl
     /tmp/ccsIN87E.s:11200  .text._ZNSt6vectorIN2gr5tag_tESaIS1_EE8_M_eraseEN9__gnu_cxx17__normal_iteratorIPS1_S3_EE:0000000000000000 _ZNSt6vectorIN2gr5tag_tESaIS1_EE8_M_eraseEN9__gnu_cxx17__normal_iteratorIPS1_S3_EE
     /tmp/ccsIN87E.s:11276  .text._ZNSt7complexIfEmLIfEERS0_RKS_IT_E:0000000000000000 _ZNSt7complexIfEmLIfEERS0_RKS_IT_E
     /tmp/ccsIN87E.s:8138   .text._ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt10_Select1stISA_ENS2_10comparatorESaISA_EE8_M_beginEv:0000000000000000 _ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt10_Select1stISA_ENS2_10comparatorESaISA_EE8_M_beginEv
     /tmp/ccsIN87E.s:8161   .text._ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_St5dequeIS4_SaIS4_EEESt10_Select1stISA_ENS2_10comparatorESaISA_EE8_M_beginEv:0000000000000000 _ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_St5dequeIS4_SaIS4_EEESt10_Select1stISA_ENS2_10comparatorESaISA_EE8_M_beginEv
     /tmp/ccsIN87E.s:11466  .text._ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt10_Select1stISA_ENS2_10comparatorESaISA_EE6_M_endEv:0000000000000000 _ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt10_Select1stISA_ENS2_10comparatorESaISA_EE6_M_endEv
     /tmp/ccsIN87E.s:11489  .text._ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt10_Select1stISA_ENS2_10comparatorESaISA_EE14_M_lower_boundEPSt13_Rb_tree_nodeISA_EPSt18_Rb_tree_node_baseRS6_:0000000000000000 _ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt10_Select1stISA_ENS2_10comparatorESaISA_EE14_M_lower_boundEPSt13_Rb_tree_nodeISA_EPSt18_Rb_tree_node_baseRS6_
     /tmp/ccsIN87E.s:11554  .text._ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt10_Select1stISA_ENS2_10comparatorESaISA_EE6_S_keyEPKSt18_Rb_tree_node_base:0000000000000000 _ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt10_Select1stISA_ENS2_10comparatorESaISA_EE6_S_keyEPKSt18_Rb_tree_node_base
     /tmp/ccsIN87E.s:11584  .text._ZNSt17_Rb_tree_iteratorISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS1_8functionIFvS5_EEEEEC2EPSt18_Rb_tree_node_base:0000000000000000 _ZNSt17_Rb_tree_iteratorISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS1_8functionIFvS5_EEEEEC1EPSt18_Rb_tree_node_base
     /tmp/ccsIN87E.s:11614  .text._ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt10_Select1stISA_ENS2_10comparatorESaISA_EE11lower_boundERS6_:0000000000000000 _ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt10_Select1stISA_ENS2_10comparatorESaISA_EE11lower_boundERS6_
     /tmp/ccsIN87E.s:11655  .text._ZNKSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt10_Select1stISA_ENS2_10comparatorESaISA_EE8key_compEv:0000000000000000 _ZNKSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt10_Select1stISA_ENS2_10comparatorESaISA_EE8key_compEv
     /tmp/ccsIN87E.s:11676  .text._ZNSt13_Rb_tree_nodeISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS1_8functionIFvS5_EEEEE9_M_valptrEv:0000000000000000 _ZNSt13_Rb_tree_nodeISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS1_8functionIFvS5_EEEEE9_M_valptrEv
     /tmp/ccsIN87E.s:8449   .text._ZNSt23_Rb_tree_const_iteratorISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS1_8functionIFvS5_EEEEEC2ERKSt17_Rb_tree_iteratorISA_E:0000000000000000 _ZNSt23_Rb_tree_const_iteratorISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS1_8functionIFvS5_EEEEEC2ERKSt17_Rb_tree_iteratorISA_E
     /tmp/ccsIN87E.s:8479   .text._ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE:0000000000000000 _ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE
     /tmp/ccsIN87E.s:8501   .text._ZSt7forwardISt5tupleIJRKN5boost13intrusive_ptrIN3pmt8pmt_baseEEEEEEOT_RNSt16remove_referenceIS9_E4typeE:0000000000000000 _ZSt7forwardISt5tupleIJRKN5boost13intrusive_ptrIN3pmt8pmt_baseEEEEEEOT_RNSt16remove_referenceIS9_E4typeE
     /tmp/ccsIN87E.s:8522   .text._ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE:0000000000000000 _ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE
     /tmp/ccsIN87E.s:11702  .text._ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt10_Select1stISA_ENS2_10comparatorESaISA_EE14_M_create_nodeIJRKSt21piecewise_construct_tSt5tupleIJRS6_EESK_IJEEEEEPSt13_Rb_tree_nodeISA_EDpOT_:0000000000000000 _ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt10_Select1stISA_ENS2_10comparatorESaISA_EE14_M_create_nodeIJRKSt21piecewise_construct_tSt5tupleIJRS6_EESK_IJEEEEEPSt13_Rb_tree_nodeISA_EDpOT_
     /tmp/ccsIN87E.s:12213  .text._ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt10_Select1stISA_ENS2_10comparatorESaISA_EE6_S_keyEPKSt13_Rb_tree_nodeISA_E:0000000000000000 _ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt10_Select1stISA_ENS2_10comparatorESaISA_EE6_S_keyEPKSt13_Rb_tree_nodeISA_E
     /tmp/ccsIN87E.s:11901  .text._ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt10_Select1stISA_ENS2_10comparatorESaISA_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISA_ERS6_:0000000000000000 _ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt10_Select1stISA_ENS2_10comparatorESaISA_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISA_ERS6_
     /tmp/ccsIN87E.s:12243  .text._ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt10_Select1stISA_ENS2_10comparatorESaISA_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSH_PSt13_Rb_tree_nodeISA_E:0000000000000000 _ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt10_Select1stISA_ENS2_10comparatorESaISA_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSH_PSt13_Rb_tree_nodeISA_E
     /tmp/ccsIN87E.s:11386  .text._ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt10_Select1stISA_ENS2_10comparatorESaISA_EE12_M_drop_nodeEPSt13_Rb_tree_nodeISA_E:0000000000000000 _ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt10_Select1stISA_ENS2_10comparatorESaISA_EE12_M_drop_nodeEPSt13_Rb_tree_nodeISA_E
     /tmp/ccsIN87E.s:8702   .text._ZN5boost17bad_function_callC2ERKS0_:0000000000000000 _ZN5boost17bad_function_callC2ERKS0_
     /tmp/ccsIN87E.s:8702   .text._ZN5boost17bad_function_callC2ERKS0_:0000000000000000 _ZN5boost17bad_function_callC1ERKS0_
     /tmp/ccsIN87E.s:8738   .text._ZN5boost16exception_detail19error_info_injectorINS_17bad_function_callEEC2ERKS3_:0000000000000000 _ZN5boost16exception_detail19error_info_injectorINS_17bad_function_callEEC2ERKS3_
     /tmp/ccsIN87E.s:17801  .data.rel.ro._ZTVN5boost16exception_detail19error_info_injectorINS_17bad_function_callEEE:0000000000000000 _ZTVN5boost16exception_detail19error_info_injectorINS_17bad_function_callEEE
     /tmp/ccsIN87E.s:8738   .text._ZN5boost16exception_detail19error_info_injectorINS_17bad_function_callEEC2ERKS3_:0000000000000000 _ZN5boost16exception_detail19error_info_injectorINS_17bad_function_callEEC1ERKS3_
     /tmp/ccsIN87E.s:8824   .text._ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEEC1ERKS5_:0000000000000000 _ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEEC1ERKS5_
     /tmp/ccsIN87E.s:17766  .data.rel.ro._ZTVN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEEE:0000000000000000 _ZTVN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEEE
     /tmp/ccsIN87E.s:12328  .text._ZN5boost17enable_error_infoINS_17bad_function_callEEENS_16exception_detail29enable_error_info_return_typeIT_E4typeERKS4_:0000000000000000 _ZN5boost17enable_error_infoINS_17bad_function_callEEENS_16exception_detail29enable_error_info_return_typeIT_E4typeERKS4_
     /tmp/ccsIN87E.s:12450  .text._ZN5boost24enable_current_exceptionINS_16exception_detail19error_info_injectorINS_17bad_function_callEEEEENS1_10clone_implIT_EERKS6_:0000000000000000 _ZN5boost24enable_current_exceptionINS_16exception_detail19error_info_injectorINS_17bad_function_callEEEEENS1_10clone_implIT_EERKS6_
     /tmp/ccsIN87E.s:12358  .text._ZN5boost16exception_detail19error_info_injectorINS_17bad_function_callEED2Ev:0000000000000000 _ZN5boost16exception_detail19error_info_injectorINS_17bad_function_callEED1Ev
     /tmp/ccsIN87E.s:12480  .text._ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEED1Ev:0000000000000000 _ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEED1Ev
     /tmp/ccsIN87E.s:18147  .data.rel.ro._ZTIN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEEE:0000000000000000 _ZTIN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEEE
     /tmp/ccsIN87E.s:12601  .text._ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_St5dequeIS4_SaIS4_EEESt10_Select1stISA_ENS2_10comparatorESaISA_EE6_M_endEv:0000000000000000 _ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_St5dequeIS4_SaIS4_EEESt10_Select1stISA_ENS2_10comparatorESaISA_EE6_M_endEv
     /tmp/ccsIN87E.s:12624  .text._ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_St5dequeIS4_SaIS4_EEESt10_Select1stISA_ENS2_10comparatorESaISA_EE14_M_lower_boundEPSt13_Rb_tree_nodeISA_EPSt18_Rb_tree_node_baseRS6_:0000000000000000 _ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_St5dequeIS4_SaIS4_EEESt10_Select1stISA_ENS2_10comparatorESaISA_EE14_M_lower_boundEPSt13_Rb_tree_nodeISA_EPSt18_Rb_tree_node_baseRS6_
     /tmp/ccsIN87E.s:12689  .text._ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_St5dequeIS4_SaIS4_EEESt10_Select1stISA_ENS2_10comparatorESaISA_EE6_S_keyEPKSt18_Rb_tree_node_base:0000000000000000 _ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_St5dequeIS4_SaIS4_EEESt10_Select1stISA_ENS2_10comparatorESaISA_EE6_S_keyEPKSt18_Rb_tree_node_base
     /tmp/ccsIN87E.s:12719  .text._ZNSt17_Rb_tree_iteratorISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt5dequeIS5_SaIS5_EEEEC2EPSt18_Rb_tree_node_base:0000000000000000 _ZNSt17_Rb_tree_iteratorISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt5dequeIS5_SaIS5_EEEEC1EPSt18_Rb_tree_node_base
     /tmp/ccsIN87E.s:9210   .text._ZNSt12_Vector_baseIlSaIlEE12_Vector_implD2Ev:0000000000000000 _ZNSt12_Vector_baseIlSaIlEE12_Vector_implD2Ev
     /tmp/ccsIN87E.s:12778  .text._ZNSaIlED2Ev:0000000000000000 _ZNSaIlED2Ev
     /tmp/ccsIN87E.s:9210   .text._ZNSt12_Vector_baseIlSaIlEE12_Vector_implD2Ev:0000000000000000 _ZNSt12_Vector_baseIlSaIlEE12_Vector_implD1Ev
GAS LISTING /tmp/ccsIN87E.s 			page 751


     /tmp/ccsIN87E.s:12808  .text._ZNSt12_Vector_baseIlSaIlEE13_M_deallocateEPlm:0000000000000000 _ZNSt12_Vector_baseIlSaIlEE13_M_deallocateEPlm
     /tmp/ccsIN87E.s:9240   .text._ZNSt12_Vector_baseIlSaIlEED2Ev:0000000000000000 _ZNSt12_Vector_baseIlSaIlEED1Ev
     /tmp/ccsIN87E.s:12843  .text._ZSt8_DestroyIPlEvT_S1_:0000000000000000 _ZSt8_DestroyIPlEvT_S1_
     /tmp/ccsIN87E.s:9428   .text._ZN5boost16exception_detail10clone_baseC2Ev:0000000000000000 _ZN5boost16exception_detail10clone_baseC2Ev
     /tmp/ccsIN87E.s:9428   .text._ZN5boost16exception_detail10clone_baseC2Ev:0000000000000000 _ZN5boost16exception_detail10clone_baseC1Ev
     /tmp/ccsIN87E.s:9606   .text._ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EED1Ev:000000000000005a _ZThn40_N5boost16exception_detail10clone_implINS0_10bad_alloc_EED1Ev
     /tmp/ccsIN87E.s:9618   .text._ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EED1Ev:0000000000000060 _ZTv0_n40_N5boost16exception_detail10clone_implINS0_10bad_alloc_EED1Ev
     /tmp/ccsIN87E.s:9632   .text._ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EED0Ev:0000000000000000 _ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EED0Ev
     /tmp/ccsIN87E.s:9660   .text._ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EED0Ev:000000000000002b _ZThn40_N5boost16exception_detail10clone_implINS0_10bad_alloc_EED0Ev
     /tmp/ccsIN87E.s:9672   .text._ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EED0Ev:0000000000000031 _ZTv0_n40_N5boost16exception_detail10clone_implINS0_10bad_alloc_EED0Ev
     /tmp/ccsIN87E.s:9685   .text._ZSt4moveIRN5boost10error_infoINS0_15throw_function_EPKcEEEONSt16remove_referenceIT_E4typeEOS8_:0000000000000000 _ZSt4moveIRN5boost10error_infoINS0_15throw_function_EPKcEEEONSt16remove_referenceIT_E4typeEOS8_
     /tmp/ccsIN87E.s:12872  .text._ZN5boost16exception_detail8set_infoINS0_10clone_implINS0_10bad_alloc_EEENS_15throw_function_EPKcEERKT_SA_ONS_10error_infoIT0_T1_EE:0000000000000000 _ZN5boost16exception_detail8set_infoINS0_10clone_implINS0_10bad_alloc_EEENS_15throw_function_EPKcEERKT_SA_ONS_10error_infoIT0_T1_EE
     /tmp/ccsIN87E.s:9738   .text._ZSt4moveIRN5boost10error_infoINS0_11throw_file_EPKcEEEONSt16remove_referenceIT_E4typeEOS8_:0000000000000000 _ZSt4moveIRN5boost10error_infoINS0_11throw_file_EPKcEEEONSt16remove_referenceIT_E4typeEOS8_
     /tmp/ccsIN87E.s:12903  .text._ZN5boost16exception_detail8set_infoINS0_10clone_implINS0_10bad_alloc_EEENS_11throw_file_EPKcEERKT_SA_ONS_10error_infoIT0_T1_EE:0000000000000000 _ZN5boost16exception_detail8set_infoINS0_10clone_implINS0_10bad_alloc_EEENS_11throw_file_EPKcEERKT_SA_ONS_10error_infoIT0_T1_EE
     /tmp/ccsIN87E.s:9790   .text._ZSt4moveIRN5boost10error_infoINS0_11throw_line_EiEEEONSt16remove_referenceIT_E4typeEOS6_:0000000000000000 _ZSt4moveIRN5boost10error_infoINS0_11throw_line_EiEEEONSt16remove_referenceIT_E4typeEOS6_
     /tmp/ccsIN87E.s:12934  .text._ZN5boost16exception_detail8set_infoINS0_10clone_implINS0_10bad_alloc_EEENS_11throw_line_EiEERKT_S8_ONS_10error_infoIT0_T1_EE:0000000000000000 _ZN5boost16exception_detail8set_infoINS0_10clone_implINS0_10bad_alloc_EEENS_11throw_line_EiEERKT_S8_ONS_10error_infoIT0_T1_EE
     /tmp/ccsIN87E.s:9843   .text._ZN5boost10shared_ptrIKNS_16exception_detail10clone_baseEEC2INS1_10clone_implINS1_10bad_alloc_EEEEEPT_:0000000000000000 _ZN5boost10shared_ptrIKNS_16exception_detail10clone_baseEEC2INS1_10clone_implINS1_10bad_alloc_EEEEEPT_
     /tmp/ccsIN87E.s:12965  .text._ZN5boost6detail20sp_pointer_constructIKNS_16exception_detail10clone_baseENS2_10clone_implINS2_10bad_alloc_EEEEEvPNS_10shared_ptrIT_EEPT0_RNS0_12shared_countE:0000000000000000 _ZN5boost6detail20sp_pointer_constructIKNS_16exception_detail10clone_baseENS2_10clone_implINS2_10bad_alloc_EEEEEvPNS_10shared_ptrIT_EEPT0_RNS0_12shared_countE
     /tmp/ccsIN87E.s:10092  .text._ZN5boost16exception_detail10clone_implINS0_14bad_exception_EED1Ev:000000000000005a _ZThn40_N5boost16exception_detail10clone_implINS0_14bad_exception_EED1Ev
     /tmp/ccsIN87E.s:10104  .text._ZN5boost16exception_detail10clone_implINS0_14bad_exception_EED1Ev:0000000000000060 _ZTv0_n40_N5boost16exception_detail10clone_implINS0_14bad_exception_EED1Ev
     /tmp/ccsIN87E.s:10118  .text._ZN5boost16exception_detail10clone_implINS0_14bad_exception_EED0Ev:0000000000000000 _ZN5boost16exception_detail10clone_implINS0_14bad_exception_EED0Ev
     /tmp/ccsIN87E.s:10146  .text._ZN5boost16exception_detail10clone_implINS0_14bad_exception_EED0Ev:000000000000002b _ZThn40_N5boost16exception_detail10clone_implINS0_14bad_exception_EED0Ev
     /tmp/ccsIN87E.s:10158  .text._ZN5boost16exception_detail10clone_implINS0_14bad_exception_EED0Ev:0000000000000031 _ZTv0_n40_N5boost16exception_detail10clone_implINS0_14bad_exception_EED0Ev
     /tmp/ccsIN87E.s:13011  .text._ZN5boost16exception_detail8set_infoINS0_10clone_implINS0_14bad_exception_EEENS_15throw_function_EPKcEERKT_SA_ONS_10error_infoIT0_T1_EE:0000000000000000 _ZN5boost16exception_detail8set_infoINS0_10clone_implINS0_14bad_exception_EEENS_15throw_function_EPKcEERKT_SA_ONS_10error_infoIT0_T1_EE
     /tmp/ccsIN87E.s:13042  .text._ZN5boost16exception_detail8set_infoINS0_10clone_implINS0_14bad_exception_EEENS_11throw_file_EPKcEERKT_SA_ONS_10error_infoIT0_T1_EE:0000000000000000 _ZN5boost16exception_detail8set_infoINS0_10clone_implINS0_14bad_exception_EEENS_11throw_file_EPKcEERKT_SA_ONS_10error_infoIT0_T1_EE
     /tmp/ccsIN87E.s:13073  .text._ZN5boost16exception_detail8set_infoINS0_10clone_implINS0_14bad_exception_EEENS_11throw_line_EiEERKT_S8_ONS_10error_infoIT0_T1_EE:0000000000000000 _ZN5boost16exception_detail8set_infoINS0_10clone_implINS0_14bad_exception_EEENS_11throw_line_EiEERKT_S8_ONS_10error_infoIT0_T1_EE
     /tmp/ccsIN87E.s:10265  .text._ZN5boost10shared_ptrIKNS_16exception_detail10clone_baseEEC2INS1_10clone_implINS1_14bad_exception_EEEEEPT_:0000000000000000 _ZN5boost10shared_ptrIKNS_16exception_detail10clone_baseEEC2INS1_10clone_implINS1_14bad_exception_EEEEEPT_
     /tmp/ccsIN87E.s:13104  .text._ZN5boost6detail20sp_pointer_constructIKNS_16exception_detail10clone_baseENS2_10clone_implINS2_14bad_exception_EEEEEvPNS_10shared_ptrIT_EEPT0_RNS0_12shared_countE:0000000000000000 _ZN5boost6detail20sp_pointer_constructIKNS_16exception_detail10clone_baseENS2_10clone_implINS2_14bad_exception_EEEEEvPNS_10shared_ptrIT_EEPT0_RNS0_12shared_countE
     /tmp/ccsIN87E.s:13150  .text._ZNSt16allocator_traitsISaIiEE37select_on_container_copy_constructionERKS0_:0000000000000000 _ZNSt16allocator_traitsISaIiEE37select_on_container_copy_constructionERKS0_
     /tmp/ccsIN87E.s:10445  .text._ZNSaIiED2Ev:0000000000000000 _ZNSaIiED2Ev
     /tmp/ccsIN87E.s:13213  .text._ZN9__gnu_cxx13new_allocatorIiED2Ev:0000000000000000 _ZN9__gnu_cxx13new_allocatorIiED2Ev
     /tmp/ccsIN87E.s:10476  .text._ZNSt12_Vector_baseIiSaIiEE12_Vector_implD2Ev:0000000000000000 _ZNSt12_Vector_baseIiSaIiEE12_Vector_implD2Ev
     /tmp/ccsIN87E.s:10476  .text._ZNSt12_Vector_baseIiSaIiEE12_Vector_implD2Ev:0000000000000000 _ZNSt12_Vector_baseIiSaIiEE12_Vector_implD1Ev
     /tmp/ccsIN87E.s:13238  .text._ZNSt12_Vector_baseIiSaIiEE12_Vector_implC2ERKS0_:0000000000000000 _ZNSt12_Vector_baseIiSaIiEE12_Vector_implC1ERKS0_
     /tmp/ccsIN87E.s:13278  .text._ZNSt12_Vector_baseIiSaIiEE17_M_create_storageEm:0000000000000000 _ZNSt12_Vector_baseIiSaIiEE17_M_create_storageEm
     /tmp/ccsIN87E.s:10506  .text._ZNSt12_Vector_baseIiSaIiEEC2EmRKS0_:0000000000000000 _ZNSt12_Vector_baseIiSaIiEEC1EmRKS0_
     /tmp/ccsIN87E.s:13324  .text._ZNSt12_Vector_baseIiSaIiEE13_M_deallocateEPim:0000000000000000 _ZNSt12_Vector_baseIiSaIiEE13_M_deallocateEPim
     /tmp/ccsIN87E.s:10586  .text._ZNSt12_Vector_baseIiSaIiEED2Ev:0000000000000000 _ZNSt12_Vector_baseIiSaIiEED1Ev
     /tmp/ccsIN87E.s:13360  .text._ZN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEC2ERKS2_:0000000000000000 _ZN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEC1ERKS2_
     /tmp/ccsIN87E.s:13390  .text._ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEPiET0_T_SA_S9_:0000000000000000 _ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEPiET0_T_SA_S9_
     /tmp/ccsIN87E.s:10760  .text._ZNK5boost10shared_ptrIN2gr11basic_blockEE3getEv:0000000000000000 _ZNK5boost10shared_ptrIN2gr11basic_blockEE3getEv
     /tmp/ccsIN87E.s:18231  .data.rel.ro._ZTIN2gr5lfast12costas2_implE:0000000000000000 _ZTIN2gr5lfast12costas2_implE
     /tmp/ccsIN87E.s:13423  .text._ZN5boost10shared_ptrIN2gr5lfast12costas2_implEEC2INS1_11basic_blockEEERKNS0_IT_EEPS3_:0000000000000000 _ZN5boost10shared_ptrIN2gr5lfast12costas2_implEEC1INS1_11basic_blockEEERKNS0_IT_EEPS3_
     /tmp/ccsIN87E.s:13463  .text._ZN5boost10shared_ptrIN2gr5lfast12costas2_implEEC2Ev:0000000000000000 _ZN5boost10shared_ptrIN2gr5lfast12costas2_implEEC1Ev
     /tmp/ccsIN87E.s:10863  .text._ZNSt12_Vector_baseIN2gr5tag_tESaIS1_EE12_Vector_implD2Ev:0000000000000000 _ZNSt12_Vector_baseIN2gr5tag_tESaIS1_EE12_Vector_implD2Ev
     /tmp/ccsIN87E.s:13534  .text._ZNSaIN2gr5tag_tEED2Ev:0000000000000000 _ZNSaIN2gr5tag_tEED2Ev
     /tmp/ccsIN87E.s:10863  .text._ZNSt12_Vector_baseIN2gr5tag_tESaIS1_EE12_Vector_implD2Ev:0000000000000000 _ZNSt12_Vector_baseIN2gr5tag_tESaIS1_EE12_Vector_implD1Ev
     /tmp/ccsIN87E.s:13497  .text._ZNSt12_Vector_baseIN2gr5tag_tESaIS1_EE12_Vector_implC2Ev:0000000000000000 _ZNSt12_Vector_baseIN2gr5tag_tESaIS1_EE12_Vector_implC1Ev
     /tmp/ccsIN87E.s:10893  .text._ZNSt12_Vector_baseIN2gr5tag_tESaIS1_EEC2Ev:0000000000000000 _ZNSt12_Vector_baseIN2gr5tag_tESaIS1_EEC1Ev
     /tmp/ccsIN87E.s:13564  .text._ZNSt12_Vector_baseIN2gr5tag_tESaIS1_EE13_M_deallocateEPS1_m:0000000000000000 _ZNSt12_Vector_baseIN2gr5tag_tESaIS1_EE13_M_deallocateEPS1_m
     /tmp/ccsIN87E.s:10923  .text._ZNSt12_Vector_baseIN2gr5tag_tESaIS1_EED2Ev:0000000000000000 _ZNSt12_Vector_baseIN2gr5tag_tESaIS1_EED1Ev
     /tmp/ccsIN87E.s:13599  .text._ZSt8_DestroyIPN2gr5tag_tEEvT_S3_:0000000000000000 _ZSt8_DestroyIPN2gr5tag_tEEvT_S3_
     /tmp/ccsIN87E.s:11037  .text._ZN9__gnu_cxx17__normal_iteratorIPN2gr5tag_tESt6vectorIS2_SaIS2_EEEC2ERKS3_:0000000000000000 _ZN9__gnu_cxx17__normal_iteratorIPN2gr5tag_tESt6vectorIS2_SaIS2_EEEC2ERKS3_
     /tmp/ccsIN87E.s:13629  .text._ZN9__gnu_cxx17__normal_iteratorIPKN2gr5tag_tESt6vectorIS2_SaIS2_EEEC2ERKS4_:0000000000000000 _ZN9__gnu_cxx17__normal_iteratorIPKN2gr5tag_tESt6vectorIS2_SaIS2_EEEC1ERKS4_
     /tmp/ccsIN87E.s:13660  .text._ZNK9__gnu_cxx17__normal_iteratorIPKN2gr5tag_tESt6vectorIS2_SaIS2_EEE4baseEv:0000000000000000 _ZNK9__gnu_cxx17__normal_iteratorIPKN2gr5tag_tESt6vectorIS2_SaIS2_EEE4baseEv
     /tmp/ccsIN87E.s:13682  .text._ZNSt6vectorIN2gr5tag_tESaIS1_EE3endEv:0000000000000000 _ZNSt6vectorIN2gr5tag_tESaIS1_EE3endEv
     /tmp/ccsIN87E.s:13710  .text._ZN9__gnu_cxxneIPN2gr5tag_tESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_:0000000000000000 _ZN9__gnu_cxxneIPN2gr5tag_tESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_
GAS LISTING /tmp/ccsIN87E.s 			page 752


     /tmp/ccsIN87E.s:13746  .text._ZSt4moveIN9__gnu_cxx17__normal_iteratorIPN2gr5tag_tESt6vectorIS3_SaIS3_EEEES8_ET0_T_SA_S9_:0000000000000000 _ZSt4moveIN9__gnu_cxx17__normal_iteratorIPN2gr5tag_tESt6vectorIS3_SaIS3_EEEES8_ET0_T_SA_S9_
     /tmp/ccsIN87E.s:13789  .text._ZNSt16allocator_traitsISaIN2gr5tag_tEEE7destroyIS1_EEvRS2_PT_:0000000000000000 _ZNSt16allocator_traitsISaIN2gr5tag_tEEE7destroyIS1_EEvRS2_PT_
     /tmp/ccsIN87E.s:11341  .text._ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt10_Select1stISA_ENS2_10comparatorESaISA_EE8_S_rightEPSt18_Rb_tree_node_base:0000000000000000 _ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt10_Select1stISA_ENS2_10comparatorESaISA_EE8_S_rightEPSt18_Rb_tree_node_base
     /tmp/ccsIN87E.s:11363  .text._ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt10_Select1stISA_ENS2_10comparatorESaISA_EE7_S_leftEPSt18_Rb_tree_node_base:0000000000000000 _ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt10_Select1stISA_ENS2_10comparatorESaISA_EE7_S_leftEPSt18_Rb_tree_node_base
     /tmp/ccsIN87E.s:13818  .text._ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt10_Select1stISA_ENS2_10comparatorESaISA_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeISA_E:0000000000000000 _ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt10_Select1stISA_ENS2_10comparatorESaISA_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeISA_E
     /tmp/ccsIN87E.s:13868  .text._ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt10_Select1stISA_ENS2_10comparatorESaISA_EE11_M_put_nodeEPSt13_Rb_tree_nodeISA_E:0000000000000000 _ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt10_Select1stISA_ENS2_10comparatorESaISA_EE11_M_put_nodeEPSt13_Rb_tree_nodeISA_E
     /tmp/ccsIN87E.s:11421  .text._ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_St5dequeIS4_SaIS4_EEESt10_Select1stISA_ENS2_10comparatorESaISA_EE8_S_rightEPSt18_Rb_tree_node_base:0000000000000000 _ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_St5dequeIS4_SaIS4_EEESt10_Select1stISA_ENS2_10comparatorESaISA_EE8_S_rightEPSt18_Rb_tree_node_base
     /tmp/ccsIN87E.s:11443  .text._ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_St5dequeIS4_SaIS4_EEESt10_Select1stISA_ENS2_10comparatorESaISA_EE7_S_leftEPSt18_Rb_tree_node_base:0000000000000000 _ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_St5dequeIS4_SaIS4_EEESt10_Select1stISA_ENS2_10comparatorESaISA_EE7_S_leftEPSt18_Rb_tree_node_base
     /tmp/ccsIN87E.s:13911  .text._ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt10_Select1stISA_ENS2_10comparatorESaISA_EE8_S_valueEPKSt18_Rb_tree_node_base:0000000000000000 _ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt10_Select1stISA_ENS2_10comparatorESaISA_EE8_S_valueEPKSt18_Rb_tree_node_base
     /tmp/ccsIN87E.s:13936  .text._ZNKSt10_Select1stISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS1_8functionIFvS5_EEEEEclERKSA_:0000000000000000 _ZNKSt10_Select1stISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS1_8functionIFvS5_EEEEEclERKSA_
     /tmp/ccsIN87E.s:11584  .text._ZNSt17_Rb_tree_iteratorISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS1_8functionIFvS5_EEEEEC2EPSt18_Rb_tree_node_base:0000000000000000 _ZNSt17_Rb_tree_iteratorISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS1_8functionIFvS5_EEEEEC2EPSt18_Rb_tree_node_base
     /tmp/ccsIN87E.s:13960  .text._ZN9__gnu_cxx16__aligned_membufISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS2_8functionIFvS6_EEEEE6_M_ptrEv:0000000000000000 _ZN9__gnu_cxx16__aligned_membufISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS2_8functionIFvS6_EEEEE6_M_ptrEv
     /tmp/ccsIN87E.s:13986  .text._ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt10_Select1stISA_ENS2_10comparatorESaISA_EE11_M_get_nodeEv:0000000000000000 _ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt10_Select1stISA_ENS2_10comparatorESaISA_EE11_M_get_nodeEv
     /tmp/ccsIN87E.s:14096  .text._ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt10_Select1stISA_ENS2_10comparatorESaISA_EE17_M_construct_nodeIJRKSt21piecewise_construct_tSt5tupleIJRS6_EESK_IJEEEEEvPSt13_Rb_tree_nodeISA_EDpOT_:0000000000000000 _ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt10_Select1stISA_ENS2_10comparatorESaISA_EE17_M_construct_nodeIJRKSt21piecewise_construct_tSt5tupleIJRS6_EESK_IJEEEEEvPSt13_Rb_tree_nodeISA_EDpOT_
     /tmp/ccsIN87E.s:11759  .text._ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE:0000000000000000 _ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE
     /tmp/ccsIN87E.s:11781  .text._ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_Lb1EEERKS1_OT_:0000000000000000 _ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_Lb1EEERKS1_OT_
     /tmp/ccsIN87E.s:11781  .text._ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_Lb1EEERKS1_OT_:0000000000000000 _ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_Lb1EEERKS1_OT_
     /tmp/ccsIN87E.s:11821  .text._ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_S4_Lb1EEEOT_OT0_:0000000000000000 _ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_S4_Lb1EEEOT_OT0_
     /tmp/ccsIN87E.s:11821  .text._ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_S4_Lb1EEEOT_OT0_:0000000000000000 _ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_S4_Lb1EEEOT_OT0_
     /tmp/ccsIN87E.s:11862  .text._ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_Lb1EEEOT_RKS1_:0000000000000000 _ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_Lb1EEEOT_RKS1_
     /tmp/ccsIN87E.s:11862  .text._ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_Lb1EEEOT_RKS1_:0000000000000000 _ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_Lb1EEEOT_RKS1_
     /tmp/ccsIN87E.s:14232  .text._ZNKSt23_Rb_tree_const_iteratorISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS1_8functionIFvS5_EEEEE13_M_const_castEv:0000000000000000 _ZNKSt23_Rb_tree_const_iteratorISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS1_8functionIFvS5_EEEEE13_M_const_castEv
     /tmp/ccsIN87E.s:14261  .text._ZNKSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt10_Select1stISA_ENS2_10comparatorESaISA_EE4sizeEv:0000000000000000 _ZNKSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt10_Select1stISA_ENS2_10comparatorESaISA_EE4sizeEv
     /tmp/ccsIN87E.s:14284  .text._ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt10_Select1stISA_ENS2_10comparatorESaISA_EE12_M_rightmostEv:0000000000000000 _ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt10_Select1stISA_ENS2_10comparatorESaISA_EE12_M_rightmostEv
     /tmp/ccsIN87E.s:14369  .text._ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt10_Select1stISA_ENS2_10comparatorESaISA_EE24_M_get_insert_unique_posERS6_:0000000000000000 _ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt10_Select1stISA_ENS2_10comparatorESaISA_EE24_M_get_insert_unique_posERS6_
     /tmp/ccsIN87E.s:14513  .text._ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt10_Select1stISA_ENS2_10comparatorESaISA_EE11_M_leftmostEv:0000000000000000 _ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt10_Select1stISA_ENS2_10comparatorESaISA_EE11_M_leftmostEv
     /tmp/ccsIN87E.s:14536  .text._ZNSt17_Rb_tree_iteratorISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS1_8functionIFvS5_EEEEEmmEv:0000000000000000 _ZNSt17_Rb_tree_iteratorISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS1_8functionIFvS5_EEEEEmmEv
     /tmp/ccsIN87E.s:14568  .text._ZNSt17_Rb_tree_iteratorISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS1_8functionIFvS5_EEEEEppEv:0000000000000000 _ZNSt17_Rb_tree_iteratorISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS1_8functionIFvS5_EEEEEppEv
     /tmp/ccsIN87E.s:14599  .text._ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt10_Select1stISA_ENS2_10comparatorESaISA_EE8_S_valueEPKSt13_Rb_tree_nodeISA_E:0000000000000000 _ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt10_Select1stISA_ENS2_10comparatorESaISA_EE8_S_valueEPKSt13_Rb_tree_nodeISA_E
     /tmp/ccsIN87E.s:14624  .text._ZN5boost16exception_detail19error_info_injectorINS_17bad_function_callEEC2ERKS2_:0000000000000000 _ZN5boost16exception_detail19error_info_injectorINS_17bad_function_callEEC1ERKS2_
     /tmp/ccsIN87E.s:12358  .text._ZN5boost16exception_detail19error_info_injectorINS_17bad_function_callEED2Ev:0000000000000000 _ZN5boost16exception_detail19error_info_injectorINS_17bad_function_callEED2Ev
     /tmp/ccsIN87E.s:12397  .text._ZN5boost16exception_detail19error_info_injectorINS_17bad_function_callEED2Ev:0000000000000048 _ZThn16_N5boost16exception_detail19error_info_injectorINS_17bad_function_callEED1Ev
     /tmp/ccsIN87E.s:12410  .text._ZN5boost16exception_detail19error_info_injectorINS_17bad_function_callEED0Ev:0000000000000000 _ZN5boost16exception_detail19error_info_injectorINS_17bad_function_callEED0Ev
     /tmp/ccsIN87E.s:12438  .text._ZN5boost16exception_detail19error_info_injectorINS_17bad_function_callEED0Ev:000000000000002b _ZThn16_N5boost16exception_detail19error_info_injectorINS_17bad_function_callEED0Ev
     /tmp/ccsIN87E.s:14668  .text._ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEEC1ERKS4_:0000000000000000 _ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEEC1ERKS4_
     /tmp/ccsIN87E.s:12521  .text._ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEED1Ev:000000000000005a _ZThn16_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEED1Ev
     /tmp/ccsIN87E.s:12533  .text._ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEED1Ev:0000000000000060 _ZTv0_n40_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEED1Ev
     /tmp/ccsIN87E.s:12547  .text._ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEED0Ev:0000000000000000 _ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEED0Ev
     /tmp/ccsIN87E.s:12575  .text._ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEED0Ev:000000000000002b _ZThn16_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEED0Ev
     /tmp/ccsIN87E.s:12587  .text._ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEED0Ev:0000000000000031 _ZTv0_n40_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEED0Ev
     /tmp/ccsIN87E.s:12748  .text._ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_St5dequeIS4_SaIS4_EEESt10_Select1stISA_ENS2_10comparatorESaISA_EE6_S_keyEPKSt13_Rb_tree_nodeISA_E:0000000000000000 _ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_St5dequeIS4_SaIS4_EEESt10_Select1stISA_ENS2_10comparatorESaISA_EE6_S_keyEPKSt13_Rb_tree_nodeISA_E
     /tmp/ccsIN87E.s:14777  .text._ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_St5dequeIS4_SaIS4_EEESt10_Select1stISA_ENS2_10comparatorESaISA_EE8_S_valueEPKSt18_Rb_tree_node_base:0000000000000000 _ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_St5dequeIS4_SaIS4_EEESt10_Select1stISA_ENS2_10comparatorESaISA_EE8_S_valueEPKSt18_Rb_tree_node_base
     /tmp/ccsIN87E.s:14802  .text._ZNKSt10_Select1stISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt5dequeIS5_SaIS5_EEEEclERKSA_:0000000000000000 _ZNKSt10_Select1stISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt5dequeIS5_SaIS5_EEEEclERKSA_
     /tmp/ccsIN87E.s:12719  .text._ZNSt17_Rb_tree_iteratorISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt5dequeIS5_SaIS5_EEEEC2EPSt18_Rb_tree_node_base:0000000000000000 _ZNSt17_Rb_tree_iteratorISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt5dequeIS5_SaIS5_EEEEC2EPSt18_Rb_tree_node_base
     /tmp/ccsIN87E.s:14824  .text._ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_St5dequeIS4_SaIS4_EEESt10_Select1stISA_ENS2_10comparatorESaISA_EE8_S_valueEPKSt13_Rb_tree_nodeISA_E:0000000000000000 _ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_St5dequeIS4_SaIS4_EEESt10_Select1stISA_ENS2_10comparatorESaISA_EE8_S_valueEPKSt13_Rb_tree_nodeISA_E
     /tmp/ccsIN87E.s:14849  .text._ZN9__gnu_cxx13new_allocatorIlED2Ev:0000000000000000 _ZN9__gnu_cxx13new_allocatorIlED2Ev
     /tmp/ccsIN87E.s:12778  .text._ZNSaIlED2Ev:0000000000000000 _ZNSaIlED1Ev
     /tmp/ccsIN87E.s:14872  .text._ZNSt16allocator_traitsISaIlEE10deallocateERS0_Plm:0000000000000000 _ZNSt16allocator_traitsISaIlEE10deallocateERS0_Plm
     /tmp/ccsIN87E.s:14902  .text._ZNSt12_Destroy_auxILb1EE9__destroyIPlEEvT_S3_:0000000000000000 _ZNSt12_Destroy_auxILb1EE9__destroyIPlEEvT_S3_
     /tmp/ccsIN87E.s:14924  .text._ZN5boost16exception_detail11set_info_rvINS_10error_infoINS_15throw_function_EPKcEEE3setINS0_10clone_implINS0_10bad_alloc_EEEEERKT_SE_OS6_:0000000000000000 _ZN5boost16exception_detail11set_info_rvINS_10error_infoINS_15throw_function_EPKcEEE3setINS0_10clone_implINS0_10bad_alloc_EEEEERKT_SE_OS6_
     /tmp/ccsIN87E.s:14952  .text._ZN5boost16exception_detail11set_info_rvINS_10error_infoINS_11throw_file_EPKcEEE3setINS0_10clone_implINS0_10bad_alloc_EEEEERKT_SE_OS6_:0000000000000000 _ZN5boost16exception_detail11set_info_rvINS_10error_infoINS_11throw_file_EPKcEEE3setINS0_10clone_implINS0_10bad_alloc_EEEEERKT_SE_OS6_
     /tmp/ccsIN87E.s:14980  .text._ZN5boost16exception_detail11set_info_rvINS_10error_infoINS_11throw_line_EiEEE3setINS0_10clone_implINS0_10bad_alloc_EEEEERKT_SC_OS4_:0000000000000000 _ZN5boost16exception_detail11set_info_rvINS_10error_infoINS_11throw_line_EiEEE3setINS0_10clone_implINS0_10bad_alloc_EEEEERKT_SC_OS4_
     /tmp/ccsIN87E.s:15009  .text._ZN5boost6detail12shared_countC2INS_16exception_detail10clone_implINS3_10bad_alloc_EEEEEPT_:0000000000000000 _ZN5boost6detail12shared_countC1INS_16exception_detail10clone_implINS3_10bad_alloc_EEEEEPT_
     /tmp/ccsIN87E.s:15112  .text._ZN5boost16exception_detail11set_info_rvINS_10error_infoINS_15throw_function_EPKcEEE3setINS0_10clone_implINS0_14bad_exception_EEEEERKT_SE_OS6_:0000000000000000 _ZN5boost16exception_detail11set_info_rvINS_10error_infoINS_15throw_function_EPKcEEE3setINS0_10clone_implINS0_14bad_exception_EEEEERKT_SE_OS6_
     /tmp/ccsIN87E.s:15140  .text._ZN5boost16exception_detail11set_info_rvINS_10error_infoINS_11throw_file_EPKcEEE3setINS0_10clone_implINS0_14bad_exception_EEEEERKT_SE_OS6_:0000000000000000 _ZN5boost16exception_detail11set_info_rvINS_10error_infoINS_11throw_file_EPKcEEE3setINS0_10clone_implINS0_14bad_exception_EEEEERKT_SE_OS6_
     /tmp/ccsIN87E.s:15168  .text._ZN5boost16exception_detail11set_info_rvINS_10error_infoINS_11throw_line_EiEEE3setINS0_10clone_implINS0_14bad_exception_EEEEERKT_SC_OS4_:0000000000000000 _ZN5boost16exception_detail11set_info_rvINS_10error_infoINS_11throw_line_EiEEE3setINS0_10clone_implINS0_14bad_exception_EEEEERKT_SC_OS4_
     /tmp/ccsIN87E.s:15197  .text._ZN5boost6detail12shared_countC2INS_16exception_detail10clone_implINS3_14bad_exception_EEEEEPT_:0000000000000000 _ZN5boost6detail12shared_countC1INS_16exception_detail10clone_implINS3_14bad_exception_EEEEEPT_
GAS LISTING /tmp/ccsIN87E.s 			page 753


     /tmp/ccsIN87E.s:13180  .text._ZNSaIiEC2ERKS_:0000000000000000 _ZNSaIiEC1ERKS_
     /tmp/ccsIN87E.s:13180  .text._ZNSaIiEC2ERKS_:0000000000000000 _ZNSaIiEC2ERKS_
     /tmp/ccsIN87E.s:15301  .text._ZN9__gnu_cxx13new_allocatorIiEC2ERKS1_:0000000000000000 _ZN9__gnu_cxx13new_allocatorIiEC2ERKS1_
     /tmp/ccsIN87E.s:13213  .text._ZN9__gnu_cxx13new_allocatorIiED2Ev:0000000000000000 _ZN9__gnu_cxx13new_allocatorIiED1Ev
     /tmp/ccsIN87E.s:13238  .text._ZNSt12_Vector_baseIiSaIiEE12_Vector_implC2ERKS0_:0000000000000000 _ZNSt12_Vector_baseIiSaIiEE12_Vector_implC2ERKS0_
     /tmp/ccsIN87E.s:15326  .text._ZNSt12_Vector_baseIiSaIiEE11_M_allocateEm:0000000000000000 _ZNSt12_Vector_baseIiSaIiEE11_M_allocateEm
     /tmp/ccsIN87E.s:15362  .text._ZNSt16allocator_traitsISaIiEE10deallocateERS0_Pim:0000000000000000 _ZNSt16allocator_traitsISaIiEE10deallocateERS0_Pim
     /tmp/ccsIN87E.s:13360  .text._ZN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEC2ERKS2_:0000000000000000 _ZN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEC2ERKS2_
     /tmp/ccsIN87E.s:15392  .text._ZNSt20__uninitialized_copyILb1EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEPiEET0_T_SC_SB_:0000000000000000 _ZNSt20__uninitialized_copyILb1EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEPiEET0_T_SC_SB_
     /tmp/ccsIN87E.s:13423  .text._ZN5boost10shared_ptrIN2gr5lfast12costas2_implEEC2INS1_11basic_blockEEERKNS0_IT_EEPS3_:0000000000000000 _ZN5boost10shared_ptrIN2gr5lfast12costas2_implEEC2INS1_11basic_blockEEERKNS0_IT_EEPS3_
     /tmp/ccsIN87E.s:13463  .text._ZN5boost10shared_ptrIN2gr5lfast12costas2_implEEC2Ev:0000000000000000 _ZN5boost10shared_ptrIN2gr5lfast12costas2_implEEC2Ev
     /tmp/ccsIN87E.s:13497  .text._ZNSt12_Vector_baseIN2gr5tag_tESaIS1_EE12_Vector_implC2Ev:0000000000000000 _ZNSt12_Vector_baseIN2gr5tag_tESaIS1_EE12_Vector_implC2Ev
     /tmp/ccsIN87E.s:15422  .text._ZNSaIN2gr5tag_tEEC2Ev:0000000000000000 _ZNSaIN2gr5tag_tEEC2Ev
     /tmp/ccsIN87E.s:15452  .text._ZN9__gnu_cxx13new_allocatorIN2gr5tag_tEED2Ev:0000000000000000 _ZN9__gnu_cxx13new_allocatorIN2gr5tag_tEED2Ev
     /tmp/ccsIN87E.s:13534  .text._ZNSaIN2gr5tag_tEED2Ev:0000000000000000 _ZNSaIN2gr5tag_tEED1Ev
     /tmp/ccsIN87E.s:15475  .text._ZNSt16allocator_traitsISaIN2gr5tag_tEEE10deallocateERS2_PS1_m:0000000000000000 _ZNSt16allocator_traitsISaIN2gr5tag_tEEE10deallocateERS2_PS1_m
     /tmp/ccsIN87E.s:15505  .text._ZNSt12_Destroy_auxILb0EE9__destroyIPN2gr5tag_tEEEvT_S5_:0000000000000000 _ZNSt12_Destroy_auxILb0EE9__destroyIPN2gr5tag_tEEEvT_S5_
     /tmp/ccsIN87E.s:13629  .text._ZN9__gnu_cxx17__normal_iteratorIPKN2gr5tag_tESt6vectorIS2_SaIS2_EEEC2ERKS4_:0000000000000000 _ZN9__gnu_cxx17__normal_iteratorIPKN2gr5tag_tESt6vectorIS2_SaIS2_EEEC2ERKS4_
     /tmp/ccsIN87E.s:15543  .text._ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPN2gr5tag_tESt6vectorIS3_SaIS3_EEEEET_S9_:0000000000000000 _ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPN2gr5tag_tESt6vectorIS3_SaIS3_EEEEET_S9_
     /tmp/ccsIN87E.s:15565  .text._ZSt14__copy_move_a2ILb1EN9__gnu_cxx17__normal_iteratorIPN2gr5tag_tESt6vectorIS3_SaIS3_EEEES8_ET1_T0_SA_S9_:0000000000000000 _ZSt14__copy_move_a2ILb1EN9__gnu_cxx17__normal_iteratorIPN2gr5tag_tESt6vectorIS3_SaIS3_EEEES8_ET1_T0_SA_S9_
     /tmp/ccsIN87E.s:15620  .text._ZN9__gnu_cxx13new_allocatorIN2gr5tag_tEE7destroyIS2_EEvPT_:0000000000000000 _ZN9__gnu_cxx13new_allocatorIN2gr5tag_tEE7destroyIS2_EEvPT_
     /tmp/ccsIN87E.s:15647  .text._ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt10_Select1stISA_ENS2_10comparatorESaISA_EE21_M_get_Node_allocatorEv:0000000000000000 _ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt10_Select1stISA_ENS2_10comparatorESaISA_EE21_M_get_Node_allocatorEv
     /tmp/ccsIN87E.s:15668  .text._ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS2_8functionIFvS6_EEEEEEE7destroyISB_EEvRSD_PT_:0000000000000000 _ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS2_8functionIFvS6_EEEEEEE7destroyISB_EEvRSD_PT_
     /tmp/ccsIN87E.s:15696  .text._ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS2_8functionIFvS6_EEEEEEE10deallocateERSD_PSC_m:0000000000000000 _ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS2_8functionIFvS6_EEEEEEE10deallocateERSD_PSC_m
     /tmp/ccsIN87E.s:15727  .text._ZNKSt13_Rb_tree_nodeISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS1_8functionIFvS5_EEEEE9_M_valptrEv:0000000000000000 _ZNKSt13_Rb_tree_nodeISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS1_8functionIFvS5_EEEEE9_M_valptrEv
     /tmp/ccsIN87E.s:15753  .text._ZN9__gnu_cxx16__aligned_membufISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS2_8functionIFvS6_EEEEE7_M_addrEv:0000000000000000 _ZN9__gnu_cxx16__aligned_membufISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS2_8functionIFvS6_EEEEE7_M_addrEv
     /tmp/ccsIN87E.s:15774  .text._ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS2_8functionIFvS6_EEEEEEE8allocateERSD_m:0000000000000000 _ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS2_8functionIFvS6_EEEEEEE8allocateERSD_m
     /tmp/ccsIN87E.s:14014  .text._ZNSt18_Rb_tree_node_baseC2Ev:0000000000000000 _ZNSt18_Rb_tree_node_baseC2Ev
     /tmp/ccsIN87E.s:14014  .text._ZNSt18_Rb_tree_node_baseC2Ev:0000000000000000 _ZNSt18_Rb_tree_node_baseC1Ev
     /tmp/ccsIN87E.s:14038  .text._ZN9__gnu_cxx16__aligned_membufISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS2_8functionIFvS6_EEEEEC2Ev:0000000000000000 _ZN9__gnu_cxx16__aligned_membufISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS2_8functionIFvS6_EEEEEC2Ev
     /tmp/ccsIN87E.s:14038  .text._ZN9__gnu_cxx16__aligned_membufISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS2_8functionIFvS6_EEEEEC2Ev:0000000000000000 _ZN9__gnu_cxx16__aligned_membufISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS2_8functionIFvS6_EEEEEC1Ev
     /tmp/ccsIN87E.s:14062  .text._ZNSt13_Rb_tree_nodeISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS1_8functionIFvS5_EEEEEC2Ev:0000000000000000 _ZNSt13_Rb_tree_nodeISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS1_8functionIFvS5_EEEEEC2Ev
     /tmp/ccsIN87E.s:14062  .text._ZNSt13_Rb_tree_nodeISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS1_8functionIFvS5_EEEEEC2Ev:0000000000000000 _ZNSt13_Rb_tree_nodeISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS1_8functionIFvS5_EEEEEC1Ev
     /tmp/ccsIN87E.s:15802  .text._ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS2_8functionIFvS6_EEEEEEE9constructISB_JRKSt21piecewise_construct_tSt5tupleIJRS7_EESJ_IJEEEEEvRSD_PT_DpOT0_:0000000000000000 _ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS2_8functionIFvS6_EEEEEEE9constructISB_JRKSt21piecewise_construct_tSt5tupleIJRS7_EESJ_IJEEEEEvRSD_PT_DpOT0_
     /tmp/ccsIN87E.s:14306  .text._ZSt7forwardIRPSt13_Rb_tree_nodeISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS2_8functionIFvS6_EEEEEEOT_RNSt16remove_referenceISF_E4typeE:0000000000000000 _ZSt7forwardIRPSt13_Rb_tree_nodeISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS2_8functionIFvS6_EEEEEEOT_RNSt16remove_referenceISF_E4typeE
     /tmp/ccsIN87E.s:14328  .text._ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRPSt13_Rb_tree_nodeIS_IKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS5_8functionIFvS9_EEEEERS1_Lb1EEEOT_OT0_:0000000000000000 _ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRPSt13_Rb_tree_nodeIS_IKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS5_8functionIFvS9_EEEEERS1_Lb1EEEOT_OT0_
     /tmp/ccsIN87E.s:14328  .text._ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRPSt13_Rb_tree_nodeIS_IKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS5_8functionIFvS9_EEEEERS1_Lb1EEEOT_OT0_:0000000000000000 _ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeIS_IKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS5_8functionIFvS9_EEEEERS1_Lb1EEEOT_OT0_
     /tmp/ccsIN87E.s:15854  .text._ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt10_Select1stISA_ENS2_10comparatorESaISA_EE5beginEv:0000000000000000 _ZNSt8_Rb_treeIN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt4pairIKS4_NS0_8functionIFvS4_EEEESt10_Select1stISA_ENS2_10comparatorESaISA_EE5beginEv
     /tmp/ccsIN87E.s:14624  .text._ZN5boost16exception_detail19error_info_injectorINS_17bad_function_callEEC2ERKS2_:0000000000000000 _ZN5boost16exception_detail19error_info_injectorINS_17bad_function_callEEC2ERKS2_
     /tmp/ccsIN87E.s:15883  .text._ZNKSt13_Rb_tree_nodeISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt5dequeIS5_SaIS5_EEEE9_M_valptrEv:0000000000000000 _ZNKSt13_Rb_tree_nodeISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt5dequeIS5_SaIS5_EEEE9_M_valptrEv
     /tmp/ccsIN87E.s:14849  .text._ZN9__gnu_cxx13new_allocatorIlED2Ev:0000000000000000 _ZN9__gnu_cxx13new_allocatorIlED1Ev
     /tmp/ccsIN87E.s:15909  .text._ZN9__gnu_cxx13new_allocatorIlE10deallocateEPlm:0000000000000000 _ZN9__gnu_cxx13new_allocatorIlE10deallocateEPlm
     /tmp/ccsIN87E.s:15009  .text._ZN5boost6detail12shared_countC2INS_16exception_detail10clone_implINS3_10bad_alloc_EEEEEPT_:0000000000000000 _ZN5boost6detail12shared_countC2INS_16exception_detail10clone_implINS3_10bad_alloc_EEEEEPT_
     /tmp/ccsIN87E.s:15937  .text._ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEEC2EPS5_:0000000000000000 _ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEEC1EPS5_
     /tmp/ccsIN87E.s:15975  .text._ZN5boost14checked_deleteINS_16exception_detail10clone_implINS1_10bad_alloc_EEEEEvPT_:0000000000000000 _ZN5boost14checked_deleteINS_16exception_detail10clone_implINS1_10bad_alloc_EEEEEvPT_
     /tmp/ccsIN87E.s:15197  .text._ZN5boost6detail12shared_countC2INS_16exception_detail10clone_implINS3_14bad_exception_EEEEEPT_:0000000000000000 _ZN5boost6detail12shared_countC2INS_16exception_detail10clone_implINS3_14bad_exception_EEEEEPT_
     /tmp/ccsIN87E.s:16012  .text._ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_14bad_exception_EEEEC2EPS5_:0000000000000000 _ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_14bad_exception_EEEEC1EPS5_
     /tmp/ccsIN87E.s:16049  .text._ZN5boost14checked_deleteINS_16exception_detail10clone_implINS1_14bad_exception_EEEEEvPT_:0000000000000000 _ZN5boost14checked_deleteINS_16exception_detail10clone_implINS1_14bad_exception_EEEEEvPT_
     /tmp/ccsIN87E.s:15301  .text._ZN9__gnu_cxx13new_allocatorIiEC2ERKS1_:0000000000000000 _ZN9__gnu_cxx13new_allocatorIiEC1ERKS1_
     /tmp/ccsIN87E.s:16084  .text._ZNSt16allocator_traitsISaIiEE8allocateERS0_m:0000000000000000 _ZNSt16allocator_traitsISaIiEE8allocateERS0_m
     /tmp/ccsIN87E.s:16113  .text._ZN9__gnu_cxx13new_allocatorIiE10deallocateEPim:0000000000000000 _ZN9__gnu_cxx13new_allocatorIiE10deallocateEPim
     /tmp/ccsIN87E.s:16140  .text._ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEPiET0_T_SA_S9_:0000000000000000 _ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEPiET0_T_SA_S9_
     /tmp/ccsIN87E.s:16183  .text._ZN9__gnu_cxx13new_allocatorIN2gr5tag_tEEC2Ev:0000000000000000 _ZN9__gnu_cxx13new_allocatorIN2gr5tag_tEEC2Ev
     /tmp/ccsIN87E.s:15422  .text._ZNSaIN2gr5tag_tEEC2Ev:0000000000000000 _ZNSaIN2gr5tag_tEEC1Ev
     /tmp/ccsIN87E.s:15452  .text._ZN9__gnu_cxx13new_allocatorIN2gr5tag_tEED2Ev:0000000000000000 _ZN9__gnu_cxx13new_allocatorIN2gr5tag_tEED1Ev
     /tmp/ccsIN87E.s:16207  .text._ZN9__gnu_cxx13new_allocatorIN2gr5tag_tEE10deallocateEPS2_m:0000000000000000 _ZN9__gnu_cxx13new_allocatorIN2gr5tag_tEE10deallocateEPS2_m
     /tmp/ccsIN87E.s:16234  .text._ZSt11__addressofIN2gr5tag_tEEPT_RS2_:0000000000000000 _ZSt11__addressofIN2gr5tag_tEEPT_RS2_
GAS LISTING /tmp/ccsIN87E.s 			page 754


     /tmp/ccsIN87E.s:16256  .text._ZSt8_DestroyIN2gr5tag_tEEvPT_:0000000000000000 _ZSt8_DestroyIN2gr5tag_tEEvPT_
     /tmp/ccsIN87E.s:16281  .text._ZSt12__niter_baseIPN2gr5tag_tESt6vectorIS1_SaIS1_EEET_N9__gnu_cxx17__normal_iteratorIS6_T0_EE:0000000000000000 _ZSt12__niter_baseIPN2gr5tag_tESt6vectorIS1_SaIS1_EEET_N9__gnu_cxx17__normal_iteratorIS6_T0_EE
     /tmp/ccsIN87E.s:16306  .text._ZSt13__copy_move_aILb1EPN2gr5tag_tES2_ET1_T0_S4_S3_:0000000000000000 _ZSt13__copy_move_aILb1EPN2gr5tag_tES2_ET1_T0_S4_S3_
     /tmp/ccsIN87E.s:16403  .text._ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS3_8functionIFvS7_EEEEEE7destroyISC_EEvPT_:0000000000000000 _ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS3_8functionIFvS7_EEEEEE7destroyISC_EEvPT_
     /tmp/ccsIN87E.s:16430  .text._ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS3_8functionIFvS7_EEEEEE10deallocateEPSD_m:0000000000000000 _ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS3_8functionIFvS7_EEEEEE10deallocateEPSD_m
     /tmp/ccsIN87E.s:16458  .text._ZNK9__gnu_cxx16__aligned_membufISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS2_8functionIFvS6_EEEEE6_M_ptrEv:0000000000000000 _ZNK9__gnu_cxx16__aligned_membufISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS2_8functionIFvS6_EEEEE6_M_ptrEv
     /tmp/ccsIN87E.s:16483  .text._ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS3_8functionIFvS7_EEEEEE8allocateEmPKv:0000000000000000 _ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS3_8functionIFvS7_EEEEEE8allocateEmPKv
     /tmp/ccsIN87E.s:16664  .text._ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS3_8functionIFvS7_EEEEEE9constructISC_JRKSt21piecewise_construct_tSt5tupleIJRS8_EESJ_IJEEEEEvPT_DpOT0_:0000000000000000 _ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS3_8functionIFvS7_EEEEEE9constructISC_JRKSt21piecewise_construct_tSt5tupleIJRS8_EESJ_IJEEEEEvPT_DpOT0_
     /tmp/ccsIN87E.s:16769  .text._ZNK9__gnu_cxx16__aligned_membufISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt5dequeIS6_SaIS6_EEEE6_M_ptrEv:0000000000000000 _ZNK9__gnu_cxx16__aligned_membufISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt5dequeIS6_SaIS6_EEEE6_M_ptrEv
     /tmp/ccsIN87E.s:15937  .text._ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEEC2EPS5_:0000000000000000 _ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEEC2EPS5_
     /tmp/ccsIN87E.s:17690  .data.rel.ro.local._ZTVN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEEE:0000000000000000 _ZTVN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEEE
     /tmp/ccsIN87E.s:16012  .text._ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_14bad_exception_EEEEC2EPS5_:0000000000000000 _ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_14bad_exception_EEEEC2EPS5_
     /tmp/ccsIN87E.s:17614  .data.rel.ro.local._ZTVN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_14bad_exception_EEEEE:0000000000000000 _ZTVN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_14bad_exception_EEEEE
     /tmp/ccsIN87E.s:16794  .text._ZN9__gnu_cxx13new_allocatorIiE8allocateEmPKv:0000000000000000 _ZN9__gnu_cxx13new_allocatorIiE8allocateEmPKv
     /tmp/ccsIN87E.s:16833  .text._ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEET_S8_:0000000000000000 _ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEET_S8_
     /tmp/ccsIN87E.s:16854  .text._ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEPiET1_T0_SA_S9_:0000000000000000 _ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEPiET1_T0_SA_S9_
     /tmp/ccsIN87E.s:16183  .text._ZN9__gnu_cxx13new_allocatorIN2gr5tag_tEEC2Ev:0000000000000000 _ZN9__gnu_cxx13new_allocatorIN2gr5tag_tEEC1Ev
     /tmp/ccsIN87E.s:16922  .text._ZNSt11__copy_moveILb1ELb0ESt26random_access_iterator_tagE8__copy_mIPN2gr5tag_tES5_EET0_T_S7_S6_:0000000000000000 _ZNSt11__copy_moveILb1ELb0ESt26random_access_iterator_tagE8__copy_mIPN2gr5tag_tES5_EET0_T_S7_S6_
     /tmp/ccsIN87E.s:16339  .text._ZN5boost8functionIFvNS_13intrusive_ptrIN3pmt8pmt_baseEEEEED2Ev:0000000000000000 _ZN5boost8functionIFvNS_13intrusive_ptrIN3pmt8pmt_baseEEEEED2Ev
     /tmp/ccsIN87E.s:16981  .text._ZN5boost9function1IvNS_13intrusive_ptrIN3pmt8pmt_baseEEEED2Ev:0000000000000000 _ZN5boost9function1IvNS_13intrusive_ptrIN3pmt8pmt_baseEEEED2Ev
     /tmp/ccsIN87E.s:16339  .text._ZN5boost8functionIFvNS_13intrusive_ptrIN3pmt8pmt_baseEEEEED2Ev:0000000000000000 _ZN5boost8functionIFvNS_13intrusive_ptrIN3pmt8pmt_baseEEEEED1Ev
     /tmp/ccsIN87E.s:16369  .text._ZNSt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS0_8functionIFvS4_EEEED2Ev:0000000000000000 _ZNSt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS0_8functionIFvS4_EEEED2Ev
     /tmp/ccsIN87E.s:16369  .text._ZNSt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS0_8functionIFvS4_EEEED2Ev:0000000000000000 _ZNSt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS0_8functionIFvS4_EEEED1Ev
     /tmp/ccsIN87E.s:17022  .text._ZNK9__gnu_cxx16__aligned_membufISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS2_8functionIFvS6_EEEEE7_M_addrEv:0000000000000000 _ZNK9__gnu_cxx16__aligned_membufISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS2_8functionIFvS6_EEEEE7_M_addrEv
     /tmp/ccsIN87E.s:17044  .text._ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS3_8functionIFvS7_EEEEEE8max_sizeEv:0000000000000000 _ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS3_8functionIFvS7_EEEEEE8max_sizeEv
     /tmp/ccsIN87E.s:16525  .text._ZNSt10_Head_baseILm0ERKN5boost13intrusive_ptrIN3pmt8pmt_baseEEELb0EE7_M_headERS7_:0000000000000000 _ZNSt10_Head_baseILm0ERKN5boost13intrusive_ptrIN3pmt8pmt_baseEEELb0EE7_M_headERS7_
     /tmp/ccsIN87E.s:16547  .text._ZNSt11_Tuple_implILm0EJRKN5boost13intrusive_ptrIN3pmt8pmt_baseEEEEE7_M_headERS7_:0000000000000000 _ZNSt11_Tuple_implILm0EJRKN5boost13intrusive_ptrIN3pmt8pmt_baseEEEEE7_M_headERS7_
     /tmp/ccsIN87E.s:16571  .text._ZSt7forwardIRKN5boost13intrusive_ptrIN3pmt8pmt_baseEEEEOT_RNSt16remove_referenceIS7_E4typeE:0000000000000000 _ZSt7forwardIRKN5boost13intrusive_ptrIN3pmt8pmt_baseEEEEOT_RNSt16remove_referenceIS7_E4typeE
     /tmp/ccsIN87E.s:16593  .text._ZNSt11_Tuple_implILm0EJRKN5boost13intrusive_ptrIN3pmt8pmt_baseEEEEEC2EOS7_:0000000000000000 _ZNSt11_Tuple_implILm0EJRKN5boost13intrusive_ptrIN3pmt8pmt_baseEEEEEC2EOS7_
     /tmp/ccsIN87E.s:16593  .text._ZNSt11_Tuple_implILm0EJRKN5boost13intrusive_ptrIN3pmt8pmt_baseEEEEEC2EOS7_:0000000000000000 _ZNSt11_Tuple_implILm0EJRKN5boost13intrusive_ptrIN3pmt8pmt_baseEEEEEC1EOS7_
     /tmp/ccsIN87E.s:16631  .text._ZNSt5tupleIJRKN5boost13intrusive_ptrIN3pmt8pmt_baseEEEEEC2EOS7_:0000000000000000 _ZNSt5tupleIJRKN5boost13intrusive_ptrIN3pmt8pmt_baseEEEEEC2EOS7_
     /tmp/ccsIN87E.s:16631  .text._ZNSt5tupleIJRKN5boost13intrusive_ptrIN3pmt8pmt_baseEEEEEC2EOS7_:0000000000000000 _ZNSt5tupleIJRKN5boost13intrusive_ptrIN3pmt8pmt_baseEEEEEC1EOS7_
     /tmp/ccsIN87E.s:17066  .text._ZNSt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS0_8functionIFvS4_EEEEC2IJRS5_EJEEESt21piecewise_construct_tSt5tupleIJDpT_EESD_IJDpT0_EE:0000000000000000 _ZNSt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS0_8functionIFvS4_EEEEC1IJRS5_EJEEESt21piecewise_construct_tSt5tupleIJDpT_EESD_IJDpT0_EE
     /tmp/ccsIN87E.s:17104  .text._ZNK9__gnu_cxx16__aligned_membufISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt5dequeIS6_SaIS6_EEEE7_M_addrEv:0000000000000000 _ZNK9__gnu_cxx16__aligned_membufISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt5dequeIS6_SaIS6_EEEE7_M_addrEv
     /tmp/ccsIN87E.s:17126  .text._ZNK9__gnu_cxx13new_allocatorIiE8max_sizeEv:0000000000000000 _ZNK9__gnu_cxx13new_allocatorIiE8max_sizeEv
     /tmp/ccsIN87E.s:17172  .text._ZSt12__niter_baseIPiET_S1_:0000000000000000 _ZSt12__niter_baseIPiET_S1_
     /tmp/ccsIN87E.s:17147  .text._ZSt12__niter_baseIPKiSt6vectorIiSaIiEEET_N9__gnu_cxx17__normal_iteratorIS5_T0_EE:0000000000000000 _ZSt12__niter_baseIPKiSt6vectorIiSaIiEEET_N9__gnu_cxx17__normal_iteratorIS5_T0_EE
     /tmp/ccsIN87E.s:17193  .text._ZSt13__copy_move_aILb0EPKiPiET1_T0_S4_S3_:0000000000000000 _ZSt13__copy_move_aILb0EPKiPiET1_T0_S4_S3_
     /tmp/ccsIN87E.s:16901  .text._ZSt4moveIRN2gr5tag_tEEONSt16remove_referenceIT_E4typeEOS4_:0000000000000000 _ZSt4moveIRN2gr5tag_tEEONSt16remove_referenceIT_E4typeEOS4_
     /tmp/ccsIN87E.s:17226  .text._ZN5boost9function1IvNS_13intrusive_ptrIN3pmt8pmt_baseEEEE5clearEv:0000000000000000 _ZN5boost9function1IvNS_13intrusive_ptrIN3pmt8pmt_baseEEEE5clearEv
     /tmp/ccsIN87E.s:16981  .text._ZN5boost9function1IvNS_13intrusive_ptrIN3pmt8pmt_baseEEEED2Ev:0000000000000000 _ZN5boost9function1IvNS_13intrusive_ptrIN3pmt8pmt_baseEEEED1Ev
     /tmp/ccsIN87E.s:17066  .text._ZNSt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS0_8functionIFvS4_EEEEC2IJRS5_EJEEESt21piecewise_construct_tSt5tupleIJDpT_EESD_IJDpT0_EE:0000000000000000 _ZNSt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS0_8functionIFvS4_EEEEC2IJRS5_EJEEESt21piecewise_construct_tSt5tupleIJDpT_EESD_IJDpT0_EE
     /tmp/ccsIN87E.s:17327  .text._ZNSt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS0_8functionIFvS4_EEEEC2IJRS5_EJLm0EEJEJEEERSt5tupleIJDpT_EERSC_IJDpT1_EESt12_Index_tupleIJXspT0_EEESL_IJXspT2_EEE:0000000000000000 _ZNSt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS0_8functionIFvS4_EEEEC1IJRS5_EJLm0EEJEJEEERSt5tupleIJDpT_EERSC_IJDpT1_EESt12_Index_tupleIJXspT0_EEESL_IJXspT2_EEE
     /tmp/ccsIN87E.s:17418  .text._ZNK9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEE4baseEv:0000000000000000 _ZNK9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEE4baseEv
     /tmp/ccsIN87E.s:17439  .text._ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIiEEPT_PKS3_S6_S4_:0000000000000000 _ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIiEEPT_PKS3_S6_S4_
     /tmp/ccsIN87E.s:17487  .text._ZNK5boost6detail8function13basic_vtable1IvNS_13intrusive_ptrIN3pmt8pmt_baseEEEE5clearERNS1_15function_bufferE:0000000000000000 _ZNK5boost6detail8function13basic_vtable1IvNS_13intrusive_ptrIN3pmt8pmt_baseEEEE5clearERNS1_15function_bufferE
     /tmp/ccsIN87E.s:17278  .text._ZSt12__get_helperILm0ERKN5boost13intrusive_ptrIN3pmt8pmt_baseEEEJEERT0_RSt11_Tuple_implIXT_EJS7_DpT1_EE:0000000000000000 _ZSt12__get_helperILm0ERKN5boost13intrusive_ptrIN3pmt8pmt_baseEEEJEERT0_RSt11_Tuple_implIXT_EJS7_DpT1_EE
     /tmp/ccsIN87E.s:17302  .text._ZSt3getILm0EJRKN5boost13intrusive_ptrIN3pmt8pmt_baseEEEEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERSB_:0000000000000000 _ZSt3getILm0EJRKN5boost13intrusive_ptrIN3pmt8pmt_baseEEEEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERSB_
     /tmp/ccsIN87E.s:17327  .text._ZNSt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS0_8functionIFvS4_EEEEC2IJRS5_EJLm0EEJEJEEERSt5tupleIJDpT_EERSC_IJDpT1_EESt12_Index_tupleIJXspT0_EEESL_IJXspT2_EEE:0000000000000000 _ZNSt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS0_8functionIFvS4_EEEEC2IJRS5_EJLm0EEJEJEEERSt5tupleIJDpT_EERSC_IJDpT1_EESt12_Index_tupleIJXspT0_EEESL_IJXspT2_EEE
     /tmp/ccsIN87E.s:17526  .text._ZN5boost8functionIFvNS_13intrusive_ptrIN3pmt8pmt_baseEEEEEC2Ev:0000000000000000 _ZN5boost8functionIFvNS_13intrusive_ptrIN3pmt8pmt_baseEEEEEC1Ev
     /tmp/ccsIN87E.s:17526  .text._ZN5boost8functionIFvNS_13intrusive_ptrIN3pmt8pmt_baseEEEEEC2Ev:0000000000000000 _ZN5boost8functionIFvNS_13intrusive_ptrIN3pmt8pmt_baseEEEEEC2Ev
     /tmp/ccsIN87E.s:17580  .text._ZN5boost9function1IvNS_13intrusive_ptrIN3pmt8pmt_baseEEEEC2Ev:0000000000000000 _ZN5boost9function1IvNS_13intrusive_ptrIN3pmt8pmt_baseEEEEC2Ev
     /tmp/ccsIN87E.s:17556  .text._ZNSt14unary_functionIN5boost13intrusive_ptrIN3pmt8pmt_baseEEEvEC2Ev:0000000000000000 _ZNSt14unary_functionIN5boost13intrusive_ptrIN3pmt8pmt_baseEEEvEC2Ev
     /tmp/ccsIN87E.s:17556  .text._ZNSt14unary_functionIN5boost13intrusive_ptrIN3pmt8pmt_baseEEEvEC2Ev:0000000000000000 _ZNSt14unary_functionIN5boost13intrusive_ptrIN3pmt8pmt_baseEEEvEC1Ev
     /tmp/ccsIN87E.s:17580  .text._ZN5boost9function1IvNS_13intrusive_ptrIN3pmt8pmt_baseEEEEC2Ev:0000000000000000 _ZN5boost9function1IvNS_13intrusive_ptrIN3pmt8pmt_baseEEEEC1Ev
     /tmp/ccsIN87E.s:18115  .data.rel.ro._ZTIN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_14bad_exception_EEEEE:0000000000000000 _ZTIN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_14bad_exception_EEEEE
     /tmp/ccsIN87E.s:17627  .text._ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_14bad_exception_EEEED2Ev:0000000000000000 _ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_14bad_exception_EEEED1Ev
GAS LISTING /tmp/ccsIN87E.s 			page 755


     /tmp/ccsIN87E.s:17660  .text._ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_14bad_exception_EEEED0Ev:0000000000000000 _ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_14bad_exception_EEEED0Ev
     /tmp/ccsIN87E.s:18503  .text._ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_14bad_exception_EEEE7disposeEv:0000000000000000 _ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_14bad_exception_EEEE7disposeEv
     /tmp/ccsIN87E.s:18531  .text._ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_14bad_exception_EEEE11get_deleterERKSt9type_info:0000000000000000 _ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_14bad_exception_EEEE11get_deleterERKSt9type_info
     /tmp/ccsIN87E.s:18555  .text._ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_14bad_exception_EEEE19get_untyped_deleterEv:0000000000000000 _ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_14bad_exception_EEEE19get_untyped_deleterEv
     /tmp/ccsIN87E.s:17627  .text._ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_14bad_exception_EEEED2Ev:0000000000000000 _ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_14bad_exception_EEEED2Ev
     /tmp/ccsIN87E.s:18131  .data.rel.ro._ZTIN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEEE:0000000000000000 _ZTIN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEEE
     /tmp/ccsIN87E.s:17703  .text._ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEED2Ev:0000000000000000 _ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEED1Ev
     /tmp/ccsIN87E.s:17736  .text._ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEED0Ev:0000000000000000 _ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEED0Ev
     /tmp/ccsIN87E.s:18578  .text._ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEE7disposeEv:0000000000000000 _ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEE7disposeEv
     /tmp/ccsIN87E.s:18606  .text._ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEE11get_deleterERKSt9type_info:0000000000000000 _ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEE11get_deleterERKSt9type_info
     /tmp/ccsIN87E.s:18630  .text._ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEE19get_untyped_deleterEv:0000000000000000 _ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEE19get_untyped_deleterEv
     /tmp/ccsIN87E.s:17703  .text._ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEED2Ev:0000000000000000 _ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEED2Ev
     /tmp/ccsIN87E.s:18653  .text._ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEE5cloneEv:0000000000000000 _ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEE5cloneEv
     /tmp/ccsIN87E.s:18764  .text._ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEE7rethrowEv:0000000000000000 _ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEE7rethrowEv
     /tmp/ccsIN87E.s:18750  .text._ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEE5cloneEv:000000000000007c _ZTv0_n24_NK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEE5cloneEv
     /tmp/ccsIN87E.s:18829  .text._ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEE7rethrowEv:0000000000000057 _ZTv0_n32_NK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEE7rethrowEv
     /tmp/ccsIN87E.s:17793  .data.rel.ro.local._ZTTN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEEE:0000000000000000 _ZTTN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEEE
     /tmp/ccsIN87E.s:18168  .data.rel.ro._ZTIN5boost16exception_detail19error_info_injectorINS_17bad_function_callEEE:0000000000000000 _ZTIN5boost16exception_detail19error_info_injectorINS_17bad_function_callEEE
     /tmp/ccsIN87E.s:18189  .data.rel.ro._ZTIN5boost16exception_detail10clone_implINS0_14bad_exception_EEE:0000000000000000 _ZTIN5boost16exception_detail10clone_implINS0_14bad_exception_EEE
     /tmp/ccsIN87E.s:18843  .text._ZNK5boost16exception_detail10clone_implINS0_14bad_exception_EE5cloneEv:0000000000000000 _ZNK5boost16exception_detail10clone_implINS0_14bad_exception_EE5cloneEv
     /tmp/ccsIN87E.s:18954  .text._ZNK5boost16exception_detail10clone_implINS0_14bad_exception_EE7rethrowEv:0000000000000000 _ZNK5boost16exception_detail10clone_implINS0_14bad_exception_EE7rethrowEv
     /tmp/ccsIN87E.s:18940  .text._ZNK5boost16exception_detail10clone_implINS0_14bad_exception_EE5cloneEv:000000000000007c _ZTv0_n24_NK5boost16exception_detail10clone_implINS0_14bad_exception_EE5cloneEv
     /tmp/ccsIN87E.s:19019  .text._ZNK5boost16exception_detail10clone_implINS0_14bad_exception_EE7rethrowEv:0000000000000057 _ZTv0_n32_NK5boost16exception_detail10clone_implINS0_14bad_exception_EE7rethrowEv
     /tmp/ccsIN87E.s:17843  .data.rel.ro.local._ZTTN5boost16exception_detail10clone_implINS0_14bad_exception_EEE:0000000000000000 _ZTTN5boost16exception_detail10clone_implINS0_14bad_exception_EEE
     /tmp/ccsIN87E.s:18210  .data.rel.ro._ZTIN5boost16exception_detail10clone_implINS0_10bad_alloc_EEE:0000000000000000 _ZTIN5boost16exception_detail10clone_implINS0_10bad_alloc_EEE
     /tmp/ccsIN87E.s:19033  .text._ZNK5boost16exception_detail10clone_implINS0_10bad_alloc_EE5cloneEv:0000000000000000 _ZNK5boost16exception_detail10clone_implINS0_10bad_alloc_EE5cloneEv
     /tmp/ccsIN87E.s:19144  .text._ZNK5boost16exception_detail10clone_implINS0_10bad_alloc_EE7rethrowEv:0000000000000000 _ZNK5boost16exception_detail10clone_implINS0_10bad_alloc_EE7rethrowEv
     /tmp/ccsIN87E.s:19130  .text._ZNK5boost16exception_detail10clone_implINS0_10bad_alloc_EE5cloneEv:000000000000007c _ZTv0_n24_NK5boost16exception_detail10clone_implINS0_10bad_alloc_EE5cloneEv
     /tmp/ccsIN87E.s:19209  .text._ZNK5boost16exception_detail10clone_implINS0_10bad_alloc_EE7rethrowEv:0000000000000057 _ZTv0_n32_NK5boost16exception_detail10clone_implINS0_10bad_alloc_EE7rethrowEv
     /tmp/ccsIN87E.s:17878  .data.rel.ro.local._ZTTN5boost16exception_detail10clone_implINS0_10bad_alloc_EEE:0000000000000000 _ZTTN5boost16exception_detail10clone_implINS0_10bad_alloc_EEE
     /tmp/ccsIN87E.s:17964  .data.rel.ro._ZTCN2gr5lfast12costas2_implE0_NS0_7costas2E:0000000000000000 _ZTCN2gr5lfast12costas2_implE0_NS0_7costas2E
     /tmp/ccsIN87E.s:18247  .data.rel.ro._ZTIN2gr5lfast7costas2E:0000000000000000 _ZTIN2gr5lfast7costas2E
     /tmp/ccsIN87E.s:18268  .data.rel.ro._ZTIN5boost16exception_detail14bad_exception_E:0000000000000000 _ZTIN5boost16exception_detail14bad_exception_E
     /tmp/ccsIN87E.s:18289  .data.rel.ro._ZTIN5boost16exception_detail10bad_alloc_E:0000000000000000 _ZTIN5boost16exception_detail10bad_alloc_E
     /tmp/ccsIN87E.s:18310  .data.rel.ro._ZTIN5boost17bad_function_callE:0000000000000000 _ZTIN5boost17bad_function_callE
     /tmp/ccsIN87E.s:18326  .data.rel.ro._ZTIN5boost6system12system_errorE:0000000000000000 _ZTIN5boost6system12system_errorE
     /tmp/ccsIN87E.s:18342  .data.rel.ro._ZTIN5boost6detail15sp_counted_baseE:0000000000000000 _ZTIN5boost6detail15sp_counted_baseE
     /tmp/ccsIN87E.s:18357  .data.rel.ro._ZTIN5boost16exception_detail10clone_baseE:0000000000000000 _ZTIN5boost16exception_detail10clone_baseE
     /tmp/ccsIN87E.s:18372  .data.rel.ro._ZTIN5boost9exceptionE:0000000000000000 _ZTIN5boost9exceptionE
     /tmp/ccsIN87E.s:18124  .rodata._ZTSN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_14bad_exception_EEEEE:0000000000000000 _ZTSN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_14bad_exception_EEEEE
     /tmp/ccsIN87E.s:18140  .rodata._ZTSN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEEE:0000000000000000 _ZTSN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEEE
     /tmp/ccsIN87E.s:18161  .rodata._ZTSN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEEE:0000000000000000 _ZTSN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEEE
     /tmp/ccsIN87E.s:18182  .rodata._ZTSN5boost16exception_detail19error_info_injectorINS_17bad_function_callEEE:0000000000000000 _ZTSN5boost16exception_detail19error_info_injectorINS_17bad_function_callEEE
     /tmp/ccsIN87E.s:18203  .rodata._ZTSN5boost16exception_detail10clone_implINS0_14bad_exception_EEE:0000000000000000 _ZTSN5boost16exception_detail10clone_implINS0_14bad_exception_EEE
     /tmp/ccsIN87E.s:18224  .rodata._ZTSN5boost16exception_detail10clone_implINS0_10bad_alloc_EEE:0000000000000000 _ZTSN5boost16exception_detail10clone_implINS0_10bad_alloc_EEE
     /tmp/ccsIN87E.s:18240  .rodata._ZTSN2gr5lfast12costas2_implE:0000000000000000 _ZTSN2gr5lfast12costas2_implE
     /tmp/ccsIN87E.s:18261  .rodata._ZTSN2gr5lfast7costas2E:0000000000000000 _ZTSN2gr5lfast7costas2E
     /tmp/ccsIN87E.s:18282  .rodata._ZTSN5boost16exception_detail14bad_exception_E:0000000000000000 _ZTSN5boost16exception_detail14bad_exception_E
     /tmp/ccsIN87E.s:18303  .rodata._ZTSN5boost16exception_detail10bad_alloc_E:0000000000000000 _ZTSN5boost16exception_detail10bad_alloc_E
     /tmp/ccsIN87E.s:18319  .rodata._ZTSN5boost17bad_function_callE:0000000000000000 _ZTSN5boost17bad_function_callE
     /tmp/ccsIN87E.s:18335  .rodata._ZTSN5boost6system12system_errorE:0000000000000000 _ZTSN5boost6system12system_errorE
     /tmp/ccsIN87E.s:18350  .rodata._ZTSN5boost6detail15sp_counted_baseE:0000000000000000 _ZTSN5boost6detail15sp_counted_baseE
     /tmp/ccsIN87E.s:18365  .rodata._ZTSN5boost16exception_detail10clone_baseE:0000000000000000 _ZTSN5boost16exception_detail10clone_baseE
     /tmp/ccsIN87E.s:18380  .rodata._ZTSN5boost9exceptionE:0000000000000000 _ZTSN5boost9exceptionE
     /tmp/ccsIN87E.s:18387  .bss._ZN5boost16exception_detail37exception_ptr_static_exception_objectINS0_10bad_alloc_EE1eE:0000000000000000 _ZN5boost16exception_detail37exception_ptr_static_exception_objectINS0_10bad_alloc_EE1eE
     /tmp/ccsIN87E.s:18394  .bss._ZN5boost16exception_detail37exception_ptr_static_exception_objectINS0_14bad_exception_EE1eE:0000000000000000 _ZN5boost16exception_detail37exception_ptr_static_exception_objectINS0_14bad_exception_EE1eE
     /tmp/ccsIN87E.s:18401  .bss._ZGVN5boost16exception_detail37exception_ptr_static_exception_objectINS0_10bad_alloc_EE1eE:0000000000000000 _ZGVN5boost16exception_detail37exception_ptr_static_exception_objectINS0_10bad_alloc_EE1eE
GAS LISTING /tmp/ccsIN87E.s 			page 756


     /tmp/ccsIN87E.s:18408  .bss._ZGVN5boost16exception_detail37exception_ptr_static_exception_objectINS0_14bad_exception_EE1eE:0000000000000000 _ZGVN5boost16exception_detail37exception_ptr_static_exception_objectINS0_14bad_exception_EE1eE
     /tmp/ccsIN87E.s:18412  .text:0000000000001832 _Z41__static_initialization_and_destruction_0ii
     /tmp/ccsIN87E.s:19223  .text._ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEEC1ERKS5_NS5_9clone_tagE:0000000000000000 _ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEEC1ERKS5_NS5_9clone_tagE
     /tmp/ccsIN87E.s:19333  .text._ZN5boost16exception_detail10clone_implINS0_14bad_exception_EEC1ERKS3_NS3_9clone_tagE:0000000000000000 _ZN5boost16exception_detail10clone_implINS0_14bad_exception_EEC1ERKS3_NS3_9clone_tagE
     /tmp/ccsIN87E.s:19441  .text._ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EEC1ERKS3_NS3_9clone_tagE:0000000000000000 _ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EEC1ERKS3_NS3_9clone_tagE
     /tmp/ccsIN87E.s:19547  .text:0000000000001943 _GLOBAL__sub_I__ZN2gr5lfast7costas24makeEfi
                           .group:0000000000000000 _ZNSt9exceptionC5Ev
                           .group:0000000000000000 _ZNSt13bad_exceptionC5Ev
                           .group:0000000000000000 _ZNSt9bad_allocC5Ev
                           .group:0000000000000000 _ZNSt9exceptionC5ERKS_
                           .group:0000000000000000 _ZN5boost10error_infoINS_15throw_function_EPKcEC5ES3_
                           .group:0000000000000000 _ZN5boost10error_infoINS_11throw_file_EPKcEC5ES3_
                           .group:0000000000000000 _ZN5boost10error_infoINS_11throw_line_EiEC5Ei
                           .group:0000000000000000 _ZN5boost9exceptionC5Ev
                           .group:0000000000000000 _ZN5boost9exceptionD5Ev
                           .group:0000000000000000 _ZN5boost16exception_detail10clone_baseD5Ev
                           .group:0000000000000000 _ZN5boost6detail15sp_counted_baseC5Ev
                           .group:0000000000000000 _ZN5boost6detail15sp_counted_baseD5Ev
                           .group:0000000000000000 _ZN5boost6detail12shared_countC5Ev
                           .group:0000000000000000 _ZN5boost6detail12shared_countD5Ev
                           .group:0000000000000000 _ZN5boost6detail12shared_countC5ERKS1_
                           .group:0000000000000000 _ZNSt7complexIfEC5Eff
                           .group:0000000000000000 _ZN5boost6system12system_errorD5Ev
                           .group:0000000000000000 _ZN5boost13function_baseC5Ev
                           .group:0000000000000000 _ZN5boost17bad_function_callC5Ev
                           .group:0000000000000000 _ZN5boost10shared_ptrIN2gr12io_signatureEED5Ev
                           .group:0000000000000000 _ZN2gr5tag_tD5Ev
                           .group:0000000000000000 _ZN5boost10shared_ptrIKNS_16exception_detail10clone_baseEED5Ev
                           .group:0000000000000000 _ZN5boost13exception_ptrC5ERKNS_10shared_ptrIKNS_16exception_detail10clone_baseEEE
                           .group:0000000000000000 _ZN5boost16exception_detail10bad_alloc_D5Ev
                           .group:0000000000000000 _ZN5boost16exception_detail14bad_exception_D5Ev
                           .group:0000000000000000 _ZN5boost9exceptionC5ERKS0_
                           .group:0000000000000000 _ZN5boost13exception_ptrD5Ev
                           .group:0000000000000000 _ZN5boost13exception_ptrC5ERKS0_
                           .group:0000000000000000 _ZN5boost6none_tC5ENS0_8init_tagE
                           .group:0000000000000000 _ZN5boost10shared_ptrIN2gr5lfast12costas2_implEED5Ev
                           .group:0000000000000000 _ZN2gr10sync_blockD5Ev
                           .group:0000000000000000 _ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEEC5Ev
                           .group:0000000000000000 _ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEED5Ev
                           .group:0000000000000000 _ZN5boost16exception_detail10clone_baseC5ERKS1_
                           .group:0000000000000000 _ZN5boost13intrusive_ptrIN3pmt8pmt_baseEED5Ev
                           .group:0000000000000000 _ZN5boost13intrusive_ptrIN3pmt8pmt_baseEEC5EOS3_
                           .group:0000000000000000 _ZN5boost13intrusive_ptrIN3pmt8pmt_baseEEC5ERKS3_
                           .group:0000000000000000 _ZNSt10_Head_baseILm0ERKN5boost13intrusive_ptrIN3pmt8pmt_baseEEELb0EEC5ES6_
                           .group:0000000000000000 _ZNSt11_Tuple_implILm0EJRKN5boost13intrusive_ptrIN3pmt8pmt_baseEEEEEC5ES6_
                           .group:0000000000000000 _ZNSt5tupleIJRKN5boost13intrusive_ptrIN3pmt8pmt_baseEEEEEC5IvLb1EEES6_
                           .group:0000000000000000 _ZN5boost17bad_function_callD5Ev
                           .group:0000000000000000 _ZNSt6vectorIlSaIlEED5Ev
                           .group:0000000000000000 _ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEEC5ERKS3_
                           .group:0000000000000000 _ZN5boost10shared_ptrIKNS_16exception_detail10clone_baseEEC5ERKS4_
                           .group:0000000000000000 _ZN5boost16exception_detail10bad_alloc_C5Ev
                           .group:0000000000000000 _ZNSt9bad_allocC5ERKS_
                           .group:0000000000000000 _ZN5boost16exception_detail10bad_alloc_C5ERKS1_
                           .group:0000000000000000 _ZN5boost16exception_detail14bad_exception_C5Ev
                           .group:0000000000000000 _ZNSt13bad_exceptionC5ERKS_
                           .group:0000000000000000 _ZN5boost16exception_detail14bad_exception_C5ERKS1_
                           .group:0000000000000000 _ZNSt6vectorIiSaIiEEC5ERKS1_
GAS LISTING /tmp/ccsIN87E.s 			page 757


                           .group:0000000000000000 _ZN5boost10shared_ptrIN2gr11basic_blockEED5Ev
                           .group:0000000000000000 _ZN5boost10shared_ptrIN2gr5lfast7costas2EEC5INS2_12costas2_implEEEONS0_IT_EENS_6detail24sp_enable_if_convertibleIS7_S3_E4typeE
                           .group:0000000000000000 _ZNSt6vectorIN2gr5tag_tESaIS1_EEC5Ev
                           .group:0000000000000000 _ZNSt6vectorIN2gr5tag_tESaIS1_EED5Ev
                           .group:0000000000000000 _ZN9__gnu_cxx17__normal_iteratorIPKN2gr5tag_tESt6vectorIS2_SaIS2_EEEC5IPS2_EERKNS0_IT_NS_11__enable_ifIXsrSt10__are_sameISB_SA_E7__valueES7_E6__typeEEE
                           .group:0000000000000000 _ZNSt23_Rb_tree_const_iteratorISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS1_8functionIFvS5_EEEEEC5ERKSt17_Rb_tree_iteratorISA_E
                           .group:0000000000000000 _ZN5boost17bad_function_callC5ERKS0_
                           .group:0000000000000000 _ZN5boost16exception_detail19error_info_injectorINS_17bad_function_callEEC5ERKS3_
                           .group:0000000000000000 _ZNSt12_Vector_baseIlSaIlEE12_Vector_implD5Ev
                           .group:0000000000000000 _ZNSt12_Vector_baseIlSaIlEED5Ev
                           .group:0000000000000000 _ZN5boost16exception_detail10clone_baseC5Ev
                           .group:0000000000000000 _ZN5boost10shared_ptrIKNS_16exception_detail10clone_baseEEC5INS1_10clone_implINS1_10bad_alloc_EEEEEPT_
                           .group:0000000000000000 _ZN5boost10shared_ptrIKNS_16exception_detail10clone_baseEEC5INS1_10clone_implINS1_14bad_exception_EEEEEPT_
                           .group:0000000000000000 _ZNSaIiED5Ev
                           .group:0000000000000000 _ZNSt12_Vector_baseIiSaIiEE12_Vector_implD5Ev
                           .group:0000000000000000 _ZNSt12_Vector_baseIiSaIiEEC5EmRKS0_
                           .group:0000000000000000 _ZNSt12_Vector_baseIiSaIiEED5Ev
                           .group:0000000000000000 _ZNSt12_Vector_baseIN2gr5tag_tESaIS1_EE12_Vector_implD5Ev
                           .group:0000000000000000 _ZNSt12_Vector_baseIN2gr5tag_tESaIS1_EEC5Ev
                           .group:0000000000000000 _ZNSt12_Vector_baseIN2gr5tag_tESaIS1_EED5Ev
                           .group:0000000000000000 _ZN9__gnu_cxx17__normal_iteratorIPN2gr5tag_tESt6vectorIS2_SaIS2_EEEC5ERKS3_
                           .group:0000000000000000 _ZNSt17_Rb_tree_iteratorISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS1_8functionIFvS5_EEEEEC5EPSt18_Rb_tree_node_base
                           .group:0000000000000000 _ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC5IRS1_Lb1EEERKS1_OT_
                           .group:0000000000000000 _ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC5IRS1_S4_Lb1EEEOT_OT0_
                           .group:0000000000000000 _ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC5IRS1_Lb1EEEOT_RKS1_
                           .group:0000000000000000 _ZN5boost16exception_detail19error_info_injectorINS_17bad_function_callEED5Ev
                           .group:0000000000000000 _ZNSt17_Rb_tree_iteratorISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEESt5dequeIS5_SaIS5_EEEEC5EPSt18_Rb_tree_node_base
                           .group:0000000000000000 _ZNSaIlED5Ev
                           .group:0000000000000000 _ZNSaIiEC5ERKS_
                           .group:0000000000000000 _ZN9__gnu_cxx13new_allocatorIiED5Ev
                           .group:0000000000000000 _ZNSt12_Vector_baseIiSaIiEE12_Vector_implC5ERKS0_
                           .group:0000000000000000 _ZN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEC5ERKS2_
                           .group:0000000000000000 _ZN5boost10shared_ptrIN2gr5lfast12costas2_implEEC5INS1_11basic_blockEEERKNS0_IT_EEPS3_
                           .group:0000000000000000 _ZN5boost10shared_ptrIN2gr5lfast12costas2_implEEC5Ev
                           .group:0000000000000000 _ZNSt12_Vector_baseIN2gr5tag_tESaIS1_EE12_Vector_implC5Ev
                           .group:0000000000000000 _ZNSaIN2gr5tag_tEED5Ev
                           .group:0000000000000000 _ZN9__gnu_cxx17__normal_iteratorIPKN2gr5tag_tESt6vectorIS2_SaIS2_EEEC5ERKS4_
                           .group:0000000000000000 _ZNSt18_Rb_tree_node_baseC5Ev
                           .group:0000000000000000 _ZN9__gnu_cxx16__aligned_membufISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS2_8functionIFvS6_EEEEEC5Ev
                           .group:0000000000000000 _ZNSt13_Rb_tree_nodeISt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS1_8functionIFvS5_EEEEEC5Ev
                           .group:0000000000000000 _ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC5IRPSt13_Rb_tree_nodeIS_IKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS5_8functionIFvS9_EEEEERS1_Lb1EEEOT_OT0_
                           .group:0000000000000000 _ZN5boost16exception_detail19error_info_injectorINS_17bad_function_callEEC5ERKS2_
                           .group:0000000000000000 _ZN9__gnu_cxx13new_allocatorIlED5Ev
                           .group:0000000000000000 _ZN5boost6detail12shared_countC5INS_16exception_detail10clone_implINS3_10bad_alloc_EEEEEPT_
                           .group:0000000000000000 _ZN5boost6detail12shared_countC5INS_16exception_detail10clone_implINS3_14bad_exception_EEEEEPT_
                           .group:0000000000000000 _ZN9__gnu_cxx13new_allocatorIiEC5ERKS1_
                           .group:0000000000000000 _ZNSaIN2gr5tag_tEEC5Ev
                           .group:0000000000000000 _ZN9__gnu_cxx13new_allocatorIN2gr5tag_tEED5Ev
                           .group:0000000000000000 _ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEEC5EPS5_
                           .group:0000000000000000 _ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_14bad_exception_EEEEC5EPS5_
                           .group:0000000000000000 _ZN9__gnu_cxx13new_allocatorIN2gr5tag_tEEC5Ev
                           .group:0000000000000000 _ZN5boost8functionIFvNS_13intrusive_ptrIN3pmt8pmt_baseEEEEED5Ev
                           .group:0000000000000000 _ZNSt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS0_8functionIFvS4_EEEED5Ev
                           .group:0000000000000000 _ZNSt11_Tuple_implILm0EJRKN5boost13intrusive_ptrIN3pmt8pmt_baseEEEEEC5EOS7_
                           .group:0000000000000000 _ZNSt5tupleIJRKN5boost13intrusive_ptrIN3pmt8pmt_baseEEEEEC5EOS7_
                           .group:0000000000000000 _ZN5boost9function1IvNS_13intrusive_ptrIN3pmt8pmt_baseEEEED5Ev
                           .group:0000000000000000 _ZNSt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS0_8functionIFvS4_EEEEC5IJRS5_EJEEESt21piecewise_construct_tSt5tupleIJDpT_EESD_IJDpT0_EE
GAS LISTING /tmp/ccsIN87E.s 			page 758


                           .group:0000000000000000 _ZNSt4pairIKN5boost13intrusive_ptrIN3pmt8pmt_baseEEENS0_8functionIFvS4_EEEEC5IJRS5_EJLm0EEJEJEEERSt5tupleIJDpT_EERSC_IJDpT1_EESt12_Index_tupleIJXspT0_EEESL_IJXspT2_EEE
                           .group:0000000000000000 _ZN5boost8functionIFvNS_13intrusive_ptrIN3pmt8pmt_baseEEEEEC5Ev
                           .group:0000000000000000 _ZNSt14unary_functionIN5boost13intrusive_ptrIN3pmt8pmt_baseEEEvEC5Ev
                           .group:0000000000000000 _ZN5boost9function1IvNS_13intrusive_ptrIN3pmt8pmt_baseEEEEC5Ev
                           .group:0000000000000000 _ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_14bad_exception_EEEED5Ev
                           .group:0000000000000000 _ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEED5Ev

UNDEFINED SYMBOLS
_ZTVSt9exception
_ZTVSt13bad_exception
_ZTVSt9bad_alloc
_GLOBAL_OFFSET_TABLE_
_ZdlPvm
_Unwind_Resume
__gxx_personality_v0
_ZN3pmt3eqvERKN5boost13intrusive_ptrINS_8pmt_baseEEES5_
_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev
_ZNSt13runtime_errorD2Ev
_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5emptyEv
_ZNKSt13runtime_error4whatEv
_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEPKc
_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLEPKc
_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLERKS4_
_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv
__cxa_begin_catch
__cxa_end_catch
__cxa_call_unexpected
_ZNSt13runtime_errorC2EPKc
_ZN3pmt12dict_has_keyERKN5boost13intrusive_ptrINS_8pmt_baseEEES5_
_ZNSt9bad_allocD2Ev
_ZNSt13bad_exceptionD2Ev
_ZN2gr7sincosfEfPfS0_
_Znwm
_ZTVN2gr10sync_blockE
_ZN2gr5blockD2Ev
_ZN2gr12io_signature4makeEiii
_ZNSaIcEC1Ev
_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EPKcRKS3_
_ZN2gr10sync_blockC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN5boost10shared_ptrINS_12io_signatureEEESC_
_ZNSaIcED1Ev
_ZN2gr6blocks12control_loopC2Efff
_ZN2gr6blocks12control_loopD2Ev
_ZN3pmt7is_realEN5boost13intrusive_ptrINS_8pmt_baseEEE
_ZN3pmt9to_doubleEN5boost13intrusive_ptrINS_8pmt_baseEEE
powf
_ZN2gr5block11nitems_readEj
_ZN2gr6blocks12control_loop12advance_loopEf
_ZN2gr6blocks12control_loop10phase_wrapEv
_ZN2gr6blocks12control_loop15frequency_limitEv
sinf
cosf
_ZN3pmt21intrusive_ptr_releaseEPNS_8pmt_baseE
_ZN3pmt21intrusive_ptr_add_refEPNS_8pmt_baseE
__cxa_guard_acquire
__cxa_guard_release
__dso_handle
__cxa_atexit
GAS LISTING /tmp/ccsIN87E.s 			page 759


__cxa_guard_abort
_ZN8gnuradio6detail10sptr_magic18fetch_initial_sptrEPN2gr11basic_blockE
__cxa_rethrow
_ZNSt13runtime_errorC2ERKS_
__cxa_allocate_exception
__cxa_throw
__cxa_free_exception
_ZTIN2gr11basic_blockE
__dynamic_cast
__mulsc3
_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_
_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base
_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base
_ZdlPv
_ZSt17__throw_bad_allocv
memmove
_ZNKSt13bad_exception4whatEv
_ZNKSt9bad_alloc4whatEv
_ZN2gr12msg_accepter4postEN5boost13intrusive_ptrIN3pmt8pmt_baseEEES5_
_ZN2gr5block22set_processor_affinityERKSt6vectorIiSaIiEE
_ZN2gr5block24unset_processor_affinityEv
_ZN2gr10sync_block8forecastEiRSt6vectorIiSaIiEE
_ZN2gr10sync_block12general_workEiRSt6vectorIiSaIiEERS1_IPKvSaIS6_EERS1_IPvSaISA_EE
_ZN2gr5block5startEv
_ZN2gr5block4stopEv
_ZN2gr10sync_block28fixed_rate_ninput_to_noutputEi
_ZN2gr10sync_block28fixed_rate_noutput_to_ninputEi
_ZN2gr6blocks12control_loop18set_loop_bandwidthEf
__cxa_pure_virtual
_ZTVN10__cxxabiv120__si_class_type_infoE
_ZTVN10__cxxabiv121__vmi_class_type_infoE
_ZTIN2gr10sync_blockE
_ZTIN2gr6blocks12control_loopE
_ZTISt13bad_exception
_ZTISt9bad_alloc
_ZTISt13runtime_error
_ZTVN10__cxxabiv117__class_type_infoE
_ZN5boost6system16generic_categoryEv
_ZN5boost6system15system_categoryEv
_ZNSt8ios_base4InitC1Ev
_ZNSt8ios_base4InitD1Ev
